{
  "<&bool as ops::bit::BitAnd<bool>>::bitand": true,
  "<&bool as ops::bit::BitAnd>::bitand": true,
  "<&bool as ops::bit::BitOr<bool>>::bitor": true,
  "<&bool as ops::bit::BitOr>::bitor": true,
  "<&bool as ops::bit::BitXor<bool>>::bitxor": true,
  "<&bool as ops::bit::BitXor>::bitxor": true,
  "<&bool as ops::bit::Not>::not": true,
  "<&bstr::ByteStr as default::Default>::default": true,
  "<&f128 as ops::arith::Add<f128>>::add": true,
  "<&f128 as ops::arith::Add>::add": true,
  "<&f128 as ops::arith::Div<f128>>::div": true,
  "<&f128 as ops::arith::Div>::div": true,
  "<&f128 as ops::arith::Mul<f128>>::mul": true,
  "<&f128 as ops::arith::Mul>::mul": true,
  "<&f128 as ops::arith::Neg>::neg": true,
  "<&f128 as ops::arith::Rem<f128>>::rem": true,
  "<&f128 as ops::arith::Rem>::rem": true,
  "<&f128 as ops::arith::Sub<f128>>::sub": true,
  "<&f128 as ops::arith::Sub>::sub": true,
  "<&f16 as ops::arith::Add<f16>>::add": true,
  "<&f16 as ops::arith::Add>::add": true,
  "<&f16 as ops::arith::Div<f16>>::div": true,
  "<&f16 as ops::arith::Div>::div": true,
  "<&f16 as ops::arith::Mul<f16>>::mul": true,
  "<&f16 as ops::arith::Mul>::mul": true,
  "<&f16 as ops::arith::Neg>::neg": true,
  "<&f16 as ops::arith::Rem<f16>>::rem": true,
  "<&f16 as ops::arith::Rem>::rem": true,
  "<&f16 as ops::arith::Sub<f16>>::sub": true,
  "<&f16 as ops::arith::Sub>::sub": true,
  "<&f32 as ops::arith::Add<f32>>::add": true,
  "<&f32 as ops::arith::Add>::add": true,
  "<&f32 as ops::arith::Div<f32>>::div": true,
  "<&f32 as ops::arith::Div>::div": true,
  "<&f32 as ops::arith::Mul<f32>>::mul": true,
  "<&f32 as ops::arith::Mul>::mul": true,
  "<&f32 as ops::arith::Neg>::neg": true,
  "<&f32 as ops::arith::Rem<f32>>::rem": true,
  "<&f32 as ops::arith::Rem>::rem": true,
  "<&f32 as ops::arith::Sub<f32>>::sub": true,
  "<&f32 as ops::arith::Sub>::sub": true,
  "<&f64 as ops::arith::Add<f64>>::add": true,
  "<&f64 as ops::arith::Add>::add": true,
  "<&f64 as ops::arith::Div<f64>>::div": true,
  "<&f64 as ops::arith::Div>::div": true,
  "<&f64 as ops::arith::Mul<f64>>::mul": true,
  "<&f64 as ops::arith::Mul>::mul": true,
  "<&f64 as ops::arith::Neg>::neg": true,
  "<&f64 as ops::arith::Rem<f64>>::rem": true,
  "<&f64 as ops::arith::Rem>::rem": true,
  "<&f64 as ops::arith::Sub<f64>>::sub": true,
  "<&f64 as ops::arith::Sub>::sub": true,
  "<&ffi::c_str::CStr as default::Default>::default": true,
  "<&ffi::os_str::OsStr as core::default::Default>::default": true,
  "<&fs::File as io::Read>::is_read_vectored": true,
  "<&fs::File as io::Seek>::seek": true,
  "<&fs::File as io::Seek>::stream_len": true,
  "<&fs::File as io::Seek>::stream_position": true,
  "<&fs::File as io::Write>::flush": true,
  "<&fs::File as io::Write>::is_write_vectored": true,
  "<&fs::File as sys::pal::unix::kernel_copy::CopyRead>::properties": true,
  "<&fs::File as sys::pal::unix::kernel_copy::CopyWrite>::properties": true,
  "<&i128 as ops::arith::Add<i128>>::add": true,
  "<&i128 as ops::arith::Add>::add": true,
  "<&i128 as ops::arith::Div<i128>>::div": true,
  "<&i128 as ops::arith::Div>::div": true,
  "<&i128 as ops::arith::Mul<i128>>::mul": true,
  "<&i128 as ops::arith::Mul>::mul": true,
  "<&i128 as ops::arith::Neg>::neg": true,
  "<&i128 as ops::arith::Rem<i128>>::rem": true,
  "<&i128 as ops::arith::Rem>::rem": true,
  "<&i128 as ops::arith::Sub<i128>>::sub": true,
  "<&i128 as ops::arith::Sub>::sub": true,
  "<&i128 as ops::bit::BitAnd<i128>>::bitand": true,
  "<&i128 as ops::bit::BitAnd>::bitand": true,
  "<&i128 as ops::bit::BitOr<i128>>::bitor": true,
  "<&i128 as ops::bit::BitOr>::bitor": true,
  "<&i128 as ops::bit::BitXor<i128>>::bitxor": true,
  "<&i128 as ops::bit::BitXor>::bitxor": true,
  "<&i128 as ops::bit::Not>::not": true,
  "<&i128 as ops::bit::Shl<&i16>>::shl": true,
  "<&i128 as ops::bit::Shl<&i32>>::shl": true,
  "<&i128 as ops::bit::Shl<&i64>>::shl": true,
  "<&i128 as ops::bit::Shl<&i8>>::shl": true,
  "<&i128 as ops::bit::Shl<&isize>>::shl": true,
  "<&i128 as ops::bit::Shl<&u128>>::shl": true,
  "<&i128 as ops::bit::Shl<&u16>>::shl": true,
  "<&i128 as ops::bit::Shl<&u32>>::shl": true,
  "<&i128 as ops::bit::Shl<&u64>>::shl": true,
  "<&i128 as ops::bit::Shl<&u8>>::shl": true,
  "<&i128 as ops::bit::Shl<&usize>>::shl": true,
  "<&i128 as ops::bit::Shl<i128>>::shl": true,
  "<&i128 as ops::bit::Shl<i16>>::shl": true,
  "<&i128 as ops::bit::Shl<i32>>::shl": true,
  "<&i128 as ops::bit::Shl<i64>>::shl": true,
  "<&i128 as ops::bit::Shl<i8>>::shl": true,
  "<&i128 as ops::bit::Shl<isize>>::shl": true,
  "<&i128 as ops::bit::Shl<u128>>::shl": true,
  "<&i128 as ops::bit::Shl<u16>>::shl": true,
  "<&i128 as ops::bit::Shl<u32>>::shl": true,
  "<&i128 as ops::bit::Shl<u64>>::shl": true,
  "<&i128 as ops::bit::Shl<u8>>::shl": true,
  "<&i128 as ops::bit::Shl<usize>>::shl": true,
  "<&i128 as ops::bit::Shl>::shl": true,
  "<&i128 as ops::bit::Shr<&i16>>::shr": true,
  "<&i128 as ops::bit::Shr<&i32>>::shr": true,
  "<&i128 as ops::bit::Shr<&i64>>::shr": true,
  "<&i128 as ops::bit::Shr<&i8>>::shr": true,
  "<&i128 as ops::bit::Shr<&isize>>::shr": true,
  "<&i128 as ops::bit::Shr<&u128>>::shr": true,
  "<&i128 as ops::bit::Shr<&u16>>::shr": true,
  "<&i128 as ops::bit::Shr<&u32>>::shr": true,
  "<&i128 as ops::bit::Shr<&u64>>::shr": true,
  "<&i128 as ops::bit::Shr<&u8>>::shr": true,
  "<&i128 as ops::bit::Shr<&usize>>::shr": true,
  "<&i128 as ops::bit::Shr<i128>>::shr": true,
  "<&i128 as ops::bit::Shr<i16>>::shr": true,
  "<&i128 as ops::bit::Shr<i32>>::shr": true,
  "<&i128 as ops::bit::Shr<i64>>::shr": true,
  "<&i128 as ops::bit::Shr<i8>>::shr": true,
  "<&i128 as ops::bit::Shr<isize>>::shr": true,
  "<&i128 as ops::bit::Shr<u128>>::shr": true,
  "<&i128 as ops::bit::Shr<u16>>::shr": true,
  "<&i128 as ops::bit::Shr<u32>>::shr": true,
  "<&i128 as ops::bit::Shr<u64>>::shr": true,
  "<&i128 as ops::bit::Shr<u8>>::shr": true,
  "<&i128 as ops::bit::Shr<usize>>::shr": true,
  "<&i128 as ops::bit::Shr>::shr": true,
  "<&i16 as ops::arith::Add<i16>>::add": true,
  "<&i16 as ops::arith::Add>::add": true,
  "<&i16 as ops::arith::Div<i16>>::div": true,
  "<&i16 as ops::arith::Div>::div": true,
  "<&i16 as ops::arith::Mul<i16>>::mul": true,
  "<&i16 as ops::arith::Mul>::mul": true,
  "<&i16 as ops::arith::Neg>::neg": true,
  "<&i16 as ops::arith::Rem<i16>>::rem": true,
  "<&i16 as ops::arith::Rem>::rem": true,
  "<&i16 as ops::arith::Sub<i16>>::sub": true,
  "<&i16 as ops::arith::Sub>::sub": true,
  "<&i16 as ops::bit::BitAnd<i16>>::bitand": true,
  "<&i16 as ops::bit::BitAnd>::bitand": true,
  "<&i16 as ops::bit::BitOr<i16>>::bitor": true,
  "<&i16 as ops::bit::BitOr>::bitor": true,
  "<&i16 as ops::bit::BitXor<i16>>::bitxor": true,
  "<&i16 as ops::bit::BitXor>::bitxor": true,
  "<&i16 as ops::bit::Not>::not": true,
  "<&i16 as ops::bit::Shl<&i128>>::shl": true,
  "<&i16 as ops::bit::Shl<&i32>>::shl": true,
  "<&i16 as ops::bit::Shl<&i64>>::shl": true,
  "<&i16 as ops::bit::Shl<&i8>>::shl": true,
  "<&i16 as ops::bit::Shl<&isize>>::shl": true,
  "<&i16 as ops::bit::Shl<&u128>>::shl": true,
  "<&i16 as ops::bit::Shl<&u16>>::shl": true,
  "<&i16 as ops::bit::Shl<&u32>>::shl": true,
  "<&i16 as ops::bit::Shl<&u64>>::shl": true,
  "<&i16 as ops::bit::Shl<&u8>>::shl": true,
  "<&i16 as ops::bit::Shl<&usize>>::shl": true,
  "<&i16 as ops::bit::Shl<i128>>::shl": true,
  "<&i16 as ops::bit::Shl<i16>>::shl": true,
  "<&i16 as ops::bit::Shl<i32>>::shl": true,
  "<&i16 as ops::bit::Shl<i64>>::shl": true,
  "<&i16 as ops::bit::Shl<i8>>::shl": true,
  "<&i16 as ops::bit::Shl<isize>>::shl": true,
  "<&i16 as ops::bit::Shl<u128>>::shl": true,
  "<&i16 as ops::bit::Shl<u16>>::shl": true,
  "<&i16 as ops::bit::Shl<u32>>::shl": true,
  "<&i16 as ops::bit::Shl<u64>>::shl": true,
  "<&i16 as ops::bit::Shl<u8>>::shl": true,
  "<&i16 as ops::bit::Shl<usize>>::shl": true,
  "<&i16 as ops::bit::Shl>::shl": true,
  "<&i16 as ops::bit::Shr<&i128>>::shr": true,
  "<&i16 as ops::bit::Shr<&i32>>::shr": true,
  "<&i16 as ops::bit::Shr<&i64>>::shr": true,
  "<&i16 as ops::bit::Shr<&i8>>::shr": true,
  "<&i16 as ops::bit::Shr<&isize>>::shr": true,
  "<&i16 as ops::bit::Shr<&u128>>::shr": true,
  "<&i16 as ops::bit::Shr<&u16>>::shr": true,
  "<&i16 as ops::bit::Shr<&u32>>::shr": true,
  "<&i16 as ops::bit::Shr<&u64>>::shr": true,
  "<&i16 as ops::bit::Shr<&u8>>::shr": true,
  "<&i16 as ops::bit::Shr<&usize>>::shr": true,
  "<&i16 as ops::bit::Shr<i128>>::shr": true,
  "<&i16 as ops::bit::Shr<i16>>::shr": true,
  "<&i16 as ops::bit::Shr<i32>>::shr": true,
  "<&i16 as ops::bit::Shr<i64>>::shr": true,
  "<&i16 as ops::bit::Shr<i8>>::shr": true,
  "<&i16 as ops::bit::Shr<isize>>::shr": true,
  "<&i16 as ops::bit::Shr<u128>>::shr": true,
  "<&i16 as ops::bit::Shr<u16>>::shr": true,
  "<&i16 as ops::bit::Shr<u32>>::shr": true,
  "<&i16 as ops::bit::Shr<u64>>::shr": true,
  "<&i16 as ops::bit::Shr<u8>>::shr": true,
  "<&i16 as ops::bit::Shr<usize>>::shr": true,
  "<&i16 as ops::bit::Shr>::shr": true,
  "<&i32 as ops::arith::Add<i32>>::add": true,
  "<&i32 as ops::arith::Add>::add": true,
  "<&i32 as ops::arith::Div<i32>>::div": true,
  "<&i32 as ops::arith::Div>::div": true,
  "<&i32 as ops::arith::Mul<i32>>::mul": true,
  "<&i32 as ops::arith::Mul>::mul": true,
  "<&i32 as ops::arith::Neg>::neg": true,
  "<&i32 as ops::arith::Rem<i32>>::rem": true,
  "<&i32 as ops::arith::Rem>::rem": true,
  "<&i32 as ops::arith::Sub<i32>>::sub": true,
  "<&i32 as ops::arith::Sub>::sub": true,
  "<&i32 as ops::bit::BitAnd<i32>>::bitand": true,
  "<&i32 as ops::bit::BitAnd>::bitand": true,
  "<&i32 as ops::bit::BitOr<i32>>::bitor": true,
  "<&i32 as ops::bit::BitOr>::bitor": true,
  "<&i32 as ops::bit::BitXor<i32>>::bitxor": true,
  "<&i32 as ops::bit::BitXor>::bitxor": true,
  "<&i32 as ops::bit::Not>::not": true,
  "<&i32 as ops::bit::Shl<&i128>>::shl": true,
  "<&i32 as ops::bit::Shl<&i16>>::shl": true,
  "<&i32 as ops::bit::Shl<&i64>>::shl": true,
  "<&i32 as ops::bit::Shl<&i8>>::shl": true,
  "<&i32 as ops::bit::Shl<&isize>>::shl": true,
  "<&i32 as ops::bit::Shl<&u128>>::shl": true,
  "<&i32 as ops::bit::Shl<&u16>>::shl": true,
  "<&i32 as ops::bit::Shl<&u32>>::shl": true,
  "<&i32 as ops::bit::Shl<&u64>>::shl": true,
  "<&i32 as ops::bit::Shl<&u8>>::shl": true,
  "<&i32 as ops::bit::Shl<&usize>>::shl": true,
  "<&i32 as ops::bit::Shl<i128>>::shl": true,
  "<&i32 as ops::bit::Shl<i16>>::shl": true,
  "<&i32 as ops::bit::Shl<i32>>::shl": true,
  "<&i32 as ops::bit::Shl<i64>>::shl": true,
  "<&i32 as ops::bit::Shl<i8>>::shl": true,
  "<&i32 as ops::bit::Shl<isize>>::shl": true,
  "<&i32 as ops::bit::Shl<u128>>::shl": true,
  "<&i32 as ops::bit::Shl<u16>>::shl": true,
  "<&i32 as ops::bit::Shl<u32>>::shl": true,
  "<&i32 as ops::bit::Shl<u64>>::shl": true,
  "<&i32 as ops::bit::Shl<u8>>::shl": true,
  "<&i32 as ops::bit::Shl<usize>>::shl": true,
  "<&i32 as ops::bit::Shl>::shl": true,
  "<&i32 as ops::bit::Shr<&i128>>::shr": true,
  "<&i32 as ops::bit::Shr<&i16>>::shr": true,
  "<&i32 as ops::bit::Shr<&i64>>::shr": true,
  "<&i32 as ops::bit::Shr<&i8>>::shr": true,
  "<&i32 as ops::bit::Shr<&isize>>::shr": true,
  "<&i32 as ops::bit::Shr<&u128>>::shr": true,
  "<&i32 as ops::bit::Shr<&u16>>::shr": true,
  "<&i32 as ops::bit::Shr<&u32>>::shr": true,
  "<&i32 as ops::bit::Shr<&u64>>::shr": true,
  "<&i32 as ops::bit::Shr<&u8>>::shr": true,
  "<&i32 as ops::bit::Shr<&usize>>::shr": true,
  "<&i32 as ops::bit::Shr<i128>>::shr": true,
  "<&i32 as ops::bit::Shr<i16>>::shr": true,
  "<&i32 as ops::bit::Shr<i32>>::shr": true,
  "<&i32 as ops::bit::Shr<i64>>::shr": true,
  "<&i32 as ops::bit::Shr<i8>>::shr": true,
  "<&i32 as ops::bit::Shr<isize>>::shr": true,
  "<&i32 as ops::bit::Shr<u128>>::shr": true,
  "<&i32 as ops::bit::Shr<u16>>::shr": true,
  "<&i32 as ops::bit::Shr<u32>>::shr": true,
  "<&i32 as ops::bit::Shr<u64>>::shr": true,
  "<&i32 as ops::bit::Shr<u8>>::shr": true,
  "<&i32 as ops::bit::Shr<usize>>::shr": true,
  "<&i32 as ops::bit::Shr>::shr": true,
  "<&i64 as ops::arith::Add<i64>>::add": true,
  "<&i64 as ops::arith::Add>::add": true,
  "<&i64 as ops::arith::Div<i64>>::div": true,
  "<&i64 as ops::arith::Div>::div": true,
  "<&i64 as ops::arith::Mul<i64>>::mul": true,
  "<&i64 as ops::arith::Mul>::mul": true,
  "<&i64 as ops::arith::Neg>::neg": true,
  "<&i64 as ops::arith::Rem<i64>>::rem": true,
  "<&i64 as ops::arith::Rem>::rem": true,
  "<&i64 as ops::arith::Sub<i64>>::sub": true,
  "<&i64 as ops::arith::Sub>::sub": true,
  "<&i64 as ops::bit::BitAnd<i64>>::bitand": true,
  "<&i64 as ops::bit::BitAnd>::bitand": true,
  "<&i64 as ops::bit::BitOr<i64>>::bitor": true,
  "<&i64 as ops::bit::BitOr>::bitor": true,
  "<&i64 as ops::bit::BitXor<i64>>::bitxor": true,
  "<&i64 as ops::bit::BitXor>::bitxor": true,
  "<&i64 as ops::bit::Not>::not": true,
  "<&i64 as ops::bit::Shl<&i128>>::shl": true,
  "<&i64 as ops::bit::Shl<&i16>>::shl": true,
  "<&i64 as ops::bit::Shl<&i32>>::shl": true,
  "<&i64 as ops::bit::Shl<&i8>>::shl": true,
  "<&i64 as ops::bit::Shl<&isize>>::shl": true,
  "<&i64 as ops::bit::Shl<&u128>>::shl": true,
  "<&i64 as ops::bit::Shl<&u16>>::shl": true,
  "<&i64 as ops::bit::Shl<&u32>>::shl": true,
  "<&i64 as ops::bit::Shl<&u64>>::shl": true,
  "<&i64 as ops::bit::Shl<&u8>>::shl": true,
  "<&i64 as ops::bit::Shl<&usize>>::shl": true,
  "<&i64 as ops::bit::Shl<i128>>::shl": true,
  "<&i64 as ops::bit::Shl<i16>>::shl": true,
  "<&i64 as ops::bit::Shl<i32>>::shl": true,
  "<&i64 as ops::bit::Shl<i64>>::shl": true,
  "<&i64 as ops::bit::Shl<i8>>::shl": true,
  "<&i64 as ops::bit::Shl<isize>>::shl": true,
  "<&i64 as ops::bit::Shl<u128>>::shl": true,
  "<&i64 as ops::bit::Shl<u16>>::shl": true,
  "<&i64 as ops::bit::Shl<u32>>::shl": true,
  "<&i64 as ops::bit::Shl<u64>>::shl": true,
  "<&i64 as ops::bit::Shl<u8>>::shl": true,
  "<&i64 as ops::bit::Shl<usize>>::shl": true,
  "<&i64 as ops::bit::Shl>::shl": true,
  "<&i64 as ops::bit::Shr<&i128>>::shr": true,
  "<&i64 as ops::bit::Shr<&i16>>::shr": true,
  "<&i64 as ops::bit::Shr<&i32>>::shr": true,
  "<&i64 as ops::bit::Shr<&i8>>::shr": true,
  "<&i64 as ops::bit::Shr<&isize>>::shr": true,
  "<&i64 as ops::bit::Shr<&u128>>::shr": true,
  "<&i64 as ops::bit::Shr<&u16>>::shr": true,
  "<&i64 as ops::bit::Shr<&u32>>::shr": true,
  "<&i64 as ops::bit::Shr<&u64>>::shr": true,
  "<&i64 as ops::bit::Shr<&u8>>::shr": true,
  "<&i64 as ops::bit::Shr<&usize>>::shr": true,
  "<&i64 as ops::bit::Shr<i128>>::shr": true,
  "<&i64 as ops::bit::Shr<i16>>::shr": true,
  "<&i64 as ops::bit::Shr<i32>>::shr": true,
  "<&i64 as ops::bit::Shr<i64>>::shr": true,
  "<&i64 as ops::bit::Shr<i8>>::shr": true,
  "<&i64 as ops::bit::Shr<isize>>::shr": true,
  "<&i64 as ops::bit::Shr<u128>>::shr": true,
  "<&i64 as ops::bit::Shr<u16>>::shr": true,
  "<&i64 as ops::bit::Shr<u32>>::shr": true,
  "<&i64 as ops::bit::Shr<u64>>::shr": true,
  "<&i64 as ops::bit::Shr<u8>>::shr": true,
  "<&i64 as ops::bit::Shr<usize>>::shr": true,
  "<&i64 as ops::bit::Shr>::shr": true,
  "<&i8 as ops::arith::Add<i8>>::add": true,
  "<&i8 as ops::arith::Add>::add": true,
  "<&i8 as ops::arith::Div<i8>>::div": true,
  "<&i8 as ops::arith::Div>::div": true,
  "<&i8 as ops::arith::Mul<i8>>::mul": true,
  "<&i8 as ops::arith::Mul>::mul": true,
  "<&i8 as ops::arith::Neg>::neg": true,
  "<&i8 as ops::arith::Rem<i8>>::rem": true,
  "<&i8 as ops::arith::Rem>::rem": true,
  "<&i8 as ops::arith::Sub<i8>>::sub": true,
  "<&i8 as ops::arith::Sub>::sub": true,
  "<&i8 as ops::bit::BitAnd<i8>>::bitand": true,
  "<&i8 as ops::bit::BitAnd>::bitand": true,
  "<&i8 as ops::bit::BitOr<i8>>::bitor": true,
  "<&i8 as ops::bit::BitOr>::bitor": true,
  "<&i8 as ops::bit::BitXor<i8>>::bitxor": true,
  "<&i8 as ops::bit::BitXor>::bitxor": true,
  "<&i8 as ops::bit::Not>::not": true,
  "<&i8 as ops::bit::Shl<&i128>>::shl": true,
  "<&i8 as ops::bit::Shl<&i16>>::shl": true,
  "<&i8 as ops::bit::Shl<&i32>>::shl": true,
  "<&i8 as ops::bit::Shl<&i64>>::shl": true,
  "<&i8 as ops::bit::Shl<&isize>>::shl": true,
  "<&i8 as ops::bit::Shl<&u128>>::shl": true,
  "<&i8 as ops::bit::Shl<&u16>>::shl": true,
  "<&i8 as ops::bit::Shl<&u32>>::shl": true,
  "<&i8 as ops::bit::Shl<&u64>>::shl": true,
  "<&i8 as ops::bit::Shl<&u8>>::shl": true,
  "<&i8 as ops::bit::Shl<&usize>>::shl": true,
  "<&i8 as ops::bit::Shl<i128>>::shl": true,
  "<&i8 as ops::bit::Shl<i16>>::shl": true,
  "<&i8 as ops::bit::Shl<i32>>::shl": true,
  "<&i8 as ops::bit::Shl<i64>>::shl": true,
  "<&i8 as ops::bit::Shl<i8>>::shl": true,
  "<&i8 as ops::bit::Shl<isize>>::shl": true,
  "<&i8 as ops::bit::Shl<u128>>::shl": true,
  "<&i8 as ops::bit::Shl<u16>>::shl": true,
  "<&i8 as ops::bit::Shl<u32>>::shl": true,
  "<&i8 as ops::bit::Shl<u64>>::shl": true,
  "<&i8 as ops::bit::Shl<u8>>::shl": true,
  "<&i8 as ops::bit::Shl<usize>>::shl": true,
  "<&i8 as ops::bit::Shl>::shl": true,
  "<&i8 as ops::bit::Shr<&i128>>::shr": true,
  "<&i8 as ops::bit::Shr<&i16>>::shr": true,
  "<&i8 as ops::bit::Shr<&i32>>::shr": true,
  "<&i8 as ops::bit::Shr<&i64>>::shr": true,
  "<&i8 as ops::bit::Shr<&isize>>::shr": true,
  "<&i8 as ops::bit::Shr<&u128>>::shr": true,
  "<&i8 as ops::bit::Shr<&u16>>::shr": true,
  "<&i8 as ops::bit::Shr<&u32>>::shr": true,
  "<&i8 as ops::bit::Shr<&u64>>::shr": true,
  "<&i8 as ops::bit::Shr<&u8>>::shr": true,
  "<&i8 as ops::bit::Shr<&usize>>::shr": true,
  "<&i8 as ops::bit::Shr<i128>>::shr": true,
  "<&i8 as ops::bit::Shr<i16>>::shr": true,
  "<&i8 as ops::bit::Shr<i32>>::shr": true,
  "<&i8 as ops::bit::Shr<i64>>::shr": true,
  "<&i8 as ops::bit::Shr<i8>>::shr": true,
  "<&i8 as ops::bit::Shr<isize>>::shr": true,
  "<&i8 as ops::bit::Shr<u128>>::shr": true,
  "<&i8 as ops::bit::Shr<u16>>::shr": true,
  "<&i8 as ops::bit::Shr<u32>>::shr": true,
  "<&i8 as ops::bit::Shr<u64>>::shr": true,
  "<&i8 as ops::bit::Shr<u8>>::shr": true,
  "<&i8 as ops::bit::Shr<usize>>::shr": true,
  "<&i8 as ops::bit::Shr>::shr": true,
  "<&io::pipe::PipeReader as io::Read>::is_read_vectored": true,
  "<&io::pipe::PipeReader as sys::pal::unix::kernel_copy::CopyRead>::properties": true,
  "<&io::pipe::PipeWriter as io::Write>::flush": true,
  "<&io::pipe::PipeWriter as io::Write>::is_write_vectored": true,
  "<&io::pipe::PipeWriter as sys::pal::unix::kernel_copy::CopyWrite>::properties": true,
  "<&io::stdio::Stderr as io::Write>::flush": true,
  "<&io::stdio::Stderr as io::Write>::is_write_vectored": true,
  "<&io::util::Empty as io::Write>::flush": true,
  "<&io::util::Empty as io::Write>::is_write_vectored": true,
  "<&io::util::Sink as io::Write>::flush": true,
  "<&io::util::Sink as io::Write>::is_write_vectored": true,
  "<&isize as ops::arith::Add<isize>>::add": true,
  "<&isize as ops::arith::Add>::add": true,
  "<&isize as ops::arith::Div<isize>>::div": true,
  "<&isize as ops::arith::Div>::div": true,
  "<&isize as ops::arith::Mul<isize>>::mul": true,
  "<&isize as ops::arith::Mul>::mul": true,
  "<&isize as ops::arith::Neg>::neg": true,
  "<&isize as ops::arith::Rem<isize>>::rem": true,
  "<&isize as ops::arith::Rem>::rem": true,
  "<&isize as ops::arith::Sub<isize>>::sub": true,
  "<&isize as ops::arith::Sub>::sub": true,
  "<&isize as ops::bit::BitAnd<isize>>::bitand": true,
  "<&isize as ops::bit::BitAnd>::bitand": true,
  "<&isize as ops::bit::BitOr<isize>>::bitor": true,
  "<&isize as ops::bit::BitOr>::bitor": true,
  "<&isize as ops::bit::BitXor<isize>>::bitxor": true,
  "<&isize as ops::bit::BitXor>::bitxor": true,
  "<&isize as ops::bit::Not>::not": true,
  "<&isize as ops::bit::Shl<&i128>>::shl": true,
  "<&isize as ops::bit::Shl<&i16>>::shl": true,
  "<&isize as ops::bit::Shl<&i32>>::shl": true,
  "<&isize as ops::bit::Shl<&i64>>::shl": true,
  "<&isize as ops::bit::Shl<&i8>>::shl": true,
  "<&isize as ops::bit::Shl<&u128>>::shl": true,
  "<&isize as ops::bit::Shl<&u16>>::shl": true,
  "<&isize as ops::bit::Shl<&u32>>::shl": true,
  "<&isize as ops::bit::Shl<&u64>>::shl": true,
  "<&isize as ops::bit::Shl<&u8>>::shl": true,
  "<&isize as ops::bit::Shl<&usize>>::shl": true,
  "<&isize as ops::bit::Shl<i128>>::shl": true,
  "<&isize as ops::bit::Shl<i16>>::shl": true,
  "<&isize as ops::bit::Shl<i32>>::shl": true,
  "<&isize as ops::bit::Shl<i64>>::shl": true,
  "<&isize as ops::bit::Shl<i8>>::shl": true,
  "<&isize as ops::bit::Shl<isize>>::shl": true,
  "<&isize as ops::bit::Shl<u128>>::shl": true,
  "<&isize as ops::bit::Shl<u16>>::shl": true,
  "<&isize as ops::bit::Shl<u32>>::shl": true,
  "<&isize as ops::bit::Shl<u64>>::shl": true,
  "<&isize as ops::bit::Shl<u8>>::shl": true,
  "<&isize as ops::bit::Shl<usize>>::shl": true,
  "<&isize as ops::bit::Shl>::shl": true,
  "<&isize as ops::bit::Shr<&i128>>::shr": true,
  "<&isize as ops::bit::Shr<&i16>>::shr": true,
  "<&isize as ops::bit::Shr<&i32>>::shr": true,
  "<&isize as ops::bit::Shr<&i64>>::shr": true,
  "<&isize as ops::bit::Shr<&i8>>::shr": true,
  "<&isize as ops::bit::Shr<&u128>>::shr": true,
  "<&isize as ops::bit::Shr<&u16>>::shr": true,
  "<&isize as ops::bit::Shr<&u32>>::shr": true,
  "<&isize as ops::bit::Shr<&u64>>::shr": true,
  "<&isize as ops::bit::Shr<&u8>>::shr": true,
  "<&isize as ops::bit::Shr<&usize>>::shr": true,
  "<&isize as ops::bit::Shr<i128>>::shr": true,
  "<&isize as ops::bit::Shr<i16>>::shr": true,
  "<&isize as ops::bit::Shr<i32>>::shr": true,
  "<&isize as ops::bit::Shr<i64>>::shr": true,
  "<&isize as ops::bit::Shr<i8>>::shr": true,
  "<&isize as ops::bit::Shr<isize>>::shr": true,
  "<&isize as ops::bit::Shr<u128>>::shr": true,
  "<&isize as ops::bit::Shr<u16>>::shr": true,
  "<&isize as ops::bit::Shr<u32>>::shr": true,
  "<&isize as ops::bit::Shr<u64>>::shr": true,
  "<&isize as ops::bit::Shr<u8>>::shr": true,
  "<&isize as ops::bit::Shr<usize>>::shr": true,
  "<&isize as ops::bit::Shr>::shr": true,
  "<&mut bstr::ByteStr as default::Default>::default": true,
  "<&net::ip_addr::Ipv4Addr as ops::bit::BitAnd<net::ip_addr::Ipv4Addr>>::bitand": true,
  "<&net::ip_addr::Ipv4Addr as ops::bit::BitAnd>::bitand": true,
  "<&net::ip_addr::Ipv4Addr as ops::bit::BitOr<net::ip_addr::Ipv4Addr>>::bitor": true,
  "<&net::ip_addr::Ipv4Addr as ops::bit::BitOr>::bitor": true,
  "<&net::ip_addr::Ipv4Addr as ops::bit::Not>::not": true,
  "<&net::ip_addr::Ipv6Addr as ops::bit::BitAnd<net::ip_addr::Ipv6Addr>>::bitand": true,
  "<&net::ip_addr::Ipv6Addr as ops::bit::BitAnd>::bitand": true,
  "<&net::ip_addr::Ipv6Addr as ops::bit::BitOr<net::ip_addr::Ipv6Addr>>::bitor": true,
  "<&net::ip_addr::Ipv6Addr as ops::bit::BitOr>::bitor": true,
  "<&net::ip_addr::Ipv6Addr as ops::bit::Not>::not": true,
  "<&net::tcp::TcpStream as io::Read>::is_read_vectored": true,
  "<&net::tcp::TcpStream as io::Write>::flush": true,
  "<&net::tcp::TcpStream as io::Write>::is_write_vectored": true,
  "<&net::tcp::TcpStream as sys::pal::unix::kernel_copy::CopyRead>::properties": true,
  "<&net::tcp::TcpStream as sys::pal::unix::kernel_copy::CopyWrite>::properties": true,
  "<&num::nonzero::NonZero<i128> as ops::arith::Neg>::neg": true,
  "<&num::nonzero::NonZero<i16> as ops::arith::Neg>::neg": true,
  "<&num::nonzero::NonZero<i32> as ops::arith::Neg>::neg": true,
  "<&num::nonzero::NonZero<i64> as ops::arith::Neg>::neg": true,
  "<&num::nonzero::NonZero<i8> as ops::arith::Neg>::neg": true,
  "<&num::nonzero::NonZero<isize> as ops::arith::Neg>::neg": true,
  "<&num::saturating::Saturating<i128> as ops::arith::Add<num::saturating::Saturating<i128>>>::add": true,
  "<&num::saturating::Saturating<i128> as ops::arith::Add>::add": true,
  "<&num::saturating::Saturating<i128> as ops::arith::Div<num::saturating::Saturating<i128>>>::div": true,
  "<&num::saturating::Saturating<i128> as ops::arith::Div>::div": true,
  "<&num::saturating::Saturating<i128> as ops::arith::Mul<num::saturating::Saturating<i128>>>::mul": true,
  "<&num::saturating::Saturating<i128> as ops::arith::Mul>::mul": true,
  "<&num::saturating::Saturating<i128> as ops::arith::Neg>::neg": true,
  "<&num::saturating::Saturating<i128> as ops::arith::Rem<num::saturating::Saturating<i128>>>::rem": true,
  "<&num::saturating::Saturating<i128> as ops::arith::Rem>::rem": true,
  "<&num::saturating::Saturating<i128> as ops::arith::Sub<num::saturating::Saturating<i128>>>::sub": true,
  "<&num::saturating::Saturating<i128> as ops::arith::Sub>::sub": true,
  "<&num::saturating::Saturating<i128> as ops::bit::BitAnd<num::saturating::Saturating<i128>>>::bitand": true,
  "<&num::saturating::Saturating<i128> as ops::bit::BitAnd>::bitand": true,
  "<&num::saturating::Saturating<i128> as ops::bit::BitOr<num::saturating::Saturating<i128>>>::bitor": true,
  "<&num::saturating::Saturating<i128> as ops::bit::BitOr>::bitor": true,
  "<&num::saturating::Saturating<i128> as ops::bit::BitXor<num::saturating::Saturating<i128>>>::bitxor": true,
  "<&num::saturating::Saturating<i128> as ops::bit::BitXor>::bitxor": true,
  "<&num::saturating::Saturating<i128> as ops::bit::Not>::not": true,
  "<&num::saturating::Saturating<i16> as ops::arith::Add<num::saturating::Saturating<i16>>>::add": true,
  "<&num::saturating::Saturating<i16> as ops::arith::Add>::add": true,
  "<&num::saturating::Saturating<i16> as ops::arith::Div<num::saturating::Saturating<i16>>>::div": true,
  "<&num::saturating::Saturating<i16> as ops::arith::Div>::div": true,
  "<&num::saturating::Saturating<i16> as ops::arith::Mul<num::saturating::Saturating<i16>>>::mul": true,
  "<&num::saturating::Saturating<i16> as ops::arith::Mul>::mul": true,
  "<&num::saturating::Saturating<i16> as ops::arith::Neg>::neg": true,
  "<&num::saturating::Saturating<i16> as ops::arith::Rem<num::saturating::Saturating<i16>>>::rem": true,
  "<&num::saturating::Saturating<i16> as ops::arith::Rem>::rem": true,
  "<&num::saturating::Saturating<i16> as ops::arith::Sub<num::saturating::Saturating<i16>>>::sub": true,
  "<&num::saturating::Saturating<i16> as ops::arith::Sub>::sub": true,
  "<&num::saturating::Saturating<i16> as ops::bit::BitAnd<num::saturating::Saturating<i16>>>::bitand": true,
  "<&num::saturating::Saturating<i16> as ops::bit::BitAnd>::bitand": true,
  "<&num::saturating::Saturating<i16> as ops::bit::BitOr<num::saturating::Saturating<i16>>>::bitor": true,
  "<&num::saturating::Saturating<i16> as ops::bit::BitOr>::bitor": true,
  "<&num::saturating::Saturating<i16> as ops::bit::BitXor<num::saturating::Saturating<i16>>>::bitxor": true,
  "<&num::saturating::Saturating<i16> as ops::bit::BitXor>::bitxor": true,
  "<&num::saturating::Saturating<i16> as ops::bit::Not>::not": true,
  "<&num::saturating::Saturating<i32> as ops::arith::Add<num::saturating::Saturating<i32>>>::add": true,
  "<&num::saturating::Saturating<i32> as ops::arith::Add>::add": true,
  "<&num::saturating::Saturating<i32> as ops::arith::Div<num::saturating::Saturating<i32>>>::div": true,
  "<&num::saturating::Saturating<i32> as ops::arith::Div>::div": true,
  "<&num::saturating::Saturating<i32> as ops::arith::Mul<num::saturating::Saturating<i32>>>::mul": true,
  "<&num::saturating::Saturating<i32> as ops::arith::Mul>::mul": true,
  "<&num::saturating::Saturating<i32> as ops::arith::Neg>::neg": true,
  "<&num::saturating::Saturating<i32> as ops::arith::Rem<num::saturating::Saturating<i32>>>::rem": true,
  "<&num::saturating::Saturating<i32> as ops::arith::Rem>::rem": true,
  "<&num::saturating::Saturating<i32> as ops::arith::Sub<num::saturating::Saturating<i32>>>::sub": true,
  "<&num::saturating::Saturating<i32> as ops::arith::Sub>::sub": true,
  "<&num::saturating::Saturating<i32> as ops::bit::BitAnd<num::saturating::Saturating<i32>>>::bitand": true,
  "<&num::saturating::Saturating<i32> as ops::bit::BitAnd>::bitand": true,
  "<&num::saturating::Saturating<i32> as ops::bit::BitOr<num::saturating::Saturating<i32>>>::bitor": true,
  "<&num::saturating::Saturating<i32> as ops::bit::BitOr>::bitor": true,
  "<&num::saturating::Saturating<i32> as ops::bit::BitXor<num::saturating::Saturating<i32>>>::bitxor": true,
  "<&num::saturating::Saturating<i32> as ops::bit::BitXor>::bitxor": true,
  "<&num::saturating::Saturating<i32> as ops::bit::Not>::not": true,
  "<&num::saturating::Saturating<i64> as ops::arith::Add<num::saturating::Saturating<i64>>>::add": true,
  "<&num::saturating::Saturating<i64> as ops::arith::Add>::add": true,
  "<&num::saturating::Saturating<i64> as ops::arith::Div<num::saturating::Saturating<i64>>>::div": true,
  "<&num::saturating::Saturating<i64> as ops::arith::Div>::div": true,
  "<&num::saturating::Saturating<i64> as ops::arith::Mul<num::saturating::Saturating<i64>>>::mul": true,
  "<&num::saturating::Saturating<i64> as ops::arith::Mul>::mul": true,
  "<&num::saturating::Saturating<i64> as ops::arith::Neg>::neg": true,
  "<&num::saturating::Saturating<i64> as ops::arith::Rem<num::saturating::Saturating<i64>>>::rem": true,
  "<&num::saturating::Saturating<i64> as ops::arith::Rem>::rem": true,
  "<&num::saturating::Saturating<i64> as ops::arith::Sub<num::saturating::Saturating<i64>>>::sub": true,
  "<&num::saturating::Saturating<i64> as ops::arith::Sub>::sub": true,
  "<&num::saturating::Saturating<i64> as ops::bit::BitAnd<num::saturating::Saturating<i64>>>::bitand": true,
  "<&num::saturating::Saturating<i64> as ops::bit::BitAnd>::bitand": true,
  "<&num::saturating::Saturating<i64> as ops::bit::BitOr<num::saturating::Saturating<i64>>>::bitor": true,
  "<&num::saturating::Saturating<i64> as ops::bit::BitOr>::bitor": true,
  "<&num::saturating::Saturating<i64> as ops::bit::BitXor<num::saturating::Saturating<i64>>>::bitxor": true,
  "<&num::saturating::Saturating<i64> as ops::bit::BitXor>::bitxor": true,
  "<&num::saturating::Saturating<i64> as ops::bit::Not>::not": true,
  "<&num::saturating::Saturating<i8> as ops::arith::Add<num::saturating::Saturating<i8>>>::add": true,
  "<&num::saturating::Saturating<i8> as ops::arith::Add>::add": true,
  "<&num::saturating::Saturating<i8> as ops::arith::Div<num::saturating::Saturating<i8>>>::div": true,
  "<&num::saturating::Saturating<i8> as ops::arith::Div>::div": true,
  "<&num::saturating::Saturating<i8> as ops::arith::Mul<num::saturating::Saturating<i8>>>::mul": true,
  "<&num::saturating::Saturating<i8> as ops::arith::Mul>::mul": true,
  "<&num::saturating::Saturating<i8> as ops::arith::Neg>::neg": true,
  "<&num::saturating::Saturating<i8> as ops::arith::Rem<num::saturating::Saturating<i8>>>::rem": true,
  "<&num::saturating::Saturating<i8> as ops::arith::Rem>::rem": true,
  "<&num::saturating::Saturating<i8> as ops::arith::Sub<num::saturating::Saturating<i8>>>::sub": true,
  "<&num::saturating::Saturating<i8> as ops::arith::Sub>::sub": true,
  "<&num::saturating::Saturating<i8> as ops::bit::BitAnd<num::saturating::Saturating<i8>>>::bitand": true,
  "<&num::saturating::Saturating<i8> as ops::bit::BitAnd>::bitand": true,
  "<&num::saturating::Saturating<i8> as ops::bit::BitOr<num::saturating::Saturating<i8>>>::bitor": true,
  "<&num::saturating::Saturating<i8> as ops::bit::BitOr>::bitor": true,
  "<&num::saturating::Saturating<i8> as ops::bit::BitXor<num::saturating::Saturating<i8>>>::bitxor": true,
  "<&num::saturating::Saturating<i8> as ops::bit::BitXor>::bitxor": true,
  "<&num::saturating::Saturating<i8> as ops::bit::Not>::not": true,
  "<&num::saturating::Saturating<isize> as ops::arith::Add<num::saturating::Saturating<isize>>>::add": true,
  "<&num::saturating::Saturating<isize> as ops::arith::Add>::add": true,
  "<&num::saturating::Saturating<isize> as ops::arith::Div<num::saturating::Saturating<isize>>>::div": true,
  "<&num::saturating::Saturating<isize> as ops::arith::Div>::div": true,
  "<&num::saturating::Saturating<isize> as ops::arith::Mul<num::saturating::Saturating<isize>>>::mul": true,
  "<&num::saturating::Saturating<isize> as ops::arith::Mul>::mul": true,
  "<&num::saturating::Saturating<isize> as ops::arith::Neg>::neg": true,
  "<&num::saturating::Saturating<isize> as ops::arith::Rem<num::saturating::Saturating<isize>>>::rem": true,
  "<&num::saturating::Saturating<isize> as ops::arith::Rem>::rem": true,
  "<&num::saturating::Saturating<isize> as ops::arith::Sub<num::saturating::Saturating<isize>>>::sub": true,
  "<&num::saturating::Saturating<isize> as ops::arith::Sub>::sub": true,
  "<&num::saturating::Saturating<isize> as ops::bit::BitAnd<num::saturating::Saturating<isize>>>::bitand": true,
  "<&num::saturating::Saturating<isize> as ops::bit::BitAnd>::bitand": true,
  "<&num::saturating::Saturating<isize> as ops::bit::BitOr<num::saturating::Saturating<isize>>>::bitor": true,
  "<&num::saturating::Saturating<isize> as ops::bit::BitOr>::bitor": true,
  "<&num::saturating::Saturating<isize> as ops::bit::BitXor<num::saturating::Saturating<isize>>>::bitxor": true,
  "<&num::saturating::Saturating<isize> as ops::bit::BitXor>::bitxor": true,
  "<&num::saturating::Saturating<isize> as ops::bit::Not>::not": true,
  "<&num::saturating::Saturating<u128> as ops::arith::Add<num::saturating::Saturating<u128>>>::add": true,
  "<&num::saturating::Saturating<u128> as ops::arith::Add>::add": true,
  "<&num::saturating::Saturating<u128> as ops::arith::Div<num::saturating::Saturating<u128>>>::div": true,
  "<&num::saturating::Saturating<u128> as ops::arith::Div>::div": true,
  "<&num::saturating::Saturating<u128> as ops::arith::Mul<num::saturating::Saturating<u128>>>::mul": true,
  "<&num::saturating::Saturating<u128> as ops::arith::Mul>::mul": true,
  "<&num::saturating::Saturating<u128> as ops::arith::Rem<num::saturating::Saturating<u128>>>::rem": true,
  "<&num::saturating::Saturating<u128> as ops::arith::Rem>::rem": true,
  "<&num::saturating::Saturating<u128> as ops::arith::Sub<num::saturating::Saturating<u128>>>::sub": true,
  "<&num::saturating::Saturating<u128> as ops::arith::Sub>::sub": true,
  "<&num::saturating::Saturating<u128> as ops::bit::BitAnd<num::saturating::Saturating<u128>>>::bitand": true,
  "<&num::saturating::Saturating<u128> as ops::bit::BitAnd>::bitand": true,
  "<&num::saturating::Saturating<u128> as ops::bit::BitOr<num::saturating::Saturating<u128>>>::bitor": true,
  "<&num::saturating::Saturating<u128> as ops::bit::BitOr>::bitor": true,
  "<&num::saturating::Saturating<u128> as ops::bit::BitXor<num::saturating::Saturating<u128>>>::bitxor": true,
  "<&num::saturating::Saturating<u128> as ops::bit::BitXor>::bitxor": true,
  "<&num::saturating::Saturating<u128> as ops::bit::Not>::not": true,
  "<&num::saturating::Saturating<u16> as ops::arith::Add<num::saturating::Saturating<u16>>>::add": true,
  "<&num::saturating::Saturating<u16> as ops::arith::Add>::add": true,
  "<&num::saturating::Saturating<u16> as ops::arith::Div<num::saturating::Saturating<u16>>>::div": true,
  "<&num::saturating::Saturating<u16> as ops::arith::Div>::div": true,
  "<&num::saturating::Saturating<u16> as ops::arith::Mul<num::saturating::Saturating<u16>>>::mul": true,
  "<&num::saturating::Saturating<u16> as ops::arith::Mul>::mul": true,
  "<&num::saturating::Saturating<u16> as ops::arith::Rem<num::saturating::Saturating<u16>>>::rem": true,
  "<&num::saturating::Saturating<u16> as ops::arith::Rem>::rem": true,
  "<&num::saturating::Saturating<u16> as ops::arith::Sub<num::saturating::Saturating<u16>>>::sub": true,
  "<&num::saturating::Saturating<u16> as ops::arith::Sub>::sub": true,
  "<&num::saturating::Saturating<u16> as ops::bit::BitAnd<num::saturating::Saturating<u16>>>::bitand": true,
  "<&num::saturating::Saturating<u16> as ops::bit::BitAnd>::bitand": true,
  "<&num::saturating::Saturating<u16> as ops::bit::BitOr<num::saturating::Saturating<u16>>>::bitor": true,
  "<&num::saturating::Saturating<u16> as ops::bit::BitOr>::bitor": true,
  "<&num::saturating::Saturating<u16> as ops::bit::BitXor<num::saturating::Saturating<u16>>>::bitxor": true,
  "<&num::saturating::Saturating<u16> as ops::bit::BitXor>::bitxor": true,
  "<&num::saturating::Saturating<u16> as ops::bit::Not>::not": true,
  "<&num::saturating::Saturating<u32> as ops::arith::Add<num::saturating::Saturating<u32>>>::add": true,
  "<&num::saturating::Saturating<u32> as ops::arith::Add>::add": true,
  "<&num::saturating::Saturating<u32> as ops::arith::Div<num::saturating::Saturating<u32>>>::div": true,
  "<&num::saturating::Saturating<u32> as ops::arith::Div>::div": true,
  "<&num::saturating::Saturating<u32> as ops::arith::Mul<num::saturating::Saturating<u32>>>::mul": true,
  "<&num::saturating::Saturating<u32> as ops::arith::Mul>::mul": true,
  "<&num::saturating::Saturating<u32> as ops::arith::Rem<num::saturating::Saturating<u32>>>::rem": true,
  "<&num::saturating::Saturating<u32> as ops::arith::Rem>::rem": true,
  "<&num::saturating::Saturating<u32> as ops::arith::Sub<num::saturating::Saturating<u32>>>::sub": true,
  "<&num::saturating::Saturating<u32> as ops::arith::Sub>::sub": true,
  "<&num::saturating::Saturating<u32> as ops::bit::BitAnd<num::saturating::Saturating<u32>>>::bitand": true,
  "<&num::saturating::Saturating<u32> as ops::bit::BitAnd>::bitand": true,
  "<&num::saturating::Saturating<u32> as ops::bit::BitOr<num::saturating::Saturating<u32>>>::bitor": true,
  "<&num::saturating::Saturating<u32> as ops::bit::BitOr>::bitor": true,
  "<&num::saturating::Saturating<u32> as ops::bit::BitXor<num::saturating::Saturating<u32>>>::bitxor": true,
  "<&num::saturating::Saturating<u32> as ops::bit::BitXor>::bitxor": true,
  "<&num::saturating::Saturating<u32> as ops::bit::Not>::not": true,
  "<&num::saturating::Saturating<u64> as ops::arith::Add<num::saturating::Saturating<u64>>>::add": true,
  "<&num::saturating::Saturating<u64> as ops::arith::Add>::add": true,
  "<&num::saturating::Saturating<u64> as ops::arith::Div<num::saturating::Saturating<u64>>>::div": true,
  "<&num::saturating::Saturating<u64> as ops::arith::Div>::div": true,
  "<&num::saturating::Saturating<u64> as ops::arith::Mul<num::saturating::Saturating<u64>>>::mul": true,
  "<&num::saturating::Saturating<u64> as ops::arith::Mul>::mul": true,
  "<&num::saturating::Saturating<u64> as ops::arith::Rem<num::saturating::Saturating<u64>>>::rem": true,
  "<&num::saturating::Saturating<u64> as ops::arith::Rem>::rem": true,
  "<&num::saturating::Saturating<u64> as ops::arith::Sub<num::saturating::Saturating<u64>>>::sub": true,
  "<&num::saturating::Saturating<u64> as ops::arith::Sub>::sub": true,
  "<&num::saturating::Saturating<u64> as ops::bit::BitAnd<num::saturating::Saturating<u64>>>::bitand": true,
  "<&num::saturating::Saturating<u64> as ops::bit::BitAnd>::bitand": true,
  "<&num::saturating::Saturating<u64> as ops::bit::BitOr<num::saturating::Saturating<u64>>>::bitor": true,
  "<&num::saturating::Saturating<u64> as ops::bit::BitOr>::bitor": true,
  "<&num::saturating::Saturating<u64> as ops::bit::BitXor<num::saturating::Saturating<u64>>>::bitxor": true,
  "<&num::saturating::Saturating<u64> as ops::bit::BitXor>::bitxor": true,
  "<&num::saturating::Saturating<u64> as ops::bit::Not>::not": true,
  "<&num::saturating::Saturating<u8> as ops::arith::Add<num::saturating::Saturating<u8>>>::add": true,
  "<&num::saturating::Saturating<u8> as ops::arith::Add>::add": true,
  "<&num::saturating::Saturating<u8> as ops::arith::Div<num::saturating::Saturating<u8>>>::div": true,
  "<&num::saturating::Saturating<u8> as ops::arith::Div>::div": true,
  "<&num::saturating::Saturating<u8> as ops::arith::Mul<num::saturating::Saturating<u8>>>::mul": true,
  "<&num::saturating::Saturating<u8> as ops::arith::Mul>::mul": true,
  "<&num::saturating::Saturating<u8> as ops::arith::Rem<num::saturating::Saturating<u8>>>::rem": true,
  "<&num::saturating::Saturating<u8> as ops::arith::Rem>::rem": true,
  "<&num::saturating::Saturating<u8> as ops::arith::Sub<num::saturating::Saturating<u8>>>::sub": true,
  "<&num::saturating::Saturating<u8> as ops::arith::Sub>::sub": true,
  "<&num::saturating::Saturating<u8> as ops::bit::BitAnd<num::saturating::Saturating<u8>>>::bitand": true,
  "<&num::saturating::Saturating<u8> as ops::bit::BitAnd>::bitand": true,
  "<&num::saturating::Saturating<u8> as ops::bit::BitOr<num::saturating::Saturating<u8>>>::bitor": true,
  "<&num::saturating::Saturating<u8> as ops::bit::BitOr>::bitor": true,
  "<&num::saturating::Saturating<u8> as ops::bit::BitXor<num::saturating::Saturating<u8>>>::bitxor": true,
  "<&num::saturating::Saturating<u8> as ops::bit::BitXor>::bitxor": true,
  "<&num::saturating::Saturating<u8> as ops::bit::Not>::not": true,
  "<&num::saturating::Saturating<usize> as ops::arith::Add<num::saturating::Saturating<usize>>>::add": true,
  "<&num::saturating::Saturating<usize> as ops::arith::Add>::add": true,
  "<&num::saturating::Saturating<usize> as ops::arith::Div<num::saturating::Saturating<usize>>>::div": true,
  "<&num::saturating::Saturating<usize> as ops::arith::Div>::div": true,
  "<&num::saturating::Saturating<usize> as ops::arith::Mul<num::saturating::Saturating<usize>>>::mul": true,
  "<&num::saturating::Saturating<usize> as ops::arith::Mul>::mul": true,
  "<&num::saturating::Saturating<usize> as ops::arith::Rem<num::saturating::Saturating<usize>>>::rem": true,
  "<&num::saturating::Saturating<usize> as ops::arith::Rem>::rem": true,
  "<&num::saturating::Saturating<usize> as ops::arith::Sub<num::saturating::Saturating<usize>>>::sub": true,
  "<&num::saturating::Saturating<usize> as ops::arith::Sub>::sub": true,
  "<&num::saturating::Saturating<usize> as ops::bit::BitAnd<num::saturating::Saturating<usize>>>::bitand": true,
  "<&num::saturating::Saturating<usize> as ops::bit::BitAnd>::bitand": true,
  "<&num::saturating::Saturating<usize> as ops::bit::BitOr<num::saturating::Saturating<usize>>>::bitor": true,
  "<&num::saturating::Saturating<usize> as ops::bit::BitOr>::bitor": true,
  "<&num::saturating::Saturating<usize> as ops::bit::BitXor<num::saturating::Saturating<usize>>>::bitxor": true,
  "<&num::saturating::Saturating<usize> as ops::bit::BitXor>::bitxor": true,
  "<&num::saturating::Saturating<usize> as ops::bit::Not>::not": true,
  "<&num::wrapping::Wrapping<i128> as ops::arith::Add<num::wrapping::Wrapping<i128>>>::add": true,
  "<&num::wrapping::Wrapping<i128> as ops::arith::Add>::add": true,
  "<&num::wrapping::Wrapping<i128> as ops::arith::Div<num::wrapping::Wrapping<i128>>>::div": true,
  "<&num::wrapping::Wrapping<i128> as ops::arith::Div>::div": true,
  "<&num::wrapping::Wrapping<i128> as ops::arith::Mul<num::wrapping::Wrapping<i128>>>::mul": true,
  "<&num::wrapping::Wrapping<i128> as ops::arith::Mul>::mul": true,
  "<&num::wrapping::Wrapping<i128> as ops::arith::Neg>::neg": true,
  "<&num::wrapping::Wrapping<i128> as ops::arith::Rem<num::wrapping::Wrapping<i128>>>::rem": true,
  "<&num::wrapping::Wrapping<i128> as ops::arith::Rem>::rem": true,
  "<&num::wrapping::Wrapping<i128> as ops::arith::Sub<num::wrapping::Wrapping<i128>>>::sub": true,
  "<&num::wrapping::Wrapping<i128> as ops::arith::Sub>::sub": true,
  "<&num::wrapping::Wrapping<i128> as ops::bit::BitAnd<num::wrapping::Wrapping<i128>>>::bitand": true,
  "<&num::wrapping::Wrapping<i128> as ops::bit::BitAnd>::bitand": true,
  "<&num::wrapping::Wrapping<i128> as ops::bit::BitOr<num::wrapping::Wrapping<i128>>>::bitor": true,
  "<&num::wrapping::Wrapping<i128> as ops::bit::BitOr>::bitor": true,
  "<&num::wrapping::Wrapping<i128> as ops::bit::BitXor<num::wrapping::Wrapping<i128>>>::bitxor": true,
  "<&num::wrapping::Wrapping<i128> as ops::bit::BitXor>::bitxor": true,
  "<&num::wrapping::Wrapping<i128> as ops::bit::Not>::not": true,
  "<&num::wrapping::Wrapping<i128> as ops::bit::Shl<&usize>>::shl": true,
  "<&num::wrapping::Wrapping<i128> as ops::bit::Shl<usize>>::shl": true,
  "<&num::wrapping::Wrapping<i128> as ops::bit::Shr<&usize>>::shr": true,
  "<&num::wrapping::Wrapping<i128> as ops::bit::Shr<usize>>::shr": true,
  "<&num::wrapping::Wrapping<i16> as ops::arith::Add<num::wrapping::Wrapping<i16>>>::add": true,
  "<&num::wrapping::Wrapping<i16> as ops::arith::Add>::add": true,
  "<&num::wrapping::Wrapping<i16> as ops::arith::Div<num::wrapping::Wrapping<i16>>>::div": true,
  "<&num::wrapping::Wrapping<i16> as ops::arith::Div>::div": true,
  "<&num::wrapping::Wrapping<i16> as ops::arith::Mul<num::wrapping::Wrapping<i16>>>::mul": true,
  "<&num::wrapping::Wrapping<i16> as ops::arith::Mul>::mul": true,
  "<&num::wrapping::Wrapping<i16> as ops::arith::Neg>::neg": true,
  "<&num::wrapping::Wrapping<i16> as ops::arith::Rem<num::wrapping::Wrapping<i16>>>::rem": true,
  "<&num::wrapping::Wrapping<i16> as ops::arith::Rem>::rem": true,
  "<&num::wrapping::Wrapping<i16> as ops::arith::Sub<num::wrapping::Wrapping<i16>>>::sub": true,
  "<&num::wrapping::Wrapping<i16> as ops::arith::Sub>::sub": true,
  "<&num::wrapping::Wrapping<i16> as ops::bit::BitAnd<num::wrapping::Wrapping<i16>>>::bitand": true,
  "<&num::wrapping::Wrapping<i16> as ops::bit::BitAnd>::bitand": true,
  "<&num::wrapping::Wrapping<i16> as ops::bit::BitOr<num::wrapping::Wrapping<i16>>>::bitor": true,
  "<&num::wrapping::Wrapping<i16> as ops::bit::BitOr>::bitor": true,
  "<&num::wrapping::Wrapping<i16> as ops::bit::BitXor<num::wrapping::Wrapping<i16>>>::bitxor": true,
  "<&num::wrapping::Wrapping<i16> as ops::bit::BitXor>::bitxor": true,
  "<&num::wrapping::Wrapping<i16> as ops::bit::Not>::not": true,
  "<&num::wrapping::Wrapping<i16> as ops::bit::Shl<&usize>>::shl": true,
  "<&num::wrapping::Wrapping<i16> as ops::bit::Shl<usize>>::shl": true,
  "<&num::wrapping::Wrapping<i16> as ops::bit::Shr<&usize>>::shr": true,
  "<&num::wrapping::Wrapping<i16> as ops::bit::Shr<usize>>::shr": true,
  "<&num::wrapping::Wrapping<i32> as ops::arith::Add<num::wrapping::Wrapping<i32>>>::add": true,
  "<&num::wrapping::Wrapping<i32> as ops::arith::Add>::add": true,
  "<&num::wrapping::Wrapping<i32> as ops::arith::Div<num::wrapping::Wrapping<i32>>>::div": true,
  "<&num::wrapping::Wrapping<i32> as ops::arith::Div>::div": true,
  "<&num::wrapping::Wrapping<i32> as ops::arith::Mul<num::wrapping::Wrapping<i32>>>::mul": true,
  "<&num::wrapping::Wrapping<i32> as ops::arith::Mul>::mul": true,
  "<&num::wrapping::Wrapping<i32> as ops::arith::Neg>::neg": true,
  "<&num::wrapping::Wrapping<i32> as ops::arith::Rem<num::wrapping::Wrapping<i32>>>::rem": true,
  "<&num::wrapping::Wrapping<i32> as ops::arith::Rem>::rem": true,
  "<&num::wrapping::Wrapping<i32> as ops::arith::Sub<num::wrapping::Wrapping<i32>>>::sub": true,
  "<&num::wrapping::Wrapping<i32> as ops::arith::Sub>::sub": true,
  "<&num::wrapping::Wrapping<i32> as ops::bit::BitAnd<num::wrapping::Wrapping<i32>>>::bitand": true,
  "<&num::wrapping::Wrapping<i32> as ops::bit::BitAnd>::bitand": true,
  "<&num::wrapping::Wrapping<i32> as ops::bit::BitOr<num::wrapping::Wrapping<i32>>>::bitor": true,
  "<&num::wrapping::Wrapping<i32> as ops::bit::BitOr>::bitor": true,
  "<&num::wrapping::Wrapping<i32> as ops::bit::BitXor<num::wrapping::Wrapping<i32>>>::bitxor": true,
  "<&num::wrapping::Wrapping<i32> as ops::bit::BitXor>::bitxor": true,
  "<&num::wrapping::Wrapping<i32> as ops::bit::Not>::not": true,
  "<&num::wrapping::Wrapping<i32> as ops::bit::Shl<&usize>>::shl": true,
  "<&num::wrapping::Wrapping<i32> as ops::bit::Shl<usize>>::shl": true,
  "<&num::wrapping::Wrapping<i32> as ops::bit::Shr<&usize>>::shr": true,
  "<&num::wrapping::Wrapping<i32> as ops::bit::Shr<usize>>::shr": true,
  "<&num::wrapping::Wrapping<i64> as ops::arith::Add<num::wrapping::Wrapping<i64>>>::add": true,
  "<&num::wrapping::Wrapping<i64> as ops::arith::Add>::add": true,
  "<&num::wrapping::Wrapping<i64> as ops::arith::Div<num::wrapping::Wrapping<i64>>>::div": true,
  "<&num::wrapping::Wrapping<i64> as ops::arith::Div>::div": true,
  "<&num::wrapping::Wrapping<i64> as ops::arith::Mul<num::wrapping::Wrapping<i64>>>::mul": true,
  "<&num::wrapping::Wrapping<i64> as ops::arith::Mul>::mul": true,
  "<&num::wrapping::Wrapping<i64> as ops::arith::Neg>::neg": true,
  "<&num::wrapping::Wrapping<i64> as ops::arith::Rem<num::wrapping::Wrapping<i64>>>::rem": true,
  "<&num::wrapping::Wrapping<i64> as ops::arith::Rem>::rem": true,
  "<&num::wrapping::Wrapping<i64> as ops::arith::Sub<num::wrapping::Wrapping<i64>>>::sub": true,
  "<&num::wrapping::Wrapping<i64> as ops::arith::Sub>::sub": true,
  "<&num::wrapping::Wrapping<i64> as ops::bit::BitAnd<num::wrapping::Wrapping<i64>>>::bitand": true,
  "<&num::wrapping::Wrapping<i64> as ops::bit::BitAnd>::bitand": true,
  "<&num::wrapping::Wrapping<i64> as ops::bit::BitOr<num::wrapping::Wrapping<i64>>>::bitor": true,
  "<&num::wrapping::Wrapping<i64> as ops::bit::BitOr>::bitor": true,
  "<&num::wrapping::Wrapping<i64> as ops::bit::BitXor<num::wrapping::Wrapping<i64>>>::bitxor": true,
  "<&num::wrapping::Wrapping<i64> as ops::bit::BitXor>::bitxor": true,
  "<&num::wrapping::Wrapping<i64> as ops::bit::Not>::not": true,
  "<&num::wrapping::Wrapping<i64> as ops::bit::Shl<&usize>>::shl": true,
  "<&num::wrapping::Wrapping<i64> as ops::bit::Shl<usize>>::shl": true,
  "<&num::wrapping::Wrapping<i64> as ops::bit::Shr<&usize>>::shr": true,
  "<&num::wrapping::Wrapping<i64> as ops::bit::Shr<usize>>::shr": true,
  "<&num::wrapping::Wrapping<i8> as ops::arith::Add<num::wrapping::Wrapping<i8>>>::add": true,
  "<&num::wrapping::Wrapping<i8> as ops::arith::Add>::add": true,
  "<&num::wrapping::Wrapping<i8> as ops::arith::Div<num::wrapping::Wrapping<i8>>>::div": true,
  "<&num::wrapping::Wrapping<i8> as ops::arith::Div>::div": true,
  "<&num::wrapping::Wrapping<i8> as ops::arith::Mul<num::wrapping::Wrapping<i8>>>::mul": true,
  "<&num::wrapping::Wrapping<i8> as ops::arith::Mul>::mul": true,
  "<&num::wrapping::Wrapping<i8> as ops::arith::Neg>::neg": true,
  "<&num::wrapping::Wrapping<i8> as ops::arith::Rem<num::wrapping::Wrapping<i8>>>::rem": true,
  "<&num::wrapping::Wrapping<i8> as ops::arith::Rem>::rem": true,
  "<&num::wrapping::Wrapping<i8> as ops::arith::Sub<num::wrapping::Wrapping<i8>>>::sub": true,
  "<&num::wrapping::Wrapping<i8> as ops::arith::Sub>::sub": true,
  "<&num::wrapping::Wrapping<i8> as ops::bit::BitAnd<num::wrapping::Wrapping<i8>>>::bitand": true,
  "<&num::wrapping::Wrapping<i8> as ops::bit::BitAnd>::bitand": true,
  "<&num::wrapping::Wrapping<i8> as ops::bit::BitOr<num::wrapping::Wrapping<i8>>>::bitor": true,
  "<&num::wrapping::Wrapping<i8> as ops::bit::BitOr>::bitor": true,
  "<&num::wrapping::Wrapping<i8> as ops::bit::BitXor<num::wrapping::Wrapping<i8>>>::bitxor": true,
  "<&num::wrapping::Wrapping<i8> as ops::bit::BitXor>::bitxor": true,
  "<&num::wrapping::Wrapping<i8> as ops::bit::Not>::not": true,
  "<&num::wrapping::Wrapping<i8> as ops::bit::Shl<&usize>>::shl": true,
  "<&num::wrapping::Wrapping<i8> as ops::bit::Shl<usize>>::shl": true,
  "<&num::wrapping::Wrapping<i8> as ops::bit::Shr<&usize>>::shr": true,
  "<&num::wrapping::Wrapping<i8> as ops::bit::Shr<usize>>::shr": true,
  "<&num::wrapping::Wrapping<isize> as ops::arith::Add<num::wrapping::Wrapping<isize>>>::add": true,
  "<&num::wrapping::Wrapping<isize> as ops::arith::Add>::add": true,
  "<&num::wrapping::Wrapping<isize> as ops::arith::Div<num::wrapping::Wrapping<isize>>>::div": true,
  "<&num::wrapping::Wrapping<isize> as ops::arith::Div>::div": true,
  "<&num::wrapping::Wrapping<isize> as ops::arith::Mul<num::wrapping::Wrapping<isize>>>::mul": true,
  "<&num::wrapping::Wrapping<isize> as ops::arith::Mul>::mul": true,
  "<&num::wrapping::Wrapping<isize> as ops::arith::Neg>::neg": true,
  "<&num::wrapping::Wrapping<isize> as ops::arith::Rem<num::wrapping::Wrapping<isize>>>::rem": true,
  "<&num::wrapping::Wrapping<isize> as ops::arith::Rem>::rem": true,
  "<&num::wrapping::Wrapping<isize> as ops::arith::Sub<num::wrapping::Wrapping<isize>>>::sub": true,
  "<&num::wrapping::Wrapping<isize> as ops::arith::Sub>::sub": true,
  "<&num::wrapping::Wrapping<isize> as ops::bit::BitAnd<num::wrapping::Wrapping<isize>>>::bitand": true,
  "<&num::wrapping::Wrapping<isize> as ops::bit::BitAnd>::bitand": true,
  "<&num::wrapping::Wrapping<isize> as ops::bit::BitOr<num::wrapping::Wrapping<isize>>>::bitor": true,
  "<&num::wrapping::Wrapping<isize> as ops::bit::BitOr>::bitor": true,
  "<&num::wrapping::Wrapping<isize> as ops::bit::BitXor<num::wrapping::Wrapping<isize>>>::bitxor": true,
  "<&num::wrapping::Wrapping<isize> as ops::bit::BitXor>::bitxor": true,
  "<&num::wrapping::Wrapping<isize> as ops::bit::Not>::not": true,
  "<&num::wrapping::Wrapping<isize> as ops::bit::Shl<&usize>>::shl": true,
  "<&num::wrapping::Wrapping<isize> as ops::bit::Shl<usize>>::shl": true,
  "<&num::wrapping::Wrapping<isize> as ops::bit::Shr<&usize>>::shr": true,
  "<&num::wrapping::Wrapping<isize> as ops::bit::Shr<usize>>::shr": true,
  "<&num::wrapping::Wrapping<u128> as ops::arith::Add<num::wrapping::Wrapping<u128>>>::add": true,
  "<&num::wrapping::Wrapping<u128> as ops::arith::Add>::add": true,
  "<&num::wrapping::Wrapping<u128> as ops::arith::Div<num::wrapping::Wrapping<u128>>>::div": true,
  "<&num::wrapping::Wrapping<u128> as ops::arith::Div>::div": true,
  "<&num::wrapping::Wrapping<u128> as ops::arith::Mul<num::wrapping::Wrapping<u128>>>::mul": true,
  "<&num::wrapping::Wrapping<u128> as ops::arith::Mul>::mul": true,
  "<&num::wrapping::Wrapping<u128> as ops::arith::Neg>::neg": true,
  "<&num::wrapping::Wrapping<u128> as ops::arith::Rem<num::wrapping::Wrapping<u128>>>::rem": true,
  "<&num::wrapping::Wrapping<u128> as ops::arith::Rem>::rem": true,
  "<&num::wrapping::Wrapping<u128> as ops::arith::Sub<num::wrapping::Wrapping<u128>>>::sub": true,
  "<&num::wrapping::Wrapping<u128> as ops::arith::Sub>::sub": true,
  "<&num::wrapping::Wrapping<u128> as ops::bit::BitAnd<num::wrapping::Wrapping<u128>>>::bitand": true,
  "<&num::wrapping::Wrapping<u128> as ops::bit::BitAnd>::bitand": true,
  "<&num::wrapping::Wrapping<u128> as ops::bit::BitOr<num::wrapping::Wrapping<u128>>>::bitor": true,
  "<&num::wrapping::Wrapping<u128> as ops::bit::BitOr>::bitor": true,
  "<&num::wrapping::Wrapping<u128> as ops::bit::BitXor<num::wrapping::Wrapping<u128>>>::bitxor": true,
  "<&num::wrapping::Wrapping<u128> as ops::bit::BitXor>::bitxor": true,
  "<&num::wrapping::Wrapping<u128> as ops::bit::Not>::not": true,
  "<&num::wrapping::Wrapping<u128> as ops::bit::Shl<&usize>>::shl": true,
  "<&num::wrapping::Wrapping<u128> as ops::bit::Shl<usize>>::shl": true,
  "<&num::wrapping::Wrapping<u128> as ops::bit::Shr<&usize>>::shr": true,
  "<&num::wrapping::Wrapping<u128> as ops::bit::Shr<usize>>::shr": true,
  "<&num::wrapping::Wrapping<u16> as ops::arith::Add<num::wrapping::Wrapping<u16>>>::add": true,
  "<&num::wrapping::Wrapping<u16> as ops::arith::Add>::add": true,
  "<&num::wrapping::Wrapping<u16> as ops::arith::Div<num::wrapping::Wrapping<u16>>>::div": true,
  "<&num::wrapping::Wrapping<u16> as ops::arith::Div>::div": true,
  "<&num::wrapping::Wrapping<u16> as ops::arith::Mul<num::wrapping::Wrapping<u16>>>::mul": true,
  "<&num::wrapping::Wrapping<u16> as ops::arith::Mul>::mul": true,
  "<&num::wrapping::Wrapping<u16> as ops::arith::Neg>::neg": true,
  "<&num::wrapping::Wrapping<u16> as ops::arith::Rem<num::wrapping::Wrapping<u16>>>::rem": true,
  "<&num::wrapping::Wrapping<u16> as ops::arith::Rem>::rem": true,
  "<&num::wrapping::Wrapping<u16> as ops::arith::Sub<num::wrapping::Wrapping<u16>>>::sub": true,
  "<&num::wrapping::Wrapping<u16> as ops::arith::Sub>::sub": true,
  "<&num::wrapping::Wrapping<u16> as ops::bit::BitAnd<num::wrapping::Wrapping<u16>>>::bitand": true,
  "<&num::wrapping::Wrapping<u16> as ops::bit::BitAnd>::bitand": true,
  "<&num::wrapping::Wrapping<u16> as ops::bit::BitOr<num::wrapping::Wrapping<u16>>>::bitor": true,
  "<&num::wrapping::Wrapping<u16> as ops::bit::BitOr>::bitor": true,
  "<&num::wrapping::Wrapping<u16> as ops::bit::BitXor<num::wrapping::Wrapping<u16>>>::bitxor": true,
  "<&num::wrapping::Wrapping<u16> as ops::bit::BitXor>::bitxor": true,
  "<&num::wrapping::Wrapping<u16> as ops::bit::Not>::not": true,
  "<&num::wrapping::Wrapping<u16> as ops::bit::Shl<&usize>>::shl": true,
  "<&num::wrapping::Wrapping<u16> as ops::bit::Shl<usize>>::shl": true,
  "<&num::wrapping::Wrapping<u16> as ops::bit::Shr<&usize>>::shr": true,
  "<&num::wrapping::Wrapping<u16> as ops::bit::Shr<usize>>::shr": true,
  "<&num::wrapping::Wrapping<u32> as ops::arith::Add<num::wrapping::Wrapping<u32>>>::add": true,
  "<&num::wrapping::Wrapping<u32> as ops::arith::Add>::add": true,
  "<&num::wrapping::Wrapping<u32> as ops::arith::Div<num::wrapping::Wrapping<u32>>>::div": true,
  "<&num::wrapping::Wrapping<u32> as ops::arith::Div>::div": true,
  "<&num::wrapping::Wrapping<u32> as ops::arith::Mul<num::wrapping::Wrapping<u32>>>::mul": true,
  "<&num::wrapping::Wrapping<u32> as ops::arith::Mul>::mul": true,
  "<&num::wrapping::Wrapping<u32> as ops::arith::Neg>::neg": true,
  "<&num::wrapping::Wrapping<u32> as ops::arith::Rem<num::wrapping::Wrapping<u32>>>::rem": true,
  "<&num::wrapping::Wrapping<u32> as ops::arith::Rem>::rem": true,
  "<&num::wrapping::Wrapping<u32> as ops::arith::Sub<num::wrapping::Wrapping<u32>>>::sub": true,
  "<&num::wrapping::Wrapping<u32> as ops::arith::Sub>::sub": true,
  "<&num::wrapping::Wrapping<u32> as ops::bit::BitAnd<num::wrapping::Wrapping<u32>>>::bitand": true,
  "<&num::wrapping::Wrapping<u32> as ops::bit::BitAnd>::bitand": true,
  "<&num::wrapping::Wrapping<u32> as ops::bit::BitOr<num::wrapping::Wrapping<u32>>>::bitor": true,
  "<&num::wrapping::Wrapping<u32> as ops::bit::BitOr>::bitor": true,
  "<&num::wrapping::Wrapping<u32> as ops::bit::BitXor<num::wrapping::Wrapping<u32>>>::bitxor": true,
  "<&num::wrapping::Wrapping<u32> as ops::bit::BitXor>::bitxor": true,
  "<&num::wrapping::Wrapping<u32> as ops::bit::Not>::not": true,
  "<&num::wrapping::Wrapping<u32> as ops::bit::Shl<&usize>>::shl": true,
  "<&num::wrapping::Wrapping<u32> as ops::bit::Shl<usize>>::shl": true,
  "<&num::wrapping::Wrapping<u32> as ops::bit::Shr<&usize>>::shr": true,
  "<&num::wrapping::Wrapping<u32> as ops::bit::Shr<usize>>::shr": true,
  "<&num::wrapping::Wrapping<u64> as ops::arith::Add<num::wrapping::Wrapping<u64>>>::add": true,
  "<&num::wrapping::Wrapping<u64> as ops::arith::Add>::add": true,
  "<&num::wrapping::Wrapping<u64> as ops::arith::Div<num::wrapping::Wrapping<u64>>>::div": true,
  "<&num::wrapping::Wrapping<u64> as ops::arith::Div>::div": true,
  "<&num::wrapping::Wrapping<u64> as ops::arith::Mul<num::wrapping::Wrapping<u64>>>::mul": true,
  "<&num::wrapping::Wrapping<u64> as ops::arith::Mul>::mul": true,
  "<&num::wrapping::Wrapping<u64> as ops::arith::Neg>::neg": true,
  "<&num::wrapping::Wrapping<u64> as ops::arith::Rem<num::wrapping::Wrapping<u64>>>::rem": true,
  "<&num::wrapping::Wrapping<u64> as ops::arith::Rem>::rem": true,
  "<&num::wrapping::Wrapping<u64> as ops::arith::Sub<num::wrapping::Wrapping<u64>>>::sub": true,
  "<&num::wrapping::Wrapping<u64> as ops::arith::Sub>::sub": true,
  "<&num::wrapping::Wrapping<u64> as ops::bit::BitAnd<num::wrapping::Wrapping<u64>>>::bitand": true,
  "<&num::wrapping::Wrapping<u64> as ops::bit::BitAnd>::bitand": true,
  "<&num::wrapping::Wrapping<u64> as ops::bit::BitOr<num::wrapping::Wrapping<u64>>>::bitor": true,
  "<&num::wrapping::Wrapping<u64> as ops::bit::BitOr>::bitor": true,
  "<&num::wrapping::Wrapping<u64> as ops::bit::BitXor<num::wrapping::Wrapping<u64>>>::bitxor": true,
  "<&num::wrapping::Wrapping<u64> as ops::bit::BitXor>::bitxor": true,
  "<&num::wrapping::Wrapping<u64> as ops::bit::Not>::not": true,
  "<&num::wrapping::Wrapping<u64> as ops::bit::Shl<&usize>>::shl": true,
  "<&num::wrapping::Wrapping<u64> as ops::bit::Shl<usize>>::shl": true,
  "<&num::wrapping::Wrapping<u64> as ops::bit::Shr<&usize>>::shr": true,
  "<&num::wrapping::Wrapping<u64> as ops::bit::Shr<usize>>::shr": true,
  "<&num::wrapping::Wrapping<u8> as ops::arith::Add<num::wrapping::Wrapping<u8>>>::add": true,
  "<&num::wrapping::Wrapping<u8> as ops::arith::Add>::add": true,
  "<&num::wrapping::Wrapping<u8> as ops::arith::Div<num::wrapping::Wrapping<u8>>>::div": true,
  "<&num::wrapping::Wrapping<u8> as ops::arith::Div>::div": true,
  "<&num::wrapping::Wrapping<u8> as ops::arith::Mul<num::wrapping::Wrapping<u8>>>::mul": true,
  "<&num::wrapping::Wrapping<u8> as ops::arith::Mul>::mul": true,
  "<&num::wrapping::Wrapping<u8> as ops::arith::Neg>::neg": true,
  "<&num::wrapping::Wrapping<u8> as ops::arith::Rem<num::wrapping::Wrapping<u8>>>::rem": true,
  "<&num::wrapping::Wrapping<u8> as ops::arith::Rem>::rem": true,
  "<&num::wrapping::Wrapping<u8> as ops::arith::Sub<num::wrapping::Wrapping<u8>>>::sub": true,
  "<&num::wrapping::Wrapping<u8> as ops::arith::Sub>::sub": true,
  "<&num::wrapping::Wrapping<u8> as ops::bit::BitAnd<num::wrapping::Wrapping<u8>>>::bitand": true,
  "<&num::wrapping::Wrapping<u8> as ops::bit::BitAnd>::bitand": true,
  "<&num::wrapping::Wrapping<u8> as ops::bit::BitOr<num::wrapping::Wrapping<u8>>>::bitor": true,
  "<&num::wrapping::Wrapping<u8> as ops::bit::BitOr>::bitor": true,
  "<&num::wrapping::Wrapping<u8> as ops::bit::BitXor<num::wrapping::Wrapping<u8>>>::bitxor": true,
  "<&num::wrapping::Wrapping<u8> as ops::bit::BitXor>::bitxor": true,
  "<&num::wrapping::Wrapping<u8> as ops::bit::Not>::not": true,
  "<&num::wrapping::Wrapping<u8> as ops::bit::Shl<&usize>>::shl": true,
  "<&num::wrapping::Wrapping<u8> as ops::bit::Shl<usize>>::shl": true,
  "<&num::wrapping::Wrapping<u8> as ops::bit::Shr<&usize>>::shr": true,
  "<&num::wrapping::Wrapping<u8> as ops::bit::Shr<usize>>::shr": true,
  "<&num::wrapping::Wrapping<usize> as ops::arith::Add<num::wrapping::Wrapping<usize>>>::add": true,
  "<&num::wrapping::Wrapping<usize> as ops::arith::Add>::add": true,
  "<&num::wrapping::Wrapping<usize> as ops::arith::Div<num::wrapping::Wrapping<usize>>>::div": true,
  "<&num::wrapping::Wrapping<usize> as ops::arith::Div>::div": true,
  "<&num::wrapping::Wrapping<usize> as ops::arith::Mul<num::wrapping::Wrapping<usize>>>::mul": true,
  "<&num::wrapping::Wrapping<usize> as ops::arith::Mul>::mul": true,
  "<&num::wrapping::Wrapping<usize> as ops::arith::Neg>::neg": true,
  "<&num::wrapping::Wrapping<usize> as ops::arith::Rem<num::wrapping::Wrapping<usize>>>::rem": true,
  "<&num::wrapping::Wrapping<usize> as ops::arith::Rem>::rem": true,
  "<&num::wrapping::Wrapping<usize> as ops::arith::Sub<num::wrapping::Wrapping<usize>>>::sub": true,
  "<&num::wrapping::Wrapping<usize> as ops::arith::Sub>::sub": true,
  "<&num::wrapping::Wrapping<usize> as ops::bit::BitAnd<num::wrapping::Wrapping<usize>>>::bitand": true,
  "<&num::wrapping::Wrapping<usize> as ops::bit::BitAnd>::bitand": true,
  "<&num::wrapping::Wrapping<usize> as ops::bit::BitOr<num::wrapping::Wrapping<usize>>>::bitor": true,
  "<&num::wrapping::Wrapping<usize> as ops::bit::BitOr>::bitor": true,
  "<&num::wrapping::Wrapping<usize> as ops::bit::BitXor<num::wrapping::Wrapping<usize>>>::bitxor": true,
  "<&num::wrapping::Wrapping<usize> as ops::bit::BitXor>::bitxor": true,
  "<&num::wrapping::Wrapping<usize> as ops::bit::Not>::not": true,
  "<&num::wrapping::Wrapping<usize> as ops::bit::Shl<&usize>>::shl": true,
  "<&num::wrapping::Wrapping<usize> as ops::bit::Shl<usize>>::shl": true,
  "<&num::wrapping::Wrapping<usize> as ops::bit::Shr<&usize>>::shr": true,
  "<&num::wrapping::Wrapping<usize> as ops::bit::Shr<usize>>::shr": true,
  "<&os::unix::net::listener::UnixListener as core::iter::IntoIterator>::into_iter": true,
  "<&os::unix::net::stream::UnixStream as io::Read>::is_read_vectored": true,
  "<&os::unix::net::stream::UnixStream as io::Write>::flush": true,
  "<&os::unix::net::stream::UnixStream as io::Write>::is_write_vectored": true,
  "<&os::unix::net::stream::UnixStream as sys::pal::unix::kernel_copy::CopyRead>::properties": true,
  "<&os::unix::net::stream::UnixStream as sys::pal::unix::kernel_copy::CopyWrite>::properties": true,
  "<&process::ChildStdin as io::Write>::flush": true,
  "<&process::ChildStdin as io::Write>::is_write_vectored": true,
  "<&sys::fd::unix::FileDesc as io::Read>::is_read_vectored": true,
  "<&u128 as ops::arith::Add<u128>>::add": true,
  "<&u128 as ops::arith::Add>::add": true,
  "<&u128 as ops::arith::Div<u128>>::div": true,
  "<&u128 as ops::arith::Div>::div": true,
  "<&u128 as ops::arith::Mul<u128>>::mul": true,
  "<&u128 as ops::arith::Mul>::mul": true,
  "<&u128 as ops::arith::Rem<u128>>::rem": true,
  "<&u128 as ops::arith::Rem>::rem": true,
  "<&u128 as ops::arith::Sub<u128>>::sub": true,
  "<&u128 as ops::arith::Sub>::sub": true,
  "<&u128 as ops::bit::BitAnd<u128>>::bitand": true,
  "<&u128 as ops::bit::BitAnd>::bitand": true,
  "<&u128 as ops::bit::BitOr<u128>>::bitor": true,
  "<&u128 as ops::bit::BitOr>::bitor": true,
  "<&u128 as ops::bit::BitXor<u128>>::bitxor": true,
  "<&u128 as ops::bit::BitXor>::bitxor": true,
  "<&u128 as ops::bit::Not>::not": true,
  "<&u128 as ops::bit::Shl<&i128>>::shl": true,
  "<&u128 as ops::bit::Shl<&i16>>::shl": true,
  "<&u128 as ops::bit::Shl<&i32>>::shl": true,
  "<&u128 as ops::bit::Shl<&i64>>::shl": true,
  "<&u128 as ops::bit::Shl<&i8>>::shl": true,
  "<&u128 as ops::bit::Shl<&isize>>::shl": true,
  "<&u128 as ops::bit::Shl<&u16>>::shl": true,
  "<&u128 as ops::bit::Shl<&u32>>::shl": true,
  "<&u128 as ops::bit::Shl<&u64>>::shl": true,
  "<&u128 as ops::bit::Shl<&u8>>::shl": true,
  "<&u128 as ops::bit::Shl<&usize>>::shl": true,
  "<&u128 as ops::bit::Shl<i128>>::shl": true,
  "<&u128 as ops::bit::Shl<i16>>::shl": true,
  "<&u128 as ops::bit::Shl<i32>>::shl": true,
  "<&u128 as ops::bit::Shl<i64>>::shl": true,
  "<&u128 as ops::bit::Shl<i8>>::shl": true,
  "<&u128 as ops::bit::Shl<isize>>::shl": true,
  "<&u128 as ops::bit::Shl<u128>>::shl": true,
  "<&u128 as ops::bit::Shl<u16>>::shl": true,
  "<&u128 as ops::bit::Shl<u32>>::shl": true,
  "<&u128 as ops::bit::Shl<u64>>::shl": true,
  "<&u128 as ops::bit::Shl<u8>>::shl": true,
  "<&u128 as ops::bit::Shl<usize>>::shl": true,
  "<&u128 as ops::bit::Shl>::shl": true,
  "<&u128 as ops::bit::Shr<&i128>>::shr": true,
  "<&u128 as ops::bit::Shr<&i16>>::shr": true,
  "<&u128 as ops::bit::Shr<&i32>>::shr": true,
  "<&u128 as ops::bit::Shr<&i64>>::shr": true,
  "<&u128 as ops::bit::Shr<&i8>>::shr": true,
  "<&u128 as ops::bit::Shr<&isize>>::shr": true,
  "<&u128 as ops::bit::Shr<&u16>>::shr": true,
  "<&u128 as ops::bit::Shr<&u32>>::shr": true,
  "<&u128 as ops::bit::Shr<&u64>>::shr": true,
  "<&u128 as ops::bit::Shr<&u8>>::shr": true,
  "<&u128 as ops::bit::Shr<&usize>>::shr": true,
  "<&u128 as ops::bit::Shr<i128>>::shr": true,
  "<&u128 as ops::bit::Shr<i16>>::shr": true,
  "<&u128 as ops::bit::Shr<i32>>::shr": true,
  "<&u128 as ops::bit::Shr<i64>>::shr": true,
  "<&u128 as ops::bit::Shr<i8>>::shr": true,
  "<&u128 as ops::bit::Shr<isize>>::shr": true,
  "<&u128 as ops::bit::Shr<u128>>::shr": true,
  "<&u128 as ops::bit::Shr<u16>>::shr": true,
  "<&u128 as ops::bit::Shr<u32>>::shr": true,
  "<&u128 as ops::bit::Shr<u64>>::shr": true,
  "<&u128 as ops::bit::Shr<u8>>::shr": true,
  "<&u128 as ops::bit::Shr<usize>>::shr": true,
  "<&u128 as ops::bit::Shr>::shr": true,
  "<&u16 as ops::arith::Add<u16>>::add": true,
  "<&u16 as ops::arith::Add>::add": true,
  "<&u16 as ops::arith::Div<u16>>::div": true,
  "<&u16 as ops::arith::Div>::div": true,
  "<&u16 as ops::arith::Mul<u16>>::mul": true,
  "<&u16 as ops::arith::Mul>::mul": true,
  "<&u16 as ops::arith::Rem<u16>>::rem": true,
  "<&u16 as ops::arith::Rem>::rem": true,
  "<&u16 as ops::arith::Sub<u16>>::sub": true,
  "<&u16 as ops::arith::Sub>::sub": true,
  "<&u16 as ops::bit::BitAnd<u16>>::bitand": true,
  "<&u16 as ops::bit::BitAnd>::bitand": true,
  "<&u16 as ops::bit::BitOr<u16>>::bitor": true,
  "<&u16 as ops::bit::BitOr>::bitor": true,
  "<&u16 as ops::bit::BitXor<u16>>::bitxor": true,
  "<&u16 as ops::bit::BitXor>::bitxor": true,
  "<&u16 as ops::bit::Not>::not": true,
  "<&u16 as ops::bit::Shl<&i128>>::shl": true,
  "<&u16 as ops::bit::Shl<&i16>>::shl": true,
  "<&u16 as ops::bit::Shl<&i32>>::shl": true,
  "<&u16 as ops::bit::Shl<&i64>>::shl": true,
  "<&u16 as ops::bit::Shl<&i8>>::shl": true,
  "<&u16 as ops::bit::Shl<&isize>>::shl": true,
  "<&u16 as ops::bit::Shl<&u128>>::shl": true,
  "<&u16 as ops::bit::Shl<&u32>>::shl": true,
  "<&u16 as ops::bit::Shl<&u64>>::shl": true,
  "<&u16 as ops::bit::Shl<&u8>>::shl": true,
  "<&u16 as ops::bit::Shl<&usize>>::shl": true,
  "<&u16 as ops::bit::Shl<i128>>::shl": true,
  "<&u16 as ops::bit::Shl<i16>>::shl": true,
  "<&u16 as ops::bit::Shl<i32>>::shl": true,
  "<&u16 as ops::bit::Shl<i64>>::shl": true,
  "<&u16 as ops::bit::Shl<i8>>::shl": true,
  "<&u16 as ops::bit::Shl<isize>>::shl": true,
  "<&u16 as ops::bit::Shl<u128>>::shl": true,
  "<&u16 as ops::bit::Shl<u16>>::shl": true,
  "<&u16 as ops::bit::Shl<u32>>::shl": true,
  "<&u16 as ops::bit::Shl<u64>>::shl": true,
  "<&u16 as ops::bit::Shl<u8>>::shl": true,
  "<&u16 as ops::bit::Shl<usize>>::shl": true,
  "<&u16 as ops::bit::Shl>::shl": true,
  "<&u16 as ops::bit::Shr<&i128>>::shr": true,
  "<&u16 as ops::bit::Shr<&i16>>::shr": true,
  "<&u16 as ops::bit::Shr<&i32>>::shr": true,
  "<&u16 as ops::bit::Shr<&i64>>::shr": true,
  "<&u16 as ops::bit::Shr<&i8>>::shr": true,
  "<&u16 as ops::bit::Shr<&isize>>::shr": true,
  "<&u16 as ops::bit::Shr<&u128>>::shr": true,
  "<&u16 as ops::bit::Shr<&u32>>::shr": true,
  "<&u16 as ops::bit::Shr<&u64>>::shr": true,
  "<&u16 as ops::bit::Shr<&u8>>::shr": true,
  "<&u16 as ops::bit::Shr<&usize>>::shr": true,
  "<&u16 as ops::bit::Shr<i128>>::shr": true,
  "<&u16 as ops::bit::Shr<i16>>::shr": true,
  "<&u16 as ops::bit::Shr<i32>>::shr": true,
  "<&u16 as ops::bit::Shr<i64>>::shr": true,
  "<&u16 as ops::bit::Shr<i8>>::shr": true,
  "<&u16 as ops::bit::Shr<isize>>::shr": true,
  "<&u16 as ops::bit::Shr<u128>>::shr": true,
  "<&u16 as ops::bit::Shr<u16>>::shr": true,
  "<&u16 as ops::bit::Shr<u32>>::shr": true,
  "<&u16 as ops::bit::Shr<u64>>::shr": true,
  "<&u16 as ops::bit::Shr<u8>>::shr": true,
  "<&u16 as ops::bit::Shr<usize>>::shr": true,
  "<&u16 as ops::bit::Shr>::shr": true,
  "<&u32 as ops::arith::Add<u32>>::add": true,
  "<&u32 as ops::arith::Add>::add": true,
  "<&u32 as ops::arith::Div<u32>>::div": true,
  "<&u32 as ops::arith::Div>::div": true,
  "<&u32 as ops::arith::Mul<u32>>::mul": true,
  "<&u32 as ops::arith::Mul>::mul": true,
  "<&u32 as ops::arith::Rem<u32>>::rem": true,
  "<&u32 as ops::arith::Rem>::rem": true,
  "<&u32 as ops::arith::Sub<u32>>::sub": true,
  "<&u32 as ops::arith::Sub>::sub": true,
  "<&u32 as ops::bit::BitAnd<u32>>::bitand": true,
  "<&u32 as ops::bit::BitAnd>::bitand": true,
  "<&u32 as ops::bit::BitOr<u32>>::bitor": true,
  "<&u32 as ops::bit::BitOr>::bitor": true,
  "<&u32 as ops::bit::BitXor<u32>>::bitxor": true,
  "<&u32 as ops::bit::BitXor>::bitxor": true,
  "<&u32 as ops::bit::Not>::not": true,
  "<&u32 as ops::bit::Shl<&i128>>::shl": true,
  "<&u32 as ops::bit::Shl<&i16>>::shl": true,
  "<&u32 as ops::bit::Shl<&i32>>::shl": true,
  "<&u32 as ops::bit::Shl<&i64>>::shl": true,
  "<&u32 as ops::bit::Shl<&i8>>::shl": true,
  "<&u32 as ops::bit::Shl<&isize>>::shl": true,
  "<&u32 as ops::bit::Shl<&u128>>::shl": true,
  "<&u32 as ops::bit::Shl<&u16>>::shl": true,
  "<&u32 as ops::bit::Shl<&u64>>::shl": true,
  "<&u32 as ops::bit::Shl<&u8>>::shl": true,
  "<&u32 as ops::bit::Shl<&usize>>::shl": true,
  "<&u32 as ops::bit::Shl<i128>>::shl": true,
  "<&u32 as ops::bit::Shl<i16>>::shl": true,
  "<&u32 as ops::bit::Shl<i32>>::shl": true,
  "<&u32 as ops::bit::Shl<i64>>::shl": true,
  "<&u32 as ops::bit::Shl<i8>>::shl": true,
  "<&u32 as ops::bit::Shl<isize>>::shl": true,
  "<&u32 as ops::bit::Shl<u128>>::shl": true,
  "<&u32 as ops::bit::Shl<u16>>::shl": true,
  "<&u32 as ops::bit::Shl<u32>>::shl": true,
  "<&u32 as ops::bit::Shl<u64>>::shl": true,
  "<&u32 as ops::bit::Shl<u8>>::shl": true,
  "<&u32 as ops::bit::Shl<usize>>::shl": true,
  "<&u32 as ops::bit::Shl>::shl": true,
  "<&u32 as ops::bit::Shr<&i128>>::shr": true,
  "<&u32 as ops::bit::Shr<&i16>>::shr": true,
  "<&u32 as ops::bit::Shr<&i32>>::shr": true,
  "<&u32 as ops::bit::Shr<&i64>>::shr": true,
  "<&u32 as ops::bit::Shr<&i8>>::shr": true,
  "<&u32 as ops::bit::Shr<&isize>>::shr": true,
  "<&u32 as ops::bit::Shr<&u128>>::shr": true,
  "<&u32 as ops::bit::Shr<&u16>>::shr": true,
  "<&u32 as ops::bit::Shr<&u64>>::shr": true,
  "<&u32 as ops::bit::Shr<&u8>>::shr": true,
  "<&u32 as ops::bit::Shr<&usize>>::shr": true,
  "<&u32 as ops::bit::Shr<i128>>::shr": true,
  "<&u32 as ops::bit::Shr<i16>>::shr": true,
  "<&u32 as ops::bit::Shr<i32>>::shr": true,
  "<&u32 as ops::bit::Shr<i64>>::shr": true,
  "<&u32 as ops::bit::Shr<i8>>::shr": true,
  "<&u32 as ops::bit::Shr<isize>>::shr": true,
  "<&u32 as ops::bit::Shr<u128>>::shr": true,
  "<&u32 as ops::bit::Shr<u16>>::shr": true,
  "<&u32 as ops::bit::Shr<u32>>::shr": true,
  "<&u32 as ops::bit::Shr<u64>>::shr": true,
  "<&u32 as ops::bit::Shr<u8>>::shr": true,
  "<&u32 as ops::bit::Shr<usize>>::shr": true,
  "<&u32 as ops::bit::Shr>::shr": true,
  "<&u64 as ops::arith::Add<u64>>::add": true,
  "<&u64 as ops::arith::Add>::add": true,
  "<&u64 as ops::arith::Div<u64>>::div": true,
  "<&u64 as ops::arith::Div>::div": true,
  "<&u64 as ops::arith::Mul<u64>>::mul": true,
  "<&u64 as ops::arith::Mul>::mul": true,
  "<&u64 as ops::arith::Rem<u64>>::rem": true,
  "<&u64 as ops::arith::Rem>::rem": true,
  "<&u64 as ops::arith::Sub<u64>>::sub": true,
  "<&u64 as ops::arith::Sub>::sub": true,
  "<&u64 as ops::bit::BitAnd<u64>>::bitand": true,
  "<&u64 as ops::bit::BitAnd>::bitand": true,
  "<&u64 as ops::bit::BitOr<u64>>::bitor": true,
  "<&u64 as ops::bit::BitOr>::bitor": true,
  "<&u64 as ops::bit::BitXor<u64>>::bitxor": true,
  "<&u64 as ops::bit::BitXor>::bitxor": true,
  "<&u64 as ops::bit::Not>::not": true,
  "<&u64 as ops::bit::Shl<&i128>>::shl": true,
  "<&u64 as ops::bit::Shl<&i16>>::shl": true,
  "<&u64 as ops::bit::Shl<&i32>>::shl": true,
  "<&u64 as ops::bit::Shl<&i64>>::shl": true,
  "<&u64 as ops::bit::Shl<&i8>>::shl": true,
  "<&u64 as ops::bit::Shl<&isize>>::shl": true,
  "<&u64 as ops::bit::Shl<&u128>>::shl": true,
  "<&u64 as ops::bit::Shl<&u16>>::shl": true,
  "<&u64 as ops::bit::Shl<&u32>>::shl": true,
  "<&u64 as ops::bit::Shl<&u8>>::shl": true,
  "<&u64 as ops::bit::Shl<&usize>>::shl": true,
  "<&u64 as ops::bit::Shl<i128>>::shl": true,
  "<&u64 as ops::bit::Shl<i16>>::shl": true,
  "<&u64 as ops::bit::Shl<i32>>::shl": true,
  "<&u64 as ops::bit::Shl<i64>>::shl": true,
  "<&u64 as ops::bit::Shl<i8>>::shl": true,
  "<&u64 as ops::bit::Shl<isize>>::shl": true,
  "<&u64 as ops::bit::Shl<u128>>::shl": true,
  "<&u64 as ops::bit::Shl<u16>>::shl": true,
  "<&u64 as ops::bit::Shl<u32>>::shl": true,
  "<&u64 as ops::bit::Shl<u64>>::shl": true,
  "<&u64 as ops::bit::Shl<u8>>::shl": true,
  "<&u64 as ops::bit::Shl<usize>>::shl": true,
  "<&u64 as ops::bit::Shl>::shl": true,
  "<&u64 as ops::bit::Shr<&i128>>::shr": true,
  "<&u64 as ops::bit::Shr<&i16>>::shr": true,
  "<&u64 as ops::bit::Shr<&i32>>::shr": true,
  "<&u64 as ops::bit::Shr<&i64>>::shr": true,
  "<&u64 as ops::bit::Shr<&i8>>::shr": true,
  "<&u64 as ops::bit::Shr<&isize>>::shr": true,
  "<&u64 as ops::bit::Shr<&u128>>::shr": true,
  "<&u64 as ops::bit::Shr<&u16>>::shr": true,
  "<&u64 as ops::bit::Shr<&u32>>::shr": true,
  "<&u64 as ops::bit::Shr<&u8>>::shr": true,
  "<&u64 as ops::bit::Shr<&usize>>::shr": true,
  "<&u64 as ops::bit::Shr<i128>>::shr": true,
  "<&u64 as ops::bit::Shr<i16>>::shr": true,
  "<&u64 as ops::bit::Shr<i32>>::shr": true,
  "<&u64 as ops::bit::Shr<i64>>::shr": true,
  "<&u64 as ops::bit::Shr<i8>>::shr": true,
  "<&u64 as ops::bit::Shr<isize>>::shr": true,
  "<&u64 as ops::bit::Shr<u128>>::shr": true,
  "<&u64 as ops::bit::Shr<u16>>::shr": true,
  "<&u64 as ops::bit::Shr<u32>>::shr": true,
  "<&u64 as ops::bit::Shr<u64>>::shr": true,
  "<&u64 as ops::bit::Shr<u8>>::shr": true,
  "<&u64 as ops::bit::Shr<usize>>::shr": true,
  "<&u64 as ops::bit::Shr>::shr": true,
  "<&u8 as ops::arith::Add<u8>>::add": true,
  "<&u8 as ops::arith::Add>::add": true,
  "<&u8 as ops::arith::Div<u8>>::div": true,
  "<&u8 as ops::arith::Div>::div": true,
  "<&u8 as ops::arith::Mul<u8>>::mul": true,
  "<&u8 as ops::arith::Mul>::mul": true,
  "<&u8 as ops::arith::Rem<u8>>::rem": true,
  "<&u8 as ops::arith::Rem>::rem": true,
  "<&u8 as ops::arith::Sub<u8>>::sub": true,
  "<&u8 as ops::arith::Sub>::sub": true,
  "<&u8 as ops::bit::BitAnd<u8>>::bitand": true,
  "<&u8 as ops::bit::BitAnd>::bitand": true,
  "<&u8 as ops::bit::BitOr<u8>>::bitor": true,
  "<&u8 as ops::bit::BitOr>::bitor": true,
  "<&u8 as ops::bit::BitXor<u8>>::bitxor": true,
  "<&u8 as ops::bit::BitXor>::bitxor": true,
  "<&u8 as ops::bit::Not>::not": true,
  "<&u8 as ops::bit::Shl<&i128>>::shl": true,
  "<&u8 as ops::bit::Shl<&i16>>::shl": true,
  "<&u8 as ops::bit::Shl<&i32>>::shl": true,
  "<&u8 as ops::bit::Shl<&i64>>::shl": true,
  "<&u8 as ops::bit::Shl<&i8>>::shl": true,
  "<&u8 as ops::bit::Shl<&isize>>::shl": true,
  "<&u8 as ops::bit::Shl<&u128>>::shl": true,
  "<&u8 as ops::bit::Shl<&u16>>::shl": true,
  "<&u8 as ops::bit::Shl<&u32>>::shl": true,
  "<&u8 as ops::bit::Shl<&u64>>::shl": true,
  "<&u8 as ops::bit::Shl<&usize>>::shl": true,
  "<&u8 as ops::bit::Shl<i128>>::shl": true,
  "<&u8 as ops::bit::Shl<i16>>::shl": true,
  "<&u8 as ops::bit::Shl<i32>>::shl": true,
  "<&u8 as ops::bit::Shl<i64>>::shl": true,
  "<&u8 as ops::bit::Shl<i8>>::shl": true,
  "<&u8 as ops::bit::Shl<isize>>::shl": true,
  "<&u8 as ops::bit::Shl<u128>>::shl": true,
  "<&u8 as ops::bit::Shl<u16>>::shl": true,
  "<&u8 as ops::bit::Shl<u32>>::shl": true,
  "<&u8 as ops::bit::Shl<u64>>::shl": true,
  "<&u8 as ops::bit::Shl<u8>>::shl": true,
  "<&u8 as ops::bit::Shl<usize>>::shl": true,
  "<&u8 as ops::bit::Shl>::shl": true,
  "<&u8 as ops::bit::Shr<&i128>>::shr": true,
  "<&u8 as ops::bit::Shr<&i16>>::shr": true,
  "<&u8 as ops::bit::Shr<&i32>>::shr": true,
  "<&u8 as ops::bit::Shr<&i64>>::shr": true,
  "<&u8 as ops::bit::Shr<&i8>>::shr": true,
  "<&u8 as ops::bit::Shr<&isize>>::shr": true,
  "<&u8 as ops::bit::Shr<&u128>>::shr": true,
  "<&u8 as ops::bit::Shr<&u16>>::shr": true,
  "<&u8 as ops::bit::Shr<&u32>>::shr": true,
  "<&u8 as ops::bit::Shr<&u64>>::shr": true,
  "<&u8 as ops::bit::Shr<&usize>>::shr": true,
  "<&u8 as ops::bit::Shr<i128>>::shr": true,
  "<&u8 as ops::bit::Shr<i16>>::shr": true,
  "<&u8 as ops::bit::Shr<i32>>::shr": true,
  "<&u8 as ops::bit::Shr<i64>>::shr": true,
  "<&u8 as ops::bit::Shr<i8>>::shr": true,
  "<&u8 as ops::bit::Shr<isize>>::shr": true,
  "<&u8 as ops::bit::Shr<u128>>::shr": true,
  "<&u8 as ops::bit::Shr<u16>>::shr": true,
  "<&u8 as ops::bit::Shr<u32>>::shr": true,
  "<&u8 as ops::bit::Shr<u64>>::shr": true,
  "<&u8 as ops::bit::Shr<u8>>::shr": true,
  "<&u8 as ops::bit::Shr<usize>>::shr": true,
  "<&u8 as ops::bit::Shr>::shr": true,
  "<&usize as ops::arith::Add<usize>>::add": true,
  "<&usize as ops::arith::Add>::add": true,
  "<&usize as ops::arith::Div<usize>>::div": true,
  "<&usize as ops::arith::Div>::div": true,
  "<&usize as ops::arith::Mul<usize>>::mul": true,
  "<&usize as ops::arith::Mul>::mul": true,
  "<&usize as ops::arith::Rem<usize>>::rem": true,
  "<&usize as ops::arith::Rem>::rem": true,
  "<&usize as ops::arith::Sub<usize>>::sub": true,
  "<&usize as ops::arith::Sub>::sub": true,
  "<&usize as ops::bit::BitAnd<usize>>::bitand": true,
  "<&usize as ops::bit::BitAnd>::bitand": true,
  "<&usize as ops::bit::BitOr<usize>>::bitor": true,
  "<&usize as ops::bit::BitOr>::bitor": true,
  "<&usize as ops::bit::BitXor<usize>>::bitxor": true,
  "<&usize as ops::bit::BitXor>::bitxor": true,
  "<&usize as ops::bit::Not>::not": true,
  "<&usize as ops::bit::Shl<&i128>>::shl": true,
  "<&usize as ops::bit::Shl<&i16>>::shl": true,
  "<&usize as ops::bit::Shl<&i32>>::shl": true,
  "<&usize as ops::bit::Shl<&i64>>::shl": true,
  "<&usize as ops::bit::Shl<&i8>>::shl": true,
  "<&usize as ops::bit::Shl<&isize>>::shl": true,
  "<&usize as ops::bit::Shl<&u128>>::shl": true,
  "<&usize as ops::bit::Shl<&u16>>::shl": true,
  "<&usize as ops::bit::Shl<&u32>>::shl": true,
  "<&usize as ops::bit::Shl<&u64>>::shl": true,
  "<&usize as ops::bit::Shl<&u8>>::shl": true,
  "<&usize as ops::bit::Shl<i128>>::shl": true,
  "<&usize as ops::bit::Shl<i16>>::shl": true,
  "<&usize as ops::bit::Shl<i32>>::shl": true,
  "<&usize as ops::bit::Shl<i64>>::shl": true,
  "<&usize as ops::bit::Shl<i8>>::shl": true,
  "<&usize as ops::bit::Shl<isize>>::shl": true,
  "<&usize as ops::bit::Shl<u128>>::shl": true,
  "<&usize as ops::bit::Shl<u16>>::shl": true,
  "<&usize as ops::bit::Shl<u32>>::shl": true,
  "<&usize as ops::bit::Shl<u64>>::shl": true,
  "<&usize as ops::bit::Shl<u8>>::shl": true,
  "<&usize as ops::bit::Shl<usize>>::shl": true,
  "<&usize as ops::bit::Shl>::shl": true,
  "<&usize as ops::bit::Shr<&i128>>::shr": true,
  "<&usize as ops::bit::Shr<&i16>>::shr": true,
  "<&usize as ops::bit::Shr<&i32>>::shr": true,
  "<&usize as ops::bit::Shr<&i64>>::shr": true,
  "<&usize as ops::bit::Shr<&i8>>::shr": true,
  "<&usize as ops::bit::Shr<&isize>>::shr": true,
  "<&usize as ops::bit::Shr<&u128>>::shr": true,
  "<&usize as ops::bit::Shr<&u16>>::shr": true,
  "<&usize as ops::bit::Shr<&u32>>::shr": true,
  "<&usize as ops::bit::Shr<&u64>>::shr": true,
  "<&usize as ops::bit::Shr<&u8>>::shr": true,
  "<&usize as ops::bit::Shr<i128>>::shr": true,
  "<&usize as ops::bit::Shr<i16>>::shr": true,
  "<&usize as ops::bit::Shr<i32>>::shr": true,
  "<&usize as ops::bit::Shr<i64>>::shr": true,
  "<&usize as ops::bit::Shr<i8>>::shr": true,
  "<&usize as ops::bit::Shr<isize>>::shr": true,
  "<&usize as ops::bit::Shr<u128>>::shr": true,
  "<&usize as ops::bit::Shr<u16>>::shr": true,
  "<&usize as ops::bit::Shr<u32>>::shr": true,
  "<&usize as ops::bit::Shr<u64>>::shr": true,
  "<&usize as ops::bit::Shr<u8>>::shr": true,
  "<&usize as ops::bit::Shr<usize>>::shr": true,
  "<&usize as ops::bit::Shr>::shr": true,
  "<() as bridge::Mark>::mark": true,
  "<() as bridge::Unmark>::unmark": true,
  "<() as default::Default>::default": true,
  "<() as iter::traits::collect::Extend<()>>::extend_one": true,
  "<() as process::Termination>::report": true,
  "<() as ub_checks::Invariant>::is_safe": true,
  "<() as unit::IsUnit>::is_unit": true,
  "<<net::ip_addr::Ipv6Addr as fmt::Display>::fmt::Span as clone::Clone>::clone": true,
  "<<net::ip_addr::Ipv6Addr as fmt::Display>::fmt::Span as default::Default>::default": true,
  "<Adler32 as rustc_std_workspace_core::clone::Clone>::clone": true,
  "<Adler32 as rustc_std_workspace_core::default::Default>::default": true,
  "<Adler32 as rustc_std_workspace_core::hash::Hasher>::finish": true,
  "<ConversionErrorKind as std::cmp::Eq>::assert_receiver_is_total_eq": true,
  "<ConversionErrorKind as std::cmp::PartialEq>::eq": true,
  "<DataFormat as rustc_std_workspace_core::clone::Clone>::clone": true,
  "<DataFormat as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq": true,
  "<DataFormat as rustc_std_workspace_core::cmp::PartialEq>::eq": true,
  "<DebugFile as rustc_std_workspace_core::clone::Clone>::clone": true,
  "<DebugFile as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq": true,
  "<DebugFile as rustc_std_workspace_core::cmp::PartialEq>::eq": true,
  "<Delimiter as bridge::Mark>::mark": true,
  "<Delimiter as bridge::Unmark>::unmark": true,
  "<Delimiter as std::clone::Clone>::clone": true,
  "<Delimiter as std::cmp::Eq>::assert_receiver_is_total_eq": true,
  "<Delimiter as std::cmp::PartialEq>::eq": true,
  "<EscapeError as rustc_std_workspace_std::cmp::Eq>::assert_receiver_is_total_eq": true,
  "<EscapeError as rustc_std_workspace_std::cmp::PartialEq>::eq": true,
  "<Group as std::clone::Clone>::clone": true,
  "<Group as to_tokens::ToTokens>::to_tokens": true,
  "<Ident as std::clone::Clone>::clone": true,
  "<Ident as to_tokens::ToTokens>::to_tokens": true,
  "<Literal as std::clone::Clone>::clone": true,
  "<Literal as to_tokens::ToTokens>::to_tokens": true,
  "<MZError as rustc_std_workspace_core::clone::Clone>::clone": true,
  "<MZError as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq": true,
  "<MZError as rustc_std_workspace_core::cmp::PartialEq>::eq": true,
  "<MZFlush as rustc_std_workspace_core::clone::Clone>::clone": true,
  "<MZFlush as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq": true,
  "<MZFlush as rustc_std_workspace_core::cmp::PartialEq>::eq": true,
  "<MZStatus as rustc_std_workspace_core::clone::Clone>::clone": true,
  "<MZStatus as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq": true,
  "<MZStatus as rustc_std_workspace_core::cmp::PartialEq>::eq": true,
  "<MixedUnit as rustc_std_workspace_std::clone::Clone>::clone": true,
  "<MixedUnit as rustc_std_workspace_std::cmp::Eq>::assert_receiver_is_total_eq": true,
  "<MixedUnit as rustc_std_workspace_std::cmp::PartialEq>::eq": true,
  "<MixedUnit as rustc_std_workspace_std::convert::From<rustc_std_workspace_std::num::NonZero<char>>>::from": true,
  "<MixedUnit as rustc_std_workspace_std::convert::From<rustc_std_workspace_std::num::NonZero<u8>>>::from": true,
  "<MixedUnit as rustc_std_workspace_std::convert::TryFrom<char>>::try_from": true,
  "<MixedUnit as rustc_std_workspace_std::convert::TryFrom<u8>>::try_from": true,
  "<Mode as rustc_std_workspace_std::clone::Clone>::clone": true,
  "<Mode as rustc_std_workspace_std::cmp::PartialEq>::eq": true,
  "<Punct as std::clone::Clone>::clone": true,
  "<Punct as std::cmp::PartialEq<char>>::eq": true,
  "<Punct as to_tokens::ToTokens>::to_tokens": true,
  "<SizeLimitExhausted as rustc_std_workspace_core::clone::Clone>::clone": true,
  "<Spacing as bridge::Mark>::mark": true,
  "<Spacing as bridge::Unmark>::unmark": true,
  "<Spacing as std::clone::Clone>::clone": true,
  "<Spacing as std::cmp::Eq>::assert_receiver_is_total_eq": true,
  "<Spacing as std::cmp::PartialEq>::eq": true,
  "<Span as diagnostic::MultiSpan>::into_spans": true,
  "<Span as std::clone::Clone>::clone": true,
  "<TokenStream as std::clone::Clone>::clone": true,
  "<TokenStream as std::convert::From<TokenTree>>::from": true,
  "<TokenStream as std::default::Default>::default": true,
  "<TokenStream as to_tokens::ToTokens>::into_token_stream": true,
  "<TokenStream as to_tokens::ToTokens>::to_tokens": true,
  "<TokenTree as std::clone::Clone>::clone": true,
  "<TokenTree as std::convert::From<Group>>::from": true,
  "<TokenTree as std::convert::From<Ident>>::from": true,
  "<TokenTree as std::convert::From<Literal>>::from": true,
  "<TokenTree as std::convert::From<Punct>>::from": true,
  "<TokenTree as to_tokens::ToTokens>::into_token_stream": true,
  "<TokenTree as to_tokens::ToTokens>::to_tokens": true,
  "<TryDemangleError as rustc_std_workspace_core::clone::Clone>::clone": true,
  "<TryReserveError as rustc_std_workspace_core::clone::Clone>::clone": true,
  "<TryReserveError as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq": true,
  "<TryReserveError as rustc_std_workspace_core::cmp::PartialEq>::eq": true,
  "<[u8] as CheckRaw>::char2raw_unit": true,
  "<[u8] as Unescape>::char2unit": true,
  "<[u8] as Unescape>::hex2unit": true,
  "<[u8] as Unescape>::nonzero_byte2unit": true,
  "<[u8] as Unescape>::unicode2unit": true,
  "<algo::U32X4 as rustc_std_workspace_core::clone::Clone>::clone": true,
  "<algo::U32X4 as rustc_std_workspace_core::ops::AddAssign>::add_assign": true,
  "<algo::U32X4 as rustc_std_workspace_core::ops::MulAssign<u32>>::mul_assign": true,
  "<algo::U32X4 as rustc_std_workspace_core::ops::RemAssign<u32>>::rem_assign": true,
  "<alloc::AllocError as clone::Clone>::clone": true,
  "<alloc::AllocError as cmp::Eq>::assert_receiver_is_total_eq": true,
  "<alloc::AllocError as cmp::PartialEq>::eq": true,
  "<alloc::Global as core::alloc::Allocator>::allocate": true,
  "<alloc::Global as core::alloc::Allocator>::allocate_zeroed": true,
  "<alloc::Global as core::alloc::Allocator>::deallocate": true,
  "<alloc::Global as core::alloc::Allocator>::grow": true,
  "<alloc::Global as core::alloc::Allocator>::grow_zeroed": true,
  "<alloc::Global as core::alloc::Allocator>::shrink": true,
  "<alloc::Global as core::clone::Clone>::clone": true,
  "<alloc::Global as core::default::Default>::default": true,
  "<alloc::System as core::alloc::Allocator>::allocate": true,
  "<alloc::System as core::alloc::Allocator>::allocate_zeroed": true,
  "<alloc::System as core::clone::Clone>::clone": true,
  "<alloc::System as core::default::Default>::default": true,
  "<alloc::layout::Layout as clone::Clone>::clone": true,
  "<alloc::layout::Layout as cmp::Eq>::assert_receiver_is_total_eq": true,
  "<alloc::layout::Layout as cmp::PartialEq>::eq": true,
  "<alloc::layout::Layout as ub_checks::Invariant>::is_safe": true,
  "<alloc::layout::LayoutError as clone::Clone>::clone": true,
  "<alloc::layout::LayoutError as cmp::Eq>::assert_receiver_is_total_eq": true,
  "<alloc::layout::LayoutError as cmp::PartialEq>::eq": true,
  "<arch::AArch64 as rustc_std_workspace_core::clone::Clone>::clone": true,
  "<arch::Arm as rustc_std_workspace_core::clone::Clone>::clone": true,
  "<arch::LoongArch as rustc_std_workspace_core::clone::Clone>::clone": true,
  "<arch::MIPS as rustc_std_workspace_core::clone::Clone>::clone": true,
  "<arch::PowerPc64 as rustc_std_workspace_core::clone::Clone>::clone": true,
  "<arch::RiscV as rustc_std_workspace_core::clone::Clone>::clone": true,
  "<arch::X86 as rustc_std_workspace_core::clone::Clone>::clone": true,
  "<arch::X86_64 as rustc_std_workspace_core::clone::Clone>::clone": true,
  "<arch::all::memchr::One as rustc_std_workspace_core::clone::Clone>::clone": true,
  "<arch::all::memchr::Three as rustc_std_workspace_core::clone::Clone>::clone": true,
  "<arch::all::memchr::Two as rustc_std_workspace_core::clone::Clone>::clone": true,
  "<arch::all::packedpair::DefaultFrequencyRank as arch::all::packedpair::HeuristicFrequencyRank>::rank": true,
  "<arch::all::packedpair::Finder as rustc_std_workspace_core::clone::Clone>::clone": true,
  "<arch::all::packedpair::Pair as rustc_std_workspace_core::clone::Clone>::clone": true,
  "<arch::all::rabinkarp::Finder as rustc_std_workspace_core::clone::Clone>::clone": true,
  "<arch::all::rabinkarp::FinderRev as rustc_std_workspace_core::clone::Clone>::clone": true,
  "<arch::all::rabinkarp::Hash as rustc_std_workspace_core::clone::Clone>::clone": true,
  "<arch::all::rabinkarp::Hash as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq": true,
  "<arch::all::rabinkarp::Hash as rustc_std_workspace_core::cmp::PartialEq>::eq": true,
  "<arch::all::rabinkarp::Hash as rustc_std_workspace_core::default::Default>::default": true,
  "<arch::all::twoway::ApproximateByteSet as rustc_std_workspace_core::clone::Clone>::clone": true,
  "<arch::all::twoway::Finder as rustc_std_workspace_core::clone::Clone>::clone": true,
  "<arch::all::twoway::FinderRev as rustc_std_workspace_core::clone::Clone>::clone": true,
  "<arch::all::twoway::Shift as rustc_std_workspace_core::clone::Clone>::clone": true,
  "<arch::all::twoway::SuffixKind as rustc_std_workspace_core::clone::Clone>::clone": true,
  "<arch::all::twoway::SuffixOrdering as rustc_std_workspace_core::clone::Clone>::clone": true,
  "<arch::all::twoway::TwoWay as rustc_std_workspace_core::clone::Clone>::clone": true,
  "<arch::x86_64::avx2::memchr::One as rustc_std_workspace_core::clone::Clone>::clone": true,
  "<arch::x86_64::avx2::memchr::Three as rustc_std_workspace_core::clone::Clone>::clone": true,
  "<arch::x86_64::avx2::memchr::Two as rustc_std_workspace_core::clone::Clone>::clone": true,
  "<arch::x86_64::avx2::packedpair::Finder as rustc_std_workspace_core::clone::Clone>::clone": true,
  "<arch::x86_64::sse2::memchr::One as rustc_std_workspace_core::clone::Clone>::clone": true,
  "<arch::x86_64::sse2::memchr::Three as rustc_std_workspace_core::clone::Clone>::clone": true,
  "<arch::x86_64::sse2::memchr::Two as rustc_std_workspace_core::clone::Clone>::clone": true,
  "<arch::x86_64::sse2::packedpair::Finder as rustc_std_workspace_core::clone::Clone>::clone": true,
  "<archive::AixFileHeader as rustc_std_workspace_core::clone::Clone>::clone": true,
  "<archive::AixHeader as rustc_std_workspace_core::clone::Clone>::clone": true,
  "<archive::AixMemberOffset as rustc_std_workspace_core::clone::Clone>::clone": true,
  "<archive::Header as rustc_std_workspace_core::clone::Clone>::clone": true,
  "<array::TryFromSliceError as clone::Clone>::clone": true,
  "<ascii::ascii_char::AsciiChar as clone::Clone>::clone": true,
  "<ascii::ascii_char::AsciiChar as cmp::Eq>::assert_receiver_is_total_eq": true,
  "<ascii::ascii_char::AsciiChar as cmp::Ord>::cmp": true,
  "<ascii::ascii_char::AsciiChar as cmp::PartialEq>::eq": true,
  "<ascii::ascii_char::AsciiChar as cmp::PartialOrd>::partial_cmp": true,
  "<ascii::ascii_char::AsciiChar as default::Default>::default": true,
  "<ascii::ascii_char::AsciiChar as fmt::Debug>::fmt::backslash": true,
  "<ascii::ascii_char::AsciiChar as iter::range::Step>::backward_checked": true,
  "<ascii::ascii_char::AsciiChar as iter::range::Step>::forward_checked": true,
  "<ascii::ascii_char::AsciiChar as iter::range::Step>::steps_between": true,
  "<backtrace::BacktraceStatus as core::cmp::Eq>::assert_receiver_is_total_eq": true,
  "<backtrace::BacktraceStatus as core::cmp::PartialEq>::eq": true,
  "<backtrace_rs::backtrace::libunwind::Bomb as core::ops::Drop>::drop": true,
  "<backtrace_rs::print::PrintFmt as core::clone::Clone>::clone": true,
  "<backtrace_rs::print::PrintFmt as core::cmp::Eq>::assert_receiver_is_total_eq": true,
  "<backtrace_rs::print::PrintFmt as core::cmp::PartialEq>::eq": true,
  "<backtrace_rs::symbolize::gimli::Cache as core::default::Default>::default": true,
  "<bool as bridge::Mark>::mark": true,
  "<bool as bridge::Unmark>::unmark": true,
  "<bool as default::Default>::default": true,
  "<bool as ops::bit::BitAnd<&bool>>::bitand": true,
  "<bool as ops::bit::BitAnd>::bitand": true,
  "<bool as ops::bit::BitAndAssign<&bool>>::bitand_assign": true,
  "<bool as ops::bit::BitAndAssign>::bitand_assign": true,
  "<bool as ops::bit::BitOr<&bool>>::bitor": true,
  "<bool as ops::bit::BitOr>::bitor": true,
  "<bool as ops::bit::BitOrAssign<&bool>>::bitor_assign": true,
  "<bool as ops::bit::BitOrAssign>::bitor_assign": true,
  "<bool as ops::bit::BitXor<&bool>>::bitxor": true,
  "<bool as ops::bit::BitXor>::bitxor": true,
  "<bool as ops::bit::BitXorAssign<&bool>>::bitxor_assign": true,
  "<bool as ops::bit::BitXorAssign>::bitxor_assign": true,
  "<bool as ops::bit::Not>::not": true,
  "<bool as string::SpecToString>::spec_to_string": true,
  "<bool as to_tokens::ToTokens>::to_tokens": true,
  "<bool as ub_checks::Invariant>::is_safe": true,
  "<bool as vec::is_zero::IsZero>::is_zero": true,
  "<boxed::Box<str> as core::default::Default>::default": true,
  "<bridge::LitKind as bridge::Mark>::mark": true,
  "<bridge::LitKind as bridge::Unmark>::unmark": true,
  "<bridge::LitKind as std::clone::Clone>::clone": true,
  "<bridge::LitKind as std::cmp::Eq>::assert_receiver_is_total_eq": true,
  "<bridge::LitKind as std::cmp::PartialEq>::eq": true,
  "<bridge::buffer::Buffer as std::default::Default>::default": true,
  "<bridge::client::FreeFunctions as std::ops::Drop>::drop": true,
  "<bridge::client::Span as std::clone::Clone>::clone": true,
  "<bridge::client::Span as std::cmp::Eq>::assert_receiver_is_total_eq": true,
  "<bridge::client::Span as std::cmp::PartialEq>::eq": true,
  "<bridge::client::TokenStream as std::clone::Clone>::clone": true,
  "<bridge::client::TokenStream as std::ops::Drop>::drop": true,
  "<bridge::fxhash::FxHasher as std::default::Default>::default": true,
  "<bridge::fxhash::FxHasher as std::hash::Hasher>::finish": true,
  "<bridge::fxhash::FxHasher as std::hash::Hasher>::write_u16": true,
  "<bridge::fxhash::FxHasher as std::hash::Hasher>::write_u32": true,
  "<bridge::fxhash::FxHasher as std::hash::Hasher>::write_u64": true,
  "<bridge::fxhash::FxHasher as std::hash::Hasher>::write_u8": true,
  "<bridge::fxhash::FxHasher as std::hash::Hasher>::write_usize": true,
  "<bridge::server::RunningSameThreadGuard as std::ops::Drop>::drop": true,
  "<bridge::symbol::Symbol as std::clone::Clone>::clone": true,
  "<bridge::symbol::Symbol as std::cmp::Eq>::assert_receiver_is_total_eq": true,
  "<bridge::symbol::Symbol as std::cmp::PartialEq>::eq": true,
  "<bstr::ByteString as core::default::Default>::default": true,
  "<char as ascii::AsciiExt>::eq_ignore_ascii_case": true,
  "<char as ascii::AsciiExt>::is_ascii": true,
  "<char as ascii::AsciiExt>::make_ascii_lowercase": true,
  "<char as ascii::AsciiExt>::make_ascii_uppercase": true,
  "<char as ascii::AsciiExt>::to_ascii_lowercase": true,
  "<char as ascii::AsciiExt>::to_ascii_uppercase": true,
  "<char as bridge::Mark>::mark": true,
  "<char as bridge::Unmark>::unmark": true,
  "<char as default::Default>::default": true,
  "<char as iter::range::Step>::backward_checked": true,
  "<char as iter::range::Step>::forward_checked": true,
  "<char as iter::range::Step>::steps_between": true,
  "<char as pat::RangePattern>::sub_one": true,
  "<char as str::pattern::Pattern>::as_utf8_pattern": true,
  "<char as string::SpecToString>::spec_to_string": true,
  "<char as to_tokens::ToTokens>::to_tokens": true,
  "<char as ub_checks::Invariant>::is_safe": true,
  "<char as vec::is_zero::IsZero>::is_zero": true,
  "<char::CaseMappingIter as clone::Clone>::clone": true,
  "<char::CaseMappingIter as iter::traits::double_ended::DoubleEndedIterator>::advance_back_by": true,
  "<char::CaseMappingIter as iter::traits::double_ended::DoubleEndedIterator>::next_back": true,
  "<char::CaseMappingIter as iter::traits::exact_size::ExactSizeIterator>::is_empty": true,
  "<char::CaseMappingIter as iter::traits::exact_size::ExactSizeIterator>::len": true,
  "<char::CaseMappingIter as iter::traits::iterator::Iterator>::advance_by": true,
  "<char::CaseMappingIter as iter::traits::iterator::Iterator>::count": true,
  "<char::CaseMappingIter as iter::traits::iterator::Iterator>::last": true,
  "<char::CaseMappingIter as iter::traits::iterator::Iterator>::next": true,
  "<char::CaseMappingIter as iter::traits::iterator::Iterator>::size_hint": true,
  "<char::ToLowercase as clone::Clone>::clone": true,
  "<char::ToLowercase as iter::traits::double_ended::DoubleEndedIterator>::advance_back_by": true,
  "<char::ToLowercase as iter::traits::double_ended::DoubleEndedIterator>::next_back": true,
  "<char::ToLowercase as iter::traits::exact_size::ExactSizeIterator>::is_empty": true,
  "<char::ToLowercase as iter::traits::exact_size::ExactSizeIterator>::len": true,
  "<char::ToLowercase as iter::traits::iterator::Iterator>::advance_by": true,
  "<char::ToLowercase as iter::traits::iterator::Iterator>::count": true,
  "<char::ToLowercase as iter::traits::iterator::Iterator>::last": true,
  "<char::ToLowercase as iter::traits::iterator::Iterator>::next": true,
  "<char::ToLowercase as iter::traits::iterator::Iterator>::size_hint": true,
  "<char::ToUppercase as clone::Clone>::clone": true,
  "<char::ToUppercase as iter::traits::double_ended::DoubleEndedIterator>::advance_back_by": true,
  "<char::ToUppercase as iter::traits::double_ended::DoubleEndedIterator>::next_back": true,
  "<char::ToUppercase as iter::traits::exact_size::ExactSizeIterator>::is_empty": true,
  "<char::ToUppercase as iter::traits::exact_size::ExactSizeIterator>::len": true,
  "<char::ToUppercase as iter::traits::iterator::Iterator>::advance_by": true,
  "<char::ToUppercase as iter::traits::iterator::Iterator>::count": true,
  "<char::ToUppercase as iter::traits::iterator::Iterator>::last": true,
  "<char::ToUppercase as iter::traits::iterator::Iterator>::next": true,
  "<char::ToUppercase as iter::traits::iterator::Iterator>::size_hint": true,
  "<char::TryFromCharError as clone::Clone>::clone": true,
  "<char::TryFromCharError as cmp::Eq>::assert_receiver_is_total_eq": true,
  "<char::TryFromCharError as cmp::PartialEq>::eq": true,
  "<char::convert::CharErrorKind as clone::Clone>::clone": true,
  "<char::convert::CharErrorKind as cmp::Eq>::assert_receiver_is_total_eq": true,
  "<char::convert::CharErrorKind as cmp::PartialEq>::eq": true,
  "<char::convert::CharTryFromError as clone::Clone>::clone": true,
  "<char::convert::CharTryFromError as cmp::Eq>::assert_receiver_is_total_eq": true,
  "<char::convert::CharTryFromError as cmp::PartialEq>::eq": true,
  "<char::convert::ParseCharError as clone::Clone>::clone": true,
  "<char::convert::ParseCharError as cmp::Eq>::assert_receiver_is_total_eq": true,
  "<char::convert::ParseCharError as cmp::PartialEq>::eq": true,
  "<char::decode::DecodeUtf16Error as clone::Clone>::clone": true,
  "<char::decode::DecodeUtf16Error as cmp::Eq>::assert_receiver_is_total_eq": true,
  "<char::decode::DecodeUtf16Error as cmp::PartialEq>::eq": true,
  "<cmp::Ordering as clone::Clone>::clone": true,
  "<cmp::Ordering as cmp::Eq>::assert_receiver_is_total_eq": true,
  "<cmp::Ordering as cmp::Ord>::cmp": true,
  "<cmp::Ordering as cmp::PartialEq>::eq": true,
  "<cmp::Ordering as cmp::PartialOrd>::partial_cmp": true,
  "<collections::TryReserveError as core::clone::Clone>::clone": true,
  "<collections::TryReserveError as core::cmp::Eq>::assert_receiver_is_total_eq": true,
  "<collections::TryReserveError as core::cmp::PartialEq>::eq": true,
  "<collections::TryReserveError as core::convert::From<collections::TryReserveErrorKind>>::from": true,
  "<collections::TryReserveErrorKind as core::clone::Clone>::clone": true,
  "<collections::TryReserveErrorKind as core::cmp::Eq>::assert_receiver_is_total_eq": true,
  "<collections::TryReserveErrorKind as core::cmp::PartialEq>::eq": true,
  "<collections::TryReserveErrorKind as core::convert::From<core::alloc::LayoutError>>::from": true,
  "<collections::btree::map::UnorderedKeyError as core::clone::Clone>::clone": true,
  "<collections::btree::map::UnorderedKeyError as core::cmp::Eq>::assert_receiver_is_total_eq": true,
  "<collections::btree::map::UnorderedKeyError as core::cmp::PartialEq>::eq": true,
  "<collections::btree::mem::replace::PanicGuard as core::ops::Drop>::drop": true,
  "<collections::btree::set_val::SetValZST as collections::btree::set_val::IsSetVal>::is_set_val": true,
  "<collections::btree::set_val::SetValZST as core::clone::Clone>::clone": true,
  "<collections::btree::set_val::SetValZST as core::cmp::Eq>::assert_receiver_is_total_eq": true,
  "<collections::btree::set_val::SetValZST as core::cmp::Ord>::cmp": true,
  "<collections::btree::set_val::SetValZST as core::cmp::PartialEq>::eq": true,
  "<collections::btree::set_val::SetValZST as core::cmp::PartialOrd>::partial_cmp": true,
  "<collections::btree::set_val::SetValZST as core::default::Default>::default": true,
  "<common::AddressSize as rustc_std_workspace_core::clone::Clone>::clone": true,
  "<common::AddressSize as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq": true,
  "<common::AddressSize as rustc_std_workspace_core::cmp::PartialEq>::eq": true,
  "<common::Architecture as rustc_std_workspace_core::clone::Clone>::clone": true,
  "<common::Architecture as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq": true,
  "<common::Architecture as rustc_std_workspace_core::cmp::PartialEq>::eq": true,
  "<common::BinaryFormat as rustc_std_workspace_core::clone::Clone>::clone": true,
  "<common::BinaryFormat as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq": true,
  "<common::BinaryFormat as rustc_std_workspace_core::cmp::PartialEq>::eq": true,
  "<common::ComdatKind as rustc_std_workspace_core::clone::Clone>::clone": true,
  "<common::ComdatKind as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq": true,
  "<common::ComdatKind as rustc_std_workspace_core::cmp::PartialEq>::eq": true,
  "<common::DebugTypeSignature as rustc_std_workspace_core::clone::Clone>::clone": true,
  "<common::DebugTypeSignature as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq": true,
  "<common::DebugTypeSignature as rustc_std_workspace_core::cmp::PartialEq>::eq": true,
  "<common::DwarfFileType as rustc_std_workspace_core::clone::Clone>::clone": true,
  "<common::DwarfFileType as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq": true,
  "<common::DwarfFileType as rustc_std_workspace_core::cmp::PartialEq>::eq": true,
  "<common::DwarfFileType as rustc_std_workspace_core::default::Default>::default": true,
  "<common::DwoId as rustc_std_workspace_core::clone::Clone>::clone": true,
  "<common::DwoId as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq": true,
  "<common::DwoId as rustc_std_workspace_core::cmp::PartialEq>::eq": true,
  "<common::Encoding as rustc_std_workspace_core::clone::Clone>::clone": true,
  "<common::Encoding as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq": true,
  "<common::Encoding as rustc_std_workspace_core::cmp::PartialEq>::eq": true,
  "<common::FileFlags as rustc_std_workspace_core::clone::Clone>::clone": true,
  "<common::FileFlags as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq": true,
  "<common::FileFlags as rustc_std_workspace_core::cmp::PartialEq>::eq": true,
  "<common::Format as rustc_std_workspace_core::clone::Clone>::clone": true,
  "<common::Format as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq": true,
  "<common::Format as rustc_std_workspace_core::cmp::PartialEq>::eq": true,
  "<common::LineEncoding as rustc_std_workspace_core::clone::Clone>::clone": true,
  "<common::LineEncoding as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq": true,
  "<common::LineEncoding as rustc_std_workspace_core::cmp::PartialEq>::eq": true,
  "<common::LineEncoding as rustc_std_workspace_core::default::Default>::default": true,
  "<common::Register as rustc_std_workspace_core::clone::Clone>::clone": true,
  "<common::Register as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq": true,
  "<common::Register as rustc_std_workspace_core::cmp::Ord>::cmp": true,
  "<common::Register as rustc_std_workspace_core::cmp::PartialEq>::eq": true,
  "<common::Register as rustc_std_workspace_core::cmp::PartialOrd>::partial_cmp": true,
  "<common::RelocationEncoding as rustc_std_workspace_core::clone::Clone>::clone": true,
  "<common::RelocationEncoding as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq": true,
  "<common::RelocationEncoding as rustc_std_workspace_core::cmp::PartialEq>::eq": true,
  "<common::RelocationFlags as rustc_std_workspace_core::clone::Clone>::clone": true,
  "<common::RelocationFlags as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq": true,
  "<common::RelocationFlags as rustc_std_workspace_core::cmp::PartialEq>::eq": true,
  "<common::RelocationKind as rustc_std_workspace_core::clone::Clone>::clone": true,
  "<common::RelocationKind as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq": true,
  "<common::RelocationKind as rustc_std_workspace_core::cmp::PartialEq>::eq": true,
  "<common::SectionFlags as rustc_std_workspace_core::clone::Clone>::clone": true,
  "<common::SectionFlags as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq": true,
  "<common::SectionFlags as rustc_std_workspace_core::cmp::PartialEq>::eq": true,
  "<common::SectionId as rustc_std_workspace_core::clone::Clone>::clone": true,
  "<common::SectionId as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq": true,
  "<common::SectionId as rustc_std_workspace_core::cmp::Ord>::cmp": true,
  "<common::SectionId as rustc_std_workspace_core::cmp::PartialEq>::eq": true,
  "<common::SectionId as rustc_std_workspace_core::cmp::PartialOrd>::partial_cmp": true,
  "<common::SectionKind as rustc_std_workspace_core::clone::Clone>::clone": true,
  "<common::SectionKind as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq": true,
  "<common::SectionKind as rustc_std_workspace_core::cmp::PartialEq>::eq": true,
  "<common::SegmentFlags as rustc_std_workspace_core::clone::Clone>::clone": true,
  "<common::SegmentFlags as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq": true,
  "<common::SegmentFlags as rustc_std_workspace_core::cmp::PartialEq>::eq": true,
  "<common::SubArchitecture as rustc_std_workspace_core::clone::Clone>::clone": true,
  "<common::SubArchitecture as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq": true,
  "<common::SubArchitecture as rustc_std_workspace_core::cmp::PartialEq>::eq": true,
  "<common::SymbolKind as rustc_std_workspace_core::clone::Clone>::clone": true,
  "<common::SymbolKind as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq": true,
  "<common::SymbolKind as rustc_std_workspace_core::cmp::PartialEq>::eq": true,
  "<common::SymbolScope as rustc_std_workspace_core::clone::Clone>::clone": true,
  "<common::SymbolScope as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq": true,
  "<common::SymbolScope as rustc_std_workspace_core::cmp::PartialEq>::eq": true,
  "<common::Vendor as rustc_std_workspace_core::clone::Clone>::clone": true,
  "<common::Vendor as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq": true,
  "<common::Vendor as rustc_std_workspace_core::cmp::PartialEq>::eq": true,
  "<constants::DwAccess as rustc_std_workspace_core::clone::Clone>::clone": true,
  "<constants::DwAccess as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq": true,
  "<constants::DwAccess as rustc_std_workspace_core::cmp::Ord>::cmp": true,
  "<constants::DwAccess as rustc_std_workspace_core::cmp::PartialEq>::eq": true,
  "<constants::DwAccess as rustc_std_workspace_core::cmp::PartialOrd>::partial_cmp": true,
  "<constants::DwAddr as rustc_std_workspace_core::clone::Clone>::clone": true,
  "<constants::DwAddr as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq": true,
  "<constants::DwAddr as rustc_std_workspace_core::cmp::Ord>::cmp": true,
  "<constants::DwAddr as rustc_std_workspace_core::cmp::PartialEq>::eq": true,
  "<constants::DwAddr as rustc_std_workspace_core::cmp::PartialOrd>::partial_cmp": true,
  "<constants::DwAt as rustc_std_workspace_core::clone::Clone>::clone": true,
  "<constants::DwAt as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq": true,
  "<constants::DwAt as rustc_std_workspace_core::cmp::Ord>::cmp": true,
  "<constants::DwAt as rustc_std_workspace_core::cmp::PartialEq>::eq": true,
  "<constants::DwAt as rustc_std_workspace_core::cmp::PartialOrd>::partial_cmp": true,
  "<constants::DwAte as rustc_std_workspace_core::clone::Clone>::clone": true,
  "<constants::DwAte as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq": true,
  "<constants::DwAte as rustc_std_workspace_core::cmp::Ord>::cmp": true,
  "<constants::DwAte as rustc_std_workspace_core::cmp::PartialEq>::eq": true,
  "<constants::DwAte as rustc_std_workspace_core::cmp::PartialOrd>::partial_cmp": true,
  "<constants::DwCc as rustc_std_workspace_core::clone::Clone>::clone": true,
  "<constants::DwCc as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq": true,
  "<constants::DwCc as rustc_std_workspace_core::cmp::Ord>::cmp": true,
  "<constants::DwCc as rustc_std_workspace_core::cmp::PartialEq>::eq": true,
  "<constants::DwCc as rustc_std_workspace_core::cmp::PartialOrd>::partial_cmp": true,
  "<constants::DwCfa as rustc_std_workspace_core::clone::Clone>::clone": true,
  "<constants::DwCfa as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq": true,
  "<constants::DwCfa as rustc_std_workspace_core::cmp::Ord>::cmp": true,
  "<constants::DwCfa as rustc_std_workspace_core::cmp::PartialEq>::eq": true,
  "<constants::DwCfa as rustc_std_workspace_core::cmp::PartialOrd>::partial_cmp": true,
  "<constants::DwChildren as rustc_std_workspace_core::clone::Clone>::clone": true,
  "<constants::DwChildren as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq": true,
  "<constants::DwChildren as rustc_std_workspace_core::cmp::Ord>::cmp": true,
  "<constants::DwChildren as rustc_std_workspace_core::cmp::PartialEq>::eq": true,
  "<constants::DwChildren as rustc_std_workspace_core::cmp::PartialOrd>::partial_cmp": true,
  "<constants::DwDefaulted as rustc_std_workspace_core::clone::Clone>::clone": true,
  "<constants::DwDefaulted as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq": true,
  "<constants::DwDefaulted as rustc_std_workspace_core::cmp::Ord>::cmp": true,
  "<constants::DwDefaulted as rustc_std_workspace_core::cmp::PartialEq>::eq": true,
  "<constants::DwDefaulted as rustc_std_workspace_core::cmp::PartialOrd>::partial_cmp": true,
  "<constants::DwDs as rustc_std_workspace_core::clone::Clone>::clone": true,
  "<constants::DwDs as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq": true,
  "<constants::DwDs as rustc_std_workspace_core::cmp::Ord>::cmp": true,
  "<constants::DwDs as rustc_std_workspace_core::cmp::PartialEq>::eq": true,
  "<constants::DwDs as rustc_std_workspace_core::cmp::PartialOrd>::partial_cmp": true,
  "<constants::DwDsc as rustc_std_workspace_core::clone::Clone>::clone": true,
  "<constants::DwDsc as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq": true,
  "<constants::DwDsc as rustc_std_workspace_core::cmp::Ord>::cmp": true,
  "<constants::DwDsc as rustc_std_workspace_core::cmp::PartialEq>::eq": true,
  "<constants::DwDsc as rustc_std_workspace_core::cmp::PartialOrd>::partial_cmp": true,
  "<constants::DwEhPe as rustc_std_workspace_core::clone::Clone>::clone": true,
  "<constants::DwEhPe as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq": true,
  "<constants::DwEhPe as rustc_std_workspace_core::cmp::Ord>::cmp": true,
  "<constants::DwEhPe as rustc_std_workspace_core::cmp::PartialEq>::eq": true,
  "<constants::DwEhPe as rustc_std_workspace_core::cmp::PartialOrd>::partial_cmp": true,
  "<constants::DwEhPe as rustc_std_workspace_core::ops::BitOr>::bitor": true,
  "<constants::DwEnd as rustc_std_workspace_core::clone::Clone>::clone": true,
  "<constants::DwEnd as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq": true,
  "<constants::DwEnd as rustc_std_workspace_core::cmp::Ord>::cmp": true,
  "<constants::DwEnd as rustc_std_workspace_core::cmp::PartialEq>::eq": true,
  "<constants::DwEnd as rustc_std_workspace_core::cmp::PartialOrd>::partial_cmp": true,
  "<constants::DwForm as rustc_std_workspace_core::clone::Clone>::clone": true,
  "<constants::DwForm as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq": true,
  "<constants::DwForm as rustc_std_workspace_core::cmp::Ord>::cmp": true,
  "<constants::DwForm as rustc_std_workspace_core::cmp::PartialEq>::eq": true,
  "<constants::DwForm as rustc_std_workspace_core::cmp::PartialOrd>::partial_cmp": true,
  "<constants::DwId as rustc_std_workspace_core::clone::Clone>::clone": true,
  "<constants::DwId as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq": true,
  "<constants::DwId as rustc_std_workspace_core::cmp::Ord>::cmp": true,
  "<constants::DwId as rustc_std_workspace_core::cmp::PartialEq>::eq": true,
  "<constants::DwId as rustc_std_workspace_core::cmp::PartialOrd>::partial_cmp": true,
  "<constants::DwIdx as rustc_std_workspace_core::clone::Clone>::clone": true,
  "<constants::DwIdx as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq": true,
  "<constants::DwIdx as rustc_std_workspace_core::cmp::Ord>::cmp": true,
  "<constants::DwIdx as rustc_std_workspace_core::cmp::PartialEq>::eq": true,
  "<constants::DwIdx as rustc_std_workspace_core::cmp::PartialOrd>::partial_cmp": true,
  "<constants::DwInl as rustc_std_workspace_core::clone::Clone>::clone": true,
  "<constants::DwInl as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq": true,
  "<constants::DwInl as rustc_std_workspace_core::cmp::Ord>::cmp": true,
  "<constants::DwInl as rustc_std_workspace_core::cmp::PartialEq>::eq": true,
  "<constants::DwInl as rustc_std_workspace_core::cmp::PartialOrd>::partial_cmp": true,
  "<constants::DwLang as rustc_std_workspace_core::clone::Clone>::clone": true,
  "<constants::DwLang as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq": true,
  "<constants::DwLang as rustc_std_workspace_core::cmp::Ord>::cmp": true,
  "<constants::DwLang as rustc_std_workspace_core::cmp::PartialEq>::eq": true,
  "<constants::DwLang as rustc_std_workspace_core::cmp::PartialOrd>::partial_cmp": true,
  "<constants::DwLle as rustc_std_workspace_core::clone::Clone>::clone": true,
  "<constants::DwLle as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq": true,
  "<constants::DwLle as rustc_std_workspace_core::cmp::Ord>::cmp": true,
  "<constants::DwLle as rustc_std_workspace_core::cmp::PartialEq>::eq": true,
  "<constants::DwLle as rustc_std_workspace_core::cmp::PartialOrd>::partial_cmp": true,
  "<constants::DwLnct as rustc_std_workspace_core::clone::Clone>::clone": true,
  "<constants::DwLnct as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq": true,
  "<constants::DwLnct as rustc_std_workspace_core::cmp::Ord>::cmp": true,
  "<constants::DwLnct as rustc_std_workspace_core::cmp::PartialEq>::eq": true,
  "<constants::DwLnct as rustc_std_workspace_core::cmp::PartialOrd>::partial_cmp": true,
  "<constants::DwLne as rustc_std_workspace_core::clone::Clone>::clone": true,
  "<constants::DwLne as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq": true,
  "<constants::DwLne as rustc_std_workspace_core::cmp::Ord>::cmp": true,
  "<constants::DwLne as rustc_std_workspace_core::cmp::PartialEq>::eq": true,
  "<constants::DwLne as rustc_std_workspace_core::cmp::PartialOrd>::partial_cmp": true,
  "<constants::DwLns as rustc_std_workspace_core::clone::Clone>::clone": true,
  "<constants::DwLns as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq": true,
  "<constants::DwLns as rustc_std_workspace_core::cmp::Ord>::cmp": true,
  "<constants::DwLns as rustc_std_workspace_core::cmp::PartialEq>::eq": true,
  "<constants::DwLns as rustc_std_workspace_core::cmp::PartialOrd>::partial_cmp": true,
  "<constants::DwMacinfo as rustc_std_workspace_core::clone::Clone>::clone": true,
  "<constants::DwMacinfo as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq": true,
  "<constants::DwMacinfo as rustc_std_workspace_core::cmp::Ord>::cmp": true,
  "<constants::DwMacinfo as rustc_std_workspace_core::cmp::PartialEq>::eq": true,
  "<constants::DwMacinfo as rustc_std_workspace_core::cmp::PartialOrd>::partial_cmp": true,
  "<constants::DwMacro as rustc_std_workspace_core::clone::Clone>::clone": true,
  "<constants::DwMacro as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq": true,
  "<constants::DwMacro as rustc_std_workspace_core::cmp::Ord>::cmp": true,
  "<constants::DwMacro as rustc_std_workspace_core::cmp::PartialEq>::eq": true,
  "<constants::DwMacro as rustc_std_workspace_core::cmp::PartialOrd>::partial_cmp": true,
  "<constants::DwOp as rustc_std_workspace_core::clone::Clone>::clone": true,
  "<constants::DwOp as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq": true,
  "<constants::DwOp as rustc_std_workspace_core::cmp::Ord>::cmp": true,
  "<constants::DwOp as rustc_std_workspace_core::cmp::PartialEq>::eq": true,
  "<constants::DwOp as rustc_std_workspace_core::cmp::PartialOrd>::partial_cmp": true,
  "<constants::DwOrd as rustc_std_workspace_core::clone::Clone>::clone": true,
  "<constants::DwOrd as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq": true,
  "<constants::DwOrd as rustc_std_workspace_core::cmp::Ord>::cmp": true,
  "<constants::DwOrd as rustc_std_workspace_core::cmp::PartialEq>::eq": true,
  "<constants::DwOrd as rustc_std_workspace_core::cmp::PartialOrd>::partial_cmp": true,
  "<constants::DwRle as rustc_std_workspace_core::clone::Clone>::clone": true,
  "<constants::DwRle as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq": true,
  "<constants::DwRle as rustc_std_workspace_core::cmp::Ord>::cmp": true,
  "<constants::DwRle as rustc_std_workspace_core::cmp::PartialEq>::eq": true,
  "<constants::DwRle as rustc_std_workspace_core::cmp::PartialOrd>::partial_cmp": true,
  "<constants::DwSect as rustc_std_workspace_core::clone::Clone>::clone": true,
  "<constants::DwSect as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq": true,
  "<constants::DwSect as rustc_std_workspace_core::cmp::Ord>::cmp": true,
  "<constants::DwSect as rustc_std_workspace_core::cmp::PartialEq>::eq": true,
  "<constants::DwSect as rustc_std_workspace_core::cmp::PartialOrd>::partial_cmp": true,
  "<constants::DwSectV2 as rustc_std_workspace_core::clone::Clone>::clone": true,
  "<constants::DwSectV2 as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq": true,
  "<constants::DwSectV2 as rustc_std_workspace_core::cmp::Ord>::cmp": true,
  "<constants::DwSectV2 as rustc_std_workspace_core::cmp::PartialEq>::eq": true,
  "<constants::DwSectV2 as rustc_std_workspace_core::cmp::PartialOrd>::partial_cmp": true,
  "<constants::DwTag as rustc_std_workspace_core::clone::Clone>::clone": true,
  "<constants::DwTag as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq": true,
  "<constants::DwTag as rustc_std_workspace_core::cmp::Ord>::cmp": true,
  "<constants::DwTag as rustc_std_workspace_core::cmp::PartialEq>::eq": true,
  "<constants::DwTag as rustc_std_workspace_core::cmp::PartialOrd>::partial_cmp": true,
  "<constants::DwUt as rustc_std_workspace_core::clone::Clone>::clone": true,
  "<constants::DwUt as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq": true,
  "<constants::DwUt as rustc_std_workspace_core::cmp::Ord>::cmp": true,
  "<constants::DwUt as rustc_std_workspace_core::cmp::PartialEq>::eq": true,
  "<constants::DwUt as rustc_std_workspace_core::cmp::PartialOrd>::partial_cmp": true,
  "<constants::DwVirtuality as rustc_std_workspace_core::clone::Clone>::clone": true,
  "<constants::DwVirtuality as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq": true,
  "<constants::DwVirtuality as rustc_std_workspace_core::cmp::Ord>::cmp": true,
  "<constants::DwVirtuality as rustc_std_workspace_core::cmp::PartialEq>::eq": true,
  "<constants::DwVirtuality as rustc_std_workspace_core::cmp::PartialOrd>::partial_cmp": true,
  "<constants::DwVis as rustc_std_workspace_core::clone::Clone>::clone": true,
  "<constants::DwVis as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq": true,
  "<constants::DwVis as rustc_std_workspace_core::cmp::Ord>::cmp": true,
  "<constants::DwVis as rustc_std_workspace_core::cmp::PartialEq>::eq": true,
  "<constants::DwVis as rustc_std_workspace_core::cmp::PartialOrd>::partial_cmp": true,
  "<control::bitmask::BitMask as rustc_std_workspace_core::clone::Clone>::clone": true,
  "<control::bitmask::BitMask as rustc_std_workspace_core::iter::IntoIterator>::into_iter": true,
  "<control::bitmask::BitMaskIter as rustc_std_workspace_core::clone::Clone>::clone": true,
  "<control::bitmask::BitMaskIter as rustc_std_workspace_core::iter::Iterator>::next": true,
  "<control::group::sse2::Group as rustc_std_workspace_core::clone::Clone>::clone": true,
  "<control::tag::Tag as rustc_std_workspace_core::clone::Clone>::clone": true,
  "<control::tag::Tag as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq": true,
  "<control::tag::Tag as rustc_std_workspace_core::cmp::PartialEq>::eq": true,
  "<core::ascii::Char as string::SpecToString>::spec_to_string": true,
  "<core::net::SocketAddr as net::socket_addr::ToSocketAddrs>::to_socket_addrs": true,
  "<core::net::SocketAddrV4 as net::socket_addr::ToSocketAddrs>::to_socket_addrs": true,
  "<core::net::SocketAddrV6 as net::socket_addr::ToSocketAddrs>::to_socket_addrs": true,
  "<core::option::Option<bool> as vec::is_zero::IsZero>::is_zero": true,
  "<core::option::Option<core::num::NonZero<i128>> as vec::is_zero::IsZero>::is_zero": true,
  "<core::option::Option<core::num::NonZero<i16>> as vec::is_zero::IsZero>::is_zero": true,
  "<core::option::Option<core::num::NonZero<i32>> as vec::is_zero::IsZero>::is_zero": true,
  "<core::option::Option<core::num::NonZero<i64>> as vec::is_zero::IsZero>::is_zero": true,
  "<core::option::Option<core::num::NonZero<i8>> as vec::is_zero::IsZero>::is_zero": true,
  "<core::option::Option<core::num::NonZero<isize>> as vec::is_zero::IsZero>::is_zero": true,
  "<core::option::Option<core::num::NonZero<u128>> as vec::is_zero::IsZero>::is_zero": true,
  "<core::option::Option<core::num::NonZero<u16>> as vec::is_zero::IsZero>::is_zero": true,
  "<core::option::Option<core::num::NonZero<u32>> as vec::is_zero::IsZero>::is_zero": true,
  "<core::option::Option<core::num::NonZero<u64>> as vec::is_zero::IsZero>::is_zero": true,
  "<core::option::Option<core::num::NonZero<u8>> as vec::is_zero::IsZero>::is_zero": true,
  "<core::option::Option<core::num::NonZero<usize>> as vec::is_zero::IsZero>::is_zero": true,
  "<core::option::Option<core::option::Option<bool>> as vec::is_zero::IsZero>::is_zero": true,
  "<core::option::Option<core::option::Option<core::option::Option<bool>>> as vec::is_zero::IsZero>::is_zero": true,
  "<core::option::Option<i128> as vec::is_zero::IsZero>::is_zero": true,
  "<core::option::Option<i16> as vec::is_zero::IsZero>::is_zero": true,
  "<core::option::Option<i32> as vec::is_zero::IsZero>::is_zero": true,
  "<core::option::Option<i64> as vec::is_zero::IsZero>::is_zero": true,
  "<core::option::Option<i8> as vec::is_zero::IsZero>::is_zero": true,
  "<core::option::Option<isize> as vec::is_zero::IsZero>::is_zero": true,
  "<core::option::Option<u128> as vec::is_zero::IsZero>::is_zero": true,
  "<core::option::Option<u16> as vec::is_zero::IsZero>::is_zero": true,
  "<core::option::Option<u32> as vec::is_zero::IsZero>::is_zero": true,
  "<core::option::Option<u64> as vec::is_zero::IsZero>::is_zero": true,
  "<core::option::Option<u8> as vec::is_zero::IsZero>::is_zero": true,
  "<core::option::Option<usize> as vec::is_zero::IsZero>::is_zero": true,
  "<core_arch::simd::f16x16 as clone::Clone>::clone": true,
  "<core_arch::simd::f16x16 as cmp::PartialEq>::eq": true,
  "<core_arch::simd::f16x16::splat::JustOne as clone::Clone>::clone": true,
  "<core_arch::simd::f16x32 as clone::Clone>::clone": true,
  "<core_arch::simd::f16x32 as cmp::PartialEq>::eq": true,
  "<core_arch::simd::f16x32::splat::JustOne as clone::Clone>::clone": true,
  "<core_arch::simd::f16x4 as clone::Clone>::clone": true,
  "<core_arch::simd::f16x4 as cmp::PartialEq>::eq": true,
  "<core_arch::simd::f16x4::splat::JustOne as clone::Clone>::clone": true,
  "<core_arch::simd::f16x8 as clone::Clone>::clone": true,
  "<core_arch::simd::f16x8 as cmp::PartialEq>::eq": true,
  "<core_arch::simd::f16x8::splat::JustOne as clone::Clone>::clone": true,
  "<core_arch::simd::f32x16 as clone::Clone>::clone": true,
  "<core_arch::simd::f32x16 as cmp::PartialEq>::eq": true,
  "<core_arch::simd::f32x16::splat::JustOne as clone::Clone>::clone": true,
  "<core_arch::simd::f32x2 as clone::Clone>::clone": true,
  "<core_arch::simd::f32x2 as cmp::PartialEq>::eq": true,
  "<core_arch::simd::f32x2::splat::JustOne as clone::Clone>::clone": true,
  "<core_arch::simd::f32x4 as clone::Clone>::clone": true,
  "<core_arch::simd::f32x4 as cmp::PartialEq>::eq": true,
  "<core_arch::simd::f32x4::splat::JustOne as clone::Clone>::clone": true,
  "<core_arch::simd::f32x8 as clone::Clone>::clone": true,
  "<core_arch::simd::f32x8 as cmp::PartialEq>::eq": true,
  "<core_arch::simd::f32x8::splat::JustOne as clone::Clone>::clone": true,
  "<core_arch::simd::f64x1 as clone::Clone>::clone": true,
  "<core_arch::simd::f64x1 as cmp::PartialEq>::eq": true,
  "<core_arch::simd::f64x1::splat::JustOne as clone::Clone>::clone": true,
  "<core_arch::simd::f64x2 as clone::Clone>::clone": true,
  "<core_arch::simd::f64x2 as cmp::PartialEq>::eq": true,
  "<core_arch::simd::f64x2::splat::JustOne as clone::Clone>::clone": true,
  "<core_arch::simd::f64x4 as clone::Clone>::clone": true,
  "<core_arch::simd::f64x4 as cmp::PartialEq>::eq": true,
  "<core_arch::simd::f64x4::splat::JustOne as clone::Clone>::clone": true,
  "<core_arch::simd::f64x8 as clone::Clone>::clone": true,
  "<core_arch::simd::f64x8 as cmp::PartialEq>::eq": true,
  "<core_arch::simd::f64x8::splat::JustOne as clone::Clone>::clone": true,
  "<core_arch::simd::i16x16 as clone::Clone>::clone": true,
  "<core_arch::simd::i16x16 as cmp::PartialEq>::eq": true,
  "<core_arch::simd::i16x16::splat::JustOne as clone::Clone>::clone": true,
  "<core_arch::simd::i16x2 as clone::Clone>::clone": true,
  "<core_arch::simd::i16x2 as cmp::PartialEq>::eq": true,
  "<core_arch::simd::i16x2::splat::JustOne as clone::Clone>::clone": true,
  "<core_arch::simd::i16x32 as clone::Clone>::clone": true,
  "<core_arch::simd::i16x32 as cmp::PartialEq>::eq": true,
  "<core_arch::simd::i16x32::splat::JustOne as clone::Clone>::clone": true,
  "<core_arch::simd::i16x4 as clone::Clone>::clone": true,
  "<core_arch::simd::i16x4 as cmp::PartialEq>::eq": true,
  "<core_arch::simd::i16x4::splat::JustOne as clone::Clone>::clone": true,
  "<core_arch::simd::i16x8 as clone::Clone>::clone": true,
  "<core_arch::simd::i16x8 as cmp::PartialEq>::eq": true,
  "<core_arch::simd::i16x8::splat::JustOne as clone::Clone>::clone": true,
  "<core_arch::simd::i32x16 as clone::Clone>::clone": true,
  "<core_arch::simd::i32x16 as cmp::PartialEq>::eq": true,
  "<core_arch::simd::i32x16::splat::JustOne as clone::Clone>::clone": true,
  "<core_arch::simd::i32x2 as clone::Clone>::clone": true,
  "<core_arch::simd::i32x2 as cmp::PartialEq>::eq": true,
  "<core_arch::simd::i32x2::splat::JustOne as clone::Clone>::clone": true,
  "<core_arch::simd::i32x32 as clone::Clone>::clone": true,
  "<core_arch::simd::i32x32 as cmp::PartialEq>::eq": true,
  "<core_arch::simd::i32x32::splat::JustOne as clone::Clone>::clone": true,
  "<core_arch::simd::i32x4 as clone::Clone>::clone": true,
  "<core_arch::simd::i32x4 as cmp::PartialEq>::eq": true,
  "<core_arch::simd::i32x4::splat::JustOne as clone::Clone>::clone": true,
  "<core_arch::simd::i32x8 as clone::Clone>::clone": true,
  "<core_arch::simd::i32x8 as cmp::PartialEq>::eq": true,
  "<core_arch::simd::i32x8::splat::JustOne as clone::Clone>::clone": true,
  "<core_arch::simd::i64x1 as clone::Clone>::clone": true,
  "<core_arch::simd::i64x1 as cmp::PartialEq>::eq": true,
  "<core_arch::simd::i64x1::splat::JustOne as clone::Clone>::clone": true,
  "<core_arch::simd::i64x2 as clone::Clone>::clone": true,
  "<core_arch::simd::i64x2 as cmp::PartialEq>::eq": true,
  "<core_arch::simd::i64x2::splat::JustOne as clone::Clone>::clone": true,
  "<core_arch::simd::i64x4 as clone::Clone>::clone": true,
  "<core_arch::simd::i64x4 as cmp::PartialEq>::eq": true,
  "<core_arch::simd::i64x4::splat::JustOne as clone::Clone>::clone": true,
  "<core_arch::simd::i64x8 as clone::Clone>::clone": true,
  "<core_arch::simd::i64x8 as cmp::PartialEq>::eq": true,
  "<core_arch::simd::i64x8::splat::JustOne as clone::Clone>::clone": true,
  "<core_arch::simd::i8x16 as clone::Clone>::clone": true,
  "<core_arch::simd::i8x16 as cmp::PartialEq>::eq": true,
  "<core_arch::simd::i8x16::splat::JustOne as clone::Clone>::clone": true,
  "<core_arch::simd::i8x2 as clone::Clone>::clone": true,
  "<core_arch::simd::i8x2 as cmp::PartialEq>::eq": true,
  "<core_arch::simd::i8x2::splat::JustOne as clone::Clone>::clone": true,
  "<core_arch::simd::i8x32 as clone::Clone>::clone": true,
  "<core_arch::simd::i8x32 as cmp::PartialEq>::eq": true,
  "<core_arch::simd::i8x32::splat::JustOne as clone::Clone>::clone": true,
  "<core_arch::simd::i8x4 as clone::Clone>::clone": true,
  "<core_arch::simd::i8x4 as cmp::PartialEq>::eq": true,
  "<core_arch::simd::i8x4::splat::JustOne as clone::Clone>::clone": true,
  "<core_arch::simd::i8x64 as clone::Clone>::clone": true,
  "<core_arch::simd::i8x64 as cmp::PartialEq>::eq": true,
  "<core_arch::simd::i8x64::splat::JustOne as clone::Clone>::clone": true,
  "<core_arch::simd::i8x8 as clone::Clone>::clone": true,
  "<core_arch::simd::i8x8 as cmp::PartialEq>::eq": true,
  "<core_arch::simd::i8x8::splat::JustOne as clone::Clone>::clone": true,
  "<core_arch::simd::m16x16 as clone::Clone>::clone": true,
  "<core_arch::simd::m16x16 as cmp::PartialEq>::eq": true,
  "<core_arch::simd::m16x16::splat::JustOne as clone::Clone>::clone": true,
  "<core_arch::simd::m16x8 as clone::Clone>::clone": true,
  "<core_arch::simd::m16x8 as cmp::PartialEq>::eq": true,
  "<core_arch::simd::m16x8::splat::JustOne as clone::Clone>::clone": true,
  "<core_arch::simd::m32x4 as clone::Clone>::clone": true,
  "<core_arch::simd::m32x4 as cmp::PartialEq>::eq": true,
  "<core_arch::simd::m32x4::splat::JustOne as clone::Clone>::clone": true,
  "<core_arch::simd::m32x8 as clone::Clone>::clone": true,
  "<core_arch::simd::m32x8 as cmp::PartialEq>::eq": true,
  "<core_arch::simd::m32x8::splat::JustOne as clone::Clone>::clone": true,
  "<core_arch::simd::m64x2 as clone::Clone>::clone": true,
  "<core_arch::simd::m64x2 as cmp::PartialEq>::eq": true,
  "<core_arch::simd::m64x2::splat::JustOne as clone::Clone>::clone": true,
  "<core_arch::simd::m8x16 as clone::Clone>::clone": true,
  "<core_arch::simd::m8x16 as cmp::PartialEq>::eq": true,
  "<core_arch::simd::m8x16::splat::JustOne as clone::Clone>::clone": true,
  "<core_arch::simd::m8x32 as clone::Clone>::clone": true,
  "<core_arch::simd::m8x32 as cmp::PartialEq>::eq": true,
  "<core_arch::simd::m8x32::splat::JustOne as clone::Clone>::clone": true,
  "<core_arch::simd::u16x16 as clone::Clone>::clone": true,
  "<core_arch::simd::u16x16 as cmp::PartialEq>::eq": true,
  "<core_arch::simd::u16x16::splat::JustOne as clone::Clone>::clone": true,
  "<core_arch::simd::u16x2 as clone::Clone>::clone": true,
  "<core_arch::simd::u16x2 as cmp::PartialEq>::eq": true,
  "<core_arch::simd::u16x2::splat::JustOne as clone::Clone>::clone": true,
  "<core_arch::simd::u16x32 as clone::Clone>::clone": true,
  "<core_arch::simd::u16x32 as cmp::PartialEq>::eq": true,
  "<core_arch::simd::u16x32::splat::JustOne as clone::Clone>::clone": true,
  "<core_arch::simd::u16x4 as clone::Clone>::clone": true,
  "<core_arch::simd::u16x4 as cmp::PartialEq>::eq": true,
  "<core_arch::simd::u16x4::splat::JustOne as clone::Clone>::clone": true,
  "<core_arch::simd::u16x64 as clone::Clone>::clone": true,
  "<core_arch::simd::u16x64 as cmp::PartialEq>::eq": true,
  "<core_arch::simd::u16x64::splat::JustOne as clone::Clone>::clone": true,
  "<core_arch::simd::u16x8 as clone::Clone>::clone": true,
  "<core_arch::simd::u16x8 as cmp::PartialEq>::eq": true,
  "<core_arch::simd::u16x8::splat::JustOne as clone::Clone>::clone": true,
  "<core_arch::simd::u32x16 as clone::Clone>::clone": true,
  "<core_arch::simd::u32x16 as cmp::PartialEq>::eq": true,
  "<core_arch::simd::u32x16::splat::JustOne as clone::Clone>::clone": true,
  "<core_arch::simd::u32x2 as clone::Clone>::clone": true,
  "<core_arch::simd::u32x2 as cmp::PartialEq>::eq": true,
  "<core_arch::simd::u32x2::splat::JustOne as clone::Clone>::clone": true,
  "<core_arch::simd::u32x32 as clone::Clone>::clone": true,
  "<core_arch::simd::u32x32 as cmp::PartialEq>::eq": true,
  "<core_arch::simd::u32x32::splat::JustOne as clone::Clone>::clone": true,
  "<core_arch::simd::u32x4 as clone::Clone>::clone": true,
  "<core_arch::simd::u32x4 as cmp::PartialEq>::eq": true,
  "<core_arch::simd::u32x4::splat::JustOne as clone::Clone>::clone": true,
  "<core_arch::simd::u32x8 as clone::Clone>::clone": true,
  "<core_arch::simd::u32x8 as cmp::PartialEq>::eq": true,
  "<core_arch::simd::u32x8::splat::JustOne as clone::Clone>::clone": true,
  "<core_arch::simd::u64x1 as clone::Clone>::clone": true,
  "<core_arch::simd::u64x1 as cmp::PartialEq>::eq": true,
  "<core_arch::simd::u64x1::splat::JustOne as clone::Clone>::clone": true,
  "<core_arch::simd::u64x2 as clone::Clone>::clone": true,
  "<core_arch::simd::u64x2 as cmp::PartialEq>::eq": true,
  "<core_arch::simd::u64x2::splat::JustOne as clone::Clone>::clone": true,
  "<core_arch::simd::u64x4 as clone::Clone>::clone": true,
  "<core_arch::simd::u64x4 as cmp::PartialEq>::eq": true,
  "<core_arch::simd::u64x4::splat::JustOne as clone::Clone>::clone": true,
  "<core_arch::simd::u64x8 as clone::Clone>::clone": true,
  "<core_arch::simd::u64x8 as cmp::PartialEq>::eq": true,
  "<core_arch::simd::u64x8::splat::JustOne as clone::Clone>::clone": true,
  "<core_arch::simd::u8x16 as clone::Clone>::clone": true,
  "<core_arch::simd::u8x16 as cmp::PartialEq>::eq": true,
  "<core_arch::simd::u8x16::splat::JustOne as clone::Clone>::clone": true,
  "<core_arch::simd::u8x2 as clone::Clone>::clone": true,
  "<core_arch::simd::u8x2 as cmp::PartialEq>::eq": true,
  "<core_arch::simd::u8x2::splat::JustOne as clone::Clone>::clone": true,
  "<core_arch::simd::u8x32 as clone::Clone>::clone": true,
  "<core_arch::simd::u8x32 as cmp::PartialEq>::eq": true,
  "<core_arch::simd::u8x32::splat::JustOne as clone::Clone>::clone": true,
  "<core_arch::simd::u8x4 as clone::Clone>::clone": true,
  "<core_arch::simd::u8x4 as cmp::PartialEq>::eq": true,
  "<core_arch::simd::u8x4::splat::JustOne as clone::Clone>::clone": true,
  "<core_arch::simd::u8x64 as clone::Clone>::clone": true,
  "<core_arch::simd::u8x64 as cmp::PartialEq>::eq": true,
  "<core_arch::simd::u8x64::splat::JustOne as clone::Clone>::clone": true,
  "<core_arch::simd::u8x8 as clone::Clone>::clone": true,
  "<core_arch::simd::u8x8 as cmp::PartialEq>::eq": true,
  "<core_arch::simd::u8x8::splat::JustOne as clone::Clone>::clone": true,
  "<core_arch::x86::__m128 as clone::Clone>::clone": true,
  "<core_arch::x86::__m128::splat::JustOne as clone::Clone>::clone": true,
  "<core_arch::x86::__m128bh as clone::Clone>::clone": true,
  "<core_arch::x86::__m128bh::splat::JustOne as clone::Clone>::clone": true,
  "<core_arch::x86::__m128d as clone::Clone>::clone": true,
  "<core_arch::x86::__m128d::splat::JustOne as clone::Clone>::clone": true,
  "<core_arch::x86::__m128h as clone::Clone>::clone": true,
  "<core_arch::x86::__m128h::splat::JustOne as clone::Clone>::clone": true,
  "<core_arch::x86::__m128i as clone::Clone>::clone": true,
  "<core_arch::x86::__m128i::splat::JustOne as clone::Clone>::clone": true,
  "<core_arch::x86::__m256 as clone::Clone>::clone": true,
  "<core_arch::x86::__m256::splat::JustOne as clone::Clone>::clone": true,
  "<core_arch::x86::__m256bh as clone::Clone>::clone": true,
  "<core_arch::x86::__m256bh::splat::JustOne as clone::Clone>::clone": true,
  "<core_arch::x86::__m256d as clone::Clone>::clone": true,
  "<core_arch::x86::__m256d::splat::JustOne as clone::Clone>::clone": true,
  "<core_arch::x86::__m256h as clone::Clone>::clone": true,
  "<core_arch::x86::__m256h::splat::JustOne as clone::Clone>::clone": true,
  "<core_arch::x86::__m256i as clone::Clone>::clone": true,
  "<core_arch::x86::__m256i::splat::JustOne as clone::Clone>::clone": true,
  "<core_arch::x86::__m512 as clone::Clone>::clone": true,
  "<core_arch::x86::__m512::splat::JustOne as clone::Clone>::clone": true,
  "<core_arch::x86::__m512bh as clone::Clone>::clone": true,
  "<core_arch::x86::__m512bh::splat::JustOne as clone::Clone>::clone": true,
  "<core_arch::x86::__m512d as clone::Clone>::clone": true,
  "<core_arch::x86::__m512d::splat::JustOne as clone::Clone>::clone": true,
  "<core_arch::x86::__m512h as clone::Clone>::clone": true,
  "<core_arch::x86::__m512h::splat::JustOne as clone::Clone>::clone": true,
  "<core_arch::x86::__m512i as clone::Clone>::clone": true,
  "<core_arch::x86::__m512i::splat::JustOne as clone::Clone>::clone": true,
  "<core_arch::x86::bf16 as clone::Clone>::clone": true,
  "<core_arch::x86::cpuid::CpuidResult as clone::Clone>::clone": true,
  "<core_arch::x86::cpuid::CpuidResult as cmp::Eq>::assert_receiver_is_total_eq": true,
  "<core_arch::x86::cpuid::CpuidResult as cmp::Ord>::cmp": true,
  "<core_arch::x86::cpuid::CpuidResult as cmp::PartialEq>::eq": true,
  "<core_arch::x86::cpuid::CpuidResult as cmp::PartialOrd>::partial_cmp": true,
  "<core_simd::vector::Simd<f32, 16> as core_simd::to_bytes::ToBytes>::from_be_bytes": true,
  "<core_simd::vector::Simd<f32, 16> as core_simd::to_bytes::ToBytes>::from_le_bytes": true,
  "<core_simd::vector::Simd<f32, 16> as core_simd::to_bytes::ToBytes>::from_ne_bytes": true,
  "<core_simd::vector::Simd<f32, 16> as core_simd::to_bytes::ToBytes>::to_be_bytes": true,
  "<core_simd::vector::Simd<f32, 16> as core_simd::to_bytes::ToBytes>::to_le_bytes": true,
  "<core_simd::vector::Simd<f32, 16> as core_simd::to_bytes::ToBytes>::to_ne_bytes": true,
  "<core_simd::vector::Simd<f32, 1> as core_simd::to_bytes::ToBytes>::from_be_bytes": true,
  "<core_simd::vector::Simd<f32, 1> as core_simd::to_bytes::ToBytes>::from_le_bytes": true,
  "<core_simd::vector::Simd<f32, 1> as core_simd::to_bytes::ToBytes>::from_ne_bytes": true,
  "<core_simd::vector::Simd<f32, 1> as core_simd::to_bytes::ToBytes>::to_be_bytes": true,
  "<core_simd::vector::Simd<f32, 1> as core_simd::to_bytes::ToBytes>::to_le_bytes": true,
  "<core_simd::vector::Simd<f32, 1> as core_simd::to_bytes::ToBytes>::to_ne_bytes": true,
  "<core_simd::vector::Simd<f32, 2> as core_simd::to_bytes::ToBytes>::from_be_bytes": true,
  "<core_simd::vector::Simd<f32, 2> as core_simd::to_bytes::ToBytes>::from_le_bytes": true,
  "<core_simd::vector::Simd<f32, 2> as core_simd::to_bytes::ToBytes>::from_ne_bytes": true,
  "<core_simd::vector::Simd<f32, 2> as core_simd::to_bytes::ToBytes>::to_be_bytes": true,
  "<core_simd::vector::Simd<f32, 2> as core_simd::to_bytes::ToBytes>::to_le_bytes": true,
  "<core_simd::vector::Simd<f32, 2> as core_simd::to_bytes::ToBytes>::to_ne_bytes": true,
  "<core_simd::vector::Simd<f32, 4> as core_simd::to_bytes::ToBytes>::from_be_bytes": true,
  "<core_simd::vector::Simd<f32, 4> as core_simd::to_bytes::ToBytes>::from_le_bytes": true,
  "<core_simd::vector::Simd<f32, 4> as core_simd::to_bytes::ToBytes>::from_ne_bytes": true,
  "<core_simd::vector::Simd<f32, 4> as core_simd::to_bytes::ToBytes>::to_be_bytes": true,
  "<core_simd::vector::Simd<f32, 4> as core_simd::to_bytes::ToBytes>::to_le_bytes": true,
  "<core_simd::vector::Simd<f32, 4> as core_simd::to_bytes::ToBytes>::to_ne_bytes": true,
  "<core_simd::vector::Simd<f32, 8> as core_simd::to_bytes::ToBytes>::from_be_bytes": true,
  "<core_simd::vector::Simd<f32, 8> as core_simd::to_bytes::ToBytes>::from_le_bytes": true,
  "<core_simd::vector::Simd<f32, 8> as core_simd::to_bytes::ToBytes>::from_ne_bytes": true,
  "<core_simd::vector::Simd<f32, 8> as core_simd::to_bytes::ToBytes>::to_be_bytes": true,
  "<core_simd::vector::Simd<f32, 8> as core_simd::to_bytes::ToBytes>::to_le_bytes": true,
  "<core_simd::vector::Simd<f32, 8> as core_simd::to_bytes::ToBytes>::to_ne_bytes": true,
  "<core_simd::vector::Simd<f64, 1> as core_simd::to_bytes::ToBytes>::from_be_bytes": true,
  "<core_simd::vector::Simd<f64, 1> as core_simd::to_bytes::ToBytes>::from_le_bytes": true,
  "<core_simd::vector::Simd<f64, 1> as core_simd::to_bytes::ToBytes>::from_ne_bytes": true,
  "<core_simd::vector::Simd<f64, 1> as core_simd::to_bytes::ToBytes>::to_be_bytes": true,
  "<core_simd::vector::Simd<f64, 1> as core_simd::to_bytes::ToBytes>::to_le_bytes": true,
  "<core_simd::vector::Simd<f64, 1> as core_simd::to_bytes::ToBytes>::to_ne_bytes": true,
  "<core_simd::vector::Simd<f64, 2> as core_simd::to_bytes::ToBytes>::from_be_bytes": true,
  "<core_simd::vector::Simd<f64, 2> as core_simd::to_bytes::ToBytes>::from_le_bytes": true,
  "<core_simd::vector::Simd<f64, 2> as core_simd::to_bytes::ToBytes>::from_ne_bytes": true,
  "<core_simd::vector::Simd<f64, 2> as core_simd::to_bytes::ToBytes>::to_be_bytes": true,
  "<core_simd::vector::Simd<f64, 2> as core_simd::to_bytes::ToBytes>::to_le_bytes": true,
  "<core_simd::vector::Simd<f64, 2> as core_simd::to_bytes::ToBytes>::to_ne_bytes": true,
  "<core_simd::vector::Simd<f64, 4> as core_simd::to_bytes::ToBytes>::from_be_bytes": true,
  "<core_simd::vector::Simd<f64, 4> as core_simd::to_bytes::ToBytes>::from_le_bytes": true,
  "<core_simd::vector::Simd<f64, 4> as core_simd::to_bytes::ToBytes>::from_ne_bytes": true,
  "<core_simd::vector::Simd<f64, 4> as core_simd::to_bytes::ToBytes>::to_be_bytes": true,
  "<core_simd::vector::Simd<f64, 4> as core_simd::to_bytes::ToBytes>::to_le_bytes": true,
  "<core_simd::vector::Simd<f64, 4> as core_simd::to_bytes::ToBytes>::to_ne_bytes": true,
  "<core_simd::vector::Simd<f64, 8> as core_simd::to_bytes::ToBytes>::from_be_bytes": true,
  "<core_simd::vector::Simd<f64, 8> as core_simd::to_bytes::ToBytes>::from_le_bytes": true,
  "<core_simd::vector::Simd<f64, 8> as core_simd::to_bytes::ToBytes>::from_ne_bytes": true,
  "<core_simd::vector::Simd<f64, 8> as core_simd::to_bytes::ToBytes>::to_be_bytes": true,
  "<core_simd::vector::Simd<f64, 8> as core_simd::to_bytes::ToBytes>::to_le_bytes": true,
  "<core_simd::vector::Simd<f64, 8> as core_simd::to_bytes::ToBytes>::to_ne_bytes": true,
  "<core_simd::vector::Simd<i16, 16> as core_simd::to_bytes::ToBytes>::from_be_bytes": true,
  "<core_simd::vector::Simd<i16, 16> as core_simd::to_bytes::ToBytes>::from_le_bytes": true,
  "<core_simd::vector::Simd<i16, 16> as core_simd::to_bytes::ToBytes>::from_ne_bytes": true,
  "<core_simd::vector::Simd<i16, 16> as core_simd::to_bytes::ToBytes>::to_be_bytes": true,
  "<core_simd::vector::Simd<i16, 16> as core_simd::to_bytes::ToBytes>::to_le_bytes": true,
  "<core_simd::vector::Simd<i16, 16> as core_simd::to_bytes::ToBytes>::to_ne_bytes": true,
  "<core_simd::vector::Simd<i16, 1> as core_simd::to_bytes::ToBytes>::from_be_bytes": true,
  "<core_simd::vector::Simd<i16, 1> as core_simd::to_bytes::ToBytes>::from_le_bytes": true,
  "<core_simd::vector::Simd<i16, 1> as core_simd::to_bytes::ToBytes>::from_ne_bytes": true,
  "<core_simd::vector::Simd<i16, 1> as core_simd::to_bytes::ToBytes>::to_be_bytes": true,
  "<core_simd::vector::Simd<i16, 1> as core_simd::to_bytes::ToBytes>::to_le_bytes": true,
  "<core_simd::vector::Simd<i16, 1> as core_simd::to_bytes::ToBytes>::to_ne_bytes": true,
  "<core_simd::vector::Simd<i16, 2> as core_simd::to_bytes::ToBytes>::from_be_bytes": true,
  "<core_simd::vector::Simd<i16, 2> as core_simd::to_bytes::ToBytes>::from_le_bytes": true,
  "<core_simd::vector::Simd<i16, 2> as core_simd::to_bytes::ToBytes>::from_ne_bytes": true,
  "<core_simd::vector::Simd<i16, 2> as core_simd::to_bytes::ToBytes>::to_be_bytes": true,
  "<core_simd::vector::Simd<i16, 2> as core_simd::to_bytes::ToBytes>::to_le_bytes": true,
  "<core_simd::vector::Simd<i16, 2> as core_simd::to_bytes::ToBytes>::to_ne_bytes": true,
  "<core_simd::vector::Simd<i16, 32> as core_simd::to_bytes::ToBytes>::from_be_bytes": true,
  "<core_simd::vector::Simd<i16, 32> as core_simd::to_bytes::ToBytes>::from_le_bytes": true,
  "<core_simd::vector::Simd<i16, 32> as core_simd::to_bytes::ToBytes>::from_ne_bytes": true,
  "<core_simd::vector::Simd<i16, 32> as core_simd::to_bytes::ToBytes>::to_be_bytes": true,
  "<core_simd::vector::Simd<i16, 32> as core_simd::to_bytes::ToBytes>::to_le_bytes": true,
  "<core_simd::vector::Simd<i16, 32> as core_simd::to_bytes::ToBytes>::to_ne_bytes": true,
  "<core_simd::vector::Simd<i16, 4> as core_simd::to_bytes::ToBytes>::from_be_bytes": true,
  "<core_simd::vector::Simd<i16, 4> as core_simd::to_bytes::ToBytes>::from_le_bytes": true,
  "<core_simd::vector::Simd<i16, 4> as core_simd::to_bytes::ToBytes>::from_ne_bytes": true,
  "<core_simd::vector::Simd<i16, 4> as core_simd::to_bytes::ToBytes>::to_be_bytes": true,
  "<core_simd::vector::Simd<i16, 4> as core_simd::to_bytes::ToBytes>::to_le_bytes": true,
  "<core_simd::vector::Simd<i16, 4> as core_simd::to_bytes::ToBytes>::to_ne_bytes": true,
  "<core_simd::vector::Simd<i16, 8> as core_simd::to_bytes::ToBytes>::from_be_bytes": true,
  "<core_simd::vector::Simd<i16, 8> as core_simd::to_bytes::ToBytes>::from_le_bytes": true,
  "<core_simd::vector::Simd<i16, 8> as core_simd::to_bytes::ToBytes>::from_ne_bytes": true,
  "<core_simd::vector::Simd<i16, 8> as core_simd::to_bytes::ToBytes>::to_be_bytes": true,
  "<core_simd::vector::Simd<i16, 8> as core_simd::to_bytes::ToBytes>::to_le_bytes": true,
  "<core_simd::vector::Simd<i16, 8> as core_simd::to_bytes::ToBytes>::to_ne_bytes": true,
  "<core_simd::vector::Simd<i32, 16> as core_simd::to_bytes::ToBytes>::from_be_bytes": true,
  "<core_simd::vector::Simd<i32, 16> as core_simd::to_bytes::ToBytes>::from_le_bytes": true,
  "<core_simd::vector::Simd<i32, 16> as core_simd::to_bytes::ToBytes>::from_ne_bytes": true,
  "<core_simd::vector::Simd<i32, 16> as core_simd::to_bytes::ToBytes>::to_be_bytes": true,
  "<core_simd::vector::Simd<i32, 16> as core_simd::to_bytes::ToBytes>::to_le_bytes": true,
  "<core_simd::vector::Simd<i32, 16> as core_simd::to_bytes::ToBytes>::to_ne_bytes": true,
  "<core_simd::vector::Simd<i32, 1> as core_simd::to_bytes::ToBytes>::from_be_bytes": true,
  "<core_simd::vector::Simd<i32, 1> as core_simd::to_bytes::ToBytes>::from_le_bytes": true,
  "<core_simd::vector::Simd<i32, 1> as core_simd::to_bytes::ToBytes>::from_ne_bytes": true,
  "<core_simd::vector::Simd<i32, 1> as core_simd::to_bytes::ToBytes>::to_be_bytes": true,
  "<core_simd::vector::Simd<i32, 1> as core_simd::to_bytes::ToBytes>::to_le_bytes": true,
  "<core_simd::vector::Simd<i32, 1> as core_simd::to_bytes::ToBytes>::to_ne_bytes": true,
  "<core_simd::vector::Simd<i32, 2> as core_simd::to_bytes::ToBytes>::from_be_bytes": true,
  "<core_simd::vector::Simd<i32, 2> as core_simd::to_bytes::ToBytes>::from_le_bytes": true,
  "<core_simd::vector::Simd<i32, 2> as core_simd::to_bytes::ToBytes>::from_ne_bytes": true,
  "<core_simd::vector::Simd<i32, 2> as core_simd::to_bytes::ToBytes>::to_be_bytes": true,
  "<core_simd::vector::Simd<i32, 2> as core_simd::to_bytes::ToBytes>::to_le_bytes": true,
  "<core_simd::vector::Simd<i32, 2> as core_simd::to_bytes::ToBytes>::to_ne_bytes": true,
  "<core_simd::vector::Simd<i32, 4> as core_simd::to_bytes::ToBytes>::from_be_bytes": true,
  "<core_simd::vector::Simd<i32, 4> as core_simd::to_bytes::ToBytes>::from_le_bytes": true,
  "<core_simd::vector::Simd<i32, 4> as core_simd::to_bytes::ToBytes>::from_ne_bytes": true,
  "<core_simd::vector::Simd<i32, 4> as core_simd::to_bytes::ToBytes>::to_be_bytes": true,
  "<core_simd::vector::Simd<i32, 4> as core_simd::to_bytes::ToBytes>::to_le_bytes": true,
  "<core_simd::vector::Simd<i32, 4> as core_simd::to_bytes::ToBytes>::to_ne_bytes": true,
  "<core_simd::vector::Simd<i32, 8> as core_simd::to_bytes::ToBytes>::from_be_bytes": true,
  "<core_simd::vector::Simd<i32, 8> as core_simd::to_bytes::ToBytes>::from_le_bytes": true,
  "<core_simd::vector::Simd<i32, 8> as core_simd::to_bytes::ToBytes>::from_ne_bytes": true,
  "<core_simd::vector::Simd<i32, 8> as core_simd::to_bytes::ToBytes>::to_be_bytes": true,
  "<core_simd::vector::Simd<i32, 8> as core_simd::to_bytes::ToBytes>::to_le_bytes": true,
  "<core_simd::vector::Simd<i32, 8> as core_simd::to_bytes::ToBytes>::to_ne_bytes": true,
  "<core_simd::vector::Simd<i64, 1> as core_simd::to_bytes::ToBytes>::from_be_bytes": true,
  "<core_simd::vector::Simd<i64, 1> as core_simd::to_bytes::ToBytes>::from_le_bytes": true,
  "<core_simd::vector::Simd<i64, 1> as core_simd::to_bytes::ToBytes>::from_ne_bytes": true,
  "<core_simd::vector::Simd<i64, 1> as core_simd::to_bytes::ToBytes>::to_be_bytes": true,
  "<core_simd::vector::Simd<i64, 1> as core_simd::to_bytes::ToBytes>::to_le_bytes": true,
  "<core_simd::vector::Simd<i64, 1> as core_simd::to_bytes::ToBytes>::to_ne_bytes": true,
  "<core_simd::vector::Simd<i64, 2> as core_simd::to_bytes::ToBytes>::from_be_bytes": true,
  "<core_simd::vector::Simd<i64, 2> as core_simd::to_bytes::ToBytes>::from_le_bytes": true,
  "<core_simd::vector::Simd<i64, 2> as core_simd::to_bytes::ToBytes>::from_ne_bytes": true,
  "<core_simd::vector::Simd<i64, 2> as core_simd::to_bytes::ToBytes>::to_be_bytes": true,
  "<core_simd::vector::Simd<i64, 2> as core_simd::to_bytes::ToBytes>::to_le_bytes": true,
  "<core_simd::vector::Simd<i64, 2> as core_simd::to_bytes::ToBytes>::to_ne_bytes": true,
  "<core_simd::vector::Simd<i64, 4> as core_simd::to_bytes::ToBytes>::from_be_bytes": true,
  "<core_simd::vector::Simd<i64, 4> as core_simd::to_bytes::ToBytes>::from_le_bytes": true,
  "<core_simd::vector::Simd<i64, 4> as core_simd::to_bytes::ToBytes>::from_ne_bytes": true,
  "<core_simd::vector::Simd<i64, 4> as core_simd::to_bytes::ToBytes>::to_be_bytes": true,
  "<core_simd::vector::Simd<i64, 4> as core_simd::to_bytes::ToBytes>::to_le_bytes": true,
  "<core_simd::vector::Simd<i64, 4> as core_simd::to_bytes::ToBytes>::to_ne_bytes": true,
  "<core_simd::vector::Simd<i64, 8> as core_simd::to_bytes::ToBytes>::from_be_bytes": true,
  "<core_simd::vector::Simd<i64, 8> as core_simd::to_bytes::ToBytes>::from_le_bytes": true,
  "<core_simd::vector::Simd<i64, 8> as core_simd::to_bytes::ToBytes>::from_ne_bytes": true,
  "<core_simd::vector::Simd<i64, 8> as core_simd::to_bytes::ToBytes>::to_be_bytes": true,
  "<core_simd::vector::Simd<i64, 8> as core_simd::to_bytes::ToBytes>::to_le_bytes": true,
  "<core_simd::vector::Simd<i64, 8> as core_simd::to_bytes::ToBytes>::to_ne_bytes": true,
  "<core_simd::vector::Simd<i8, 16> as core_simd::to_bytes::ToBytes>::from_be_bytes": true,
  "<core_simd::vector::Simd<i8, 16> as core_simd::to_bytes::ToBytes>::from_le_bytes": true,
  "<core_simd::vector::Simd<i8, 16> as core_simd::to_bytes::ToBytes>::from_ne_bytes": true,
  "<core_simd::vector::Simd<i8, 16> as core_simd::to_bytes::ToBytes>::to_be_bytes": true,
  "<core_simd::vector::Simd<i8, 16> as core_simd::to_bytes::ToBytes>::to_le_bytes": true,
  "<core_simd::vector::Simd<i8, 16> as core_simd::to_bytes::ToBytes>::to_ne_bytes": true,
  "<core_simd::vector::Simd<i8, 1> as core_simd::to_bytes::ToBytes>::from_be_bytes": true,
  "<core_simd::vector::Simd<i8, 1> as core_simd::to_bytes::ToBytes>::from_le_bytes": true,
  "<core_simd::vector::Simd<i8, 1> as core_simd::to_bytes::ToBytes>::from_ne_bytes": true,
  "<core_simd::vector::Simd<i8, 1> as core_simd::to_bytes::ToBytes>::to_be_bytes": true,
  "<core_simd::vector::Simd<i8, 1> as core_simd::to_bytes::ToBytes>::to_le_bytes": true,
  "<core_simd::vector::Simd<i8, 1> as core_simd::to_bytes::ToBytes>::to_ne_bytes": true,
  "<core_simd::vector::Simd<i8, 2> as core_simd::to_bytes::ToBytes>::from_be_bytes": true,
  "<core_simd::vector::Simd<i8, 2> as core_simd::to_bytes::ToBytes>::from_le_bytes": true,
  "<core_simd::vector::Simd<i8, 2> as core_simd::to_bytes::ToBytes>::from_ne_bytes": true,
  "<core_simd::vector::Simd<i8, 2> as core_simd::to_bytes::ToBytes>::to_be_bytes": true,
  "<core_simd::vector::Simd<i8, 2> as core_simd::to_bytes::ToBytes>::to_le_bytes": true,
  "<core_simd::vector::Simd<i8, 2> as core_simd::to_bytes::ToBytes>::to_ne_bytes": true,
  "<core_simd::vector::Simd<i8, 32> as core_simd::to_bytes::ToBytes>::from_be_bytes": true,
  "<core_simd::vector::Simd<i8, 32> as core_simd::to_bytes::ToBytes>::from_le_bytes": true,
  "<core_simd::vector::Simd<i8, 32> as core_simd::to_bytes::ToBytes>::from_ne_bytes": true,
  "<core_simd::vector::Simd<i8, 32> as core_simd::to_bytes::ToBytes>::to_be_bytes": true,
  "<core_simd::vector::Simd<i8, 32> as core_simd::to_bytes::ToBytes>::to_le_bytes": true,
  "<core_simd::vector::Simd<i8, 32> as core_simd::to_bytes::ToBytes>::to_ne_bytes": true,
  "<core_simd::vector::Simd<i8, 4> as core_simd::to_bytes::ToBytes>::from_be_bytes": true,
  "<core_simd::vector::Simd<i8, 4> as core_simd::to_bytes::ToBytes>::from_le_bytes": true,
  "<core_simd::vector::Simd<i8, 4> as core_simd::to_bytes::ToBytes>::from_ne_bytes": true,
  "<core_simd::vector::Simd<i8, 4> as core_simd::to_bytes::ToBytes>::to_be_bytes": true,
  "<core_simd::vector::Simd<i8, 4> as core_simd::to_bytes::ToBytes>::to_le_bytes": true,
  "<core_simd::vector::Simd<i8, 4> as core_simd::to_bytes::ToBytes>::to_ne_bytes": true,
  "<core_simd::vector::Simd<i8, 64> as core_simd::to_bytes::ToBytes>::from_be_bytes": true,
  "<core_simd::vector::Simd<i8, 64> as core_simd::to_bytes::ToBytes>::from_le_bytes": true,
  "<core_simd::vector::Simd<i8, 64> as core_simd::to_bytes::ToBytes>::from_ne_bytes": true,
  "<core_simd::vector::Simd<i8, 64> as core_simd::to_bytes::ToBytes>::to_be_bytes": true,
  "<core_simd::vector::Simd<i8, 64> as core_simd::to_bytes::ToBytes>::to_le_bytes": true,
  "<core_simd::vector::Simd<i8, 64> as core_simd::to_bytes::ToBytes>::to_ne_bytes": true,
  "<core_simd::vector::Simd<i8, 8> as core_simd::to_bytes::ToBytes>::from_be_bytes": true,
  "<core_simd::vector::Simd<i8, 8> as core_simd::to_bytes::ToBytes>::from_le_bytes": true,
  "<core_simd::vector::Simd<i8, 8> as core_simd::to_bytes::ToBytes>::from_ne_bytes": true,
  "<core_simd::vector::Simd<i8, 8> as core_simd::to_bytes::ToBytes>::to_be_bytes": true,
  "<core_simd::vector::Simd<i8, 8> as core_simd::to_bytes::ToBytes>::to_le_bytes": true,
  "<core_simd::vector::Simd<i8, 8> as core_simd::to_bytes::ToBytes>::to_ne_bytes": true,
  "<core_simd::vector::Simd<isize, 1> as core_simd::to_bytes::ToBytes>::from_be_bytes": true,
  "<core_simd::vector::Simd<isize, 1> as core_simd::to_bytes::ToBytes>::from_le_bytes": true,
  "<core_simd::vector::Simd<isize, 1> as core_simd::to_bytes::ToBytes>::from_ne_bytes": true,
  "<core_simd::vector::Simd<isize, 1> as core_simd::to_bytes::ToBytes>::to_be_bytes": true,
  "<core_simd::vector::Simd<isize, 1> as core_simd::to_bytes::ToBytes>::to_le_bytes": true,
  "<core_simd::vector::Simd<isize, 1> as core_simd::to_bytes::ToBytes>::to_ne_bytes": true,
  "<core_simd::vector::Simd<isize, 2> as core_simd::to_bytes::ToBytes>::from_be_bytes": true,
  "<core_simd::vector::Simd<isize, 2> as core_simd::to_bytes::ToBytes>::from_le_bytes": true,
  "<core_simd::vector::Simd<isize, 2> as core_simd::to_bytes::ToBytes>::from_ne_bytes": true,
  "<core_simd::vector::Simd<isize, 2> as core_simd::to_bytes::ToBytes>::to_be_bytes": true,
  "<core_simd::vector::Simd<isize, 2> as core_simd::to_bytes::ToBytes>::to_le_bytes": true,
  "<core_simd::vector::Simd<isize, 2> as core_simd::to_bytes::ToBytes>::to_ne_bytes": true,
  "<core_simd::vector::Simd<isize, 4> as core_simd::to_bytes::ToBytes>::from_be_bytes": true,
  "<core_simd::vector::Simd<isize, 4> as core_simd::to_bytes::ToBytes>::from_le_bytes": true,
  "<core_simd::vector::Simd<isize, 4> as core_simd::to_bytes::ToBytes>::from_ne_bytes": true,
  "<core_simd::vector::Simd<isize, 4> as core_simd::to_bytes::ToBytes>::to_be_bytes": true,
  "<core_simd::vector::Simd<isize, 4> as core_simd::to_bytes::ToBytes>::to_le_bytes": true,
  "<core_simd::vector::Simd<isize, 4> as core_simd::to_bytes::ToBytes>::to_ne_bytes": true,
  "<core_simd::vector::Simd<isize, 8> as core_simd::to_bytes::ToBytes>::from_be_bytes": true,
  "<core_simd::vector::Simd<isize, 8> as core_simd::to_bytes::ToBytes>::from_le_bytes": true,
  "<core_simd::vector::Simd<isize, 8> as core_simd::to_bytes::ToBytes>::from_ne_bytes": true,
  "<core_simd::vector::Simd<isize, 8> as core_simd::to_bytes::ToBytes>::to_be_bytes": true,
  "<core_simd::vector::Simd<isize, 8> as core_simd::to_bytes::ToBytes>::to_le_bytes": true,
  "<core_simd::vector::Simd<isize, 8> as core_simd::to_bytes::ToBytes>::to_ne_bytes": true,
  "<core_simd::vector::Simd<u16, 16> as core_simd::to_bytes::ToBytes>::from_be_bytes": true,
  "<core_simd::vector::Simd<u16, 16> as core_simd::to_bytes::ToBytes>::from_le_bytes": true,
  "<core_simd::vector::Simd<u16, 16> as core_simd::to_bytes::ToBytes>::from_ne_bytes": true,
  "<core_simd::vector::Simd<u16, 16> as core_simd::to_bytes::ToBytes>::to_be_bytes": true,
  "<core_simd::vector::Simd<u16, 16> as core_simd::to_bytes::ToBytes>::to_le_bytes": true,
  "<core_simd::vector::Simd<u16, 16> as core_simd::to_bytes::ToBytes>::to_ne_bytes": true,
  "<core_simd::vector::Simd<u16, 1> as core_simd::to_bytes::ToBytes>::from_be_bytes": true,
  "<core_simd::vector::Simd<u16, 1> as core_simd::to_bytes::ToBytes>::from_le_bytes": true,
  "<core_simd::vector::Simd<u16, 1> as core_simd::to_bytes::ToBytes>::from_ne_bytes": true,
  "<core_simd::vector::Simd<u16, 1> as core_simd::to_bytes::ToBytes>::to_be_bytes": true,
  "<core_simd::vector::Simd<u16, 1> as core_simd::to_bytes::ToBytes>::to_le_bytes": true,
  "<core_simd::vector::Simd<u16, 1> as core_simd::to_bytes::ToBytes>::to_ne_bytes": true,
  "<core_simd::vector::Simd<u16, 2> as core_simd::to_bytes::ToBytes>::from_be_bytes": true,
  "<core_simd::vector::Simd<u16, 2> as core_simd::to_bytes::ToBytes>::from_le_bytes": true,
  "<core_simd::vector::Simd<u16, 2> as core_simd::to_bytes::ToBytes>::from_ne_bytes": true,
  "<core_simd::vector::Simd<u16, 2> as core_simd::to_bytes::ToBytes>::to_be_bytes": true,
  "<core_simd::vector::Simd<u16, 2> as core_simd::to_bytes::ToBytes>::to_le_bytes": true,
  "<core_simd::vector::Simd<u16, 2> as core_simd::to_bytes::ToBytes>::to_ne_bytes": true,
  "<core_simd::vector::Simd<u16, 32> as core_simd::to_bytes::ToBytes>::from_be_bytes": true,
  "<core_simd::vector::Simd<u16, 32> as core_simd::to_bytes::ToBytes>::from_le_bytes": true,
  "<core_simd::vector::Simd<u16, 32> as core_simd::to_bytes::ToBytes>::from_ne_bytes": true,
  "<core_simd::vector::Simd<u16, 32> as core_simd::to_bytes::ToBytes>::to_be_bytes": true,
  "<core_simd::vector::Simd<u16, 32> as core_simd::to_bytes::ToBytes>::to_le_bytes": true,
  "<core_simd::vector::Simd<u16, 32> as core_simd::to_bytes::ToBytes>::to_ne_bytes": true,
  "<core_simd::vector::Simd<u16, 4> as core_simd::to_bytes::ToBytes>::from_be_bytes": true,
  "<core_simd::vector::Simd<u16, 4> as core_simd::to_bytes::ToBytes>::from_le_bytes": true,
  "<core_simd::vector::Simd<u16, 4> as core_simd::to_bytes::ToBytes>::from_ne_bytes": true,
  "<core_simd::vector::Simd<u16, 4> as core_simd::to_bytes::ToBytes>::to_be_bytes": true,
  "<core_simd::vector::Simd<u16, 4> as core_simd::to_bytes::ToBytes>::to_le_bytes": true,
  "<core_simd::vector::Simd<u16, 4> as core_simd::to_bytes::ToBytes>::to_ne_bytes": true,
  "<core_simd::vector::Simd<u16, 8> as core_simd::to_bytes::ToBytes>::from_be_bytes": true,
  "<core_simd::vector::Simd<u16, 8> as core_simd::to_bytes::ToBytes>::from_le_bytes": true,
  "<core_simd::vector::Simd<u16, 8> as core_simd::to_bytes::ToBytes>::from_ne_bytes": true,
  "<core_simd::vector::Simd<u16, 8> as core_simd::to_bytes::ToBytes>::to_be_bytes": true,
  "<core_simd::vector::Simd<u16, 8> as core_simd::to_bytes::ToBytes>::to_le_bytes": true,
  "<core_simd::vector::Simd<u16, 8> as core_simd::to_bytes::ToBytes>::to_ne_bytes": true,
  "<core_simd::vector::Simd<u32, 16> as core_simd::to_bytes::ToBytes>::from_be_bytes": true,
  "<core_simd::vector::Simd<u32, 16> as core_simd::to_bytes::ToBytes>::from_le_bytes": true,
  "<core_simd::vector::Simd<u32, 16> as core_simd::to_bytes::ToBytes>::from_ne_bytes": true,
  "<core_simd::vector::Simd<u32, 16> as core_simd::to_bytes::ToBytes>::to_be_bytes": true,
  "<core_simd::vector::Simd<u32, 16> as core_simd::to_bytes::ToBytes>::to_le_bytes": true,
  "<core_simd::vector::Simd<u32, 16> as core_simd::to_bytes::ToBytes>::to_ne_bytes": true,
  "<core_simd::vector::Simd<u32, 1> as core_simd::to_bytes::ToBytes>::from_be_bytes": true,
  "<core_simd::vector::Simd<u32, 1> as core_simd::to_bytes::ToBytes>::from_le_bytes": true,
  "<core_simd::vector::Simd<u32, 1> as core_simd::to_bytes::ToBytes>::from_ne_bytes": true,
  "<core_simd::vector::Simd<u32, 1> as core_simd::to_bytes::ToBytes>::to_be_bytes": true,
  "<core_simd::vector::Simd<u32, 1> as core_simd::to_bytes::ToBytes>::to_le_bytes": true,
  "<core_simd::vector::Simd<u32, 1> as core_simd::to_bytes::ToBytes>::to_ne_bytes": true,
  "<core_simd::vector::Simd<u32, 2> as core_simd::to_bytes::ToBytes>::from_be_bytes": true,
  "<core_simd::vector::Simd<u32, 2> as core_simd::to_bytes::ToBytes>::from_le_bytes": true,
  "<core_simd::vector::Simd<u32, 2> as core_simd::to_bytes::ToBytes>::from_ne_bytes": true,
  "<core_simd::vector::Simd<u32, 2> as core_simd::to_bytes::ToBytes>::to_be_bytes": true,
  "<core_simd::vector::Simd<u32, 2> as core_simd::to_bytes::ToBytes>::to_le_bytes": true,
  "<core_simd::vector::Simd<u32, 2> as core_simd::to_bytes::ToBytes>::to_ne_bytes": true,
  "<core_simd::vector::Simd<u32, 4> as core_simd::to_bytes::ToBytes>::from_be_bytes": true,
  "<core_simd::vector::Simd<u32, 4> as core_simd::to_bytes::ToBytes>::from_le_bytes": true,
  "<core_simd::vector::Simd<u32, 4> as core_simd::to_bytes::ToBytes>::from_ne_bytes": true,
  "<core_simd::vector::Simd<u32, 4> as core_simd::to_bytes::ToBytes>::to_be_bytes": true,
  "<core_simd::vector::Simd<u32, 4> as core_simd::to_bytes::ToBytes>::to_le_bytes": true,
  "<core_simd::vector::Simd<u32, 4> as core_simd::to_bytes::ToBytes>::to_ne_bytes": true,
  "<core_simd::vector::Simd<u32, 8> as core_simd::to_bytes::ToBytes>::from_be_bytes": true,
  "<core_simd::vector::Simd<u32, 8> as core_simd::to_bytes::ToBytes>::from_le_bytes": true,
  "<core_simd::vector::Simd<u32, 8> as core_simd::to_bytes::ToBytes>::from_ne_bytes": true,
  "<core_simd::vector::Simd<u32, 8> as core_simd::to_bytes::ToBytes>::to_be_bytes": true,
  "<core_simd::vector::Simd<u32, 8> as core_simd::to_bytes::ToBytes>::to_le_bytes": true,
  "<core_simd::vector::Simd<u32, 8> as core_simd::to_bytes::ToBytes>::to_ne_bytes": true,
  "<core_simd::vector::Simd<u64, 1> as core_simd::to_bytes::ToBytes>::from_be_bytes": true,
  "<core_simd::vector::Simd<u64, 1> as core_simd::to_bytes::ToBytes>::from_le_bytes": true,
  "<core_simd::vector::Simd<u64, 1> as core_simd::to_bytes::ToBytes>::from_ne_bytes": true,
  "<core_simd::vector::Simd<u64, 1> as core_simd::to_bytes::ToBytes>::to_be_bytes": true,
  "<core_simd::vector::Simd<u64, 1> as core_simd::to_bytes::ToBytes>::to_le_bytes": true,
  "<core_simd::vector::Simd<u64, 1> as core_simd::to_bytes::ToBytes>::to_ne_bytes": true,
  "<core_simd::vector::Simd<u64, 2> as core_simd::to_bytes::ToBytes>::from_be_bytes": true,
  "<core_simd::vector::Simd<u64, 2> as core_simd::to_bytes::ToBytes>::from_le_bytes": true,
  "<core_simd::vector::Simd<u64, 2> as core_simd::to_bytes::ToBytes>::from_ne_bytes": true,
  "<core_simd::vector::Simd<u64, 2> as core_simd::to_bytes::ToBytes>::to_be_bytes": true,
  "<core_simd::vector::Simd<u64, 2> as core_simd::to_bytes::ToBytes>::to_le_bytes": true,
  "<core_simd::vector::Simd<u64, 2> as core_simd::to_bytes::ToBytes>::to_ne_bytes": true,
  "<core_simd::vector::Simd<u64, 4> as core_simd::to_bytes::ToBytes>::from_be_bytes": true,
  "<core_simd::vector::Simd<u64, 4> as core_simd::to_bytes::ToBytes>::from_le_bytes": true,
  "<core_simd::vector::Simd<u64, 4> as core_simd::to_bytes::ToBytes>::from_ne_bytes": true,
  "<core_simd::vector::Simd<u64, 4> as core_simd::to_bytes::ToBytes>::to_be_bytes": true,
  "<core_simd::vector::Simd<u64, 4> as core_simd::to_bytes::ToBytes>::to_le_bytes": true,
  "<core_simd::vector::Simd<u64, 4> as core_simd::to_bytes::ToBytes>::to_ne_bytes": true,
  "<core_simd::vector::Simd<u64, 8> as core_simd::to_bytes::ToBytes>::from_be_bytes": true,
  "<core_simd::vector::Simd<u64, 8> as core_simd::to_bytes::ToBytes>::from_le_bytes": true,
  "<core_simd::vector::Simd<u64, 8> as core_simd::to_bytes::ToBytes>::from_ne_bytes": true,
  "<core_simd::vector::Simd<u64, 8> as core_simd::to_bytes::ToBytes>::to_be_bytes": true,
  "<core_simd::vector::Simd<u64, 8> as core_simd::to_bytes::ToBytes>::to_le_bytes": true,
  "<core_simd::vector::Simd<u64, 8> as core_simd::to_bytes::ToBytes>::to_ne_bytes": true,
  "<core_simd::vector::Simd<u8, 16> as core_simd::to_bytes::ToBytes>::from_be_bytes": true,
  "<core_simd::vector::Simd<u8, 16> as core_simd::to_bytes::ToBytes>::from_le_bytes": true,
  "<core_simd::vector::Simd<u8, 16> as core_simd::to_bytes::ToBytes>::from_ne_bytes": true,
  "<core_simd::vector::Simd<u8, 16> as core_simd::to_bytes::ToBytes>::to_be_bytes": true,
  "<core_simd::vector::Simd<u8, 16> as core_simd::to_bytes::ToBytes>::to_le_bytes": true,
  "<core_simd::vector::Simd<u8, 16> as core_simd::to_bytes::ToBytes>::to_ne_bytes": true,
  "<core_simd::vector::Simd<u8, 1> as core_simd::to_bytes::ToBytes>::from_be_bytes": true,
  "<core_simd::vector::Simd<u8, 1> as core_simd::to_bytes::ToBytes>::from_le_bytes": true,
  "<core_simd::vector::Simd<u8, 1> as core_simd::to_bytes::ToBytes>::from_ne_bytes": true,
  "<core_simd::vector::Simd<u8, 1> as core_simd::to_bytes::ToBytes>::to_be_bytes": true,
  "<core_simd::vector::Simd<u8, 1> as core_simd::to_bytes::ToBytes>::to_le_bytes": true,
  "<core_simd::vector::Simd<u8, 1> as core_simd::to_bytes::ToBytes>::to_ne_bytes": true,
  "<core_simd::vector::Simd<u8, 2> as core_simd::to_bytes::ToBytes>::from_be_bytes": true,
  "<core_simd::vector::Simd<u8, 2> as core_simd::to_bytes::ToBytes>::from_le_bytes": true,
  "<core_simd::vector::Simd<u8, 2> as core_simd::to_bytes::ToBytes>::from_ne_bytes": true,
  "<core_simd::vector::Simd<u8, 2> as core_simd::to_bytes::ToBytes>::to_be_bytes": true,
  "<core_simd::vector::Simd<u8, 2> as core_simd::to_bytes::ToBytes>::to_le_bytes": true,
  "<core_simd::vector::Simd<u8, 2> as core_simd::to_bytes::ToBytes>::to_ne_bytes": true,
  "<core_simd::vector::Simd<u8, 32> as core_simd::to_bytes::ToBytes>::from_be_bytes": true,
  "<core_simd::vector::Simd<u8, 32> as core_simd::to_bytes::ToBytes>::from_le_bytes": true,
  "<core_simd::vector::Simd<u8, 32> as core_simd::to_bytes::ToBytes>::from_ne_bytes": true,
  "<core_simd::vector::Simd<u8, 32> as core_simd::to_bytes::ToBytes>::to_be_bytes": true,
  "<core_simd::vector::Simd<u8, 32> as core_simd::to_bytes::ToBytes>::to_le_bytes": true,
  "<core_simd::vector::Simd<u8, 32> as core_simd::to_bytes::ToBytes>::to_ne_bytes": true,
  "<core_simd::vector::Simd<u8, 4> as core_simd::to_bytes::ToBytes>::from_be_bytes": true,
  "<core_simd::vector::Simd<u8, 4> as core_simd::to_bytes::ToBytes>::from_le_bytes": true,
  "<core_simd::vector::Simd<u8, 4> as core_simd::to_bytes::ToBytes>::from_ne_bytes": true,
  "<core_simd::vector::Simd<u8, 4> as core_simd::to_bytes::ToBytes>::to_be_bytes": true,
  "<core_simd::vector::Simd<u8, 4> as core_simd::to_bytes::ToBytes>::to_le_bytes": true,
  "<core_simd::vector::Simd<u8, 4> as core_simd::to_bytes::ToBytes>::to_ne_bytes": true,
  "<core_simd::vector::Simd<u8, 64> as core_simd::to_bytes::ToBytes>::from_be_bytes": true,
  "<core_simd::vector::Simd<u8, 64> as core_simd::to_bytes::ToBytes>::from_le_bytes": true,
  "<core_simd::vector::Simd<u8, 64> as core_simd::to_bytes::ToBytes>::from_ne_bytes": true,
  "<core_simd::vector::Simd<u8, 64> as core_simd::to_bytes::ToBytes>::to_be_bytes": true,
  "<core_simd::vector::Simd<u8, 64> as core_simd::to_bytes::ToBytes>::to_le_bytes": true,
  "<core_simd::vector::Simd<u8, 64> as core_simd::to_bytes::ToBytes>::to_ne_bytes": true,
  "<core_simd::vector::Simd<u8, 8> as core_simd::to_bytes::ToBytes>::from_be_bytes": true,
  "<core_simd::vector::Simd<u8, 8> as core_simd::to_bytes::ToBytes>::from_le_bytes": true,
  "<core_simd::vector::Simd<u8, 8> as core_simd::to_bytes::ToBytes>::from_ne_bytes": true,
  "<core_simd::vector::Simd<u8, 8> as core_simd::to_bytes::ToBytes>::to_be_bytes": true,
  "<core_simd::vector::Simd<u8, 8> as core_simd::to_bytes::ToBytes>::to_le_bytes": true,
  "<core_simd::vector::Simd<u8, 8> as core_simd::to_bytes::ToBytes>::to_ne_bytes": true,
  "<core_simd::vector::Simd<usize, 1> as core_simd::to_bytes::ToBytes>::from_be_bytes": true,
  "<core_simd::vector::Simd<usize, 1> as core_simd::to_bytes::ToBytes>::from_le_bytes": true,
  "<core_simd::vector::Simd<usize, 1> as core_simd::to_bytes::ToBytes>::from_ne_bytes": true,
  "<core_simd::vector::Simd<usize, 1> as core_simd::to_bytes::ToBytes>::to_be_bytes": true,
  "<core_simd::vector::Simd<usize, 1> as core_simd::to_bytes::ToBytes>::to_le_bytes": true,
  "<core_simd::vector::Simd<usize, 1> as core_simd::to_bytes::ToBytes>::to_ne_bytes": true,
  "<core_simd::vector::Simd<usize, 2> as core_simd::to_bytes::ToBytes>::from_be_bytes": true,
  "<core_simd::vector::Simd<usize, 2> as core_simd::to_bytes::ToBytes>::from_le_bytes": true,
  "<core_simd::vector::Simd<usize, 2> as core_simd::to_bytes::ToBytes>::from_ne_bytes": true,
  "<core_simd::vector::Simd<usize, 2> as core_simd::to_bytes::ToBytes>::to_be_bytes": true,
  "<core_simd::vector::Simd<usize, 2> as core_simd::to_bytes::ToBytes>::to_le_bytes": true,
  "<core_simd::vector::Simd<usize, 2> as core_simd::to_bytes::ToBytes>::to_ne_bytes": true,
  "<core_simd::vector::Simd<usize, 4> as core_simd::to_bytes::ToBytes>::from_be_bytes": true,
  "<core_simd::vector::Simd<usize, 4> as core_simd::to_bytes::ToBytes>::from_le_bytes": true,
  "<core_simd::vector::Simd<usize, 4> as core_simd::to_bytes::ToBytes>::from_ne_bytes": true,
  "<core_simd::vector::Simd<usize, 4> as core_simd::to_bytes::ToBytes>::to_be_bytes": true,
  "<core_simd::vector::Simd<usize, 4> as core_simd::to_bytes::ToBytes>::to_le_bytes": true,
  "<core_simd::vector::Simd<usize, 4> as core_simd::to_bytes::ToBytes>::to_ne_bytes": true,
  "<core_simd::vector::Simd<usize, 8> as core_simd::to_bytes::ToBytes>::from_be_bytes": true,
  "<core_simd::vector::Simd<usize, 8> as core_simd::to_bytes::ToBytes>::from_le_bytes": true,
  "<core_simd::vector::Simd<usize, 8> as core_simd::to_bytes::ToBytes>::from_ne_bytes": true,
  "<core_simd::vector::Simd<usize, 8> as core_simd::to_bytes::ToBytes>::to_be_bytes": true,
  "<core_simd::vector::Simd<usize, 8> as core_simd::to_bytes::ToBytes>::to_le_bytes": true,
  "<core_simd::vector::Simd<usize, 8> as core_simd::to_bytes::ToBytes>::to_ne_bytes": true,
  "<detect::arch::x86::Feature as rustc_std_workspace_core::clone::Clone>::clone": true,
  "<detect::cache::Initializer as rustc_std_workspace_core::clone::Clone>::clone": true,
  "<detect::cache::Initializer as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq": true,
  "<detect::cache::Initializer as rustc_std_workspace_core::cmp::PartialEq>::eq": true,
  "<detect::cache::Initializer as rustc_std_workspace_core::default::Default>::default": true,
  "<diagnostic::Level as bridge::Mark>::mark": true,
  "<diagnostic::Level as bridge::Unmark>::unmark": true,
  "<diagnostic::Level as std::clone::Clone>::clone": true,
  "<elf::Ident as rustc_std_workspace_core::clone::Clone>::clone": true,
  "<endian::BigEndian as endian::Endian>::from_big_endian": true,
  "<endian::BigEndian as endian::Endian>::is_big_endian": true,
  "<endian::BigEndian as rustc_std_workspace_core::clone::Clone>::clone": true,
  "<endian::BigEndian as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq": true,
  "<endian::BigEndian as rustc_std_workspace_core::cmp::PartialEq>::eq": true,
  "<endian::BigEndian as rustc_std_workspace_core::default::Default>::default": true,
  "<endian::Endianness as endian::Endian>::from_big_endian": true,
  "<endian::Endianness as endian::Endian>::is_big_endian": true,
  "<endian::Endianness as rustc_std_workspace_core::clone::Clone>::clone": true,
  "<endian::Endianness as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq": true,
  "<endian::Endianness as rustc_std_workspace_core::cmp::PartialEq>::eq": true,
  "<endian::Endianness as rustc_std_workspace_core::default::Default>::default": true,
  "<endian::LittleEndian as endian::Endian>::from_big_endian": true,
  "<endian::LittleEndian as endian::Endian>::is_big_endian": true,
  "<endian::LittleEndian as rustc_std_workspace_core::clone::Clone>::clone": true,
  "<endian::LittleEndian as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq": true,
  "<endian::LittleEndian as rustc_std_workspace_core::cmp::PartialEq>::eq": true,
  "<endian::LittleEndian as rustc_std_workspace_core::default::Default>::default": true,
  "<endianity::BigEndian as endianity::Endianity>::is_big_endian": true,
  "<endianity::BigEndian as rustc_std_workspace_core::clone::Clone>::clone": true,
  "<endianity::BigEndian as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq": true,
  "<endianity::BigEndian as rustc_std_workspace_core::cmp::PartialEq>::eq": true,
  "<endianity::BigEndian as rustc_std_workspace_core::default::Default>::default": true,
  "<endianity::LittleEndian as endianity::Endianity>::is_big_endian": true,
  "<endianity::LittleEndian as rustc_std_workspace_core::clone::Clone>::clone": true,
  "<endianity::LittleEndian as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq": true,
  "<endianity::LittleEndian as rustc_std_workspace_core::cmp::PartialEq>::eq": true,
  "<endianity::LittleEndian as rustc_std_workspace_core::default::Default>::default": true,
  "<endianity::RunTimeEndian as endianity::Endianity>::is_big_endian": true,
  "<endianity::RunTimeEndian as rustc_std_workspace_core::clone::Clone>::clone": true,
  "<endianity::RunTimeEndian as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq": true,
  "<endianity::RunTimeEndian as rustc_std_workspace_core::cmp::PartialEq>::eq": true,
  "<endianity::RunTimeEndian as rustc_std_workspace_core::default::Default>::default": true,
  "<env::JoinPathsError as core::error::Error>::description": true,
  "<escape::AlwaysEscaped as clone::Clone>::clone": true,
  "<escape::EscapeOptions as std::clone::Clone>::clone": true,
  "<escape::MaybeEscaped as clone::Clone>::clone": true,
  "<f128 as default::Default>::default": true,
  "<f128 as float::traits::Float>::eq_repr": true,
  "<f128 as float::traits::Float>::eq_repr::is_nan": true,
  "<f128 as float::traits::Float>::exp": true,
  "<f128 as float::traits::Float>::frac": true,
  "<f128 as float::traits::Float>::from_bits": true,
  "<f128 as float::traits::Float>::from_parts": true,
  "<f128 as float::traits::Float>::imp_frac": true,
  "<f128 as float::traits::Float>::is_sign_negative": true,
  "<f128 as float::traits::Float>::is_subnormal": true,
  "<f128 as float::traits::Float>::normalize": true,
  "<f128 as float::traits::Float>::to_bits": true,
  "<f128 as float::traits::Float>::to_bits_signed": true,
  "<f128 as math::libm_math::support::float_traits::DFloat>::narrow": true,
  "<f128 as math::libm_math::support::float_traits::Float>::abs": true,
  "<f128 as math::libm_math::support::float_traits::Float>::copysign": true,
  "<f128 as math::libm_math::support::float_traits::Float>::fma": true,
  "<f128 as math::libm_math::support::float_traits::Float>::from_bits": true,
  "<f128 as math::libm_math::support::float_traits::Float>::is_infinite": true,
  "<f128 as math::libm_math::support::float_traits::Float>::is_nan": true,
  "<f128 as math::libm_math::support::float_traits::Float>::is_sign_negative": true,
  "<f128 as math::libm_math::support::float_traits::Float>::normalize": true,
  "<f128 as math::libm_math::support::float_traits::Float>::to_bits": true,
  "<f128 as ops::arith::Add<&f128>>::add": true,
  "<f128 as ops::arith::Add>::add": true,
  "<f128 as ops::arith::AddAssign<&f128>>::add_assign": true,
  "<f128 as ops::arith::AddAssign>::add_assign": true,
  "<f128 as ops::arith::Div<&f128>>::div": true,
  "<f128 as ops::arith::Div>::div": true,
  "<f128 as ops::arith::DivAssign<&f128>>::div_assign": true,
  "<f128 as ops::arith::DivAssign>::div_assign": true,
  "<f128 as ops::arith::Mul<&f128>>::mul": true,
  "<f128 as ops::arith::Mul>::mul": true,
  "<f128 as ops::arith::MulAssign<&f128>>::mul_assign": true,
  "<f128 as ops::arith::MulAssign>::mul_assign": true,
  "<f128 as ops::arith::Neg>::neg": true,
  "<f128 as ops::arith::Rem<&f128>>::rem": true,
  "<f128 as ops::arith::Rem>::rem": true,
  "<f128 as ops::arith::RemAssign<&f128>>::rem_assign": true,
  "<f128 as ops::arith::RemAssign>::rem_assign": true,
  "<f128 as ops::arith::Sub<&f128>>::sub": true,
  "<f128 as ops::arith::Sub>::sub": true,
  "<f128 as ops::arith::SubAssign<&f128>>::sub_assign": true,
  "<f128 as ops::arith::SubAssign>::sub_assign": true,
  "<f128 as ub_checks::Invariant>::is_safe": true,
  "<f16 as default::Default>::default": true,
  "<f16 as float::traits::Float>::eq_repr": true,
  "<f16 as float::traits::Float>::eq_repr::is_nan": true,
  "<f16 as float::traits::Float>::exp": true,
  "<f16 as float::traits::Float>::frac": true,
  "<f16 as float::traits::Float>::from_bits": true,
  "<f16 as float::traits::Float>::from_parts": true,
  "<f16 as float::traits::Float>::imp_frac": true,
  "<f16 as float::traits::Float>::is_sign_negative": true,
  "<f16 as float::traits::Float>::is_subnormal": true,
  "<f16 as float::traits::Float>::normalize": true,
  "<f16 as float::traits::Float>::to_bits": true,
  "<f16 as float::traits::Float>::to_bits_signed": true,
  "<f16 as fmt::float::GeneralFormat>::already_rounded_value_should_use_exponential": true,
  "<f16 as math::libm_math::support::float_traits::Float>::abs": true,
  "<f16 as math::libm_math::support::float_traits::Float>::copysign": true,
  "<f16 as math::libm_math::support::float_traits::Float>::fma": true,
  "<f16 as math::libm_math::support::float_traits::Float>::from_bits": true,
  "<f16 as math::libm_math::support::float_traits::Float>::is_infinite": true,
  "<f16 as math::libm_math::support::float_traits::Float>::is_nan": true,
  "<f16 as math::libm_math::support::float_traits::Float>::is_sign_negative": true,
  "<f16 as math::libm_math::support::float_traits::Float>::normalize": true,
  "<f16 as math::libm_math::support::float_traits::Float>::to_bits": true,
  "<f16 as math::libm_math::support::float_traits::HFloat>::widen": true,
  "<f16 as num::dec2flt::float::RawFloat>::classify": true,
  "<f16 as num::dec2flt::float::RawFloat>::from_u64": true,
  "<f16 as num::dec2flt::float::RawFloat>::from_u64_bits": true,
  "<f16 as num::dec2flt::float::RawFloat>::pow10_fast_path": true,
  "<f16 as num::dec2flt::float::RawFloat>::to_bits": true,
  "<f16 as num::flt2dec::decoder::DecodableFloat>::min_pos_norm_value": true,
  "<f16 as ops::arith::Add<&f16>>::add": true,
  "<f16 as ops::arith::Add>::add": true,
  "<f16 as ops::arith::AddAssign<&f16>>::add_assign": true,
  "<f16 as ops::arith::AddAssign>::add_assign": true,
  "<f16 as ops::arith::Div<&f16>>::div": true,
  "<f16 as ops::arith::Div>::div": true,
  "<f16 as ops::arith::DivAssign<&f16>>::div_assign": true,
  "<f16 as ops::arith::DivAssign>::div_assign": true,
  "<f16 as ops::arith::Mul<&f16>>::mul": true,
  "<f16 as ops::arith::Mul>::mul": true,
  "<f16 as ops::arith::MulAssign<&f16>>::mul_assign": true,
  "<f16 as ops::arith::MulAssign>::mul_assign": true,
  "<f16 as ops::arith::Neg>::neg": true,
  "<f16 as ops::arith::Rem<&f16>>::rem": true,
  "<f16 as ops::arith::Rem>::rem": true,
  "<f16 as ops::arith::RemAssign<&f16>>::rem_assign": true,
  "<f16 as ops::arith::RemAssign>::rem_assign": true,
  "<f16 as ops::arith::Sub<&f16>>::sub": true,
  "<f16 as ops::arith::Sub>::sub": true,
  "<f16 as ops::arith::SubAssign<&f16>>::sub_assign": true,
  "<f16 as ops::arith::SubAssign>::sub_assign": true,
  "<f16 as ub_checks::Invariant>::is_safe": true,
  "<f32 as default::Default>::default": true,
  "<f32 as float::traits::Float>::eq_repr": true,
  "<f32 as float::traits::Float>::eq_repr::is_nan": true,
  "<f32 as float::traits::Float>::exp": true,
  "<f32 as float::traits::Float>::frac": true,
  "<f32 as float::traits::Float>::from_bits": true,
  "<f32 as float::traits::Float>::from_parts": true,
  "<f32 as float::traits::Float>::imp_frac": true,
  "<f32 as float::traits::Float>::is_sign_negative": true,
  "<f32 as float::traits::Float>::is_subnormal": true,
  "<f32 as float::traits::Float>::normalize": true,
  "<f32 as float::traits::Float>::to_bits": true,
  "<f32 as float::traits::Float>::to_bits_signed": true,
  "<f32 as fmt::float::GeneralFormat>::already_rounded_value_should_use_exponential": true,
  "<f32 as math::libm_math::support::float_traits::DFloat>::narrow": true,
  "<f32 as math::libm_math::support::float_traits::Float>::abs": true,
  "<f32 as math::libm_math::support::float_traits::Float>::copysign": true,
  "<f32 as math::libm_math::support::float_traits::Float>::fma": true,
  "<f32 as math::libm_math::support::float_traits::Float>::from_bits": true,
  "<f32 as math::libm_math::support::float_traits::Float>::is_infinite": true,
  "<f32 as math::libm_math::support::float_traits::Float>::is_nan": true,
  "<f32 as math::libm_math::support::float_traits::Float>::is_sign_negative": true,
  "<f32 as math::libm_math::support::float_traits::Float>::normalize": true,
  "<f32 as math::libm_math::support::float_traits::Float>::to_bits": true,
  "<f32 as math::libm_math::support::float_traits::HFloat>::widen": true,
  "<f32 as num::dec2flt::float::RawFloat>::classify": true,
  "<f32 as num::dec2flt::float::RawFloat>::from_u64": true,
  "<f32 as num::dec2flt::float::RawFloat>::from_u64_bits": true,
  "<f32 as num::dec2flt::float::RawFloat>::pow10_fast_path": true,
  "<f32 as num::dec2flt::float::RawFloat>::to_bits": true,
  "<f32 as num::flt2dec::decoder::DecodableFloat>::min_pos_norm_value": true,
  "<f32 as ops::arith::Add<&f32>>::add": true,
  "<f32 as ops::arith::Add>::add": true,
  "<f32 as ops::arith::AddAssign<&f32>>::add_assign": true,
  "<f32 as ops::arith::AddAssign>::add_assign": true,
  "<f32 as ops::arith::Div<&f32>>::div": true,
  "<f32 as ops::arith::Div>::div": true,
  "<f32 as ops::arith::DivAssign<&f32>>::div_assign": true,
  "<f32 as ops::arith::DivAssign>::div_assign": true,
  "<f32 as ops::arith::Mul<&f32>>::mul": true,
  "<f32 as ops::arith::Mul>::mul": true,
  "<f32 as ops::arith::MulAssign<&f32>>::mul_assign": true,
  "<f32 as ops::arith::MulAssign>::mul_assign": true,
  "<f32 as ops::arith::Neg>::neg": true,
  "<f32 as ops::arith::Rem<&f32>>::rem": true,
  "<f32 as ops::arith::Rem>::rem": true,
  "<f32 as ops::arith::RemAssign<&f32>>::rem_assign": true,
  "<f32 as ops::arith::RemAssign>::rem_assign": true,
  "<f32 as ops::arith::Sub<&f32>>::sub": true,
  "<f32 as ops::arith::Sub>::sub": true,
  "<f32 as ops::arith::SubAssign<&f32>>::sub_assign": true,
  "<f32 as ops::arith::SubAssign>::sub_assign": true,
  "<f32 as to_tokens::ToTokens>::to_tokens": true,
  "<f32 as ub_checks::Invariant>::is_safe": true,
  "<f32 as vec::is_zero::IsZero>::is_zero": true,
  "<f64 as default::Default>::default": true,
  "<f64 as float::traits::Float>::eq_repr": true,
  "<f64 as float::traits::Float>::eq_repr::is_nan": true,
  "<f64 as float::traits::Float>::exp": true,
  "<f64 as float::traits::Float>::frac": true,
  "<f64 as float::traits::Float>::from_bits": true,
  "<f64 as float::traits::Float>::from_parts": true,
  "<f64 as float::traits::Float>::imp_frac": true,
  "<f64 as float::traits::Float>::is_sign_negative": true,
  "<f64 as float::traits::Float>::is_subnormal": true,
  "<f64 as float::traits::Float>::normalize": true,
  "<f64 as float::traits::Float>::to_bits": true,
  "<f64 as float::traits::Float>::to_bits_signed": true,
  "<f64 as fmt::float::GeneralFormat>::already_rounded_value_should_use_exponential": true,
  "<f64 as math::libm_math::support::float_traits::DFloat>::narrow": true,
  "<f64 as math::libm_math::support::float_traits::Float>::abs": true,
  "<f64 as math::libm_math::support::float_traits::Float>::copysign": true,
  "<f64 as math::libm_math::support::float_traits::Float>::fma": true,
  "<f64 as math::libm_math::support::float_traits::Float>::from_bits": true,
  "<f64 as math::libm_math::support::float_traits::Float>::is_infinite": true,
  "<f64 as math::libm_math::support::float_traits::Float>::is_nan": true,
  "<f64 as math::libm_math::support::float_traits::Float>::is_sign_negative": true,
  "<f64 as math::libm_math::support::float_traits::Float>::normalize": true,
  "<f64 as math::libm_math::support::float_traits::Float>::to_bits": true,
  "<f64 as math::libm_math::support::float_traits::HFloat>::widen": true,
  "<f64 as num::dec2flt::float::RawFloat>::classify": true,
  "<f64 as num::dec2flt::float::RawFloat>::from_u64": true,
  "<f64 as num::dec2flt::float::RawFloat>::from_u64_bits": true,
  "<f64 as num::dec2flt::float::RawFloat>::pow10_fast_path": true,
  "<f64 as num::dec2flt::float::RawFloat>::to_bits": true,
  "<f64 as num::flt2dec::decoder::DecodableFloat>::min_pos_norm_value": true,
  "<f64 as ops::arith::Add<&f64>>::add": true,
  "<f64 as ops::arith::Add>::add": true,
  "<f64 as ops::arith::AddAssign<&f64>>::add_assign": true,
  "<f64 as ops::arith::AddAssign>::add_assign": true,
  "<f64 as ops::arith::Div<&f64>>::div": true,
  "<f64 as ops::arith::Div>::div": true,
  "<f64 as ops::arith::DivAssign<&f64>>::div_assign": true,
  "<f64 as ops::arith::DivAssign>::div_assign": true,
  "<f64 as ops::arith::Mul<&f64>>::mul": true,
  "<f64 as ops::arith::Mul>::mul": true,
  "<f64 as ops::arith::MulAssign<&f64>>::mul_assign": true,
  "<f64 as ops::arith::MulAssign>::mul_assign": true,
  "<f64 as ops::arith::Neg>::neg": true,
  "<f64 as ops::arith::Rem<&f64>>::rem": true,
  "<f64 as ops::arith::Rem>::rem": true,
  "<f64 as ops::arith::RemAssign<&f64>>::rem_assign": true,
  "<f64 as ops::arith::RemAssign>::rem_assign": true,
  "<f64 as ops::arith::Sub<&f64>>::sub": true,
  "<f64 as ops::arith::Sub>::sub": true,
  "<f64 as ops::arith::SubAssign<&f64>>::sub_assign": true,
  "<f64 as ops::arith::SubAssign>::sub_assign": true,
  "<f64 as to_tokens::ToTokens>::to_tokens": true,
  "<f64 as ub_checks::Invariant>::is_safe": true,
  "<f64 as vec::is_zero::IsZero>::is_zero": true,
  "<ffi::c_str::CString as core::default::Default>::default": true,
  "<ffi::c_str::FromBytesUntilNulError as clone::Clone>::clone": true,
  "<ffi::c_str::FromBytesUntilNulError as cmp::Eq>::assert_receiver_is_total_eq": true,
  "<ffi::c_str::FromBytesUntilNulError as cmp::PartialEq>::eq": true,
  "<ffi::c_str::FromBytesWithNulError as clone::Clone>::clone": true,
  "<ffi::c_str::FromBytesWithNulError as cmp::Eq>::assert_receiver_is_total_eq": true,
  "<ffi::c_str::FromBytesWithNulError as cmp::PartialEq>::eq": true,
  "<ffi::c_str::FromBytesWithNulErrorKind as core::clone::Clone>::clone": true,
  "<ffi::c_str::FromBytesWithNulErrorKind as core::cmp::Eq>::assert_receiver_is_total_eq": true,
  "<ffi::c_str::FromBytesWithNulErrorKind as core::cmp::PartialEq>::eq": true,
  "<ffi::os_str::OsString as core::default::Default>::default": true,
  "<float::cmp::Result as core::clone::Clone>::clone": true,
  "<fmt::Alignment as clone::Clone>::clone": true,
  "<fmt::Alignment as cmp::Eq>::assert_receiver_is_total_eq": true,
  "<fmt::Alignment as cmp::PartialEq>::eq": true,
  "<fmt::DebugAsHex as clone::Clone>::clone": true,
  "<fmt::DebugAsHex as cmp::Eq>::assert_receiver_is_total_eq": true,
  "<fmt::DebugAsHex as cmp::PartialEq>::eq": true,
  "<fmt::Error as clone::Clone>::clone": true,
  "<fmt::Error as cmp::Eq>::assert_receiver_is_total_eq": true,
  "<fmt::Error as cmp::Ord>::cmp": true,
  "<fmt::Error as cmp::PartialEq>::eq": true,
  "<fmt::Error as cmp::PartialOrd>::partial_cmp": true,
  "<fmt::Error as default::Default>::default": true,
  "<fmt::FormattingOptions as clone::Clone>::clone": true,
  "<fmt::FormattingOptions as cmp::Eq>::assert_receiver_is_total_eq": true,
  "<fmt::FormattingOptions as cmp::PartialEq>::eq": true,
  "<fmt::FormattingOptions as default::Default>::default": true,
  "<fmt::Sign as clone::Clone>::clone": true,
  "<fmt::Sign as cmp::Eq>::assert_receiver_is_total_eq": true,
  "<fmt::Sign as cmp::PartialEq>::eq": true,
  "<fmt::builders::PadAdapterState as default::Default>::default": true,
  "<fmt::rt::Count as clone::Clone>::clone": true,
  "<fmt::rt::Placeholder as clone::Clone>::clone": true,
  "<fs::DirBuilder as os::unix::fs::DirBuilderExt>::mode": true,
  "<fs::DirBuilder as sys_common::AsInnerMut<sys::fs::unix::DirBuilder>>::as_inner_mut": true,
  "<fs::File as io::Read>::is_read_vectored": true,
  "<fs::File as io::Seek>::seek": true,
  "<fs::File as io::Seek>::stream_len": true,
  "<fs::File as io::Seek>::stream_position": true,
  "<fs::File as io::Write>::flush": true,
  "<fs::File as io::Write>::is_write_vectored": true,
  "<fs::File as io::stdio::IsTerminal>::is_terminal": true,
  "<fs::File as os::fd::owned::AsFd>::as_fd": true,
  "<fs::File as os::fd::raw::AsRawFd>::as_raw_fd": true,
  "<fs::File as os::fd::raw::FromRawFd>::from_raw_fd": true,
  "<fs::File as os::fd::raw::IntoRawFd>::into_raw_fd": true,
  "<fs::File as sys::pal::unix::kernel_copy::CopyRead>::properties": true,
  "<fs::File as sys::pal::unix::kernel_copy::CopyWrite>::properties": true,
  "<fs::File as sys_common::AsInner<sys::fs::unix::File>>::as_inner": true,
  "<fs::File as sys_common::FromInner<sys::fs::unix::File>>::from_inner": true,
  "<fs::File as sys_common::IntoInner<sys::fs::unix::File>>::into_inner": true,
  "<fs::FileTimes as core::clone::Clone>::clone": true,
  "<fs::FileTimes as core::default::Default>::default": true,
  "<fs::FileTimes as sys_common::AsInnerMut<sys::fs::unix::FileTimes>>::as_inner_mut": true,
  "<fs::FileType as core::clone::Clone>::clone": true,
  "<fs::FileType as core::cmp::Eq>::assert_receiver_is_total_eq": true,
  "<fs::FileType as core::cmp::PartialEq>::eq": true,
  "<fs::FileType as os::unix::fs::FileTypeExt>::is_block_device": true,
  "<fs::FileType as os::unix::fs::FileTypeExt>::is_char_device": true,
  "<fs::FileType as os::unix::fs::FileTypeExt>::is_fifo": true,
  "<fs::FileType as os::unix::fs::FileTypeExt>::is_socket": true,
  "<fs::FileType as sys_common::AsInner<sys::fs::unix::FileType>>::as_inner": true,
  "<fs::Metadata as core::clone::Clone>::clone": true,
  "<fs::Metadata as os::linux::fs::MetadataExt>::as_raw_stat": true,
  "<fs::Metadata as os::linux::fs::MetadataExt>::st_atime": true,
  "<fs::Metadata as os::linux::fs::MetadataExt>::st_atime_nsec": true,
  "<fs::Metadata as os::linux::fs::MetadataExt>::st_blksize": true,
  "<fs::Metadata as os::linux::fs::MetadataExt>::st_blocks": true,
  "<fs::Metadata as os::linux::fs::MetadataExt>::st_ctime": true,
  "<fs::Metadata as os::linux::fs::MetadataExt>::st_ctime_nsec": true,
  "<fs::Metadata as os::linux::fs::MetadataExt>::st_dev": true,
  "<fs::Metadata as os::linux::fs::MetadataExt>::st_gid": true,
  "<fs::Metadata as os::linux::fs::MetadataExt>::st_ino": true,
  "<fs::Metadata as os::linux::fs::MetadataExt>::st_mode": true,
  "<fs::Metadata as os::linux::fs::MetadataExt>::st_mtime": true,
  "<fs::Metadata as os::linux::fs::MetadataExt>::st_mtime_nsec": true,
  "<fs::Metadata as os::linux::fs::MetadataExt>::st_nlink": true,
  "<fs::Metadata as os::linux::fs::MetadataExt>::st_rdev": true,
  "<fs::Metadata as os::linux::fs::MetadataExt>::st_size": true,
  "<fs::Metadata as os::linux::fs::MetadataExt>::st_uid": true,
  "<fs::Metadata as os::unix::fs::MetadataExt>::atime": true,
  "<fs::Metadata as os::unix::fs::MetadataExt>::atime_nsec": true,
  "<fs::Metadata as os::unix::fs::MetadataExt>::blksize": true,
  "<fs::Metadata as os::unix::fs::MetadataExt>::blocks": true,
  "<fs::Metadata as os::unix::fs::MetadataExt>::ctime": true,
  "<fs::Metadata as os::unix::fs::MetadataExt>::ctime_nsec": true,
  "<fs::Metadata as os::unix::fs::MetadataExt>::dev": true,
  "<fs::Metadata as os::unix::fs::MetadataExt>::gid": true,
  "<fs::Metadata as os::unix::fs::MetadataExt>::ino": true,
  "<fs::Metadata as os::unix::fs::MetadataExt>::mode": true,
  "<fs::Metadata as os::unix::fs::MetadataExt>::mtime": true,
  "<fs::Metadata as os::unix::fs::MetadataExt>::mtime_nsec": true,
  "<fs::Metadata as os::unix::fs::MetadataExt>::nlink": true,
  "<fs::Metadata as os::unix::fs::MetadataExt>::rdev": true,
  "<fs::Metadata as os::unix::fs::MetadataExt>::size": true,
  "<fs::Metadata as os::unix::fs::MetadataExt>::uid": true,
  "<fs::Metadata as sys_common::AsInner<sys::fs::unix::FileAttr>>::as_inner": true,
  "<fs::Metadata as sys_common::FromInner<sys::fs::unix::FileAttr>>::from_inner": true,
  "<fs::OpenOptions as core::clone::Clone>::clone": true,
  "<fs::OpenOptions as os::unix::fs::OpenOptionsExt>::custom_flags": true,
  "<fs::OpenOptions as os::unix::fs::OpenOptionsExt>::mode": true,
  "<fs::OpenOptions as sys_common::AsInner<sys::fs::unix::OpenOptions>>::as_inner": true,
  "<fs::OpenOptions as sys_common::AsInnerMut<sys::fs::unix::OpenOptions>>::as_inner_mut": true,
  "<fs::Permissions as core::clone::Clone>::clone": true,
  "<fs::Permissions as core::cmp::Eq>::assert_receiver_is_total_eq": true,
  "<fs::Permissions as core::cmp::PartialEq>::eq": true,
  "<fs::Permissions as os::unix::fs::PermissionsExt>::from_mode": true,
  "<fs::Permissions as os::unix::fs::PermissionsExt>::mode": true,
  "<fs::Permissions as os::unix::fs::PermissionsExt>::set_mode": true,
  "<fs::Permissions as sys_common::AsInner<sys::fs::unix::FilePermissions>>::as_inner": true,
  "<fs::Permissions as sys_common::FromInner<sys::fs::unix::FilePermissions>>::from_inner": true,
  "<hash::random::DefaultHasher as core::clone::Clone>::clone": true,
  "<hash::random::DefaultHasher as core::default::Default>::default": true,
  "<hash::random::DefaultHasher as core::hash::Hasher>::finish": true,
  "<hash::random::RandomState as core::clone::Clone>::clone": true,
  "<hash::random::RandomState as core::default::Default>::default": true,
  "<hash::random::RandomState as core::hash::BuildHasher>::build_hasher": true,
  "<hash::sip::Sip13Rounds as clone::Clone>::clone": true,
  "<hash::sip::Sip13Rounds as default::Default>::default": true,
  "<hash::sip::Sip13Rounds as hash::sip::Sip>::c_rounds": true,
  "<hash::sip::Sip13Rounds as hash::sip::Sip>::d_rounds": true,
  "<hash::sip::Sip24Rounds as clone::Clone>::clone": true,
  "<hash::sip::Sip24Rounds as default::Default>::default": true,
  "<hash::sip::Sip24Rounds as hash::sip::Sip>::c_rounds": true,
  "<hash::sip::Sip24Rounds as hash::sip::Sip>::d_rounds": true,
  "<hash::sip::SipHasher as clone::Clone>::clone": true,
  "<hash::sip::SipHasher as default::Default>::default": true,
  "<hash::sip::SipHasher as hash::Hasher>::finish": true,
  "<hash::sip::SipHasher13 as clone::Clone>::clone": true,
  "<hash::sip::SipHasher13 as default::Default>::default": true,
  "<hash::sip::SipHasher13 as hash::Hasher>::finish": true,
  "<hash::sip::SipHasher24 as clone::Clone>::clone": true,
  "<hash::sip::SipHasher24 as default::Default>::default": true,
  "<hash::sip::State as clone::Clone>::clone": true,
  "<i128 as default::Default>::default": true,
  "<i128 as int::traits::DInt>::hi": true,
  "<i128 as int::traits::DInt>::lo": true,
  "<i128 as intrinsics::fallback::CarryingMulAdd>::carrying_mul_add": true,
  "<i128 as iter::range::Step>::backward": true,
  "<i128 as iter::range::Step>::backward_checked": true,
  "<i128 as iter::range::Step>::forward": true,
  "<i128 as iter::range::Step>::forward_checked": true,
  "<i128 as iter::range::Step>::steps_between": true,
  "<i128 as math::libm_math::support::int_traits::CastInto<f128>>::cast": true,
  "<i128 as math::libm_math::support::int_traits::CastInto<f128>>::cast_lossy": true,
  "<i128 as math::libm_math::support::int_traits::CastInto<f16>>::cast": true,
  "<i128 as math::libm_math::support::int_traits::CastInto<f16>>::cast_lossy": true,
  "<i128 as math::libm_math::support::int_traits::CastInto<f32>>::cast": true,
  "<i128 as math::libm_math::support::int_traits::CastInto<f32>>::cast_lossy": true,
  "<i128 as math::libm_math::support::int_traits::CastInto<f64>>::cast": true,
  "<i128 as math::libm_math::support::int_traits::CastInto<f64>>::cast_lossy": true,
  "<i128 as math::libm_math::support::int_traits::CastInto<i128>>::cast": true,
  "<i128 as math::libm_math::support::int_traits::CastInto<i128>>::cast_lossy": true,
  "<i128 as math::libm_math::support::int_traits::CastInto<i16>>::cast": true,
  "<i128 as math::libm_math::support::int_traits::CastInto<i16>>::cast_lossy": true,
  "<i128 as math::libm_math::support::int_traits::CastInto<i32>>::cast": true,
  "<i128 as math::libm_math::support::int_traits::CastInto<i32>>::cast_lossy": true,
  "<i128 as math::libm_math::support::int_traits::CastInto<i64>>::cast": true,
  "<i128 as math::libm_math::support::int_traits::CastInto<i64>>::cast_lossy": true,
  "<i128 as math::libm_math::support::int_traits::CastInto<i8>>::cast": true,
  "<i128 as math::libm_math::support::int_traits::CastInto<i8>>::cast_lossy": true,
  "<i128 as math::libm_math::support::int_traits::CastInto<isize>>::cast": true,
  "<i128 as math::libm_math::support::int_traits::CastInto<isize>>::cast_lossy": true,
  "<i128 as math::libm_math::support::int_traits::CastInto<u128>>::cast": true,
  "<i128 as math::libm_math::support::int_traits::CastInto<u128>>::cast_lossy": true,
  "<i128 as math::libm_math::support::int_traits::CastInto<u16>>::cast": true,
  "<i128 as math::libm_math::support::int_traits::CastInto<u16>>::cast_lossy": true,
  "<i128 as math::libm_math::support::int_traits::CastInto<u32>>::cast": true,
  "<i128 as math::libm_math::support::int_traits::CastInto<u32>>::cast_lossy": true,
  "<i128 as math::libm_math::support::int_traits::CastInto<u64>>::cast": true,
  "<i128 as math::libm_math::support::int_traits::CastInto<u64>>::cast_lossy": true,
  "<i128 as math::libm_math::support::int_traits::CastInto<u8>>::cast": true,
  "<i128 as math::libm_math::support::int_traits::CastInto<u8>>::cast_lossy": true,
  "<i128 as math::libm_math::support::int_traits::CastInto<usize>>::cast": true,
  "<i128 as math::libm_math::support::int_traits::CastInto<usize>>::cast_lossy": true,
  "<i128 as math::libm_math::support::int_traits::DInt>::hi": true,
  "<i128 as math::libm_math::support::int_traits::DInt>::lo": true,
  "<i128 as math::libm_math::support::int_traits::Int>::abs": true,
  "<i128 as math::libm_math::support::int_traits::Int>::abs_diff": true,
  "<i128 as math::libm_math::support::int_traits::Int>::borrowing_sub": true,
  "<i128 as math::libm_math::support::int_traits::Int>::carrying_add": true,
  "<i128 as math::libm_math::support::int_traits::Int>::checked_add": true,
  "<i128 as math::libm_math::support::int_traits::Int>::checked_sub": true,
  "<i128 as math::libm_math::support::int_traits::Int>::from_bool": true,
  "<i128 as math::libm_math::support::int_traits::Int>::from_unsigned": true,
  "<i128 as math::libm_math::support::int_traits::Int>::ilog2": true,
  "<i128 as math::libm_math::support::int_traits::Int>::is_zero": true,
  "<i128 as math::libm_math::support::int_traits::Int>::leading_zeros": true,
  "<i128 as math::libm_math::support::int_traits::Int>::logical_shr": true,
  "<i128 as math::libm_math::support::int_traits::Int>::overflowing_add": true,
  "<i128 as math::libm_math::support::int_traits::Int>::overflowing_sub": true,
  "<i128 as math::libm_math::support::int_traits::Int>::rotate_left": true,
  "<i128 as math::libm_math::support::int_traits::Int>::signed": true,
  "<i128 as math::libm_math::support::int_traits::Int>::trailing_zeros": true,
  "<i128 as math::libm_math::support::int_traits::Int>::unsigned": true,
  "<i128 as math::libm_math::support::int_traits::Int>::unsigned_abs": true,
  "<i128 as math::libm_math::support::int_traits::Int>::wrapping_add": true,
  "<i128 as math::libm_math::support::int_traits::Int>::wrapping_mul": true,
  "<i128 as math::libm_math::support::int_traits::Int>::wrapping_neg": true,
  "<i128 as math::libm_math::support::int_traits::Int>::wrapping_shl": true,
  "<i128 as math::libm_math::support::int_traits::Int>::wrapping_shr": true,
  "<i128 as math::libm_math::support::int_traits::Int>::wrapping_sub": true,
  "<i128 as ops::arith::Add<&i128>>::add": true,
  "<i128 as ops::arith::Add>::add": true,
  "<i128 as ops::arith::AddAssign<&i128>>::add_assign": true,
  "<i128 as ops::arith::AddAssign>::add_assign": true,
  "<i128 as ops::arith::Div<&i128>>::div": true,
  "<i128 as ops::arith::Div>::div": true,
  "<i128 as ops::arith::DivAssign<&i128>>::div_assign": true,
  "<i128 as ops::arith::DivAssign>::div_assign": true,
  "<i128 as ops::arith::Mul<&i128>>::mul": true,
  "<i128 as ops::arith::Mul>::mul": true,
  "<i128 as ops::arith::MulAssign<&i128>>::mul_assign": true,
  "<i128 as ops::arith::MulAssign>::mul_assign": true,
  "<i128 as ops::arith::Neg>::neg": true,
  "<i128 as ops::arith::Rem<&i128>>::rem": true,
  "<i128 as ops::arith::Rem>::rem": true,
  "<i128 as ops::arith::RemAssign<&i128>>::rem_assign": true,
  "<i128 as ops::arith::RemAssign>::rem_assign": true,
  "<i128 as ops::arith::Sub<&i128>>::sub": true,
  "<i128 as ops::arith::Sub>::sub": true,
  "<i128 as ops::arith::SubAssign<&i128>>::sub_assign": true,
  "<i128 as ops::arith::SubAssign>::sub_assign": true,
  "<i128 as ops::bit::BitAnd<&i128>>::bitand": true,
  "<i128 as ops::bit::BitAnd>::bitand": true,
  "<i128 as ops::bit::BitAndAssign<&i128>>::bitand_assign": true,
  "<i128 as ops::bit::BitAndAssign>::bitand_assign": true,
  "<i128 as ops::bit::BitOr<&i128>>::bitor": true,
  "<i128 as ops::bit::BitOr>::bitor": true,
  "<i128 as ops::bit::BitOrAssign<&i128>>::bitor_assign": true,
  "<i128 as ops::bit::BitOrAssign>::bitor_assign": true,
  "<i128 as ops::bit::BitXor<&i128>>::bitxor": true,
  "<i128 as ops::bit::BitXor>::bitxor": true,
  "<i128 as ops::bit::BitXorAssign<&i128>>::bitxor_assign": true,
  "<i128 as ops::bit::BitXorAssign>::bitxor_assign": true,
  "<i128 as ops::bit::Not>::not": true,
  "<i128 as ops::bit::Shl<&i128>>::shl": true,
  "<i128 as ops::bit::Shl<&i16>>::shl": true,
  "<i128 as ops::bit::Shl<&i32>>::shl": true,
  "<i128 as ops::bit::Shl<&i64>>::shl": true,
  "<i128 as ops::bit::Shl<&i8>>::shl": true,
  "<i128 as ops::bit::Shl<&isize>>::shl": true,
  "<i128 as ops::bit::Shl<&u128>>::shl": true,
  "<i128 as ops::bit::Shl<&u16>>::shl": true,
  "<i128 as ops::bit::Shl<&u32>>::shl": true,
  "<i128 as ops::bit::Shl<&u64>>::shl": true,
  "<i128 as ops::bit::Shl<&u8>>::shl": true,
  "<i128 as ops::bit::Shl<&usize>>::shl": true,
  "<i128 as ops::bit::Shl<i16>>::shl": true,
  "<i128 as ops::bit::Shl<i32>>::shl": true,
  "<i128 as ops::bit::Shl<i64>>::shl": true,
  "<i128 as ops::bit::Shl<i8>>::shl": true,
  "<i128 as ops::bit::Shl<isize>>::shl": true,
  "<i128 as ops::bit::Shl<u128>>::shl": true,
  "<i128 as ops::bit::Shl<u16>>::shl": true,
  "<i128 as ops::bit::Shl<u32>>::shl": true,
  "<i128 as ops::bit::Shl<u64>>::shl": true,
  "<i128 as ops::bit::Shl<u8>>::shl": true,
  "<i128 as ops::bit::Shl<usize>>::shl": true,
  "<i128 as ops::bit::Shl>::shl": true,
  "<i128 as ops::bit::ShlAssign<&i128>>::shl_assign": true,
  "<i128 as ops::bit::ShlAssign<&i16>>::shl_assign": true,
  "<i128 as ops::bit::ShlAssign<&i32>>::shl_assign": true,
  "<i128 as ops::bit::ShlAssign<&i64>>::shl_assign": true,
  "<i128 as ops::bit::ShlAssign<&i8>>::shl_assign": true,
  "<i128 as ops::bit::ShlAssign<&isize>>::shl_assign": true,
  "<i128 as ops::bit::ShlAssign<&u128>>::shl_assign": true,
  "<i128 as ops::bit::ShlAssign<&u16>>::shl_assign": true,
  "<i128 as ops::bit::ShlAssign<&u32>>::shl_assign": true,
  "<i128 as ops::bit::ShlAssign<&u64>>::shl_assign": true,
  "<i128 as ops::bit::ShlAssign<&u8>>::shl_assign": true,
  "<i128 as ops::bit::ShlAssign<&usize>>::shl_assign": true,
  "<i128 as ops::bit::ShlAssign<i16>>::shl_assign": true,
  "<i128 as ops::bit::ShlAssign<i32>>::shl_assign": true,
  "<i128 as ops::bit::ShlAssign<i64>>::shl_assign": true,
  "<i128 as ops::bit::ShlAssign<i8>>::shl_assign": true,
  "<i128 as ops::bit::ShlAssign<isize>>::shl_assign": true,
  "<i128 as ops::bit::ShlAssign<u128>>::shl_assign": true,
  "<i128 as ops::bit::ShlAssign<u16>>::shl_assign": true,
  "<i128 as ops::bit::ShlAssign<u32>>::shl_assign": true,
  "<i128 as ops::bit::ShlAssign<u64>>::shl_assign": true,
  "<i128 as ops::bit::ShlAssign<u8>>::shl_assign": true,
  "<i128 as ops::bit::ShlAssign<usize>>::shl_assign": true,
  "<i128 as ops::bit::ShlAssign>::shl_assign": true,
  "<i128 as ops::bit::Shr<&i128>>::shr": true,
  "<i128 as ops::bit::Shr<&i16>>::shr": true,
  "<i128 as ops::bit::Shr<&i32>>::shr": true,
  "<i128 as ops::bit::Shr<&i64>>::shr": true,
  "<i128 as ops::bit::Shr<&i8>>::shr": true,
  "<i128 as ops::bit::Shr<&isize>>::shr": true,
  "<i128 as ops::bit::Shr<&u128>>::shr": true,
  "<i128 as ops::bit::Shr<&u16>>::shr": true,
  "<i128 as ops::bit::Shr<&u32>>::shr": true,
  "<i128 as ops::bit::Shr<&u64>>::shr": true,
  "<i128 as ops::bit::Shr<&u8>>::shr": true,
  "<i128 as ops::bit::Shr<&usize>>::shr": true,
  "<i128 as ops::bit::Shr<i16>>::shr": true,
  "<i128 as ops::bit::Shr<i32>>::shr": true,
  "<i128 as ops::bit::Shr<i64>>::shr": true,
  "<i128 as ops::bit::Shr<i8>>::shr": true,
  "<i128 as ops::bit::Shr<isize>>::shr": true,
  "<i128 as ops::bit::Shr<u128>>::shr": true,
  "<i128 as ops::bit::Shr<u16>>::shr": true,
  "<i128 as ops::bit::Shr<u32>>::shr": true,
  "<i128 as ops::bit::Shr<u64>>::shr": true,
  "<i128 as ops::bit::Shr<u8>>::shr": true,
  "<i128 as ops::bit::Shr<usize>>::shr": true,
  "<i128 as ops::bit::Shr>::shr": true,
  "<i128 as ops::bit::ShrAssign<&i128>>::shr_assign": true,
  "<i128 as ops::bit::ShrAssign<&i16>>::shr_assign": true,
  "<i128 as ops::bit::ShrAssign<&i32>>::shr_assign": true,
  "<i128 as ops::bit::ShrAssign<&i64>>::shr_assign": true,
  "<i128 as ops::bit::ShrAssign<&i8>>::shr_assign": true,
  "<i128 as ops::bit::ShrAssign<&isize>>::shr_assign": true,
  "<i128 as ops::bit::ShrAssign<&u128>>::shr_assign": true,
  "<i128 as ops::bit::ShrAssign<&u16>>::shr_assign": true,
  "<i128 as ops::bit::ShrAssign<&u32>>::shr_assign": true,
  "<i128 as ops::bit::ShrAssign<&u64>>::shr_assign": true,
  "<i128 as ops::bit::ShrAssign<&u8>>::shr_assign": true,
  "<i128 as ops::bit::ShrAssign<&usize>>::shr_assign": true,
  "<i128 as ops::bit::ShrAssign<i16>>::shr_assign": true,
  "<i128 as ops::bit::ShrAssign<i32>>::shr_assign": true,
  "<i128 as ops::bit::ShrAssign<i64>>::shr_assign": true,
  "<i128 as ops::bit::ShrAssign<i8>>::shr_assign": true,
  "<i128 as ops::bit::ShrAssign<isize>>::shr_assign": true,
  "<i128 as ops::bit::ShrAssign<u128>>::shr_assign": true,
  "<i128 as ops::bit::ShrAssign<u16>>::shr_assign": true,
  "<i128 as ops::bit::ShrAssign<u32>>::shr_assign": true,
  "<i128 as ops::bit::ShrAssign<u64>>::shr_assign": true,
  "<i128 as ops::bit::ShrAssign<u8>>::shr_assign": true,
  "<i128 as ops::bit::ShrAssign<usize>>::shr_assign": true,
  "<i128 as ops::bit::ShrAssign>::shr_assign": true,
  "<i128 as pat::RangePattern>::sub_one": true,
  "<i128 as string::SpecToString>::spec_to_string": true,
  "<i128 as to_tokens::ToTokens>::to_tokens": true,
  "<i128 as ub_checks::Invariant>::is_safe": true,
  "<i128 as vec::is_zero::IsZero>::is_zero": true,
  "<i16 as default::Default>::default": true,
  "<i16 as int::traits::DInt>::hi": true,
  "<i16 as int::traits::DInt>::lo": true,
  "<i16 as int::traits::HInt>::widen": true,
  "<i16 as int::traits::HInt>::widen_hi": true,
  "<i16 as int::traits::HInt>::widen_mul": true,
  "<i16 as int::traits::HInt>::zero_widen": true,
  "<i16 as int::traits::HInt>::zero_widen_mul": true,
  "<i16 as intrinsics::fallback::CarryingMulAdd>::carrying_mul_add": true,
  "<i16 as iter::range::Step>::backward": true,
  "<i16 as iter::range::Step>::backward_checked": true,
  "<i16 as iter::range::Step>::forward": true,
  "<i16 as iter::range::Step>::forward_checked": true,
  "<i16 as iter::range::Step>::steps_between": true,
  "<i16 as math::libm_math::support::int_traits::CastInto<f128>>::cast": true,
  "<i16 as math::libm_math::support::int_traits::CastInto<f128>>::cast_lossy": true,
  "<i16 as math::libm_math::support::int_traits::CastInto<f16>>::cast": true,
  "<i16 as math::libm_math::support::int_traits::CastInto<f16>>::cast_lossy": true,
  "<i16 as math::libm_math::support::int_traits::CastInto<f32>>::cast": true,
  "<i16 as math::libm_math::support::int_traits::CastInto<f32>>::cast_lossy": true,
  "<i16 as math::libm_math::support::int_traits::CastInto<f64>>::cast": true,
  "<i16 as math::libm_math::support::int_traits::CastInto<f64>>::cast_lossy": true,
  "<i16 as math::libm_math::support::int_traits::CastInto<i128>>::cast": true,
  "<i16 as math::libm_math::support::int_traits::CastInto<i128>>::cast_lossy": true,
  "<i16 as math::libm_math::support::int_traits::CastInto<i16>>::cast": true,
  "<i16 as math::libm_math::support::int_traits::CastInto<i16>>::cast_lossy": true,
  "<i16 as math::libm_math::support::int_traits::CastInto<i32>>::cast": true,
  "<i16 as math::libm_math::support::int_traits::CastInto<i32>>::cast_lossy": true,
  "<i16 as math::libm_math::support::int_traits::CastInto<i64>>::cast": true,
  "<i16 as math::libm_math::support::int_traits::CastInto<i64>>::cast_lossy": true,
  "<i16 as math::libm_math::support::int_traits::CastInto<i8>>::cast": true,
  "<i16 as math::libm_math::support::int_traits::CastInto<i8>>::cast_lossy": true,
  "<i16 as math::libm_math::support::int_traits::CastInto<isize>>::cast": true,
  "<i16 as math::libm_math::support::int_traits::CastInto<isize>>::cast_lossy": true,
  "<i16 as math::libm_math::support::int_traits::CastInto<u128>>::cast": true,
  "<i16 as math::libm_math::support::int_traits::CastInto<u128>>::cast_lossy": true,
  "<i16 as math::libm_math::support::int_traits::CastInto<u16>>::cast": true,
  "<i16 as math::libm_math::support::int_traits::CastInto<u16>>::cast_lossy": true,
  "<i16 as math::libm_math::support::int_traits::CastInto<u32>>::cast": true,
  "<i16 as math::libm_math::support::int_traits::CastInto<u32>>::cast_lossy": true,
  "<i16 as math::libm_math::support::int_traits::CastInto<u64>>::cast": true,
  "<i16 as math::libm_math::support::int_traits::CastInto<u64>>::cast_lossy": true,
  "<i16 as math::libm_math::support::int_traits::CastInto<u8>>::cast": true,
  "<i16 as math::libm_math::support::int_traits::CastInto<u8>>::cast_lossy": true,
  "<i16 as math::libm_math::support::int_traits::CastInto<usize>>::cast": true,
  "<i16 as math::libm_math::support::int_traits::CastInto<usize>>::cast_lossy": true,
  "<i16 as math::libm_math::support::int_traits::DInt>::hi": true,
  "<i16 as math::libm_math::support::int_traits::DInt>::lo": true,
  "<i16 as math::libm_math::support::int_traits::HInt>::widen": true,
  "<i16 as math::libm_math::support::int_traits::HInt>::widen_hi": true,
  "<i16 as math::libm_math::support::int_traits::HInt>::widen_mul": true,
  "<i16 as math::libm_math::support::int_traits::HInt>::zero_widen": true,
  "<i16 as math::libm_math::support::int_traits::HInt>::zero_widen_mul": true,
  "<i16 as math::libm_math::support::int_traits::Int>::abs": true,
  "<i16 as math::libm_math::support::int_traits::Int>::abs_diff": true,
  "<i16 as math::libm_math::support::int_traits::Int>::borrowing_sub": true,
  "<i16 as math::libm_math::support::int_traits::Int>::carrying_add": true,
  "<i16 as math::libm_math::support::int_traits::Int>::checked_add": true,
  "<i16 as math::libm_math::support::int_traits::Int>::checked_sub": true,
  "<i16 as math::libm_math::support::int_traits::Int>::from_bool": true,
  "<i16 as math::libm_math::support::int_traits::Int>::from_unsigned": true,
  "<i16 as math::libm_math::support::int_traits::Int>::ilog2": true,
  "<i16 as math::libm_math::support::int_traits::Int>::is_zero": true,
  "<i16 as math::libm_math::support::int_traits::Int>::leading_zeros": true,
  "<i16 as math::libm_math::support::int_traits::Int>::logical_shr": true,
  "<i16 as math::libm_math::support::int_traits::Int>::overflowing_add": true,
  "<i16 as math::libm_math::support::int_traits::Int>::overflowing_sub": true,
  "<i16 as math::libm_math::support::int_traits::Int>::rotate_left": true,
  "<i16 as math::libm_math::support::int_traits::Int>::signed": true,
  "<i16 as math::libm_math::support::int_traits::Int>::trailing_zeros": true,
  "<i16 as math::libm_math::support::int_traits::Int>::unsigned": true,
  "<i16 as math::libm_math::support::int_traits::Int>::unsigned_abs": true,
  "<i16 as math::libm_math::support::int_traits::Int>::wrapping_add": true,
  "<i16 as math::libm_math::support::int_traits::Int>::wrapping_mul": true,
  "<i16 as math::libm_math::support::int_traits::Int>::wrapping_neg": true,
  "<i16 as math::libm_math::support::int_traits::Int>::wrapping_shl": true,
  "<i16 as math::libm_math::support::int_traits::Int>::wrapping_shr": true,
  "<i16 as math::libm_math::support::int_traits::Int>::wrapping_sub": true,
  "<i16 as ops::arith::Add<&i16>>::add": true,
  "<i16 as ops::arith::Add>::add": true,
  "<i16 as ops::arith::AddAssign<&i16>>::add_assign": true,
  "<i16 as ops::arith::AddAssign>::add_assign": true,
  "<i16 as ops::arith::Div<&i16>>::div": true,
  "<i16 as ops::arith::Div>::div": true,
  "<i16 as ops::arith::DivAssign<&i16>>::div_assign": true,
  "<i16 as ops::arith::DivAssign>::div_assign": true,
  "<i16 as ops::arith::Mul<&i16>>::mul": true,
  "<i16 as ops::arith::Mul>::mul": true,
  "<i16 as ops::arith::MulAssign<&i16>>::mul_assign": true,
  "<i16 as ops::arith::MulAssign>::mul_assign": true,
  "<i16 as ops::arith::Neg>::neg": true,
  "<i16 as ops::arith::Rem<&i16>>::rem": true,
  "<i16 as ops::arith::Rem>::rem": true,
  "<i16 as ops::arith::RemAssign<&i16>>::rem_assign": true,
  "<i16 as ops::arith::RemAssign>::rem_assign": true,
  "<i16 as ops::arith::Sub<&i16>>::sub": true,
  "<i16 as ops::arith::Sub>::sub": true,
  "<i16 as ops::arith::SubAssign<&i16>>::sub_assign": true,
  "<i16 as ops::arith::SubAssign>::sub_assign": true,
  "<i16 as ops::bit::BitAnd<&i16>>::bitand": true,
  "<i16 as ops::bit::BitAnd>::bitand": true,
  "<i16 as ops::bit::BitAndAssign<&i16>>::bitand_assign": true,
  "<i16 as ops::bit::BitAndAssign>::bitand_assign": true,
  "<i16 as ops::bit::BitOr<&i16>>::bitor": true,
  "<i16 as ops::bit::BitOr>::bitor": true,
  "<i16 as ops::bit::BitOrAssign<&i16>>::bitor_assign": true,
  "<i16 as ops::bit::BitOrAssign>::bitor_assign": true,
  "<i16 as ops::bit::BitXor<&i16>>::bitxor": true,
  "<i16 as ops::bit::BitXor>::bitxor": true,
  "<i16 as ops::bit::BitXorAssign<&i16>>::bitxor_assign": true,
  "<i16 as ops::bit::BitXorAssign>::bitxor_assign": true,
  "<i16 as ops::bit::Not>::not": true,
  "<i16 as ops::bit::Shl<&i128>>::shl": true,
  "<i16 as ops::bit::Shl<&i16>>::shl": true,
  "<i16 as ops::bit::Shl<&i32>>::shl": true,
  "<i16 as ops::bit::Shl<&i64>>::shl": true,
  "<i16 as ops::bit::Shl<&i8>>::shl": true,
  "<i16 as ops::bit::Shl<&isize>>::shl": true,
  "<i16 as ops::bit::Shl<&u128>>::shl": true,
  "<i16 as ops::bit::Shl<&u16>>::shl": true,
  "<i16 as ops::bit::Shl<&u32>>::shl": true,
  "<i16 as ops::bit::Shl<&u64>>::shl": true,
  "<i16 as ops::bit::Shl<&u8>>::shl": true,
  "<i16 as ops::bit::Shl<&usize>>::shl": true,
  "<i16 as ops::bit::Shl<i128>>::shl": true,
  "<i16 as ops::bit::Shl<i32>>::shl": true,
  "<i16 as ops::bit::Shl<i64>>::shl": true,
  "<i16 as ops::bit::Shl<i8>>::shl": true,
  "<i16 as ops::bit::Shl<isize>>::shl": true,
  "<i16 as ops::bit::Shl<u128>>::shl": true,
  "<i16 as ops::bit::Shl<u16>>::shl": true,
  "<i16 as ops::bit::Shl<u32>>::shl": true,
  "<i16 as ops::bit::Shl<u64>>::shl": true,
  "<i16 as ops::bit::Shl<u8>>::shl": true,
  "<i16 as ops::bit::Shl<usize>>::shl": true,
  "<i16 as ops::bit::Shl>::shl": true,
  "<i16 as ops::bit::ShlAssign<&i128>>::shl_assign": true,
  "<i16 as ops::bit::ShlAssign<&i16>>::shl_assign": true,
  "<i16 as ops::bit::ShlAssign<&i32>>::shl_assign": true,
  "<i16 as ops::bit::ShlAssign<&i64>>::shl_assign": true,
  "<i16 as ops::bit::ShlAssign<&i8>>::shl_assign": true,
  "<i16 as ops::bit::ShlAssign<&isize>>::shl_assign": true,
  "<i16 as ops::bit::ShlAssign<&u128>>::shl_assign": true,
  "<i16 as ops::bit::ShlAssign<&u16>>::shl_assign": true,
  "<i16 as ops::bit::ShlAssign<&u32>>::shl_assign": true,
  "<i16 as ops::bit::ShlAssign<&u64>>::shl_assign": true,
  "<i16 as ops::bit::ShlAssign<&u8>>::shl_assign": true,
  "<i16 as ops::bit::ShlAssign<&usize>>::shl_assign": true,
  "<i16 as ops::bit::ShlAssign<i128>>::shl_assign": true,
  "<i16 as ops::bit::ShlAssign<i32>>::shl_assign": true,
  "<i16 as ops::bit::ShlAssign<i64>>::shl_assign": true,
  "<i16 as ops::bit::ShlAssign<i8>>::shl_assign": true,
  "<i16 as ops::bit::ShlAssign<isize>>::shl_assign": true,
  "<i16 as ops::bit::ShlAssign<u128>>::shl_assign": true,
  "<i16 as ops::bit::ShlAssign<u16>>::shl_assign": true,
  "<i16 as ops::bit::ShlAssign<u32>>::shl_assign": true,
  "<i16 as ops::bit::ShlAssign<u64>>::shl_assign": true,
  "<i16 as ops::bit::ShlAssign<u8>>::shl_assign": true,
  "<i16 as ops::bit::ShlAssign<usize>>::shl_assign": true,
  "<i16 as ops::bit::ShlAssign>::shl_assign": true,
  "<i16 as ops::bit::Shr<&i128>>::shr": true,
  "<i16 as ops::bit::Shr<&i16>>::shr": true,
  "<i16 as ops::bit::Shr<&i32>>::shr": true,
  "<i16 as ops::bit::Shr<&i64>>::shr": true,
  "<i16 as ops::bit::Shr<&i8>>::shr": true,
  "<i16 as ops::bit::Shr<&isize>>::shr": true,
  "<i16 as ops::bit::Shr<&u128>>::shr": true,
  "<i16 as ops::bit::Shr<&u16>>::shr": true,
  "<i16 as ops::bit::Shr<&u32>>::shr": true,
  "<i16 as ops::bit::Shr<&u64>>::shr": true,
  "<i16 as ops::bit::Shr<&u8>>::shr": true,
  "<i16 as ops::bit::Shr<&usize>>::shr": true,
  "<i16 as ops::bit::Shr<i128>>::shr": true,
  "<i16 as ops::bit::Shr<i32>>::shr": true,
  "<i16 as ops::bit::Shr<i64>>::shr": true,
  "<i16 as ops::bit::Shr<i8>>::shr": true,
  "<i16 as ops::bit::Shr<isize>>::shr": true,
  "<i16 as ops::bit::Shr<u128>>::shr": true,
  "<i16 as ops::bit::Shr<u16>>::shr": true,
  "<i16 as ops::bit::Shr<u32>>::shr": true,
  "<i16 as ops::bit::Shr<u64>>::shr": true,
  "<i16 as ops::bit::Shr<u8>>::shr": true,
  "<i16 as ops::bit::Shr<usize>>::shr": true,
  "<i16 as ops::bit::Shr>::shr": true,
  "<i16 as ops::bit::ShrAssign<&i128>>::shr_assign": true,
  "<i16 as ops::bit::ShrAssign<&i16>>::shr_assign": true,
  "<i16 as ops::bit::ShrAssign<&i32>>::shr_assign": true,
  "<i16 as ops::bit::ShrAssign<&i64>>::shr_assign": true,
  "<i16 as ops::bit::ShrAssign<&i8>>::shr_assign": true,
  "<i16 as ops::bit::ShrAssign<&isize>>::shr_assign": true,
  "<i16 as ops::bit::ShrAssign<&u128>>::shr_assign": true,
  "<i16 as ops::bit::ShrAssign<&u16>>::shr_assign": true,
  "<i16 as ops::bit::ShrAssign<&u32>>::shr_assign": true,
  "<i16 as ops::bit::ShrAssign<&u64>>::shr_assign": true,
  "<i16 as ops::bit::ShrAssign<&u8>>::shr_assign": true,
  "<i16 as ops::bit::ShrAssign<&usize>>::shr_assign": true,
  "<i16 as ops::bit::ShrAssign<i128>>::shr_assign": true,
  "<i16 as ops::bit::ShrAssign<i32>>::shr_assign": true,
  "<i16 as ops::bit::ShrAssign<i64>>::shr_assign": true,
  "<i16 as ops::bit::ShrAssign<i8>>::shr_assign": true,
  "<i16 as ops::bit::ShrAssign<isize>>::shr_assign": true,
  "<i16 as ops::bit::ShrAssign<u128>>::shr_assign": true,
  "<i16 as ops::bit::ShrAssign<u16>>::shr_assign": true,
  "<i16 as ops::bit::ShrAssign<u32>>::shr_assign": true,
  "<i16 as ops::bit::ShrAssign<u64>>::shr_assign": true,
  "<i16 as ops::bit::ShrAssign<u8>>::shr_assign": true,
  "<i16 as ops::bit::ShrAssign<usize>>::shr_assign": true,
  "<i16 as ops::bit::ShrAssign>::shr_assign": true,
  "<i16 as pat::RangePattern>::sub_one": true,
  "<i16 as string::SpecToString>::spec_to_string": true,
  "<i16 as sys::pal::unix::IsMinusOne>::is_minus_one": true,
  "<i16 as to_tokens::ToTokens>::to_tokens": true,
  "<i16 as ub_checks::Invariant>::is_safe": true,
  "<i16 as vec::is_zero::IsZero>::is_zero": true,
  "<i32 as default::Default>::default": true,
  "<i32 as int::traits::DInt>::hi": true,
  "<i32 as int::traits::DInt>::lo": true,
  "<i32 as int::traits::HInt>::widen": true,
  "<i32 as int::traits::HInt>::widen_hi": true,
  "<i32 as int::traits::HInt>::widen_mul": true,
  "<i32 as int::traits::HInt>::zero_widen": true,
  "<i32 as int::traits::HInt>::zero_widen_mul": true,
  "<i32 as intrinsics::fallback::CarryingMulAdd>::carrying_mul_add": true,
  "<i32 as iter::range::Step>::backward": true,
  "<i32 as iter::range::Step>::backward_checked": true,
  "<i32 as iter::range::Step>::forward": true,
  "<i32 as iter::range::Step>::forward_checked": true,
  "<i32 as iter::range::Step>::steps_between": true,
  "<i32 as math::libm_math::support::int_traits::CastInto<f128>>::cast": true,
  "<i32 as math::libm_math::support::int_traits::CastInto<f128>>::cast_lossy": true,
  "<i32 as math::libm_math::support::int_traits::CastInto<f16>>::cast": true,
  "<i32 as math::libm_math::support::int_traits::CastInto<f16>>::cast_lossy": true,
  "<i32 as math::libm_math::support::int_traits::CastInto<f32>>::cast": true,
  "<i32 as math::libm_math::support::int_traits::CastInto<f32>>::cast_lossy": true,
  "<i32 as math::libm_math::support::int_traits::CastInto<f64>>::cast": true,
  "<i32 as math::libm_math::support::int_traits::CastInto<f64>>::cast_lossy": true,
  "<i32 as math::libm_math::support::int_traits::CastInto<i128>>::cast": true,
  "<i32 as math::libm_math::support::int_traits::CastInto<i128>>::cast_lossy": true,
  "<i32 as math::libm_math::support::int_traits::CastInto<i16>>::cast": true,
  "<i32 as math::libm_math::support::int_traits::CastInto<i16>>::cast_lossy": true,
  "<i32 as math::libm_math::support::int_traits::CastInto<i32>>::cast": true,
  "<i32 as math::libm_math::support::int_traits::CastInto<i32>>::cast_lossy": true,
  "<i32 as math::libm_math::support::int_traits::CastInto<i64>>::cast": true,
  "<i32 as math::libm_math::support::int_traits::CastInto<i64>>::cast_lossy": true,
  "<i32 as math::libm_math::support::int_traits::CastInto<i8>>::cast": true,
  "<i32 as math::libm_math::support::int_traits::CastInto<i8>>::cast_lossy": true,
  "<i32 as math::libm_math::support::int_traits::CastInto<isize>>::cast": true,
  "<i32 as math::libm_math::support::int_traits::CastInto<isize>>::cast_lossy": true,
  "<i32 as math::libm_math::support::int_traits::CastInto<u128>>::cast": true,
  "<i32 as math::libm_math::support::int_traits::CastInto<u128>>::cast_lossy": true,
  "<i32 as math::libm_math::support::int_traits::CastInto<u16>>::cast": true,
  "<i32 as math::libm_math::support::int_traits::CastInto<u16>>::cast_lossy": true,
  "<i32 as math::libm_math::support::int_traits::CastInto<u32>>::cast": true,
  "<i32 as math::libm_math::support::int_traits::CastInto<u32>>::cast_lossy": true,
  "<i32 as math::libm_math::support::int_traits::CastInto<u64>>::cast": true,
  "<i32 as math::libm_math::support::int_traits::CastInto<u64>>::cast_lossy": true,
  "<i32 as math::libm_math::support::int_traits::CastInto<u8>>::cast": true,
  "<i32 as math::libm_math::support::int_traits::CastInto<u8>>::cast_lossy": true,
  "<i32 as math::libm_math::support::int_traits::CastInto<usize>>::cast": true,
  "<i32 as math::libm_math::support::int_traits::CastInto<usize>>::cast_lossy": true,
  "<i32 as math::libm_math::support::int_traits::DInt>::hi": true,
  "<i32 as math::libm_math::support::int_traits::DInt>::lo": true,
  "<i32 as math::libm_math::support::int_traits::HInt>::widen": true,
  "<i32 as math::libm_math::support::int_traits::HInt>::widen_hi": true,
  "<i32 as math::libm_math::support::int_traits::HInt>::widen_mul": true,
  "<i32 as math::libm_math::support::int_traits::HInt>::zero_widen": true,
  "<i32 as math::libm_math::support::int_traits::HInt>::zero_widen_mul": true,
  "<i32 as math::libm_math::support::int_traits::Int>::abs": true,
  "<i32 as math::libm_math::support::int_traits::Int>::abs_diff": true,
  "<i32 as math::libm_math::support::int_traits::Int>::borrowing_sub": true,
  "<i32 as math::libm_math::support::int_traits::Int>::carrying_add": true,
  "<i32 as math::libm_math::support::int_traits::Int>::checked_add": true,
  "<i32 as math::libm_math::support::int_traits::Int>::checked_sub": true,
  "<i32 as math::libm_math::support::int_traits::Int>::from_bool": true,
  "<i32 as math::libm_math::support::int_traits::Int>::from_unsigned": true,
  "<i32 as math::libm_math::support::int_traits::Int>::ilog2": true,
  "<i32 as math::libm_math::support::int_traits::Int>::is_zero": true,
  "<i32 as math::libm_math::support::int_traits::Int>::leading_zeros": true,
  "<i32 as math::libm_math::support::int_traits::Int>::logical_shr": true,
  "<i32 as math::libm_math::support::int_traits::Int>::overflowing_add": true,
  "<i32 as math::libm_math::support::int_traits::Int>::overflowing_sub": true,
  "<i32 as math::libm_math::support::int_traits::Int>::rotate_left": true,
  "<i32 as math::libm_math::support::int_traits::Int>::signed": true,
  "<i32 as math::libm_math::support::int_traits::Int>::trailing_zeros": true,
  "<i32 as math::libm_math::support::int_traits::Int>::unsigned": true,
  "<i32 as math::libm_math::support::int_traits::Int>::unsigned_abs": true,
  "<i32 as math::libm_math::support::int_traits::Int>::wrapping_add": true,
  "<i32 as math::libm_math::support::int_traits::Int>::wrapping_mul": true,
  "<i32 as math::libm_math::support::int_traits::Int>::wrapping_neg": true,
  "<i32 as math::libm_math::support::int_traits::Int>::wrapping_shl": true,
  "<i32 as math::libm_math::support::int_traits::Int>::wrapping_shr": true,
  "<i32 as math::libm_math::support::int_traits::Int>::wrapping_sub": true,
  "<i32 as ops::arith::Add<&i32>>::add": true,
  "<i32 as ops::arith::Add>::add": true,
  "<i32 as ops::arith::AddAssign<&i32>>::add_assign": true,
  "<i32 as ops::arith::AddAssign>::add_assign": true,
  "<i32 as ops::arith::Div<&i32>>::div": true,
  "<i32 as ops::arith::Div>::div": true,
  "<i32 as ops::arith::DivAssign<&i32>>::div_assign": true,
  "<i32 as ops::arith::DivAssign>::div_assign": true,
  "<i32 as ops::arith::Mul<&i32>>::mul": true,
  "<i32 as ops::arith::Mul>::mul": true,
  "<i32 as ops::arith::MulAssign<&i32>>::mul_assign": true,
  "<i32 as ops::arith::MulAssign>::mul_assign": true,
  "<i32 as ops::arith::Neg>::neg": true,
  "<i32 as ops::arith::Rem<&i32>>::rem": true,
  "<i32 as ops::arith::Rem>::rem": true,
  "<i32 as ops::arith::RemAssign<&i32>>::rem_assign": true,
  "<i32 as ops::arith::RemAssign>::rem_assign": true,
  "<i32 as ops::arith::Sub<&i32>>::sub": true,
  "<i32 as ops::arith::Sub>::sub": true,
  "<i32 as ops::arith::SubAssign<&i32>>::sub_assign": true,
  "<i32 as ops::arith::SubAssign>::sub_assign": true,
  "<i32 as ops::bit::BitAnd<&i32>>::bitand": true,
  "<i32 as ops::bit::BitAnd>::bitand": true,
  "<i32 as ops::bit::BitAndAssign<&i32>>::bitand_assign": true,
  "<i32 as ops::bit::BitAndAssign>::bitand_assign": true,
  "<i32 as ops::bit::BitOr<&i32>>::bitor": true,
  "<i32 as ops::bit::BitOr>::bitor": true,
  "<i32 as ops::bit::BitOrAssign<&i32>>::bitor_assign": true,
  "<i32 as ops::bit::BitOrAssign>::bitor_assign": true,
  "<i32 as ops::bit::BitXor<&i32>>::bitxor": true,
  "<i32 as ops::bit::BitXor>::bitxor": true,
  "<i32 as ops::bit::BitXorAssign<&i32>>::bitxor_assign": true,
  "<i32 as ops::bit::BitXorAssign>::bitxor_assign": true,
  "<i32 as ops::bit::Not>::not": true,
  "<i32 as ops::bit::Shl<&i128>>::shl": true,
  "<i32 as ops::bit::Shl<&i16>>::shl": true,
  "<i32 as ops::bit::Shl<&i32>>::shl": true,
  "<i32 as ops::bit::Shl<&i64>>::shl": true,
  "<i32 as ops::bit::Shl<&i8>>::shl": true,
  "<i32 as ops::bit::Shl<&isize>>::shl": true,
  "<i32 as ops::bit::Shl<&u128>>::shl": true,
  "<i32 as ops::bit::Shl<&u16>>::shl": true,
  "<i32 as ops::bit::Shl<&u32>>::shl": true,
  "<i32 as ops::bit::Shl<&u64>>::shl": true,
  "<i32 as ops::bit::Shl<&u8>>::shl": true,
  "<i32 as ops::bit::Shl<&usize>>::shl": true,
  "<i32 as ops::bit::Shl<i128>>::shl": true,
  "<i32 as ops::bit::Shl<i16>>::shl": true,
  "<i32 as ops::bit::Shl<i64>>::shl": true,
  "<i32 as ops::bit::Shl<i8>>::shl": true,
  "<i32 as ops::bit::Shl<isize>>::shl": true,
  "<i32 as ops::bit::Shl<u128>>::shl": true,
  "<i32 as ops::bit::Shl<u16>>::shl": true,
  "<i32 as ops::bit::Shl<u32>>::shl": true,
  "<i32 as ops::bit::Shl<u64>>::shl": true,
  "<i32 as ops::bit::Shl<u8>>::shl": true,
  "<i32 as ops::bit::Shl<usize>>::shl": true,
  "<i32 as ops::bit::Shl>::shl": true,
  "<i32 as ops::bit::ShlAssign<&i128>>::shl_assign": true,
  "<i32 as ops::bit::ShlAssign<&i16>>::shl_assign": true,
  "<i32 as ops::bit::ShlAssign<&i32>>::shl_assign": true,
  "<i32 as ops::bit::ShlAssign<&i64>>::shl_assign": true,
  "<i32 as ops::bit::ShlAssign<&i8>>::shl_assign": true,
  "<i32 as ops::bit::ShlAssign<&isize>>::shl_assign": true,
  "<i32 as ops::bit::ShlAssign<&u128>>::shl_assign": true,
  "<i32 as ops::bit::ShlAssign<&u16>>::shl_assign": true,
  "<i32 as ops::bit::ShlAssign<&u32>>::shl_assign": true,
  "<i32 as ops::bit::ShlAssign<&u64>>::shl_assign": true,
  "<i32 as ops::bit::ShlAssign<&u8>>::shl_assign": true,
  "<i32 as ops::bit::ShlAssign<&usize>>::shl_assign": true,
  "<i32 as ops::bit::ShlAssign<i128>>::shl_assign": true,
  "<i32 as ops::bit::ShlAssign<i16>>::shl_assign": true,
  "<i32 as ops::bit::ShlAssign<i64>>::shl_assign": true,
  "<i32 as ops::bit::ShlAssign<i8>>::shl_assign": true,
  "<i32 as ops::bit::ShlAssign<isize>>::shl_assign": true,
  "<i32 as ops::bit::ShlAssign<u128>>::shl_assign": true,
  "<i32 as ops::bit::ShlAssign<u16>>::shl_assign": true,
  "<i32 as ops::bit::ShlAssign<u32>>::shl_assign": true,
  "<i32 as ops::bit::ShlAssign<u64>>::shl_assign": true,
  "<i32 as ops::bit::ShlAssign<u8>>::shl_assign": true,
  "<i32 as ops::bit::ShlAssign<usize>>::shl_assign": true,
  "<i32 as ops::bit::ShlAssign>::shl_assign": true,
  "<i32 as ops::bit::Shr<&i128>>::shr": true,
  "<i32 as ops::bit::Shr<&i16>>::shr": true,
  "<i32 as ops::bit::Shr<&i32>>::shr": true,
  "<i32 as ops::bit::Shr<&i64>>::shr": true,
  "<i32 as ops::bit::Shr<&i8>>::shr": true,
  "<i32 as ops::bit::Shr<&isize>>::shr": true,
  "<i32 as ops::bit::Shr<&u128>>::shr": true,
  "<i32 as ops::bit::Shr<&u16>>::shr": true,
  "<i32 as ops::bit::Shr<&u32>>::shr": true,
  "<i32 as ops::bit::Shr<&u64>>::shr": true,
  "<i32 as ops::bit::Shr<&u8>>::shr": true,
  "<i32 as ops::bit::Shr<&usize>>::shr": true,
  "<i32 as ops::bit::Shr<i128>>::shr": true,
  "<i32 as ops::bit::Shr<i16>>::shr": true,
  "<i32 as ops::bit::Shr<i64>>::shr": true,
  "<i32 as ops::bit::Shr<i8>>::shr": true,
  "<i32 as ops::bit::Shr<isize>>::shr": true,
  "<i32 as ops::bit::Shr<u128>>::shr": true,
  "<i32 as ops::bit::Shr<u16>>::shr": true,
  "<i32 as ops::bit::Shr<u32>>::shr": true,
  "<i32 as ops::bit::Shr<u64>>::shr": true,
  "<i32 as ops::bit::Shr<u8>>::shr": true,
  "<i32 as ops::bit::Shr<usize>>::shr": true,
  "<i32 as ops::bit::Shr>::shr": true,
  "<i32 as ops::bit::ShrAssign<&i128>>::shr_assign": true,
  "<i32 as ops::bit::ShrAssign<&i16>>::shr_assign": true,
  "<i32 as ops::bit::ShrAssign<&i32>>::shr_assign": true,
  "<i32 as ops::bit::ShrAssign<&i64>>::shr_assign": true,
  "<i32 as ops::bit::ShrAssign<&i8>>::shr_assign": true,
  "<i32 as ops::bit::ShrAssign<&isize>>::shr_assign": true,
  "<i32 as ops::bit::ShrAssign<&u128>>::shr_assign": true,
  "<i32 as ops::bit::ShrAssign<&u16>>::shr_assign": true,
  "<i32 as ops::bit::ShrAssign<&u32>>::shr_assign": true,
  "<i32 as ops::bit::ShrAssign<&u64>>::shr_assign": true,
  "<i32 as ops::bit::ShrAssign<&u8>>::shr_assign": true,
  "<i32 as ops::bit::ShrAssign<&usize>>::shr_assign": true,
  "<i32 as ops::bit::ShrAssign<i128>>::shr_assign": true,
  "<i32 as ops::bit::ShrAssign<i16>>::shr_assign": true,
  "<i32 as ops::bit::ShrAssign<i64>>::shr_assign": true,
  "<i32 as ops::bit::ShrAssign<i8>>::shr_assign": true,
  "<i32 as ops::bit::ShrAssign<isize>>::shr_assign": true,
  "<i32 as ops::bit::ShrAssign<u128>>::shr_assign": true,
  "<i32 as ops::bit::ShrAssign<u16>>::shr_assign": true,
  "<i32 as ops::bit::ShrAssign<u32>>::shr_assign": true,
  "<i32 as ops::bit::ShrAssign<u64>>::shr_assign": true,
  "<i32 as ops::bit::ShrAssign<u8>>::shr_assign": true,
  "<i32 as ops::bit::ShrAssign<usize>>::shr_assign": true,
  "<i32 as ops::bit::ShrAssign>::shr_assign": true,
  "<i32 as os::fd::raw::AsRawFd>::as_raw_fd": true,
  "<i32 as os::fd::raw::FromRawFd>::from_raw_fd": true,
  "<i32 as os::fd::raw::IntoRawFd>::into_raw_fd": true,
  "<i32 as pat::RangePattern>::sub_one": true,
  "<i32 as string::SpecToString>::spec_to_string": true,
  "<i32 as sys::pal::unix::IsMinusOne>::is_minus_one": true,
  "<i32 as to_tokens::ToTokens>::to_tokens": true,
  "<i32 as ub_checks::Invariant>::is_safe": true,
  "<i32 as vec::is_zero::IsZero>::is_zero": true,
  "<i64 as default::Default>::default": true,
  "<i64 as int::traits::DInt>::hi": true,
  "<i64 as int::traits::DInt>::lo": true,
  "<i64 as int::traits::HInt>::widen": true,
  "<i64 as int::traits::HInt>::widen_hi": true,
  "<i64 as int::traits::HInt>::widen_mul": true,
  "<i64 as int::traits::HInt>::zero_widen": true,
  "<i64 as int::traits::HInt>::zero_widen_mul": true,
  "<i64 as intrinsics::fallback::CarryingMulAdd>::carrying_mul_add": true,
  "<i64 as iter::range::Step>::backward": true,
  "<i64 as iter::range::Step>::backward_checked": true,
  "<i64 as iter::range::Step>::forward": true,
  "<i64 as iter::range::Step>::forward_checked": true,
  "<i64 as iter::range::Step>::steps_between": true,
  "<i64 as math::libm_math::support::int_traits::CastInto<f128>>::cast": true,
  "<i64 as math::libm_math::support::int_traits::CastInto<f128>>::cast_lossy": true,
  "<i64 as math::libm_math::support::int_traits::CastInto<f16>>::cast": true,
  "<i64 as math::libm_math::support::int_traits::CastInto<f16>>::cast_lossy": true,
  "<i64 as math::libm_math::support::int_traits::CastInto<f32>>::cast": true,
  "<i64 as math::libm_math::support::int_traits::CastInto<f32>>::cast_lossy": true,
  "<i64 as math::libm_math::support::int_traits::CastInto<f64>>::cast": true,
  "<i64 as math::libm_math::support::int_traits::CastInto<f64>>::cast_lossy": true,
  "<i64 as math::libm_math::support::int_traits::CastInto<i128>>::cast": true,
  "<i64 as math::libm_math::support::int_traits::CastInto<i128>>::cast_lossy": true,
  "<i64 as math::libm_math::support::int_traits::CastInto<i16>>::cast": true,
  "<i64 as math::libm_math::support::int_traits::CastInto<i16>>::cast_lossy": true,
  "<i64 as math::libm_math::support::int_traits::CastInto<i32>>::cast": true,
  "<i64 as math::libm_math::support::int_traits::CastInto<i32>>::cast_lossy": true,
  "<i64 as math::libm_math::support::int_traits::CastInto<i64>>::cast": true,
  "<i64 as math::libm_math::support::int_traits::CastInto<i64>>::cast_lossy": true,
  "<i64 as math::libm_math::support::int_traits::CastInto<i8>>::cast": true,
  "<i64 as math::libm_math::support::int_traits::CastInto<i8>>::cast_lossy": true,
  "<i64 as math::libm_math::support::int_traits::CastInto<isize>>::cast": true,
  "<i64 as math::libm_math::support::int_traits::CastInto<isize>>::cast_lossy": true,
  "<i64 as math::libm_math::support::int_traits::CastInto<u128>>::cast": true,
  "<i64 as math::libm_math::support::int_traits::CastInto<u128>>::cast_lossy": true,
  "<i64 as math::libm_math::support::int_traits::CastInto<u16>>::cast": true,
  "<i64 as math::libm_math::support::int_traits::CastInto<u16>>::cast_lossy": true,
  "<i64 as math::libm_math::support::int_traits::CastInto<u32>>::cast": true,
  "<i64 as math::libm_math::support::int_traits::CastInto<u32>>::cast_lossy": true,
  "<i64 as math::libm_math::support::int_traits::CastInto<u64>>::cast": true,
  "<i64 as math::libm_math::support::int_traits::CastInto<u64>>::cast_lossy": true,
  "<i64 as math::libm_math::support::int_traits::CastInto<u8>>::cast": true,
  "<i64 as math::libm_math::support::int_traits::CastInto<u8>>::cast_lossy": true,
  "<i64 as math::libm_math::support::int_traits::CastInto<usize>>::cast": true,
  "<i64 as math::libm_math::support::int_traits::CastInto<usize>>::cast_lossy": true,
  "<i64 as math::libm_math::support::int_traits::DInt>::hi": true,
  "<i64 as math::libm_math::support::int_traits::DInt>::lo": true,
  "<i64 as math::libm_math::support::int_traits::HInt>::widen": true,
  "<i64 as math::libm_math::support::int_traits::HInt>::widen_hi": true,
  "<i64 as math::libm_math::support::int_traits::HInt>::widen_mul": true,
  "<i64 as math::libm_math::support::int_traits::HInt>::zero_widen": true,
  "<i64 as math::libm_math::support::int_traits::HInt>::zero_widen_mul": true,
  "<i64 as math::libm_math::support::int_traits::Int>::abs": true,
  "<i64 as math::libm_math::support::int_traits::Int>::abs_diff": true,
  "<i64 as math::libm_math::support::int_traits::Int>::borrowing_sub": true,
  "<i64 as math::libm_math::support::int_traits::Int>::carrying_add": true,
  "<i64 as math::libm_math::support::int_traits::Int>::checked_add": true,
  "<i64 as math::libm_math::support::int_traits::Int>::checked_sub": true,
  "<i64 as math::libm_math::support::int_traits::Int>::from_bool": true,
  "<i64 as math::libm_math::support::int_traits::Int>::from_unsigned": true,
  "<i64 as math::libm_math::support::int_traits::Int>::ilog2": true,
  "<i64 as math::libm_math::support::int_traits::Int>::is_zero": true,
  "<i64 as math::libm_math::support::int_traits::Int>::leading_zeros": true,
  "<i64 as math::libm_math::support::int_traits::Int>::logical_shr": true,
  "<i64 as math::libm_math::support::int_traits::Int>::overflowing_add": true,
  "<i64 as math::libm_math::support::int_traits::Int>::overflowing_sub": true,
  "<i64 as math::libm_math::support::int_traits::Int>::rotate_left": true,
  "<i64 as math::libm_math::support::int_traits::Int>::signed": true,
  "<i64 as math::libm_math::support::int_traits::Int>::trailing_zeros": true,
  "<i64 as math::libm_math::support::int_traits::Int>::unsigned": true,
  "<i64 as math::libm_math::support::int_traits::Int>::unsigned_abs": true,
  "<i64 as math::libm_math::support::int_traits::Int>::wrapping_add": true,
  "<i64 as math::libm_math::support::int_traits::Int>::wrapping_mul": true,
  "<i64 as math::libm_math::support::int_traits::Int>::wrapping_neg": true,
  "<i64 as math::libm_math::support::int_traits::Int>::wrapping_shl": true,
  "<i64 as math::libm_math::support::int_traits::Int>::wrapping_shr": true,
  "<i64 as math::libm_math::support::int_traits::Int>::wrapping_sub": true,
  "<i64 as ops::arith::Add<&i64>>::add": true,
  "<i64 as ops::arith::Add>::add": true,
  "<i64 as ops::arith::AddAssign<&i64>>::add_assign": true,
  "<i64 as ops::arith::AddAssign>::add_assign": true,
  "<i64 as ops::arith::Div<&i64>>::div": true,
  "<i64 as ops::arith::Div>::div": true,
  "<i64 as ops::arith::DivAssign<&i64>>::div_assign": true,
  "<i64 as ops::arith::DivAssign>::div_assign": true,
  "<i64 as ops::arith::Mul<&i64>>::mul": true,
  "<i64 as ops::arith::Mul>::mul": true,
  "<i64 as ops::arith::MulAssign<&i64>>::mul_assign": true,
  "<i64 as ops::arith::MulAssign>::mul_assign": true,
  "<i64 as ops::arith::Neg>::neg": true,
  "<i64 as ops::arith::Rem<&i64>>::rem": true,
  "<i64 as ops::arith::Rem>::rem": true,
  "<i64 as ops::arith::RemAssign<&i64>>::rem_assign": true,
  "<i64 as ops::arith::RemAssign>::rem_assign": true,
  "<i64 as ops::arith::Sub<&i64>>::sub": true,
  "<i64 as ops::arith::Sub>::sub": true,
  "<i64 as ops::arith::SubAssign<&i64>>::sub_assign": true,
  "<i64 as ops::arith::SubAssign>::sub_assign": true,
  "<i64 as ops::bit::BitAnd<&i64>>::bitand": true,
  "<i64 as ops::bit::BitAnd>::bitand": true,
  "<i64 as ops::bit::BitAndAssign<&i64>>::bitand_assign": true,
  "<i64 as ops::bit::BitAndAssign>::bitand_assign": true,
  "<i64 as ops::bit::BitOr<&i64>>::bitor": true,
  "<i64 as ops::bit::BitOr>::bitor": true,
  "<i64 as ops::bit::BitOrAssign<&i64>>::bitor_assign": true,
  "<i64 as ops::bit::BitOrAssign>::bitor_assign": true,
  "<i64 as ops::bit::BitXor<&i64>>::bitxor": true,
  "<i64 as ops::bit::BitXor>::bitxor": true,
  "<i64 as ops::bit::BitXorAssign<&i64>>::bitxor_assign": true,
  "<i64 as ops::bit::BitXorAssign>::bitxor_assign": true,
  "<i64 as ops::bit::Not>::not": true,
  "<i64 as ops::bit::Shl<&i128>>::shl": true,
  "<i64 as ops::bit::Shl<&i16>>::shl": true,
  "<i64 as ops::bit::Shl<&i32>>::shl": true,
  "<i64 as ops::bit::Shl<&i64>>::shl": true,
  "<i64 as ops::bit::Shl<&i8>>::shl": true,
  "<i64 as ops::bit::Shl<&isize>>::shl": true,
  "<i64 as ops::bit::Shl<&u128>>::shl": true,
  "<i64 as ops::bit::Shl<&u16>>::shl": true,
  "<i64 as ops::bit::Shl<&u32>>::shl": true,
  "<i64 as ops::bit::Shl<&u64>>::shl": true,
  "<i64 as ops::bit::Shl<&u8>>::shl": true,
  "<i64 as ops::bit::Shl<&usize>>::shl": true,
  "<i64 as ops::bit::Shl<i128>>::shl": true,
  "<i64 as ops::bit::Shl<i16>>::shl": true,
  "<i64 as ops::bit::Shl<i32>>::shl": true,
  "<i64 as ops::bit::Shl<i8>>::shl": true,
  "<i64 as ops::bit::Shl<isize>>::shl": true,
  "<i64 as ops::bit::Shl<u128>>::shl": true,
  "<i64 as ops::bit::Shl<u16>>::shl": true,
  "<i64 as ops::bit::Shl<u32>>::shl": true,
  "<i64 as ops::bit::Shl<u64>>::shl": true,
  "<i64 as ops::bit::Shl<u8>>::shl": true,
  "<i64 as ops::bit::Shl<usize>>::shl": true,
  "<i64 as ops::bit::Shl>::shl": true,
  "<i64 as ops::bit::ShlAssign<&i128>>::shl_assign": true,
  "<i64 as ops::bit::ShlAssign<&i16>>::shl_assign": true,
  "<i64 as ops::bit::ShlAssign<&i32>>::shl_assign": true,
  "<i64 as ops::bit::ShlAssign<&i64>>::shl_assign": true,
  "<i64 as ops::bit::ShlAssign<&i8>>::shl_assign": true,
  "<i64 as ops::bit::ShlAssign<&isize>>::shl_assign": true,
  "<i64 as ops::bit::ShlAssign<&u128>>::shl_assign": true,
  "<i64 as ops::bit::ShlAssign<&u16>>::shl_assign": true,
  "<i64 as ops::bit::ShlAssign<&u32>>::shl_assign": true,
  "<i64 as ops::bit::ShlAssign<&u64>>::shl_assign": true,
  "<i64 as ops::bit::ShlAssign<&u8>>::shl_assign": true,
  "<i64 as ops::bit::ShlAssign<&usize>>::shl_assign": true,
  "<i64 as ops::bit::ShlAssign<i128>>::shl_assign": true,
  "<i64 as ops::bit::ShlAssign<i16>>::shl_assign": true,
  "<i64 as ops::bit::ShlAssign<i32>>::shl_assign": true,
  "<i64 as ops::bit::ShlAssign<i8>>::shl_assign": true,
  "<i64 as ops::bit::ShlAssign<isize>>::shl_assign": true,
  "<i64 as ops::bit::ShlAssign<u128>>::shl_assign": true,
  "<i64 as ops::bit::ShlAssign<u16>>::shl_assign": true,
  "<i64 as ops::bit::ShlAssign<u32>>::shl_assign": true,
  "<i64 as ops::bit::ShlAssign<u64>>::shl_assign": true,
  "<i64 as ops::bit::ShlAssign<u8>>::shl_assign": true,
  "<i64 as ops::bit::ShlAssign<usize>>::shl_assign": true,
  "<i64 as ops::bit::ShlAssign>::shl_assign": true,
  "<i64 as ops::bit::Shr<&i128>>::shr": true,
  "<i64 as ops::bit::Shr<&i16>>::shr": true,
  "<i64 as ops::bit::Shr<&i32>>::shr": true,
  "<i64 as ops::bit::Shr<&i64>>::shr": true,
  "<i64 as ops::bit::Shr<&i8>>::shr": true,
  "<i64 as ops::bit::Shr<&isize>>::shr": true,
  "<i64 as ops::bit::Shr<&u128>>::shr": true,
  "<i64 as ops::bit::Shr<&u16>>::shr": true,
  "<i64 as ops::bit::Shr<&u32>>::shr": true,
  "<i64 as ops::bit::Shr<&u64>>::shr": true,
  "<i64 as ops::bit::Shr<&u8>>::shr": true,
  "<i64 as ops::bit::Shr<&usize>>::shr": true,
  "<i64 as ops::bit::Shr<i128>>::shr": true,
  "<i64 as ops::bit::Shr<i16>>::shr": true,
  "<i64 as ops::bit::Shr<i32>>::shr": true,
  "<i64 as ops::bit::Shr<i8>>::shr": true,
  "<i64 as ops::bit::Shr<isize>>::shr": true,
  "<i64 as ops::bit::Shr<u128>>::shr": true,
  "<i64 as ops::bit::Shr<u16>>::shr": true,
  "<i64 as ops::bit::Shr<u32>>::shr": true,
  "<i64 as ops::bit::Shr<u64>>::shr": true,
  "<i64 as ops::bit::Shr<u8>>::shr": true,
  "<i64 as ops::bit::Shr<usize>>::shr": true,
  "<i64 as ops::bit::Shr>::shr": true,
  "<i64 as ops::bit::ShrAssign<&i128>>::shr_assign": true,
  "<i64 as ops::bit::ShrAssign<&i16>>::shr_assign": true,
  "<i64 as ops::bit::ShrAssign<&i32>>::shr_assign": true,
  "<i64 as ops::bit::ShrAssign<&i64>>::shr_assign": true,
  "<i64 as ops::bit::ShrAssign<&i8>>::shr_assign": true,
  "<i64 as ops::bit::ShrAssign<&isize>>::shr_assign": true,
  "<i64 as ops::bit::ShrAssign<&u128>>::shr_assign": true,
  "<i64 as ops::bit::ShrAssign<&u16>>::shr_assign": true,
  "<i64 as ops::bit::ShrAssign<&u32>>::shr_assign": true,
  "<i64 as ops::bit::ShrAssign<&u64>>::shr_assign": true,
  "<i64 as ops::bit::ShrAssign<&u8>>::shr_assign": true,
  "<i64 as ops::bit::ShrAssign<&usize>>::shr_assign": true,
  "<i64 as ops::bit::ShrAssign<i128>>::shr_assign": true,
  "<i64 as ops::bit::ShrAssign<i16>>::shr_assign": true,
  "<i64 as ops::bit::ShrAssign<i32>>::shr_assign": true,
  "<i64 as ops::bit::ShrAssign<i8>>::shr_assign": true,
  "<i64 as ops::bit::ShrAssign<isize>>::shr_assign": true,
  "<i64 as ops::bit::ShrAssign<u128>>::shr_assign": true,
  "<i64 as ops::bit::ShrAssign<u16>>::shr_assign": true,
  "<i64 as ops::bit::ShrAssign<u32>>::shr_assign": true,
  "<i64 as ops::bit::ShrAssign<u64>>::shr_assign": true,
  "<i64 as ops::bit::ShrAssign<u8>>::shr_assign": true,
  "<i64 as ops::bit::ShrAssign<usize>>::shr_assign": true,
  "<i64 as ops::bit::ShrAssign>::shr_assign": true,
  "<i64 as pat::RangePattern>::sub_one": true,
  "<i64 as string::SpecToString>::spec_to_string": true,
  "<i64 as sys::pal::unix::IsMinusOne>::is_minus_one": true,
  "<i64 as to_tokens::ToTokens>::to_tokens": true,
  "<i64 as ub_checks::Invariant>::is_safe": true,
  "<i64 as vec::is_zero::IsZero>::is_zero": true,
  "<i8 as default::Default>::default": true,
  "<i8 as int::traits::HInt>::widen": true,
  "<i8 as int::traits::HInt>::widen_hi": true,
  "<i8 as int::traits::HInt>::widen_mul": true,
  "<i8 as int::traits::HInt>::zero_widen": true,
  "<i8 as int::traits::HInt>::zero_widen_mul": true,
  "<i8 as intrinsics::fallback::CarryingMulAdd>::carrying_mul_add": true,
  "<i8 as iter::range::Step>::backward": true,
  "<i8 as iter::range::Step>::backward_checked": true,
  "<i8 as iter::range::Step>::forward": true,
  "<i8 as iter::range::Step>::forward_checked": true,
  "<i8 as iter::range::Step>::steps_between": true,
  "<i8 as math::libm_math::support::int_traits::CastInto<f128>>::cast": true,
  "<i8 as math::libm_math::support::int_traits::CastInto<f128>>::cast_lossy": true,
  "<i8 as math::libm_math::support::int_traits::CastInto<f16>>::cast": true,
  "<i8 as math::libm_math::support::int_traits::CastInto<f16>>::cast_lossy": true,
  "<i8 as math::libm_math::support::int_traits::CastInto<f32>>::cast": true,
  "<i8 as math::libm_math::support::int_traits::CastInto<f32>>::cast_lossy": true,
  "<i8 as math::libm_math::support::int_traits::CastInto<f64>>::cast": true,
  "<i8 as math::libm_math::support::int_traits::CastInto<f64>>::cast_lossy": true,
  "<i8 as math::libm_math::support::int_traits::CastInto<i128>>::cast": true,
  "<i8 as math::libm_math::support::int_traits::CastInto<i128>>::cast_lossy": true,
  "<i8 as math::libm_math::support::int_traits::CastInto<i16>>::cast": true,
  "<i8 as math::libm_math::support::int_traits::CastInto<i16>>::cast_lossy": true,
  "<i8 as math::libm_math::support::int_traits::CastInto<i32>>::cast": true,
  "<i8 as math::libm_math::support::int_traits::CastInto<i32>>::cast_lossy": true,
  "<i8 as math::libm_math::support::int_traits::CastInto<i64>>::cast": true,
  "<i8 as math::libm_math::support::int_traits::CastInto<i64>>::cast_lossy": true,
  "<i8 as math::libm_math::support::int_traits::CastInto<i8>>::cast": true,
  "<i8 as math::libm_math::support::int_traits::CastInto<i8>>::cast_lossy": true,
  "<i8 as math::libm_math::support::int_traits::CastInto<isize>>::cast": true,
  "<i8 as math::libm_math::support::int_traits::CastInto<isize>>::cast_lossy": true,
  "<i8 as math::libm_math::support::int_traits::CastInto<u128>>::cast": true,
  "<i8 as math::libm_math::support::int_traits::CastInto<u128>>::cast_lossy": true,
  "<i8 as math::libm_math::support::int_traits::CastInto<u16>>::cast": true,
  "<i8 as math::libm_math::support::int_traits::CastInto<u16>>::cast_lossy": true,
  "<i8 as math::libm_math::support::int_traits::CastInto<u32>>::cast": true,
  "<i8 as math::libm_math::support::int_traits::CastInto<u32>>::cast_lossy": true,
  "<i8 as math::libm_math::support::int_traits::CastInto<u64>>::cast": true,
  "<i8 as math::libm_math::support::int_traits::CastInto<u64>>::cast_lossy": true,
  "<i8 as math::libm_math::support::int_traits::CastInto<u8>>::cast": true,
  "<i8 as math::libm_math::support::int_traits::CastInto<u8>>::cast_lossy": true,
  "<i8 as math::libm_math::support::int_traits::CastInto<usize>>::cast": true,
  "<i8 as math::libm_math::support::int_traits::CastInto<usize>>::cast_lossy": true,
  "<i8 as math::libm_math::support::int_traits::HInt>::widen": true,
  "<i8 as math::libm_math::support::int_traits::HInt>::widen_hi": true,
  "<i8 as math::libm_math::support::int_traits::HInt>::widen_mul": true,
  "<i8 as math::libm_math::support::int_traits::HInt>::zero_widen": true,
  "<i8 as math::libm_math::support::int_traits::HInt>::zero_widen_mul": true,
  "<i8 as math::libm_math::support::int_traits::Int>::abs": true,
  "<i8 as math::libm_math::support::int_traits::Int>::abs_diff": true,
  "<i8 as math::libm_math::support::int_traits::Int>::borrowing_sub": true,
  "<i8 as math::libm_math::support::int_traits::Int>::carrying_add": true,
  "<i8 as math::libm_math::support::int_traits::Int>::checked_add": true,
  "<i8 as math::libm_math::support::int_traits::Int>::checked_sub": true,
  "<i8 as math::libm_math::support::int_traits::Int>::from_bool": true,
  "<i8 as math::libm_math::support::int_traits::Int>::from_unsigned": true,
  "<i8 as math::libm_math::support::int_traits::Int>::ilog2": true,
  "<i8 as math::libm_math::support::int_traits::Int>::is_zero": true,
  "<i8 as math::libm_math::support::int_traits::Int>::leading_zeros": true,
  "<i8 as math::libm_math::support::int_traits::Int>::logical_shr": true,
  "<i8 as math::libm_math::support::int_traits::Int>::overflowing_add": true,
  "<i8 as math::libm_math::support::int_traits::Int>::overflowing_sub": true,
  "<i8 as math::libm_math::support::int_traits::Int>::rotate_left": true,
  "<i8 as math::libm_math::support::int_traits::Int>::signed": true,
  "<i8 as math::libm_math::support::int_traits::Int>::trailing_zeros": true,
  "<i8 as math::libm_math::support::int_traits::Int>::unsigned": true,
  "<i8 as math::libm_math::support::int_traits::Int>::unsigned_abs": true,
  "<i8 as math::libm_math::support::int_traits::Int>::wrapping_add": true,
  "<i8 as math::libm_math::support::int_traits::Int>::wrapping_mul": true,
  "<i8 as math::libm_math::support::int_traits::Int>::wrapping_neg": true,
  "<i8 as math::libm_math::support::int_traits::Int>::wrapping_shl": true,
  "<i8 as math::libm_math::support::int_traits::Int>::wrapping_shr": true,
  "<i8 as math::libm_math::support::int_traits::Int>::wrapping_sub": true,
  "<i8 as ops::arith::Add<&i8>>::add": true,
  "<i8 as ops::arith::Add>::add": true,
  "<i8 as ops::arith::AddAssign<&i8>>::add_assign": true,
  "<i8 as ops::arith::AddAssign>::add_assign": true,
  "<i8 as ops::arith::Div<&i8>>::div": true,
  "<i8 as ops::arith::Div>::div": true,
  "<i8 as ops::arith::DivAssign<&i8>>::div_assign": true,
  "<i8 as ops::arith::DivAssign>::div_assign": true,
  "<i8 as ops::arith::Mul<&i8>>::mul": true,
  "<i8 as ops::arith::Mul>::mul": true,
  "<i8 as ops::arith::MulAssign<&i8>>::mul_assign": true,
  "<i8 as ops::arith::MulAssign>::mul_assign": true,
  "<i8 as ops::arith::Neg>::neg": true,
  "<i8 as ops::arith::Rem<&i8>>::rem": true,
  "<i8 as ops::arith::Rem>::rem": true,
  "<i8 as ops::arith::RemAssign<&i8>>::rem_assign": true,
  "<i8 as ops::arith::RemAssign>::rem_assign": true,
  "<i8 as ops::arith::Sub<&i8>>::sub": true,
  "<i8 as ops::arith::Sub>::sub": true,
  "<i8 as ops::arith::SubAssign<&i8>>::sub_assign": true,
  "<i8 as ops::arith::SubAssign>::sub_assign": true,
  "<i8 as ops::bit::BitAnd<&i8>>::bitand": true,
  "<i8 as ops::bit::BitAnd>::bitand": true,
  "<i8 as ops::bit::BitAndAssign<&i8>>::bitand_assign": true,
  "<i8 as ops::bit::BitAndAssign>::bitand_assign": true,
  "<i8 as ops::bit::BitOr<&i8>>::bitor": true,
  "<i8 as ops::bit::BitOr>::bitor": true,
  "<i8 as ops::bit::BitOrAssign<&i8>>::bitor_assign": true,
  "<i8 as ops::bit::BitOrAssign>::bitor_assign": true,
  "<i8 as ops::bit::BitXor<&i8>>::bitxor": true,
  "<i8 as ops::bit::BitXor>::bitxor": true,
  "<i8 as ops::bit::BitXorAssign<&i8>>::bitxor_assign": true,
  "<i8 as ops::bit::BitXorAssign>::bitxor_assign": true,
  "<i8 as ops::bit::Not>::not": true,
  "<i8 as ops::bit::Shl<&i128>>::shl": true,
  "<i8 as ops::bit::Shl<&i16>>::shl": true,
  "<i8 as ops::bit::Shl<&i32>>::shl": true,
  "<i8 as ops::bit::Shl<&i64>>::shl": true,
  "<i8 as ops::bit::Shl<&i8>>::shl": true,
  "<i8 as ops::bit::Shl<&isize>>::shl": true,
  "<i8 as ops::bit::Shl<&u128>>::shl": true,
  "<i8 as ops::bit::Shl<&u16>>::shl": true,
  "<i8 as ops::bit::Shl<&u32>>::shl": true,
  "<i8 as ops::bit::Shl<&u64>>::shl": true,
  "<i8 as ops::bit::Shl<&u8>>::shl": true,
  "<i8 as ops::bit::Shl<&usize>>::shl": true,
  "<i8 as ops::bit::Shl<i128>>::shl": true,
  "<i8 as ops::bit::Shl<i16>>::shl": true,
  "<i8 as ops::bit::Shl<i32>>::shl": true,
  "<i8 as ops::bit::Shl<i64>>::shl": true,
  "<i8 as ops::bit::Shl<isize>>::shl": true,
  "<i8 as ops::bit::Shl<u128>>::shl": true,
  "<i8 as ops::bit::Shl<u16>>::shl": true,
  "<i8 as ops::bit::Shl<u32>>::shl": true,
  "<i8 as ops::bit::Shl<u64>>::shl": true,
  "<i8 as ops::bit::Shl<u8>>::shl": true,
  "<i8 as ops::bit::Shl<usize>>::shl": true,
  "<i8 as ops::bit::Shl>::shl": true,
  "<i8 as ops::bit::ShlAssign<&i128>>::shl_assign": true,
  "<i8 as ops::bit::ShlAssign<&i16>>::shl_assign": true,
  "<i8 as ops::bit::ShlAssign<&i32>>::shl_assign": true,
  "<i8 as ops::bit::ShlAssign<&i64>>::shl_assign": true,
  "<i8 as ops::bit::ShlAssign<&i8>>::shl_assign": true,
  "<i8 as ops::bit::ShlAssign<&isize>>::shl_assign": true,
  "<i8 as ops::bit::ShlAssign<&u128>>::shl_assign": true,
  "<i8 as ops::bit::ShlAssign<&u16>>::shl_assign": true,
  "<i8 as ops::bit::ShlAssign<&u32>>::shl_assign": true,
  "<i8 as ops::bit::ShlAssign<&u64>>::shl_assign": true,
  "<i8 as ops::bit::ShlAssign<&u8>>::shl_assign": true,
  "<i8 as ops::bit::ShlAssign<&usize>>::shl_assign": true,
  "<i8 as ops::bit::ShlAssign<i128>>::shl_assign": true,
  "<i8 as ops::bit::ShlAssign<i16>>::shl_assign": true,
  "<i8 as ops::bit::ShlAssign<i32>>::shl_assign": true,
  "<i8 as ops::bit::ShlAssign<i64>>::shl_assign": true,
  "<i8 as ops::bit::ShlAssign<isize>>::shl_assign": true,
  "<i8 as ops::bit::ShlAssign<u128>>::shl_assign": true,
  "<i8 as ops::bit::ShlAssign<u16>>::shl_assign": true,
  "<i8 as ops::bit::ShlAssign<u32>>::shl_assign": true,
  "<i8 as ops::bit::ShlAssign<u64>>::shl_assign": true,
  "<i8 as ops::bit::ShlAssign<u8>>::shl_assign": true,
  "<i8 as ops::bit::ShlAssign<usize>>::shl_assign": true,
  "<i8 as ops::bit::ShlAssign>::shl_assign": true,
  "<i8 as ops::bit::Shr<&i128>>::shr": true,
  "<i8 as ops::bit::Shr<&i16>>::shr": true,
  "<i8 as ops::bit::Shr<&i32>>::shr": true,
  "<i8 as ops::bit::Shr<&i64>>::shr": true,
  "<i8 as ops::bit::Shr<&i8>>::shr": true,
  "<i8 as ops::bit::Shr<&isize>>::shr": true,
  "<i8 as ops::bit::Shr<&u128>>::shr": true,
  "<i8 as ops::bit::Shr<&u16>>::shr": true,
  "<i8 as ops::bit::Shr<&u32>>::shr": true,
  "<i8 as ops::bit::Shr<&u64>>::shr": true,
  "<i8 as ops::bit::Shr<&u8>>::shr": true,
  "<i8 as ops::bit::Shr<&usize>>::shr": true,
  "<i8 as ops::bit::Shr<i128>>::shr": true,
  "<i8 as ops::bit::Shr<i16>>::shr": true,
  "<i8 as ops::bit::Shr<i32>>::shr": true,
  "<i8 as ops::bit::Shr<i64>>::shr": true,
  "<i8 as ops::bit::Shr<isize>>::shr": true,
  "<i8 as ops::bit::Shr<u128>>::shr": true,
  "<i8 as ops::bit::Shr<u16>>::shr": true,
  "<i8 as ops::bit::Shr<u32>>::shr": true,
  "<i8 as ops::bit::Shr<u64>>::shr": true,
  "<i8 as ops::bit::Shr<u8>>::shr": true,
  "<i8 as ops::bit::Shr<usize>>::shr": true,
  "<i8 as ops::bit::Shr>::shr": true,
  "<i8 as ops::bit::ShrAssign<&i128>>::shr_assign": true,
  "<i8 as ops::bit::ShrAssign<&i16>>::shr_assign": true,
  "<i8 as ops::bit::ShrAssign<&i32>>::shr_assign": true,
  "<i8 as ops::bit::ShrAssign<&i64>>::shr_assign": true,
  "<i8 as ops::bit::ShrAssign<&i8>>::shr_assign": true,
  "<i8 as ops::bit::ShrAssign<&isize>>::shr_assign": true,
  "<i8 as ops::bit::ShrAssign<&u128>>::shr_assign": true,
  "<i8 as ops::bit::ShrAssign<&u16>>::shr_assign": true,
  "<i8 as ops::bit::ShrAssign<&u32>>::shr_assign": true,
  "<i8 as ops::bit::ShrAssign<&u64>>::shr_assign": true,
  "<i8 as ops::bit::ShrAssign<&u8>>::shr_assign": true,
  "<i8 as ops::bit::ShrAssign<&usize>>::shr_assign": true,
  "<i8 as ops::bit::ShrAssign<i128>>::shr_assign": true,
  "<i8 as ops::bit::ShrAssign<i16>>::shr_assign": true,
  "<i8 as ops::bit::ShrAssign<i32>>::shr_assign": true,
  "<i8 as ops::bit::ShrAssign<i64>>::shr_assign": true,
  "<i8 as ops::bit::ShrAssign<isize>>::shr_assign": true,
  "<i8 as ops::bit::ShrAssign<u128>>::shr_assign": true,
  "<i8 as ops::bit::ShrAssign<u16>>::shr_assign": true,
  "<i8 as ops::bit::ShrAssign<u32>>::shr_assign": true,
  "<i8 as ops::bit::ShrAssign<u64>>::shr_assign": true,
  "<i8 as ops::bit::ShrAssign<u8>>::shr_assign": true,
  "<i8 as ops::bit::ShrAssign<usize>>::shr_assign": true,
  "<i8 as ops::bit::ShrAssign>::shr_assign": true,
  "<i8 as pat::RangePattern>::sub_one": true,
  "<i8 as string::SpecToString>::spec_to_string": true,
  "<i8 as sys::pal::unix::IsMinusOne>::is_minus_one": true,
  "<i8 as to_tokens::ToTokens>::to_tokens": true,
  "<i8 as ub_checks::Invariant>::is_safe": true,
  "<i8 as vec::is_zero::IsZero>::is_zero": true,
  "<impl std::cmp::PartialEq<Punct> for char>::eq": true,
  "<inflate::TINFLStatus as rustc_std_workspace_core::clone::Clone>::clone": true,
  "<inflate::TINFLStatus as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq": true,
  "<inflate::TINFLStatus as rustc_std_workspace_core::cmp::PartialEq>::eq": true,
  "<inflate::core::DecompressorOxide as rustc_std_workspace_core::default::Default>::default": true,
  "<inflate::core::LocalVars as rustc_std_workspace_core::clone::Clone>::clone": true,
  "<inflate::core::State as rustc_std_workspace_core::clone::Clone>::clone": true,
  "<inflate::core::State as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq": true,
  "<inflate::core::State as rustc_std_workspace_core::cmp::PartialEq>::eq": true,
  "<int::big::i256 as core::clone::Clone>::clone": true,
  "<int::big::i256 as core::cmp::PartialEq>::eq": true,
  "<int::big::i256 as core::cmp::PartialOrd>::partial_cmp": true,
  "<int::big::i256 as core::ops::BitOr>::bitor": true,
  "<int::big::i256 as core::ops::Not>::not": true,
  "<int::big::i256 as core::ops::Shl<u32>>::shl": true,
  "<int::big::i256 as int::traits::DInt>::hi": true,
  "<int::big::i256 as int::traits::DInt>::lo": true,
  "<int::big::u256 as core::clone::Clone>::clone": true,
  "<int::big::u256 as core::cmp::PartialEq>::eq": true,
  "<int::big::u256 as core::cmp::PartialOrd>::partial_cmp": true,
  "<int::big::u256 as core::ops::BitOr>::bitor": true,
  "<int::big::u256 as core::ops::Not>::not": true,
  "<int::big::u256 as core::ops::Shl<u32>>::shl": true,
  "<int::big::u256 as core::ops::Shr<u32>>::shr": true,
  "<int::big::u256 as int::traits::DInt>::hi": true,
  "<int::big::u256 as int::traits::DInt>::lo": true,
  "<intrinsics::AtomicOrdering as cmp::Eq>::assert_receiver_is_total_eq": true,
  "<intrinsics::AtomicOrdering as cmp::PartialEq>::eq": true,
  "<intrinsics::verify::arr_mod::generated_struct as clone::Clone>::clone": true,
  "<intrinsics::verify::arr_mod::generated_struct as cmp::PartialEq>::eq": true,
  "<intrinsics::verify::bool_mod::generated_struct as clone::Clone>::clone": true,
  "<intrinsics::verify::bool_mod::generated_struct as cmp::PartialEq>::eq": true,
  "<intrinsics::verify::char_mod::generated_struct as clone::Clone>::clone": true,
  "<intrinsics::verify::char_mod::generated_struct as cmp::PartialEq>::eq": true,
  "<intrinsics::verify::i128_mod::generated_struct as clone::Clone>::clone": true,
  "<intrinsics::verify::i128_mod::generated_struct as cmp::PartialEq>::eq": true,
  "<intrinsics::verify::i16_mod::generated_struct as clone::Clone>::clone": true,
  "<intrinsics::verify::i16_mod::generated_struct as cmp::PartialEq>::eq": true,
  "<intrinsics::verify::i32_mod::generated_struct as clone::Clone>::clone": true,
  "<intrinsics::verify::i32_mod::generated_struct as cmp::PartialEq>::eq": true,
  "<intrinsics::verify::i64_mod::generated_struct as clone::Clone>::clone": true,
  "<intrinsics::verify::i64_mod::generated_struct as cmp::PartialEq>::eq": true,
  "<intrinsics::verify::i8_mod::generated_struct as clone::Clone>::clone": true,
  "<intrinsics::verify::i8_mod::generated_struct as cmp::PartialEq>::eq": true,
  "<intrinsics::verify::struct_A as clone::Clone>::clone": true,
  "<intrinsics::verify::struct_A as cmp::PartialEq>::eq": true,
  "<intrinsics::verify::struct_mod::generated_struct as clone::Clone>::clone": true,
  "<intrinsics::verify::struct_mod::generated_struct as cmp::PartialEq>::eq": true,
  "<intrinsics::verify::tuple_mod::generated_struct as clone::Clone>::clone": true,
  "<intrinsics::verify::tuple_mod::generated_struct as cmp::PartialEq>::eq": true,
  "<intrinsics::verify::u128_mod::generated_struct as clone::Clone>::clone": true,
  "<intrinsics::verify::u128_mod::generated_struct as cmp::PartialEq>::eq": true,
  "<intrinsics::verify::u16_mod::generated_struct as clone::Clone>::clone": true,
  "<intrinsics::verify::u16_mod::generated_struct as cmp::PartialEq>::eq": true,
  "<intrinsics::verify::u32_mod::generated_struct as clone::Clone>::clone": true,
  "<intrinsics::verify::u32_mod::generated_struct as cmp::PartialEq>::eq": true,
  "<intrinsics::verify::u64_mod::generated_struct as clone::Clone>::clone": true,
  "<intrinsics::verify::u64_mod::generated_struct as cmp::PartialEq>::eq": true,
  "<intrinsics::verify::u8_mod::generated_struct as clone::Clone>::clone": true,
  "<intrinsics::verify::u8_mod::generated_struct as cmp::PartialEq>::eq": true,
  "<intrinsics::verify::u8_struct as clone::Clone>::clone": true,
  "<intrinsics::verify::u8_struct as cmp::PartialEq>::eq": true,
  "<io::SeekFrom as core::clone::Clone>::clone": true,
  "<io::SeekFrom as core::cmp::Eq>::assert_receiver_is_total_eq": true,
  "<io::SeekFrom as core::cmp::PartialEq>::eq": true,
  "<io::error::Error as core::convert::From<alloc_crate::collections::TryReserveError>>::from": true,
  "<io::error::Error as core::convert::From<io::error::ErrorKind>>::from": true,
  "<io::error::ErrorKind as core::clone::Clone>::clone": true,
  "<io::error::ErrorKind as core::cmp::Eq>::assert_receiver_is_total_eq": true,
  "<io::error::ErrorKind as core::cmp::Ord>::cmp": true,
  "<io::error::ErrorKind as core::cmp::PartialEq>::eq": true,
  "<io::error::ErrorKind as core::cmp::PartialOrd>::partial_cmp": true,
  "<io::pipe::PipeReader as io::Read>::is_read_vectored": true,
  "<io::pipe::PipeReader as os::fd::owned::AsFd>::as_fd": true,
  "<io::pipe::PipeReader as os::fd::raw::AsRawFd>::as_raw_fd": true,
  "<io::pipe::PipeReader as os::fd::raw::FromRawFd>::from_raw_fd": true,
  "<io::pipe::PipeReader as os::fd::raw::IntoRawFd>::into_raw_fd": true,
  "<io::pipe::PipeReader as sys::pal::unix::kernel_copy::CopyRead>::properties": true,
  "<io::pipe::PipeReader as sys_common::FromInner<sys::fd::unix::FileDesc>>::from_inner": true,
  "<io::pipe::PipeReader as sys_common::IntoInner<sys::fd::unix::FileDesc>>::into_inner": true,
  "<io::pipe::PipeWriter as io::Write>::flush": true,
  "<io::pipe::PipeWriter as io::Write>::is_write_vectored": true,
  "<io::pipe::PipeWriter as os::fd::owned::AsFd>::as_fd": true,
  "<io::pipe::PipeWriter as os::fd::raw::AsRawFd>::as_raw_fd": true,
  "<io::pipe::PipeWriter as os::fd::raw::FromRawFd>::from_raw_fd": true,
  "<io::pipe::PipeWriter as os::fd::raw::IntoRawFd>::into_raw_fd": true,
  "<io::pipe::PipeWriter as sys::pal::unix::kernel_copy::CopyWrite>::properties": true,
  "<io::pipe::PipeWriter as sys_common::FromInner<sys::fd::unix::FileDesc>>::from_inner": true,
  "<io::pipe::PipeWriter as sys_common::IntoInner<sys::fd::unix::FileDesc>>::into_inner": true,
  "<io::stdio::Stderr as io::Write>::flush": true,
  "<io::stdio::Stderr as io::Write>::is_write_vectored": true,
  "<io::stdio::Stderr as io::stdio::IsTerminal>::is_terminal": true,
  "<io::stdio::Stderr as os::fd::owned::AsFd>::as_fd": true,
  "<io::stdio::Stderr as os::fd::raw::AsRawFd>::as_raw_fd": true,
  "<io::stdio::StderrRaw as io::Write>::flush": true,
  "<io::stdio::StderrRaw as io::Write>::is_write_vectored": true,
  "<io::stdio::StdinRaw as io::Read>::is_read_vectored": true,
  "<io::stdio::StdoutRaw as io::Write>::flush": true,
  "<io::stdio::StdoutRaw as io::Write>::is_write_vectored": true,
  "<io::util::Empty as core::clone::Clone>::clone": true,
  "<io::util::Empty as core::default::Default>::default": true,
  "<io::util::Empty as io::BufRead>::consume": true,
  "<io::util::Empty as io::BufRead>::fill_buf": true,
  "<io::util::Empty as io::BufRead>::has_data_left": true,
  "<io::util::Empty as io::BufRead>::skip_until": true,
  "<io::util::Empty as io::Read>::is_read_vectored": true,
  "<io::util::Empty as io::Seek>::seek": true,
  "<io::util::Empty as io::Seek>::stream_len": true,
  "<io::util::Empty as io::Seek>::stream_position": true,
  "<io::util::Empty as io::SizeHint>::upper_bound": true,
  "<io::util::Empty as io::Write>::flush": true,
  "<io::util::Empty as io::Write>::is_write_vectored": true,
  "<io::util::Repeat as io::Read>::is_read_vectored": true,
  "<io::util::Repeat as io::SizeHint>::lower_bound": true,
  "<io::util::Repeat as io::SizeHint>::upper_bound": true,
  "<io::util::Sink as core::clone::Clone>::clone": true,
  "<io::util::Sink as core::default::Default>::default": true,
  "<io::util::Sink as io::Write>::flush": true,
  "<io::util::Sink as io::Write>::is_write_vectored": true,
  "<isize as default::Default>::default": true,
  "<isize as intrinsics::fallback::CarryingMulAdd>::carrying_mul_add": true,
  "<isize as iter::range::Step>::backward": true,
  "<isize as iter::range::Step>::backward_checked": true,
  "<isize as iter::range::Step>::forward": true,
  "<isize as iter::range::Step>::forward_checked": true,
  "<isize as iter::range::Step>::steps_between": true,
  "<isize as kani::rustc_intrinsics::ToISize>::to_isize": true,
  "<isize as math::libm_math::support::int_traits::CastInto<i128>>::cast": true,
  "<isize as math::libm_math::support::int_traits::CastInto<i128>>::cast_lossy": true,
  "<isize as math::libm_math::support::int_traits::CastInto<i16>>::cast": true,
  "<isize as math::libm_math::support::int_traits::CastInto<i16>>::cast_lossy": true,
  "<isize as math::libm_math::support::int_traits::CastInto<i32>>::cast": true,
  "<isize as math::libm_math::support::int_traits::CastInto<i32>>::cast_lossy": true,
  "<isize as math::libm_math::support::int_traits::CastInto<i64>>::cast": true,
  "<isize as math::libm_math::support::int_traits::CastInto<i64>>::cast_lossy": true,
  "<isize as math::libm_math::support::int_traits::CastInto<i8>>::cast": true,
  "<isize as math::libm_math::support::int_traits::CastInto<i8>>::cast_lossy": true,
  "<isize as math::libm_math::support::int_traits::CastInto<isize>>::cast": true,
  "<isize as math::libm_math::support::int_traits::CastInto<isize>>::cast_lossy": true,
  "<isize as math::libm_math::support::int_traits::CastInto<u128>>::cast": true,
  "<isize as math::libm_math::support::int_traits::CastInto<u128>>::cast_lossy": true,
  "<isize as math::libm_math::support::int_traits::CastInto<u16>>::cast": true,
  "<isize as math::libm_math::support::int_traits::CastInto<u16>>::cast_lossy": true,
  "<isize as math::libm_math::support::int_traits::CastInto<u32>>::cast": true,
  "<isize as math::libm_math::support::int_traits::CastInto<u32>>::cast_lossy": true,
  "<isize as math::libm_math::support::int_traits::CastInto<u64>>::cast": true,
  "<isize as math::libm_math::support::int_traits::CastInto<u64>>::cast_lossy": true,
  "<isize as math::libm_math::support::int_traits::CastInto<u8>>::cast": true,
  "<isize as math::libm_math::support::int_traits::CastInto<u8>>::cast_lossy": true,
  "<isize as math::libm_math::support::int_traits::CastInto<usize>>::cast": true,
  "<isize as math::libm_math::support::int_traits::CastInto<usize>>::cast_lossy": true,
  "<isize as math::libm_math::support::int_traits::Int>::abs": true,
  "<isize as math::libm_math::support::int_traits::Int>::abs_diff": true,
  "<isize as math::libm_math::support::int_traits::Int>::borrowing_sub": true,
  "<isize as math::libm_math::support::int_traits::Int>::carrying_add": true,
  "<isize as math::libm_math::support::int_traits::Int>::checked_add": true,
  "<isize as math::libm_math::support::int_traits::Int>::checked_sub": true,
  "<isize as math::libm_math::support::int_traits::Int>::from_bool": true,
  "<isize as math::libm_math::support::int_traits::Int>::from_unsigned": true,
  "<isize as math::libm_math::support::int_traits::Int>::ilog2": true,
  "<isize as math::libm_math::support::int_traits::Int>::is_zero": true,
  "<isize as math::libm_math::support::int_traits::Int>::leading_zeros": true,
  "<isize as math::libm_math::support::int_traits::Int>::logical_shr": true,
  "<isize as math::libm_math::support::int_traits::Int>::overflowing_add": true,
  "<isize as math::libm_math::support::int_traits::Int>::overflowing_sub": true,
  "<isize as math::libm_math::support::int_traits::Int>::rotate_left": true,
  "<isize as math::libm_math::support::int_traits::Int>::signed": true,
  "<isize as math::libm_math::support::int_traits::Int>::trailing_zeros": true,
  "<isize as math::libm_math::support::int_traits::Int>::unsigned": true,
  "<isize as math::libm_math::support::int_traits::Int>::unsigned_abs": true,
  "<isize as math::libm_math::support::int_traits::Int>::wrapping_add": true,
  "<isize as math::libm_math::support::int_traits::Int>::wrapping_mul": true,
  "<isize as math::libm_math::support::int_traits::Int>::wrapping_neg": true,
  "<isize as math::libm_math::support::int_traits::Int>::wrapping_shl": true,
  "<isize as math::libm_math::support::int_traits::Int>::wrapping_shr": true,
  "<isize as math::libm_math::support::int_traits::Int>::wrapping_sub": true,
  "<isize as ops::arith::Add<&isize>>::add": true,
  "<isize as ops::arith::Add>::add": true,
  "<isize as ops::arith::AddAssign<&isize>>::add_assign": true,
  "<isize as ops::arith::AddAssign>::add_assign": true,
  "<isize as ops::arith::Div<&isize>>::div": true,
  "<isize as ops::arith::Div>::div": true,
  "<isize as ops::arith::DivAssign<&isize>>::div_assign": true,
  "<isize as ops::arith::DivAssign>::div_assign": true,
  "<isize as ops::arith::Mul<&isize>>::mul": true,
  "<isize as ops::arith::Mul>::mul": true,
  "<isize as ops::arith::MulAssign<&isize>>::mul_assign": true,
  "<isize as ops::arith::MulAssign>::mul_assign": true,
  "<isize as ops::arith::Neg>::neg": true,
  "<isize as ops::arith::Rem<&isize>>::rem": true,
  "<isize as ops::arith::Rem>::rem": true,
  "<isize as ops::arith::RemAssign<&isize>>::rem_assign": true,
  "<isize as ops::arith::RemAssign>::rem_assign": true,
  "<isize as ops::arith::Sub<&isize>>::sub": true,
  "<isize as ops::arith::Sub>::sub": true,
  "<isize as ops::arith::SubAssign<&isize>>::sub_assign": true,
  "<isize as ops::arith::SubAssign>::sub_assign": true,
  "<isize as ops::bit::BitAnd<&isize>>::bitand": true,
  "<isize as ops::bit::BitAnd>::bitand": true,
  "<isize as ops::bit::BitAndAssign<&isize>>::bitand_assign": true,
  "<isize as ops::bit::BitAndAssign>::bitand_assign": true,
  "<isize as ops::bit::BitOr<&isize>>::bitor": true,
  "<isize as ops::bit::BitOr>::bitor": true,
  "<isize as ops::bit::BitOrAssign<&isize>>::bitor_assign": true,
  "<isize as ops::bit::BitOrAssign>::bitor_assign": true,
  "<isize as ops::bit::BitXor<&isize>>::bitxor": true,
  "<isize as ops::bit::BitXor>::bitxor": true,
  "<isize as ops::bit::BitXorAssign<&isize>>::bitxor_assign": true,
  "<isize as ops::bit::BitXorAssign>::bitxor_assign": true,
  "<isize as ops::bit::Not>::not": true,
  "<isize as ops::bit::Shl<&i128>>::shl": true,
  "<isize as ops::bit::Shl<&i16>>::shl": true,
  "<isize as ops::bit::Shl<&i32>>::shl": true,
  "<isize as ops::bit::Shl<&i64>>::shl": true,
  "<isize as ops::bit::Shl<&i8>>::shl": true,
  "<isize as ops::bit::Shl<&isize>>::shl": true,
  "<isize as ops::bit::Shl<&u128>>::shl": true,
  "<isize as ops::bit::Shl<&u16>>::shl": true,
  "<isize as ops::bit::Shl<&u32>>::shl": true,
  "<isize as ops::bit::Shl<&u64>>::shl": true,
  "<isize as ops::bit::Shl<&u8>>::shl": true,
  "<isize as ops::bit::Shl<&usize>>::shl": true,
  "<isize as ops::bit::Shl<i128>>::shl": true,
  "<isize as ops::bit::Shl<i16>>::shl": true,
  "<isize as ops::bit::Shl<i32>>::shl": true,
  "<isize as ops::bit::Shl<i64>>::shl": true,
  "<isize as ops::bit::Shl<i8>>::shl": true,
  "<isize as ops::bit::Shl<u128>>::shl": true,
  "<isize as ops::bit::Shl<u16>>::shl": true,
  "<isize as ops::bit::Shl<u32>>::shl": true,
  "<isize as ops::bit::Shl<u64>>::shl": true,
  "<isize as ops::bit::Shl<u8>>::shl": true,
  "<isize as ops::bit::Shl<usize>>::shl": true,
  "<isize as ops::bit::Shl>::shl": true,
  "<isize as ops::bit::ShlAssign<&i128>>::shl_assign": true,
  "<isize as ops::bit::ShlAssign<&i16>>::shl_assign": true,
  "<isize as ops::bit::ShlAssign<&i32>>::shl_assign": true,
  "<isize as ops::bit::ShlAssign<&i64>>::shl_assign": true,
  "<isize as ops::bit::ShlAssign<&i8>>::shl_assign": true,
  "<isize as ops::bit::ShlAssign<&isize>>::shl_assign": true,
  "<isize as ops::bit::ShlAssign<&u128>>::shl_assign": true,
  "<isize as ops::bit::ShlAssign<&u16>>::shl_assign": true,
  "<isize as ops::bit::ShlAssign<&u32>>::shl_assign": true,
  "<isize as ops::bit::ShlAssign<&u64>>::shl_assign": true,
  "<isize as ops::bit::ShlAssign<&u8>>::shl_assign": true,
  "<isize as ops::bit::ShlAssign<&usize>>::shl_assign": true,
  "<isize as ops::bit::ShlAssign<i128>>::shl_assign": true,
  "<isize as ops::bit::ShlAssign<i16>>::shl_assign": true,
  "<isize as ops::bit::ShlAssign<i32>>::shl_assign": true,
  "<isize as ops::bit::ShlAssign<i64>>::shl_assign": true,
  "<isize as ops::bit::ShlAssign<i8>>::shl_assign": true,
  "<isize as ops::bit::ShlAssign<u128>>::shl_assign": true,
  "<isize as ops::bit::ShlAssign<u16>>::shl_assign": true,
  "<isize as ops::bit::ShlAssign<u32>>::shl_assign": true,
  "<isize as ops::bit::ShlAssign<u64>>::shl_assign": true,
  "<isize as ops::bit::ShlAssign<u8>>::shl_assign": true,
  "<isize as ops::bit::ShlAssign<usize>>::shl_assign": true,
  "<isize as ops::bit::ShlAssign>::shl_assign": true,
  "<isize as ops::bit::Shr<&i128>>::shr": true,
  "<isize as ops::bit::Shr<&i16>>::shr": true,
  "<isize as ops::bit::Shr<&i32>>::shr": true,
  "<isize as ops::bit::Shr<&i64>>::shr": true,
  "<isize as ops::bit::Shr<&i8>>::shr": true,
  "<isize as ops::bit::Shr<&isize>>::shr": true,
  "<isize as ops::bit::Shr<&u128>>::shr": true,
  "<isize as ops::bit::Shr<&u16>>::shr": true,
  "<isize as ops::bit::Shr<&u32>>::shr": true,
  "<isize as ops::bit::Shr<&u64>>::shr": true,
  "<isize as ops::bit::Shr<&u8>>::shr": true,
  "<isize as ops::bit::Shr<&usize>>::shr": true,
  "<isize as ops::bit::Shr<i128>>::shr": true,
  "<isize as ops::bit::Shr<i16>>::shr": true,
  "<isize as ops::bit::Shr<i32>>::shr": true,
  "<isize as ops::bit::Shr<i64>>::shr": true,
  "<isize as ops::bit::Shr<i8>>::shr": true,
  "<isize as ops::bit::Shr<u128>>::shr": true,
  "<isize as ops::bit::Shr<u16>>::shr": true,
  "<isize as ops::bit::Shr<u32>>::shr": true,
  "<isize as ops::bit::Shr<u64>>::shr": true,
  "<isize as ops::bit::Shr<u8>>::shr": true,
  "<isize as ops::bit::Shr<usize>>::shr": true,
  "<isize as ops::bit::Shr>::shr": true,
  "<isize as ops::bit::ShrAssign<&i128>>::shr_assign": true,
  "<isize as ops::bit::ShrAssign<&i16>>::shr_assign": true,
  "<isize as ops::bit::ShrAssign<&i32>>::shr_assign": true,
  "<isize as ops::bit::ShrAssign<&i64>>::shr_assign": true,
  "<isize as ops::bit::ShrAssign<&i8>>::shr_assign": true,
  "<isize as ops::bit::ShrAssign<&isize>>::shr_assign": true,
  "<isize as ops::bit::ShrAssign<&u128>>::shr_assign": true,
  "<isize as ops::bit::ShrAssign<&u16>>::shr_assign": true,
  "<isize as ops::bit::ShrAssign<&u32>>::shr_assign": true,
  "<isize as ops::bit::ShrAssign<&u64>>::shr_assign": true,
  "<isize as ops::bit::ShrAssign<&u8>>::shr_assign": true,
  "<isize as ops::bit::ShrAssign<&usize>>::shr_assign": true,
  "<isize as ops::bit::ShrAssign<i128>>::shr_assign": true,
  "<isize as ops::bit::ShrAssign<i16>>::shr_assign": true,
  "<isize as ops::bit::ShrAssign<i32>>::shr_assign": true,
  "<isize as ops::bit::ShrAssign<i64>>::shr_assign": true,
  "<isize as ops::bit::ShrAssign<i8>>::shr_assign": true,
  "<isize as ops::bit::ShrAssign<u128>>::shr_assign": true,
  "<isize as ops::bit::ShrAssign<u16>>::shr_assign": true,
  "<isize as ops::bit::ShrAssign<u32>>::shr_assign": true,
  "<isize as ops::bit::ShrAssign<u64>>::shr_assign": true,
  "<isize as ops::bit::ShrAssign<u8>>::shr_assign": true,
  "<isize as ops::bit::ShrAssign<usize>>::shr_assign": true,
  "<isize as ops::bit::ShrAssign>::shr_assign": true,
  "<isize as pat::RangePattern>::sub_one": true,
  "<isize as string::SpecToString>::spec_to_string": true,
  "<isize as sys::pal::unix::IsMinusOne>::is_minus_one": true,
  "<isize as to_tokens::ToTokens>::to_tokens": true,
  "<isize as ub_checks::Invariant>::is_safe": true,
  "<isize as vec::is_zero::IsZero>::is_zero": true,
  "<iter::adapters::step_by::StepBy<I> as iter::adapters::step_by::StepByImpl<I>>::spec_size_hint::first_size": true,
  "<iter::adapters::step_by::StepBy<I> as iter::adapters::step_by::StepByImpl<I>>::spec_size_hint::other_size": true,
  "<iter::adapters::step_by::StepBy<ops::range::Range<u16>> as iter::adapters::step_by::StepByBackImpl<ops::range::Range<u16>>>::spec_next_back": true,
  "<iter::adapters::step_by::StepBy<ops::range::Range<u16>> as iter::adapters::step_by::StepByBackImpl<ops::range::Range<u16>>>::spec_nth_back": true,
  "<iter::adapters::step_by::StepBy<ops::range::Range<u16>> as iter::adapters::step_by::StepByImpl<ops::range::Range<u16>>>::spec_next": true,
  "<iter::adapters::step_by::StepBy<ops::range::Range<u16>> as iter::adapters::step_by::StepByImpl<ops::range::Range<u16>>>::spec_nth": true,
  "<iter::adapters::step_by::StepBy<ops::range::Range<u16>> as iter::adapters::step_by::StepByImpl<ops::range::Range<u16>>>::spec_size_hint": true,
  "<iter::adapters::step_by::StepBy<ops::range::Range<u32>> as iter::adapters::step_by::StepByBackImpl<ops::range::Range<u32>>>::spec_next_back": true,
  "<iter::adapters::step_by::StepBy<ops::range::Range<u32>> as iter::adapters::step_by::StepByBackImpl<ops::range::Range<u32>>>::spec_nth_back": true,
  "<iter::adapters::step_by::StepBy<ops::range::Range<u32>> as iter::adapters::step_by::StepByImpl<ops::range::Range<u32>>>::spec_next": true,
  "<iter::adapters::step_by::StepBy<ops::range::Range<u32>> as iter::adapters::step_by::StepByImpl<ops::range::Range<u32>>>::spec_nth": true,
  "<iter::adapters::step_by::StepBy<ops::range::Range<u32>> as iter::adapters::step_by::StepByImpl<ops::range::Range<u32>>>::spec_size_hint": true,
  "<iter::adapters::step_by::StepBy<ops::range::Range<u64>> as iter::adapters::step_by::StepByImpl<ops::range::Range<u64>>>::spec_next": true,
  "<iter::adapters::step_by::StepBy<ops::range::Range<u64>> as iter::adapters::step_by::StepByImpl<ops::range::Range<u64>>>::spec_nth": true,
  "<iter::adapters::step_by::StepBy<ops::range::Range<u64>> as iter::adapters::step_by::StepByImpl<ops::range::Range<u64>>>::spec_size_hint": true,
  "<iter::adapters::step_by::StepBy<ops::range::Range<u8>> as iter::adapters::step_by::StepByBackImpl<ops::range::Range<u8>>>::spec_next_back": true,
  "<iter::adapters::step_by::StepBy<ops::range::Range<u8>> as iter::adapters::step_by::StepByBackImpl<ops::range::Range<u8>>>::spec_nth_back": true,
  "<iter::adapters::step_by::StepBy<ops::range::Range<u8>> as iter::adapters::step_by::StepByImpl<ops::range::Range<u8>>>::spec_next": true,
  "<iter::adapters::step_by::StepBy<ops::range::Range<u8>> as iter::adapters::step_by::StepByImpl<ops::range::Range<u8>>>::spec_nth": true,
  "<iter::adapters::step_by::StepBy<ops::range::Range<u8>> as iter::adapters::step_by::StepByImpl<ops::range::Range<u8>>>::spec_size_hint": true,
  "<iter::adapters::step_by::StepBy<ops::range::Range<usize>> as iter::adapters::step_by::StepByBackImpl<ops::range::Range<usize>>>::spec_next_back": true,
  "<iter::adapters::step_by::StepBy<ops::range::Range<usize>> as iter::adapters::step_by::StepByBackImpl<ops::range::Range<usize>>>::spec_nth_back": true,
  "<iter::adapters::step_by::StepBy<ops::range::Range<usize>> as iter::adapters::step_by::StepByImpl<ops::range::Range<usize>>>::spec_next": true,
  "<iter::adapters::step_by::StepBy<ops::range::Range<usize>> as iter::adapters::step_by::StepByImpl<ops::range::Range<usize>>>::spec_nth": true,
  "<iter::adapters::step_by::StepBy<ops::range::Range<usize>> as iter::adapters::step_by::StepByImpl<ops::range::Range<usize>>>::spec_size_hint": true,
  "<kani::arbitrary_ptr::AllocationStatus as clone::Clone>::clone": true,
  "<kani::arbitrary_ptr::AllocationStatus as cmp::Eq>::assert_receiver_is_total_eq": true,
  "<kani::arbitrary_ptr::AllocationStatus as cmp::PartialEq>::eq": true,
  "<libunwind::_Unwind_Reason_Code as rustc_std_workspace_core::clone::Clone>::clone": true,
  "<libunwind::_Unwind_Reason_Code as rustc_std_workspace_core::cmp::PartialEq>::eq": true,
  "<macho::DyldCacheSlidePointer3 as rustc_std_workspace_core::clone::Clone>::clone": true,
  "<macho::DyldCacheSlidePointer5 as rustc_std_workspace_core::clone::Clone>::clone": true,
  "<macho::FatArch32 as read::macho::fat::FatArch>::align": true,
  "<macho::FatArch32 as read::macho::fat::FatArch>::cpusubtype": true,
  "<macho::FatArch32 as read::macho::fat::FatArch>::cputype": true,
  "<macho::FatArch32 as read::macho::fat::FatArch>::offset": true,
  "<macho::FatArch32 as read::macho::fat::FatArch>::size": true,
  "<macho::FatArch32 as rustc_std_workspace_core::clone::Clone>::clone": true,
  "<macho::FatArch64 as read::macho::fat::FatArch>::align": true,
  "<macho::FatArch64 as read::macho::fat::FatArch>::cpusubtype": true,
  "<macho::FatArch64 as read::macho::fat::FatArch>::cputype": true,
  "<macho::FatArch64 as read::macho::fat::FatArch>::offset": true,
  "<macho::FatArch64 as read::macho::fat::FatArch>::size": true,
  "<macho::FatArch64 as rustc_std_workspace_core::clone::Clone>::clone": true,
  "<macho::FatHeader as rustc_std_workspace_core::clone::Clone>::clone": true,
  "<macho::PtrauthKey as rustc_std_workspace_core::clone::Clone>::clone": true,
  "<macho::PtrauthKey as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq": true,
  "<macho::PtrauthKey as rustc_std_workspace_core::cmp::PartialEq>::eq": true,
  "<macho::RelocationInfo as rustc_std_workspace_core::clone::Clone>::clone": true,
  "<macho::ScatteredRelocationInfo as rustc_std_workspace_core::clone::Clone>::clone": true,
  "<marker::PhantomPinned as clone::Clone>::clone": true,
  "<marker::PhantomPinned as cmp::Eq>::assert_receiver_is_total_eq": true,
  "<marker::PhantomPinned as cmp::Ord>::cmp": true,
  "<marker::PhantomPinned as cmp::PartialEq>::eq": true,
  "<marker::PhantomPinned as cmp::PartialOrd>::partial_cmp": true,
  "<marker::PhantomPinned as default::Default>::default": true,
  "<marker::variance::PhantomContravariantLifetime<'_> as default::Default>::default": true,
  "<marker::variance::PhantomCovariantLifetime<'_> as default::Default>::default": true,
  "<marker::variance::PhantomInvariantLifetime<'_> as default::Default>::default": true,
  "<math::libm_math::support::big::i256 as core::clone::Clone>::clone": true,
  "<math::libm_math::support::big::i256 as core::cmp::Eq>::assert_receiver_is_total_eq": true,
  "<math::libm_math::support::big::i256 as core::cmp::Ord>::cmp": true,
  "<math::libm_math::support::big::i256 as core::cmp::PartialEq>::eq": true,
  "<math::libm_math::support::big::i256 as core::cmp::PartialOrd>::partial_cmp": true,
  "<math::libm_math::support::big::i256 as core::ops::Add>::add": true,
  "<math::libm_math::support::big::i256 as core::ops::BitOr>::bitor": true,
  "<math::libm_math::support::big::i256 as core::ops::Not>::not": true,
  "<math::libm_math::support::big::i256 as core::ops::Shl<u32>>::shl": true,
  "<math::libm_math::support::big::i256 as core::ops::Shr<u32>>::shr": true,
  "<math::libm_math::support::big::i256 as core::ops::Sub>::sub": true,
  "<math::libm_math::support::big::i256 as math::libm_math::support::int_traits::DInt>::hi": true,
  "<math::libm_math::support::big::i256 as math::libm_math::support::int_traits::DInt>::lo": true,
  "<math::libm_math::support::big::u256 as core::clone::Clone>::clone": true,
  "<math::libm_math::support::big::u256 as core::cmp::Eq>::assert_receiver_is_total_eq": true,
  "<math::libm_math::support::big::u256 as core::cmp::Ord>::cmp": true,
  "<math::libm_math::support::big::u256 as core::cmp::PartialEq>::eq": true,
  "<math::libm_math::support::big::u256 as core::cmp::PartialOrd>::partial_cmp": true,
  "<math::libm_math::support::big::u256 as core::ops::Add>::add": true,
  "<math::libm_math::support::big::u256 as core::ops::BitOr>::bitor": true,
  "<math::libm_math::support::big::u256 as core::ops::Not>::not": true,
  "<math::libm_math::support::big::u256 as core::ops::Shl<u32>>::shl": true,
  "<math::libm_math::support::big::u256 as core::ops::Shr<u32>>::shr": true,
  "<math::libm_math::support::big::u256 as core::ops::Sub>::sub": true,
  "<math::libm_math::support::big::u256 as math::libm_math::support::int_traits::DInt>::hi": true,
  "<math::libm_math::support::big::u256 as math::libm_math::support::int_traits::DInt>::lo": true,
  "<math::libm_math::support::env::Round as core::clone::Clone>::clone": true,
  "<math::libm_math::support::env::Round as core::cmp::PartialEq>::eq": true,
  "<math::libm_math::support::env::Status as core::clone::Clone>::clone": true,
  "<math::libm_math::support::env::Status as core::cmp::Eq>::assert_receiver_is_total_eq": true,
  "<math::libm_math::support::env::Status as core::cmp::PartialEq>::eq": true,
  "<math::libm_math::support::feature_detect::Flags as core::clone::Clone>::clone": true,
  "<math::libm_math::support::feature_detect::Flags as core::cmp::PartialEq>::eq": true,
  "<mem::transmutability::Assume as clone::Clone>::clone": true,
  "<mem::transmutability::Assume as cmp::Eq>::assert_receiver_is_total_eq": true,
  "<mem::transmutability::Assume as cmp::PartialEq>::eq": true,
  "<mem::transmutability::Assume as ops::arith::Add>::add": true,
  "<mem::transmutability::Assume as ops::arith::Sub>::sub": true,
  "<memmem::FinderBuilder as rustc_std_workspace_core::clone::Clone>::clone": true,
  "<memmem::FinderBuilder as rustc_std_workspace_core::default::Default>::default": true,
  "<memmem::searcher::PrefilterConfig as rustc_std_workspace_core::clone::Clone>::clone": true,
  "<memmem::searcher::PrefilterConfig as rustc_std_workspace_core::default::Default>::default": true,
  "<memmem::searcher::PrefilterState as rustc_std_workspace_core::clone::Clone>::clone": true,
  "<memmem::searcher::SearcherRev as rustc_std_workspace_core::clone::Clone>::clone": true,
  "<memmem::searcher::SearcherRevKind as rustc_std_workspace_core::clone::Clone>::clone": true,
  "<net::Shutdown as core::clone::Clone>::clone": true,
  "<net::Shutdown as core::cmp::Eq>::assert_receiver_is_total_eq": true,
  "<net::Shutdown as core::cmp::PartialEq>::eq": true,
  "<net::ip_addr::IpAddr as clone::Clone>::clone": true,
  "<net::ip_addr::IpAddr as cmp::Eq>::assert_receiver_is_total_eq": true,
  "<net::ip_addr::IpAddr as cmp::Ord>::cmp": true,
  "<net::ip_addr::IpAddr as cmp::PartialEq<net::ip_addr::Ipv4Addr>>::eq": true,
  "<net::ip_addr::IpAddr as cmp::PartialEq<net::ip_addr::Ipv6Addr>>::eq": true,
  "<net::ip_addr::IpAddr as cmp::PartialEq>::eq": true,
  "<net::ip_addr::IpAddr as cmp::PartialOrd<net::ip_addr::Ipv4Addr>>::partial_cmp": true,
  "<net::ip_addr::IpAddr as cmp::PartialOrd<net::ip_addr::Ipv6Addr>>::partial_cmp": true,
  "<net::ip_addr::IpAddr as cmp::PartialOrd>::partial_cmp": true,
  "<net::ip_addr::IpAddr as convert::From<[u16; 8]>>::from": true,
  "<net::ip_addr::IpAddr as convert::From<[u8; 16]>>::from": true,
  "<net::ip_addr::IpAddr as convert::From<[u8; 4]>>::from": true,
  "<net::ip_addr::IpAddr as convert::From<net::ip_addr::Ipv4Addr>>::from": true,
  "<net::ip_addr::IpAddr as convert::From<net::ip_addr::Ipv6Addr>>::from": true,
  "<net::ip_addr::Ipv4Addr as clone::Clone>::clone": true,
  "<net::ip_addr::Ipv4Addr as cmp::Eq>::assert_receiver_is_total_eq": true,
  "<net::ip_addr::Ipv4Addr as cmp::Ord>::cmp": true,
  "<net::ip_addr::Ipv4Addr as cmp::PartialEq<net::ip_addr::IpAddr>>::eq": true,
  "<net::ip_addr::Ipv4Addr as cmp::PartialEq>::eq": true,
  "<net::ip_addr::Ipv4Addr as cmp::PartialOrd<net::ip_addr::IpAddr>>::partial_cmp": true,
  "<net::ip_addr::Ipv4Addr as cmp::PartialOrd>::partial_cmp": true,
  "<net::ip_addr::Ipv4Addr as convert::From<[u8; 4]>>::from": true,
  "<net::ip_addr::Ipv4Addr as convert::From<u32>>::from": true,
  "<net::ip_addr::Ipv4Addr as iter::range::Step>::backward_checked": true,
  "<net::ip_addr::Ipv4Addr as iter::range::Step>::forward_checked": true,
  "<net::ip_addr::Ipv4Addr as iter::range::Step>::steps_between": true,
  "<net::ip_addr::Ipv4Addr as ops::bit::BitAnd<&net::ip_addr::Ipv4Addr>>::bitand": true,
  "<net::ip_addr::Ipv4Addr as ops::bit::BitAnd>::bitand": true,
  "<net::ip_addr::Ipv4Addr as ops::bit::BitAndAssign<&net::ip_addr::Ipv4Addr>>::bitand_assign": true,
  "<net::ip_addr::Ipv4Addr as ops::bit::BitAndAssign>::bitand_assign": true,
  "<net::ip_addr::Ipv4Addr as ops::bit::BitOr<&net::ip_addr::Ipv4Addr>>::bitor": true,
  "<net::ip_addr::Ipv4Addr as ops::bit::BitOr>::bitor": true,
  "<net::ip_addr::Ipv4Addr as ops::bit::BitOrAssign<&net::ip_addr::Ipv4Addr>>::bitor_assign": true,
  "<net::ip_addr::Ipv4Addr as ops::bit::BitOrAssign>::bitor_assign": true,
  "<net::ip_addr::Ipv4Addr as ops::bit::Not>::not": true,
  "<net::ip_addr::Ipv6Addr as clone::Clone>::clone": true,
  "<net::ip_addr::Ipv6Addr as cmp::Eq>::assert_receiver_is_total_eq": true,
  "<net::ip_addr::Ipv6Addr as cmp::Ord>::cmp": true,
  "<net::ip_addr::Ipv6Addr as cmp::PartialEq<net::ip_addr::IpAddr>>::eq": true,
  "<net::ip_addr::Ipv6Addr as cmp::PartialEq>::eq": true,
  "<net::ip_addr::Ipv6Addr as cmp::PartialOrd<net::ip_addr::IpAddr>>::partial_cmp": true,
  "<net::ip_addr::Ipv6Addr as cmp::PartialOrd>::partial_cmp": true,
  "<net::ip_addr::Ipv6Addr as convert::From<[u16; 8]>>::from": true,
  "<net::ip_addr::Ipv6Addr as convert::From<[u8; 16]>>::from": true,
  "<net::ip_addr::Ipv6Addr as convert::From<u128>>::from": true,
  "<net::ip_addr::Ipv6Addr as iter::range::Step>::backward_checked": true,
  "<net::ip_addr::Ipv6Addr as iter::range::Step>::forward_checked": true,
  "<net::ip_addr::Ipv6Addr as iter::range::Step>::steps_between": true,
  "<net::ip_addr::Ipv6Addr as ops::bit::BitAnd<&net::ip_addr::Ipv6Addr>>::bitand": true,
  "<net::ip_addr::Ipv6Addr as ops::bit::BitAnd>::bitand": true,
  "<net::ip_addr::Ipv6Addr as ops::bit::BitAndAssign<&net::ip_addr::Ipv6Addr>>::bitand_assign": true,
  "<net::ip_addr::Ipv6Addr as ops::bit::BitAndAssign>::bitand_assign": true,
  "<net::ip_addr::Ipv6Addr as ops::bit::BitOr<&net::ip_addr::Ipv6Addr>>::bitor": true,
  "<net::ip_addr::Ipv6Addr as ops::bit::BitOr>::bitor": true,
  "<net::ip_addr::Ipv6Addr as ops::bit::BitOrAssign<&net::ip_addr::Ipv6Addr>>::bitor_assign": true,
  "<net::ip_addr::Ipv6Addr as ops::bit::BitOrAssign>::bitor_assign": true,
  "<net::ip_addr::Ipv6Addr as ops::bit::Not>::not": true,
  "<net::ip_addr::Ipv6MulticastScope as clone::Clone>::clone": true,
  "<net::ip_addr::Ipv6MulticastScope as cmp::Eq>::assert_receiver_is_total_eq": true,
  "<net::ip_addr::Ipv6MulticastScope as cmp::PartialEq>::eq": true,
  "<net::parser::AddrKind as clone::Clone>::clone": true,
  "<net::parser::AddrKind as cmp::Eq>::assert_receiver_is_total_eq": true,
  "<net::parser::AddrKind as cmp::PartialEq>::eq": true,
  "<net::parser::AddrParseError as clone::Clone>::clone": true,
  "<net::parser::AddrParseError as cmp::Eq>::assert_receiver_is_total_eq": true,
  "<net::parser::AddrParseError as cmp::PartialEq>::eq": true,
  "<net::socket_addr::SocketAddr as clone::Clone>::clone": true,
  "<net::socket_addr::SocketAddr as cmp::Eq>::assert_receiver_is_total_eq": true,
  "<net::socket_addr::SocketAddr as cmp::Ord>::cmp": true,
  "<net::socket_addr::SocketAddr as cmp::PartialEq>::eq": true,
  "<net::socket_addr::SocketAddr as cmp::PartialOrd>::partial_cmp": true,
  "<net::socket_addr::SocketAddr as convert::From<net::socket_addr::SocketAddrV4>>::from": true,
  "<net::socket_addr::SocketAddr as convert::From<net::socket_addr::SocketAddrV6>>::from": true,
  "<net::socket_addr::SocketAddrV4 as clone::Clone>::clone": true,
  "<net::socket_addr::SocketAddrV4 as cmp::Eq>::assert_receiver_is_total_eq": true,
  "<net::socket_addr::SocketAddrV4 as cmp::Ord>::cmp": true,
  "<net::socket_addr::SocketAddrV4 as cmp::PartialEq>::eq": true,
  "<net::socket_addr::SocketAddrV4 as cmp::PartialOrd>::partial_cmp": true,
  "<net::socket_addr::SocketAddrV6 as clone::Clone>::clone": true,
  "<net::socket_addr::SocketAddrV6 as cmp::Eq>::assert_receiver_is_total_eq": true,
  "<net::socket_addr::SocketAddrV6 as cmp::Ord>::cmp": true,
  "<net::socket_addr::SocketAddrV6 as cmp::PartialEq>::eq": true,
  "<net::socket_addr::SocketAddrV6 as cmp::PartialOrd>::partial_cmp": true,
  "<net::tcp::IntoIncoming as core::iter::Iterator>::next": true,
  "<net::tcp::TcpListener as os::fd::owned::AsFd>::as_fd": true,
  "<net::tcp::TcpListener as sys_common::AsInner<sys::net::connection::socket::TcpListener>>::as_inner": true,
  "<net::tcp::TcpListener as sys_common::FromInner<sys::net::connection::socket::TcpListener>>::from_inner": true,
  "<net::tcp::TcpListener as sys_common::IntoInner<sys::net::connection::socket::TcpListener>>::into_inner": true,
  "<net::tcp::TcpStream as io::Read>::is_read_vectored": true,
  "<net::tcp::TcpStream as io::Write>::flush": true,
  "<net::tcp::TcpStream as io::Write>::is_write_vectored": true,
  "<net::tcp::TcpStream as os::fd::owned::AsFd>::as_fd": true,
  "<net::tcp::TcpStream as os::net::linux_ext::tcp::TcpStreamExt>::deferaccept": true,
  "<net::tcp::TcpStream as os::net::linux_ext::tcp::TcpStreamExt>::quickack": true,
  "<net::tcp::TcpStream as os::net::linux_ext::tcp::TcpStreamExt>::set_deferaccept": true,
  "<net::tcp::TcpStream as os::net::linux_ext::tcp::TcpStreamExt>::set_quickack": true,
  "<net::tcp::TcpStream as sys::pal::unix::kernel_copy::CopyRead>::properties": true,
  "<net::tcp::TcpStream as sys::pal::unix::kernel_copy::CopyWrite>::properties": true,
  "<net::tcp::TcpStream as sys_common::AsInner<sys::net::connection::socket::TcpStream>>::as_inner": true,
  "<net::tcp::TcpStream as sys_common::FromInner<sys::net::connection::socket::TcpStream>>::from_inner": true,
  "<net::tcp::TcpStream as sys_common::IntoInner<sys::net::connection::socket::TcpStream>>::into_inner": true,
  "<net::udp::UdpSocket as os::fd::owned::AsFd>::as_fd": true,
  "<net::udp::UdpSocket as sys_common::AsInner<sys::net::connection::socket::UdpSocket>>::as_inner": true,
  "<net::udp::UdpSocket as sys_common::FromInner<sys::net::connection::socket::UdpSocket>>::from_inner": true,
  "<net::udp::UdpSocket as sys_common::IntoInner<sys::net::connection::socket::UdpSocket>>::into_inner": true,
  "<new::linux_uapi::linux::can::__c_anonymous_sockaddr_can_j1939 as core::clone::Clone>::clone": true,
  "<new::linux_uapi::linux::can::__c_anonymous_sockaddr_can_tp as core::clone::Clone>::clone": true,
  "<new::linux_uapi::linux::can::can_filter as core::clone::Clone>::clone": true,
  "<new::linux_uapi::linux::can::can_frame as core::clone::Clone>::clone": true,
  "<new::linux_uapi::linux::can::canfd_frame as core::clone::Clone>::clone": true,
  "<new::linux_uapi::linux::can::canxl_frame as core::clone::Clone>::clone": true,
  "<new::linux_uapi::linux::can::j1939::j1939_filter as core::clone::Clone>::clone": true,
  "<num::FpCategory as clone::Clone>::clone": true,
  "<num::FpCategory as cmp::Eq>::assert_receiver_is_total_eq": true,
  "<num::FpCategory as cmp::PartialEq>::eq": true,
  "<num::bignum::Big32x40 as clone::Clone>::clone": true,
  "<num::bignum::Big32x40 as cmp::Ord>::cmp": true,
  "<num::bignum::Big32x40 as cmp::PartialEq>::eq": true,
  "<num::bignum::Big32x40 as cmp::PartialOrd>::partial_cmp": true,
  "<num::bignum::tests::Big8x3 as clone::Clone>::clone": true,
  "<num::bignum::tests::Big8x3 as cmp::Ord>::cmp": true,
  "<num::bignum::tests::Big8x3 as cmp::PartialEq>::eq": true,
  "<num::bignum::tests::Big8x3 as cmp::PartialOrd>::partial_cmp": true,
  "<num::dec2flt::FloatErrorKind as clone::Clone>::clone": true,
  "<num::dec2flt::FloatErrorKind as cmp::Eq>::assert_receiver_is_total_eq": true,
  "<num::dec2flt::FloatErrorKind as cmp::PartialEq>::eq": true,
  "<num::dec2flt::ParseFloatError as clone::Clone>::clone": true,
  "<num::dec2flt::ParseFloatError as cmp::Eq>::assert_receiver_is_total_eq": true,
  "<num::dec2flt::ParseFloatError as cmp::PartialEq>::eq": true,
  "<num::dec2flt::common::BiasedFp as clone::Clone>::clone": true,
  "<num::dec2flt::common::BiasedFp as cmp::Eq>::assert_receiver_is_total_eq": true,
  "<num::dec2flt::common::BiasedFp as cmp::PartialEq>::eq": true,
  "<num::dec2flt::common::BiasedFp as default::Default>::default": true,
  "<num::dec2flt::decimal::Decimal as clone::Clone>::clone": true,
  "<num::dec2flt::decimal::Decimal as cmp::Eq>::assert_receiver_is_total_eq": true,
  "<num::dec2flt::decimal::Decimal as cmp::PartialEq>::eq": true,
  "<num::dec2flt::decimal::Decimal as default::Default>::default": true,
  "<num::dec2flt::decimal_seq::DecimalSeq as clone::Clone>::clone": true,
  "<num::dec2flt::decimal_seq::DecimalSeq as cmp::PartialEq>::eq": true,
  "<num::dec2flt::decimal_seq::DecimalSeq as default::Default>::default": true,
  "<num::diy_float::Fp as clone::Clone>::clone": true,
  "<num::error::IntErrorKind as clone::Clone>::clone": true,
  "<num::error::IntErrorKind as cmp::Eq>::assert_receiver_is_total_eq": true,
  "<num::error::IntErrorKind as cmp::PartialEq>::eq": true,
  "<num::error::ParseIntError as clone::Clone>::clone": true,
  "<num::error::ParseIntError as cmp::Eq>::assert_receiver_is_total_eq": true,
  "<num::error::ParseIntError as cmp::PartialEq>::eq": true,
  "<num::error::TryFromIntError as clone::Clone>::clone": true,
  "<num::error::TryFromIntError as cmp::Eq>::assert_receiver_is_total_eq": true,
  "<num::error::TryFromIntError as cmp::PartialEq>::eq": true,
  "<num::flt2dec::Sign as clone::Clone>::clone": true,
  "<num::flt2dec::Sign as cmp::Eq>::assert_receiver_is_total_eq": true,
  "<num::flt2dec::Sign as cmp::PartialEq>::eq": true,
  "<num::flt2dec::decoder::Decoded as clone::Clone>::clone": true,
  "<num::flt2dec::decoder::Decoded as cmp::Eq>::assert_receiver_is_total_eq": true,
  "<num::flt2dec::decoder::Decoded as cmp::PartialEq>::eq": true,
  "<num::flt2dec::decoder::FullDecoded as clone::Clone>::clone": true,
  "<num::flt2dec::decoder::FullDecoded as cmp::Eq>::assert_receiver_is_total_eq": true,
  "<num::flt2dec::decoder::FullDecoded as cmp::PartialEq>::eq": true,
  "<num::niche_types::CodePointInner as clone::Clone>::clone": true,
  "<num::niche_types::CodePointInner as cmp::Eq>::assert_receiver_is_total_eq": true,
  "<num::niche_types::CodePointInner as cmp::Ord>::cmp": true,
  "<num::niche_types::CodePointInner as cmp::PartialEq>::eq": true,
  "<num::niche_types::CodePointInner as cmp::PartialOrd>::partial_cmp": true,
  "<num::niche_types::CodePointInner as default::Default>::default": true,
  "<num::niche_types::I32NotAllOnes as clone::Clone>::clone": true,
  "<num::niche_types::I32NotAllOnes as cmp::Eq>::assert_receiver_is_total_eq": true,
  "<num::niche_types::I32NotAllOnes as cmp::Ord>::cmp": true,
  "<num::niche_types::I32NotAllOnes as cmp::PartialEq>::eq": true,
  "<num::niche_types::I32NotAllOnes as cmp::PartialOrd>::partial_cmp": true,
  "<num::niche_types::I64NotAllOnes as clone::Clone>::clone": true,
  "<num::niche_types::I64NotAllOnes as cmp::Eq>::assert_receiver_is_total_eq": true,
  "<num::niche_types::I64NotAllOnes as cmp::Ord>::cmp": true,
  "<num::niche_types::I64NotAllOnes as cmp::PartialEq>::eq": true,
  "<num::niche_types::I64NotAllOnes as cmp::PartialOrd>::partial_cmp": true,
  "<num::niche_types::Nanoseconds as clone::Clone>::clone": true,
  "<num::niche_types::Nanoseconds as cmp::Eq>::assert_receiver_is_total_eq": true,
  "<num::niche_types::Nanoseconds as cmp::Ord>::cmp": true,
  "<num::niche_types::Nanoseconds as cmp::PartialEq>::eq": true,
  "<num::niche_types::Nanoseconds as cmp::PartialOrd>::partial_cmp": true,
  "<num::niche_types::Nanoseconds as default::Default>::default": true,
  "<num::niche_types::NonZeroCharInner as clone::Clone>::clone": true,
  "<num::niche_types::NonZeroCharInner as cmp::Eq>::assert_receiver_is_total_eq": true,
  "<num::niche_types::NonZeroCharInner as cmp::Ord>::cmp": true,
  "<num::niche_types::NonZeroCharInner as cmp::PartialEq>::eq": true,
  "<num::niche_types::NonZeroCharInner as cmp::PartialOrd>::partial_cmp": true,
  "<num::niche_types::NonZeroI128Inner as clone::Clone>::clone": true,
  "<num::niche_types::NonZeroI128Inner as cmp::Eq>::assert_receiver_is_total_eq": true,
  "<num::niche_types::NonZeroI128Inner as cmp::Ord>::cmp": true,
  "<num::niche_types::NonZeroI128Inner as cmp::PartialEq>::eq": true,
  "<num::niche_types::NonZeroI128Inner as cmp::PartialOrd>::partial_cmp": true,
  "<num::niche_types::NonZeroI16Inner as clone::Clone>::clone": true,
  "<num::niche_types::NonZeroI16Inner as cmp::Eq>::assert_receiver_is_total_eq": true,
  "<num::niche_types::NonZeroI16Inner as cmp::Ord>::cmp": true,
  "<num::niche_types::NonZeroI16Inner as cmp::PartialEq>::eq": true,
  "<num::niche_types::NonZeroI16Inner as cmp::PartialOrd>::partial_cmp": true,
  "<num::niche_types::NonZeroI32Inner as clone::Clone>::clone": true,
  "<num::niche_types::NonZeroI32Inner as cmp::Eq>::assert_receiver_is_total_eq": true,
  "<num::niche_types::NonZeroI32Inner as cmp::Ord>::cmp": true,
  "<num::niche_types::NonZeroI32Inner as cmp::PartialEq>::eq": true,
  "<num::niche_types::NonZeroI32Inner as cmp::PartialOrd>::partial_cmp": true,
  "<num::niche_types::NonZeroI64Inner as clone::Clone>::clone": true,
  "<num::niche_types::NonZeroI64Inner as cmp::Eq>::assert_receiver_is_total_eq": true,
  "<num::niche_types::NonZeroI64Inner as cmp::Ord>::cmp": true,
  "<num::niche_types::NonZeroI64Inner as cmp::PartialEq>::eq": true,
  "<num::niche_types::NonZeroI64Inner as cmp::PartialOrd>::partial_cmp": true,
  "<num::niche_types::NonZeroI8Inner as clone::Clone>::clone": true,
  "<num::niche_types::NonZeroI8Inner as cmp::Eq>::assert_receiver_is_total_eq": true,
  "<num::niche_types::NonZeroI8Inner as cmp::Ord>::cmp": true,
  "<num::niche_types::NonZeroI8Inner as cmp::PartialEq>::eq": true,
  "<num::niche_types::NonZeroI8Inner as cmp::PartialOrd>::partial_cmp": true,
  "<num::niche_types::NonZeroIsizeInner as clone::Clone>::clone": true,
  "<num::niche_types::NonZeroIsizeInner as cmp::Eq>::assert_receiver_is_total_eq": true,
  "<num::niche_types::NonZeroIsizeInner as cmp::Ord>::cmp": true,
  "<num::niche_types::NonZeroIsizeInner as cmp::PartialEq>::eq": true,
  "<num::niche_types::NonZeroIsizeInner as cmp::PartialOrd>::partial_cmp": true,
  "<num::niche_types::NonZeroU128Inner as clone::Clone>::clone": true,
  "<num::niche_types::NonZeroU128Inner as cmp::Eq>::assert_receiver_is_total_eq": true,
  "<num::niche_types::NonZeroU128Inner as cmp::Ord>::cmp": true,
  "<num::niche_types::NonZeroU128Inner as cmp::PartialEq>::eq": true,
  "<num::niche_types::NonZeroU128Inner as cmp::PartialOrd>::partial_cmp": true,
  "<num::niche_types::NonZeroU16Inner as clone::Clone>::clone": true,
  "<num::niche_types::NonZeroU16Inner as cmp::Eq>::assert_receiver_is_total_eq": true,
  "<num::niche_types::NonZeroU16Inner as cmp::Ord>::cmp": true,
  "<num::niche_types::NonZeroU16Inner as cmp::PartialEq>::eq": true,
  "<num::niche_types::NonZeroU16Inner as cmp::PartialOrd>::partial_cmp": true,
  "<num::niche_types::NonZeroU32Inner as clone::Clone>::clone": true,
  "<num::niche_types::NonZeroU32Inner as cmp::Eq>::assert_receiver_is_total_eq": true,
  "<num::niche_types::NonZeroU32Inner as cmp::Ord>::cmp": true,
  "<num::niche_types::NonZeroU32Inner as cmp::PartialEq>::eq": true,
  "<num::niche_types::NonZeroU32Inner as cmp::PartialOrd>::partial_cmp": true,
  "<num::niche_types::NonZeroU64Inner as clone::Clone>::clone": true,
  "<num::niche_types::NonZeroU64Inner as cmp::Eq>::assert_receiver_is_total_eq": true,
  "<num::niche_types::NonZeroU64Inner as cmp::Ord>::cmp": true,
  "<num::niche_types::NonZeroU64Inner as cmp::PartialEq>::eq": true,
  "<num::niche_types::NonZeroU64Inner as cmp::PartialOrd>::partial_cmp": true,
  "<num::niche_types::NonZeroU8Inner as clone::Clone>::clone": true,
  "<num::niche_types::NonZeroU8Inner as cmp::Eq>::assert_receiver_is_total_eq": true,
  "<num::niche_types::NonZeroU8Inner as cmp::Ord>::cmp": true,
  "<num::niche_types::NonZeroU8Inner as cmp::PartialEq>::eq": true,
  "<num::niche_types::NonZeroU8Inner as cmp::PartialOrd>::partial_cmp": true,
  "<num::niche_types::NonZeroUsizeInner as clone::Clone>::clone": true,
  "<num::niche_types::NonZeroUsizeInner as cmp::Eq>::assert_receiver_is_total_eq": true,
  "<num::niche_types::NonZeroUsizeInner as cmp::Ord>::cmp": true,
  "<num::niche_types::NonZeroUsizeInner as cmp::PartialEq>::eq": true,
  "<num::niche_types::NonZeroUsizeInner as cmp::PartialOrd>::partial_cmp": true,
  "<num::niche_types::U32NotAllOnes as clone::Clone>::clone": true,
  "<num::niche_types::U32NotAllOnes as cmp::Eq>::assert_receiver_is_total_eq": true,
  "<num::niche_types::U32NotAllOnes as cmp::Ord>::cmp": true,
  "<num::niche_types::U32NotAllOnes as cmp::PartialEq>::eq": true,
  "<num::niche_types::U32NotAllOnes as cmp::PartialOrd>::partial_cmp": true,
  "<num::niche_types::U64NotAllOnes as clone::Clone>::clone": true,
  "<num::niche_types::U64NotAllOnes as cmp::Eq>::assert_receiver_is_total_eq": true,
  "<num::niche_types::U64NotAllOnes as cmp::Ord>::cmp": true,
  "<num::niche_types::U64NotAllOnes as cmp::PartialEq>::eq": true,
  "<num::niche_types::U64NotAllOnes as cmp::PartialOrd>::partial_cmp": true,
  "<num::niche_types::UsizeNoHighBit as clone::Clone>::clone": true,
  "<num::niche_types::UsizeNoHighBit as cmp::Eq>::assert_receiver_is_total_eq": true,
  "<num::niche_types::UsizeNoHighBit as cmp::Ord>::cmp": true,
  "<num::niche_types::UsizeNoHighBit as cmp::PartialEq>::eq": true,
  "<num::niche_types::UsizeNoHighBit as cmp::PartialOrd>::partial_cmp": true,
  "<num::nonzero::NonZero<i128> as ops::arith::Neg>::neg": true,
  "<num::nonzero::NonZero<i16> as ops::arith::Neg>::neg": true,
  "<num::nonzero::NonZero<i32> as ops::arith::Neg>::neg": true,
  "<num::nonzero::NonZero<i64> as ops::arith::Neg>::neg": true,
  "<num::nonzero::NonZero<i8> as ops::arith::Neg>::neg": true,
  "<num::nonzero::NonZero<isize> as ops::arith::Neg>::neg": true,
  "<num::saturating::Saturating<i128> as ops::arith::Add<&num::saturating::Saturating<i128>>>::add": true,
  "<num::saturating::Saturating<i128> as ops::arith::Add>::add": true,
  "<num::saturating::Saturating<i128> as ops::arith::AddAssign<&i128>>::add_assign": true,
  "<num::saturating::Saturating<i128> as ops::arith::AddAssign<&num::saturating::Saturating<i128>>>::add_assign": true,
  "<num::saturating::Saturating<i128> as ops::arith::AddAssign<i128>>::add_assign": true,
  "<num::saturating::Saturating<i128> as ops::arith::AddAssign>::add_assign": true,
  "<num::saturating::Saturating<i128> as ops::arith::Div<&num::saturating::Saturating<i128>>>::div": true,
  "<num::saturating::Saturating<i128> as ops::arith::Div>::div": true,
  "<num::saturating::Saturating<i128> as ops::arith::DivAssign<&i128>>::div_assign": true,
  "<num::saturating::Saturating<i128> as ops::arith::DivAssign<&num::saturating::Saturating<i128>>>::div_assign": true,
  "<num::saturating::Saturating<i128> as ops::arith::DivAssign<i128>>::div_assign": true,
  "<num::saturating::Saturating<i128> as ops::arith::DivAssign>::div_assign": true,
  "<num::saturating::Saturating<i128> as ops::arith::Mul<&num::saturating::Saturating<i128>>>::mul": true,
  "<num::saturating::Saturating<i128> as ops::arith::Mul>::mul": true,
  "<num::saturating::Saturating<i128> as ops::arith::MulAssign<&i128>>::mul_assign": true,
  "<num::saturating::Saturating<i128> as ops::arith::MulAssign<&num::saturating::Saturating<i128>>>::mul_assign": true,
  "<num::saturating::Saturating<i128> as ops::arith::MulAssign<i128>>::mul_assign": true,
  "<num::saturating::Saturating<i128> as ops::arith::MulAssign>::mul_assign": true,
  "<num::saturating::Saturating<i128> as ops::arith::Neg>::neg": true,
  "<num::saturating::Saturating<i128> as ops::arith::Rem<&num::saturating::Saturating<i128>>>::rem": true,
  "<num::saturating::Saturating<i128> as ops::arith::Rem>::rem": true,
  "<num::saturating::Saturating<i128> as ops::arith::RemAssign<&i128>>::rem_assign": true,
  "<num::saturating::Saturating<i128> as ops::arith::RemAssign<&num::saturating::Saturating<i128>>>::rem_assign": true,
  "<num::saturating::Saturating<i128> as ops::arith::RemAssign<i128>>::rem_assign": true,
  "<num::saturating::Saturating<i128> as ops::arith::RemAssign>::rem_assign": true,
  "<num::saturating::Saturating<i128> as ops::arith::Sub<&num::saturating::Saturating<i128>>>::sub": true,
  "<num::saturating::Saturating<i128> as ops::arith::Sub>::sub": true,
  "<num::saturating::Saturating<i128> as ops::arith::SubAssign<&i128>>::sub_assign": true,
  "<num::saturating::Saturating<i128> as ops::arith::SubAssign<&num::saturating::Saturating<i128>>>::sub_assign": true,
  "<num::saturating::Saturating<i128> as ops::arith::SubAssign<i128>>::sub_assign": true,
  "<num::saturating::Saturating<i128> as ops::arith::SubAssign>::sub_assign": true,
  "<num::saturating::Saturating<i128> as ops::bit::BitAnd<&num::saturating::Saturating<i128>>>::bitand": true,
  "<num::saturating::Saturating<i128> as ops::bit::BitAnd>::bitand": true,
  "<num::saturating::Saturating<i128> as ops::bit::BitAndAssign<&i128>>::bitand_assign": true,
  "<num::saturating::Saturating<i128> as ops::bit::BitAndAssign<&num::saturating::Saturating<i128>>>::bitand_assign": true,
  "<num::saturating::Saturating<i128> as ops::bit::BitAndAssign<i128>>::bitand_assign": true,
  "<num::saturating::Saturating<i128> as ops::bit::BitAndAssign>::bitand_assign": true,
  "<num::saturating::Saturating<i128> as ops::bit::BitOr<&num::saturating::Saturating<i128>>>::bitor": true,
  "<num::saturating::Saturating<i128> as ops::bit::BitOr>::bitor": true,
  "<num::saturating::Saturating<i128> as ops::bit::BitOrAssign<&i128>>::bitor_assign": true,
  "<num::saturating::Saturating<i128> as ops::bit::BitOrAssign<&num::saturating::Saturating<i128>>>::bitor_assign": true,
  "<num::saturating::Saturating<i128> as ops::bit::BitOrAssign<i128>>::bitor_assign": true,
  "<num::saturating::Saturating<i128> as ops::bit::BitOrAssign>::bitor_assign": true,
  "<num::saturating::Saturating<i128> as ops::bit::BitXor<&num::saturating::Saturating<i128>>>::bitxor": true,
  "<num::saturating::Saturating<i128> as ops::bit::BitXor>::bitxor": true,
  "<num::saturating::Saturating<i128> as ops::bit::BitXorAssign<&i128>>::bitxor_assign": true,
  "<num::saturating::Saturating<i128> as ops::bit::BitXorAssign<&num::saturating::Saturating<i128>>>::bitxor_assign": true,
  "<num::saturating::Saturating<i128> as ops::bit::BitXorAssign<i128>>::bitxor_assign": true,
  "<num::saturating::Saturating<i128> as ops::bit::BitXorAssign>::bitxor_assign": true,
  "<num::saturating::Saturating<i128> as ops::bit::Not>::not": true,
  "<num::saturating::Saturating<i16> as ops::arith::Add<&num::saturating::Saturating<i16>>>::add": true,
  "<num::saturating::Saturating<i16> as ops::arith::Add>::add": true,
  "<num::saturating::Saturating<i16> as ops::arith::AddAssign<&i16>>::add_assign": true,
  "<num::saturating::Saturating<i16> as ops::arith::AddAssign<&num::saturating::Saturating<i16>>>::add_assign": true,
  "<num::saturating::Saturating<i16> as ops::arith::AddAssign<i16>>::add_assign": true,
  "<num::saturating::Saturating<i16> as ops::arith::AddAssign>::add_assign": true,
  "<num::saturating::Saturating<i16> as ops::arith::Div<&num::saturating::Saturating<i16>>>::div": true,
  "<num::saturating::Saturating<i16> as ops::arith::Div>::div": true,
  "<num::saturating::Saturating<i16> as ops::arith::DivAssign<&i16>>::div_assign": true,
  "<num::saturating::Saturating<i16> as ops::arith::DivAssign<&num::saturating::Saturating<i16>>>::div_assign": true,
  "<num::saturating::Saturating<i16> as ops::arith::DivAssign<i16>>::div_assign": true,
  "<num::saturating::Saturating<i16> as ops::arith::DivAssign>::div_assign": true,
  "<num::saturating::Saturating<i16> as ops::arith::Mul<&num::saturating::Saturating<i16>>>::mul": true,
  "<num::saturating::Saturating<i16> as ops::arith::Mul>::mul": true,
  "<num::saturating::Saturating<i16> as ops::arith::MulAssign<&i16>>::mul_assign": true,
  "<num::saturating::Saturating<i16> as ops::arith::MulAssign<&num::saturating::Saturating<i16>>>::mul_assign": true,
  "<num::saturating::Saturating<i16> as ops::arith::MulAssign<i16>>::mul_assign": true,
  "<num::saturating::Saturating<i16> as ops::arith::MulAssign>::mul_assign": true,
  "<num::saturating::Saturating<i16> as ops::arith::Neg>::neg": true,
  "<num::saturating::Saturating<i16> as ops::arith::Rem<&num::saturating::Saturating<i16>>>::rem": true,
  "<num::saturating::Saturating<i16> as ops::arith::Rem>::rem": true,
  "<num::saturating::Saturating<i16> as ops::arith::RemAssign<&i16>>::rem_assign": true,
  "<num::saturating::Saturating<i16> as ops::arith::RemAssign<&num::saturating::Saturating<i16>>>::rem_assign": true,
  "<num::saturating::Saturating<i16> as ops::arith::RemAssign<i16>>::rem_assign": true,
  "<num::saturating::Saturating<i16> as ops::arith::RemAssign>::rem_assign": true,
  "<num::saturating::Saturating<i16> as ops::arith::Sub<&num::saturating::Saturating<i16>>>::sub": true,
  "<num::saturating::Saturating<i16> as ops::arith::Sub>::sub": true,
  "<num::saturating::Saturating<i16> as ops::arith::SubAssign<&i16>>::sub_assign": true,
  "<num::saturating::Saturating<i16> as ops::arith::SubAssign<&num::saturating::Saturating<i16>>>::sub_assign": true,
  "<num::saturating::Saturating<i16> as ops::arith::SubAssign<i16>>::sub_assign": true,
  "<num::saturating::Saturating<i16> as ops::arith::SubAssign>::sub_assign": true,
  "<num::saturating::Saturating<i16> as ops::bit::BitAnd<&num::saturating::Saturating<i16>>>::bitand": true,
  "<num::saturating::Saturating<i16> as ops::bit::BitAnd>::bitand": true,
  "<num::saturating::Saturating<i16> as ops::bit::BitAndAssign<&i16>>::bitand_assign": true,
  "<num::saturating::Saturating<i16> as ops::bit::BitAndAssign<&num::saturating::Saturating<i16>>>::bitand_assign": true,
  "<num::saturating::Saturating<i16> as ops::bit::BitAndAssign<i16>>::bitand_assign": true,
  "<num::saturating::Saturating<i16> as ops::bit::BitAndAssign>::bitand_assign": true,
  "<num::saturating::Saturating<i16> as ops::bit::BitOr<&num::saturating::Saturating<i16>>>::bitor": true,
  "<num::saturating::Saturating<i16> as ops::bit::BitOr>::bitor": true,
  "<num::saturating::Saturating<i16> as ops::bit::BitOrAssign<&i16>>::bitor_assign": true,
  "<num::saturating::Saturating<i16> as ops::bit::BitOrAssign<&num::saturating::Saturating<i16>>>::bitor_assign": true,
  "<num::saturating::Saturating<i16> as ops::bit::BitOrAssign<i16>>::bitor_assign": true,
  "<num::saturating::Saturating<i16> as ops::bit::BitOrAssign>::bitor_assign": true,
  "<num::saturating::Saturating<i16> as ops::bit::BitXor<&num::saturating::Saturating<i16>>>::bitxor": true,
  "<num::saturating::Saturating<i16> as ops::bit::BitXor>::bitxor": true,
  "<num::saturating::Saturating<i16> as ops::bit::BitXorAssign<&i16>>::bitxor_assign": true,
  "<num::saturating::Saturating<i16> as ops::bit::BitXorAssign<&num::saturating::Saturating<i16>>>::bitxor_assign": true,
  "<num::saturating::Saturating<i16> as ops::bit::BitXorAssign<i16>>::bitxor_assign": true,
  "<num::saturating::Saturating<i16> as ops::bit::BitXorAssign>::bitxor_assign": true,
  "<num::saturating::Saturating<i16> as ops::bit::Not>::not": true,
  "<num::saturating::Saturating<i32> as ops::arith::Add<&num::saturating::Saturating<i32>>>::add": true,
  "<num::saturating::Saturating<i32> as ops::arith::Add>::add": true,
  "<num::saturating::Saturating<i32> as ops::arith::AddAssign<&i32>>::add_assign": true,
  "<num::saturating::Saturating<i32> as ops::arith::AddAssign<&num::saturating::Saturating<i32>>>::add_assign": true,
  "<num::saturating::Saturating<i32> as ops::arith::AddAssign<i32>>::add_assign": true,
  "<num::saturating::Saturating<i32> as ops::arith::AddAssign>::add_assign": true,
  "<num::saturating::Saturating<i32> as ops::arith::Div<&num::saturating::Saturating<i32>>>::div": true,
  "<num::saturating::Saturating<i32> as ops::arith::Div>::div": true,
  "<num::saturating::Saturating<i32> as ops::arith::DivAssign<&i32>>::div_assign": true,
  "<num::saturating::Saturating<i32> as ops::arith::DivAssign<&num::saturating::Saturating<i32>>>::div_assign": true,
  "<num::saturating::Saturating<i32> as ops::arith::DivAssign<i32>>::div_assign": true,
  "<num::saturating::Saturating<i32> as ops::arith::DivAssign>::div_assign": true,
  "<num::saturating::Saturating<i32> as ops::arith::Mul<&num::saturating::Saturating<i32>>>::mul": true,
  "<num::saturating::Saturating<i32> as ops::arith::Mul>::mul": true,
  "<num::saturating::Saturating<i32> as ops::arith::MulAssign<&i32>>::mul_assign": true,
  "<num::saturating::Saturating<i32> as ops::arith::MulAssign<&num::saturating::Saturating<i32>>>::mul_assign": true,
  "<num::saturating::Saturating<i32> as ops::arith::MulAssign<i32>>::mul_assign": true,
  "<num::saturating::Saturating<i32> as ops::arith::MulAssign>::mul_assign": true,
  "<num::saturating::Saturating<i32> as ops::arith::Neg>::neg": true,
  "<num::saturating::Saturating<i32> as ops::arith::Rem<&num::saturating::Saturating<i32>>>::rem": true,
  "<num::saturating::Saturating<i32> as ops::arith::Rem>::rem": true,
  "<num::saturating::Saturating<i32> as ops::arith::RemAssign<&i32>>::rem_assign": true,
  "<num::saturating::Saturating<i32> as ops::arith::RemAssign<&num::saturating::Saturating<i32>>>::rem_assign": true,
  "<num::saturating::Saturating<i32> as ops::arith::RemAssign<i32>>::rem_assign": true,
  "<num::saturating::Saturating<i32> as ops::arith::RemAssign>::rem_assign": true,
  "<num::saturating::Saturating<i32> as ops::arith::Sub<&num::saturating::Saturating<i32>>>::sub": true,
  "<num::saturating::Saturating<i32> as ops::arith::Sub>::sub": true,
  "<num::saturating::Saturating<i32> as ops::arith::SubAssign<&i32>>::sub_assign": true,
  "<num::saturating::Saturating<i32> as ops::arith::SubAssign<&num::saturating::Saturating<i32>>>::sub_assign": true,
  "<num::saturating::Saturating<i32> as ops::arith::SubAssign<i32>>::sub_assign": true,
  "<num::saturating::Saturating<i32> as ops::arith::SubAssign>::sub_assign": true,
  "<num::saturating::Saturating<i32> as ops::bit::BitAnd<&num::saturating::Saturating<i32>>>::bitand": true,
  "<num::saturating::Saturating<i32> as ops::bit::BitAnd>::bitand": true,
  "<num::saturating::Saturating<i32> as ops::bit::BitAndAssign<&i32>>::bitand_assign": true,
  "<num::saturating::Saturating<i32> as ops::bit::BitAndAssign<&num::saturating::Saturating<i32>>>::bitand_assign": true,
  "<num::saturating::Saturating<i32> as ops::bit::BitAndAssign<i32>>::bitand_assign": true,
  "<num::saturating::Saturating<i32> as ops::bit::BitAndAssign>::bitand_assign": true,
  "<num::saturating::Saturating<i32> as ops::bit::BitOr<&num::saturating::Saturating<i32>>>::bitor": true,
  "<num::saturating::Saturating<i32> as ops::bit::BitOr>::bitor": true,
  "<num::saturating::Saturating<i32> as ops::bit::BitOrAssign<&i32>>::bitor_assign": true,
  "<num::saturating::Saturating<i32> as ops::bit::BitOrAssign<&num::saturating::Saturating<i32>>>::bitor_assign": true,
  "<num::saturating::Saturating<i32> as ops::bit::BitOrAssign<i32>>::bitor_assign": true,
  "<num::saturating::Saturating<i32> as ops::bit::BitOrAssign>::bitor_assign": true,
  "<num::saturating::Saturating<i32> as ops::bit::BitXor<&num::saturating::Saturating<i32>>>::bitxor": true,
  "<num::saturating::Saturating<i32> as ops::bit::BitXor>::bitxor": true,
  "<num::saturating::Saturating<i32> as ops::bit::BitXorAssign<&i32>>::bitxor_assign": true,
  "<num::saturating::Saturating<i32> as ops::bit::BitXorAssign<&num::saturating::Saturating<i32>>>::bitxor_assign": true,
  "<num::saturating::Saturating<i32> as ops::bit::BitXorAssign<i32>>::bitxor_assign": true,
  "<num::saturating::Saturating<i32> as ops::bit::BitXorAssign>::bitxor_assign": true,
  "<num::saturating::Saturating<i32> as ops::bit::Not>::not": true,
  "<num::saturating::Saturating<i64> as ops::arith::Add<&num::saturating::Saturating<i64>>>::add": true,
  "<num::saturating::Saturating<i64> as ops::arith::Add>::add": true,
  "<num::saturating::Saturating<i64> as ops::arith::AddAssign<&i64>>::add_assign": true,
  "<num::saturating::Saturating<i64> as ops::arith::AddAssign<&num::saturating::Saturating<i64>>>::add_assign": true,
  "<num::saturating::Saturating<i64> as ops::arith::AddAssign<i64>>::add_assign": true,
  "<num::saturating::Saturating<i64> as ops::arith::AddAssign>::add_assign": true,
  "<num::saturating::Saturating<i64> as ops::arith::Div<&num::saturating::Saturating<i64>>>::div": true,
  "<num::saturating::Saturating<i64> as ops::arith::Div>::div": true,
  "<num::saturating::Saturating<i64> as ops::arith::DivAssign<&i64>>::div_assign": true,
  "<num::saturating::Saturating<i64> as ops::arith::DivAssign<&num::saturating::Saturating<i64>>>::div_assign": true,
  "<num::saturating::Saturating<i64> as ops::arith::DivAssign<i64>>::div_assign": true,
  "<num::saturating::Saturating<i64> as ops::arith::DivAssign>::div_assign": true,
  "<num::saturating::Saturating<i64> as ops::arith::Mul<&num::saturating::Saturating<i64>>>::mul": true,
  "<num::saturating::Saturating<i64> as ops::arith::Mul>::mul": true,
  "<num::saturating::Saturating<i64> as ops::arith::MulAssign<&i64>>::mul_assign": true,
  "<num::saturating::Saturating<i64> as ops::arith::MulAssign<&num::saturating::Saturating<i64>>>::mul_assign": true,
  "<num::saturating::Saturating<i64> as ops::arith::MulAssign<i64>>::mul_assign": true,
  "<num::saturating::Saturating<i64> as ops::arith::MulAssign>::mul_assign": true,
  "<num::saturating::Saturating<i64> as ops::arith::Neg>::neg": true,
  "<num::saturating::Saturating<i64> as ops::arith::Rem<&num::saturating::Saturating<i64>>>::rem": true,
  "<num::saturating::Saturating<i64> as ops::arith::Rem>::rem": true,
  "<num::saturating::Saturating<i64> as ops::arith::RemAssign<&i64>>::rem_assign": true,
  "<num::saturating::Saturating<i64> as ops::arith::RemAssign<&num::saturating::Saturating<i64>>>::rem_assign": true,
  "<num::saturating::Saturating<i64> as ops::arith::RemAssign<i64>>::rem_assign": true,
  "<num::saturating::Saturating<i64> as ops::arith::RemAssign>::rem_assign": true,
  "<num::saturating::Saturating<i64> as ops::arith::Sub<&num::saturating::Saturating<i64>>>::sub": true,
  "<num::saturating::Saturating<i64> as ops::arith::Sub>::sub": true,
  "<num::saturating::Saturating<i64> as ops::arith::SubAssign<&i64>>::sub_assign": true,
  "<num::saturating::Saturating<i64> as ops::arith::SubAssign<&num::saturating::Saturating<i64>>>::sub_assign": true,
  "<num::saturating::Saturating<i64> as ops::arith::SubAssign<i64>>::sub_assign": true,
  "<num::saturating::Saturating<i64> as ops::arith::SubAssign>::sub_assign": true,
  "<num::saturating::Saturating<i64> as ops::bit::BitAnd<&num::saturating::Saturating<i64>>>::bitand": true,
  "<num::saturating::Saturating<i64> as ops::bit::BitAnd>::bitand": true,
  "<num::saturating::Saturating<i64> as ops::bit::BitAndAssign<&i64>>::bitand_assign": true,
  "<num::saturating::Saturating<i64> as ops::bit::BitAndAssign<&num::saturating::Saturating<i64>>>::bitand_assign": true,
  "<num::saturating::Saturating<i64> as ops::bit::BitAndAssign<i64>>::bitand_assign": true,
  "<num::saturating::Saturating<i64> as ops::bit::BitAndAssign>::bitand_assign": true,
  "<num::saturating::Saturating<i64> as ops::bit::BitOr<&num::saturating::Saturating<i64>>>::bitor": true,
  "<num::saturating::Saturating<i64> as ops::bit::BitOr>::bitor": true,
  "<num::saturating::Saturating<i64> as ops::bit::BitOrAssign<&i64>>::bitor_assign": true,
  "<num::saturating::Saturating<i64> as ops::bit::BitOrAssign<&num::saturating::Saturating<i64>>>::bitor_assign": true,
  "<num::saturating::Saturating<i64> as ops::bit::BitOrAssign<i64>>::bitor_assign": true,
  "<num::saturating::Saturating<i64> as ops::bit::BitOrAssign>::bitor_assign": true,
  "<num::saturating::Saturating<i64> as ops::bit::BitXor<&num::saturating::Saturating<i64>>>::bitxor": true,
  "<num::saturating::Saturating<i64> as ops::bit::BitXor>::bitxor": true,
  "<num::saturating::Saturating<i64> as ops::bit::BitXorAssign<&i64>>::bitxor_assign": true,
  "<num::saturating::Saturating<i64> as ops::bit::BitXorAssign<&num::saturating::Saturating<i64>>>::bitxor_assign": true,
  "<num::saturating::Saturating<i64> as ops::bit::BitXorAssign<i64>>::bitxor_assign": true,
  "<num::saturating::Saturating<i64> as ops::bit::BitXorAssign>::bitxor_assign": true,
  "<num::saturating::Saturating<i64> as ops::bit::Not>::not": true,
  "<num::saturating::Saturating<i8> as ops::arith::Add<&num::saturating::Saturating<i8>>>::add": true,
  "<num::saturating::Saturating<i8> as ops::arith::Add>::add": true,
  "<num::saturating::Saturating<i8> as ops::arith::AddAssign<&i8>>::add_assign": true,
  "<num::saturating::Saturating<i8> as ops::arith::AddAssign<&num::saturating::Saturating<i8>>>::add_assign": true,
  "<num::saturating::Saturating<i8> as ops::arith::AddAssign<i8>>::add_assign": true,
  "<num::saturating::Saturating<i8> as ops::arith::AddAssign>::add_assign": true,
  "<num::saturating::Saturating<i8> as ops::arith::Div<&num::saturating::Saturating<i8>>>::div": true,
  "<num::saturating::Saturating<i8> as ops::arith::Div>::div": true,
  "<num::saturating::Saturating<i8> as ops::arith::DivAssign<&i8>>::div_assign": true,
  "<num::saturating::Saturating<i8> as ops::arith::DivAssign<&num::saturating::Saturating<i8>>>::div_assign": true,
  "<num::saturating::Saturating<i8> as ops::arith::DivAssign<i8>>::div_assign": true,
  "<num::saturating::Saturating<i8> as ops::arith::DivAssign>::div_assign": true,
  "<num::saturating::Saturating<i8> as ops::arith::Mul<&num::saturating::Saturating<i8>>>::mul": true,
  "<num::saturating::Saturating<i8> as ops::arith::Mul>::mul": true,
  "<num::saturating::Saturating<i8> as ops::arith::MulAssign<&i8>>::mul_assign": true,
  "<num::saturating::Saturating<i8> as ops::arith::MulAssign<&num::saturating::Saturating<i8>>>::mul_assign": true,
  "<num::saturating::Saturating<i8> as ops::arith::MulAssign<i8>>::mul_assign": true,
  "<num::saturating::Saturating<i8> as ops::arith::MulAssign>::mul_assign": true,
  "<num::saturating::Saturating<i8> as ops::arith::Neg>::neg": true,
  "<num::saturating::Saturating<i8> as ops::arith::Rem<&num::saturating::Saturating<i8>>>::rem": true,
  "<num::saturating::Saturating<i8> as ops::arith::Rem>::rem": true,
  "<num::saturating::Saturating<i8> as ops::arith::RemAssign<&i8>>::rem_assign": true,
  "<num::saturating::Saturating<i8> as ops::arith::RemAssign<&num::saturating::Saturating<i8>>>::rem_assign": true,
  "<num::saturating::Saturating<i8> as ops::arith::RemAssign<i8>>::rem_assign": true,
  "<num::saturating::Saturating<i8> as ops::arith::RemAssign>::rem_assign": true,
  "<num::saturating::Saturating<i8> as ops::arith::Sub<&num::saturating::Saturating<i8>>>::sub": true,
  "<num::saturating::Saturating<i8> as ops::arith::Sub>::sub": true,
  "<num::saturating::Saturating<i8> as ops::arith::SubAssign<&i8>>::sub_assign": true,
  "<num::saturating::Saturating<i8> as ops::arith::SubAssign<&num::saturating::Saturating<i8>>>::sub_assign": true,
  "<num::saturating::Saturating<i8> as ops::arith::SubAssign<i8>>::sub_assign": true,
  "<num::saturating::Saturating<i8> as ops::arith::SubAssign>::sub_assign": true,
  "<num::saturating::Saturating<i8> as ops::bit::BitAnd<&num::saturating::Saturating<i8>>>::bitand": true,
  "<num::saturating::Saturating<i8> as ops::bit::BitAnd>::bitand": true,
  "<num::saturating::Saturating<i8> as ops::bit::BitAndAssign<&i8>>::bitand_assign": true,
  "<num::saturating::Saturating<i8> as ops::bit::BitAndAssign<&num::saturating::Saturating<i8>>>::bitand_assign": true,
  "<num::saturating::Saturating<i8> as ops::bit::BitAndAssign<i8>>::bitand_assign": true,
  "<num::saturating::Saturating<i8> as ops::bit::BitAndAssign>::bitand_assign": true,
  "<num::saturating::Saturating<i8> as ops::bit::BitOr<&num::saturating::Saturating<i8>>>::bitor": true,
  "<num::saturating::Saturating<i8> as ops::bit::BitOr>::bitor": true,
  "<num::saturating::Saturating<i8> as ops::bit::BitOrAssign<&i8>>::bitor_assign": true,
  "<num::saturating::Saturating<i8> as ops::bit::BitOrAssign<&num::saturating::Saturating<i8>>>::bitor_assign": true,
  "<num::saturating::Saturating<i8> as ops::bit::BitOrAssign<i8>>::bitor_assign": true,
  "<num::saturating::Saturating<i8> as ops::bit::BitOrAssign>::bitor_assign": true,
  "<num::saturating::Saturating<i8> as ops::bit::BitXor<&num::saturating::Saturating<i8>>>::bitxor": true,
  "<num::saturating::Saturating<i8> as ops::bit::BitXor>::bitxor": true,
  "<num::saturating::Saturating<i8> as ops::bit::BitXorAssign<&i8>>::bitxor_assign": true,
  "<num::saturating::Saturating<i8> as ops::bit::BitXorAssign<&num::saturating::Saturating<i8>>>::bitxor_assign": true,
  "<num::saturating::Saturating<i8> as ops::bit::BitXorAssign<i8>>::bitxor_assign": true,
  "<num::saturating::Saturating<i8> as ops::bit::BitXorAssign>::bitxor_assign": true,
  "<num::saturating::Saturating<i8> as ops::bit::Not>::not": true,
  "<num::saturating::Saturating<isize> as ops::arith::Add<&num::saturating::Saturating<isize>>>::add": true,
  "<num::saturating::Saturating<isize> as ops::arith::Add>::add": true,
  "<num::saturating::Saturating<isize> as ops::arith::AddAssign<&isize>>::add_assign": true,
  "<num::saturating::Saturating<isize> as ops::arith::AddAssign<&num::saturating::Saturating<isize>>>::add_assign": true,
  "<num::saturating::Saturating<isize> as ops::arith::AddAssign<isize>>::add_assign": true,
  "<num::saturating::Saturating<isize> as ops::arith::AddAssign>::add_assign": true,
  "<num::saturating::Saturating<isize> as ops::arith::Div<&num::saturating::Saturating<isize>>>::div": true,
  "<num::saturating::Saturating<isize> as ops::arith::Div>::div": true,
  "<num::saturating::Saturating<isize> as ops::arith::DivAssign<&isize>>::div_assign": true,
  "<num::saturating::Saturating<isize> as ops::arith::DivAssign<&num::saturating::Saturating<isize>>>::div_assign": true,
  "<num::saturating::Saturating<isize> as ops::arith::DivAssign<isize>>::div_assign": true,
  "<num::saturating::Saturating<isize> as ops::arith::DivAssign>::div_assign": true,
  "<num::saturating::Saturating<isize> as ops::arith::Mul<&num::saturating::Saturating<isize>>>::mul": true,
  "<num::saturating::Saturating<isize> as ops::arith::Mul>::mul": true,
  "<num::saturating::Saturating<isize> as ops::arith::MulAssign<&isize>>::mul_assign": true,
  "<num::saturating::Saturating<isize> as ops::arith::MulAssign<&num::saturating::Saturating<isize>>>::mul_assign": true,
  "<num::saturating::Saturating<isize> as ops::arith::MulAssign<isize>>::mul_assign": true,
  "<num::saturating::Saturating<isize> as ops::arith::MulAssign>::mul_assign": true,
  "<num::saturating::Saturating<isize> as ops::arith::Neg>::neg": true,
  "<num::saturating::Saturating<isize> as ops::arith::Rem<&num::saturating::Saturating<isize>>>::rem": true,
  "<num::saturating::Saturating<isize> as ops::arith::Rem>::rem": true,
  "<num::saturating::Saturating<isize> as ops::arith::RemAssign<&isize>>::rem_assign": true,
  "<num::saturating::Saturating<isize> as ops::arith::RemAssign<&num::saturating::Saturating<isize>>>::rem_assign": true,
  "<num::saturating::Saturating<isize> as ops::arith::RemAssign<isize>>::rem_assign": true,
  "<num::saturating::Saturating<isize> as ops::arith::RemAssign>::rem_assign": true,
  "<num::saturating::Saturating<isize> as ops::arith::Sub<&num::saturating::Saturating<isize>>>::sub": true,
  "<num::saturating::Saturating<isize> as ops::arith::Sub>::sub": true,
  "<num::saturating::Saturating<isize> as ops::arith::SubAssign<&isize>>::sub_assign": true,
  "<num::saturating::Saturating<isize> as ops::arith::SubAssign<&num::saturating::Saturating<isize>>>::sub_assign": true,
  "<num::saturating::Saturating<isize> as ops::arith::SubAssign<isize>>::sub_assign": true,
  "<num::saturating::Saturating<isize> as ops::arith::SubAssign>::sub_assign": true,
  "<num::saturating::Saturating<isize> as ops::bit::BitAnd<&num::saturating::Saturating<isize>>>::bitand": true,
  "<num::saturating::Saturating<isize> as ops::bit::BitAnd>::bitand": true,
  "<num::saturating::Saturating<isize> as ops::bit::BitAndAssign<&isize>>::bitand_assign": true,
  "<num::saturating::Saturating<isize> as ops::bit::BitAndAssign<&num::saturating::Saturating<isize>>>::bitand_assign": true,
  "<num::saturating::Saturating<isize> as ops::bit::BitAndAssign<isize>>::bitand_assign": true,
  "<num::saturating::Saturating<isize> as ops::bit::BitAndAssign>::bitand_assign": true,
  "<num::saturating::Saturating<isize> as ops::bit::BitOr<&num::saturating::Saturating<isize>>>::bitor": true,
  "<num::saturating::Saturating<isize> as ops::bit::BitOr>::bitor": true,
  "<num::saturating::Saturating<isize> as ops::bit::BitOrAssign<&isize>>::bitor_assign": true,
  "<num::saturating::Saturating<isize> as ops::bit::BitOrAssign<&num::saturating::Saturating<isize>>>::bitor_assign": true,
  "<num::saturating::Saturating<isize> as ops::bit::BitOrAssign<isize>>::bitor_assign": true,
  "<num::saturating::Saturating<isize> as ops::bit::BitOrAssign>::bitor_assign": true,
  "<num::saturating::Saturating<isize> as ops::bit::BitXor<&num::saturating::Saturating<isize>>>::bitxor": true,
  "<num::saturating::Saturating<isize> as ops::bit::BitXor>::bitxor": true,
  "<num::saturating::Saturating<isize> as ops::bit::BitXorAssign<&isize>>::bitxor_assign": true,
  "<num::saturating::Saturating<isize> as ops::bit::BitXorAssign<&num::saturating::Saturating<isize>>>::bitxor_assign": true,
  "<num::saturating::Saturating<isize> as ops::bit::BitXorAssign<isize>>::bitxor_assign": true,
  "<num::saturating::Saturating<isize> as ops::bit::BitXorAssign>::bitxor_assign": true,
  "<num::saturating::Saturating<isize> as ops::bit::Not>::not": true,
  "<num::saturating::Saturating<u128> as ops::arith::Add<&num::saturating::Saturating<u128>>>::add": true,
  "<num::saturating::Saturating<u128> as ops::arith::Add>::add": true,
  "<num::saturating::Saturating<u128> as ops::arith::AddAssign<&num::saturating::Saturating<u128>>>::add_assign": true,
  "<num::saturating::Saturating<u128> as ops::arith::AddAssign<&u128>>::add_assign": true,
  "<num::saturating::Saturating<u128> as ops::arith::AddAssign<u128>>::add_assign": true,
  "<num::saturating::Saturating<u128> as ops::arith::AddAssign>::add_assign": true,
  "<num::saturating::Saturating<u128> as ops::arith::Div<&num::saturating::Saturating<u128>>>::div": true,
  "<num::saturating::Saturating<u128> as ops::arith::Div>::div": true,
  "<num::saturating::Saturating<u128> as ops::arith::DivAssign<&num::saturating::Saturating<u128>>>::div_assign": true,
  "<num::saturating::Saturating<u128> as ops::arith::DivAssign<&u128>>::div_assign": true,
  "<num::saturating::Saturating<u128> as ops::arith::DivAssign<u128>>::div_assign": true,
  "<num::saturating::Saturating<u128> as ops::arith::DivAssign>::div_assign": true,
  "<num::saturating::Saturating<u128> as ops::arith::Mul<&num::saturating::Saturating<u128>>>::mul": true,
  "<num::saturating::Saturating<u128> as ops::arith::Mul>::mul": true,
  "<num::saturating::Saturating<u128> as ops::arith::MulAssign<&num::saturating::Saturating<u128>>>::mul_assign": true,
  "<num::saturating::Saturating<u128> as ops::arith::MulAssign<&u128>>::mul_assign": true,
  "<num::saturating::Saturating<u128> as ops::arith::MulAssign<u128>>::mul_assign": true,
  "<num::saturating::Saturating<u128> as ops::arith::MulAssign>::mul_assign": true,
  "<num::saturating::Saturating<u128> as ops::arith::Rem<&num::saturating::Saturating<u128>>>::rem": true,
  "<num::saturating::Saturating<u128> as ops::arith::Rem>::rem": true,
  "<num::saturating::Saturating<u128> as ops::arith::RemAssign<&num::saturating::Saturating<u128>>>::rem_assign": true,
  "<num::saturating::Saturating<u128> as ops::arith::RemAssign<&u128>>::rem_assign": true,
  "<num::saturating::Saturating<u128> as ops::arith::RemAssign<u128>>::rem_assign": true,
  "<num::saturating::Saturating<u128> as ops::arith::RemAssign>::rem_assign": true,
  "<num::saturating::Saturating<u128> as ops::arith::Sub<&num::saturating::Saturating<u128>>>::sub": true,
  "<num::saturating::Saturating<u128> as ops::arith::Sub>::sub": true,
  "<num::saturating::Saturating<u128> as ops::arith::SubAssign<&num::saturating::Saturating<u128>>>::sub_assign": true,
  "<num::saturating::Saturating<u128> as ops::arith::SubAssign<&u128>>::sub_assign": true,
  "<num::saturating::Saturating<u128> as ops::arith::SubAssign<u128>>::sub_assign": true,
  "<num::saturating::Saturating<u128> as ops::arith::SubAssign>::sub_assign": true,
  "<num::saturating::Saturating<u128> as ops::bit::BitAnd<&num::saturating::Saturating<u128>>>::bitand": true,
  "<num::saturating::Saturating<u128> as ops::bit::BitAnd>::bitand": true,
  "<num::saturating::Saturating<u128> as ops::bit::BitAndAssign<&num::saturating::Saturating<u128>>>::bitand_assign": true,
  "<num::saturating::Saturating<u128> as ops::bit::BitAndAssign<&u128>>::bitand_assign": true,
  "<num::saturating::Saturating<u128> as ops::bit::BitAndAssign<u128>>::bitand_assign": true,
  "<num::saturating::Saturating<u128> as ops::bit::BitAndAssign>::bitand_assign": true,
  "<num::saturating::Saturating<u128> as ops::bit::BitOr<&num::saturating::Saturating<u128>>>::bitor": true,
  "<num::saturating::Saturating<u128> as ops::bit::BitOr>::bitor": true,
  "<num::saturating::Saturating<u128> as ops::bit::BitOrAssign<&num::saturating::Saturating<u128>>>::bitor_assign": true,
  "<num::saturating::Saturating<u128> as ops::bit::BitOrAssign<&u128>>::bitor_assign": true,
  "<num::saturating::Saturating<u128> as ops::bit::BitOrAssign<u128>>::bitor_assign": true,
  "<num::saturating::Saturating<u128> as ops::bit::BitOrAssign>::bitor_assign": true,
  "<num::saturating::Saturating<u128> as ops::bit::BitXor<&num::saturating::Saturating<u128>>>::bitxor": true,
  "<num::saturating::Saturating<u128> as ops::bit::BitXor>::bitxor": true,
  "<num::saturating::Saturating<u128> as ops::bit::BitXorAssign<&num::saturating::Saturating<u128>>>::bitxor_assign": true,
  "<num::saturating::Saturating<u128> as ops::bit::BitXorAssign<&u128>>::bitxor_assign": true,
  "<num::saturating::Saturating<u128> as ops::bit::BitXorAssign<u128>>::bitxor_assign": true,
  "<num::saturating::Saturating<u128> as ops::bit::BitXorAssign>::bitxor_assign": true,
  "<num::saturating::Saturating<u128> as ops::bit::Not>::not": true,
  "<num::saturating::Saturating<u16> as ops::arith::Add<&num::saturating::Saturating<u16>>>::add": true,
  "<num::saturating::Saturating<u16> as ops::arith::Add>::add": true,
  "<num::saturating::Saturating<u16> as ops::arith::AddAssign<&num::saturating::Saturating<u16>>>::add_assign": true,
  "<num::saturating::Saturating<u16> as ops::arith::AddAssign<&u16>>::add_assign": true,
  "<num::saturating::Saturating<u16> as ops::arith::AddAssign<u16>>::add_assign": true,
  "<num::saturating::Saturating<u16> as ops::arith::AddAssign>::add_assign": true,
  "<num::saturating::Saturating<u16> as ops::arith::Div<&num::saturating::Saturating<u16>>>::div": true,
  "<num::saturating::Saturating<u16> as ops::arith::Div>::div": true,
  "<num::saturating::Saturating<u16> as ops::arith::DivAssign<&num::saturating::Saturating<u16>>>::div_assign": true,
  "<num::saturating::Saturating<u16> as ops::arith::DivAssign<&u16>>::div_assign": true,
  "<num::saturating::Saturating<u16> as ops::arith::DivAssign<u16>>::div_assign": true,
  "<num::saturating::Saturating<u16> as ops::arith::DivAssign>::div_assign": true,
  "<num::saturating::Saturating<u16> as ops::arith::Mul<&num::saturating::Saturating<u16>>>::mul": true,
  "<num::saturating::Saturating<u16> as ops::arith::Mul>::mul": true,
  "<num::saturating::Saturating<u16> as ops::arith::MulAssign<&num::saturating::Saturating<u16>>>::mul_assign": true,
  "<num::saturating::Saturating<u16> as ops::arith::MulAssign<&u16>>::mul_assign": true,
  "<num::saturating::Saturating<u16> as ops::arith::MulAssign<u16>>::mul_assign": true,
  "<num::saturating::Saturating<u16> as ops::arith::MulAssign>::mul_assign": true,
  "<num::saturating::Saturating<u16> as ops::arith::Rem<&num::saturating::Saturating<u16>>>::rem": true,
  "<num::saturating::Saturating<u16> as ops::arith::Rem>::rem": true,
  "<num::saturating::Saturating<u16> as ops::arith::RemAssign<&num::saturating::Saturating<u16>>>::rem_assign": true,
  "<num::saturating::Saturating<u16> as ops::arith::RemAssign<&u16>>::rem_assign": true,
  "<num::saturating::Saturating<u16> as ops::arith::RemAssign<u16>>::rem_assign": true,
  "<num::saturating::Saturating<u16> as ops::arith::RemAssign>::rem_assign": true,
  "<num::saturating::Saturating<u16> as ops::arith::Sub<&num::saturating::Saturating<u16>>>::sub": true,
  "<num::saturating::Saturating<u16> as ops::arith::Sub>::sub": true,
  "<num::saturating::Saturating<u16> as ops::arith::SubAssign<&num::saturating::Saturating<u16>>>::sub_assign": true,
  "<num::saturating::Saturating<u16> as ops::arith::SubAssign<&u16>>::sub_assign": true,
  "<num::saturating::Saturating<u16> as ops::arith::SubAssign<u16>>::sub_assign": true,
  "<num::saturating::Saturating<u16> as ops::arith::SubAssign>::sub_assign": true,
  "<num::saturating::Saturating<u16> as ops::bit::BitAnd<&num::saturating::Saturating<u16>>>::bitand": true,
  "<num::saturating::Saturating<u16> as ops::bit::BitAnd>::bitand": true,
  "<num::saturating::Saturating<u16> as ops::bit::BitAndAssign<&num::saturating::Saturating<u16>>>::bitand_assign": true,
  "<num::saturating::Saturating<u16> as ops::bit::BitAndAssign<&u16>>::bitand_assign": true,
  "<num::saturating::Saturating<u16> as ops::bit::BitAndAssign<u16>>::bitand_assign": true,
  "<num::saturating::Saturating<u16> as ops::bit::BitAndAssign>::bitand_assign": true,
  "<num::saturating::Saturating<u16> as ops::bit::BitOr<&num::saturating::Saturating<u16>>>::bitor": true,
  "<num::saturating::Saturating<u16> as ops::bit::BitOr>::bitor": true,
  "<num::saturating::Saturating<u16> as ops::bit::BitOrAssign<&num::saturating::Saturating<u16>>>::bitor_assign": true,
  "<num::saturating::Saturating<u16> as ops::bit::BitOrAssign<&u16>>::bitor_assign": true,
  "<num::saturating::Saturating<u16> as ops::bit::BitOrAssign<u16>>::bitor_assign": true,
  "<num::saturating::Saturating<u16> as ops::bit::BitOrAssign>::bitor_assign": true,
  "<num::saturating::Saturating<u16> as ops::bit::BitXor<&num::saturating::Saturating<u16>>>::bitxor": true,
  "<num::saturating::Saturating<u16> as ops::bit::BitXor>::bitxor": true,
  "<num::saturating::Saturating<u16> as ops::bit::BitXorAssign<&num::saturating::Saturating<u16>>>::bitxor_assign": true,
  "<num::saturating::Saturating<u16> as ops::bit::BitXorAssign<&u16>>::bitxor_assign": true,
  "<num::saturating::Saturating<u16> as ops::bit::BitXorAssign<u16>>::bitxor_assign": true,
  "<num::saturating::Saturating<u16> as ops::bit::BitXorAssign>::bitxor_assign": true,
  "<num::saturating::Saturating<u16> as ops::bit::Not>::not": true,
  "<num::saturating::Saturating<u32> as ops::arith::Add<&num::saturating::Saturating<u32>>>::add": true,
  "<num::saturating::Saturating<u32> as ops::arith::Add>::add": true,
  "<num::saturating::Saturating<u32> as ops::arith::AddAssign<&num::saturating::Saturating<u32>>>::add_assign": true,
  "<num::saturating::Saturating<u32> as ops::arith::AddAssign<&u32>>::add_assign": true,
  "<num::saturating::Saturating<u32> as ops::arith::AddAssign<u32>>::add_assign": true,
  "<num::saturating::Saturating<u32> as ops::arith::AddAssign>::add_assign": true,
  "<num::saturating::Saturating<u32> as ops::arith::Div<&num::saturating::Saturating<u32>>>::div": true,
  "<num::saturating::Saturating<u32> as ops::arith::Div>::div": true,
  "<num::saturating::Saturating<u32> as ops::arith::DivAssign<&num::saturating::Saturating<u32>>>::div_assign": true,
  "<num::saturating::Saturating<u32> as ops::arith::DivAssign<&u32>>::div_assign": true,
  "<num::saturating::Saturating<u32> as ops::arith::DivAssign<u32>>::div_assign": true,
  "<num::saturating::Saturating<u32> as ops::arith::DivAssign>::div_assign": true,
  "<num::saturating::Saturating<u32> as ops::arith::Mul<&num::saturating::Saturating<u32>>>::mul": true,
  "<num::saturating::Saturating<u32> as ops::arith::Mul>::mul": true,
  "<num::saturating::Saturating<u32> as ops::arith::MulAssign<&num::saturating::Saturating<u32>>>::mul_assign": true,
  "<num::saturating::Saturating<u32> as ops::arith::MulAssign<&u32>>::mul_assign": true,
  "<num::saturating::Saturating<u32> as ops::arith::MulAssign<u32>>::mul_assign": true,
  "<num::saturating::Saturating<u32> as ops::arith::MulAssign>::mul_assign": true,
  "<num::saturating::Saturating<u32> as ops::arith::Rem<&num::saturating::Saturating<u32>>>::rem": true,
  "<num::saturating::Saturating<u32> as ops::arith::Rem>::rem": true,
  "<num::saturating::Saturating<u32> as ops::arith::RemAssign<&num::saturating::Saturating<u32>>>::rem_assign": true,
  "<num::saturating::Saturating<u32> as ops::arith::RemAssign<&u32>>::rem_assign": true,
  "<num::saturating::Saturating<u32> as ops::arith::RemAssign<u32>>::rem_assign": true,
  "<num::saturating::Saturating<u32> as ops::arith::RemAssign>::rem_assign": true,
  "<num::saturating::Saturating<u32> as ops::arith::Sub<&num::saturating::Saturating<u32>>>::sub": true,
  "<num::saturating::Saturating<u32> as ops::arith::Sub>::sub": true,
  "<num::saturating::Saturating<u32> as ops::arith::SubAssign<&num::saturating::Saturating<u32>>>::sub_assign": true,
  "<num::saturating::Saturating<u32> as ops::arith::SubAssign<&u32>>::sub_assign": true,
  "<num::saturating::Saturating<u32> as ops::arith::SubAssign<u32>>::sub_assign": true,
  "<num::saturating::Saturating<u32> as ops::arith::SubAssign>::sub_assign": true,
  "<num::saturating::Saturating<u32> as ops::bit::BitAnd<&num::saturating::Saturating<u32>>>::bitand": true,
  "<num::saturating::Saturating<u32> as ops::bit::BitAnd>::bitand": true,
  "<num::saturating::Saturating<u32> as ops::bit::BitAndAssign<&num::saturating::Saturating<u32>>>::bitand_assign": true,
  "<num::saturating::Saturating<u32> as ops::bit::BitAndAssign<&u32>>::bitand_assign": true,
  "<num::saturating::Saturating<u32> as ops::bit::BitAndAssign<u32>>::bitand_assign": true,
  "<num::saturating::Saturating<u32> as ops::bit::BitAndAssign>::bitand_assign": true,
  "<num::saturating::Saturating<u32> as ops::bit::BitOr<&num::saturating::Saturating<u32>>>::bitor": true,
  "<num::saturating::Saturating<u32> as ops::bit::BitOr>::bitor": true,
  "<num::saturating::Saturating<u32> as ops::bit::BitOrAssign<&num::saturating::Saturating<u32>>>::bitor_assign": true,
  "<num::saturating::Saturating<u32> as ops::bit::BitOrAssign<&u32>>::bitor_assign": true,
  "<num::saturating::Saturating<u32> as ops::bit::BitOrAssign<u32>>::bitor_assign": true,
  "<num::saturating::Saturating<u32> as ops::bit::BitOrAssign>::bitor_assign": true,
  "<num::saturating::Saturating<u32> as ops::bit::BitXor<&num::saturating::Saturating<u32>>>::bitxor": true,
  "<num::saturating::Saturating<u32> as ops::bit::BitXor>::bitxor": true,
  "<num::saturating::Saturating<u32> as ops::bit::BitXorAssign<&num::saturating::Saturating<u32>>>::bitxor_assign": true,
  "<num::saturating::Saturating<u32> as ops::bit::BitXorAssign<&u32>>::bitxor_assign": true,
  "<num::saturating::Saturating<u32> as ops::bit::BitXorAssign<u32>>::bitxor_assign": true,
  "<num::saturating::Saturating<u32> as ops::bit::BitXorAssign>::bitxor_assign": true,
  "<num::saturating::Saturating<u32> as ops::bit::Not>::not": true,
  "<num::saturating::Saturating<u64> as ops::arith::Add<&num::saturating::Saturating<u64>>>::add": true,
  "<num::saturating::Saturating<u64> as ops::arith::Add>::add": true,
  "<num::saturating::Saturating<u64> as ops::arith::AddAssign<&num::saturating::Saturating<u64>>>::add_assign": true,
  "<num::saturating::Saturating<u64> as ops::arith::AddAssign<&u64>>::add_assign": true,
  "<num::saturating::Saturating<u64> as ops::arith::AddAssign<u64>>::add_assign": true,
  "<num::saturating::Saturating<u64> as ops::arith::AddAssign>::add_assign": true,
  "<num::saturating::Saturating<u64> as ops::arith::Div<&num::saturating::Saturating<u64>>>::div": true,
  "<num::saturating::Saturating<u64> as ops::arith::Div>::div": true,
  "<num::saturating::Saturating<u64> as ops::arith::DivAssign<&num::saturating::Saturating<u64>>>::div_assign": true,
  "<num::saturating::Saturating<u64> as ops::arith::DivAssign<&u64>>::div_assign": true,
  "<num::saturating::Saturating<u64> as ops::arith::DivAssign<u64>>::div_assign": true,
  "<num::saturating::Saturating<u64> as ops::arith::DivAssign>::div_assign": true,
  "<num::saturating::Saturating<u64> as ops::arith::Mul<&num::saturating::Saturating<u64>>>::mul": true,
  "<num::saturating::Saturating<u64> as ops::arith::Mul>::mul": true,
  "<num::saturating::Saturating<u64> as ops::arith::MulAssign<&num::saturating::Saturating<u64>>>::mul_assign": true,
  "<num::saturating::Saturating<u64> as ops::arith::MulAssign<&u64>>::mul_assign": true,
  "<num::saturating::Saturating<u64> as ops::arith::MulAssign<u64>>::mul_assign": true,
  "<num::saturating::Saturating<u64> as ops::arith::MulAssign>::mul_assign": true,
  "<num::saturating::Saturating<u64> as ops::arith::Rem<&num::saturating::Saturating<u64>>>::rem": true,
  "<num::saturating::Saturating<u64> as ops::arith::Rem>::rem": true,
  "<num::saturating::Saturating<u64> as ops::arith::RemAssign<&num::saturating::Saturating<u64>>>::rem_assign": true,
  "<num::saturating::Saturating<u64> as ops::arith::RemAssign<&u64>>::rem_assign": true,
  "<num::saturating::Saturating<u64> as ops::arith::RemAssign<u64>>::rem_assign": true,
  "<num::saturating::Saturating<u64> as ops::arith::RemAssign>::rem_assign": true,
  "<num::saturating::Saturating<u64> as ops::arith::Sub<&num::saturating::Saturating<u64>>>::sub": true,
  "<num::saturating::Saturating<u64> as ops::arith::Sub>::sub": true,
  "<num::saturating::Saturating<u64> as ops::arith::SubAssign<&num::saturating::Saturating<u64>>>::sub_assign": true,
  "<num::saturating::Saturating<u64> as ops::arith::SubAssign<&u64>>::sub_assign": true,
  "<num::saturating::Saturating<u64> as ops::arith::SubAssign<u64>>::sub_assign": true,
  "<num::saturating::Saturating<u64> as ops::arith::SubAssign>::sub_assign": true,
  "<num::saturating::Saturating<u64> as ops::bit::BitAnd<&num::saturating::Saturating<u64>>>::bitand": true,
  "<num::saturating::Saturating<u64> as ops::bit::BitAnd>::bitand": true,
  "<num::saturating::Saturating<u64> as ops::bit::BitAndAssign<&num::saturating::Saturating<u64>>>::bitand_assign": true,
  "<num::saturating::Saturating<u64> as ops::bit::BitAndAssign<&u64>>::bitand_assign": true,
  "<num::saturating::Saturating<u64> as ops::bit::BitAndAssign<u64>>::bitand_assign": true,
  "<num::saturating::Saturating<u64> as ops::bit::BitAndAssign>::bitand_assign": true,
  "<num::saturating::Saturating<u64> as ops::bit::BitOr<&num::saturating::Saturating<u64>>>::bitor": true,
  "<num::saturating::Saturating<u64> as ops::bit::BitOr>::bitor": true,
  "<num::saturating::Saturating<u64> as ops::bit::BitOrAssign<&num::saturating::Saturating<u64>>>::bitor_assign": true,
  "<num::saturating::Saturating<u64> as ops::bit::BitOrAssign<&u64>>::bitor_assign": true,
  "<num::saturating::Saturating<u64> as ops::bit::BitOrAssign<u64>>::bitor_assign": true,
  "<num::saturating::Saturating<u64> as ops::bit::BitOrAssign>::bitor_assign": true,
  "<num::saturating::Saturating<u64> as ops::bit::BitXor<&num::saturating::Saturating<u64>>>::bitxor": true,
  "<num::saturating::Saturating<u64> as ops::bit::BitXor>::bitxor": true,
  "<num::saturating::Saturating<u64> as ops::bit::BitXorAssign<&num::saturating::Saturating<u64>>>::bitxor_assign": true,
  "<num::saturating::Saturating<u64> as ops::bit::BitXorAssign<&u64>>::bitxor_assign": true,
  "<num::saturating::Saturating<u64> as ops::bit::BitXorAssign<u64>>::bitxor_assign": true,
  "<num::saturating::Saturating<u64> as ops::bit::BitXorAssign>::bitxor_assign": true,
  "<num::saturating::Saturating<u64> as ops::bit::Not>::not": true,
  "<num::saturating::Saturating<u8> as ops::arith::Add<&num::saturating::Saturating<u8>>>::add": true,
  "<num::saturating::Saturating<u8> as ops::arith::Add>::add": true,
  "<num::saturating::Saturating<u8> as ops::arith::AddAssign<&num::saturating::Saturating<u8>>>::add_assign": true,
  "<num::saturating::Saturating<u8> as ops::arith::AddAssign<&u8>>::add_assign": true,
  "<num::saturating::Saturating<u8> as ops::arith::AddAssign<u8>>::add_assign": true,
  "<num::saturating::Saturating<u8> as ops::arith::AddAssign>::add_assign": true,
  "<num::saturating::Saturating<u8> as ops::arith::Div<&num::saturating::Saturating<u8>>>::div": true,
  "<num::saturating::Saturating<u8> as ops::arith::Div>::div": true,
  "<num::saturating::Saturating<u8> as ops::arith::DivAssign<&num::saturating::Saturating<u8>>>::div_assign": true,
  "<num::saturating::Saturating<u8> as ops::arith::DivAssign<&u8>>::div_assign": true,
  "<num::saturating::Saturating<u8> as ops::arith::DivAssign<u8>>::div_assign": true,
  "<num::saturating::Saturating<u8> as ops::arith::DivAssign>::div_assign": true,
  "<num::saturating::Saturating<u8> as ops::arith::Mul<&num::saturating::Saturating<u8>>>::mul": true,
  "<num::saturating::Saturating<u8> as ops::arith::Mul>::mul": true,
  "<num::saturating::Saturating<u8> as ops::arith::MulAssign<&num::saturating::Saturating<u8>>>::mul_assign": true,
  "<num::saturating::Saturating<u8> as ops::arith::MulAssign<&u8>>::mul_assign": true,
  "<num::saturating::Saturating<u8> as ops::arith::MulAssign<u8>>::mul_assign": true,
  "<num::saturating::Saturating<u8> as ops::arith::MulAssign>::mul_assign": true,
  "<num::saturating::Saturating<u8> as ops::arith::Rem<&num::saturating::Saturating<u8>>>::rem": true,
  "<num::saturating::Saturating<u8> as ops::arith::Rem>::rem": true,
  "<num::saturating::Saturating<u8> as ops::arith::RemAssign<&num::saturating::Saturating<u8>>>::rem_assign": true,
  "<num::saturating::Saturating<u8> as ops::arith::RemAssign<&u8>>::rem_assign": true,
  "<num::saturating::Saturating<u8> as ops::arith::RemAssign<u8>>::rem_assign": true,
  "<num::saturating::Saturating<u8> as ops::arith::RemAssign>::rem_assign": true,
  "<num::saturating::Saturating<u8> as ops::arith::Sub<&num::saturating::Saturating<u8>>>::sub": true,
  "<num::saturating::Saturating<u8> as ops::arith::Sub>::sub": true,
  "<num::saturating::Saturating<u8> as ops::arith::SubAssign<&num::saturating::Saturating<u8>>>::sub_assign": true,
  "<num::saturating::Saturating<u8> as ops::arith::SubAssign<&u8>>::sub_assign": true,
  "<num::saturating::Saturating<u8> as ops::arith::SubAssign<u8>>::sub_assign": true,
  "<num::saturating::Saturating<u8> as ops::arith::SubAssign>::sub_assign": true,
  "<num::saturating::Saturating<u8> as ops::bit::BitAnd<&num::saturating::Saturating<u8>>>::bitand": true,
  "<num::saturating::Saturating<u8> as ops::bit::BitAnd>::bitand": true,
  "<num::saturating::Saturating<u8> as ops::bit::BitAndAssign<&num::saturating::Saturating<u8>>>::bitand_assign": true,
  "<num::saturating::Saturating<u8> as ops::bit::BitAndAssign<&u8>>::bitand_assign": true,
  "<num::saturating::Saturating<u8> as ops::bit::BitAndAssign<u8>>::bitand_assign": true,
  "<num::saturating::Saturating<u8> as ops::bit::BitAndAssign>::bitand_assign": true,
  "<num::saturating::Saturating<u8> as ops::bit::BitOr<&num::saturating::Saturating<u8>>>::bitor": true,
  "<num::saturating::Saturating<u8> as ops::bit::BitOr>::bitor": true,
  "<num::saturating::Saturating<u8> as ops::bit::BitOrAssign<&num::saturating::Saturating<u8>>>::bitor_assign": true,
  "<num::saturating::Saturating<u8> as ops::bit::BitOrAssign<&u8>>::bitor_assign": true,
  "<num::saturating::Saturating<u8> as ops::bit::BitOrAssign<u8>>::bitor_assign": true,
  "<num::saturating::Saturating<u8> as ops::bit::BitOrAssign>::bitor_assign": true,
  "<num::saturating::Saturating<u8> as ops::bit::BitXor<&num::saturating::Saturating<u8>>>::bitxor": true,
  "<num::saturating::Saturating<u8> as ops::bit::BitXor>::bitxor": true,
  "<num::saturating::Saturating<u8> as ops::bit::BitXorAssign<&num::saturating::Saturating<u8>>>::bitxor_assign": true,
  "<num::saturating::Saturating<u8> as ops::bit::BitXorAssign<&u8>>::bitxor_assign": true,
  "<num::saturating::Saturating<u8> as ops::bit::BitXorAssign<u8>>::bitxor_assign": true,
  "<num::saturating::Saturating<u8> as ops::bit::BitXorAssign>::bitxor_assign": true,
  "<num::saturating::Saturating<u8> as ops::bit::Not>::not": true,
  "<num::saturating::Saturating<usize> as ops::arith::Add<&num::saturating::Saturating<usize>>>::add": true,
  "<num::saturating::Saturating<usize> as ops::arith::Add>::add": true,
  "<num::saturating::Saturating<usize> as ops::arith::AddAssign<&num::saturating::Saturating<usize>>>::add_assign": true,
  "<num::saturating::Saturating<usize> as ops::arith::AddAssign<&usize>>::add_assign": true,
  "<num::saturating::Saturating<usize> as ops::arith::AddAssign<usize>>::add_assign": true,
  "<num::saturating::Saturating<usize> as ops::arith::AddAssign>::add_assign": true,
  "<num::saturating::Saturating<usize> as ops::arith::Div<&num::saturating::Saturating<usize>>>::div": true,
  "<num::saturating::Saturating<usize> as ops::arith::Div>::div": true,
  "<num::saturating::Saturating<usize> as ops::arith::DivAssign<&num::saturating::Saturating<usize>>>::div_assign": true,
  "<num::saturating::Saturating<usize> as ops::arith::DivAssign<&usize>>::div_assign": true,
  "<num::saturating::Saturating<usize> as ops::arith::DivAssign<usize>>::div_assign": true,
  "<num::saturating::Saturating<usize> as ops::arith::DivAssign>::div_assign": true,
  "<num::saturating::Saturating<usize> as ops::arith::Mul<&num::saturating::Saturating<usize>>>::mul": true,
  "<num::saturating::Saturating<usize> as ops::arith::Mul>::mul": true,
  "<num::saturating::Saturating<usize> as ops::arith::MulAssign<&num::saturating::Saturating<usize>>>::mul_assign": true,
  "<num::saturating::Saturating<usize> as ops::arith::MulAssign<&usize>>::mul_assign": true,
  "<num::saturating::Saturating<usize> as ops::arith::MulAssign<usize>>::mul_assign": true,
  "<num::saturating::Saturating<usize> as ops::arith::MulAssign>::mul_assign": true,
  "<num::saturating::Saturating<usize> as ops::arith::Rem<&num::saturating::Saturating<usize>>>::rem": true,
  "<num::saturating::Saturating<usize> as ops::arith::Rem>::rem": true,
  "<num::saturating::Saturating<usize> as ops::arith::RemAssign<&num::saturating::Saturating<usize>>>::rem_assign": true,
  "<num::saturating::Saturating<usize> as ops::arith::RemAssign<&usize>>::rem_assign": true,
  "<num::saturating::Saturating<usize> as ops::arith::RemAssign<usize>>::rem_assign": true,
  "<num::saturating::Saturating<usize> as ops::arith::RemAssign>::rem_assign": true,
  "<num::saturating::Saturating<usize> as ops::arith::Sub<&num::saturating::Saturating<usize>>>::sub": true,
  "<num::saturating::Saturating<usize> as ops::arith::Sub>::sub": true,
  "<num::saturating::Saturating<usize> as ops::arith::SubAssign<&num::saturating::Saturating<usize>>>::sub_assign": true,
  "<num::saturating::Saturating<usize> as ops::arith::SubAssign<&usize>>::sub_assign": true,
  "<num::saturating::Saturating<usize> as ops::arith::SubAssign<usize>>::sub_assign": true,
  "<num::saturating::Saturating<usize> as ops::arith::SubAssign>::sub_assign": true,
  "<num::saturating::Saturating<usize> as ops::bit::BitAnd<&num::saturating::Saturating<usize>>>::bitand": true,
  "<num::saturating::Saturating<usize> as ops::bit::BitAnd>::bitand": true,
  "<num::saturating::Saturating<usize> as ops::bit::BitAndAssign<&num::saturating::Saturating<usize>>>::bitand_assign": true,
  "<num::saturating::Saturating<usize> as ops::bit::BitAndAssign<&usize>>::bitand_assign": true,
  "<num::saturating::Saturating<usize> as ops::bit::BitAndAssign<usize>>::bitand_assign": true,
  "<num::saturating::Saturating<usize> as ops::bit::BitAndAssign>::bitand_assign": true,
  "<num::saturating::Saturating<usize> as ops::bit::BitOr<&num::saturating::Saturating<usize>>>::bitor": true,
  "<num::saturating::Saturating<usize> as ops::bit::BitOr>::bitor": true,
  "<num::saturating::Saturating<usize> as ops::bit::BitOrAssign<&num::saturating::Saturating<usize>>>::bitor_assign": true,
  "<num::saturating::Saturating<usize> as ops::bit::BitOrAssign<&usize>>::bitor_assign": true,
  "<num::saturating::Saturating<usize> as ops::bit::BitOrAssign<usize>>::bitor_assign": true,
  "<num::saturating::Saturating<usize> as ops::bit::BitOrAssign>::bitor_assign": true,
  "<num::saturating::Saturating<usize> as ops::bit::BitXor<&num::saturating::Saturating<usize>>>::bitxor": true,
  "<num::saturating::Saturating<usize> as ops::bit::BitXor>::bitxor": true,
  "<num::saturating::Saturating<usize> as ops::bit::BitXorAssign<&num::saturating::Saturating<usize>>>::bitxor_assign": true,
  "<num::saturating::Saturating<usize> as ops::bit::BitXorAssign<&usize>>::bitxor_assign": true,
  "<num::saturating::Saturating<usize> as ops::bit::BitXorAssign<usize>>::bitxor_assign": true,
  "<num::saturating::Saturating<usize> as ops::bit::BitXorAssign>::bitxor_assign": true,
  "<num::saturating::Saturating<usize> as ops::bit::Not>::not": true,
  "<num::wrapping::Wrapping<i128> as ops::arith::Add<&num::wrapping::Wrapping<i128>>>::add": true,
  "<num::wrapping::Wrapping<i128> as ops::arith::Add>::add": true,
  "<num::wrapping::Wrapping<i128> as ops::arith::AddAssign<&i128>>::add_assign": true,
  "<num::wrapping::Wrapping<i128> as ops::arith::AddAssign<&num::wrapping::Wrapping<i128>>>::add_assign": true,
  "<num::wrapping::Wrapping<i128> as ops::arith::AddAssign<i128>>::add_assign": true,
  "<num::wrapping::Wrapping<i128> as ops::arith::AddAssign>::add_assign": true,
  "<num::wrapping::Wrapping<i128> as ops::arith::Div<&num::wrapping::Wrapping<i128>>>::div": true,
  "<num::wrapping::Wrapping<i128> as ops::arith::Div>::div": true,
  "<num::wrapping::Wrapping<i128> as ops::arith::DivAssign<&i128>>::div_assign": true,
  "<num::wrapping::Wrapping<i128> as ops::arith::DivAssign<&num::wrapping::Wrapping<i128>>>::div_assign": true,
  "<num::wrapping::Wrapping<i128> as ops::arith::DivAssign<i128>>::div_assign": true,
  "<num::wrapping::Wrapping<i128> as ops::arith::DivAssign>::div_assign": true,
  "<num::wrapping::Wrapping<i128> as ops::arith::Mul<&num::wrapping::Wrapping<i128>>>::mul": true,
  "<num::wrapping::Wrapping<i128> as ops::arith::Mul>::mul": true,
  "<num::wrapping::Wrapping<i128> as ops::arith::MulAssign<&i128>>::mul_assign": true,
  "<num::wrapping::Wrapping<i128> as ops::arith::MulAssign<&num::wrapping::Wrapping<i128>>>::mul_assign": true,
  "<num::wrapping::Wrapping<i128> as ops::arith::MulAssign<i128>>::mul_assign": true,
  "<num::wrapping::Wrapping<i128> as ops::arith::MulAssign>::mul_assign": true,
  "<num::wrapping::Wrapping<i128> as ops::arith::Neg>::neg": true,
  "<num::wrapping::Wrapping<i128> as ops::arith::Rem<&num::wrapping::Wrapping<i128>>>::rem": true,
  "<num::wrapping::Wrapping<i128> as ops::arith::Rem>::rem": true,
  "<num::wrapping::Wrapping<i128> as ops::arith::RemAssign<&i128>>::rem_assign": true,
  "<num::wrapping::Wrapping<i128> as ops::arith::RemAssign<&num::wrapping::Wrapping<i128>>>::rem_assign": true,
  "<num::wrapping::Wrapping<i128> as ops::arith::RemAssign<i128>>::rem_assign": true,
  "<num::wrapping::Wrapping<i128> as ops::arith::RemAssign>::rem_assign": true,
  "<num::wrapping::Wrapping<i128> as ops::arith::Sub<&num::wrapping::Wrapping<i128>>>::sub": true,
  "<num::wrapping::Wrapping<i128> as ops::arith::Sub>::sub": true,
  "<num::wrapping::Wrapping<i128> as ops::arith::SubAssign<&i128>>::sub_assign": true,
  "<num::wrapping::Wrapping<i128> as ops::arith::SubAssign<&num::wrapping::Wrapping<i128>>>::sub_assign": true,
  "<num::wrapping::Wrapping<i128> as ops::arith::SubAssign<i128>>::sub_assign": true,
  "<num::wrapping::Wrapping<i128> as ops::arith::SubAssign>::sub_assign": true,
  "<num::wrapping::Wrapping<i128> as ops::bit::BitAnd<&num::wrapping::Wrapping<i128>>>::bitand": true,
  "<num::wrapping::Wrapping<i128> as ops::bit::BitAnd>::bitand": true,
  "<num::wrapping::Wrapping<i128> as ops::bit::BitAndAssign<&i128>>::bitand_assign": true,
  "<num::wrapping::Wrapping<i128> as ops::bit::BitAndAssign<&num::wrapping::Wrapping<i128>>>::bitand_assign": true,
  "<num::wrapping::Wrapping<i128> as ops::bit::BitAndAssign<i128>>::bitand_assign": true,
  "<num::wrapping::Wrapping<i128> as ops::bit::BitAndAssign>::bitand_assign": true,
  "<num::wrapping::Wrapping<i128> as ops::bit::BitOr<&num::wrapping::Wrapping<i128>>>::bitor": true,
  "<num::wrapping::Wrapping<i128> as ops::bit::BitOr>::bitor": true,
  "<num::wrapping::Wrapping<i128> as ops::bit::BitOrAssign<&i128>>::bitor_assign": true,
  "<num::wrapping::Wrapping<i128> as ops::bit::BitOrAssign<&num::wrapping::Wrapping<i128>>>::bitor_assign": true,
  "<num::wrapping::Wrapping<i128> as ops::bit::BitOrAssign<i128>>::bitor_assign": true,
  "<num::wrapping::Wrapping<i128> as ops::bit::BitOrAssign>::bitor_assign": true,
  "<num::wrapping::Wrapping<i128> as ops::bit::BitXor<&num::wrapping::Wrapping<i128>>>::bitxor": true,
  "<num::wrapping::Wrapping<i128> as ops::bit::BitXor>::bitxor": true,
  "<num::wrapping::Wrapping<i128> as ops::bit::BitXorAssign<&i128>>::bitxor_assign": true,
  "<num::wrapping::Wrapping<i128> as ops::bit::BitXorAssign<&num::wrapping::Wrapping<i128>>>::bitxor_assign": true,
  "<num::wrapping::Wrapping<i128> as ops::bit::BitXorAssign<i128>>::bitxor_assign": true,
  "<num::wrapping::Wrapping<i128> as ops::bit::BitXorAssign>::bitxor_assign": true,
  "<num::wrapping::Wrapping<i128> as ops::bit::Not>::not": true,
  "<num::wrapping::Wrapping<i128> as ops::bit::Shl<&usize>>::shl": true,
  "<num::wrapping::Wrapping<i128> as ops::bit::Shl<usize>>::shl": true,
  "<num::wrapping::Wrapping<i128> as ops::bit::ShlAssign<&usize>>::shl_assign": true,
  "<num::wrapping::Wrapping<i128> as ops::bit::ShlAssign<usize>>::shl_assign": true,
  "<num::wrapping::Wrapping<i128> as ops::bit::Shr<&usize>>::shr": true,
  "<num::wrapping::Wrapping<i128> as ops::bit::Shr<usize>>::shr": true,
  "<num::wrapping::Wrapping<i128> as ops::bit::ShrAssign<&usize>>::shr_assign": true,
  "<num::wrapping::Wrapping<i128> as ops::bit::ShrAssign<usize>>::shr_assign": true,
  "<num::wrapping::Wrapping<i16> as ops::arith::Add<&num::wrapping::Wrapping<i16>>>::add": true,
  "<num::wrapping::Wrapping<i16> as ops::arith::Add>::add": true,
  "<num::wrapping::Wrapping<i16> as ops::arith::AddAssign<&i16>>::add_assign": true,
  "<num::wrapping::Wrapping<i16> as ops::arith::AddAssign<&num::wrapping::Wrapping<i16>>>::add_assign": true,
  "<num::wrapping::Wrapping<i16> as ops::arith::AddAssign<i16>>::add_assign": true,
  "<num::wrapping::Wrapping<i16> as ops::arith::AddAssign>::add_assign": true,
  "<num::wrapping::Wrapping<i16> as ops::arith::Div<&num::wrapping::Wrapping<i16>>>::div": true,
  "<num::wrapping::Wrapping<i16> as ops::arith::Div>::div": true,
  "<num::wrapping::Wrapping<i16> as ops::arith::DivAssign<&i16>>::div_assign": true,
  "<num::wrapping::Wrapping<i16> as ops::arith::DivAssign<&num::wrapping::Wrapping<i16>>>::div_assign": true,
  "<num::wrapping::Wrapping<i16> as ops::arith::DivAssign<i16>>::div_assign": true,
  "<num::wrapping::Wrapping<i16> as ops::arith::DivAssign>::div_assign": true,
  "<num::wrapping::Wrapping<i16> as ops::arith::Mul<&num::wrapping::Wrapping<i16>>>::mul": true,
  "<num::wrapping::Wrapping<i16> as ops::arith::Mul>::mul": true,
  "<num::wrapping::Wrapping<i16> as ops::arith::MulAssign<&i16>>::mul_assign": true,
  "<num::wrapping::Wrapping<i16> as ops::arith::MulAssign<&num::wrapping::Wrapping<i16>>>::mul_assign": true,
  "<num::wrapping::Wrapping<i16> as ops::arith::MulAssign<i16>>::mul_assign": true,
  "<num::wrapping::Wrapping<i16> as ops::arith::MulAssign>::mul_assign": true,
  "<num::wrapping::Wrapping<i16> as ops::arith::Neg>::neg": true,
  "<num::wrapping::Wrapping<i16> as ops::arith::Rem<&num::wrapping::Wrapping<i16>>>::rem": true,
  "<num::wrapping::Wrapping<i16> as ops::arith::Rem>::rem": true,
  "<num::wrapping::Wrapping<i16> as ops::arith::RemAssign<&i16>>::rem_assign": true,
  "<num::wrapping::Wrapping<i16> as ops::arith::RemAssign<&num::wrapping::Wrapping<i16>>>::rem_assign": true,
  "<num::wrapping::Wrapping<i16> as ops::arith::RemAssign<i16>>::rem_assign": true,
  "<num::wrapping::Wrapping<i16> as ops::arith::RemAssign>::rem_assign": true,
  "<num::wrapping::Wrapping<i16> as ops::arith::Sub<&num::wrapping::Wrapping<i16>>>::sub": true,
  "<num::wrapping::Wrapping<i16> as ops::arith::Sub>::sub": true,
  "<num::wrapping::Wrapping<i16> as ops::arith::SubAssign<&i16>>::sub_assign": true,
  "<num::wrapping::Wrapping<i16> as ops::arith::SubAssign<&num::wrapping::Wrapping<i16>>>::sub_assign": true,
  "<num::wrapping::Wrapping<i16> as ops::arith::SubAssign<i16>>::sub_assign": true,
  "<num::wrapping::Wrapping<i16> as ops::arith::SubAssign>::sub_assign": true,
  "<num::wrapping::Wrapping<i16> as ops::bit::BitAnd<&num::wrapping::Wrapping<i16>>>::bitand": true,
  "<num::wrapping::Wrapping<i16> as ops::bit::BitAnd>::bitand": true,
  "<num::wrapping::Wrapping<i16> as ops::bit::BitAndAssign<&i16>>::bitand_assign": true,
  "<num::wrapping::Wrapping<i16> as ops::bit::BitAndAssign<&num::wrapping::Wrapping<i16>>>::bitand_assign": true,
  "<num::wrapping::Wrapping<i16> as ops::bit::BitAndAssign<i16>>::bitand_assign": true,
  "<num::wrapping::Wrapping<i16> as ops::bit::BitAndAssign>::bitand_assign": true,
  "<num::wrapping::Wrapping<i16> as ops::bit::BitOr<&num::wrapping::Wrapping<i16>>>::bitor": true,
  "<num::wrapping::Wrapping<i16> as ops::bit::BitOr>::bitor": true,
  "<num::wrapping::Wrapping<i16> as ops::bit::BitOrAssign<&i16>>::bitor_assign": true,
  "<num::wrapping::Wrapping<i16> as ops::bit::BitOrAssign<&num::wrapping::Wrapping<i16>>>::bitor_assign": true,
  "<num::wrapping::Wrapping<i16> as ops::bit::BitOrAssign<i16>>::bitor_assign": true,
  "<num::wrapping::Wrapping<i16> as ops::bit::BitOrAssign>::bitor_assign": true,
  "<num::wrapping::Wrapping<i16> as ops::bit::BitXor<&num::wrapping::Wrapping<i16>>>::bitxor": true,
  "<num::wrapping::Wrapping<i16> as ops::bit::BitXor>::bitxor": true,
  "<num::wrapping::Wrapping<i16> as ops::bit::BitXorAssign<&i16>>::bitxor_assign": true,
  "<num::wrapping::Wrapping<i16> as ops::bit::BitXorAssign<&num::wrapping::Wrapping<i16>>>::bitxor_assign": true,
  "<num::wrapping::Wrapping<i16> as ops::bit::BitXorAssign<i16>>::bitxor_assign": true,
  "<num::wrapping::Wrapping<i16> as ops::bit::BitXorAssign>::bitxor_assign": true,
  "<num::wrapping::Wrapping<i16> as ops::bit::Not>::not": true,
  "<num::wrapping::Wrapping<i16> as ops::bit::Shl<&usize>>::shl": true,
  "<num::wrapping::Wrapping<i16> as ops::bit::Shl<usize>>::shl": true,
  "<num::wrapping::Wrapping<i16> as ops::bit::ShlAssign<&usize>>::shl_assign": true,
  "<num::wrapping::Wrapping<i16> as ops::bit::ShlAssign<usize>>::shl_assign": true,
  "<num::wrapping::Wrapping<i16> as ops::bit::Shr<&usize>>::shr": true,
  "<num::wrapping::Wrapping<i16> as ops::bit::Shr<usize>>::shr": true,
  "<num::wrapping::Wrapping<i16> as ops::bit::ShrAssign<&usize>>::shr_assign": true,
  "<num::wrapping::Wrapping<i16> as ops::bit::ShrAssign<usize>>::shr_assign": true,
  "<num::wrapping::Wrapping<i32> as ops::arith::Add<&num::wrapping::Wrapping<i32>>>::add": true,
  "<num::wrapping::Wrapping<i32> as ops::arith::Add>::add": true,
  "<num::wrapping::Wrapping<i32> as ops::arith::AddAssign<&i32>>::add_assign": true,
  "<num::wrapping::Wrapping<i32> as ops::arith::AddAssign<&num::wrapping::Wrapping<i32>>>::add_assign": true,
  "<num::wrapping::Wrapping<i32> as ops::arith::AddAssign<i32>>::add_assign": true,
  "<num::wrapping::Wrapping<i32> as ops::arith::AddAssign>::add_assign": true,
  "<num::wrapping::Wrapping<i32> as ops::arith::Div<&num::wrapping::Wrapping<i32>>>::div": true,
  "<num::wrapping::Wrapping<i32> as ops::arith::Div>::div": true,
  "<num::wrapping::Wrapping<i32> as ops::arith::DivAssign<&i32>>::div_assign": true,
  "<num::wrapping::Wrapping<i32> as ops::arith::DivAssign<&num::wrapping::Wrapping<i32>>>::div_assign": true,
  "<num::wrapping::Wrapping<i32> as ops::arith::DivAssign<i32>>::div_assign": true,
  "<num::wrapping::Wrapping<i32> as ops::arith::DivAssign>::div_assign": true,
  "<num::wrapping::Wrapping<i32> as ops::arith::Mul<&num::wrapping::Wrapping<i32>>>::mul": true,
  "<num::wrapping::Wrapping<i32> as ops::arith::Mul>::mul": true,
  "<num::wrapping::Wrapping<i32> as ops::arith::MulAssign<&i32>>::mul_assign": true,
  "<num::wrapping::Wrapping<i32> as ops::arith::MulAssign<&num::wrapping::Wrapping<i32>>>::mul_assign": true,
  "<num::wrapping::Wrapping<i32> as ops::arith::MulAssign<i32>>::mul_assign": true,
  "<num::wrapping::Wrapping<i32> as ops::arith::MulAssign>::mul_assign": true,
  "<num::wrapping::Wrapping<i32> as ops::arith::Neg>::neg": true,
  "<num::wrapping::Wrapping<i32> as ops::arith::Rem<&num::wrapping::Wrapping<i32>>>::rem": true,
  "<num::wrapping::Wrapping<i32> as ops::arith::Rem>::rem": true,
  "<num::wrapping::Wrapping<i32> as ops::arith::RemAssign<&i32>>::rem_assign": true,
  "<num::wrapping::Wrapping<i32> as ops::arith::RemAssign<&num::wrapping::Wrapping<i32>>>::rem_assign": true,
  "<num::wrapping::Wrapping<i32> as ops::arith::RemAssign<i32>>::rem_assign": true,
  "<num::wrapping::Wrapping<i32> as ops::arith::RemAssign>::rem_assign": true,
  "<num::wrapping::Wrapping<i32> as ops::arith::Sub<&num::wrapping::Wrapping<i32>>>::sub": true,
  "<num::wrapping::Wrapping<i32> as ops::arith::Sub>::sub": true,
  "<num::wrapping::Wrapping<i32> as ops::arith::SubAssign<&i32>>::sub_assign": true,
  "<num::wrapping::Wrapping<i32> as ops::arith::SubAssign<&num::wrapping::Wrapping<i32>>>::sub_assign": true,
  "<num::wrapping::Wrapping<i32> as ops::arith::SubAssign<i32>>::sub_assign": true,
  "<num::wrapping::Wrapping<i32> as ops::arith::SubAssign>::sub_assign": true,
  "<num::wrapping::Wrapping<i32> as ops::bit::BitAnd<&num::wrapping::Wrapping<i32>>>::bitand": true,
  "<num::wrapping::Wrapping<i32> as ops::bit::BitAnd>::bitand": true,
  "<num::wrapping::Wrapping<i32> as ops::bit::BitAndAssign<&i32>>::bitand_assign": true,
  "<num::wrapping::Wrapping<i32> as ops::bit::BitAndAssign<&num::wrapping::Wrapping<i32>>>::bitand_assign": true,
  "<num::wrapping::Wrapping<i32> as ops::bit::BitAndAssign<i32>>::bitand_assign": true,
  "<num::wrapping::Wrapping<i32> as ops::bit::BitAndAssign>::bitand_assign": true,
  "<num::wrapping::Wrapping<i32> as ops::bit::BitOr<&num::wrapping::Wrapping<i32>>>::bitor": true,
  "<num::wrapping::Wrapping<i32> as ops::bit::BitOr>::bitor": true,
  "<num::wrapping::Wrapping<i32> as ops::bit::BitOrAssign<&i32>>::bitor_assign": true,
  "<num::wrapping::Wrapping<i32> as ops::bit::BitOrAssign<&num::wrapping::Wrapping<i32>>>::bitor_assign": true,
  "<num::wrapping::Wrapping<i32> as ops::bit::BitOrAssign<i32>>::bitor_assign": true,
  "<num::wrapping::Wrapping<i32> as ops::bit::BitOrAssign>::bitor_assign": true,
  "<num::wrapping::Wrapping<i32> as ops::bit::BitXor<&num::wrapping::Wrapping<i32>>>::bitxor": true,
  "<num::wrapping::Wrapping<i32> as ops::bit::BitXor>::bitxor": true,
  "<num::wrapping::Wrapping<i32> as ops::bit::BitXorAssign<&i32>>::bitxor_assign": true,
  "<num::wrapping::Wrapping<i32> as ops::bit::BitXorAssign<&num::wrapping::Wrapping<i32>>>::bitxor_assign": true,
  "<num::wrapping::Wrapping<i32> as ops::bit::BitXorAssign<i32>>::bitxor_assign": true,
  "<num::wrapping::Wrapping<i32> as ops::bit::BitXorAssign>::bitxor_assign": true,
  "<num::wrapping::Wrapping<i32> as ops::bit::Not>::not": true,
  "<num::wrapping::Wrapping<i32> as ops::bit::Shl<&usize>>::shl": true,
  "<num::wrapping::Wrapping<i32> as ops::bit::Shl<usize>>::shl": true,
  "<num::wrapping::Wrapping<i32> as ops::bit::ShlAssign<&usize>>::shl_assign": true,
  "<num::wrapping::Wrapping<i32> as ops::bit::ShlAssign<usize>>::shl_assign": true,
  "<num::wrapping::Wrapping<i32> as ops::bit::Shr<&usize>>::shr": true,
  "<num::wrapping::Wrapping<i32> as ops::bit::Shr<usize>>::shr": true,
  "<num::wrapping::Wrapping<i32> as ops::bit::ShrAssign<&usize>>::shr_assign": true,
  "<num::wrapping::Wrapping<i32> as ops::bit::ShrAssign<usize>>::shr_assign": true,
  "<num::wrapping::Wrapping<i64> as ops::arith::Add<&num::wrapping::Wrapping<i64>>>::add": true,
  "<num::wrapping::Wrapping<i64> as ops::arith::Add>::add": true,
  "<num::wrapping::Wrapping<i64> as ops::arith::AddAssign<&i64>>::add_assign": true,
  "<num::wrapping::Wrapping<i64> as ops::arith::AddAssign<&num::wrapping::Wrapping<i64>>>::add_assign": true,
  "<num::wrapping::Wrapping<i64> as ops::arith::AddAssign<i64>>::add_assign": true,
  "<num::wrapping::Wrapping<i64> as ops::arith::AddAssign>::add_assign": true,
  "<num::wrapping::Wrapping<i64> as ops::arith::Div<&num::wrapping::Wrapping<i64>>>::div": true,
  "<num::wrapping::Wrapping<i64> as ops::arith::Div>::div": true,
  "<num::wrapping::Wrapping<i64> as ops::arith::DivAssign<&i64>>::div_assign": true,
  "<num::wrapping::Wrapping<i64> as ops::arith::DivAssign<&num::wrapping::Wrapping<i64>>>::div_assign": true,
  "<num::wrapping::Wrapping<i64> as ops::arith::DivAssign<i64>>::div_assign": true,
  "<num::wrapping::Wrapping<i64> as ops::arith::DivAssign>::div_assign": true,
  "<num::wrapping::Wrapping<i64> as ops::arith::Mul<&num::wrapping::Wrapping<i64>>>::mul": true,
  "<num::wrapping::Wrapping<i64> as ops::arith::Mul>::mul": true,
  "<num::wrapping::Wrapping<i64> as ops::arith::MulAssign<&i64>>::mul_assign": true,
  "<num::wrapping::Wrapping<i64> as ops::arith::MulAssign<&num::wrapping::Wrapping<i64>>>::mul_assign": true,
  "<num::wrapping::Wrapping<i64> as ops::arith::MulAssign<i64>>::mul_assign": true,
  "<num::wrapping::Wrapping<i64> as ops::arith::MulAssign>::mul_assign": true,
  "<num::wrapping::Wrapping<i64> as ops::arith::Neg>::neg": true,
  "<num::wrapping::Wrapping<i64> as ops::arith::Rem<&num::wrapping::Wrapping<i64>>>::rem": true,
  "<num::wrapping::Wrapping<i64> as ops::arith::Rem>::rem": true,
  "<num::wrapping::Wrapping<i64> as ops::arith::RemAssign<&i64>>::rem_assign": true,
  "<num::wrapping::Wrapping<i64> as ops::arith::RemAssign<&num::wrapping::Wrapping<i64>>>::rem_assign": true,
  "<num::wrapping::Wrapping<i64> as ops::arith::RemAssign<i64>>::rem_assign": true,
  "<num::wrapping::Wrapping<i64> as ops::arith::RemAssign>::rem_assign": true,
  "<num::wrapping::Wrapping<i64> as ops::arith::Sub<&num::wrapping::Wrapping<i64>>>::sub": true,
  "<num::wrapping::Wrapping<i64> as ops::arith::Sub>::sub": true,
  "<num::wrapping::Wrapping<i64> as ops::arith::SubAssign<&i64>>::sub_assign": true,
  "<num::wrapping::Wrapping<i64> as ops::arith::SubAssign<&num::wrapping::Wrapping<i64>>>::sub_assign": true,
  "<num::wrapping::Wrapping<i64> as ops::arith::SubAssign<i64>>::sub_assign": true,
  "<num::wrapping::Wrapping<i64> as ops::arith::SubAssign>::sub_assign": true,
  "<num::wrapping::Wrapping<i64> as ops::bit::BitAnd<&num::wrapping::Wrapping<i64>>>::bitand": true,
  "<num::wrapping::Wrapping<i64> as ops::bit::BitAnd>::bitand": true,
  "<num::wrapping::Wrapping<i64> as ops::bit::BitAndAssign<&i64>>::bitand_assign": true,
  "<num::wrapping::Wrapping<i64> as ops::bit::BitAndAssign<&num::wrapping::Wrapping<i64>>>::bitand_assign": true,
  "<num::wrapping::Wrapping<i64> as ops::bit::BitAndAssign<i64>>::bitand_assign": true,
  "<num::wrapping::Wrapping<i64> as ops::bit::BitAndAssign>::bitand_assign": true,
  "<num::wrapping::Wrapping<i64> as ops::bit::BitOr<&num::wrapping::Wrapping<i64>>>::bitor": true,
  "<num::wrapping::Wrapping<i64> as ops::bit::BitOr>::bitor": true,
  "<num::wrapping::Wrapping<i64> as ops::bit::BitOrAssign<&i64>>::bitor_assign": true,
  "<num::wrapping::Wrapping<i64> as ops::bit::BitOrAssign<&num::wrapping::Wrapping<i64>>>::bitor_assign": true,
  "<num::wrapping::Wrapping<i64> as ops::bit::BitOrAssign<i64>>::bitor_assign": true,
  "<num::wrapping::Wrapping<i64> as ops::bit::BitOrAssign>::bitor_assign": true,
  "<num::wrapping::Wrapping<i64> as ops::bit::BitXor<&num::wrapping::Wrapping<i64>>>::bitxor": true,
  "<num::wrapping::Wrapping<i64> as ops::bit::BitXor>::bitxor": true,
  "<num::wrapping::Wrapping<i64> as ops::bit::BitXorAssign<&i64>>::bitxor_assign": true,
  "<num::wrapping::Wrapping<i64> as ops::bit::BitXorAssign<&num::wrapping::Wrapping<i64>>>::bitxor_assign": true,
  "<num::wrapping::Wrapping<i64> as ops::bit::BitXorAssign<i64>>::bitxor_assign": true,
  "<num::wrapping::Wrapping<i64> as ops::bit::BitXorAssign>::bitxor_assign": true,
  "<num::wrapping::Wrapping<i64> as ops::bit::Not>::not": true,
  "<num::wrapping::Wrapping<i64> as ops::bit::Shl<&usize>>::shl": true,
  "<num::wrapping::Wrapping<i64> as ops::bit::Shl<usize>>::shl": true,
  "<num::wrapping::Wrapping<i64> as ops::bit::ShlAssign<&usize>>::shl_assign": true,
  "<num::wrapping::Wrapping<i64> as ops::bit::ShlAssign<usize>>::shl_assign": true,
  "<num::wrapping::Wrapping<i64> as ops::bit::Shr<&usize>>::shr": true,
  "<num::wrapping::Wrapping<i64> as ops::bit::Shr<usize>>::shr": true,
  "<num::wrapping::Wrapping<i64> as ops::bit::ShrAssign<&usize>>::shr_assign": true,
  "<num::wrapping::Wrapping<i64> as ops::bit::ShrAssign<usize>>::shr_assign": true,
  "<num::wrapping::Wrapping<i8> as ops::arith::Add<&num::wrapping::Wrapping<i8>>>::add": true,
  "<num::wrapping::Wrapping<i8> as ops::arith::Add>::add": true,
  "<num::wrapping::Wrapping<i8> as ops::arith::AddAssign<&i8>>::add_assign": true,
  "<num::wrapping::Wrapping<i8> as ops::arith::AddAssign<&num::wrapping::Wrapping<i8>>>::add_assign": true,
  "<num::wrapping::Wrapping<i8> as ops::arith::AddAssign<i8>>::add_assign": true,
  "<num::wrapping::Wrapping<i8> as ops::arith::AddAssign>::add_assign": true,
  "<num::wrapping::Wrapping<i8> as ops::arith::Div<&num::wrapping::Wrapping<i8>>>::div": true,
  "<num::wrapping::Wrapping<i8> as ops::arith::Div>::div": true,
  "<num::wrapping::Wrapping<i8> as ops::arith::DivAssign<&i8>>::div_assign": true,
  "<num::wrapping::Wrapping<i8> as ops::arith::DivAssign<&num::wrapping::Wrapping<i8>>>::div_assign": true,
  "<num::wrapping::Wrapping<i8> as ops::arith::DivAssign<i8>>::div_assign": true,
  "<num::wrapping::Wrapping<i8> as ops::arith::DivAssign>::div_assign": true,
  "<num::wrapping::Wrapping<i8> as ops::arith::Mul<&num::wrapping::Wrapping<i8>>>::mul": true,
  "<num::wrapping::Wrapping<i8> as ops::arith::Mul>::mul": true,
  "<num::wrapping::Wrapping<i8> as ops::arith::MulAssign<&i8>>::mul_assign": true,
  "<num::wrapping::Wrapping<i8> as ops::arith::MulAssign<&num::wrapping::Wrapping<i8>>>::mul_assign": true,
  "<num::wrapping::Wrapping<i8> as ops::arith::MulAssign<i8>>::mul_assign": true,
  "<num::wrapping::Wrapping<i8> as ops::arith::MulAssign>::mul_assign": true,
  "<num::wrapping::Wrapping<i8> as ops::arith::Neg>::neg": true,
  "<num::wrapping::Wrapping<i8> as ops::arith::Rem<&num::wrapping::Wrapping<i8>>>::rem": true,
  "<num::wrapping::Wrapping<i8> as ops::arith::Rem>::rem": true,
  "<num::wrapping::Wrapping<i8> as ops::arith::RemAssign<&i8>>::rem_assign": true,
  "<num::wrapping::Wrapping<i8> as ops::arith::RemAssign<&num::wrapping::Wrapping<i8>>>::rem_assign": true,
  "<num::wrapping::Wrapping<i8> as ops::arith::RemAssign<i8>>::rem_assign": true,
  "<num::wrapping::Wrapping<i8> as ops::arith::RemAssign>::rem_assign": true,
  "<num::wrapping::Wrapping<i8> as ops::arith::Sub<&num::wrapping::Wrapping<i8>>>::sub": true,
  "<num::wrapping::Wrapping<i8> as ops::arith::Sub>::sub": true,
  "<num::wrapping::Wrapping<i8> as ops::arith::SubAssign<&i8>>::sub_assign": true,
  "<num::wrapping::Wrapping<i8> as ops::arith::SubAssign<&num::wrapping::Wrapping<i8>>>::sub_assign": true,
  "<num::wrapping::Wrapping<i8> as ops::arith::SubAssign<i8>>::sub_assign": true,
  "<num::wrapping::Wrapping<i8> as ops::arith::SubAssign>::sub_assign": true,
  "<num::wrapping::Wrapping<i8> as ops::bit::BitAnd<&num::wrapping::Wrapping<i8>>>::bitand": true,
  "<num::wrapping::Wrapping<i8> as ops::bit::BitAnd>::bitand": true,
  "<num::wrapping::Wrapping<i8> as ops::bit::BitAndAssign<&i8>>::bitand_assign": true,
  "<num::wrapping::Wrapping<i8> as ops::bit::BitAndAssign<&num::wrapping::Wrapping<i8>>>::bitand_assign": true,
  "<num::wrapping::Wrapping<i8> as ops::bit::BitAndAssign<i8>>::bitand_assign": true,
  "<num::wrapping::Wrapping<i8> as ops::bit::BitAndAssign>::bitand_assign": true,
  "<num::wrapping::Wrapping<i8> as ops::bit::BitOr<&num::wrapping::Wrapping<i8>>>::bitor": true,
  "<num::wrapping::Wrapping<i8> as ops::bit::BitOr>::bitor": true,
  "<num::wrapping::Wrapping<i8> as ops::bit::BitOrAssign<&i8>>::bitor_assign": true,
  "<num::wrapping::Wrapping<i8> as ops::bit::BitOrAssign<&num::wrapping::Wrapping<i8>>>::bitor_assign": true,
  "<num::wrapping::Wrapping<i8> as ops::bit::BitOrAssign<i8>>::bitor_assign": true,
  "<num::wrapping::Wrapping<i8> as ops::bit::BitOrAssign>::bitor_assign": true,
  "<num::wrapping::Wrapping<i8> as ops::bit::BitXor<&num::wrapping::Wrapping<i8>>>::bitxor": true,
  "<num::wrapping::Wrapping<i8> as ops::bit::BitXor>::bitxor": true,
  "<num::wrapping::Wrapping<i8> as ops::bit::BitXorAssign<&i8>>::bitxor_assign": true,
  "<num::wrapping::Wrapping<i8> as ops::bit::BitXorAssign<&num::wrapping::Wrapping<i8>>>::bitxor_assign": true,
  "<num::wrapping::Wrapping<i8> as ops::bit::BitXorAssign<i8>>::bitxor_assign": true,
  "<num::wrapping::Wrapping<i8> as ops::bit::BitXorAssign>::bitxor_assign": true,
  "<num::wrapping::Wrapping<i8> as ops::bit::Not>::not": true,
  "<num::wrapping::Wrapping<i8> as ops::bit::Shl<&usize>>::shl": true,
  "<num::wrapping::Wrapping<i8> as ops::bit::Shl<usize>>::shl": true,
  "<num::wrapping::Wrapping<i8> as ops::bit::ShlAssign<&usize>>::shl_assign": true,
  "<num::wrapping::Wrapping<i8> as ops::bit::ShlAssign<usize>>::shl_assign": true,
  "<num::wrapping::Wrapping<i8> as ops::bit::Shr<&usize>>::shr": true,
  "<num::wrapping::Wrapping<i8> as ops::bit::Shr<usize>>::shr": true,
  "<num::wrapping::Wrapping<i8> as ops::bit::ShrAssign<&usize>>::shr_assign": true,
  "<num::wrapping::Wrapping<i8> as ops::bit::ShrAssign<usize>>::shr_assign": true,
  "<num::wrapping::Wrapping<isize> as ops::arith::Add<&num::wrapping::Wrapping<isize>>>::add": true,
  "<num::wrapping::Wrapping<isize> as ops::arith::Add>::add": true,
  "<num::wrapping::Wrapping<isize> as ops::arith::AddAssign<&isize>>::add_assign": true,
  "<num::wrapping::Wrapping<isize> as ops::arith::AddAssign<&num::wrapping::Wrapping<isize>>>::add_assign": true,
  "<num::wrapping::Wrapping<isize> as ops::arith::AddAssign<isize>>::add_assign": true,
  "<num::wrapping::Wrapping<isize> as ops::arith::AddAssign>::add_assign": true,
  "<num::wrapping::Wrapping<isize> as ops::arith::Div<&num::wrapping::Wrapping<isize>>>::div": true,
  "<num::wrapping::Wrapping<isize> as ops::arith::Div>::div": true,
  "<num::wrapping::Wrapping<isize> as ops::arith::DivAssign<&isize>>::div_assign": true,
  "<num::wrapping::Wrapping<isize> as ops::arith::DivAssign<&num::wrapping::Wrapping<isize>>>::div_assign": true,
  "<num::wrapping::Wrapping<isize> as ops::arith::DivAssign<isize>>::div_assign": true,
  "<num::wrapping::Wrapping<isize> as ops::arith::DivAssign>::div_assign": true,
  "<num::wrapping::Wrapping<isize> as ops::arith::Mul<&num::wrapping::Wrapping<isize>>>::mul": true,
  "<num::wrapping::Wrapping<isize> as ops::arith::Mul>::mul": true,
  "<num::wrapping::Wrapping<isize> as ops::arith::MulAssign<&isize>>::mul_assign": true,
  "<num::wrapping::Wrapping<isize> as ops::arith::MulAssign<&num::wrapping::Wrapping<isize>>>::mul_assign": true,
  "<num::wrapping::Wrapping<isize> as ops::arith::MulAssign<isize>>::mul_assign": true,
  "<num::wrapping::Wrapping<isize> as ops::arith::MulAssign>::mul_assign": true,
  "<num::wrapping::Wrapping<isize> as ops::arith::Neg>::neg": true,
  "<num::wrapping::Wrapping<isize> as ops::arith::Rem<&num::wrapping::Wrapping<isize>>>::rem": true,
  "<num::wrapping::Wrapping<isize> as ops::arith::Rem>::rem": true,
  "<num::wrapping::Wrapping<isize> as ops::arith::RemAssign<&isize>>::rem_assign": true,
  "<num::wrapping::Wrapping<isize> as ops::arith::RemAssign<&num::wrapping::Wrapping<isize>>>::rem_assign": true,
  "<num::wrapping::Wrapping<isize> as ops::arith::RemAssign<isize>>::rem_assign": true,
  "<num::wrapping::Wrapping<isize> as ops::arith::RemAssign>::rem_assign": true,
  "<num::wrapping::Wrapping<isize> as ops::arith::Sub<&num::wrapping::Wrapping<isize>>>::sub": true,
  "<num::wrapping::Wrapping<isize> as ops::arith::Sub>::sub": true,
  "<num::wrapping::Wrapping<isize> as ops::arith::SubAssign<&isize>>::sub_assign": true,
  "<num::wrapping::Wrapping<isize> as ops::arith::SubAssign<&num::wrapping::Wrapping<isize>>>::sub_assign": true,
  "<num::wrapping::Wrapping<isize> as ops::arith::SubAssign<isize>>::sub_assign": true,
  "<num::wrapping::Wrapping<isize> as ops::arith::SubAssign>::sub_assign": true,
  "<num::wrapping::Wrapping<isize> as ops::bit::BitAnd<&num::wrapping::Wrapping<isize>>>::bitand": true,
  "<num::wrapping::Wrapping<isize> as ops::bit::BitAnd>::bitand": true,
  "<num::wrapping::Wrapping<isize> as ops::bit::BitAndAssign<&isize>>::bitand_assign": true,
  "<num::wrapping::Wrapping<isize> as ops::bit::BitAndAssign<&num::wrapping::Wrapping<isize>>>::bitand_assign": true,
  "<num::wrapping::Wrapping<isize> as ops::bit::BitAndAssign<isize>>::bitand_assign": true,
  "<num::wrapping::Wrapping<isize> as ops::bit::BitAndAssign>::bitand_assign": true,
  "<num::wrapping::Wrapping<isize> as ops::bit::BitOr<&num::wrapping::Wrapping<isize>>>::bitor": true,
  "<num::wrapping::Wrapping<isize> as ops::bit::BitOr>::bitor": true,
  "<num::wrapping::Wrapping<isize> as ops::bit::BitOrAssign<&isize>>::bitor_assign": true,
  "<num::wrapping::Wrapping<isize> as ops::bit::BitOrAssign<&num::wrapping::Wrapping<isize>>>::bitor_assign": true,
  "<num::wrapping::Wrapping<isize> as ops::bit::BitOrAssign<isize>>::bitor_assign": true,
  "<num::wrapping::Wrapping<isize> as ops::bit::BitOrAssign>::bitor_assign": true,
  "<num::wrapping::Wrapping<isize> as ops::bit::BitXor<&num::wrapping::Wrapping<isize>>>::bitxor": true,
  "<num::wrapping::Wrapping<isize> as ops::bit::BitXor>::bitxor": true,
  "<num::wrapping::Wrapping<isize> as ops::bit::BitXorAssign<&isize>>::bitxor_assign": true,
  "<num::wrapping::Wrapping<isize> as ops::bit::BitXorAssign<&num::wrapping::Wrapping<isize>>>::bitxor_assign": true,
  "<num::wrapping::Wrapping<isize> as ops::bit::BitXorAssign<isize>>::bitxor_assign": true,
  "<num::wrapping::Wrapping<isize> as ops::bit::BitXorAssign>::bitxor_assign": true,
  "<num::wrapping::Wrapping<isize> as ops::bit::Not>::not": true,
  "<num::wrapping::Wrapping<isize> as ops::bit::Shl<&usize>>::shl": true,
  "<num::wrapping::Wrapping<isize> as ops::bit::Shl<usize>>::shl": true,
  "<num::wrapping::Wrapping<isize> as ops::bit::ShlAssign<&usize>>::shl_assign": true,
  "<num::wrapping::Wrapping<isize> as ops::bit::ShlAssign<usize>>::shl_assign": true,
  "<num::wrapping::Wrapping<isize> as ops::bit::Shr<&usize>>::shr": true,
  "<num::wrapping::Wrapping<isize> as ops::bit::Shr<usize>>::shr": true,
  "<num::wrapping::Wrapping<isize> as ops::bit::ShrAssign<&usize>>::shr_assign": true,
  "<num::wrapping::Wrapping<isize> as ops::bit::ShrAssign<usize>>::shr_assign": true,
  "<num::wrapping::Wrapping<u128> as ops::arith::Add<&num::wrapping::Wrapping<u128>>>::add": true,
  "<num::wrapping::Wrapping<u128> as ops::arith::Add>::add": true,
  "<num::wrapping::Wrapping<u128> as ops::arith::AddAssign<&num::wrapping::Wrapping<u128>>>::add_assign": true,
  "<num::wrapping::Wrapping<u128> as ops::arith::AddAssign<&u128>>::add_assign": true,
  "<num::wrapping::Wrapping<u128> as ops::arith::AddAssign<u128>>::add_assign": true,
  "<num::wrapping::Wrapping<u128> as ops::arith::AddAssign>::add_assign": true,
  "<num::wrapping::Wrapping<u128> as ops::arith::Div<&num::wrapping::Wrapping<u128>>>::div": true,
  "<num::wrapping::Wrapping<u128> as ops::arith::Div>::div": true,
  "<num::wrapping::Wrapping<u128> as ops::arith::DivAssign<&num::wrapping::Wrapping<u128>>>::div_assign": true,
  "<num::wrapping::Wrapping<u128> as ops::arith::DivAssign<&u128>>::div_assign": true,
  "<num::wrapping::Wrapping<u128> as ops::arith::DivAssign<u128>>::div_assign": true,
  "<num::wrapping::Wrapping<u128> as ops::arith::DivAssign>::div_assign": true,
  "<num::wrapping::Wrapping<u128> as ops::arith::Mul<&num::wrapping::Wrapping<u128>>>::mul": true,
  "<num::wrapping::Wrapping<u128> as ops::arith::Mul>::mul": true,
  "<num::wrapping::Wrapping<u128> as ops::arith::MulAssign<&num::wrapping::Wrapping<u128>>>::mul_assign": true,
  "<num::wrapping::Wrapping<u128> as ops::arith::MulAssign<&u128>>::mul_assign": true,
  "<num::wrapping::Wrapping<u128> as ops::arith::MulAssign<u128>>::mul_assign": true,
  "<num::wrapping::Wrapping<u128> as ops::arith::MulAssign>::mul_assign": true,
  "<num::wrapping::Wrapping<u128> as ops::arith::Neg>::neg": true,
  "<num::wrapping::Wrapping<u128> as ops::arith::Rem<&num::wrapping::Wrapping<u128>>>::rem": true,
  "<num::wrapping::Wrapping<u128> as ops::arith::Rem>::rem": true,
  "<num::wrapping::Wrapping<u128> as ops::arith::RemAssign<&num::wrapping::Wrapping<u128>>>::rem_assign": true,
  "<num::wrapping::Wrapping<u128> as ops::arith::RemAssign<&u128>>::rem_assign": true,
  "<num::wrapping::Wrapping<u128> as ops::arith::RemAssign<u128>>::rem_assign": true,
  "<num::wrapping::Wrapping<u128> as ops::arith::RemAssign>::rem_assign": true,
  "<num::wrapping::Wrapping<u128> as ops::arith::Sub<&num::wrapping::Wrapping<u128>>>::sub": true,
  "<num::wrapping::Wrapping<u128> as ops::arith::Sub>::sub": true,
  "<num::wrapping::Wrapping<u128> as ops::arith::SubAssign<&num::wrapping::Wrapping<u128>>>::sub_assign": true,
  "<num::wrapping::Wrapping<u128> as ops::arith::SubAssign<&u128>>::sub_assign": true,
  "<num::wrapping::Wrapping<u128> as ops::arith::SubAssign<u128>>::sub_assign": true,
  "<num::wrapping::Wrapping<u128> as ops::arith::SubAssign>::sub_assign": true,
  "<num::wrapping::Wrapping<u128> as ops::bit::BitAnd<&num::wrapping::Wrapping<u128>>>::bitand": true,
  "<num::wrapping::Wrapping<u128> as ops::bit::BitAnd>::bitand": true,
  "<num::wrapping::Wrapping<u128> as ops::bit::BitAndAssign<&num::wrapping::Wrapping<u128>>>::bitand_assign": true,
  "<num::wrapping::Wrapping<u128> as ops::bit::BitAndAssign<&u128>>::bitand_assign": true,
  "<num::wrapping::Wrapping<u128> as ops::bit::BitAndAssign<u128>>::bitand_assign": true,
  "<num::wrapping::Wrapping<u128> as ops::bit::BitAndAssign>::bitand_assign": true,
  "<num::wrapping::Wrapping<u128> as ops::bit::BitOr<&num::wrapping::Wrapping<u128>>>::bitor": true,
  "<num::wrapping::Wrapping<u128> as ops::bit::BitOr>::bitor": true,
  "<num::wrapping::Wrapping<u128> as ops::bit::BitOrAssign<&num::wrapping::Wrapping<u128>>>::bitor_assign": true,
  "<num::wrapping::Wrapping<u128> as ops::bit::BitOrAssign<&u128>>::bitor_assign": true,
  "<num::wrapping::Wrapping<u128> as ops::bit::BitOrAssign<u128>>::bitor_assign": true,
  "<num::wrapping::Wrapping<u128> as ops::bit::BitOrAssign>::bitor_assign": true,
  "<num::wrapping::Wrapping<u128> as ops::bit::BitXor<&num::wrapping::Wrapping<u128>>>::bitxor": true,
  "<num::wrapping::Wrapping<u128> as ops::bit::BitXor>::bitxor": true,
  "<num::wrapping::Wrapping<u128> as ops::bit::BitXorAssign<&num::wrapping::Wrapping<u128>>>::bitxor_assign": true,
  "<num::wrapping::Wrapping<u128> as ops::bit::BitXorAssign<&u128>>::bitxor_assign": true,
  "<num::wrapping::Wrapping<u128> as ops::bit::BitXorAssign<u128>>::bitxor_assign": true,
  "<num::wrapping::Wrapping<u128> as ops::bit::BitXorAssign>::bitxor_assign": true,
  "<num::wrapping::Wrapping<u128> as ops::bit::Not>::not": true,
  "<num::wrapping::Wrapping<u128> as ops::bit::Shl<&usize>>::shl": true,
  "<num::wrapping::Wrapping<u128> as ops::bit::Shl<usize>>::shl": true,
  "<num::wrapping::Wrapping<u128> as ops::bit::ShlAssign<&usize>>::shl_assign": true,
  "<num::wrapping::Wrapping<u128> as ops::bit::ShlAssign<usize>>::shl_assign": true,
  "<num::wrapping::Wrapping<u128> as ops::bit::Shr<&usize>>::shr": true,
  "<num::wrapping::Wrapping<u128> as ops::bit::Shr<usize>>::shr": true,
  "<num::wrapping::Wrapping<u128> as ops::bit::ShrAssign<&usize>>::shr_assign": true,
  "<num::wrapping::Wrapping<u128> as ops::bit::ShrAssign<usize>>::shr_assign": true,
  "<num::wrapping::Wrapping<u16> as ops::arith::Add<&num::wrapping::Wrapping<u16>>>::add": true,
  "<num::wrapping::Wrapping<u16> as ops::arith::Add>::add": true,
  "<num::wrapping::Wrapping<u16> as ops::arith::AddAssign<&num::wrapping::Wrapping<u16>>>::add_assign": true,
  "<num::wrapping::Wrapping<u16> as ops::arith::AddAssign<&u16>>::add_assign": true,
  "<num::wrapping::Wrapping<u16> as ops::arith::AddAssign<u16>>::add_assign": true,
  "<num::wrapping::Wrapping<u16> as ops::arith::AddAssign>::add_assign": true,
  "<num::wrapping::Wrapping<u16> as ops::arith::Div<&num::wrapping::Wrapping<u16>>>::div": true,
  "<num::wrapping::Wrapping<u16> as ops::arith::Div>::div": true,
  "<num::wrapping::Wrapping<u16> as ops::arith::DivAssign<&num::wrapping::Wrapping<u16>>>::div_assign": true,
  "<num::wrapping::Wrapping<u16> as ops::arith::DivAssign<&u16>>::div_assign": true,
  "<num::wrapping::Wrapping<u16> as ops::arith::DivAssign<u16>>::div_assign": true,
  "<num::wrapping::Wrapping<u16> as ops::arith::DivAssign>::div_assign": true,
  "<num::wrapping::Wrapping<u16> as ops::arith::Mul<&num::wrapping::Wrapping<u16>>>::mul": true,
  "<num::wrapping::Wrapping<u16> as ops::arith::Mul>::mul": true,
  "<num::wrapping::Wrapping<u16> as ops::arith::MulAssign<&num::wrapping::Wrapping<u16>>>::mul_assign": true,
  "<num::wrapping::Wrapping<u16> as ops::arith::MulAssign<&u16>>::mul_assign": true,
  "<num::wrapping::Wrapping<u16> as ops::arith::MulAssign<u16>>::mul_assign": true,
  "<num::wrapping::Wrapping<u16> as ops::arith::MulAssign>::mul_assign": true,
  "<num::wrapping::Wrapping<u16> as ops::arith::Neg>::neg": true,
  "<num::wrapping::Wrapping<u16> as ops::arith::Rem<&num::wrapping::Wrapping<u16>>>::rem": true,
  "<num::wrapping::Wrapping<u16> as ops::arith::Rem>::rem": true,
  "<num::wrapping::Wrapping<u16> as ops::arith::RemAssign<&num::wrapping::Wrapping<u16>>>::rem_assign": true,
  "<num::wrapping::Wrapping<u16> as ops::arith::RemAssign<&u16>>::rem_assign": true,
  "<num::wrapping::Wrapping<u16> as ops::arith::RemAssign<u16>>::rem_assign": true,
  "<num::wrapping::Wrapping<u16> as ops::arith::RemAssign>::rem_assign": true,
  "<num::wrapping::Wrapping<u16> as ops::arith::Sub<&num::wrapping::Wrapping<u16>>>::sub": true,
  "<num::wrapping::Wrapping<u16> as ops::arith::Sub>::sub": true,
  "<num::wrapping::Wrapping<u16> as ops::arith::SubAssign<&num::wrapping::Wrapping<u16>>>::sub_assign": true,
  "<num::wrapping::Wrapping<u16> as ops::arith::SubAssign<&u16>>::sub_assign": true,
  "<num::wrapping::Wrapping<u16> as ops::arith::SubAssign<u16>>::sub_assign": true,
  "<num::wrapping::Wrapping<u16> as ops::arith::SubAssign>::sub_assign": true,
  "<num::wrapping::Wrapping<u16> as ops::bit::BitAnd<&num::wrapping::Wrapping<u16>>>::bitand": true,
  "<num::wrapping::Wrapping<u16> as ops::bit::BitAnd>::bitand": true,
  "<num::wrapping::Wrapping<u16> as ops::bit::BitAndAssign<&num::wrapping::Wrapping<u16>>>::bitand_assign": true,
  "<num::wrapping::Wrapping<u16> as ops::bit::BitAndAssign<&u16>>::bitand_assign": true,
  "<num::wrapping::Wrapping<u16> as ops::bit::BitAndAssign<u16>>::bitand_assign": true,
  "<num::wrapping::Wrapping<u16> as ops::bit::BitAndAssign>::bitand_assign": true,
  "<num::wrapping::Wrapping<u16> as ops::bit::BitOr<&num::wrapping::Wrapping<u16>>>::bitor": true,
  "<num::wrapping::Wrapping<u16> as ops::bit::BitOr>::bitor": true,
  "<num::wrapping::Wrapping<u16> as ops::bit::BitOrAssign<&num::wrapping::Wrapping<u16>>>::bitor_assign": true,
  "<num::wrapping::Wrapping<u16> as ops::bit::BitOrAssign<&u16>>::bitor_assign": true,
  "<num::wrapping::Wrapping<u16> as ops::bit::BitOrAssign<u16>>::bitor_assign": true,
  "<num::wrapping::Wrapping<u16> as ops::bit::BitOrAssign>::bitor_assign": true,
  "<num::wrapping::Wrapping<u16> as ops::bit::BitXor<&num::wrapping::Wrapping<u16>>>::bitxor": true,
  "<num::wrapping::Wrapping<u16> as ops::bit::BitXor>::bitxor": true,
  "<num::wrapping::Wrapping<u16> as ops::bit::BitXorAssign<&num::wrapping::Wrapping<u16>>>::bitxor_assign": true,
  "<num::wrapping::Wrapping<u16> as ops::bit::BitXorAssign<&u16>>::bitxor_assign": true,
  "<num::wrapping::Wrapping<u16> as ops::bit::BitXorAssign<u16>>::bitxor_assign": true,
  "<num::wrapping::Wrapping<u16> as ops::bit::BitXorAssign>::bitxor_assign": true,
  "<num::wrapping::Wrapping<u16> as ops::bit::Not>::not": true,
  "<num::wrapping::Wrapping<u16> as ops::bit::Shl<&usize>>::shl": true,
  "<num::wrapping::Wrapping<u16> as ops::bit::Shl<usize>>::shl": true,
  "<num::wrapping::Wrapping<u16> as ops::bit::ShlAssign<&usize>>::shl_assign": true,
  "<num::wrapping::Wrapping<u16> as ops::bit::ShlAssign<usize>>::shl_assign": true,
  "<num::wrapping::Wrapping<u16> as ops::bit::Shr<&usize>>::shr": true,
  "<num::wrapping::Wrapping<u16> as ops::bit::Shr<usize>>::shr": true,
  "<num::wrapping::Wrapping<u16> as ops::bit::ShrAssign<&usize>>::shr_assign": true,
  "<num::wrapping::Wrapping<u16> as ops::bit::ShrAssign<usize>>::shr_assign": true,
  "<num::wrapping::Wrapping<u32> as ops::arith::Add<&num::wrapping::Wrapping<u32>>>::add": true,
  "<num::wrapping::Wrapping<u32> as ops::arith::Add>::add": true,
  "<num::wrapping::Wrapping<u32> as ops::arith::AddAssign<&num::wrapping::Wrapping<u32>>>::add_assign": true,
  "<num::wrapping::Wrapping<u32> as ops::arith::AddAssign<&u32>>::add_assign": true,
  "<num::wrapping::Wrapping<u32> as ops::arith::AddAssign<u32>>::add_assign": true,
  "<num::wrapping::Wrapping<u32> as ops::arith::AddAssign>::add_assign": true,
  "<num::wrapping::Wrapping<u32> as ops::arith::Div<&num::wrapping::Wrapping<u32>>>::div": true,
  "<num::wrapping::Wrapping<u32> as ops::arith::Div>::div": true,
  "<num::wrapping::Wrapping<u32> as ops::arith::DivAssign<&num::wrapping::Wrapping<u32>>>::div_assign": true,
  "<num::wrapping::Wrapping<u32> as ops::arith::DivAssign<&u32>>::div_assign": true,
  "<num::wrapping::Wrapping<u32> as ops::arith::DivAssign<u32>>::div_assign": true,
  "<num::wrapping::Wrapping<u32> as ops::arith::DivAssign>::div_assign": true,
  "<num::wrapping::Wrapping<u32> as ops::arith::Mul<&num::wrapping::Wrapping<u32>>>::mul": true,
  "<num::wrapping::Wrapping<u32> as ops::arith::Mul>::mul": true,
  "<num::wrapping::Wrapping<u32> as ops::arith::MulAssign<&num::wrapping::Wrapping<u32>>>::mul_assign": true,
  "<num::wrapping::Wrapping<u32> as ops::arith::MulAssign<&u32>>::mul_assign": true,
  "<num::wrapping::Wrapping<u32> as ops::arith::MulAssign<u32>>::mul_assign": true,
  "<num::wrapping::Wrapping<u32> as ops::arith::MulAssign>::mul_assign": true,
  "<num::wrapping::Wrapping<u32> as ops::arith::Neg>::neg": true,
  "<num::wrapping::Wrapping<u32> as ops::arith::Rem<&num::wrapping::Wrapping<u32>>>::rem": true,
  "<num::wrapping::Wrapping<u32> as ops::arith::Rem>::rem": true,
  "<num::wrapping::Wrapping<u32> as ops::arith::RemAssign<&num::wrapping::Wrapping<u32>>>::rem_assign": true,
  "<num::wrapping::Wrapping<u32> as ops::arith::RemAssign<&u32>>::rem_assign": true,
  "<num::wrapping::Wrapping<u32> as ops::arith::RemAssign<u32>>::rem_assign": true,
  "<num::wrapping::Wrapping<u32> as ops::arith::RemAssign>::rem_assign": true,
  "<num::wrapping::Wrapping<u32> as ops::arith::Sub<&num::wrapping::Wrapping<u32>>>::sub": true,
  "<num::wrapping::Wrapping<u32> as ops::arith::Sub>::sub": true,
  "<num::wrapping::Wrapping<u32> as ops::arith::SubAssign<&num::wrapping::Wrapping<u32>>>::sub_assign": true,
  "<num::wrapping::Wrapping<u32> as ops::arith::SubAssign<&u32>>::sub_assign": true,
  "<num::wrapping::Wrapping<u32> as ops::arith::SubAssign<u32>>::sub_assign": true,
  "<num::wrapping::Wrapping<u32> as ops::arith::SubAssign>::sub_assign": true,
  "<num::wrapping::Wrapping<u32> as ops::bit::BitAnd<&num::wrapping::Wrapping<u32>>>::bitand": true,
  "<num::wrapping::Wrapping<u32> as ops::bit::BitAnd>::bitand": true,
  "<num::wrapping::Wrapping<u32> as ops::bit::BitAndAssign<&num::wrapping::Wrapping<u32>>>::bitand_assign": true,
  "<num::wrapping::Wrapping<u32> as ops::bit::BitAndAssign<&u32>>::bitand_assign": true,
  "<num::wrapping::Wrapping<u32> as ops::bit::BitAndAssign<u32>>::bitand_assign": true,
  "<num::wrapping::Wrapping<u32> as ops::bit::BitAndAssign>::bitand_assign": true,
  "<num::wrapping::Wrapping<u32> as ops::bit::BitOr<&num::wrapping::Wrapping<u32>>>::bitor": true,
  "<num::wrapping::Wrapping<u32> as ops::bit::BitOr>::bitor": true,
  "<num::wrapping::Wrapping<u32> as ops::bit::BitOrAssign<&num::wrapping::Wrapping<u32>>>::bitor_assign": true,
  "<num::wrapping::Wrapping<u32> as ops::bit::BitOrAssign<&u32>>::bitor_assign": true,
  "<num::wrapping::Wrapping<u32> as ops::bit::BitOrAssign<u32>>::bitor_assign": true,
  "<num::wrapping::Wrapping<u32> as ops::bit::BitOrAssign>::bitor_assign": true,
  "<num::wrapping::Wrapping<u32> as ops::bit::BitXor<&num::wrapping::Wrapping<u32>>>::bitxor": true,
  "<num::wrapping::Wrapping<u32> as ops::bit::BitXor>::bitxor": true,
  "<num::wrapping::Wrapping<u32> as ops::bit::BitXorAssign<&num::wrapping::Wrapping<u32>>>::bitxor_assign": true,
  "<num::wrapping::Wrapping<u32> as ops::bit::BitXorAssign<&u32>>::bitxor_assign": true,
  "<num::wrapping::Wrapping<u32> as ops::bit::BitXorAssign<u32>>::bitxor_assign": true,
  "<num::wrapping::Wrapping<u32> as ops::bit::BitXorAssign>::bitxor_assign": true,
  "<num::wrapping::Wrapping<u32> as ops::bit::Not>::not": true,
  "<num::wrapping::Wrapping<u32> as ops::bit::Shl<&usize>>::shl": true,
  "<num::wrapping::Wrapping<u32> as ops::bit::Shl<usize>>::shl": true,
  "<num::wrapping::Wrapping<u32> as ops::bit::ShlAssign<&usize>>::shl_assign": true,
  "<num::wrapping::Wrapping<u32> as ops::bit::ShlAssign<usize>>::shl_assign": true,
  "<num::wrapping::Wrapping<u32> as ops::bit::Shr<&usize>>::shr": true,
  "<num::wrapping::Wrapping<u32> as ops::bit::Shr<usize>>::shr": true,
  "<num::wrapping::Wrapping<u32> as ops::bit::ShrAssign<&usize>>::shr_assign": true,
  "<num::wrapping::Wrapping<u32> as ops::bit::ShrAssign<usize>>::shr_assign": true,
  "<num::wrapping::Wrapping<u64> as ops::arith::Add<&num::wrapping::Wrapping<u64>>>::add": true,
  "<num::wrapping::Wrapping<u64> as ops::arith::Add>::add": true,
  "<num::wrapping::Wrapping<u64> as ops::arith::AddAssign<&num::wrapping::Wrapping<u64>>>::add_assign": true,
  "<num::wrapping::Wrapping<u64> as ops::arith::AddAssign<&u64>>::add_assign": true,
  "<num::wrapping::Wrapping<u64> as ops::arith::AddAssign<u64>>::add_assign": true,
  "<num::wrapping::Wrapping<u64> as ops::arith::AddAssign>::add_assign": true,
  "<num::wrapping::Wrapping<u64> as ops::arith::Div<&num::wrapping::Wrapping<u64>>>::div": true,
  "<num::wrapping::Wrapping<u64> as ops::arith::Div>::div": true,
  "<num::wrapping::Wrapping<u64> as ops::arith::DivAssign<&num::wrapping::Wrapping<u64>>>::div_assign": true,
  "<num::wrapping::Wrapping<u64> as ops::arith::DivAssign<&u64>>::div_assign": true,
  "<num::wrapping::Wrapping<u64> as ops::arith::DivAssign<u64>>::div_assign": true,
  "<num::wrapping::Wrapping<u64> as ops::arith::DivAssign>::div_assign": true,
  "<num::wrapping::Wrapping<u64> as ops::arith::Mul<&num::wrapping::Wrapping<u64>>>::mul": true,
  "<num::wrapping::Wrapping<u64> as ops::arith::Mul>::mul": true,
  "<num::wrapping::Wrapping<u64> as ops::arith::MulAssign<&num::wrapping::Wrapping<u64>>>::mul_assign": true,
  "<num::wrapping::Wrapping<u64> as ops::arith::MulAssign<&u64>>::mul_assign": true,
  "<num::wrapping::Wrapping<u64> as ops::arith::MulAssign<u64>>::mul_assign": true,
  "<num::wrapping::Wrapping<u64> as ops::arith::MulAssign>::mul_assign": true,
  "<num::wrapping::Wrapping<u64> as ops::arith::Neg>::neg": true,
  "<num::wrapping::Wrapping<u64> as ops::arith::Rem<&num::wrapping::Wrapping<u64>>>::rem": true,
  "<num::wrapping::Wrapping<u64> as ops::arith::Rem>::rem": true,
  "<num::wrapping::Wrapping<u64> as ops::arith::RemAssign<&num::wrapping::Wrapping<u64>>>::rem_assign": true,
  "<num::wrapping::Wrapping<u64> as ops::arith::RemAssign<&u64>>::rem_assign": true,
  "<num::wrapping::Wrapping<u64> as ops::arith::RemAssign<u64>>::rem_assign": true,
  "<num::wrapping::Wrapping<u64> as ops::arith::RemAssign>::rem_assign": true,
  "<num::wrapping::Wrapping<u64> as ops::arith::Sub<&num::wrapping::Wrapping<u64>>>::sub": true,
  "<num::wrapping::Wrapping<u64> as ops::arith::Sub>::sub": true,
  "<num::wrapping::Wrapping<u64> as ops::arith::SubAssign<&num::wrapping::Wrapping<u64>>>::sub_assign": true,
  "<num::wrapping::Wrapping<u64> as ops::arith::SubAssign<&u64>>::sub_assign": true,
  "<num::wrapping::Wrapping<u64> as ops::arith::SubAssign<u64>>::sub_assign": true,
  "<num::wrapping::Wrapping<u64> as ops::arith::SubAssign>::sub_assign": true,
  "<num::wrapping::Wrapping<u64> as ops::bit::BitAnd<&num::wrapping::Wrapping<u64>>>::bitand": true,
  "<num::wrapping::Wrapping<u64> as ops::bit::BitAnd>::bitand": true,
  "<num::wrapping::Wrapping<u64> as ops::bit::BitAndAssign<&num::wrapping::Wrapping<u64>>>::bitand_assign": true,
  "<num::wrapping::Wrapping<u64> as ops::bit::BitAndAssign<&u64>>::bitand_assign": true,
  "<num::wrapping::Wrapping<u64> as ops::bit::BitAndAssign<u64>>::bitand_assign": true,
  "<num::wrapping::Wrapping<u64> as ops::bit::BitAndAssign>::bitand_assign": true,
  "<num::wrapping::Wrapping<u64> as ops::bit::BitOr<&num::wrapping::Wrapping<u64>>>::bitor": true,
  "<num::wrapping::Wrapping<u64> as ops::bit::BitOr>::bitor": true,
  "<num::wrapping::Wrapping<u64> as ops::bit::BitOrAssign<&num::wrapping::Wrapping<u64>>>::bitor_assign": true,
  "<num::wrapping::Wrapping<u64> as ops::bit::BitOrAssign<&u64>>::bitor_assign": true,
  "<num::wrapping::Wrapping<u64> as ops::bit::BitOrAssign<u64>>::bitor_assign": true,
  "<num::wrapping::Wrapping<u64> as ops::bit::BitOrAssign>::bitor_assign": true,
  "<num::wrapping::Wrapping<u64> as ops::bit::BitXor<&num::wrapping::Wrapping<u64>>>::bitxor": true,
  "<num::wrapping::Wrapping<u64> as ops::bit::BitXor>::bitxor": true,
  "<num::wrapping::Wrapping<u64> as ops::bit::BitXorAssign<&num::wrapping::Wrapping<u64>>>::bitxor_assign": true,
  "<num::wrapping::Wrapping<u64> as ops::bit::BitXorAssign<&u64>>::bitxor_assign": true,
  "<num::wrapping::Wrapping<u64> as ops::bit::BitXorAssign<u64>>::bitxor_assign": true,
  "<num::wrapping::Wrapping<u64> as ops::bit::BitXorAssign>::bitxor_assign": true,
  "<num::wrapping::Wrapping<u64> as ops::bit::Not>::not": true,
  "<num::wrapping::Wrapping<u64> as ops::bit::Shl<&usize>>::shl": true,
  "<num::wrapping::Wrapping<u64> as ops::bit::Shl<usize>>::shl": true,
  "<num::wrapping::Wrapping<u64> as ops::bit::ShlAssign<&usize>>::shl_assign": true,
  "<num::wrapping::Wrapping<u64> as ops::bit::ShlAssign<usize>>::shl_assign": true,
  "<num::wrapping::Wrapping<u64> as ops::bit::Shr<&usize>>::shr": true,
  "<num::wrapping::Wrapping<u64> as ops::bit::Shr<usize>>::shr": true,
  "<num::wrapping::Wrapping<u64> as ops::bit::ShrAssign<&usize>>::shr_assign": true,
  "<num::wrapping::Wrapping<u64> as ops::bit::ShrAssign<usize>>::shr_assign": true,
  "<num::wrapping::Wrapping<u8> as ops::arith::Add<&num::wrapping::Wrapping<u8>>>::add": true,
  "<num::wrapping::Wrapping<u8> as ops::arith::Add>::add": true,
  "<num::wrapping::Wrapping<u8> as ops::arith::AddAssign<&num::wrapping::Wrapping<u8>>>::add_assign": true,
  "<num::wrapping::Wrapping<u8> as ops::arith::AddAssign<&u8>>::add_assign": true,
  "<num::wrapping::Wrapping<u8> as ops::arith::AddAssign<u8>>::add_assign": true,
  "<num::wrapping::Wrapping<u8> as ops::arith::AddAssign>::add_assign": true,
  "<num::wrapping::Wrapping<u8> as ops::arith::Div<&num::wrapping::Wrapping<u8>>>::div": true,
  "<num::wrapping::Wrapping<u8> as ops::arith::Div>::div": true,
  "<num::wrapping::Wrapping<u8> as ops::arith::DivAssign<&num::wrapping::Wrapping<u8>>>::div_assign": true,
  "<num::wrapping::Wrapping<u8> as ops::arith::DivAssign<&u8>>::div_assign": true,
  "<num::wrapping::Wrapping<u8> as ops::arith::DivAssign<u8>>::div_assign": true,
  "<num::wrapping::Wrapping<u8> as ops::arith::DivAssign>::div_assign": true,
  "<num::wrapping::Wrapping<u8> as ops::arith::Mul<&num::wrapping::Wrapping<u8>>>::mul": true,
  "<num::wrapping::Wrapping<u8> as ops::arith::Mul>::mul": true,
  "<num::wrapping::Wrapping<u8> as ops::arith::MulAssign<&num::wrapping::Wrapping<u8>>>::mul_assign": true,
  "<num::wrapping::Wrapping<u8> as ops::arith::MulAssign<&u8>>::mul_assign": true,
  "<num::wrapping::Wrapping<u8> as ops::arith::MulAssign<u8>>::mul_assign": true,
  "<num::wrapping::Wrapping<u8> as ops::arith::MulAssign>::mul_assign": true,
  "<num::wrapping::Wrapping<u8> as ops::arith::Neg>::neg": true,
  "<num::wrapping::Wrapping<u8> as ops::arith::Rem<&num::wrapping::Wrapping<u8>>>::rem": true,
  "<num::wrapping::Wrapping<u8> as ops::arith::Rem>::rem": true,
  "<num::wrapping::Wrapping<u8> as ops::arith::RemAssign<&num::wrapping::Wrapping<u8>>>::rem_assign": true,
  "<num::wrapping::Wrapping<u8> as ops::arith::RemAssign<&u8>>::rem_assign": true,
  "<num::wrapping::Wrapping<u8> as ops::arith::RemAssign<u8>>::rem_assign": true,
  "<num::wrapping::Wrapping<u8> as ops::arith::RemAssign>::rem_assign": true,
  "<num::wrapping::Wrapping<u8> as ops::arith::Sub<&num::wrapping::Wrapping<u8>>>::sub": true,
  "<num::wrapping::Wrapping<u8> as ops::arith::Sub>::sub": true,
  "<num::wrapping::Wrapping<u8> as ops::arith::SubAssign<&num::wrapping::Wrapping<u8>>>::sub_assign": true,
  "<num::wrapping::Wrapping<u8> as ops::arith::SubAssign<&u8>>::sub_assign": true,
  "<num::wrapping::Wrapping<u8> as ops::arith::SubAssign<u8>>::sub_assign": true,
  "<num::wrapping::Wrapping<u8> as ops::arith::SubAssign>::sub_assign": true,
  "<num::wrapping::Wrapping<u8> as ops::bit::BitAnd<&num::wrapping::Wrapping<u8>>>::bitand": true,
  "<num::wrapping::Wrapping<u8> as ops::bit::BitAnd>::bitand": true,
  "<num::wrapping::Wrapping<u8> as ops::bit::BitAndAssign<&num::wrapping::Wrapping<u8>>>::bitand_assign": true,
  "<num::wrapping::Wrapping<u8> as ops::bit::BitAndAssign<&u8>>::bitand_assign": true,
  "<num::wrapping::Wrapping<u8> as ops::bit::BitAndAssign<u8>>::bitand_assign": true,
  "<num::wrapping::Wrapping<u8> as ops::bit::BitAndAssign>::bitand_assign": true,
  "<num::wrapping::Wrapping<u8> as ops::bit::BitOr<&num::wrapping::Wrapping<u8>>>::bitor": true,
  "<num::wrapping::Wrapping<u8> as ops::bit::BitOr>::bitor": true,
  "<num::wrapping::Wrapping<u8> as ops::bit::BitOrAssign<&num::wrapping::Wrapping<u8>>>::bitor_assign": true,
  "<num::wrapping::Wrapping<u8> as ops::bit::BitOrAssign<&u8>>::bitor_assign": true,
  "<num::wrapping::Wrapping<u8> as ops::bit::BitOrAssign<u8>>::bitor_assign": true,
  "<num::wrapping::Wrapping<u8> as ops::bit::BitOrAssign>::bitor_assign": true,
  "<num::wrapping::Wrapping<u8> as ops::bit::BitXor<&num::wrapping::Wrapping<u8>>>::bitxor": true,
  "<num::wrapping::Wrapping<u8> as ops::bit::BitXor>::bitxor": true,
  "<num::wrapping::Wrapping<u8> as ops::bit::BitXorAssign<&num::wrapping::Wrapping<u8>>>::bitxor_assign": true,
  "<num::wrapping::Wrapping<u8> as ops::bit::BitXorAssign<&u8>>::bitxor_assign": true,
  "<num::wrapping::Wrapping<u8> as ops::bit::BitXorAssign<u8>>::bitxor_assign": true,
  "<num::wrapping::Wrapping<u8> as ops::bit::BitXorAssign>::bitxor_assign": true,
  "<num::wrapping::Wrapping<u8> as ops::bit::Not>::not": true,
  "<num::wrapping::Wrapping<u8> as ops::bit::Shl<&usize>>::shl": true,
  "<num::wrapping::Wrapping<u8> as ops::bit::Shl<usize>>::shl": true,
  "<num::wrapping::Wrapping<u8> as ops::bit::ShlAssign<&usize>>::shl_assign": true,
  "<num::wrapping::Wrapping<u8> as ops::bit::ShlAssign<usize>>::shl_assign": true,
  "<num::wrapping::Wrapping<u8> as ops::bit::Shr<&usize>>::shr": true,
  "<num::wrapping::Wrapping<u8> as ops::bit::Shr<usize>>::shr": true,
  "<num::wrapping::Wrapping<u8> as ops::bit::ShrAssign<&usize>>::shr_assign": true,
  "<num::wrapping::Wrapping<u8> as ops::bit::ShrAssign<usize>>::shr_assign": true,
  "<num::wrapping::Wrapping<usize> as ops::arith::Add<&num::wrapping::Wrapping<usize>>>::add": true,
  "<num::wrapping::Wrapping<usize> as ops::arith::Add>::add": true,
  "<num::wrapping::Wrapping<usize> as ops::arith::AddAssign<&num::wrapping::Wrapping<usize>>>::add_assign": true,
  "<num::wrapping::Wrapping<usize> as ops::arith::AddAssign<&usize>>::add_assign": true,
  "<num::wrapping::Wrapping<usize> as ops::arith::AddAssign<usize>>::add_assign": true,
  "<num::wrapping::Wrapping<usize> as ops::arith::AddAssign>::add_assign": true,
  "<num::wrapping::Wrapping<usize> as ops::arith::Div<&num::wrapping::Wrapping<usize>>>::div": true,
  "<num::wrapping::Wrapping<usize> as ops::arith::Div>::div": true,
  "<num::wrapping::Wrapping<usize> as ops::arith::DivAssign<&num::wrapping::Wrapping<usize>>>::div_assign": true,
  "<num::wrapping::Wrapping<usize> as ops::arith::DivAssign<&usize>>::div_assign": true,
  "<num::wrapping::Wrapping<usize> as ops::arith::DivAssign<usize>>::div_assign": true,
  "<num::wrapping::Wrapping<usize> as ops::arith::DivAssign>::div_assign": true,
  "<num::wrapping::Wrapping<usize> as ops::arith::Mul<&num::wrapping::Wrapping<usize>>>::mul": true,
  "<num::wrapping::Wrapping<usize> as ops::arith::Mul>::mul": true,
  "<num::wrapping::Wrapping<usize> as ops::arith::MulAssign<&num::wrapping::Wrapping<usize>>>::mul_assign": true,
  "<num::wrapping::Wrapping<usize> as ops::arith::MulAssign<&usize>>::mul_assign": true,
  "<num::wrapping::Wrapping<usize> as ops::arith::MulAssign<usize>>::mul_assign": true,
  "<num::wrapping::Wrapping<usize> as ops::arith::MulAssign>::mul_assign": true,
  "<num::wrapping::Wrapping<usize> as ops::arith::Neg>::neg": true,
  "<num::wrapping::Wrapping<usize> as ops::arith::Rem<&num::wrapping::Wrapping<usize>>>::rem": true,
  "<num::wrapping::Wrapping<usize> as ops::arith::Rem>::rem": true,
  "<num::wrapping::Wrapping<usize> as ops::arith::RemAssign<&num::wrapping::Wrapping<usize>>>::rem_assign": true,
  "<num::wrapping::Wrapping<usize> as ops::arith::RemAssign<&usize>>::rem_assign": true,
  "<num::wrapping::Wrapping<usize> as ops::arith::RemAssign<usize>>::rem_assign": true,
  "<num::wrapping::Wrapping<usize> as ops::arith::RemAssign>::rem_assign": true,
  "<num::wrapping::Wrapping<usize> as ops::arith::Sub<&num::wrapping::Wrapping<usize>>>::sub": true,
  "<num::wrapping::Wrapping<usize> as ops::arith::Sub>::sub": true,
  "<num::wrapping::Wrapping<usize> as ops::arith::SubAssign<&num::wrapping::Wrapping<usize>>>::sub_assign": true,
  "<num::wrapping::Wrapping<usize> as ops::arith::SubAssign<&usize>>::sub_assign": true,
  "<num::wrapping::Wrapping<usize> as ops::arith::SubAssign<usize>>::sub_assign": true,
  "<num::wrapping::Wrapping<usize> as ops::arith::SubAssign>::sub_assign": true,
  "<num::wrapping::Wrapping<usize> as ops::bit::BitAnd<&num::wrapping::Wrapping<usize>>>::bitand": true,
  "<num::wrapping::Wrapping<usize> as ops::bit::BitAnd>::bitand": true,
  "<num::wrapping::Wrapping<usize> as ops::bit::BitAndAssign<&num::wrapping::Wrapping<usize>>>::bitand_assign": true,
  "<num::wrapping::Wrapping<usize> as ops::bit::BitAndAssign<&usize>>::bitand_assign": true,
  "<num::wrapping::Wrapping<usize> as ops::bit::BitAndAssign<usize>>::bitand_assign": true,
  "<num::wrapping::Wrapping<usize> as ops::bit::BitAndAssign>::bitand_assign": true,
  "<num::wrapping::Wrapping<usize> as ops::bit::BitOr<&num::wrapping::Wrapping<usize>>>::bitor": true,
  "<num::wrapping::Wrapping<usize> as ops::bit::BitOr>::bitor": true,
  "<num::wrapping::Wrapping<usize> as ops::bit::BitOrAssign<&num::wrapping::Wrapping<usize>>>::bitor_assign": true,
  "<num::wrapping::Wrapping<usize> as ops::bit::BitOrAssign<&usize>>::bitor_assign": true,
  "<num::wrapping::Wrapping<usize> as ops::bit::BitOrAssign<usize>>::bitor_assign": true,
  "<num::wrapping::Wrapping<usize> as ops::bit::BitOrAssign>::bitor_assign": true,
  "<num::wrapping::Wrapping<usize> as ops::bit::BitXor<&num::wrapping::Wrapping<usize>>>::bitxor": true,
  "<num::wrapping::Wrapping<usize> as ops::bit::BitXor>::bitxor": true,
  "<num::wrapping::Wrapping<usize> as ops::bit::BitXorAssign<&num::wrapping::Wrapping<usize>>>::bitxor_assign": true,
  "<num::wrapping::Wrapping<usize> as ops::bit::BitXorAssign<&usize>>::bitxor_assign": true,
  "<num::wrapping::Wrapping<usize> as ops::bit::BitXorAssign<usize>>::bitxor_assign": true,
  "<num::wrapping::Wrapping<usize> as ops::bit::BitXorAssign>::bitxor_assign": true,
  "<num::wrapping::Wrapping<usize> as ops::bit::Not>::not": true,
  "<num::wrapping::Wrapping<usize> as ops::bit::Shl<&usize>>::shl": true,
  "<num::wrapping::Wrapping<usize> as ops::bit::Shl<usize>>::shl": true,
  "<num::wrapping::Wrapping<usize> as ops::bit::ShlAssign<&usize>>::shl_assign": true,
  "<num::wrapping::Wrapping<usize> as ops::bit::ShlAssign<usize>>::shl_assign": true,
  "<num::wrapping::Wrapping<usize> as ops::bit::Shr<&usize>>::shr": true,
  "<num::wrapping::Wrapping<usize> as ops::bit::Shr<usize>>::shr": true,
  "<num::wrapping::Wrapping<usize> as ops::bit::ShrAssign<&usize>>::shr_assign": true,
  "<num::wrapping::Wrapping<usize> as ops::bit::ShrAssign<usize>>::shr_assign": true,
  "<ops::index_range::IndexRange as clone::Clone>::clone": true,
  "<ops::index_range::IndexRange as cmp::Eq>::assert_receiver_is_total_eq": true,
  "<ops::index_range::IndexRange as cmp::PartialEq>::eq": true,
  "<ops::index_range::IndexRange as iter::traits::double_ended::DoubleEndedIterator>::advance_back_by": true,
  "<ops::index_range::IndexRange as iter::traits::double_ended::DoubleEndedIterator>::next_back": true,
  "<ops::index_range::IndexRange as iter::traits::exact_size::ExactSizeIterator>::len": true,
  "<ops::index_range::IndexRange as iter::traits::iterator::Iterator>::advance_by": true,
  "<ops::index_range::IndexRange as iter::traits::iterator::Iterator>::next": true,
  "<ops::index_range::IndexRange as iter::traits::iterator::Iterator>::size_hint": true,
  "<ops::index_range::IndexRange as slice::index::SliceIndex<[T]>>::get_unchecked::precondition_check": true,
  "<ops::index_range::IndexRange as slice::index::SliceIndex<[T]>>::get_unchecked_mut::precondition_check": true,
  "<ops::range::Range<i128> as kani::KaniIntoIter>::kani_into_iter": true,
  "<ops::range::Range<i128> as kani::KaniIter>::assumption": true,
  "<ops::range::Range<i128> as kani::KaniIter>::first": true,
  "<ops::range::Range<i128> as kani::KaniIter>::len": true,
  "<ops::range::Range<i128> as kani::KaniIter>::nth": true,
  "<ops::range::Range<i16> as kani::KaniIntoIter>::kani_into_iter": true,
  "<ops::range::Range<i16> as kani::KaniIter>::assumption": true,
  "<ops::range::Range<i16> as kani::KaniIter>::first": true,
  "<ops::range::Range<i16> as kani::KaniIter>::len": true,
  "<ops::range::Range<i16> as kani::KaniIter>::nth": true,
  "<ops::range::Range<i32> as kani::KaniIntoIter>::kani_into_iter": true,
  "<ops::range::Range<i32> as kani::KaniIter>::assumption": true,
  "<ops::range::Range<i32> as kani::KaniIter>::first": true,
  "<ops::range::Range<i32> as kani::KaniIter>::len": true,
  "<ops::range::Range<i32> as kani::KaniIter>::nth": true,
  "<ops::range::Range<i64> as kani::KaniIntoIter>::kani_into_iter": true,
  "<ops::range::Range<i64> as kani::KaniIter>::assumption": true,
  "<ops::range::Range<i64> as kani::KaniIter>::first": true,
  "<ops::range::Range<i64> as kani::KaniIter>::len": true,
  "<ops::range::Range<i64> as kani::KaniIter>::nth": true,
  "<ops::range::Range<i8> as kani::KaniIntoIter>::kani_into_iter": true,
  "<ops::range::Range<i8> as kani::KaniIter>::assumption": true,
  "<ops::range::Range<i8> as kani::KaniIter>::first": true,
  "<ops::range::Range<i8> as kani::KaniIter>::len": true,
  "<ops::range::Range<i8> as kani::KaniIter>::nth": true,
  "<ops::range::Range<isize> as kani::KaniIntoIter>::kani_into_iter": true,
  "<ops::range::Range<isize> as kani::KaniIter>::assumption": true,
  "<ops::range::Range<isize> as kani::KaniIter>::first": true,
  "<ops::range::Range<isize> as kani::KaniIter>::len": true,
  "<ops::range::Range<isize> as kani::KaniIter>::nth": true,
  "<ops::range::Range<u128> as kani::KaniIntoIter>::kani_into_iter": true,
  "<ops::range::Range<u128> as kani::KaniIter>::assumption": true,
  "<ops::range::Range<u128> as kani::KaniIter>::first": true,
  "<ops::range::Range<u128> as kani::KaniIter>::len": true,
  "<ops::range::Range<u128> as kani::KaniIter>::nth": true,
  "<ops::range::Range<u16> as iter::adapters::step_by::SpecRangeSetup<ops::range::Range<u16>>>::setup": true,
  "<ops::range::Range<u16> as kani::KaniIntoIter>::kani_into_iter": true,
  "<ops::range::Range<u16> as kani::KaniIter>::assumption": true,
  "<ops::range::Range<u16> as kani::KaniIter>::first": true,
  "<ops::range::Range<u16> as kani::KaniIter>::len": true,
  "<ops::range::Range<u16> as kani::KaniIter>::nth": true,
  "<ops::range::Range<u32> as iter::adapters::step_by::SpecRangeSetup<ops::range::Range<u32>>>::setup": true,
  "<ops::range::Range<u32> as kani::KaniIntoIter>::kani_into_iter": true,
  "<ops::range::Range<u32> as kani::KaniIter>::assumption": true,
  "<ops::range::Range<u32> as kani::KaniIter>::first": true,
  "<ops::range::Range<u32> as kani::KaniIter>::len": true,
  "<ops::range::Range<u32> as kani::KaniIter>::nth": true,
  "<ops::range::Range<u64> as iter::adapters::step_by::SpecRangeSetup<ops::range::Range<u64>>>::setup": true,
  "<ops::range::Range<u64> as kani::KaniIntoIter>::kani_into_iter": true,
  "<ops::range::Range<u64> as kani::KaniIter>::assumption": true,
  "<ops::range::Range<u64> as kani::KaniIter>::first": true,
  "<ops::range::Range<u64> as kani::KaniIter>::len": true,
  "<ops::range::Range<u64> as kani::KaniIter>::nth": true,
  "<ops::range::Range<u8> as iter::adapters::step_by::SpecRangeSetup<ops::range::Range<u8>>>::setup": true,
  "<ops::range::Range<u8> as kani::KaniIntoIter>::kani_into_iter": true,
  "<ops::range::Range<u8> as kani::KaniIter>::assumption": true,
  "<ops::range::Range<u8> as kani::KaniIter>::first": true,
  "<ops::range::Range<u8> as kani::KaniIter>::len": true,
  "<ops::range::Range<u8> as kani::KaniIter>::nth": true,
  "<ops::range::Range<usize> as iter::adapters::step_by::SpecRangeSetup<ops::range::Range<usize>>>::setup": true,
  "<ops::range::Range<usize> as kani::KaniIntoIter>::kani_into_iter": true,
  "<ops::range::Range<usize> as kani::KaniIter>::assumption": true,
  "<ops::range::Range<usize> as kani::KaniIter>::first": true,
  "<ops::range::Range<usize> as kani::KaniIter>::len": true,
  "<ops::range::Range<usize> as kani::KaniIter>::nth": true,
  "<ops::range::Range<usize> as slice::GetDisjointMutIndex>::is_in_bounds": true,
  "<ops::range::Range<usize> as slice::GetDisjointMutIndex>::is_overlapping": true,
  "<ops::range::Range<usize> as slice::index::SliceIndex<[T]>>::get_unchecked::precondition_check": true,
  "<ops::range::Range<usize> as slice::index::SliceIndex<[T]>>::get_unchecked_mut::precondition_check": true,
  "<ops::range::RangeFull as clone::Clone>::clone": true,
  "<ops::range::RangeFull as cmp::Eq>::assert_receiver_is_total_eq": true,
  "<ops::range::RangeFull as cmp::PartialEq>::eq": true,
  "<ops::range::RangeFull as default::Default>::default": true,
  "<ops::range::RangeInclusive<usize> as slice::GetDisjointMutIndex>::is_in_bounds": true,
  "<ops::range::RangeInclusive<usize> as slice::GetDisjointMutIndex>::is_overlapping": true,
  "<os::fd::owned::OwnedFd as core::convert::From<fs::File>>::from": true,
  "<os::fd::owned::OwnedFd as core::convert::From<io::pipe::PipeReader>>::from": true,
  "<os::fd::owned::OwnedFd as core::convert::From<io::pipe::PipeWriter>>::from": true,
  "<os::fd::owned::OwnedFd as core::convert::From<net::tcp::TcpListener>>::from": true,
  "<os::fd::owned::OwnedFd as core::convert::From<net::tcp::TcpStream>>::from": true,
  "<os::fd::owned::OwnedFd as core::convert::From<net::udp::UdpSocket>>::from": true,
  "<os::fd::owned::OwnedFd as core::ops::Drop>::drop": true,
  "<os::fd::owned::OwnedFd as io::stdio::IsTerminal>::is_terminal": true,
  "<os::fd::owned::OwnedFd as os::fd::owned::AsFd>::as_fd": true,
  "<os::fd::owned::OwnedFd as os::fd::raw::AsRawFd>::as_raw_fd": true,
  "<os::fd::owned::OwnedFd as os::fd::raw::FromRawFd>::from_raw_fd": true,
  "<os::fd::owned::OwnedFd as os::fd::raw::IntoRawFd>::into_raw_fd": true,
  "<os::linux::process::PidFd as core::convert::From<os::fd::owned::OwnedFd>>::from": true,
  "<os::linux::process::PidFd as os::fd::owned::AsFd>::as_fd": true,
  "<os::linux::process::PidFd as os::fd::raw::AsRawFd>::as_raw_fd": true,
  "<os::linux::process::PidFd as os::fd::raw::FromRawFd>::from_raw_fd": true,
  "<os::linux::process::PidFd as os::fd::raw::IntoRawFd>::into_raw_fd": true,
  "<os::linux::process::PidFd as sys_common::AsInner<sys::pal::unix::linux::pidfd::PidFd>>::as_inner": true,
  "<os::linux::process::PidFd as sys_common::FromInner<sys::pal::unix::linux::pidfd::PidFd>>::from_inner": true,
  "<os::linux::process::PidFd as sys_common::IntoInner<sys::pal::unix::linux::pidfd::PidFd>>::into_inner": true,
  "<os::linux::raw::arch::stat as core::clone::Clone>::clone": true,
  "<os::unix::net::addr::SocketAddr as core::clone::Clone>::clone": true,
  "<os::unix::net::addr::SocketAddr as os::net::linux_ext::addr::SocketAddrExt>::as_abstract_name": true,
  "<os::unix::net::ancillary::SocketCred as core::clone::Clone>::clone": true,
  "<os::unix::net::datagram::UnixDatagram as core::convert::From<os::fd::owned::OwnedFd>>::from": true,
  "<os::unix::net::datagram::UnixDatagram as os::fd::owned::AsFd>::as_fd": true,
  "<os::unix::net::datagram::UnixDatagram as os::fd::raw::AsRawFd>::as_raw_fd": true,
  "<os::unix::net::datagram::UnixDatagram as os::fd::raw::FromRawFd>::from_raw_fd": true,
  "<os::unix::net::datagram::UnixDatagram as os::fd::raw::IntoRawFd>::into_raw_fd": true,
  "<os::unix::net::datagram::UnixDatagram as os::net::linux_ext::socket::UnixSocketExt>::passcred": true,
  "<os::unix::net::datagram::UnixDatagram as os::net::linux_ext::socket::UnixSocketExt>::set_passcred": true,
  "<os::unix::net::datagram::UnixDatagram as sys_common::AsInner<sys::net::connection::socket::unix::Socket>>::as_inner": true,
  "<os::unix::net::listener::UnixListener as core::convert::From<os::fd::owned::OwnedFd>>::from": true,
  "<os::unix::net::listener::UnixListener as os::fd::owned::AsFd>::as_fd": true,
  "<os::unix::net::listener::UnixListener as os::fd::raw::AsRawFd>::as_raw_fd": true,
  "<os::unix::net::listener::UnixListener as os::fd::raw::FromRawFd>::from_raw_fd": true,
  "<os::unix::net::listener::UnixListener as os::fd::raw::IntoRawFd>::into_raw_fd": true,
  "<os::unix::net::stream::UnixStream as core::convert::From<os::fd::owned::OwnedFd>>::from": true,
  "<os::unix::net::stream::UnixStream as io::Read>::is_read_vectored": true,
  "<os::unix::net::stream::UnixStream as io::Write>::flush": true,
  "<os::unix::net::stream::UnixStream as io::Write>::is_write_vectored": true,
  "<os::unix::net::stream::UnixStream as os::fd::owned::AsFd>::as_fd": true,
  "<os::unix::net::stream::UnixStream as os::fd::raw::AsRawFd>::as_raw_fd": true,
  "<os::unix::net::stream::UnixStream as os::fd::raw::FromRawFd>::from_raw_fd": true,
  "<os::unix::net::stream::UnixStream as os::fd::raw::IntoRawFd>::into_raw_fd": true,
  "<os::unix::net::stream::UnixStream as os::net::linux_ext::socket::UnixSocketExt>::passcred": true,
  "<os::unix::net::stream::UnixStream as os::net::linux_ext::socket::UnixSocketExt>::set_passcred": true,
  "<os::unix::net::stream::UnixStream as sys::pal::unix::kernel_copy::CopyRead>::properties": true,
  "<os::unix::net::stream::UnixStream as sys::pal::unix::kernel_copy::CopyWrite>::properties": true,
  "<os::unix::net::stream::UnixStream as sys_common::AsInner<sys::net::connection::socket::unix::Socket>>::as_inner": true,
  "<os::unix::net::ucred::UCred as core::clone::Clone>::clone": true,
  "<os::unix::net::ucred::UCred as core::cmp::Eq>::assert_receiver_is_total_eq": true,
  "<os::unix::net::ucred::UCred as core::cmp::PartialEq>::eq": true,
  "<panic::BacktraceStyle as core::clone::Clone>::clone": true,
  "<panic::BacktraceStyle as core::cmp::Eq>::assert_receiver_is_total_eq": true,
  "<panic::BacktraceStyle as core::cmp::PartialEq>::eq": true,
  "<panicking::Hook as core::default::Default>::default": true,
  "<path::NormalizeError as core::cmp::PartialEq>::eq": true,
  "<path::PathBuf as core::default::Default>::default": true,
  "<path::State as core::clone::Clone>::clone": true,
  "<path::State as core::cmp::PartialEq>::eq": true,
  "<path::State as core::cmp::PartialOrd>::partial_cmp": true,
  "<path::StripPrefixError as core::clone::Clone>::clone": true,
  "<path::StripPrefixError as core::cmp::Eq>::assert_receiver_is_total_eq": true,
  "<path::StripPrefixError as core::cmp::PartialEq>::eq": true,
  "<pe::AnonObjectHeader as rustc_std_workspace_core::clone::Clone>::clone": true,
  "<pe::AnonObjectHeaderBigobj as read::coff::file::CoffHeader>::characteristics": true,
  "<pe::AnonObjectHeaderBigobj as read::coff::file::CoffHeader>::is_type_bigobj": true,
  "<pe::AnonObjectHeaderBigobj as read::coff::file::CoffHeader>::machine": true,
  "<pe::AnonObjectHeaderBigobj as read::coff::file::CoffHeader>::number_of_sections": true,
  "<pe::AnonObjectHeaderBigobj as read::coff::file::CoffHeader>::number_of_symbols": true,
  "<pe::AnonObjectHeaderBigobj as read::coff::file::CoffHeader>::pointer_to_symbol_table": true,
  "<pe::AnonObjectHeaderBigobj as rustc_std_workspace_core::clone::Clone>::clone": true,
  "<pe::AnonObjectHeaderV2 as rustc_std_workspace_core::clone::Clone>::clone": true,
  "<pe::Guid as rustc_std_workspace_core::clone::Clone>::clone": true,
  "<pe::Guid as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq": true,
  "<pe::Guid as rustc_std_workspace_core::cmp::PartialEq>::eq": true,
  "<pe::ImageAlpha64RuntimeFunctionEntry as rustc_std_workspace_core::clone::Clone>::clone": true,
  "<pe::ImageAlphaRuntimeFunctionEntry as rustc_std_workspace_core::clone::Clone>::clone": true,
  "<pe::ImageArchitectureEntry as rustc_std_workspace_core::clone::Clone>::clone": true,
  "<pe::ImageArchiveMemberHeader as rustc_std_workspace_core::clone::Clone>::clone": true,
  "<pe::ImageArm64RuntimeFunctionEntry as rustc_std_workspace_core::clone::Clone>::clone": true,
  "<pe::ImageArmRuntimeFunctionEntry as rustc_std_workspace_core::clone::Clone>::clone": true,
  "<pe::ImageAuxSymbolCrc as rustc_std_workspace_core::clone::Clone>::clone": true,
  "<pe::ImageAuxSymbolFunction as rustc_std_workspace_core::clone::Clone>::clone": true,
  "<pe::ImageAuxSymbolFunctionBeginEnd as rustc_std_workspace_core::clone::Clone>::clone": true,
  "<pe::ImageAuxSymbolSection as rustc_std_workspace_core::clone::Clone>::clone": true,
  "<pe::ImageAuxSymbolTokenDef as rustc_std_workspace_core::clone::Clone>::clone": true,
  "<pe::ImageAuxSymbolWeak as rustc_std_workspace_core::clone::Clone>::clone": true,
  "<pe::ImageBaseRelocation as rustc_std_workspace_core::clone::Clone>::clone": true,
  "<pe::ImageBoundForwarderRef as rustc_std_workspace_core::clone::Clone>::clone": true,
  "<pe::ImageBoundImportDescriptor as rustc_std_workspace_core::clone::Clone>::clone": true,
  "<pe::ImageCoffSymbolsHeader as rustc_std_workspace_core::clone::Clone>::clone": true,
  "<pe::ImageCor20Header as rustc_std_workspace_core::clone::Clone>::clone": true,
  "<pe::ImageDataDirectory as rustc_std_workspace_core::clone::Clone>::clone": true,
  "<pe::ImageDebugDirectory as rustc_std_workspace_core::clone::Clone>::clone": true,
  "<pe::ImageDebugMisc as rustc_std_workspace_core::clone::Clone>::clone": true,
  "<pe::ImageDelayloadDescriptor as rustc_std_workspace_core::clone::Clone>::clone": true,
  "<pe::ImageDynamicRelocation32 as rustc_std_workspace_core::clone::Clone>::clone": true,
  "<pe::ImageDynamicRelocation32V2 as rustc_std_workspace_core::clone::Clone>::clone": true,
  "<pe::ImageDynamicRelocation64 as rustc_std_workspace_core::clone::Clone>::clone": true,
  "<pe::ImageDynamicRelocation64V2 as rustc_std_workspace_core::clone::Clone>::clone": true,
  "<pe::ImageDynamicRelocationTable as rustc_std_workspace_core::clone::Clone>::clone": true,
  "<pe::ImageEnclaveConfig32 as rustc_std_workspace_core::clone::Clone>::clone": true,
  "<pe::ImageEnclaveConfig64 as rustc_std_workspace_core::clone::Clone>::clone": true,
  "<pe::ImageEnclaveImport as rustc_std_workspace_core::clone::Clone>::clone": true,
  "<pe::ImageEpilogueDynamicRelocationHeader as rustc_std_workspace_core::clone::Clone>::clone": true,
  "<pe::ImageExportDirectory as rustc_std_workspace_core::clone::Clone>::clone": true,
  "<pe::ImageFileHeader as read::coff::file::CoffHeader>::characteristics": true,
  "<pe::ImageFileHeader as read::coff::file::CoffHeader>::is_type_bigobj": true,
  "<pe::ImageFileHeader as read::coff::file::CoffHeader>::machine": true,
  "<pe::ImageFileHeader as read::coff::file::CoffHeader>::number_of_sections": true,
  "<pe::ImageFileHeader as read::coff::file::CoffHeader>::number_of_symbols": true,
  "<pe::ImageFileHeader as read::coff::file::CoffHeader>::pointer_to_symbol_table": true,
  "<pe::ImageFileHeader as rustc_std_workspace_core::clone::Clone>::clone": true,
  "<pe::ImageFunctionEntry as rustc_std_workspace_core::clone::Clone>::clone": true,
  "<pe::ImageFunctionEntry64 as rustc_std_workspace_core::clone::Clone>::clone": true,
  "<pe::ImageHotPatchBase as rustc_std_workspace_core::clone::Clone>::clone": true,
  "<pe::ImageHotPatchHashes as rustc_std_workspace_core::clone::Clone>::clone": true,
  "<pe::ImageHotPatchInfo as rustc_std_workspace_core::clone::Clone>::clone": true,
  "<pe::ImageImportByName as rustc_std_workspace_core::clone::Clone>::clone": true,
  "<pe::ImageImportDescriptor as rustc_std_workspace_core::clone::Clone>::clone": true,
  "<pe::ImageLinenumber as rustc_std_workspace_core::clone::Clone>::clone": true,
  "<pe::ImageLoadConfigCodeIntegrity as rustc_std_workspace_core::clone::Clone>::clone": true,
  "<pe::ImageLoadConfigDirectory32 as rustc_std_workspace_core::clone::Clone>::clone": true,
  "<pe::ImageLoadConfigDirectory64 as rustc_std_workspace_core::clone::Clone>::clone": true,
  "<pe::ImageNtHeaders32 as read::pe::file::ImageNtHeaders>::file_header": true,
  "<pe::ImageNtHeaders32 as read::pe::file::ImageNtHeaders>::is_type_64": true,
  "<pe::ImageNtHeaders32 as read::pe::file::ImageNtHeaders>::is_valid_optional_magic": true,
  "<pe::ImageNtHeaders32 as read::pe::file::ImageNtHeaders>::optional_header": true,
  "<pe::ImageNtHeaders32 as read::pe::file::ImageNtHeaders>::signature": true,
  "<pe::ImageNtHeaders32 as rustc_std_workspace_core::clone::Clone>::clone": true,
  "<pe::ImageNtHeaders64 as read::pe::file::ImageNtHeaders>::file_header": true,
  "<pe::ImageNtHeaders64 as read::pe::file::ImageNtHeaders>::is_type_64": true,
  "<pe::ImageNtHeaders64 as read::pe::file::ImageNtHeaders>::is_valid_optional_magic": true,
  "<pe::ImageNtHeaders64 as read::pe::file::ImageNtHeaders>::optional_header": true,
  "<pe::ImageNtHeaders64 as read::pe::file::ImageNtHeaders>::signature": true,
  "<pe::ImageNtHeaders64 as rustc_std_workspace_core::clone::Clone>::clone": true,
  "<pe::ImageOptionalHeader32 as read::pe::file::ImageOptionalHeader>::address_of_entry_point": true,
  "<pe::ImageOptionalHeader32 as read::pe::file::ImageOptionalHeader>::base_of_code": true,
  "<pe::ImageOptionalHeader32 as read::pe::file::ImageOptionalHeader>::base_of_data": true,
  "<pe::ImageOptionalHeader32 as read::pe::file::ImageOptionalHeader>::check_sum": true,
  "<pe::ImageOptionalHeader32 as read::pe::file::ImageOptionalHeader>::dll_characteristics": true,
  "<pe::ImageOptionalHeader32 as read::pe::file::ImageOptionalHeader>::file_alignment": true,
  "<pe::ImageOptionalHeader32 as read::pe::file::ImageOptionalHeader>::image_base": true,
  "<pe::ImageOptionalHeader32 as read::pe::file::ImageOptionalHeader>::loader_flags": true,
  "<pe::ImageOptionalHeader32 as read::pe::file::ImageOptionalHeader>::magic": true,
  "<pe::ImageOptionalHeader32 as read::pe::file::ImageOptionalHeader>::major_image_version": true,
  "<pe::ImageOptionalHeader32 as read::pe::file::ImageOptionalHeader>::major_linker_version": true,
  "<pe::ImageOptionalHeader32 as read::pe::file::ImageOptionalHeader>::major_operating_system_version": true,
  "<pe::ImageOptionalHeader32 as read::pe::file::ImageOptionalHeader>::major_subsystem_version": true,
  "<pe::ImageOptionalHeader32 as read::pe::file::ImageOptionalHeader>::minor_image_version": true,
  "<pe::ImageOptionalHeader32 as read::pe::file::ImageOptionalHeader>::minor_linker_version": true,
  "<pe::ImageOptionalHeader32 as read::pe::file::ImageOptionalHeader>::minor_operating_system_version": true,
  "<pe::ImageOptionalHeader32 as read::pe::file::ImageOptionalHeader>::minor_subsystem_version": true,
  "<pe::ImageOptionalHeader32 as read::pe::file::ImageOptionalHeader>::number_of_rva_and_sizes": true,
  "<pe::ImageOptionalHeader32 as read::pe::file::ImageOptionalHeader>::section_alignment": true,
  "<pe::ImageOptionalHeader32 as read::pe::file::ImageOptionalHeader>::size_of_code": true,
  "<pe::ImageOptionalHeader32 as read::pe::file::ImageOptionalHeader>::size_of_headers": true,
  "<pe::ImageOptionalHeader32 as read::pe::file::ImageOptionalHeader>::size_of_heap_commit": true,
  "<pe::ImageOptionalHeader32 as read::pe::file::ImageOptionalHeader>::size_of_heap_reserve": true,
  "<pe::ImageOptionalHeader32 as read::pe::file::ImageOptionalHeader>::size_of_image": true,
  "<pe::ImageOptionalHeader32 as read::pe::file::ImageOptionalHeader>::size_of_initialized_data": true,
  "<pe::ImageOptionalHeader32 as read::pe::file::ImageOptionalHeader>::size_of_stack_commit": true,
  "<pe::ImageOptionalHeader32 as read::pe::file::ImageOptionalHeader>::size_of_stack_reserve": true,
  "<pe::ImageOptionalHeader32 as read::pe::file::ImageOptionalHeader>::size_of_uninitialized_data": true,
  "<pe::ImageOptionalHeader32 as read::pe::file::ImageOptionalHeader>::subsystem": true,
  "<pe::ImageOptionalHeader32 as read::pe::file::ImageOptionalHeader>::win32_version_value": true,
  "<pe::ImageOptionalHeader32 as rustc_std_workspace_core::clone::Clone>::clone": true,
  "<pe::ImageOptionalHeader64 as read::pe::file::ImageOptionalHeader>::address_of_entry_point": true,
  "<pe::ImageOptionalHeader64 as read::pe::file::ImageOptionalHeader>::base_of_code": true,
  "<pe::ImageOptionalHeader64 as read::pe::file::ImageOptionalHeader>::base_of_data": true,
  "<pe::ImageOptionalHeader64 as read::pe::file::ImageOptionalHeader>::check_sum": true,
  "<pe::ImageOptionalHeader64 as read::pe::file::ImageOptionalHeader>::dll_characteristics": true,
  "<pe::ImageOptionalHeader64 as read::pe::file::ImageOptionalHeader>::file_alignment": true,
  "<pe::ImageOptionalHeader64 as read::pe::file::ImageOptionalHeader>::image_base": true,
  "<pe::ImageOptionalHeader64 as read::pe::file::ImageOptionalHeader>::loader_flags": true,
  "<pe::ImageOptionalHeader64 as read::pe::file::ImageOptionalHeader>::magic": true,
  "<pe::ImageOptionalHeader64 as read::pe::file::ImageOptionalHeader>::major_image_version": true,
  "<pe::ImageOptionalHeader64 as read::pe::file::ImageOptionalHeader>::major_linker_version": true,
  "<pe::ImageOptionalHeader64 as read::pe::file::ImageOptionalHeader>::major_operating_system_version": true,
  "<pe::ImageOptionalHeader64 as read::pe::file::ImageOptionalHeader>::major_subsystem_version": true,
  "<pe::ImageOptionalHeader64 as read::pe::file::ImageOptionalHeader>::minor_image_version": true,
  "<pe::ImageOptionalHeader64 as read::pe::file::ImageOptionalHeader>::minor_linker_version": true,
  "<pe::ImageOptionalHeader64 as read::pe::file::ImageOptionalHeader>::minor_operating_system_version": true,
  "<pe::ImageOptionalHeader64 as read::pe::file::ImageOptionalHeader>::minor_subsystem_version": true,
  "<pe::ImageOptionalHeader64 as read::pe::file::ImageOptionalHeader>::number_of_rva_and_sizes": true,
  "<pe::ImageOptionalHeader64 as read::pe::file::ImageOptionalHeader>::section_alignment": true,
  "<pe::ImageOptionalHeader64 as read::pe::file::ImageOptionalHeader>::size_of_code": true,
  "<pe::ImageOptionalHeader64 as read::pe::file::ImageOptionalHeader>::size_of_headers": true,
  "<pe::ImageOptionalHeader64 as read::pe::file::ImageOptionalHeader>::size_of_heap_commit": true,
  "<pe::ImageOptionalHeader64 as read::pe::file::ImageOptionalHeader>::size_of_heap_reserve": true,
  "<pe::ImageOptionalHeader64 as read::pe::file::ImageOptionalHeader>::size_of_image": true,
  "<pe::ImageOptionalHeader64 as read::pe::file::ImageOptionalHeader>::size_of_initialized_data": true,
  "<pe::ImageOptionalHeader64 as read::pe::file::ImageOptionalHeader>::size_of_stack_commit": true,
  "<pe::ImageOptionalHeader64 as read::pe::file::ImageOptionalHeader>::size_of_stack_reserve": true,
  "<pe::ImageOptionalHeader64 as read::pe::file::ImageOptionalHeader>::size_of_uninitialized_data": true,
  "<pe::ImageOptionalHeader64 as read::pe::file::ImageOptionalHeader>::subsystem": true,
  "<pe::ImageOptionalHeader64 as read::pe::file::ImageOptionalHeader>::win32_version_value": true,
  "<pe::ImageOptionalHeader64 as rustc_std_workspace_core::clone::Clone>::clone": true,
  "<pe::ImageOs2Header as rustc_std_workspace_core::clone::Clone>::clone": true,
  "<pe::ImagePrologueDynamicRelocationHeader as rustc_std_workspace_core::clone::Clone>::clone": true,
  "<pe::ImageRelocation as rustc_std_workspace_core::clone::Clone>::clone": true,
  "<pe::ImageResourceDataEntry as rustc_std_workspace_core::clone::Clone>::clone": true,
  "<pe::ImageResourceDirStringU as rustc_std_workspace_core::clone::Clone>::clone": true,
  "<pe::ImageResourceDirectory as rustc_std_workspace_core::clone::Clone>::clone": true,
  "<pe::ImageResourceDirectoryEntry as rustc_std_workspace_core::clone::Clone>::clone": true,
  "<pe::ImageResourceDirectoryString as rustc_std_workspace_core::clone::Clone>::clone": true,
  "<pe::ImageRuntimeFunctionEntry as rustc_std_workspace_core::clone::Clone>::clone": true,
  "<pe::ImageSectionHeader as rustc_std_workspace_core::clone::Clone>::clone": true,
  "<pe::ImageSectionHeader as rustc_std_workspace_core::default::Default>::default": true,
  "<pe::ImageSymbol as read::coff::symbol::ImageSymbol>::number_of_aux_symbols": true,
  "<pe::ImageSymbol as read::coff::symbol::ImageSymbol>::raw_name": true,
  "<pe::ImageSymbol as read::coff::symbol::ImageSymbol>::section_number": true,
  "<pe::ImageSymbol as read::coff::symbol::ImageSymbol>::storage_class": true,
  "<pe::ImageSymbol as read::coff::symbol::ImageSymbol>::typ": true,
  "<pe::ImageSymbol as read::coff::symbol::ImageSymbol>::value": true,
  "<pe::ImageSymbol as rustc_std_workspace_core::clone::Clone>::clone": true,
  "<pe::ImageSymbolBytes as rustc_std_workspace_core::clone::Clone>::clone": true,
  "<pe::ImageSymbolEx as read::coff::symbol::ImageSymbol>::number_of_aux_symbols": true,
  "<pe::ImageSymbolEx as read::coff::symbol::ImageSymbol>::raw_name": true,
  "<pe::ImageSymbolEx as read::coff::symbol::ImageSymbol>::section_number": true,
  "<pe::ImageSymbolEx as read::coff::symbol::ImageSymbol>::storage_class": true,
  "<pe::ImageSymbolEx as read::coff::symbol::ImageSymbol>::typ": true,
  "<pe::ImageSymbolEx as read::coff::symbol::ImageSymbol>::value": true,
  "<pe::ImageSymbolEx as rustc_std_workspace_core::clone::Clone>::clone": true,
  "<pe::ImageSymbolExBytes as rustc_std_workspace_core::clone::Clone>::clone": true,
  "<pe::ImageThunkData32 as read::pe::import::ImageThunkData>::address": true,
  "<pe::ImageThunkData32 as read::pe::import::ImageThunkData>::is_ordinal": true,
  "<pe::ImageThunkData32 as read::pe::import::ImageThunkData>::ordinal": true,
  "<pe::ImageThunkData32 as read::pe::import::ImageThunkData>::raw": true,
  "<pe::ImageThunkData32 as rustc_std_workspace_core::clone::Clone>::clone": true,
  "<pe::ImageThunkData64 as read::pe::import::ImageThunkData>::address": true,
  "<pe::ImageThunkData64 as read::pe::import::ImageThunkData>::is_ordinal": true,
  "<pe::ImageThunkData64 as read::pe::import::ImageThunkData>::ordinal": true,
  "<pe::ImageThunkData64 as read::pe::import::ImageThunkData>::raw": true,
  "<pe::ImageThunkData64 as rustc_std_workspace_core::clone::Clone>::clone": true,
  "<pe::ImageTlsDirectory32 as rustc_std_workspace_core::clone::Clone>::clone": true,
  "<pe::ImageTlsDirectory64 as rustc_std_workspace_core::clone::Clone>::clone": true,
  "<pe::ImageVxdHeader as rustc_std_workspace_core::clone::Clone>::clone": true,
  "<pe::ImportObjectHeader as rustc_std_workspace_core::clone::Clone>::clone": true,
  "<pe::MaskedRichHeaderEntry as rustc_std_workspace_core::clone::Clone>::clone": true,
  "<pe::NonPagedDebugInfo as rustc_std_workspace_core::clone::Clone>::clone": true,
  "<process::Child as os::unix::process::ChildExt>::send_signal": true,
  "<process::Child as sys_common::AsInner<sys::process::unix::unix::Process>>::as_inner": true,
  "<process::Child as sys_common::IntoInner<sys::process::unix::unix::Process>>::into_inner": true,
  "<process::ChildStderr as io::Read>::is_read_vectored": true,
  "<process::ChildStderr as sys::pal::unix::kernel_copy::CopyRead>::properties": true,
  "<process::ChildStderr as sys_common::AsInner<sys::pal::unix::pipe::AnonPipe>>::as_inner": true,
  "<process::ChildStderr as sys_common::FromInner<sys::pal::unix::pipe::AnonPipe>>::from_inner": true,
  "<process::ChildStderr as sys_common::IntoInner<sys::pal::unix::pipe::AnonPipe>>::into_inner": true,
  "<process::ChildStdin as io::Write>::flush": true,
  "<process::ChildStdin as io::Write>::is_write_vectored": true,
  "<process::ChildStdin as sys::pal::unix::kernel_copy::CopyWrite>::properties": true,
  "<process::ChildStdin as sys_common::AsInner<sys::pal::unix::pipe::AnonPipe>>::as_inner": true,
  "<process::ChildStdin as sys_common::FromInner<sys::pal::unix::pipe::AnonPipe>>::from_inner": true,
  "<process::ChildStdin as sys_common::IntoInner<sys::pal::unix::pipe::AnonPipe>>::into_inner": true,
  "<process::ChildStdout as io::Read>::is_read_vectored": true,
  "<process::ChildStdout as sys::pal::unix::kernel_copy::CopyRead>::properties": true,
  "<process::ChildStdout as sys_common::AsInner<sys::pal::unix::pipe::AnonPipe>>::as_inner": true,
  "<process::ChildStdout as sys_common::FromInner<sys::pal::unix::pipe::AnonPipe>>::from_inner": true,
  "<process::ChildStdout as sys_common::IntoInner<sys::pal::unix::pipe::AnonPipe>>::into_inner": true,
  "<process::ExitCode as core::clone::Clone>::clone": true,
  "<process::ExitCode as core::cmp::PartialEq>::eq": true,
  "<process::ExitCode as core::convert::From<u8>>::from": true,
  "<process::ExitCode as core::default::Default>::default": true,
  "<process::ExitCode as process::Termination>::report": true,
  "<process::ExitCode as sys_common::AsInner<sys::process::unix::common::ExitCode>>::as_inner": true,
  "<process::ExitCode as sys_common::FromInner<sys::process::unix::common::ExitCode>>::from_inner": true,
  "<process::ExitStatus as core::clone::Clone>::clone": true,
  "<process::ExitStatus as core::cmp::Eq>::assert_receiver_is_total_eq": true,
  "<process::ExitStatus as core::cmp::PartialEq>::eq": true,
  "<process::ExitStatus as core::convert::From<process::ExitStatusError>>::from": true,
  "<process::ExitStatus as core::default::Default>::default": true,
  "<process::ExitStatus as os::unix::process::ExitStatusExt>::continued": true,
  "<process::ExitStatus as os::unix::process::ExitStatusExt>::core_dumped": true,
  "<process::ExitStatus as os::unix::process::ExitStatusExt>::from_raw": true,
  "<process::ExitStatus as os::unix::process::ExitStatusExt>::into_raw": true,
  "<process::ExitStatus as os::unix::process::ExitStatusExt>::signal": true,
  "<process::ExitStatus as os::unix::process::ExitStatusExt>::stopped_signal": true,
  "<process::ExitStatus as sys_common::AsInner<sys::process::unix::unix::ExitStatus>>::as_inner": true,
  "<process::ExitStatus as sys_common::FromInner<sys::process::unix::unix::ExitStatus>>::from_inner": true,
  "<process::ExitStatusError as core::clone::Clone>::clone": true,
  "<process::ExitStatusError as core::cmp::Eq>::assert_receiver_is_total_eq": true,
  "<process::ExitStatusError as core::cmp::PartialEq>::eq": true,
  "<process::ExitStatusError as os::unix::process::ExitStatusExt>::continued": true,
  "<process::ExitStatusError as os::unix::process::ExitStatusExt>::core_dumped": true,
  "<process::ExitStatusError as os::unix::process::ExitStatusExt>::from_raw": true,
  "<process::ExitStatusError as os::unix::process::ExitStatusExt>::into_raw": true,
  "<process::ExitStatusError as os::unix::process::ExitStatusExt>::signal": true,
  "<process::ExitStatusError as os::unix::process::ExitStatusExt>::stopped_signal": true,
  "<process::Stdio as core::convert::From<fs::File>>::from": true,
  "<process::Stdio as core::convert::From<io::pipe::PipeReader>>::from": true,
  "<process::Stdio as core::convert::From<io::pipe::PipeWriter>>::from": true,
  "<process::Stdio as core::convert::From<io::stdio::Stderr>>::from": true,
  "<process::Stdio as core::convert::From<process::ChildStderr>>::from": true,
  "<process::Stdio as core::convert::From<process::ChildStdin>>::from": true,
  "<process::Stdio as core::convert::From<process::ChildStdout>>::from": true,
  "<ptr::alignment::Alignment as clone::Clone>::clone": true,
  "<ptr::alignment::Alignment as cmp::Eq>::assert_receiver_is_total_eq": true,
  "<ptr::alignment::Alignment as cmp::Ord>::cmp": true,
  "<ptr::alignment::Alignment as cmp::PartialEq>::eq": true,
  "<ptr::alignment::Alignment as cmp::PartialOrd>::partial_cmp": true,
  "<ptr::alignment::Alignment as convert::TryFrom<num::nonzero::NonZero<usize>>>::try_from": true,
  "<ptr::alignment::Alignment as convert::TryFrom<usize>>::try_from": true,
  "<ptr::alignment::Alignment as default::Default>::default": true,
  "<ptr::alignment::Alignment as ub_checks::Invariant>::is_safe": true,
  "<ptr::alignment::AlignmentEnum as clone::Clone>::clone": true,
  "<ptr::alignment::AlignmentEnum as cmp::Eq>::assert_receiver_is_total_eq": true,
  "<ptr::alignment::AlignmentEnum as cmp::PartialEq>::eq": true,
  "<ptr::non_null::verify::SampleStruct as ptr::non_null::verify::SampleTrait>::get_value": true,
  "<ptr::non_null::verify::non_null_check_drop_in_place::Droppable as ops::drop::Drop>::drop": true,
  "<quote::HasIterator as std::ops::BitOr<quote::ThereIsNoIteratorInRepetition>>::bitor": true,
  "<quote::HasIterator as std::ops::BitOr>::bitor": true,
  "<quote::ThereIsNoIteratorInRepetition as std::ops::BitOr<quote::HasIterator>>::bitor": true,
  "<quote::ThereIsNoIteratorInRepetition as std::ops::BitOr>::bitor": true,
  "<random::DefaultRandomSource as core::clone::Clone>::clone": true,
  "<random::DefaultRandomSource as core::default::Default>::default": true,
  "<range::Range<usize> as slice::GetDisjointMutIndex>::is_in_bounds": true,
  "<range::Range<usize> as slice::GetDisjointMutIndex>::is_overlapping": true,
  "<range::RangeInclusive<usize> as slice::GetDisjointMutIndex>::is_in_bounds": true,
  "<range::RangeInclusive<usize> as slice::GetDisjointMutIndex>::is_overlapping": true,
  "<raw::Fallibility as rustc_std_workspace_core::clone::Clone>::clone": true,
  "<raw::ProbeSeq as rustc_std_workspace_core::clone::Clone>::clone": true,
  "<raw::TableLayout as rustc_std_workspace_core::clone::Clone>::clone": true,
  "<rc::Rc<str> as core::default::Default>::default": true,
  "<read::CompressedFileRange as rustc_std_workspace_core::clone::Clone>::clone": true,
  "<read::CompressedFileRange as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq": true,
  "<read::CompressedFileRange as rustc_std_workspace_core::cmp::PartialEq>::eq": true,
  "<read::CompressionFormat as rustc_std_workspace_core::clone::Clone>::clone": true,
  "<read::CompressionFormat as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq": true,
  "<read::CompressionFormat as rustc_std_workspace_core::cmp::PartialEq>::eq": true,
  "<read::Error as rustc_std_workspace_core::clone::Clone>::clone": true,
  "<read::Error as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq": true,
  "<read::Error as rustc_std_workspace_core::cmp::PartialEq>::eq": true,
  "<read::FileKind as rustc_std_workspace_core::clone::Clone>::clone": true,
  "<read::FileKind as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq": true,
  "<read::FileKind as rustc_std_workspace_core::cmp::PartialEq>::eq": true,
  "<read::ObjectKind as rustc_std_workspace_core::clone::Clone>::clone": true,
  "<read::ObjectKind as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq": true,
  "<read::ObjectKind as rustc_std_workspace_core::cmp::PartialEq>::eq": true,
  "<read::ObjectMap<'_> as rustc_std_workspace_core::default::Default>::default": true,
  "<read::ObjectMapEntry<'_> as rustc_std_workspace_core::default::Default>::default": true,
  "<read::RelocationMap as rustc_std_workspace_core::default::Default>::default": true,
  "<read::RelocationMapEntry as rustc_std_workspace_core::clone::Clone>::clone": true,
  "<read::RelocationMapEntry as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq": true,
  "<read::RelocationMapEntry as rustc_std_workspace_core::cmp::PartialEq>::eq": true,
  "<read::RelocationTarget as rustc_std_workspace_core::clone::Clone>::clone": true,
  "<read::RelocationTarget as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq": true,
  "<read::RelocationTarget as rustc_std_workspace_core::cmp::PartialEq>::eq": true,
  "<read::SectionIndex as rustc_std_workspace_core::clone::Clone>::clone": true,
  "<read::SectionIndex as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq": true,
  "<read::SectionIndex as rustc_std_workspace_core::cmp::PartialEq>::eq": true,
  "<read::StoreOnHeap as rustc_std_workspace_core::clone::Clone>::clone": true,
  "<read::StoreOnHeap as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq": true,
  "<read::StoreOnHeap as rustc_std_workspace_core::cmp::PartialEq>::eq": true,
  "<read::SymbolIndex as rustc_std_workspace_core::clone::Clone>::clone": true,
  "<read::SymbolIndex as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq": true,
  "<read::SymbolIndex as rustc_std_workspace_core::cmp::PartialEq>::eq": true,
  "<read::SymbolSection as rustc_std_workspace_core::clone::Clone>::clone": true,
  "<read::SymbolSection as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq": true,
  "<read::SymbolSection as rustc_std_workspace_core::cmp::PartialEq>::eq": true,
  "<read::abbrev::Abbreviations as rustc_std_workspace_core::default::Default>::default": true,
  "<read::abbrev::AbbreviationsCache as rustc_std_workspace_core::default::Default>::default": true,
  "<read::abbrev::AbbreviationsCacheStrategy as rustc_std_workspace_core::clone::Clone>::clone": true,
  "<read::abbrev::AbbreviationsCacheStrategy as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq": true,
  "<read::abbrev::AbbreviationsCacheStrategy as rustc_std_workspace_core::cmp::PartialEq>::eq": true,
  "<read::abbrev::AttributeSpecification as rustc_std_workspace_core::clone::Clone>::clone": true,
  "<read::abbrev::AttributeSpecification as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq": true,
  "<read::abbrev::AttributeSpecification as rustc_std_workspace_core::cmp::PartialEq>::eq": true,
  "<read::aranges::ArangeEntry as rustc_std_workspace_core::clone::Clone>::clone": true,
  "<read::aranges::ArangeEntry as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq": true,
  "<read::aranges::ArangeEntry as rustc_std_workspace_core::cmp::Ord>::cmp": true,
  "<read::aranges::ArangeEntry as rustc_std_workspace_core::cmp::PartialEq>::eq": true,
  "<read::aranges::ArangeEntry as rustc_std_workspace_core::cmp::PartialOrd>::partial_cmp": true,
  "<read::archive::ArchiveKind as rustc_std_workspace_core::clone::Clone>::clone": true,
  "<read::archive::ArchiveKind as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq": true,
  "<read::archive::ArchiveKind as rustc_std_workspace_core::cmp::PartialEq>::eq": true,
  "<read::archive::ArchiveOffset as rustc_std_workspace_core::clone::Clone>::clone": true,
  "<read::cfi::Augmentation as rustc_std_workspace_core::default::Default>::default": true,
  "<read::cfi::AugmentationData as rustc_std_workspace_core::clone::Clone>::clone": true,
  "<read::cfi::AugmentationData as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq": true,
  "<read::cfi::AugmentationData as rustc_std_workspace_core::cmp::PartialEq>::eq": true,
  "<read::cfi::AugmentationData as rustc_std_workspace_core::default::Default>::default": true,
  "<read::cfi::BaseAddresses as rustc_std_workspace_core::clone::Clone>::clone": true,
  "<read::cfi::BaseAddresses as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq": true,
  "<read::cfi::BaseAddresses as rustc_std_workspace_core::cmp::PartialEq>::eq": true,
  "<read::cfi::BaseAddresses as rustc_std_workspace_core::default::Default>::default": true,
  "<read::cfi::CieOffsetEncoding as rustc_std_workspace_core::clone::Clone>::clone": true,
  "<read::cfi::CieOffsetEncoding as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq": true,
  "<read::cfi::CieOffsetEncoding as rustc_std_workspace_core::cmp::PartialEq>::eq": true,
  "<read::cfi::Pointer as rustc_std_workspace_core::clone::Clone>::clone": true,
  "<read::cfi::Pointer as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq": true,
  "<read::cfi::Pointer as rustc_std_workspace_core::cmp::PartialEq>::eq": true,
  "<read::cfi::Pointer as rustc_std_workspace_core::default::Default>::default": true,
  "<read::cfi::SectionBaseAddresses as rustc_std_workspace_core::clone::Clone>::clone": true,
  "<read::cfi::SectionBaseAddresses as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq": true,
  "<read::cfi::SectionBaseAddresses as rustc_std_workspace_core::cmp::PartialEq>::eq": true,
  "<read::cfi::SectionBaseAddresses as rustc_std_workspace_core::default::Default>::default": true,
  "<read::coff::import::ImportType as rustc_std_workspace_core::clone::Clone>::clone": true,
  "<read::coff::import::ImportType as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq": true,
  "<read::coff::import::ImportType as rustc_std_workspace_core::cmp::PartialEq>::eq": true,
  "<read::coff::section::SectionTable<'_> as rustc_std_workspace_core::default::Default>::default": true,
  "<read::elf::relocation::Crel as rustc_std_workspace_core::clone::Clone>::clone": true,
  "<read::elf::relocation::CrelIteratorHeader as rustc_std_workspace_core::clone::Clone>::clone": true,
  "<read::elf::relocation::CrelIteratorState as rustc_std_workspace_core::clone::Clone>::clone": true,
  "<read::elf::relocation::CrelIteratorState as rustc_std_workspace_core::default::Default>::default": true,
  "<read::elf::relocation::RelocationSections as rustc_std_workspace_core::default::Default>::default": true,
  "<read::elf::version::Version<'_> as rustc_std_workspace_core::default::Default>::default": true,
  "<read::elf::version::VersionIndex as rustc_std_workspace_core::clone::Clone>::clone": true,
  "<read::elf::version::VersionIndex as rustc_std_workspace_core::default::Default>::default": true,
  "<read::index::IndexSectionId as rustc_std_workspace_core::clone::Clone>::clone": true,
  "<read::index::IndexSectionId as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq": true,
  "<read::index::IndexSectionId as rustc_std_workspace_core::cmp::PartialEq>::eq": true,
  "<read::index::UnitIndexSection as rustc_std_workspace_core::clone::Clone>::clone": true,
  "<read::index::UnitIndexSection as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq": true,
  "<read::index::UnitIndexSection as rustc_std_workspace_core::cmp::PartialEq>::eq": true,
  "<read::line::ColumnType as rustc_std_workspace_core::clone::Clone>::clone": true,
  "<read::line::ColumnType as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq": true,
  "<read::line::ColumnType as rustc_std_workspace_core::cmp::Ord>::cmp": true,
  "<read::line::ColumnType as rustc_std_workspace_core::cmp::PartialEq>::eq": true,
  "<read::line::ColumnType as rustc_std_workspace_core::cmp::PartialOrd>::partial_cmp": true,
  "<read::line::FileEntryFormat as rustc_std_workspace_core::clone::Clone>::clone": true,
  "<read::line::FileEntryFormat as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq": true,
  "<read::line::FileEntryFormat as rustc_std_workspace_core::cmp::PartialEq>::eq": true,
  "<read::line::LineRow as rustc_std_workspace_core::clone::Clone>::clone": true,
  "<read::line::LineRow as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq": true,
  "<read::line::LineRow as rustc_std_workspace_core::cmp::PartialEq>::eq": true,
  "<read::lists::ListsHeader as rustc_std_workspace_core::clone::Clone>::clone": true,
  "<read::lists::ListsHeader as rustc_std_workspace_core::default::Default>::default": true,
  "<read::loclists::LocListsFormat as rustc_std_workspace_core::clone::Clone>::clone": true,
  "<read::loclists::LocListsFormat as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq": true,
  "<read::loclists::LocListsFormat as rustc_std_workspace_core::cmp::PartialEq>::eq": true,
  "<read::macho::dyld_cache::RelocationStateV2 as rustc_std_workspace_core::clone::Clone>::clone": true,
  "<read::macho::dyld_cache::RelocationStateV2 as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq": true,
  "<read::macho::dyld_cache::RelocationStateV2 as rustc_std_workspace_core::cmp::PartialEq>::eq": true,
  "<read::macho::dyld_cache::RelocationStateV3 as rustc_std_workspace_core::clone::Clone>::clone": true,
  "<read::macho::dyld_cache::RelocationStateV3 as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq": true,
  "<read::macho::dyld_cache::RelocationStateV3 as rustc_std_workspace_core::cmp::PartialEq>::eq": true,
  "<read::macho::dyld_cache::RelocationStateV5 as rustc_std_workspace_core::clone::Clone>::clone": true,
  "<read::macho::dyld_cache::RelocationStateV5 as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq": true,
  "<read::macho::dyld_cache::RelocationStateV5 as rustc_std_workspace_core::cmp::PartialEq>::eq": true,
  "<read::pe::relocation::Relocation as rustc_std_workspace_core::clone::Clone>::clone": true,
  "<read::pe::relocation::Relocation as rustc_std_workspace_core::default::Default>::default": true,
  "<read::pe::relocation::RelocationBlockIterator<'_> as rustc_std_workspace_core::default::Default>::default": true,
  "<read::pe::resource::ResourceName as rustc_std_workspace_core::clone::Clone>::clone": true,
  "<read::pe::rich::RichHeaderEntry as rustc_std_workspace_core::clone::Clone>::clone": true,
  "<read::reader::ReaderOffsetId as rustc_std_workspace_core::clone::Clone>::clone": true,
  "<read::reader::ReaderOffsetId as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq": true,
  "<read::reader::ReaderOffsetId as rustc_std_workspace_core::cmp::PartialEq>::eq": true,
  "<read::rnglists::Range as rustc_std_workspace_core::clone::Clone>::clone": true,
  "<read::rnglists::Range as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq": true,
  "<read::rnglists::Range as rustc_std_workspace_core::cmp::Ord>::cmp": true,
  "<read::rnglists::Range as rustc_std_workspace_core::cmp::PartialEq>::eq": true,
  "<read::rnglists::Range as rustc_std_workspace_core::cmp::PartialOrd>::partial_cmp": true,
  "<read::rnglists::RangeListsFormat as rustc_std_workspace_core::clone::Clone>::clone": true,
  "<read::rnglists::RangeListsFormat as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq": true,
  "<read::rnglists::RangeListsFormat as rustc_std_workspace_core::cmp::PartialEq>::eq": true,
  "<read::rnglists::RawRange as rustc_std_workspace_core::clone::Clone>::clone": true,
  "<read::rnglists::RawRange as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq": true,
  "<read::rnglists::RawRange as rustc_std_workspace_core::cmp::PartialEq>::eq": true,
  "<read::traits::NoDynamicRelocationIterator as rustc_std_workspace_core::iter::Iterator>::next": true,
  "<read::util::ByteString<'_> as rustc_std_workspace_core::default::Default>::default": true,
  "<read::util::Bytes<'_> as rustc_std_workspace_core::default::Default>::default": true,
  "<read::util::sealed::CapacityFull as rustc_std_workspace_core::clone::Clone>::clone": true,
  "<read::value::Value as rustc_std_workspace_core::clone::Clone>::clone": true,
  "<read::value::Value as rustc_std_workspace_core::cmp::PartialEq>::eq": true,
  "<read::value::ValueType as rustc_std_workspace_core::clone::Clone>::clone": true,
  "<read::value::ValueType as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq": true,
  "<read::value::ValueType as rustc_std_workspace_core::cmp::PartialEq>::eq": true,
  "<rustc_std_workspace_std::ffi::CStr as CheckRaw>::char2raw_unit": true,
  "<rustc_std_workspace_std::ffi::CStr as Unescape>::char2unit": true,
  "<rustc_std_workspace_std::ffi::CStr as Unescape>::hex2unit": true,
  "<rustc_std_workspace_std::ffi::CStr as Unescape>::nonzero_byte2unit": true,
  "<rustc_std_workspace_std::ffi::CStr as Unescape>::unicode2unit": true,
  "<slice::GetDisjointMutError as clone::Clone>::clone": true,
  "<slice::GetDisjointMutError as cmp::Eq>::assert_receiver_is_total_eq": true,
  "<slice::GetDisjointMutError as cmp::PartialEq>::eq": true,
  "<slice::ascii::EscapeAscii<'a> as fmt::Display>::fmt::needs_escape": true,
  "<slice::ascii::EscapeByte as clone::Clone>::clone": true,
  "<slice::sort::stable::drift::DriftsortRun as clone::Clone>::clone": true,
  "<str as CheckRaw>::char2raw_unit": true,
  "<str as Unescape>::char2unit": true,
  "<str as Unescape>::hex2unit": true,
  "<str as Unescape>::nonzero_byte2unit": true,
  "<str as Unescape>::unicode2unit": true,
  "<str as fmt::Debug>::fmt::needs_escape": true,
  "<str::BytesIsNotEmpty as clone::Clone>::clone": true,
  "<str::CharEscapeDebugContinue as clone::Clone>::clone": true,
  "<str::CharEscapeDebugContinue as ops::function::Fn<(char,)>>::call": true,
  "<str::CharEscapeDebugContinue as ops::function::FnMut<(char,)>>::call_mut": true,
  "<str::CharEscapeDebugContinue as ops::function::FnOnce<(char,)>>::call_once": true,
  "<str::CharEscapeDefault as clone::Clone>::clone": true,
  "<str::CharEscapeDefault as ops::function::Fn<(char,)>>::call": true,
  "<str::CharEscapeDefault as ops::function::FnMut<(char,)>>::call_mut": true,
  "<str::CharEscapeDefault as ops::function::FnOnce<(char,)>>::call_once": true,
  "<str::CharEscapeUnicode as clone::Clone>::clone": true,
  "<str::CharEscapeUnicode as ops::function::Fn<(char,)>>::call": true,
  "<str::CharEscapeUnicode as ops::function::FnMut<(char,)>>::call_mut": true,
  "<str::CharEscapeUnicode as ops::function::FnOnce<(char,)>>::call_once": true,
  "<str::IsAsciiWhitespace as clone::Clone>::clone": true,
  "<str::IsNotEmpty as clone::Clone>::clone": true,
  "<str::IsWhitespace as clone::Clone>::clone": true,
  "<str::IsWhitespace as ops::function::Fn<(char,)>>::call": true,
  "<str::IsWhitespace as ops::function::FnMut<(char,)>>::call_mut": true,
  "<str::IsWhitespace as ops::function::FnOnce<(char,)>>::call_once": true,
  "<str::LinesMap as clone::Clone>::clone": true,
  "<str::UnsafeBytesToStr as clone::Clone>::clone": true,
  "<str::error::ParseBoolError as clone::Clone>::clone": true,
  "<str::error::ParseBoolError as cmp::Eq>::assert_receiver_is_total_eq": true,
  "<str::error::ParseBoolError as cmp::PartialEq>::eq": true,
  "<str::error::Utf8Error as clone::Clone>::clone": true,
  "<str::error::Utf8Error as cmp::Eq>::assert_receiver_is_total_eq": true,
  "<str::error::Utf8Error as cmp::PartialEq>::eq": true,
  "<str::pattern::EmptyNeedle as clone::Clone>::clone": true,
  "<str::pattern::MatchOnly as str::pattern::TwoWayStrategy>::matching": true,
  "<str::pattern::MatchOnly as str::pattern::TwoWayStrategy>::rejecting": true,
  "<str::pattern::MatchOnly as str::pattern::TwoWayStrategy>::use_early_reject": true,
  "<str::pattern::RejectAndMatch as str::pattern::TwoWayStrategy>::matching": true,
  "<str::pattern::RejectAndMatch as str::pattern::TwoWayStrategy>::rejecting": true,
  "<str::pattern::RejectAndMatch as str::pattern::TwoWayStrategy>::use_early_reject": true,
  "<str::pattern::SearchStep as clone::Clone>::clone": true,
  "<str::pattern::SearchStep as cmp::Eq>::assert_receiver_is_total_eq": true,
  "<str::pattern::SearchStep as cmp::PartialEq>::eq": true,
  "<str::pattern::StrSearcherImpl as clone::Clone>::clone": true,
  "<str::pattern::TwoWaySearcher as clone::Clone>::clone": true,
  "<string::String as core::convert::From<char>>::from": true,
  "<string::String as core::default::Default>::default": true,
  "<sync::Arc<core::ffi::CStr> as core::default::Default>::default": true,
  "<sync::Arc<str> as core::default::Default>::default": true,
  "<sync::WaitTimeoutResult as core::clone::Clone>::clone": true,
  "<sync::WaitTimeoutResult as core::cmp::Eq>::assert_receiver_is_total_eq": true,
  "<sync::WaitTimeoutResult as core::cmp::PartialEq>::eq": true,
  "<sync::atomic::AtomicBool as convert::From<bool>>::from": true,
  "<sync::atomic::AtomicBool as default::Default>::default": true,
  "<sync::atomic::AtomicI16 as convert::From<i16>>::from": true,
  "<sync::atomic::AtomicI16 as default::Default>::default": true,
  "<sync::atomic::AtomicI32 as convert::From<i32>>::from": true,
  "<sync::atomic::AtomicI32 as default::Default>::default": true,
  "<sync::atomic::AtomicI64 as convert::From<i64>>::from": true,
  "<sync::atomic::AtomicI64 as default::Default>::default": true,
  "<sync::atomic::AtomicI8 as convert::From<i8>>::from": true,
  "<sync::atomic::AtomicI8 as default::Default>::default": true,
  "<sync::atomic::AtomicIsize as convert::From<isize>>::from": true,
  "<sync::atomic::AtomicIsize as default::Default>::default": true,
  "<sync::atomic::AtomicU16 as convert::From<u16>>::from": true,
  "<sync::atomic::AtomicU16 as default::Default>::default": true,
  "<sync::atomic::AtomicU32 as convert::From<u32>>::from": true,
  "<sync::atomic::AtomicU32 as default::Default>::default": true,
  "<sync::atomic::AtomicU64 as convert::From<u64>>::from": true,
  "<sync::atomic::AtomicU64 as default::Default>::default": true,
  "<sync::atomic::AtomicU8 as convert::From<u8>>::from": true,
  "<sync::atomic::AtomicU8 as default::Default>::default": true,
  "<sync::atomic::AtomicUsize as convert::From<usize>>::from": true,
  "<sync::atomic::AtomicUsize as default::Default>::default": true,
  "<sync::atomic::Ordering as clone::Clone>::clone": true,
  "<sync::atomic::Ordering as cmp::Eq>::assert_receiver_is_total_eq": true,
  "<sync::atomic::Ordering as cmp::PartialEq>::eq": true,
  "<sync::mpmc::array::ArrayToken as core::default::Default>::default": true,
  "<sync::mpmc::list::ListToken as core::default::Default>::default": true,
  "<sync::mpmc::select::Operation as core::clone::Clone>::clone": true,
  "<sync::mpmc::select::Operation as core::cmp::Eq>::assert_receiver_is_total_eq": true,
  "<sync::mpmc::select::Operation as core::cmp::PartialEq>::eq": true,
  "<sync::mpmc::select::Selected as core::clone::Clone>::clone": true,
  "<sync::mpmc::select::Selected as core::cmp::Eq>::assert_receiver_is_total_eq": true,
  "<sync::mpmc::select::Selected as core::cmp::PartialEq>::eq": true,
  "<sync::mpmc::select::Selected as core::convert::From<usize>>::from": true,
  "<sync::mpmc::select::Selected as core::convert::Into<usize>>::into": true,
  "<sync::mpmc::select::Token as core::default::Default>::default": true,
  "<sync::mpmc::zero::ZeroToken as core::default::Default>::default": true,
  "<sync::mpsc::RecvError as core::clone::Clone>::clone": true,
  "<sync::mpsc::RecvError as core::cmp::Eq>::assert_receiver_is_total_eq": true,
  "<sync::mpsc::RecvError as core::cmp::PartialEq>::eq": true,
  "<sync::mpsc::RecvTimeoutError as core::clone::Clone>::clone": true,
  "<sync::mpsc::RecvTimeoutError as core::cmp::Eq>::assert_receiver_is_total_eq": true,
  "<sync::mpsc::RecvTimeoutError as core::cmp::PartialEq>::eq": true,
  "<sync::mpsc::RecvTimeoutError as core::convert::From<sync::mpsc::RecvError>>::from": true,
  "<sync::mpsc::TryRecvError as core::clone::Clone>::clone": true,
  "<sync::mpsc::TryRecvError as core::cmp::Eq>::assert_receiver_is_total_eq": true,
  "<sync::mpsc::TryRecvError as core::cmp::PartialEq>::eq": true,
  "<sync::mpsc::TryRecvError as core::convert::From<sync::mpsc::RecvError>>::from": true,
  "<sync::nonpoison::condvar::Condvar as core::default::Default>::default": true,
  "<sync::poison::Guard as core::clone::Clone>::clone": true,
  "<sync::poison::condvar::Condvar as core::default::Default>::default": true,
  "<sys::fd::unix::FileDesc as os::fd::owned::AsFd>::as_fd": true,
  "<sys::fd::unix::FileDesc as os::fd::raw::AsRawFd>::as_raw_fd": true,
  "<sys::fd::unix::FileDesc as os::fd::raw::FromRawFd>::from_raw_fd": true,
  "<sys::fd::unix::FileDesc as os::fd::raw::IntoRawFd>::into_raw_fd": true,
  "<sys::fd::unix::FileDesc as sys_common::AsInner<os::fd::owned::OwnedFd>>::as_inner": true,
  "<sys::fd::unix::FileDesc as sys_common::FromInner<os::fd::owned::OwnedFd>>::from_inner": true,
  "<sys::fd::unix::FileDesc as sys_common::IntoInner<os::fd::owned::OwnedFd>>::into_inner": true,
  "<sys::fs::unix::File as core::fmt::Debug>::fmt::get_mode": true,
  "<sys::fs::unix::File as core::fmt::Debug>::fmt::get_path": true,
  "<sys::fs::unix::File as os::fd::owned::AsFd>::as_fd": true,
  "<sys::fs::unix::File as os::fd::raw::AsRawFd>::as_raw_fd": true,
  "<sys::fs::unix::File as os::fd::raw::FromRawFd>::from_raw_fd": true,
  "<sys::fs::unix::File as os::fd::raw::IntoRawFd>::into_raw_fd": true,
  "<sys::fs::unix::File as sys_common::AsInner<sys::fd::unix::FileDesc>>::as_inner": true,
  "<sys::fs::unix::File as sys_common::AsInnerMut<sys::fd::unix::FileDesc>>::as_inner_mut": true,
  "<sys::fs::unix::File as sys_common::FromInner<sys::fd::unix::FileDesc>>::from_inner": true,
  "<sys::fs::unix::File as sys_common::IntoInner<sys::fd::unix::FileDesc>>::into_inner": true,
  "<sys::fs::unix::FileAttr as core::clone::Clone>::clone": true,
  "<sys::fs::unix::FileAttr as sys_common::AsInner<libc::stat64>>::as_inner": true,
  "<sys::fs::unix::FilePermissions as core::clone::Clone>::clone": true,
  "<sys::fs::unix::FilePermissions as core::cmp::Eq>::assert_receiver_is_total_eq": true,
  "<sys::fs::unix::FilePermissions as core::cmp::PartialEq>::eq": true,
  "<sys::fs::unix::FilePermissions as sys_common::FromInner<u32>>::from_inner": true,
  "<sys::fs::unix::FileTimes as core::clone::Clone>::clone": true,
  "<sys::fs::unix::FileTimes as core::default::Default>::default": true,
  "<sys::fs::unix::FileType as core::clone::Clone>::clone": true,
  "<sys::fs::unix::FileType as core::cmp::Eq>::assert_receiver_is_total_eq": true,
  "<sys::fs::unix::FileType as core::cmp::PartialEq>::eq": true,
  "<sys::fs::unix::Mode as core::clone::Clone>::clone": true,
  "<sys::fs::unix::OpenOptions as core::clone::Clone>::clone": true,
  "<sys::fs::unix::StatxExtraFields as core::clone::Clone>::clone": true,
  "<sys::fs::unix::cfm::CachedFileMetadata as io::Read>::is_read_vectored": true,
  "<sys::fs::unix::cfm::CachedFileMetadata as io::Write>::flush": true,
  "<sys::fs::unix::cfm::CachedFileMetadata as io::Write>::is_write_vectored": true,
  "<sys::fs::unix::cfm::CachedFileMetadata as sys::pal::unix::kernel_copy::CopyRead>::properties": true,
  "<sys::fs::unix::cfm::CachedFileMetadata as sys::pal::unix::kernel_copy::CopyWrite>::properties": true,
  "<sys::net::connection::socket::TcpListener as sys_common::FromInner<sys::net::connection::socket::unix::Socket>>::from_inner": true,
  "<sys::net::connection::socket::TcpStream as sys_common::AsInner<sys::net::connection::socket::unix::Socket>>::as_inner": true,
  "<sys::net::connection::socket::TcpStream as sys_common::FromInner<sys::net::connection::socket::unix::Socket>>::from_inner": true,
  "<sys::net::connection::socket::UdpSocket as sys_common::FromInner<sys::net::connection::socket::unix::Socket>>::from_inner": true,
  "<sys::net::connection::socket::unix::Socket as os::fd::owned::AsFd>::as_fd": true,
  "<sys::net::connection::socket::unix::Socket as os::fd::raw::AsRawFd>::as_raw_fd": true,
  "<sys::net::connection::socket::unix::Socket as os::fd::raw::FromRawFd>::from_raw_fd": true,
  "<sys::net::connection::socket::unix::Socket as os::fd::raw::IntoRawFd>::into_raw_fd": true,
  "<sys::net::connection::socket::unix::Socket as sys_common::AsInner<sys::fd::unix::FileDesc>>::as_inner": true,
  "<sys::net::connection::socket::unix::Socket as sys_common::FromInner<sys::fd::unix::FileDesc>>::from_inner": true,
  "<sys::net::connection::socket::unix::Socket as sys_common::IntoInner<sys::fd::unix::FileDesc>>::into_inner": true,
  "<sys::pal::unix::kernel_copy::FdHandle as core::cmp::PartialEq>::eq": true,
  "<sys::pal::unix::kernel_copy::SpliceMode as core::cmp::PartialEq>::eq": true,
  "<sys::pal::unix::linux::pidfd::PidFd as os::fd::raw::FromRawFd>::from_raw_fd": true,
  "<sys::pal::unix::linux::pidfd::PidFd as sys_common::AsInner<sys::fd::unix::FileDesc>>::as_inner": true,
  "<sys::pal::unix::linux::pidfd::PidFd as sys_common::FromInner<sys::fd::unix::FileDesc>>::from_inner": true,
  "<sys::pal::unix::linux::pidfd::PidFd as sys_common::IntoInner<sys::fd::unix::FileDesc>>::into_inner": true,
  "<sys::pal::unix::pipe::AnonPipe as os::fd::owned::AsFd>::as_fd": true,
  "<sys::pal::unix::pipe::AnonPipe as os::fd::raw::AsRawFd>::as_raw_fd": true,
  "<sys::pal::unix::pipe::AnonPipe as os::fd::raw::FromRawFd>::from_raw_fd": true,
  "<sys::pal::unix::pipe::AnonPipe as os::fd::raw::IntoRawFd>::into_raw_fd": true,
  "<sys::pal::unix::pipe::AnonPipe as sys_common::FromInner<sys::fd::unix::FileDesc>>::from_inner": true,
  "<sys::pal::unix::pipe::AnonPipe as sys_common::IntoInner<sys::fd::unix::FileDesc>>::into_inner": true,
  "<sys::pal::unix::stack_overflow::thread_info::UnlockOnDrop as core::ops::Drop>::drop": true,
  "<sys::pal::unix::thread::Thread as core::ops::Drop>::drop": true,
  "<sys::pal::unix::thread::cgroups::Cgroup as core::cmp::PartialEq>::eq": true,
  "<sys::pal::unix::time::Instant as core::clone::Clone>::clone": true,
  "<sys::pal::unix::time::Instant as core::cmp::Eq>::assert_receiver_is_total_eq": true,
  "<sys::pal::unix::time::Instant as core::cmp::Ord>::cmp": true,
  "<sys::pal::unix::time::Instant as core::cmp::PartialEq>::eq": true,
  "<sys::pal::unix::time::Instant as core::cmp::PartialOrd>::partial_cmp": true,
  "<sys::pal::unix::time::SystemTime as core::clone::Clone>::clone": true,
  "<sys::pal::unix::time::SystemTime as core::cmp::Eq>::assert_receiver_is_total_eq": true,
  "<sys::pal::unix::time::SystemTime as core::cmp::Ord>::cmp": true,
  "<sys::pal::unix::time::SystemTime as core::cmp::PartialEq>::eq": true,
  "<sys::pal::unix::time::SystemTime as core::cmp::PartialOrd>::partial_cmp": true,
  "<sys::pal::unix::time::Timespec as core::clone::Clone>::clone": true,
  "<sys::pal::unix::time::Timespec as core::cmp::Eq>::assert_receiver_is_total_eq": true,
  "<sys::pal::unix::time::Timespec as core::cmp::Ord>::cmp": true,
  "<sys::pal::unix::time::Timespec as core::cmp::PartialEq>::eq": true,
  "<sys::pal::unix::time::Timespec as core::cmp::PartialOrd>::partial_cmp": true,
  "<sys::process::env::CommandEnv as core::default::Default>::default": true,
  "<sys::process::unix::common::ExitCode as core::clone::Clone>::clone": true,
  "<sys::process::unix::common::ExitCode as core::cmp::Eq>::assert_receiver_is_total_eq": true,
  "<sys::process::unix::common::ExitCode as core::cmp::PartialEq>::eq": true,
  "<sys::process::unix::common::ExitCode as core::convert::From<u8>>::from": true,
  "<sys::process::unix::common::ProgramKind as core::clone::Clone>::clone": true,
  "<sys::process::unix::common::ProgramKind as core::cmp::Eq>::assert_receiver_is_total_eq": true,
  "<sys::process::unix::common::ProgramKind as core::cmp::PartialEq>::eq": true,
  "<sys::process::unix::common::Stdio as core::convert::From<io::stdio::Stderr>>::from": true,
  "<sys::process::unix::common::Stdio as core::convert::From<sys::fd::unix::FileDesc>>::from": true,
  "<sys::process::unix::common::Stdio as core::convert::From<sys::fs::unix::File>>::from": true,
  "<sys::process::unix::common::Stdio as core::convert::From<sys::pal::unix::pipe::AnonPipe>>::from": true,
  "<sys::process::unix::unix::ExitStatus as core::clone::Clone>::clone": true,
  "<sys::process::unix::unix::ExitStatus as core::cmp::Eq>::assert_receiver_is_total_eq": true,
  "<sys::process::unix::unix::ExitStatus as core::cmp::PartialEq>::eq": true,
  "<sys::process::unix::unix::ExitStatus as core::convert::From<i32>>::from": true,
  "<sys::process::unix::unix::ExitStatus as core::default::Default>::default": true,
  "<sys::process::unix::unix::ExitStatusError as core::clone::Clone>::clone": true,
  "<sys::process::unix::unix::ExitStatusError as core::cmp::Eq>::assert_receiver_is_total_eq": true,
  "<sys::process::unix::unix::ExitStatusError as core::cmp::PartialEq>::eq": true,
  "<sys::process::unix::unix::ExitStatusError as core::convert::Into<sys::process::unix::unix::ExitStatus>>::into": true,
  "<sys::stdio::unix::Stderr as io::Write>::flush": true,
  "<sys::stdio::unix::Stderr as io::Write>::is_write_vectored": true,
  "<sys::stdio::unix::Stdin as io::Read>::is_read_vectored": true,
  "<sys::stdio::unix::Stdout as io::Write>::flush": true,
  "<sys::stdio::unix::Stdout as io::Write>::is_write_vectored": true,
  "<sys::thread_local::abort_on_dtor_unwind::DtorUnwindGuard as core::ops::Drop>::drop": true,
  "<sys::thread_local::native::eager::State as core::clone::Clone>::clone": true,
  "<thread::PanicGuard as core::ops::Drop>::drop": true,
  "<thread::ThreadId as core::clone::Clone>::clone": true,
  "<thread::ThreadId as core::cmp::Eq>::assert_receiver_is_total_eq": true,
  "<thread::ThreadId as core::cmp::PartialEq>::eq": true,
  "<thread::local::AccessError as core::clone::Clone>::clone": true,
  "<thread::local::AccessError as core::cmp::Eq>::assert_receiver_is_total_eq": true,
  "<thread::local::AccessError as core::cmp::PartialEq>::eq": true,
  "<thread::spawnhook::ChildSpawnHooks as core::default::Default>::default": true,
  "<thread::spawnhook::SpawnHooks as core::default::Default>::default": true,
  "<time::Duration as clone::Clone>::clone": true,
  "<time::Duration as cmp::Eq>::assert_receiver_is_total_eq": true,
  "<time::Duration as cmp::Ord>::cmp": true,
  "<time::Duration as cmp::PartialEq>::eq": true,
  "<time::Duration as cmp::PartialOrd>::partial_cmp": true,
  "<time::Duration as default::Default>::default": true,
  "<time::Duration as ops::arith::Add>::add": true,
  "<time::Duration as ops::arith::AddAssign>::add_assign": true,
  "<time::Duration as ops::arith::Div<u32>>::div": true,
  "<time::Duration as ops::arith::DivAssign<u32>>::div_assign": true,
  "<time::Duration as ops::arith::Mul<u32>>::mul": true,
  "<time::Duration as ops::arith::MulAssign<u32>>::mul_assign": true,
  "<time::Duration as ops::arith::Sub>::sub": true,
  "<time::Duration as ops::arith::SubAssign>::sub_assign": true,
  "<time::Duration as ub_checks::Invariant>::is_safe": true,
  "<time::Instant as core::clone::Clone>::clone": true,
  "<time::Instant as core::cmp::Eq>::assert_receiver_is_total_eq": true,
  "<time::Instant as core::cmp::Ord>::cmp": true,
  "<time::Instant as core::cmp::PartialEq>::eq": true,
  "<time::Instant as core::cmp::PartialOrd>::partial_cmp": true,
  "<time::Instant as core::ops::Add<core::time::Duration>>::add": true,
  "<time::Instant as core::ops::AddAssign<core::time::Duration>>::add_assign": true,
  "<time::Instant as core::ops::Sub<core::time::Duration>>::sub": true,
  "<time::Instant as core::ops::Sub>::sub": true,
  "<time::Instant as core::ops::SubAssign<core::time::Duration>>::sub_assign": true,
  "<time::SystemTime as core::clone::Clone>::clone": true,
  "<time::SystemTime as core::cmp::Eq>::assert_receiver_is_total_eq": true,
  "<time::SystemTime as core::cmp::Ord>::cmp": true,
  "<time::SystemTime as core::cmp::PartialEq>::eq": true,
  "<time::SystemTime as core::cmp::PartialOrd>::partial_cmp": true,
  "<time::SystemTime as core::ops::Add<core::time::Duration>>::add": true,
  "<time::SystemTime as core::ops::AddAssign<core::time::Duration>>::add_assign": true,
  "<time::SystemTime as core::ops::Sub<core::time::Duration>>::sub": true,
  "<time::SystemTime as core::ops::SubAssign<core::time::Duration>>::sub_assign": true,
  "<time::SystemTime as sys_common::FromInner<sys::pal::unix::time::SystemTime>>::from_inner": true,
  "<time::SystemTime as sys_common::IntoInner<sys::pal::unix::time::SystemTime>>::into_inner": true,
  "<time::SystemTimeError as core::clone::Clone>::clone": true,
  "<time::TryFromFloatSecsError as clone::Clone>::clone": true,
  "<time::TryFromFloatSecsError as cmp::Eq>::assert_receiver_is_total_eq": true,
  "<time::TryFromFloatSecsError as cmp::PartialEq>::eq": true,
  "<time::TryFromFloatSecsErrorKind as clone::Clone>::clone": true,
  "<time::TryFromFloatSecsErrorKind as cmp::Eq>::assert_receiver_is_total_eq": true,
  "<time::TryFromFloatSecsErrorKind as cmp::PartialEq>::eq": true,
  "<u128 as default::Default>::default": true,
  "<u128 as int::traits::DInt>::hi": true,
  "<u128 as int::traits::DInt>::lo": true,
  "<u128 as intrinsics::fallback::CarryingMulAdd>::carrying_mul_add": true,
  "<u128 as intrinsics::fallback::FunnelShift>::unchecked_funnel_shl": true,
  "<u128 as intrinsics::fallback::FunnelShift>::unchecked_funnel_shr": true,
  "<u128 as iter::range::Step>::backward": true,
  "<u128 as iter::range::Step>::backward_checked": true,
  "<u128 as iter::range::Step>::forward": true,
  "<u128 as iter::range::Step>::forward_checked": true,
  "<u128 as iter::range::Step>::steps_between": true,
  "<u128 as math::libm_math::support::int_traits::CastInto<i128>>::cast": true,
  "<u128 as math::libm_math::support::int_traits::CastInto<i128>>::cast_lossy": true,
  "<u128 as math::libm_math::support::int_traits::CastInto<i16>>::cast": true,
  "<u128 as math::libm_math::support::int_traits::CastInto<i16>>::cast_lossy": true,
  "<u128 as math::libm_math::support::int_traits::CastInto<i32>>::cast": true,
  "<u128 as math::libm_math::support::int_traits::CastInto<i32>>::cast_lossy": true,
  "<u128 as math::libm_math::support::int_traits::CastInto<i64>>::cast": true,
  "<u128 as math::libm_math::support::int_traits::CastInto<i64>>::cast_lossy": true,
  "<u128 as math::libm_math::support::int_traits::CastInto<i8>>::cast": true,
  "<u128 as math::libm_math::support::int_traits::CastInto<i8>>::cast_lossy": true,
  "<u128 as math::libm_math::support::int_traits::CastInto<isize>>::cast": true,
  "<u128 as math::libm_math::support::int_traits::CastInto<isize>>::cast_lossy": true,
  "<u128 as math::libm_math::support::int_traits::CastInto<u128>>::cast": true,
  "<u128 as math::libm_math::support::int_traits::CastInto<u128>>::cast_lossy": true,
  "<u128 as math::libm_math::support::int_traits::CastInto<u16>>::cast": true,
  "<u128 as math::libm_math::support::int_traits::CastInto<u16>>::cast_lossy": true,
  "<u128 as math::libm_math::support::int_traits::CastInto<u32>>::cast": true,
  "<u128 as math::libm_math::support::int_traits::CastInto<u32>>::cast_lossy": true,
  "<u128 as math::libm_math::support::int_traits::CastInto<u64>>::cast": true,
  "<u128 as math::libm_math::support::int_traits::CastInto<u64>>::cast_lossy": true,
  "<u128 as math::libm_math::support::int_traits::CastInto<u8>>::cast": true,
  "<u128 as math::libm_math::support::int_traits::CastInto<u8>>::cast_lossy": true,
  "<u128 as math::libm_math::support::int_traits::CastInto<usize>>::cast": true,
  "<u128 as math::libm_math::support::int_traits::CastInto<usize>>::cast_lossy": true,
  "<u128 as math::libm_math::support::int_traits::DInt>::hi": true,
  "<u128 as math::libm_math::support::int_traits::DInt>::lo": true,
  "<u128 as math::libm_math::support::int_traits::Int>::abs": true,
  "<u128 as math::libm_math::support::int_traits::Int>::abs_diff": true,
  "<u128 as math::libm_math::support::int_traits::Int>::borrowing_sub": true,
  "<u128 as math::libm_math::support::int_traits::Int>::carrying_add": true,
  "<u128 as math::libm_math::support::int_traits::Int>::checked_add": true,
  "<u128 as math::libm_math::support::int_traits::Int>::checked_sub": true,
  "<u128 as math::libm_math::support::int_traits::Int>::from_bool": true,
  "<u128 as math::libm_math::support::int_traits::Int>::from_unsigned": true,
  "<u128 as math::libm_math::support::int_traits::Int>::ilog2": true,
  "<u128 as math::libm_math::support::int_traits::Int>::is_zero": true,
  "<u128 as math::libm_math::support::int_traits::Int>::leading_zeros": true,
  "<u128 as math::libm_math::support::int_traits::Int>::logical_shr": true,
  "<u128 as math::libm_math::support::int_traits::Int>::overflowing_add": true,
  "<u128 as math::libm_math::support::int_traits::Int>::overflowing_sub": true,
  "<u128 as math::libm_math::support::int_traits::Int>::rotate_left": true,
  "<u128 as math::libm_math::support::int_traits::Int>::signed": true,
  "<u128 as math::libm_math::support::int_traits::Int>::trailing_zeros": true,
  "<u128 as math::libm_math::support::int_traits::Int>::unsigned": true,
  "<u128 as math::libm_math::support::int_traits::Int>::unsigned_abs": true,
  "<u128 as math::libm_math::support::int_traits::Int>::wrapping_add": true,
  "<u128 as math::libm_math::support::int_traits::Int>::wrapping_mul": true,
  "<u128 as math::libm_math::support::int_traits::Int>::wrapping_neg": true,
  "<u128 as math::libm_math::support::int_traits::Int>::wrapping_shl": true,
  "<u128 as math::libm_math::support::int_traits::Int>::wrapping_shr": true,
  "<u128 as math::libm_math::support::int_traits::Int>::wrapping_sub": true,
  "<u128 as ops::arith::Add<&u128>>::add": true,
  "<u128 as ops::arith::Add>::add": true,
  "<u128 as ops::arith::AddAssign<&u128>>::add_assign": true,
  "<u128 as ops::arith::AddAssign>::add_assign": true,
  "<u128 as ops::arith::Div<&u128>>::div": true,
  "<u128 as ops::arith::Div>::div": true,
  "<u128 as ops::arith::DivAssign<&u128>>::div_assign": true,
  "<u128 as ops::arith::DivAssign>::div_assign": true,
  "<u128 as ops::arith::Mul<&u128>>::mul": true,
  "<u128 as ops::arith::Mul>::mul": true,
  "<u128 as ops::arith::MulAssign<&u128>>::mul_assign": true,
  "<u128 as ops::arith::MulAssign>::mul_assign": true,
  "<u128 as ops::arith::Rem<&u128>>::rem": true,
  "<u128 as ops::arith::Rem>::rem": true,
  "<u128 as ops::arith::RemAssign<&u128>>::rem_assign": true,
  "<u128 as ops::arith::RemAssign>::rem_assign": true,
  "<u128 as ops::arith::Sub<&u128>>::sub": true,
  "<u128 as ops::arith::Sub>::sub": true,
  "<u128 as ops::arith::SubAssign<&u128>>::sub_assign": true,
  "<u128 as ops::arith::SubAssign>::sub_assign": true,
  "<u128 as ops::bit::BitAnd<&u128>>::bitand": true,
  "<u128 as ops::bit::BitAnd>::bitand": true,
  "<u128 as ops::bit::BitAndAssign<&u128>>::bitand_assign": true,
  "<u128 as ops::bit::BitAndAssign>::bitand_assign": true,
  "<u128 as ops::bit::BitOr<&u128>>::bitor": true,
  "<u128 as ops::bit::BitOr>::bitor": true,
  "<u128 as ops::bit::BitOrAssign<&u128>>::bitor_assign": true,
  "<u128 as ops::bit::BitOrAssign>::bitor_assign": true,
  "<u128 as ops::bit::BitXor<&u128>>::bitxor": true,
  "<u128 as ops::bit::BitXor>::bitxor": true,
  "<u128 as ops::bit::BitXorAssign<&u128>>::bitxor_assign": true,
  "<u128 as ops::bit::BitXorAssign>::bitxor_assign": true,
  "<u128 as ops::bit::Not>::not": true,
  "<u128 as ops::bit::Shl<&i128>>::shl": true,
  "<u128 as ops::bit::Shl<&i16>>::shl": true,
  "<u128 as ops::bit::Shl<&i32>>::shl": true,
  "<u128 as ops::bit::Shl<&i64>>::shl": true,
  "<u128 as ops::bit::Shl<&i8>>::shl": true,
  "<u128 as ops::bit::Shl<&isize>>::shl": true,
  "<u128 as ops::bit::Shl<&u128>>::shl": true,
  "<u128 as ops::bit::Shl<&u16>>::shl": true,
  "<u128 as ops::bit::Shl<&u32>>::shl": true,
  "<u128 as ops::bit::Shl<&u64>>::shl": true,
  "<u128 as ops::bit::Shl<&u8>>::shl": true,
  "<u128 as ops::bit::Shl<&usize>>::shl": true,
  "<u128 as ops::bit::Shl<i128>>::shl": true,
  "<u128 as ops::bit::Shl<i16>>::shl": true,
  "<u128 as ops::bit::Shl<i32>>::shl": true,
  "<u128 as ops::bit::Shl<i64>>::shl": true,
  "<u128 as ops::bit::Shl<i8>>::shl": true,
  "<u128 as ops::bit::Shl<isize>>::shl": true,
  "<u128 as ops::bit::Shl<u16>>::shl": true,
  "<u128 as ops::bit::Shl<u32>>::shl": true,
  "<u128 as ops::bit::Shl<u64>>::shl": true,
  "<u128 as ops::bit::Shl<u8>>::shl": true,
  "<u128 as ops::bit::Shl<usize>>::shl": true,
  "<u128 as ops::bit::Shl>::shl": true,
  "<u128 as ops::bit::ShlAssign<&i128>>::shl_assign": true,
  "<u128 as ops::bit::ShlAssign<&i16>>::shl_assign": true,
  "<u128 as ops::bit::ShlAssign<&i32>>::shl_assign": true,
  "<u128 as ops::bit::ShlAssign<&i64>>::shl_assign": true,
  "<u128 as ops::bit::ShlAssign<&i8>>::shl_assign": true,
  "<u128 as ops::bit::ShlAssign<&isize>>::shl_assign": true,
  "<u128 as ops::bit::ShlAssign<&u128>>::shl_assign": true,
  "<u128 as ops::bit::ShlAssign<&u16>>::shl_assign": true,
  "<u128 as ops::bit::ShlAssign<&u32>>::shl_assign": true,
  "<u128 as ops::bit::ShlAssign<&u64>>::shl_assign": true,
  "<u128 as ops::bit::ShlAssign<&u8>>::shl_assign": true,
  "<u128 as ops::bit::ShlAssign<&usize>>::shl_assign": true,
  "<u128 as ops::bit::ShlAssign<i128>>::shl_assign": true,
  "<u128 as ops::bit::ShlAssign<i16>>::shl_assign": true,
  "<u128 as ops::bit::ShlAssign<i32>>::shl_assign": true,
  "<u128 as ops::bit::ShlAssign<i64>>::shl_assign": true,
  "<u128 as ops::bit::ShlAssign<i8>>::shl_assign": true,
  "<u128 as ops::bit::ShlAssign<isize>>::shl_assign": true,
  "<u128 as ops::bit::ShlAssign<u16>>::shl_assign": true,
  "<u128 as ops::bit::ShlAssign<u32>>::shl_assign": true,
  "<u128 as ops::bit::ShlAssign<u64>>::shl_assign": true,
  "<u128 as ops::bit::ShlAssign<u8>>::shl_assign": true,
  "<u128 as ops::bit::ShlAssign<usize>>::shl_assign": true,
  "<u128 as ops::bit::ShlAssign>::shl_assign": true,
  "<u128 as ops::bit::Shr<&i128>>::shr": true,
  "<u128 as ops::bit::Shr<&i16>>::shr": true,
  "<u128 as ops::bit::Shr<&i32>>::shr": true,
  "<u128 as ops::bit::Shr<&i64>>::shr": true,
  "<u128 as ops::bit::Shr<&i8>>::shr": true,
  "<u128 as ops::bit::Shr<&isize>>::shr": true,
  "<u128 as ops::bit::Shr<&u128>>::shr": true,
  "<u128 as ops::bit::Shr<&u16>>::shr": true,
  "<u128 as ops::bit::Shr<&u32>>::shr": true,
  "<u128 as ops::bit::Shr<&u64>>::shr": true,
  "<u128 as ops::bit::Shr<&u8>>::shr": true,
  "<u128 as ops::bit::Shr<&usize>>::shr": true,
  "<u128 as ops::bit::Shr<i128>>::shr": true,
  "<u128 as ops::bit::Shr<i16>>::shr": true,
  "<u128 as ops::bit::Shr<i32>>::shr": true,
  "<u128 as ops::bit::Shr<i64>>::shr": true,
  "<u128 as ops::bit::Shr<i8>>::shr": true,
  "<u128 as ops::bit::Shr<isize>>::shr": true,
  "<u128 as ops::bit::Shr<u16>>::shr": true,
  "<u128 as ops::bit::Shr<u32>>::shr": true,
  "<u128 as ops::bit::Shr<u64>>::shr": true,
  "<u128 as ops::bit::Shr<u8>>::shr": true,
  "<u128 as ops::bit::Shr<usize>>::shr": true,
  "<u128 as ops::bit::Shr>::shr": true,
  "<u128 as ops::bit::ShrAssign<&i128>>::shr_assign": true,
  "<u128 as ops::bit::ShrAssign<&i16>>::shr_assign": true,
  "<u128 as ops::bit::ShrAssign<&i32>>::shr_assign": true,
  "<u128 as ops::bit::ShrAssign<&i64>>::shr_assign": true,
  "<u128 as ops::bit::ShrAssign<&i8>>::shr_assign": true,
  "<u128 as ops::bit::ShrAssign<&isize>>::shr_assign": true,
  "<u128 as ops::bit::ShrAssign<&u128>>::shr_assign": true,
  "<u128 as ops::bit::ShrAssign<&u16>>::shr_assign": true,
  "<u128 as ops::bit::ShrAssign<&u32>>::shr_assign": true,
  "<u128 as ops::bit::ShrAssign<&u64>>::shr_assign": true,
  "<u128 as ops::bit::ShrAssign<&u8>>::shr_assign": true,
  "<u128 as ops::bit::ShrAssign<&usize>>::shr_assign": true,
  "<u128 as ops::bit::ShrAssign<i128>>::shr_assign": true,
  "<u128 as ops::bit::ShrAssign<i16>>::shr_assign": true,
  "<u128 as ops::bit::ShrAssign<i32>>::shr_assign": true,
  "<u128 as ops::bit::ShrAssign<i64>>::shr_assign": true,
  "<u128 as ops::bit::ShrAssign<i8>>::shr_assign": true,
  "<u128 as ops::bit::ShrAssign<isize>>::shr_assign": true,
  "<u128 as ops::bit::ShrAssign<u16>>::shr_assign": true,
  "<u128 as ops::bit::ShrAssign<u32>>::shr_assign": true,
  "<u128 as ops::bit::ShrAssign<u64>>::shr_assign": true,
  "<u128 as ops::bit::ShrAssign<u8>>::shr_assign": true,
  "<u128 as ops::bit::ShrAssign<usize>>::shr_assign": true,
  "<u128 as ops::bit::ShrAssign>::shr_assign": true,
  "<u128 as pat::RangePattern>::sub_one": true,
  "<u128 as string::SpecToString>::spec_to_string": true,
  "<u128 as to_tokens::ToTokens>::to_tokens": true,
  "<u128 as ub_checks::Invariant>::is_safe": true,
  "<u128 as vec::is_zero::IsZero>::is_zero": true,
  "<u16 as core_simd::masks::mask_impl::ReverseBits>::reverse_bits": true,
  "<u16 as default::Default>::default": true,
  "<u16 as int::traits::DInt>::hi": true,
  "<u16 as int::traits::DInt>::lo": true,
  "<u16 as int::traits::HInt>::widen": true,
  "<u16 as int::traits::HInt>::widen_hi": true,
  "<u16 as int::traits::HInt>::widen_mul": true,
  "<u16 as int::traits::HInt>::zero_widen": true,
  "<u16 as int::traits::HInt>::zero_widen_mul": true,
  "<u16 as intrinsics::fallback::CarryingMulAdd>::carrying_mul_add": true,
  "<u16 as intrinsics::fallback::FunnelShift>::unchecked_funnel_shl": true,
  "<u16 as intrinsics::fallback::FunnelShift>::unchecked_funnel_shr": true,
  "<u16 as iter::range::Step>::backward": true,
  "<u16 as iter::range::Step>::backward_checked": true,
  "<u16 as iter::range::Step>::forward": true,
  "<u16 as iter::range::Step>::forward_checked": true,
  "<u16 as iter::range::Step>::steps_between": true,
  "<u16 as math::libm_math::support::int_traits::CastInto<i128>>::cast": true,
  "<u16 as math::libm_math::support::int_traits::CastInto<i128>>::cast_lossy": true,
  "<u16 as math::libm_math::support::int_traits::CastInto<i16>>::cast": true,
  "<u16 as math::libm_math::support::int_traits::CastInto<i16>>::cast_lossy": true,
  "<u16 as math::libm_math::support::int_traits::CastInto<i32>>::cast": true,
  "<u16 as math::libm_math::support::int_traits::CastInto<i32>>::cast_lossy": true,
  "<u16 as math::libm_math::support::int_traits::CastInto<i64>>::cast": true,
  "<u16 as math::libm_math::support::int_traits::CastInto<i64>>::cast_lossy": true,
  "<u16 as math::libm_math::support::int_traits::CastInto<i8>>::cast": true,
  "<u16 as math::libm_math::support::int_traits::CastInto<i8>>::cast_lossy": true,
  "<u16 as math::libm_math::support::int_traits::CastInto<isize>>::cast": true,
  "<u16 as math::libm_math::support::int_traits::CastInto<isize>>::cast_lossy": true,
  "<u16 as math::libm_math::support::int_traits::CastInto<u128>>::cast": true,
  "<u16 as math::libm_math::support::int_traits::CastInto<u128>>::cast_lossy": true,
  "<u16 as math::libm_math::support::int_traits::CastInto<u16>>::cast": true,
  "<u16 as math::libm_math::support::int_traits::CastInto<u16>>::cast_lossy": true,
  "<u16 as math::libm_math::support::int_traits::CastInto<u32>>::cast": true,
  "<u16 as math::libm_math::support::int_traits::CastInto<u32>>::cast_lossy": true,
  "<u16 as math::libm_math::support::int_traits::CastInto<u64>>::cast": true,
  "<u16 as math::libm_math::support::int_traits::CastInto<u64>>::cast_lossy": true,
  "<u16 as math::libm_math::support::int_traits::CastInto<u8>>::cast": true,
  "<u16 as math::libm_math::support::int_traits::CastInto<u8>>::cast_lossy": true,
  "<u16 as math::libm_math::support::int_traits::CastInto<usize>>::cast": true,
  "<u16 as math::libm_math::support::int_traits::CastInto<usize>>::cast_lossy": true,
  "<u16 as math::libm_math::support::int_traits::DInt>::hi": true,
  "<u16 as math::libm_math::support::int_traits::DInt>::lo": true,
  "<u16 as math::libm_math::support::int_traits::HInt>::widen": true,
  "<u16 as math::libm_math::support::int_traits::HInt>::widen_hi": true,
  "<u16 as math::libm_math::support::int_traits::HInt>::widen_mul": true,
  "<u16 as math::libm_math::support::int_traits::HInt>::zero_widen": true,
  "<u16 as math::libm_math::support::int_traits::HInt>::zero_widen_mul": true,
  "<u16 as math::libm_math::support::int_traits::Int>::abs": true,
  "<u16 as math::libm_math::support::int_traits::Int>::abs_diff": true,
  "<u16 as math::libm_math::support::int_traits::Int>::borrowing_sub": true,
  "<u16 as math::libm_math::support::int_traits::Int>::carrying_add": true,
  "<u16 as math::libm_math::support::int_traits::Int>::checked_add": true,
  "<u16 as math::libm_math::support::int_traits::Int>::checked_sub": true,
  "<u16 as math::libm_math::support::int_traits::Int>::from_bool": true,
  "<u16 as math::libm_math::support::int_traits::Int>::from_unsigned": true,
  "<u16 as math::libm_math::support::int_traits::Int>::ilog2": true,
  "<u16 as math::libm_math::support::int_traits::Int>::is_zero": true,
  "<u16 as math::libm_math::support::int_traits::Int>::leading_zeros": true,
  "<u16 as math::libm_math::support::int_traits::Int>::logical_shr": true,
  "<u16 as math::libm_math::support::int_traits::Int>::overflowing_add": true,
  "<u16 as math::libm_math::support::int_traits::Int>::overflowing_sub": true,
  "<u16 as math::libm_math::support::int_traits::Int>::rotate_left": true,
  "<u16 as math::libm_math::support::int_traits::Int>::signed": true,
  "<u16 as math::libm_math::support::int_traits::Int>::trailing_zeros": true,
  "<u16 as math::libm_math::support::int_traits::Int>::unsigned": true,
  "<u16 as math::libm_math::support::int_traits::Int>::unsigned_abs": true,
  "<u16 as math::libm_math::support::int_traits::Int>::wrapping_add": true,
  "<u16 as math::libm_math::support::int_traits::Int>::wrapping_mul": true,
  "<u16 as math::libm_math::support::int_traits::Int>::wrapping_neg": true,
  "<u16 as math::libm_math::support::int_traits::Int>::wrapping_shl": true,
  "<u16 as math::libm_math::support::int_traits::Int>::wrapping_shr": true,
  "<u16 as math::libm_math::support::int_traits::Int>::wrapping_sub": true,
  "<u16 as net::parser::ReadNumberHelper>::checked_add": true,
  "<u16 as net::parser::ReadNumberHelper>::checked_mul": true,
  "<u16 as num::bignum::FullOps>::full_div_rem": true,
  "<u16 as num::bignum::FullOps>::full_mul_add": true,
  "<u16 as num::dec2flt::float::CastInto<i16>>::cast": true,
  "<u16 as ops::arith::Add<&u16>>::add": true,
  "<u16 as ops::arith::Add>::add": true,
  "<u16 as ops::arith::AddAssign<&u16>>::add_assign": true,
  "<u16 as ops::arith::AddAssign>::add_assign": true,
  "<u16 as ops::arith::Div<&u16>>::div": true,
  "<u16 as ops::arith::Div>::div": true,
  "<u16 as ops::arith::DivAssign<&u16>>::div_assign": true,
  "<u16 as ops::arith::DivAssign>::div_assign": true,
  "<u16 as ops::arith::Mul<&u16>>::mul": true,
  "<u16 as ops::arith::Mul>::mul": true,
  "<u16 as ops::arith::MulAssign<&u16>>::mul_assign": true,
  "<u16 as ops::arith::MulAssign>::mul_assign": true,
  "<u16 as ops::arith::Rem<&u16>>::rem": true,
  "<u16 as ops::arith::Rem>::rem": true,
  "<u16 as ops::arith::RemAssign<&u16>>::rem_assign": true,
  "<u16 as ops::arith::RemAssign>::rem_assign": true,
  "<u16 as ops::arith::Sub<&u16>>::sub": true,
  "<u16 as ops::arith::Sub>::sub": true,
  "<u16 as ops::arith::SubAssign<&u16>>::sub_assign": true,
  "<u16 as ops::arith::SubAssign>::sub_assign": true,
  "<u16 as ops::bit::BitAnd<&u16>>::bitand": true,
  "<u16 as ops::bit::BitAnd>::bitand": true,
  "<u16 as ops::bit::BitAndAssign<&u16>>::bitand_assign": true,
  "<u16 as ops::bit::BitAndAssign>::bitand_assign": true,
  "<u16 as ops::bit::BitOr<&u16>>::bitor": true,
  "<u16 as ops::bit::BitOr>::bitor": true,
  "<u16 as ops::bit::BitOrAssign<&u16>>::bitor_assign": true,
  "<u16 as ops::bit::BitOrAssign>::bitor_assign": true,
  "<u16 as ops::bit::BitXor<&u16>>::bitxor": true,
  "<u16 as ops::bit::BitXor>::bitxor": true,
  "<u16 as ops::bit::BitXorAssign<&u16>>::bitxor_assign": true,
  "<u16 as ops::bit::BitXorAssign>::bitxor_assign": true,
  "<u16 as ops::bit::Not>::not": true,
  "<u16 as ops::bit::Shl<&i128>>::shl": true,
  "<u16 as ops::bit::Shl<&i16>>::shl": true,
  "<u16 as ops::bit::Shl<&i32>>::shl": true,
  "<u16 as ops::bit::Shl<&i64>>::shl": true,
  "<u16 as ops::bit::Shl<&i8>>::shl": true,
  "<u16 as ops::bit::Shl<&isize>>::shl": true,
  "<u16 as ops::bit::Shl<&u128>>::shl": true,
  "<u16 as ops::bit::Shl<&u16>>::shl": true,
  "<u16 as ops::bit::Shl<&u32>>::shl": true,
  "<u16 as ops::bit::Shl<&u64>>::shl": true,
  "<u16 as ops::bit::Shl<&u8>>::shl": true,
  "<u16 as ops::bit::Shl<&usize>>::shl": true,
  "<u16 as ops::bit::Shl<i128>>::shl": true,
  "<u16 as ops::bit::Shl<i16>>::shl": true,
  "<u16 as ops::bit::Shl<i32>>::shl": true,
  "<u16 as ops::bit::Shl<i64>>::shl": true,
  "<u16 as ops::bit::Shl<i8>>::shl": true,
  "<u16 as ops::bit::Shl<isize>>::shl": true,
  "<u16 as ops::bit::Shl<u128>>::shl": true,
  "<u16 as ops::bit::Shl<u32>>::shl": true,
  "<u16 as ops::bit::Shl<u64>>::shl": true,
  "<u16 as ops::bit::Shl<u8>>::shl": true,
  "<u16 as ops::bit::Shl<usize>>::shl": true,
  "<u16 as ops::bit::Shl>::shl": true,
  "<u16 as ops::bit::ShlAssign<&i128>>::shl_assign": true,
  "<u16 as ops::bit::ShlAssign<&i16>>::shl_assign": true,
  "<u16 as ops::bit::ShlAssign<&i32>>::shl_assign": true,
  "<u16 as ops::bit::ShlAssign<&i64>>::shl_assign": true,
  "<u16 as ops::bit::ShlAssign<&i8>>::shl_assign": true,
  "<u16 as ops::bit::ShlAssign<&isize>>::shl_assign": true,
  "<u16 as ops::bit::ShlAssign<&u128>>::shl_assign": true,
  "<u16 as ops::bit::ShlAssign<&u16>>::shl_assign": true,
  "<u16 as ops::bit::ShlAssign<&u32>>::shl_assign": true,
  "<u16 as ops::bit::ShlAssign<&u64>>::shl_assign": true,
  "<u16 as ops::bit::ShlAssign<&u8>>::shl_assign": true,
  "<u16 as ops::bit::ShlAssign<&usize>>::shl_assign": true,
  "<u16 as ops::bit::ShlAssign<i128>>::shl_assign": true,
  "<u16 as ops::bit::ShlAssign<i16>>::shl_assign": true,
  "<u16 as ops::bit::ShlAssign<i32>>::shl_assign": true,
  "<u16 as ops::bit::ShlAssign<i64>>::shl_assign": true,
  "<u16 as ops::bit::ShlAssign<i8>>::shl_assign": true,
  "<u16 as ops::bit::ShlAssign<isize>>::shl_assign": true,
  "<u16 as ops::bit::ShlAssign<u128>>::shl_assign": true,
  "<u16 as ops::bit::ShlAssign<u32>>::shl_assign": true,
  "<u16 as ops::bit::ShlAssign<u64>>::shl_assign": true,
  "<u16 as ops::bit::ShlAssign<u8>>::shl_assign": true,
  "<u16 as ops::bit::ShlAssign<usize>>::shl_assign": true,
  "<u16 as ops::bit::ShlAssign>::shl_assign": true,
  "<u16 as ops::bit::Shr<&i128>>::shr": true,
  "<u16 as ops::bit::Shr<&i16>>::shr": true,
  "<u16 as ops::bit::Shr<&i32>>::shr": true,
  "<u16 as ops::bit::Shr<&i64>>::shr": true,
  "<u16 as ops::bit::Shr<&i8>>::shr": true,
  "<u16 as ops::bit::Shr<&isize>>::shr": true,
  "<u16 as ops::bit::Shr<&u128>>::shr": true,
  "<u16 as ops::bit::Shr<&u16>>::shr": true,
  "<u16 as ops::bit::Shr<&u32>>::shr": true,
  "<u16 as ops::bit::Shr<&u64>>::shr": true,
  "<u16 as ops::bit::Shr<&u8>>::shr": true,
  "<u16 as ops::bit::Shr<&usize>>::shr": true,
  "<u16 as ops::bit::Shr<i128>>::shr": true,
  "<u16 as ops::bit::Shr<i16>>::shr": true,
  "<u16 as ops::bit::Shr<i32>>::shr": true,
  "<u16 as ops::bit::Shr<i64>>::shr": true,
  "<u16 as ops::bit::Shr<i8>>::shr": true,
  "<u16 as ops::bit::Shr<isize>>::shr": true,
  "<u16 as ops::bit::Shr<u128>>::shr": true,
  "<u16 as ops::bit::Shr<u32>>::shr": true,
  "<u16 as ops::bit::Shr<u64>>::shr": true,
  "<u16 as ops::bit::Shr<u8>>::shr": true,
  "<u16 as ops::bit::Shr<usize>>::shr": true,
  "<u16 as ops::bit::Shr>::shr": true,
  "<u16 as ops::bit::ShrAssign<&i128>>::shr_assign": true,
  "<u16 as ops::bit::ShrAssign<&i16>>::shr_assign": true,
  "<u16 as ops::bit::ShrAssign<&i32>>::shr_assign": true,
  "<u16 as ops::bit::ShrAssign<&i64>>::shr_assign": true,
  "<u16 as ops::bit::ShrAssign<&i8>>::shr_assign": true,
  "<u16 as ops::bit::ShrAssign<&isize>>::shr_assign": true,
  "<u16 as ops::bit::ShrAssign<&u128>>::shr_assign": true,
  "<u16 as ops::bit::ShrAssign<&u16>>::shr_assign": true,
  "<u16 as ops::bit::ShrAssign<&u32>>::shr_assign": true,
  "<u16 as ops::bit::ShrAssign<&u64>>::shr_assign": true,
  "<u16 as ops::bit::ShrAssign<&u8>>::shr_assign": true,
  "<u16 as ops::bit::ShrAssign<&usize>>::shr_assign": true,
  "<u16 as ops::bit::ShrAssign<i128>>::shr_assign": true,
  "<u16 as ops::bit::ShrAssign<i16>>::shr_assign": true,
  "<u16 as ops::bit::ShrAssign<i32>>::shr_assign": true,
  "<u16 as ops::bit::ShrAssign<i64>>::shr_assign": true,
  "<u16 as ops::bit::ShrAssign<i8>>::shr_assign": true,
  "<u16 as ops::bit::ShrAssign<isize>>::shr_assign": true,
  "<u16 as ops::bit::ShrAssign<u128>>::shr_assign": true,
  "<u16 as ops::bit::ShrAssign<u32>>::shr_assign": true,
  "<u16 as ops::bit::ShrAssign<u64>>::shr_assign": true,
  "<u16 as ops::bit::ShrAssign<u8>>::shr_assign": true,
  "<u16 as ops::bit::ShrAssign<usize>>::shr_assign": true,
  "<u16 as ops::bit::ShrAssign>::shr_assign": true,
  "<u16 as pat::RangePattern>::sub_one": true,
  "<u16 as string::SpecToString>::spec_to_string": true,
  "<u16 as to_tokens::ToTokens>::to_tokens": true,
  "<u16 as ub_checks::Invariant>::is_safe": true,
  "<u16 as vec::is_zero::IsZero>::is_zero": true,
  "<u32 as core_simd::masks::mask_impl::ReverseBits>::reverse_bits": true,
  "<u32 as default::Default>::default": true,
  "<u32 as int::traits::DInt>::hi": true,
  "<u32 as int::traits::DInt>::lo": true,
  "<u32 as int::traits::HInt>::widen": true,
  "<u32 as int::traits::HInt>::widen_hi": true,
  "<u32 as int::traits::HInt>::widen_mul": true,
  "<u32 as int::traits::HInt>::zero_widen": true,
  "<u32 as int::traits::HInt>::zero_widen_mul": true,
  "<u32 as intrinsics::fallback::CarryingMulAdd>::carrying_mul_add": true,
  "<u32 as intrinsics::fallback::FunnelShift>::unchecked_funnel_shl": true,
  "<u32 as intrinsics::fallback::FunnelShift>::unchecked_funnel_shr": true,
  "<u32 as iter::range::Step>::backward": true,
  "<u32 as iter::range::Step>::backward_checked": true,
  "<u32 as iter::range::Step>::forward": true,
  "<u32 as iter::range::Step>::forward_checked": true,
  "<u32 as iter::range::Step>::steps_between": true,
  "<u32 as math::libm_math::support::int_traits::CastInto<i128>>::cast": true,
  "<u32 as math::libm_math::support::int_traits::CastInto<i128>>::cast_lossy": true,
  "<u32 as math::libm_math::support::int_traits::CastInto<i16>>::cast": true,
  "<u32 as math::libm_math::support::int_traits::CastInto<i16>>::cast_lossy": true,
  "<u32 as math::libm_math::support::int_traits::CastInto<i32>>::cast": true,
  "<u32 as math::libm_math::support::int_traits::CastInto<i32>>::cast_lossy": true,
  "<u32 as math::libm_math::support::int_traits::CastInto<i64>>::cast": true,
  "<u32 as math::libm_math::support::int_traits::CastInto<i64>>::cast_lossy": true,
  "<u32 as math::libm_math::support::int_traits::CastInto<i8>>::cast": true,
  "<u32 as math::libm_math::support::int_traits::CastInto<i8>>::cast_lossy": true,
  "<u32 as math::libm_math::support::int_traits::CastInto<isize>>::cast": true,
  "<u32 as math::libm_math::support::int_traits::CastInto<isize>>::cast_lossy": true,
  "<u32 as math::libm_math::support::int_traits::CastInto<u128>>::cast": true,
  "<u32 as math::libm_math::support::int_traits::CastInto<u128>>::cast_lossy": true,
  "<u32 as math::libm_math::support::int_traits::CastInto<u16>>::cast": true,
  "<u32 as math::libm_math::support::int_traits::CastInto<u16>>::cast_lossy": true,
  "<u32 as math::libm_math::support::int_traits::CastInto<u32>>::cast": true,
  "<u32 as math::libm_math::support::int_traits::CastInto<u32>>::cast_lossy": true,
  "<u32 as math::libm_math::support::int_traits::CastInto<u64>>::cast": true,
  "<u32 as math::libm_math::support::int_traits::CastInto<u64>>::cast_lossy": true,
  "<u32 as math::libm_math::support::int_traits::CastInto<u8>>::cast": true,
  "<u32 as math::libm_math::support::int_traits::CastInto<u8>>::cast_lossy": true,
  "<u32 as math::libm_math::support::int_traits::CastInto<usize>>::cast": true,
  "<u32 as math::libm_math::support::int_traits::CastInto<usize>>::cast_lossy": true,
  "<u32 as math::libm_math::support::int_traits::DInt>::hi": true,
  "<u32 as math::libm_math::support::int_traits::DInt>::lo": true,
  "<u32 as math::libm_math::support::int_traits::HInt>::widen": true,
  "<u32 as math::libm_math::support::int_traits::HInt>::widen_hi": true,
  "<u32 as math::libm_math::support::int_traits::HInt>::widen_mul": true,
  "<u32 as math::libm_math::support::int_traits::HInt>::zero_widen": true,
  "<u32 as math::libm_math::support::int_traits::HInt>::zero_widen_mul": true,
  "<u32 as math::libm_math::support::int_traits::Int>::abs": true,
  "<u32 as math::libm_math::support::int_traits::Int>::abs_diff": true,
  "<u32 as math::libm_math::support::int_traits::Int>::borrowing_sub": true,
  "<u32 as math::libm_math::support::int_traits::Int>::carrying_add": true,
  "<u32 as math::libm_math::support::int_traits::Int>::checked_add": true,
  "<u32 as math::libm_math::support::int_traits::Int>::checked_sub": true,
  "<u32 as math::libm_math::support::int_traits::Int>::from_bool": true,
  "<u32 as math::libm_math::support::int_traits::Int>::from_unsigned": true,
  "<u32 as math::libm_math::support::int_traits::Int>::ilog2": true,
  "<u32 as math::libm_math::support::int_traits::Int>::is_zero": true,
  "<u32 as math::libm_math::support::int_traits::Int>::leading_zeros": true,
  "<u32 as math::libm_math::support::int_traits::Int>::logical_shr": true,
  "<u32 as math::libm_math::support::int_traits::Int>::overflowing_add": true,
  "<u32 as math::libm_math::support::int_traits::Int>::overflowing_sub": true,
  "<u32 as math::libm_math::support::int_traits::Int>::rotate_left": true,
  "<u32 as math::libm_math::support::int_traits::Int>::signed": true,
  "<u32 as math::libm_math::support::int_traits::Int>::trailing_zeros": true,
  "<u32 as math::libm_math::support::int_traits::Int>::unsigned": true,
  "<u32 as math::libm_math::support::int_traits::Int>::unsigned_abs": true,
  "<u32 as math::libm_math::support::int_traits::Int>::wrapping_add": true,
  "<u32 as math::libm_math::support::int_traits::Int>::wrapping_mul": true,
  "<u32 as math::libm_math::support::int_traits::Int>::wrapping_neg": true,
  "<u32 as math::libm_math::support::int_traits::Int>::wrapping_shl": true,
  "<u32 as math::libm_math::support::int_traits::Int>::wrapping_shr": true,
  "<u32 as math::libm_math::support::int_traits::Int>::wrapping_sub": true,
  "<u32 as net::parser::ReadNumberHelper>::checked_add": true,
  "<u32 as net::parser::ReadNumberHelper>::checked_mul": true,
  "<u32 as num::bignum::FullOps>::full_div_rem": true,
  "<u32 as num::bignum::FullOps>::full_mul_add": true,
  "<u32 as num::dec2flt::float::CastInto<i16>>::cast": true,
  "<u32 as ops::arith::Add<&u32>>::add": true,
  "<u32 as ops::arith::Add>::add": true,
  "<u32 as ops::arith::AddAssign<&u32>>::add_assign": true,
  "<u32 as ops::arith::AddAssign>::add_assign": true,
  "<u32 as ops::arith::Div<&u32>>::div": true,
  "<u32 as ops::arith::Div>::div": true,
  "<u32 as ops::arith::DivAssign<&u32>>::div_assign": true,
  "<u32 as ops::arith::DivAssign>::div_assign": true,
  "<u32 as ops::arith::Mul<&u32>>::mul": true,
  "<u32 as ops::arith::Mul>::mul": true,
  "<u32 as ops::arith::MulAssign<&u32>>::mul_assign": true,
  "<u32 as ops::arith::MulAssign>::mul_assign": true,
  "<u32 as ops::arith::Rem<&u32>>::rem": true,
  "<u32 as ops::arith::Rem>::rem": true,
  "<u32 as ops::arith::RemAssign<&u32>>::rem_assign": true,
  "<u32 as ops::arith::RemAssign>::rem_assign": true,
  "<u32 as ops::arith::Sub<&u32>>::sub": true,
  "<u32 as ops::arith::Sub>::sub": true,
  "<u32 as ops::arith::SubAssign<&u32>>::sub_assign": true,
  "<u32 as ops::arith::SubAssign>::sub_assign": true,
  "<u32 as ops::bit::BitAnd<&u32>>::bitand": true,
  "<u32 as ops::bit::BitAnd>::bitand": true,
  "<u32 as ops::bit::BitAndAssign<&u32>>::bitand_assign": true,
  "<u32 as ops::bit::BitAndAssign>::bitand_assign": true,
  "<u32 as ops::bit::BitOr<&u32>>::bitor": true,
  "<u32 as ops::bit::BitOr>::bitor": true,
  "<u32 as ops::bit::BitOrAssign<&u32>>::bitor_assign": true,
  "<u32 as ops::bit::BitOrAssign>::bitor_assign": true,
  "<u32 as ops::bit::BitXor<&u32>>::bitxor": true,
  "<u32 as ops::bit::BitXor>::bitxor": true,
  "<u32 as ops::bit::BitXorAssign<&u32>>::bitxor_assign": true,
  "<u32 as ops::bit::BitXorAssign>::bitxor_assign": true,
  "<u32 as ops::bit::Not>::not": true,
  "<u32 as ops::bit::Shl<&i128>>::shl": true,
  "<u32 as ops::bit::Shl<&i16>>::shl": true,
  "<u32 as ops::bit::Shl<&i32>>::shl": true,
  "<u32 as ops::bit::Shl<&i64>>::shl": true,
  "<u32 as ops::bit::Shl<&i8>>::shl": true,
  "<u32 as ops::bit::Shl<&isize>>::shl": true,
  "<u32 as ops::bit::Shl<&u128>>::shl": true,
  "<u32 as ops::bit::Shl<&u16>>::shl": true,
  "<u32 as ops::bit::Shl<&u32>>::shl": true,
  "<u32 as ops::bit::Shl<&u64>>::shl": true,
  "<u32 as ops::bit::Shl<&u8>>::shl": true,
  "<u32 as ops::bit::Shl<&usize>>::shl": true,
  "<u32 as ops::bit::Shl<i128>>::shl": true,
  "<u32 as ops::bit::Shl<i16>>::shl": true,
  "<u32 as ops::bit::Shl<i32>>::shl": true,
  "<u32 as ops::bit::Shl<i64>>::shl": true,
  "<u32 as ops::bit::Shl<i8>>::shl": true,
  "<u32 as ops::bit::Shl<isize>>::shl": true,
  "<u32 as ops::bit::Shl<u128>>::shl": true,
  "<u32 as ops::bit::Shl<u16>>::shl": true,
  "<u32 as ops::bit::Shl<u64>>::shl": true,
  "<u32 as ops::bit::Shl<u8>>::shl": true,
  "<u32 as ops::bit::Shl<usize>>::shl": true,
  "<u32 as ops::bit::Shl>::shl": true,
  "<u32 as ops::bit::ShlAssign<&i128>>::shl_assign": true,
  "<u32 as ops::bit::ShlAssign<&i16>>::shl_assign": true,
  "<u32 as ops::bit::ShlAssign<&i32>>::shl_assign": true,
  "<u32 as ops::bit::ShlAssign<&i64>>::shl_assign": true,
  "<u32 as ops::bit::ShlAssign<&i8>>::shl_assign": true,
  "<u32 as ops::bit::ShlAssign<&isize>>::shl_assign": true,
  "<u32 as ops::bit::ShlAssign<&u128>>::shl_assign": true,
  "<u32 as ops::bit::ShlAssign<&u16>>::shl_assign": true,
  "<u32 as ops::bit::ShlAssign<&u32>>::shl_assign": true,
  "<u32 as ops::bit::ShlAssign<&u64>>::shl_assign": true,
  "<u32 as ops::bit::ShlAssign<&u8>>::shl_assign": true,
  "<u32 as ops::bit::ShlAssign<&usize>>::shl_assign": true,
  "<u32 as ops::bit::ShlAssign<i128>>::shl_assign": true,
  "<u32 as ops::bit::ShlAssign<i16>>::shl_assign": true,
  "<u32 as ops::bit::ShlAssign<i32>>::shl_assign": true,
  "<u32 as ops::bit::ShlAssign<i64>>::shl_assign": true,
  "<u32 as ops::bit::ShlAssign<i8>>::shl_assign": true,
  "<u32 as ops::bit::ShlAssign<isize>>::shl_assign": true,
  "<u32 as ops::bit::ShlAssign<u128>>::shl_assign": true,
  "<u32 as ops::bit::ShlAssign<u16>>::shl_assign": true,
  "<u32 as ops::bit::ShlAssign<u64>>::shl_assign": true,
  "<u32 as ops::bit::ShlAssign<u8>>::shl_assign": true,
  "<u32 as ops::bit::ShlAssign<usize>>::shl_assign": true,
  "<u32 as ops::bit::ShlAssign>::shl_assign": true,
  "<u32 as ops::bit::Shr<&i128>>::shr": true,
  "<u32 as ops::bit::Shr<&i16>>::shr": true,
  "<u32 as ops::bit::Shr<&i32>>::shr": true,
  "<u32 as ops::bit::Shr<&i64>>::shr": true,
  "<u32 as ops::bit::Shr<&i8>>::shr": true,
  "<u32 as ops::bit::Shr<&isize>>::shr": true,
  "<u32 as ops::bit::Shr<&u128>>::shr": true,
  "<u32 as ops::bit::Shr<&u16>>::shr": true,
  "<u32 as ops::bit::Shr<&u32>>::shr": true,
  "<u32 as ops::bit::Shr<&u64>>::shr": true,
  "<u32 as ops::bit::Shr<&u8>>::shr": true,
  "<u32 as ops::bit::Shr<&usize>>::shr": true,
  "<u32 as ops::bit::Shr<i128>>::shr": true,
  "<u32 as ops::bit::Shr<i16>>::shr": true,
  "<u32 as ops::bit::Shr<i32>>::shr": true,
  "<u32 as ops::bit::Shr<i64>>::shr": true,
  "<u32 as ops::bit::Shr<i8>>::shr": true,
  "<u32 as ops::bit::Shr<isize>>::shr": true,
  "<u32 as ops::bit::Shr<u128>>::shr": true,
  "<u32 as ops::bit::Shr<u16>>::shr": true,
  "<u32 as ops::bit::Shr<u64>>::shr": true,
  "<u32 as ops::bit::Shr<u8>>::shr": true,
  "<u32 as ops::bit::Shr<usize>>::shr": true,
  "<u32 as ops::bit::Shr>::shr": true,
  "<u32 as ops::bit::ShrAssign<&i128>>::shr_assign": true,
  "<u32 as ops::bit::ShrAssign<&i16>>::shr_assign": true,
  "<u32 as ops::bit::ShrAssign<&i32>>::shr_assign": true,
  "<u32 as ops::bit::ShrAssign<&i64>>::shr_assign": true,
  "<u32 as ops::bit::ShrAssign<&i8>>::shr_assign": true,
  "<u32 as ops::bit::ShrAssign<&isize>>::shr_assign": true,
  "<u32 as ops::bit::ShrAssign<&u128>>::shr_assign": true,
  "<u32 as ops::bit::ShrAssign<&u16>>::shr_assign": true,
  "<u32 as ops::bit::ShrAssign<&u32>>::shr_assign": true,
  "<u32 as ops::bit::ShrAssign<&u64>>::shr_assign": true,
  "<u32 as ops::bit::ShrAssign<&u8>>::shr_assign": true,
  "<u32 as ops::bit::ShrAssign<&usize>>::shr_assign": true,
  "<u32 as ops::bit::ShrAssign<i128>>::shr_assign": true,
  "<u32 as ops::bit::ShrAssign<i16>>::shr_assign": true,
  "<u32 as ops::bit::ShrAssign<i32>>::shr_assign": true,
  "<u32 as ops::bit::ShrAssign<i64>>::shr_assign": true,
  "<u32 as ops::bit::ShrAssign<i8>>::shr_assign": true,
  "<u32 as ops::bit::ShrAssign<isize>>::shr_assign": true,
  "<u32 as ops::bit::ShrAssign<u128>>::shr_assign": true,
  "<u32 as ops::bit::ShrAssign<u16>>::shr_assign": true,
  "<u32 as ops::bit::ShrAssign<u64>>::shr_assign": true,
  "<u32 as ops::bit::ShrAssign<u8>>::shr_assign": true,
  "<u32 as ops::bit::ShrAssign<usize>>::shr_assign": true,
  "<u32 as ops::bit::ShrAssign>::shr_assign": true,
  "<u32 as pat::RangePattern>::sub_one": true,
  "<u32 as read::reader::ReaderOffset>::checked_sub": true,
  "<u32 as read::reader::ReaderOffset>::from_i16": true,
  "<u32 as read::reader::ReaderOffset>::from_u16": true,
  "<u32 as read::reader::ReaderOffset>::from_u32": true,
  "<u32 as read::reader::ReaderOffset>::from_u64": true,
  "<u32 as read::reader::ReaderOffset>::from_u8": true,
  "<u32 as read::reader::ReaderOffset>::into_u64": true,
  "<u32 as read::reader::ReaderOffset>::wrapping_add": true,
  "<u32 as string::SpecToString>::spec_to_string": true,
  "<u32 as to_tokens::ToTokens>::to_tokens": true,
  "<u32 as ub_checks::Invariant>::is_safe": true,
  "<u32 as vec::is_zero::IsZero>::is_zero": true,
  "<u64 as core_simd::masks::mask_impl::ReverseBits>::reverse_bits": true,
  "<u64 as default::Default>::default": true,
  "<u64 as int::traits::DInt>::hi": true,
  "<u64 as int::traits::DInt>::lo": true,
  "<u64 as int::traits::HInt>::widen": true,
  "<u64 as int::traits::HInt>::widen_hi": true,
  "<u64 as int::traits::HInt>::widen_mul": true,
  "<u64 as int::traits::HInt>::zero_widen": true,
  "<u64 as int::traits::HInt>::zero_widen_mul": true,
  "<u64 as intrinsics::fallback::CarryingMulAdd>::carrying_mul_add": true,
  "<u64 as intrinsics::fallback::FunnelShift>::unchecked_funnel_shl": true,
  "<u64 as intrinsics::fallback::FunnelShift>::unchecked_funnel_shr": true,
  "<u64 as iter::range::Step>::backward": true,
  "<u64 as iter::range::Step>::backward_checked": true,
  "<u64 as iter::range::Step>::forward": true,
  "<u64 as iter::range::Step>::forward_checked": true,
  "<u64 as iter::range::Step>::steps_between": true,
  "<u64 as math::libm_math::support::int_traits::CastInto<i128>>::cast": true,
  "<u64 as math::libm_math::support::int_traits::CastInto<i128>>::cast_lossy": true,
  "<u64 as math::libm_math::support::int_traits::CastInto<i16>>::cast": true,
  "<u64 as math::libm_math::support::int_traits::CastInto<i16>>::cast_lossy": true,
  "<u64 as math::libm_math::support::int_traits::CastInto<i32>>::cast": true,
  "<u64 as math::libm_math::support::int_traits::CastInto<i32>>::cast_lossy": true,
  "<u64 as math::libm_math::support::int_traits::CastInto<i64>>::cast": true,
  "<u64 as math::libm_math::support::int_traits::CastInto<i64>>::cast_lossy": true,
  "<u64 as math::libm_math::support::int_traits::CastInto<i8>>::cast": true,
  "<u64 as math::libm_math::support::int_traits::CastInto<i8>>::cast_lossy": true,
  "<u64 as math::libm_math::support::int_traits::CastInto<isize>>::cast": true,
  "<u64 as math::libm_math::support::int_traits::CastInto<isize>>::cast_lossy": true,
  "<u64 as math::libm_math::support::int_traits::CastInto<u128>>::cast": true,
  "<u64 as math::libm_math::support::int_traits::CastInto<u128>>::cast_lossy": true,
  "<u64 as math::libm_math::support::int_traits::CastInto<u16>>::cast": true,
  "<u64 as math::libm_math::support::int_traits::CastInto<u16>>::cast_lossy": true,
  "<u64 as math::libm_math::support::int_traits::CastInto<u32>>::cast": true,
  "<u64 as math::libm_math::support::int_traits::CastInto<u32>>::cast_lossy": true,
  "<u64 as math::libm_math::support::int_traits::CastInto<u64>>::cast": true,
  "<u64 as math::libm_math::support::int_traits::CastInto<u64>>::cast_lossy": true,
  "<u64 as math::libm_math::support::int_traits::CastInto<u8>>::cast": true,
  "<u64 as math::libm_math::support::int_traits::CastInto<u8>>::cast_lossy": true,
  "<u64 as math::libm_math::support::int_traits::CastInto<usize>>::cast": true,
  "<u64 as math::libm_math::support::int_traits::CastInto<usize>>::cast_lossy": true,
  "<u64 as math::libm_math::support::int_traits::DInt>::hi": true,
  "<u64 as math::libm_math::support::int_traits::DInt>::lo": true,
  "<u64 as math::libm_math::support::int_traits::HInt>::widen": true,
  "<u64 as math::libm_math::support::int_traits::HInt>::widen_hi": true,
  "<u64 as math::libm_math::support::int_traits::HInt>::widen_mul": true,
  "<u64 as math::libm_math::support::int_traits::HInt>::zero_widen": true,
  "<u64 as math::libm_math::support::int_traits::HInt>::zero_widen_mul": true,
  "<u64 as math::libm_math::support::int_traits::Int>::abs": true,
  "<u64 as math::libm_math::support::int_traits::Int>::abs_diff": true,
  "<u64 as math::libm_math::support::int_traits::Int>::borrowing_sub": true,
  "<u64 as math::libm_math::support::int_traits::Int>::carrying_add": true,
  "<u64 as math::libm_math::support::int_traits::Int>::checked_add": true,
  "<u64 as math::libm_math::support::int_traits::Int>::checked_sub": true,
  "<u64 as math::libm_math::support::int_traits::Int>::from_bool": true,
  "<u64 as math::libm_math::support::int_traits::Int>::from_unsigned": true,
  "<u64 as math::libm_math::support::int_traits::Int>::ilog2": true,
  "<u64 as math::libm_math::support::int_traits::Int>::is_zero": true,
  "<u64 as math::libm_math::support::int_traits::Int>::leading_zeros": true,
  "<u64 as math::libm_math::support::int_traits::Int>::logical_shr": true,
  "<u64 as math::libm_math::support::int_traits::Int>::overflowing_add": true,
  "<u64 as math::libm_math::support::int_traits::Int>::overflowing_sub": true,
  "<u64 as math::libm_math::support::int_traits::Int>::rotate_left": true,
  "<u64 as math::libm_math::support::int_traits::Int>::signed": true,
  "<u64 as math::libm_math::support::int_traits::Int>::trailing_zeros": true,
  "<u64 as math::libm_math::support::int_traits::Int>::unsigned": true,
  "<u64 as math::libm_math::support::int_traits::Int>::unsigned_abs": true,
  "<u64 as math::libm_math::support::int_traits::Int>::wrapping_add": true,
  "<u64 as math::libm_math::support::int_traits::Int>::wrapping_mul": true,
  "<u64 as math::libm_math::support::int_traits::Int>::wrapping_neg": true,
  "<u64 as math::libm_math::support::int_traits::Int>::wrapping_shl": true,
  "<u64 as math::libm_math::support::int_traits::Int>::wrapping_shr": true,
  "<u64 as math::libm_math::support::int_traits::Int>::wrapping_sub": true,
  "<u64 as num::dec2flt::float::CastInto<i16>>::cast": true,
  "<u64 as ops::arith::Add<&u64>>::add": true,
  "<u64 as ops::arith::Add>::add": true,
  "<u64 as ops::arith::AddAssign<&u64>>::add_assign": true,
  "<u64 as ops::arith::AddAssign>::add_assign": true,
  "<u64 as ops::arith::Div<&u64>>::div": true,
  "<u64 as ops::arith::Div>::div": true,
  "<u64 as ops::arith::DivAssign<&u64>>::div_assign": true,
  "<u64 as ops::arith::DivAssign>::div_assign": true,
  "<u64 as ops::arith::Mul<&u64>>::mul": true,
  "<u64 as ops::arith::Mul>::mul": true,
  "<u64 as ops::arith::MulAssign<&u64>>::mul_assign": true,
  "<u64 as ops::arith::MulAssign>::mul_assign": true,
  "<u64 as ops::arith::Rem<&u64>>::rem": true,
  "<u64 as ops::arith::Rem>::rem": true,
  "<u64 as ops::arith::RemAssign<&u64>>::rem_assign": true,
  "<u64 as ops::arith::RemAssign>::rem_assign": true,
  "<u64 as ops::arith::Sub<&u64>>::sub": true,
  "<u64 as ops::arith::Sub>::sub": true,
  "<u64 as ops::arith::SubAssign<&u64>>::sub_assign": true,
  "<u64 as ops::arith::SubAssign>::sub_assign": true,
  "<u64 as ops::bit::BitAnd<&u64>>::bitand": true,
  "<u64 as ops::bit::BitAnd>::bitand": true,
  "<u64 as ops::bit::BitAndAssign<&u64>>::bitand_assign": true,
  "<u64 as ops::bit::BitAndAssign>::bitand_assign": true,
  "<u64 as ops::bit::BitOr<&u64>>::bitor": true,
  "<u64 as ops::bit::BitOr>::bitor": true,
  "<u64 as ops::bit::BitOrAssign<&u64>>::bitor_assign": true,
  "<u64 as ops::bit::BitOrAssign>::bitor_assign": true,
  "<u64 as ops::bit::BitXor<&u64>>::bitxor": true,
  "<u64 as ops::bit::BitXor>::bitxor": true,
  "<u64 as ops::bit::BitXorAssign<&u64>>::bitxor_assign": true,
  "<u64 as ops::bit::BitXorAssign>::bitxor_assign": true,
  "<u64 as ops::bit::Not>::not": true,
  "<u64 as ops::bit::Shl<&i128>>::shl": true,
  "<u64 as ops::bit::Shl<&i16>>::shl": true,
  "<u64 as ops::bit::Shl<&i32>>::shl": true,
  "<u64 as ops::bit::Shl<&i64>>::shl": true,
  "<u64 as ops::bit::Shl<&i8>>::shl": true,
  "<u64 as ops::bit::Shl<&isize>>::shl": true,
  "<u64 as ops::bit::Shl<&u128>>::shl": true,
  "<u64 as ops::bit::Shl<&u16>>::shl": true,
  "<u64 as ops::bit::Shl<&u32>>::shl": true,
  "<u64 as ops::bit::Shl<&u64>>::shl": true,
  "<u64 as ops::bit::Shl<&u8>>::shl": true,
  "<u64 as ops::bit::Shl<&usize>>::shl": true,
  "<u64 as ops::bit::Shl<i128>>::shl": true,
  "<u64 as ops::bit::Shl<i16>>::shl": true,
  "<u64 as ops::bit::Shl<i32>>::shl": true,
  "<u64 as ops::bit::Shl<i64>>::shl": true,
  "<u64 as ops::bit::Shl<i8>>::shl": true,
  "<u64 as ops::bit::Shl<isize>>::shl": true,
  "<u64 as ops::bit::Shl<u128>>::shl": true,
  "<u64 as ops::bit::Shl<u16>>::shl": true,
  "<u64 as ops::bit::Shl<u32>>::shl": true,
  "<u64 as ops::bit::Shl<u8>>::shl": true,
  "<u64 as ops::bit::Shl<usize>>::shl": true,
  "<u64 as ops::bit::Shl>::shl": true,
  "<u64 as ops::bit::ShlAssign<&i128>>::shl_assign": true,
  "<u64 as ops::bit::ShlAssign<&i16>>::shl_assign": true,
  "<u64 as ops::bit::ShlAssign<&i32>>::shl_assign": true,
  "<u64 as ops::bit::ShlAssign<&i64>>::shl_assign": true,
  "<u64 as ops::bit::ShlAssign<&i8>>::shl_assign": true,
  "<u64 as ops::bit::ShlAssign<&isize>>::shl_assign": true,
  "<u64 as ops::bit::ShlAssign<&u128>>::shl_assign": true,
  "<u64 as ops::bit::ShlAssign<&u16>>::shl_assign": true,
  "<u64 as ops::bit::ShlAssign<&u32>>::shl_assign": true,
  "<u64 as ops::bit::ShlAssign<&u64>>::shl_assign": true,
  "<u64 as ops::bit::ShlAssign<&u8>>::shl_assign": true,
  "<u64 as ops::bit::ShlAssign<&usize>>::shl_assign": true,
  "<u64 as ops::bit::ShlAssign<i128>>::shl_assign": true,
  "<u64 as ops::bit::ShlAssign<i16>>::shl_assign": true,
  "<u64 as ops::bit::ShlAssign<i32>>::shl_assign": true,
  "<u64 as ops::bit::ShlAssign<i64>>::shl_assign": true,
  "<u64 as ops::bit::ShlAssign<i8>>::shl_assign": true,
  "<u64 as ops::bit::ShlAssign<isize>>::shl_assign": true,
  "<u64 as ops::bit::ShlAssign<u128>>::shl_assign": true,
  "<u64 as ops::bit::ShlAssign<u16>>::shl_assign": true,
  "<u64 as ops::bit::ShlAssign<u32>>::shl_assign": true,
  "<u64 as ops::bit::ShlAssign<u8>>::shl_assign": true,
  "<u64 as ops::bit::ShlAssign<usize>>::shl_assign": true,
  "<u64 as ops::bit::ShlAssign>::shl_assign": true,
  "<u64 as ops::bit::Shr<&i128>>::shr": true,
  "<u64 as ops::bit::Shr<&i16>>::shr": true,
  "<u64 as ops::bit::Shr<&i32>>::shr": true,
  "<u64 as ops::bit::Shr<&i64>>::shr": true,
  "<u64 as ops::bit::Shr<&i8>>::shr": true,
  "<u64 as ops::bit::Shr<&isize>>::shr": true,
  "<u64 as ops::bit::Shr<&u128>>::shr": true,
  "<u64 as ops::bit::Shr<&u16>>::shr": true,
  "<u64 as ops::bit::Shr<&u32>>::shr": true,
  "<u64 as ops::bit::Shr<&u64>>::shr": true,
  "<u64 as ops::bit::Shr<&u8>>::shr": true,
  "<u64 as ops::bit::Shr<&usize>>::shr": true,
  "<u64 as ops::bit::Shr<i128>>::shr": true,
  "<u64 as ops::bit::Shr<i16>>::shr": true,
  "<u64 as ops::bit::Shr<i32>>::shr": true,
  "<u64 as ops::bit::Shr<i64>>::shr": true,
  "<u64 as ops::bit::Shr<i8>>::shr": true,
  "<u64 as ops::bit::Shr<isize>>::shr": true,
  "<u64 as ops::bit::Shr<u128>>::shr": true,
  "<u64 as ops::bit::Shr<u16>>::shr": true,
  "<u64 as ops::bit::Shr<u32>>::shr": true,
  "<u64 as ops::bit::Shr<u8>>::shr": true,
  "<u64 as ops::bit::Shr<usize>>::shr": true,
  "<u64 as ops::bit::Shr>::shr": true,
  "<u64 as ops::bit::ShrAssign<&i128>>::shr_assign": true,
  "<u64 as ops::bit::ShrAssign<&i16>>::shr_assign": true,
  "<u64 as ops::bit::ShrAssign<&i32>>::shr_assign": true,
  "<u64 as ops::bit::ShrAssign<&i64>>::shr_assign": true,
  "<u64 as ops::bit::ShrAssign<&i8>>::shr_assign": true,
  "<u64 as ops::bit::ShrAssign<&isize>>::shr_assign": true,
  "<u64 as ops::bit::ShrAssign<&u128>>::shr_assign": true,
  "<u64 as ops::bit::ShrAssign<&u16>>::shr_assign": true,
  "<u64 as ops::bit::ShrAssign<&u32>>::shr_assign": true,
  "<u64 as ops::bit::ShrAssign<&u64>>::shr_assign": true,
  "<u64 as ops::bit::ShrAssign<&u8>>::shr_assign": true,
  "<u64 as ops::bit::ShrAssign<&usize>>::shr_assign": true,
  "<u64 as ops::bit::ShrAssign<i128>>::shr_assign": true,
  "<u64 as ops::bit::ShrAssign<i16>>::shr_assign": true,
  "<u64 as ops::bit::ShrAssign<i32>>::shr_assign": true,
  "<u64 as ops::bit::ShrAssign<i64>>::shr_assign": true,
  "<u64 as ops::bit::ShrAssign<i8>>::shr_assign": true,
  "<u64 as ops::bit::ShrAssign<isize>>::shr_assign": true,
  "<u64 as ops::bit::ShrAssign<u128>>::shr_assign": true,
  "<u64 as ops::bit::ShrAssign<u16>>::shr_assign": true,
  "<u64 as ops::bit::ShrAssign<u32>>::shr_assign": true,
  "<u64 as ops::bit::ShrAssign<u8>>::shr_assign": true,
  "<u64 as ops::bit::ShrAssign<usize>>::shr_assign": true,
  "<u64 as ops::bit::ShrAssign>::shr_assign": true,
  "<u64 as pat::RangePattern>::sub_one": true,
  "<u64 as read::reader::ReaderAddress>::add_sized": true,
  "<u64 as read::reader::ReaderAddress>::ones_sized": true,
  "<u64 as read::reader::ReaderAddress>::wrapping_add_sized": true,
  "<u64 as read::reader::ReaderOffset>::checked_sub": true,
  "<u64 as read::reader::ReaderOffset>::from_i16": true,
  "<u64 as read::reader::ReaderOffset>::from_u16": true,
  "<u64 as read::reader::ReaderOffset>::from_u32": true,
  "<u64 as read::reader::ReaderOffset>::from_u64": true,
  "<u64 as read::reader::ReaderOffset>::from_u8": true,
  "<u64 as read::reader::ReaderOffset>::into_u64": true,
  "<u64 as read::reader::ReaderOffset>::wrapping_add": true,
  "<u64 as string::SpecToString>::spec_to_string": true,
  "<u64 as to_tokens::ToTokens>::to_tokens": true,
  "<u64 as ub_checks::Invariant>::is_safe": true,
  "<u64 as vec::is_zero::IsZero>::is_zero": true,
  "<u8 as ascii::AsciiExt>::eq_ignore_ascii_case": true,
  "<u8 as ascii::AsciiExt>::is_ascii": true,
  "<u8 as ascii::AsciiExt>::make_ascii_lowercase": true,
  "<u8 as ascii::AsciiExt>::make_ascii_uppercase": true,
  "<u8 as ascii::AsciiExt>::to_ascii_lowercase": true,
  "<u8 as ascii::AsciiExt>::to_ascii_uppercase": true,
  "<u8 as bridge::Mark>::mark": true,
  "<u8 as bridge::Unmark>::unmark": true,
  "<u8 as core_simd::masks::mask_impl::ReverseBits>::reverse_bits": true,
  "<u8 as default::Default>::default": true,
  "<u8 as int::traits::HInt>::widen": true,
  "<u8 as int::traits::HInt>::widen_hi": true,
  "<u8 as int::traits::HInt>::widen_mul": true,
  "<u8 as int::traits::HInt>::zero_widen": true,
  "<u8 as int::traits::HInt>::zero_widen_mul": true,
  "<u8 as intrinsics::fallback::CarryingMulAdd>::carrying_mul_add": true,
  "<u8 as intrinsics::fallback::FunnelShift>::unchecked_funnel_shl": true,
  "<u8 as intrinsics::fallback::FunnelShift>::unchecked_funnel_shr": true,
  "<u8 as iter::range::Step>::backward": true,
  "<u8 as iter::range::Step>::backward_checked": true,
  "<u8 as iter::range::Step>::forward": true,
  "<u8 as iter::range::Step>::forward_checked": true,
  "<u8 as iter::range::Step>::steps_between": true,
  "<u8 as math::libm_math::support::int_traits::CastInto<i128>>::cast": true,
  "<u8 as math::libm_math::support::int_traits::CastInto<i128>>::cast_lossy": true,
  "<u8 as math::libm_math::support::int_traits::CastInto<i16>>::cast": true,
  "<u8 as math::libm_math::support::int_traits::CastInto<i16>>::cast_lossy": true,
  "<u8 as math::libm_math::support::int_traits::CastInto<i32>>::cast": true,
  "<u8 as math::libm_math::support::int_traits::CastInto<i32>>::cast_lossy": true,
  "<u8 as math::libm_math::support::int_traits::CastInto<i64>>::cast": true,
  "<u8 as math::libm_math::support::int_traits::CastInto<i64>>::cast_lossy": true,
  "<u8 as math::libm_math::support::int_traits::CastInto<i8>>::cast": true,
  "<u8 as math::libm_math::support::int_traits::CastInto<i8>>::cast_lossy": true,
  "<u8 as math::libm_math::support::int_traits::CastInto<isize>>::cast": true,
  "<u8 as math::libm_math::support::int_traits::CastInto<isize>>::cast_lossy": true,
  "<u8 as math::libm_math::support::int_traits::CastInto<u128>>::cast": true,
  "<u8 as math::libm_math::support::int_traits::CastInto<u128>>::cast_lossy": true,
  "<u8 as math::libm_math::support::int_traits::CastInto<u16>>::cast": true,
  "<u8 as math::libm_math::support::int_traits::CastInto<u16>>::cast_lossy": true,
  "<u8 as math::libm_math::support::int_traits::CastInto<u32>>::cast": true,
  "<u8 as math::libm_math::support::int_traits::CastInto<u32>>::cast_lossy": true,
  "<u8 as math::libm_math::support::int_traits::CastInto<u64>>::cast": true,
  "<u8 as math::libm_math::support::int_traits::CastInto<u64>>::cast_lossy": true,
  "<u8 as math::libm_math::support::int_traits::CastInto<u8>>::cast": true,
  "<u8 as math::libm_math::support::int_traits::CastInto<u8>>::cast_lossy": true,
  "<u8 as math::libm_math::support::int_traits::CastInto<usize>>::cast": true,
  "<u8 as math::libm_math::support::int_traits::CastInto<usize>>::cast_lossy": true,
  "<u8 as math::libm_math::support::int_traits::HInt>::widen": true,
  "<u8 as math::libm_math::support::int_traits::HInt>::widen_hi": true,
  "<u8 as math::libm_math::support::int_traits::HInt>::widen_mul": true,
  "<u8 as math::libm_math::support::int_traits::HInt>::zero_widen": true,
  "<u8 as math::libm_math::support::int_traits::HInt>::zero_widen_mul": true,
  "<u8 as math::libm_math::support::int_traits::Int>::abs": true,
  "<u8 as math::libm_math::support::int_traits::Int>::abs_diff": true,
  "<u8 as math::libm_math::support::int_traits::Int>::borrowing_sub": true,
  "<u8 as math::libm_math::support::int_traits::Int>::carrying_add": true,
  "<u8 as math::libm_math::support::int_traits::Int>::checked_add": true,
  "<u8 as math::libm_math::support::int_traits::Int>::checked_sub": true,
  "<u8 as math::libm_math::support::int_traits::Int>::from_bool": true,
  "<u8 as math::libm_math::support::int_traits::Int>::from_unsigned": true,
  "<u8 as math::libm_math::support::int_traits::Int>::ilog2": true,
  "<u8 as math::libm_math::support::int_traits::Int>::is_zero": true,
  "<u8 as math::libm_math::support::int_traits::Int>::leading_zeros": true,
  "<u8 as math::libm_math::support::int_traits::Int>::logical_shr": true,
  "<u8 as math::libm_math::support::int_traits::Int>::overflowing_add": true,
  "<u8 as math::libm_math::support::int_traits::Int>::overflowing_sub": true,
  "<u8 as math::libm_math::support::int_traits::Int>::rotate_left": true,
  "<u8 as math::libm_math::support::int_traits::Int>::signed": true,
  "<u8 as math::libm_math::support::int_traits::Int>::trailing_zeros": true,
  "<u8 as math::libm_math::support::int_traits::Int>::unsigned": true,
  "<u8 as math::libm_math::support::int_traits::Int>::unsigned_abs": true,
  "<u8 as math::libm_math::support::int_traits::Int>::wrapping_add": true,
  "<u8 as math::libm_math::support::int_traits::Int>::wrapping_mul": true,
  "<u8 as math::libm_math::support::int_traits::Int>::wrapping_neg": true,
  "<u8 as math::libm_math::support::int_traits::Int>::wrapping_shl": true,
  "<u8 as math::libm_math::support::int_traits::Int>::wrapping_shr": true,
  "<u8 as math::libm_math::support::int_traits::Int>::wrapping_sub": true,
  "<u8 as net::parser::ReadNumberHelper>::checked_add": true,
  "<u8 as net::parser::ReadNumberHelper>::checked_mul": true,
  "<u8 as num::bignum::FullOps>::full_div_rem": true,
  "<u8 as num::bignum::FullOps>::full_mul_add": true,
  "<u8 as ops::arith::Add<&u8>>::add": true,
  "<u8 as ops::arith::Add>::add": true,
  "<u8 as ops::arith::AddAssign<&u8>>::add_assign": true,
  "<u8 as ops::arith::AddAssign>::add_assign": true,
  "<u8 as ops::arith::Div<&u8>>::div": true,
  "<u8 as ops::arith::Div>::div": true,
  "<u8 as ops::arith::DivAssign<&u8>>::div_assign": true,
  "<u8 as ops::arith::DivAssign>::div_assign": true,
  "<u8 as ops::arith::Mul<&u8>>::mul": true,
  "<u8 as ops::arith::Mul>::mul": true,
  "<u8 as ops::arith::MulAssign<&u8>>::mul_assign": true,
  "<u8 as ops::arith::MulAssign>::mul_assign": true,
  "<u8 as ops::arith::Rem<&u8>>::rem": true,
  "<u8 as ops::arith::Rem>::rem": true,
  "<u8 as ops::arith::RemAssign<&u8>>::rem_assign": true,
  "<u8 as ops::arith::RemAssign>::rem_assign": true,
  "<u8 as ops::arith::Sub<&u8>>::sub": true,
  "<u8 as ops::arith::Sub>::sub": true,
  "<u8 as ops::arith::SubAssign<&u8>>::sub_assign": true,
  "<u8 as ops::arith::SubAssign>::sub_assign": true,
  "<u8 as ops::bit::BitAnd<&u8>>::bitand": true,
  "<u8 as ops::bit::BitAnd>::bitand": true,
  "<u8 as ops::bit::BitAndAssign<&u8>>::bitand_assign": true,
  "<u8 as ops::bit::BitAndAssign>::bitand_assign": true,
  "<u8 as ops::bit::BitOr<&u8>>::bitor": true,
  "<u8 as ops::bit::BitOr>::bitor": true,
  "<u8 as ops::bit::BitOrAssign<&u8>>::bitor_assign": true,
  "<u8 as ops::bit::BitOrAssign>::bitor_assign": true,
  "<u8 as ops::bit::BitXor<&u8>>::bitxor": true,
  "<u8 as ops::bit::BitXor>::bitxor": true,
  "<u8 as ops::bit::BitXorAssign<&u8>>::bitxor_assign": true,
  "<u8 as ops::bit::BitXorAssign>::bitxor_assign": true,
  "<u8 as ops::bit::Not>::not": true,
  "<u8 as ops::bit::Shl<&i128>>::shl": true,
  "<u8 as ops::bit::Shl<&i16>>::shl": true,
  "<u8 as ops::bit::Shl<&i32>>::shl": true,
  "<u8 as ops::bit::Shl<&i64>>::shl": true,
  "<u8 as ops::bit::Shl<&i8>>::shl": true,
  "<u8 as ops::bit::Shl<&isize>>::shl": true,
  "<u8 as ops::bit::Shl<&u128>>::shl": true,
  "<u8 as ops::bit::Shl<&u16>>::shl": true,
  "<u8 as ops::bit::Shl<&u32>>::shl": true,
  "<u8 as ops::bit::Shl<&u64>>::shl": true,
  "<u8 as ops::bit::Shl<&u8>>::shl": true,
  "<u8 as ops::bit::Shl<&usize>>::shl": true,
  "<u8 as ops::bit::Shl<i128>>::shl": true,
  "<u8 as ops::bit::Shl<i16>>::shl": true,
  "<u8 as ops::bit::Shl<i32>>::shl": true,
  "<u8 as ops::bit::Shl<i64>>::shl": true,
  "<u8 as ops::bit::Shl<i8>>::shl": true,
  "<u8 as ops::bit::Shl<isize>>::shl": true,
  "<u8 as ops::bit::Shl<u128>>::shl": true,
  "<u8 as ops::bit::Shl<u16>>::shl": true,
  "<u8 as ops::bit::Shl<u32>>::shl": true,
  "<u8 as ops::bit::Shl<u64>>::shl": true,
  "<u8 as ops::bit::Shl<usize>>::shl": true,
  "<u8 as ops::bit::Shl>::shl": true,
  "<u8 as ops::bit::ShlAssign<&i128>>::shl_assign": true,
  "<u8 as ops::bit::ShlAssign<&i16>>::shl_assign": true,
  "<u8 as ops::bit::ShlAssign<&i32>>::shl_assign": true,
  "<u8 as ops::bit::ShlAssign<&i64>>::shl_assign": true,
  "<u8 as ops::bit::ShlAssign<&i8>>::shl_assign": true,
  "<u8 as ops::bit::ShlAssign<&isize>>::shl_assign": true,
  "<u8 as ops::bit::ShlAssign<&u128>>::shl_assign": true,
  "<u8 as ops::bit::ShlAssign<&u16>>::shl_assign": true,
  "<u8 as ops::bit::ShlAssign<&u32>>::shl_assign": true,
  "<u8 as ops::bit::ShlAssign<&u64>>::shl_assign": true,
  "<u8 as ops::bit::ShlAssign<&u8>>::shl_assign": true,
  "<u8 as ops::bit::ShlAssign<&usize>>::shl_assign": true,
  "<u8 as ops::bit::ShlAssign<i128>>::shl_assign": true,
  "<u8 as ops::bit::ShlAssign<i16>>::shl_assign": true,
  "<u8 as ops::bit::ShlAssign<i32>>::shl_assign": true,
  "<u8 as ops::bit::ShlAssign<i64>>::shl_assign": true,
  "<u8 as ops::bit::ShlAssign<i8>>::shl_assign": true,
  "<u8 as ops::bit::ShlAssign<isize>>::shl_assign": true,
  "<u8 as ops::bit::ShlAssign<u128>>::shl_assign": true,
  "<u8 as ops::bit::ShlAssign<u16>>::shl_assign": true,
  "<u8 as ops::bit::ShlAssign<u32>>::shl_assign": true,
  "<u8 as ops::bit::ShlAssign<u64>>::shl_assign": true,
  "<u8 as ops::bit::ShlAssign<usize>>::shl_assign": true,
  "<u8 as ops::bit::ShlAssign>::shl_assign": true,
  "<u8 as ops::bit::Shr<&i128>>::shr": true,
  "<u8 as ops::bit::Shr<&i16>>::shr": true,
  "<u8 as ops::bit::Shr<&i32>>::shr": true,
  "<u8 as ops::bit::Shr<&i64>>::shr": true,
  "<u8 as ops::bit::Shr<&i8>>::shr": true,
  "<u8 as ops::bit::Shr<&isize>>::shr": true,
  "<u8 as ops::bit::Shr<&u128>>::shr": true,
  "<u8 as ops::bit::Shr<&u16>>::shr": true,
  "<u8 as ops::bit::Shr<&u32>>::shr": true,
  "<u8 as ops::bit::Shr<&u64>>::shr": true,
  "<u8 as ops::bit::Shr<&u8>>::shr": true,
  "<u8 as ops::bit::Shr<&usize>>::shr": true,
  "<u8 as ops::bit::Shr<i128>>::shr": true,
  "<u8 as ops::bit::Shr<i16>>::shr": true,
  "<u8 as ops::bit::Shr<i32>>::shr": true,
  "<u8 as ops::bit::Shr<i64>>::shr": true,
  "<u8 as ops::bit::Shr<i8>>::shr": true,
  "<u8 as ops::bit::Shr<isize>>::shr": true,
  "<u8 as ops::bit::Shr<u128>>::shr": true,
  "<u8 as ops::bit::Shr<u16>>::shr": true,
  "<u8 as ops::bit::Shr<u32>>::shr": true,
  "<u8 as ops::bit::Shr<u64>>::shr": true,
  "<u8 as ops::bit::Shr<usize>>::shr": true,
  "<u8 as ops::bit::Shr>::shr": true,
  "<u8 as ops::bit::ShrAssign<&i128>>::shr_assign": true,
  "<u8 as ops::bit::ShrAssign<&i16>>::shr_assign": true,
  "<u8 as ops::bit::ShrAssign<&i32>>::shr_assign": true,
  "<u8 as ops::bit::ShrAssign<&i64>>::shr_assign": true,
  "<u8 as ops::bit::ShrAssign<&i8>>::shr_assign": true,
  "<u8 as ops::bit::ShrAssign<&isize>>::shr_assign": true,
  "<u8 as ops::bit::ShrAssign<&u128>>::shr_assign": true,
  "<u8 as ops::bit::ShrAssign<&u16>>::shr_assign": true,
  "<u8 as ops::bit::ShrAssign<&u32>>::shr_assign": true,
  "<u8 as ops::bit::ShrAssign<&u64>>::shr_assign": true,
  "<u8 as ops::bit::ShrAssign<&u8>>::shr_assign": true,
  "<u8 as ops::bit::ShrAssign<&usize>>::shr_assign": true,
  "<u8 as ops::bit::ShrAssign<i128>>::shr_assign": true,
  "<u8 as ops::bit::ShrAssign<i16>>::shr_assign": true,
  "<u8 as ops::bit::ShrAssign<i32>>::shr_assign": true,
  "<u8 as ops::bit::ShrAssign<i64>>::shr_assign": true,
  "<u8 as ops::bit::ShrAssign<i8>>::shr_assign": true,
  "<u8 as ops::bit::ShrAssign<isize>>::shr_assign": true,
  "<u8 as ops::bit::ShrAssign<u128>>::shr_assign": true,
  "<u8 as ops::bit::ShrAssign<u16>>::shr_assign": true,
  "<u8 as ops::bit::ShrAssign<u32>>::shr_assign": true,
  "<u8 as ops::bit::ShrAssign<u64>>::shr_assign": true,
  "<u8 as ops::bit::ShrAssign<usize>>::shr_assign": true,
  "<u8 as ops::bit::ShrAssign>::shr_assign": true,
  "<u8 as pat::RangePattern>::sub_one": true,
  "<u8 as string::SpecToString>::spec_to_string": true,
  "<u8 as to_tokens::ToTokens>::to_tokens": true,
  "<u8 as ub_checks::Invariant>::is_safe": true,
  "<u8 as vec::is_zero::IsZero>::is_zero": true,
  "<unix::in6_addr as core::clone::Clone>::clone": true,
  "<unix::ipv6_mreq as core::clone::Clone>::clone": true,
  "<unix::itimerval as core::clone::Clone>::clone": true,
  "<unix::linger as core::clone::Clone>::clone": true,
  "<unix::linux_like::arphdr as core::clone::Clone>::clone": true,
  "<unix::linux_like::arpreq as core::clone::Clone>::clone": true,
  "<unix::linux_like::arpreq_old as core::clone::Clone>::clone": true,
  "<unix::linux_like::epoll_event as core::clone::Clone>::clone": true,
  "<unix::linux_like::fd_set as core::clone::Clone>::clone": true,
  "<unix::linux_like::file_clone_range as core::clone::Clone>::clone": true,
  "<unix::linux_like::in6_rtmsg as core::clone::Clone>::clone": true,
  "<unix::linux_like::in_addr as core::clone::Clone>::clone": true,
  "<unix::linux_like::in_pktinfo as core::clone::Clone>::clone": true,
  "<unix::linux_like::ip_mreq as core::clone::Clone>::clone": true,
  "<unix::linux_like::ip_mreq_source as core::clone::Clone>::clone": true,
  "<unix::linux_like::ip_mreqn as core::clone::Clone>::clone": true,
  "<unix::linux_like::linux::Elf32_Ehdr as core::clone::Clone>::clone": true,
  "<unix::linux_like::linux::Elf32_Phdr as core::clone::Clone>::clone": true,
  "<unix::linux_like::linux::Elf32_Shdr as core::clone::Clone>::clone": true,
  "<unix::linux_like::linux::Elf32_Sym as core::clone::Clone>::clone": true,
  "<unix::linux_like::linux::Elf64_Ehdr as core::clone::Clone>::clone": true,
  "<unix::linux_like::linux::Elf64_Phdr as core::clone::Clone>::clone": true,
  "<unix::linux_like::linux::Elf64_Shdr as core::clone::Clone>::clone": true,
  "<unix::linux_like::linux::Elf64_Sym as core::clone::Clone>::clone": true,
  "<unix::linux_like::linux::__c_anonymous__kernel_fsid_t as core::clone::Clone>::clone": true,
  "<unix::linux_like::linux::__c_anonymous_elf32_rel as core::clone::Clone>::clone": true,
  "<unix::linux_like::linux::__c_anonymous_elf32_rela as core::clone::Clone>::clone": true,
  "<unix::linux_like::linux::__c_anonymous_elf64_rel as core::clone::Clone>::clone": true,
  "<unix::linux_like::linux::__c_anonymous_elf64_rela as core::clone::Clone>::clone": true,
  "<unix::linux_like::linux::__c_anonymous_ifru_map as core::clone::Clone>::clone": true,
  "<unix::linux_like::linux::af_alg_iv as core::clone::Clone>::clone": true,
  "<unix::linux_like::linux::arch::generic::termios2 as core::clone::Clone>::clone": true,
  "<unix::linux_like::linux::arpd_request as core::clone::Clone>::clone": true,
  "<unix::linux_like::linux::cpu_set_t as core::clone::Clone>::clone": true,
  "<unix::linux_like::linux::dirent as core::clone::Clone>::clone": true,
  "<unix::linux_like::linux::dirent64 as core::clone::Clone>::clone": true,
  "<unix::linux_like::linux::dmabuf_cmsg as core::clone::Clone>::clone": true,
  "<unix::linux_like::linux::dmabuf_token as core::clone::Clone>::clone": true,
  "<unix::linux_like::linux::dqblk as core::clone::Clone>::clone": true,
  "<unix::linux_like::linux::epoll_params as core::clone::Clone>::clone": true,
  "<unix::linux_like::linux::fanotify_event_info_fid as core::clone::Clone>::clone": true,
  "<unix::linux_like::linux::fanotify_event_info_header as core::clone::Clone>::clone": true,
  "<unix::linux_like::linux::fanotify_event_metadata as core::clone::Clone>::clone": true,
  "<unix::linux_like::linux::fanotify_response as core::clone::Clone>::clone": true,
  "<unix::linux_like::linux::fanout_args as core::clone::Clone>::clone": true,
  "<unix::linux_like::linux::ff_condition_effect as core::clone::Clone>::clone": true,
  "<unix::linux_like::linux::ff_constant_effect as core::clone::Clone>::clone": true,
  "<unix::linux_like::linux::ff_effect as core::clone::Clone>::clone": true,
  "<unix::linux_like::linux::ff_envelope as core::clone::Clone>::clone": true,
  "<unix::linux_like::linux::ff_ramp_effect as core::clone::Clone>::clone": true,
  "<unix::linux_like::linux::ff_replay as core::clone::Clone>::clone": true,
  "<unix::linux_like::linux::ff_rumble_effect as core::clone::Clone>::clone": true,
  "<unix::linux_like::linux::ff_trigger as core::clone::Clone>::clone": true,
  "<unix::linux_like::linux::fsid_t as core::clone::Clone>::clone": true,
  "<unix::linux_like::linux::genlmsghdr as core::clone::Clone>::clone": true,
  "<unix::linux_like::linux::gnu::Elf32_Chdr as core::clone::Clone>::clone": true,
  "<unix::linux_like::linux::gnu::Elf64_Chdr as core::clone::Clone>::clone": true,
  "<unix::linux_like::linux::gnu::__c_anonymous_ptrace_syscall_info_entry as core::clone::Clone>::clone": true,
  "<unix::linux_like::linux::gnu::__c_anonymous_ptrace_syscall_info_exit as core::clone::Clone>::clone": true,
  "<unix::linux_like::linux::gnu::__c_anonymous_ptrace_syscall_info_seccomp as core::clone::Clone>::clone": true,
  "<unix::linux_like::linux::gnu::__exit_status as core::clone::Clone>::clone": true,
  "<unix::linux_like::linux::gnu::__timeval as core::clone::Clone>::clone": true,
  "<unix::linux_like::linux::gnu::b64::msqid_ds as core::clone::Clone>::clone": true,
  "<unix::linux_like::linux::gnu::b64::semid_ds as core::clone::Clone>::clone": true,
  "<unix::linux_like::linux::gnu::b64::sigset_t as core::clone::Clone>::clone": true,
  "<unix::linux_like::linux::gnu::b64::sysinfo as core::clone::Clone>::clone": true,
  "<unix::linux_like::linux::gnu::b64::timex as core::clone::Clone>::clone": true,
  "<unix::linux_like::linux::gnu::b64::x86_64::_libc_fpxreg as core::clone::Clone>::clone": true,
  "<unix::linux_like::linux::gnu::b64::x86_64::_libc_xmmreg as core::clone::Clone>::clone": true,
  "<unix::linux_like::linux::gnu::b64::x86_64::clone_args as core::clone::Clone>::clone": true,
  "<unix::linux_like::linux::gnu::b64::x86_64::flock as core::clone::Clone>::clone": true,
  "<unix::linux_like::linux::gnu::b64::x86_64::flock64 as core::clone::Clone>::clone": true,
  "<unix::linux_like::linux::gnu::b64::x86_64::ipc_perm as core::clone::Clone>::clone": true,
  "<unix::linux_like::linux::gnu::b64::x86_64::max_align_t as core::clone::Clone>::clone": true,
  "<unix::linux_like::linux::gnu::b64::x86_64::not_x32::statvfs as core::clone::Clone>::clone": true,
  "<unix::linux_like::linux::gnu::b64::x86_64::pthread_attr_t as core::clone::Clone>::clone": true,
  "<unix::linux_like::linux::gnu::b64::x86_64::ptrace_rseq_configuration as core::clone::Clone>::clone": true,
  "<unix::linux_like::linux::gnu::b64::x86_64::shmid_ds as core::clone::Clone>::clone": true,
  "<unix::linux_like::linux::gnu::b64::x86_64::siginfo_t as core::clone::Clone>::clone": true,
  "<unix::linux_like::linux::gnu::b64::x86_64::stat as core::clone::Clone>::clone": true,
  "<unix::linux_like::linux::gnu::b64::x86_64::stat64 as core::clone::Clone>::clone": true,
  "<unix::linux_like::linux::gnu::b64::x86_64::statfs as core::clone::Clone>::clone": true,
  "<unix::linux_like::linux::gnu::b64::x86_64::statfs64 as core::clone::Clone>::clone": true,
  "<unix::linux_like::linux::gnu::b64::x86_64::statvfs64 as core::clone::Clone>::clone": true,
  "<unix::linux_like::linux::gnu::b64::x86_64::user_fpregs_struct as core::clone::Clone>::clone": true,
  "<unix::linux_like::linux::gnu::b64::x86_64::user_regs_struct as core::clone::Clone>::clone": true,
  "<unix::linux_like::linux::gnu::cmsghdr as core::clone::Clone>::clone": true,
  "<unix::linux_like::linux::gnu::fanotify_event_info_error as core::clone::Clone>::clone": true,
  "<unix::linux_like::linux::gnu::fanotify_event_info_pidfd as core::clone::Clone>::clone": true,
  "<unix::linux_like::linux::gnu::fpos64_t as core::clone::Clone>::clone": true,
  "<unix::linux_like::linux::gnu::fpos_t as core::clone::Clone>::clone": true,
  "<unix::linux_like::linux::gnu::iocb as core::clone::Clone>::clone": true,
  "<unix::linux_like::linux::gnu::mallinfo as core::clone::Clone>::clone": true,
  "<unix::linux_like::linux::gnu::mallinfo2 as core::clone::Clone>::clone": true,
  "<unix::linux_like::linux::gnu::mbstate_t as core::clone::Clone>::clone": true,
  "<unix::linux_like::linux::gnu::nl_mmap_hdr as core::clone::Clone>::clone": true,
  "<unix::linux_like::linux::gnu::nl_mmap_req as core::clone::Clone>::clone": true,
  "<unix::linux_like::linux::gnu::nl_pktinfo as core::clone::Clone>::clone": true,
  "<unix::linux_like::linux::gnu::ntptimeval as core::clone::Clone>::clone": true,
  "<unix::linux_like::linux::gnu::ptrace_peeksiginfo_args as core::clone::Clone>::clone": true,
  "<unix::linux_like::linux::gnu::ptrace_sud_config as core::clone::Clone>::clone": true,
  "<unix::linux_like::linux::gnu::sem_t as core::clone::Clone>::clone": true,
  "<unix::linux_like::linux::gnu::seminfo as core::clone::Clone>::clone": true,
  "<unix::linux_like::linux::gnu::sifields_sigchld as core::clone::Clone>::clone": true,
  "<unix::linux_like::linux::gnu::tcp_info as core::clone::Clone>::clone": true,
  "<unix::linux_like::linux::gnu::termios as core::clone::Clone>::clone": true,
  "<unix::linux_like::linux::gnu::timespec as core::clone::Clone>::clone": true,
  "<unix::linux_like::linux::gnu::utmpx as core::clone::Clone>::clone": true,
  "<unix::linux_like::linux::hwtstamp_config as core::clone::Clone>::clone": true,
  "<unix::linux_like::linux::in6_ifreq as core::clone::Clone>::clone": true,
  "<unix::linux_like::linux::in6_pktinfo as core::clone::Clone>::clone": true,
  "<unix::linux_like::linux::inotify_event as core::clone::Clone>::clone": true,
  "<unix::linux_like::linux::input_absinfo as core::clone::Clone>::clone": true,
  "<unix::linux_like::linux::input_event as core::clone::Clone>::clone": true,
  "<unix::linux_like::linux::input_id as core::clone::Clone>::clone": true,
  "<unix::linux_like::linux::input_keymap_entry as core::clone::Clone>::clone": true,
  "<unix::linux_like::linux::input_mask as core::clone::Clone>::clone": true,
  "<unix::linux_like::linux::itimerspec as core::clone::Clone>::clone": true,
  "<unix::linux_like::linux::iw_discarded as core::clone::Clone>::clone": true,
  "<unix::linux_like::linux::iw_encode_ext as core::clone::Clone>::clone": true,
  "<unix::linux_like::linux::iw_freq as core::clone::Clone>::clone": true,
  "<unix::linux_like::linux::iw_michaelmicfailure as core::clone::Clone>::clone": true,
  "<unix::linux_like::linux::iw_missed as core::clone::Clone>::clone": true,
  "<unix::linux_like::linux::iw_mlme as core::clone::Clone>::clone": true,
  "<unix::linux_like::linux::iw_param as core::clone::Clone>::clone": true,
  "<unix::linux_like::linux::iw_pmkid_cand as core::clone::Clone>::clone": true,
  "<unix::linux_like::linux::iw_pmksa as core::clone::Clone>::clone": true,
  "<unix::linux_like::linux::iw_priv_args as core::clone::Clone>::clone": true,
  "<unix::linux_like::linux::iw_quality as core::clone::Clone>::clone": true,
  "<unix::linux_like::linux::iw_statistics as core::clone::Clone>::clone": true,
  "<unix::linux_like::linux::iw_thrspy as core::clone::Clone>::clone": true,
  "<unix::linux_like::linux::mnt_ns_info as core::clone::Clone>::clone": true,
  "<unix::linux_like::linux::mount_attr as core::clone::Clone>::clone": true,
  "<unix::linux_like::linux::mq_attr as core::clone::Clone>::clone": true,
  "<unix::linux_like::linux::msginfo as core::clone::Clone>::clone": true,
  "<unix::linux_like::linux::nlattr as core::clone::Clone>::clone": true,
  "<unix::linux_like::linux::nlmsgerr as core::clone::Clone>::clone": true,
  "<unix::linux_like::linux::nlmsghdr as core::clone::Clone>::clone": true,
  "<unix::linux_like::linux::open_how as core::clone::Clone>::clone": true,
  "<unix::linux_like::linux::packet_mreq as core::clone::Clone>::clone": true,
  "<unix::linux_like::linux::pidfd_info as core::clone::Clone>::clone": true,
  "<unix::linux_like::linux::posix_spawnattr_t as core::clone::Clone>::clone": true,
  "<unix::linux_like::linux::pthread_barrier_t as core::clone::Clone>::clone": true,
  "<unix::linux_like::linux::pthread_barrierattr_t as core::clone::Clone>::clone": true,
  "<unix::linux_like::linux::pthread_cond_t as core::clone::Clone>::clone": true,
  "<unix::linux_like::linux::pthread_condattr_t as core::clone::Clone>::clone": true,
  "<unix::linux_like::linux::pthread_mutex_t as core::clone::Clone>::clone": true,
  "<unix::linux_like::linux::pthread_mutexattr_t as core::clone::Clone>::clone": true,
  "<unix::linux_like::linux::pthread_rwlock_t as core::clone::Clone>::clone": true,
  "<unix::linux_like::linux::pthread_rwlockattr_t as core::clone::Clone>::clone": true,
  "<unix::linux_like::linux::ptp_clock_caps as core::clone::Clone>::clone": true,
  "<unix::linux_like::linux::ptp_clock_time as core::clone::Clone>::clone": true,
  "<unix::linux_like::linux::ptp_extts_event as core::clone::Clone>::clone": true,
  "<unix::linux_like::linux::ptp_extts_request as core::clone::Clone>::clone": true,
  "<unix::linux_like::linux::ptp_pin_desc as core::clone::Clone>::clone": true,
  "<unix::linux_like::linux::ptp_sys_offset_precise as core::clone::Clone>::clone": true,
  "<unix::linux_like::linux::regmatch_t as core::clone::Clone>::clone": true,
  "<unix::linux_like::linux::rlimit64 as core::clone::Clone>::clone": true,
  "<unix::linux_like::linux::sched_attr as core::clone::Clone>::clone": true,
  "<unix::linux_like::linux::sctp_authinfo as core::clone::Clone>::clone": true,
  "<unix::linux_like::linux::sctp_initmsg as core::clone::Clone>::clone": true,
  "<unix::linux_like::linux::sctp_nxtinfo as core::clone::Clone>::clone": true,
  "<unix::linux_like::linux::sctp_prinfo as core::clone::Clone>::clone": true,
  "<unix::linux_like::linux::sctp_rcvinfo as core::clone::Clone>::clone": true,
  "<unix::linux_like::linux::sctp_sndinfo as core::clone::Clone>::clone": true,
  "<unix::linux_like::linux::sctp_sndrcvinfo as core::clone::Clone>::clone": true,
  "<unix::linux_like::linux::seccomp_data as core::clone::Clone>::clone": true,
  "<unix::linux_like::linux::seccomp_notif as core::clone::Clone>::clone": true,
  "<unix::linux_like::linux::seccomp_notif_addfd as core::clone::Clone>::clone": true,
  "<unix::linux_like::linux::seccomp_notif_resp as core::clone::Clone>::clone": true,
  "<unix::linux_like::linux::seccomp_notif_sizes as core::clone::Clone>::clone": true,
  "<unix::linux_like::linux::sembuf as core::clone::Clone>::clone": true,
  "<unix::linux_like::linux::signalfd_siginfo as core::clone::Clone>::clone": true,
  "<unix::linux_like::linux::sock_extended_err as core::clone::Clone>::clone": true,
  "<unix::linux_like::linux::sock_txtime as core::clone::Clone>::clone": true,
  "<unix::linux_like::linux::sockaddr_alg as core::clone::Clone>::clone": true,
  "<unix::linux_like::linux::sockaddr_nl as core::clone::Clone>::clone": true,
  "<unix::linux_like::linux::sockaddr_pkt as core::clone::Clone>::clone": true,
  "<unix::linux_like::linux::sockaddr_vm as core::clone::Clone>::clone": true,
  "<unix::linux_like::linux::sockaddr_xdp as core::clone::Clone>::clone": true,
  "<unix::linux_like::linux::tls12_crypto_info_aes_ccm_128 as core::clone::Clone>::clone": true,
  "<unix::linux_like::linux::tls12_crypto_info_aes_gcm_128 as core::clone::Clone>::clone": true,
  "<unix::linux_like::linux::tls12_crypto_info_aes_gcm_256 as core::clone::Clone>::clone": true,
  "<unix::linux_like::linux::tls12_crypto_info_aria_gcm_128 as core::clone::Clone>::clone": true,
  "<unix::linux_like::linux::tls12_crypto_info_aria_gcm_256 as core::clone::Clone>::clone": true,
  "<unix::linux_like::linux::tls12_crypto_info_chacha20_poly1305 as core::clone::Clone>::clone": true,
  "<unix::linux_like::linux::tls12_crypto_info_sm4_ccm as core::clone::Clone>::clone": true,
  "<unix::linux_like::linux::tls12_crypto_info_sm4_gcm as core::clone::Clone>::clone": true,
  "<unix::linux_like::linux::tls_crypto_info as core::clone::Clone>::clone": true,
  "<unix::linux_like::linux::tpacket2_hdr as core::clone::Clone>::clone": true,
  "<unix::linux_like::linux::tpacket3_hdr as core::clone::Clone>::clone": true,
  "<unix::linux_like::linux::tpacket_auxdata as core::clone::Clone>::clone": true,
  "<unix::linux_like::linux::tpacket_bd_ts as core::clone::Clone>::clone": true,
  "<unix::linux_like::linux::tpacket_hdr as core::clone::Clone>::clone": true,
  "<unix::linux_like::linux::tpacket_hdr_v1 as core::clone::Clone>::clone": true,
  "<unix::linux_like::linux::tpacket_hdr_variant1 as core::clone::Clone>::clone": true,
  "<unix::linux_like::linux::tpacket_req as core::clone::Clone>::clone": true,
  "<unix::linux_like::linux::tpacket_req3 as core::clone::Clone>::clone": true,
  "<unix::linux_like::linux::tpacket_rollover_stats as core::clone::Clone>::clone": true,
  "<unix::linux_like::linux::tpacket_stats as core::clone::Clone>::clone": true,
  "<unix::linux_like::linux::tpacket_stats_v3 as core::clone::Clone>::clone": true,
  "<unix::linux_like::linux::tpacket_versions as core::clone::Clone>::clone": true,
  "<unix::linux_like::linux::ucred as core::clone::Clone>::clone": true,
  "<unix::linux_like::linux::uinput_abs_setup as core::clone::Clone>::clone": true,
  "<unix::linux_like::linux::uinput_ff_erase as core::clone::Clone>::clone": true,
  "<unix::linux_like::linux::uinput_ff_upload as core::clone::Clone>::clone": true,
  "<unix::linux_like::linux::uinput_setup as core::clone::Clone>::clone": true,
  "<unix::linux_like::linux::uinput_user_dev as core::clone::Clone>::clone": true,
  "<unix::linux_like::linux::xdp_desc as core::clone::Clone>::clone": true,
  "<unix::linux_like::linux::xdp_mmap_offsets as core::clone::Clone>::clone": true,
  "<unix::linux_like::linux::xdp_mmap_offsets_v1 as core::clone::Clone>::clone": true,
  "<unix::linux_like::linux::xdp_options as core::clone::Clone>::clone": true,
  "<unix::linux_like::linux::xdp_ring_offset as core::clone::Clone>::clone": true,
  "<unix::linux_like::linux::xdp_ring_offset_v1 as core::clone::Clone>::clone": true,
  "<unix::linux_like::linux::xdp_statistics as core::clone::Clone>::clone": true,
  "<unix::linux_like::linux::xdp_statistics_v1 as core::clone::Clone>::clone": true,
  "<unix::linux_like::linux::xdp_umem_reg as core::clone::Clone>::clone": true,
  "<unix::linux_like::linux::xdp_umem_reg_v1 as core::clone::Clone>::clone": true,
  "<unix::linux_like::linux::xsk_tx_metadata_completion as core::clone::Clone>::clone": true,
  "<unix::linux_like::linux::xsk_tx_metadata_request as core::clone::Clone>::clone": true,
  "<unix::linux_like::sched_param as core::clone::Clone>::clone": true,
  "<unix::linux_like::sock_filter as core::clone::Clone>::clone": true,
  "<unix::linux_like::sockaddr as core::clone::Clone>::clone": true,
  "<unix::linux_like::sockaddr_in as core::clone::Clone>::clone": true,
  "<unix::linux_like::sockaddr_in6 as core::clone::Clone>::clone": true,
  "<unix::linux_like::sockaddr_ll as core::clone::Clone>::clone": true,
  "<unix::linux_like::sockaddr_storage as core::clone::Clone>::clone": true,
  "<unix::linux_like::sockaddr_un as core::clone::Clone>::clone": true,
  "<unix::linux_like::statx as core::clone::Clone>::clone": true,
  "<unix::linux_like::statx_timestamp as core::clone::Clone>::clone": true,
  "<unix::linux_like::utsname as core::clone::Clone>::clone": true,
  "<unix::pollfd as core::clone::Clone>::clone": true,
  "<unix::rlimit as core::clone::Clone>::clone": true,
  "<unix::rusage as core::clone::Clone>::clone": true,
  "<unix::timeval as core::clone::Clone>::clone": true,
  "<unix::tms as core::clone::Clone>::clone": true,
  "<unix::utimbuf as core::clone::Clone>::clone": true,
  "<unix::winsize as core::clone::Clone>::clone": true,
  "<usize as bridge::Mark>::mark": true,
  "<usize as bridge::Unmark>::unmark": true,
  "<usize as default::Default>::default": true,
  "<usize as intrinsics::fallback::CarryingMulAdd>::carrying_mul_add": true,
  "<usize as intrinsics::fallback::FunnelShift>::unchecked_funnel_shl": true,
  "<usize as intrinsics::fallback::FunnelShift>::unchecked_funnel_shr": true,
  "<usize as iter::range::Step>::backward": true,
  "<usize as iter::range::Step>::backward_checked": true,
  "<usize as iter::range::Step>::forward": true,
  "<usize as iter::range::Step>::forward_checked": true,
  "<usize as iter::range::Step>::steps_between": true,
  "<usize as kani::rustc_intrinsics::ToISize>::to_isize": true,
  "<usize as math::libm_math::support::int_traits::CastInto<i128>>::cast": true,
  "<usize as math::libm_math::support::int_traits::CastInto<i128>>::cast_lossy": true,
  "<usize as math::libm_math::support::int_traits::CastInto<i16>>::cast": true,
  "<usize as math::libm_math::support::int_traits::CastInto<i16>>::cast_lossy": true,
  "<usize as math::libm_math::support::int_traits::CastInto<i32>>::cast": true,
  "<usize as math::libm_math::support::int_traits::CastInto<i32>>::cast_lossy": true,
  "<usize as math::libm_math::support::int_traits::CastInto<i64>>::cast": true,
  "<usize as math::libm_math::support::int_traits::CastInto<i64>>::cast_lossy": true,
  "<usize as math::libm_math::support::int_traits::CastInto<i8>>::cast": true,
  "<usize as math::libm_math::support::int_traits::CastInto<i8>>::cast_lossy": true,
  "<usize as math::libm_math::support::int_traits::CastInto<isize>>::cast": true,
  "<usize as math::libm_math::support::int_traits::CastInto<isize>>::cast_lossy": true,
  "<usize as math::libm_math::support::int_traits::CastInto<u128>>::cast": true,
  "<usize as math::libm_math::support::int_traits::CastInto<u128>>::cast_lossy": true,
  "<usize as math::libm_math::support::int_traits::CastInto<u16>>::cast": true,
  "<usize as math::libm_math::support::int_traits::CastInto<u16>>::cast_lossy": true,
  "<usize as math::libm_math::support::int_traits::CastInto<u32>>::cast": true,
  "<usize as math::libm_math::support::int_traits::CastInto<u32>>::cast_lossy": true,
  "<usize as math::libm_math::support::int_traits::CastInto<u64>>::cast": true,
  "<usize as math::libm_math::support::int_traits::CastInto<u64>>::cast_lossy": true,
  "<usize as math::libm_math::support::int_traits::CastInto<u8>>::cast": true,
  "<usize as math::libm_math::support::int_traits::CastInto<u8>>::cast_lossy": true,
  "<usize as math::libm_math::support::int_traits::CastInto<usize>>::cast": true,
  "<usize as math::libm_math::support::int_traits::CastInto<usize>>::cast_lossy": true,
  "<usize as math::libm_math::support::int_traits::Int>::abs": true,
  "<usize as math::libm_math::support::int_traits::Int>::abs_diff": true,
  "<usize as math::libm_math::support::int_traits::Int>::borrowing_sub": true,
  "<usize as math::libm_math::support::int_traits::Int>::carrying_add": true,
  "<usize as math::libm_math::support::int_traits::Int>::checked_add": true,
  "<usize as math::libm_math::support::int_traits::Int>::checked_sub": true,
  "<usize as math::libm_math::support::int_traits::Int>::from_bool": true,
  "<usize as math::libm_math::support::int_traits::Int>::from_unsigned": true,
  "<usize as math::libm_math::support::int_traits::Int>::ilog2": true,
  "<usize as math::libm_math::support::int_traits::Int>::is_zero": true,
  "<usize as math::libm_math::support::int_traits::Int>::leading_zeros": true,
  "<usize as math::libm_math::support::int_traits::Int>::logical_shr": true,
  "<usize as math::libm_math::support::int_traits::Int>::overflowing_add": true,
  "<usize as math::libm_math::support::int_traits::Int>::overflowing_sub": true,
  "<usize as math::libm_math::support::int_traits::Int>::rotate_left": true,
  "<usize as math::libm_math::support::int_traits::Int>::signed": true,
  "<usize as math::libm_math::support::int_traits::Int>::trailing_zeros": true,
  "<usize as math::libm_math::support::int_traits::Int>::unsigned": true,
  "<usize as math::libm_math::support::int_traits::Int>::unsigned_abs": true,
  "<usize as math::libm_math::support::int_traits::Int>::wrapping_add": true,
  "<usize as math::libm_math::support::int_traits::Int>::wrapping_mul": true,
  "<usize as math::libm_math::support::int_traits::Int>::wrapping_neg": true,
  "<usize as math::libm_math::support::int_traits::Int>::wrapping_shl": true,
  "<usize as math::libm_math::support::int_traits::Int>::wrapping_shr": true,
  "<usize as math::libm_math::support::int_traits::Int>::wrapping_sub": true,
  "<usize as ops::arith::Add<&usize>>::add": true,
  "<usize as ops::arith::Add>::add": true,
  "<usize as ops::arith::AddAssign<&usize>>::add_assign": true,
  "<usize as ops::arith::AddAssign>::add_assign": true,
  "<usize as ops::arith::Div<&usize>>::div": true,
  "<usize as ops::arith::Div>::div": true,
  "<usize as ops::arith::DivAssign<&usize>>::div_assign": true,
  "<usize as ops::arith::DivAssign>::div_assign": true,
  "<usize as ops::arith::Mul<&usize>>::mul": true,
  "<usize as ops::arith::Mul>::mul": true,
  "<usize as ops::arith::MulAssign<&usize>>::mul_assign": true,
  "<usize as ops::arith::MulAssign>::mul_assign": true,
  "<usize as ops::arith::Rem<&usize>>::rem": true,
  "<usize as ops::arith::Rem>::rem": true,
  "<usize as ops::arith::RemAssign<&usize>>::rem_assign": true,
  "<usize as ops::arith::RemAssign>::rem_assign": true,
  "<usize as ops::arith::Sub<&usize>>::sub": true,
  "<usize as ops::arith::Sub>::sub": true,
  "<usize as ops::arith::SubAssign<&usize>>::sub_assign": true,
  "<usize as ops::arith::SubAssign>::sub_assign": true,
  "<usize as ops::bit::BitAnd<&usize>>::bitand": true,
  "<usize as ops::bit::BitAnd>::bitand": true,
  "<usize as ops::bit::BitAndAssign<&usize>>::bitand_assign": true,
  "<usize as ops::bit::BitAndAssign>::bitand_assign": true,
  "<usize as ops::bit::BitOr<&usize>>::bitor": true,
  "<usize as ops::bit::BitOr>::bitor": true,
  "<usize as ops::bit::BitOrAssign<&usize>>::bitor_assign": true,
  "<usize as ops::bit::BitOrAssign>::bitor_assign": true,
  "<usize as ops::bit::BitXor<&usize>>::bitxor": true,
  "<usize as ops::bit::BitXor>::bitxor": true,
  "<usize as ops::bit::BitXorAssign<&usize>>::bitxor_assign": true,
  "<usize as ops::bit::BitXorAssign>::bitxor_assign": true,
  "<usize as ops::bit::Not>::not": true,
  "<usize as ops::bit::Shl<&i128>>::shl": true,
  "<usize as ops::bit::Shl<&i16>>::shl": true,
  "<usize as ops::bit::Shl<&i32>>::shl": true,
  "<usize as ops::bit::Shl<&i64>>::shl": true,
  "<usize as ops::bit::Shl<&i8>>::shl": true,
  "<usize as ops::bit::Shl<&isize>>::shl": true,
  "<usize as ops::bit::Shl<&u128>>::shl": true,
  "<usize as ops::bit::Shl<&u16>>::shl": true,
  "<usize as ops::bit::Shl<&u32>>::shl": true,
  "<usize as ops::bit::Shl<&u64>>::shl": true,
  "<usize as ops::bit::Shl<&u8>>::shl": true,
  "<usize as ops::bit::Shl<&usize>>::shl": true,
  "<usize as ops::bit::Shl<i128>>::shl": true,
  "<usize as ops::bit::Shl<i16>>::shl": true,
  "<usize as ops::bit::Shl<i32>>::shl": true,
  "<usize as ops::bit::Shl<i64>>::shl": true,
  "<usize as ops::bit::Shl<i8>>::shl": true,
  "<usize as ops::bit::Shl<isize>>::shl": true,
  "<usize as ops::bit::Shl<u128>>::shl": true,
  "<usize as ops::bit::Shl<u16>>::shl": true,
  "<usize as ops::bit::Shl<u32>>::shl": true,
  "<usize as ops::bit::Shl<u64>>::shl": true,
  "<usize as ops::bit::Shl<u8>>::shl": true,
  "<usize as ops::bit::Shl>::shl": true,
  "<usize as ops::bit::ShlAssign<&i128>>::shl_assign": true,
  "<usize as ops::bit::ShlAssign<&i16>>::shl_assign": true,
  "<usize as ops::bit::ShlAssign<&i32>>::shl_assign": true,
  "<usize as ops::bit::ShlAssign<&i64>>::shl_assign": true,
  "<usize as ops::bit::ShlAssign<&i8>>::shl_assign": true,
  "<usize as ops::bit::ShlAssign<&isize>>::shl_assign": true,
  "<usize as ops::bit::ShlAssign<&u128>>::shl_assign": true,
  "<usize as ops::bit::ShlAssign<&u16>>::shl_assign": true,
  "<usize as ops::bit::ShlAssign<&u32>>::shl_assign": true,
  "<usize as ops::bit::ShlAssign<&u64>>::shl_assign": true,
  "<usize as ops::bit::ShlAssign<&u8>>::shl_assign": true,
  "<usize as ops::bit::ShlAssign<&usize>>::shl_assign": true,
  "<usize as ops::bit::ShlAssign<i128>>::shl_assign": true,
  "<usize as ops::bit::ShlAssign<i16>>::shl_assign": true,
  "<usize as ops::bit::ShlAssign<i32>>::shl_assign": true,
  "<usize as ops::bit::ShlAssign<i64>>::shl_assign": true,
  "<usize as ops::bit::ShlAssign<i8>>::shl_assign": true,
  "<usize as ops::bit::ShlAssign<isize>>::shl_assign": true,
  "<usize as ops::bit::ShlAssign<u128>>::shl_assign": true,
  "<usize as ops::bit::ShlAssign<u16>>::shl_assign": true,
  "<usize as ops::bit::ShlAssign<u32>>::shl_assign": true,
  "<usize as ops::bit::ShlAssign<u64>>::shl_assign": true,
  "<usize as ops::bit::ShlAssign<u8>>::shl_assign": true,
  "<usize as ops::bit::ShlAssign>::shl_assign": true,
  "<usize as ops::bit::Shr<&i128>>::shr": true,
  "<usize as ops::bit::Shr<&i16>>::shr": true,
  "<usize as ops::bit::Shr<&i32>>::shr": true,
  "<usize as ops::bit::Shr<&i64>>::shr": true,
  "<usize as ops::bit::Shr<&i8>>::shr": true,
  "<usize as ops::bit::Shr<&isize>>::shr": true,
  "<usize as ops::bit::Shr<&u128>>::shr": true,
  "<usize as ops::bit::Shr<&u16>>::shr": true,
  "<usize as ops::bit::Shr<&u32>>::shr": true,
  "<usize as ops::bit::Shr<&u64>>::shr": true,
  "<usize as ops::bit::Shr<&u8>>::shr": true,
  "<usize as ops::bit::Shr<&usize>>::shr": true,
  "<usize as ops::bit::Shr<i128>>::shr": true,
  "<usize as ops::bit::Shr<i16>>::shr": true,
  "<usize as ops::bit::Shr<i32>>::shr": true,
  "<usize as ops::bit::Shr<i64>>::shr": true,
  "<usize as ops::bit::Shr<i8>>::shr": true,
  "<usize as ops::bit::Shr<isize>>::shr": true,
  "<usize as ops::bit::Shr<u128>>::shr": true,
  "<usize as ops::bit::Shr<u16>>::shr": true,
  "<usize as ops::bit::Shr<u32>>::shr": true,
  "<usize as ops::bit::Shr<u64>>::shr": true,
  "<usize as ops::bit::Shr<u8>>::shr": true,
  "<usize as ops::bit::Shr>::shr": true,
  "<usize as ops::bit::ShrAssign<&i128>>::shr_assign": true,
  "<usize as ops::bit::ShrAssign<&i16>>::shr_assign": true,
  "<usize as ops::bit::ShrAssign<&i32>>::shr_assign": true,
  "<usize as ops::bit::ShrAssign<&i64>>::shr_assign": true,
  "<usize as ops::bit::ShrAssign<&i8>>::shr_assign": true,
  "<usize as ops::bit::ShrAssign<&isize>>::shr_assign": true,
  "<usize as ops::bit::ShrAssign<&u128>>::shr_assign": true,
  "<usize as ops::bit::ShrAssign<&u16>>::shr_assign": true,
  "<usize as ops::bit::ShrAssign<&u32>>::shr_assign": true,
  "<usize as ops::bit::ShrAssign<&u64>>::shr_assign": true,
  "<usize as ops::bit::ShrAssign<&u8>>::shr_assign": true,
  "<usize as ops::bit::ShrAssign<&usize>>::shr_assign": true,
  "<usize as ops::bit::ShrAssign<i128>>::shr_assign": true,
  "<usize as ops::bit::ShrAssign<i16>>::shr_assign": true,
  "<usize as ops::bit::ShrAssign<i32>>::shr_assign": true,
  "<usize as ops::bit::ShrAssign<i64>>::shr_assign": true,
  "<usize as ops::bit::ShrAssign<i8>>::shr_assign": true,
  "<usize as ops::bit::ShrAssign<isize>>::shr_assign": true,
  "<usize as ops::bit::ShrAssign<u128>>::shr_assign": true,
  "<usize as ops::bit::ShrAssign<u16>>::shr_assign": true,
  "<usize as ops::bit::ShrAssign<u32>>::shr_assign": true,
  "<usize as ops::bit::ShrAssign<u64>>::shr_assign": true,
  "<usize as ops::bit::ShrAssign<u8>>::shr_assign": true,
  "<usize as ops::bit::ShrAssign>::shr_assign": true,
  "<usize as pat::RangePattern>::sub_one": true,
  "<usize as read::reader::ReaderOffset>::checked_sub": true,
  "<usize as read::reader::ReaderOffset>::from_i16": true,
  "<usize as read::reader::ReaderOffset>::from_u16": true,
  "<usize as read::reader::ReaderOffset>::from_u32": true,
  "<usize as read::reader::ReaderOffset>::from_u64": true,
  "<usize as read::reader::ReaderOffset>::from_u8": true,
  "<usize as read::reader::ReaderOffset>::into_u64": true,
  "<usize as read::reader::ReaderOffset>::wrapping_add": true,
  "<usize as slice::GetDisjointMutIndex>::is_in_bounds": true,
  "<usize as slice::GetDisjointMutIndex>::is_overlapping": true,
  "<usize as slice::index::SliceIndex<[T]>>::get_unchecked::precondition_check": true,
  "<usize as slice::index::SliceIndex<[T]>>::get_unchecked_mut::precondition_check": true,
  "<usize as string::SpecToString>::spec_to_string": true,
  "<usize as to_tokens::ToTokens>::to_tokens": true,
  "<usize as ub_checks::Invariant>::is_safe": true,
  "<usize as vec::is_zero::IsZero>::is_zero": true,
  "<v0::ParseError as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq": true,
  "<v0::ParseError as rustc_std_workspace_core::cmp::PartialEq>::eq": true,
  "<vector::SensibleMoveMask as rustc_std_workspace_core::clone::Clone>::clone": true,
  "<vector::SensibleMoveMask as vector::MoveMask>::all_zeros_except_least_significant": true,
  "<vector::SensibleMoveMask as vector::MoveMask>::and": true,
  "<vector::SensibleMoveMask as vector::MoveMask>::clear_least_significant_bit": true,
  "<vector::SensibleMoveMask as vector::MoveMask>::count_ones": true,
  "<vector::SensibleMoveMask as vector::MoveMask>::first_offset": true,
  "<vector::SensibleMoveMask as vector::MoveMask>::has_non_zero": true,
  "<vector::SensibleMoveMask as vector::MoveMask>::last_offset": true,
  "<vector::SensibleMoveMask as vector::MoveMask>::or": true,
  "<wtf8::CodePoint as clone::Clone>::clone": true,
  "<wtf8::CodePoint as cmp::Eq>::assert_receiver_is_total_eq": true,
  "<wtf8::CodePoint as cmp::Ord>::cmp": true,
  "<wtf8::CodePoint as cmp::PartialEq>::eq": true,
  "<wtf8::CodePoint as cmp::PartialOrd>::partial_cmp": true,
  "<xcoff::AuxHeader32 as read::xcoff::file::AuxHeader>::o_algndata": true,
  "<xcoff::AuxHeader32 as read::xcoff::file::AuxHeader>::o_algntext": true,
  "<xcoff::AuxHeader32 as read::xcoff::file::AuxHeader>::o_bsize": true,
  "<xcoff::AuxHeader32 as read::xcoff::file::AuxHeader>::o_cpuflag": true,
  "<xcoff::AuxHeader32 as read::xcoff::file::AuxHeader>::o_cputype": true,
  "<xcoff::AuxHeader32 as read::xcoff::file::AuxHeader>::o_data_start": true,
  "<xcoff::AuxHeader32 as read::xcoff::file::AuxHeader>::o_datapsize": true,
  "<xcoff::AuxHeader32 as read::xcoff::file::AuxHeader>::o_debugger": true,
  "<xcoff::AuxHeader32 as read::xcoff::file::AuxHeader>::o_dsize": true,
  "<xcoff::AuxHeader32 as read::xcoff::file::AuxHeader>::o_entry": true,
  "<xcoff::AuxHeader32 as read::xcoff::file::AuxHeader>::o_flags": true,
  "<xcoff::AuxHeader32 as read::xcoff::file::AuxHeader>::o_maxdata": true,
  "<xcoff::AuxHeader32 as read::xcoff::file::AuxHeader>::o_maxstack": true,
  "<xcoff::AuxHeader32 as read::xcoff::file::AuxHeader>::o_mflag": true,
  "<xcoff::AuxHeader32 as read::xcoff::file::AuxHeader>::o_modtype": true,
  "<xcoff::AuxHeader32 as read::xcoff::file::AuxHeader>::o_snbss": true,
  "<xcoff::AuxHeader32 as read::xcoff::file::AuxHeader>::o_sndata": true,
  "<xcoff::AuxHeader32 as read::xcoff::file::AuxHeader>::o_snentry": true,
  "<xcoff::AuxHeader32 as read::xcoff::file::AuxHeader>::o_snloader": true,
  "<xcoff::AuxHeader32 as read::xcoff::file::AuxHeader>::o_sntbss": true,
  "<xcoff::AuxHeader32 as read::xcoff::file::AuxHeader>::o_sntdata": true,
  "<xcoff::AuxHeader32 as read::xcoff::file::AuxHeader>::o_sntext": true,
  "<xcoff::AuxHeader32 as read::xcoff::file::AuxHeader>::o_sntoc": true,
  "<xcoff::AuxHeader32 as read::xcoff::file::AuxHeader>::o_stackpsize": true,
  "<xcoff::AuxHeader32 as read::xcoff::file::AuxHeader>::o_text_start": true,
  "<xcoff::AuxHeader32 as read::xcoff::file::AuxHeader>::o_textpsize": true,
  "<xcoff::AuxHeader32 as read::xcoff::file::AuxHeader>::o_toc": true,
  "<xcoff::AuxHeader32 as read::xcoff::file::AuxHeader>::o_tsize": true,
  "<xcoff::AuxHeader32 as read::xcoff::file::AuxHeader>::o_vstamp": true,
  "<xcoff::AuxHeader32 as read::xcoff::file::AuxHeader>::o_x64flags": true,
  "<xcoff::AuxHeader32 as rustc_std_workspace_core::clone::Clone>::clone": true,
  "<xcoff::BlockAux32 as rustc_std_workspace_core::clone::Clone>::clone": true,
  "<xcoff::BlockAux64 as rustc_std_workspace_core::clone::Clone>::clone": true,
  "<xcoff::CsectAux32 as read::xcoff::symbol::CsectAux>::x_auxtype": true,
  "<xcoff::CsectAux32 as read::xcoff::symbol::CsectAux>::x_parmhash": true,
  "<xcoff::CsectAux32 as read::xcoff::symbol::CsectAux>::x_scnlen": true,
  "<xcoff::CsectAux32 as read::xcoff::symbol::CsectAux>::x_smclas": true,
  "<xcoff::CsectAux32 as read::xcoff::symbol::CsectAux>::x_smtyp": true,
  "<xcoff::CsectAux32 as read::xcoff::symbol::CsectAux>::x_snhash": true,
  "<xcoff::CsectAux32 as read::xcoff::symbol::CsectAux>::x_snstab": true,
  "<xcoff::CsectAux32 as read::xcoff::symbol::CsectAux>::x_stab": true,
  "<xcoff::CsectAux32 as rustc_std_workspace_core::clone::Clone>::clone": true,
  "<xcoff::CsectAux64 as read::xcoff::symbol::CsectAux>::x_auxtype": true,
  "<xcoff::CsectAux64 as read::xcoff::symbol::CsectAux>::x_parmhash": true,
  "<xcoff::CsectAux64 as read::xcoff::symbol::CsectAux>::x_scnlen": true,
  "<xcoff::CsectAux64 as read::xcoff::symbol::CsectAux>::x_smclas": true,
  "<xcoff::CsectAux64 as read::xcoff::symbol::CsectAux>::x_smtyp": true,
  "<xcoff::CsectAux64 as read::xcoff::symbol::CsectAux>::x_snhash": true,
  "<xcoff::CsectAux64 as read::xcoff::symbol::CsectAux>::x_snstab": true,
  "<xcoff::CsectAux64 as read::xcoff::symbol::CsectAux>::x_stab": true,
  "<xcoff::CsectAux64 as rustc_std_workspace_core::clone::Clone>::clone": true,
  "<xcoff::DwarfAux32 as rustc_std_workspace_core::clone::Clone>::clone": true,
  "<xcoff::DwarfAux64 as rustc_std_workspace_core::clone::Clone>::clone": true,
  "<xcoff::ExpAux as rustc_std_workspace_core::clone::Clone>::clone": true,
  "<xcoff::FileAux32 as read::xcoff::symbol::FileAux>::x_auxtype": true,
  "<xcoff::FileAux32 as read::xcoff::symbol::FileAux>::x_fname": true,
  "<xcoff::FileAux32 as read::xcoff::symbol::FileAux>::x_ftype": true,
  "<xcoff::FileAux32 as rustc_std_workspace_core::clone::Clone>::clone": true,
  "<xcoff::FileAux64 as read::xcoff::symbol::FileAux>::x_auxtype": true,
  "<xcoff::FileAux64 as read::xcoff::symbol::FileAux>::x_fname": true,
  "<xcoff::FileAux64 as read::xcoff::symbol::FileAux>::x_ftype": true,
  "<xcoff::FileAux64 as rustc_std_workspace_core::clone::Clone>::clone": true,
  "<xcoff::FileHeader32 as read::xcoff::file::FileHeader>::f_flags": true,
  "<xcoff::FileHeader32 as read::xcoff::file::FileHeader>::f_magic": true,
  "<xcoff::FileHeader32 as read::xcoff::file::FileHeader>::f_nscns": true,
  "<xcoff::FileHeader32 as read::xcoff::file::FileHeader>::f_nsyms": true,
  "<xcoff::FileHeader32 as read::xcoff::file::FileHeader>::f_opthdr": true,
  "<xcoff::FileHeader32 as read::xcoff::file::FileHeader>::f_symptr": true,
  "<xcoff::FileHeader32 as read::xcoff::file::FileHeader>::f_timdat": true,
  "<xcoff::FileHeader32 as read::xcoff::file::FileHeader>::is_type_64": true,
  "<xcoff::FileHeader32 as rustc_std_workspace_core::clone::Clone>::clone": true,
  "<xcoff::FileHeader64 as read::xcoff::file::FileHeader>::f_flags": true,
  "<xcoff::FileHeader64 as read::xcoff::file::FileHeader>::f_magic": true,
  "<xcoff::FileHeader64 as read::xcoff::file::FileHeader>::f_nscns": true,
  "<xcoff::FileHeader64 as read::xcoff::file::FileHeader>::f_nsyms": true,
  "<xcoff::FileHeader64 as read::xcoff::file::FileHeader>::f_opthdr": true,
  "<xcoff::FileHeader64 as read::xcoff::file::FileHeader>::f_symptr": true,
  "<xcoff::FileHeader64 as read::xcoff::file::FileHeader>::f_timdat": true,
  "<xcoff::FileHeader64 as read::xcoff::file::FileHeader>::is_type_64": true,
  "<xcoff::FileHeader64 as rustc_std_workspace_core::clone::Clone>::clone": true,
  "<xcoff::FunAux32 as rustc_std_workspace_core::clone::Clone>::clone": true,
  "<xcoff::FunAux64 as rustc_std_workspace_core::clone::Clone>::clone": true,
  "<xcoff::Rel32 as read::xcoff::relocation::Rel>::r_rsize": true,
  "<xcoff::Rel32 as read::xcoff::relocation::Rel>::r_rtype": true,
  "<xcoff::Rel32 as read::xcoff::relocation::Rel>::r_symndx": true,
  "<xcoff::Rel32 as read::xcoff::relocation::Rel>::r_vaddr": true,
  "<xcoff::Rel32 as rustc_std_workspace_core::clone::Clone>::clone": true,
  "<xcoff::Rel64 as read::xcoff::relocation::Rel>::r_rsize": true,
  "<xcoff::Rel64 as read::xcoff::relocation::Rel>::r_rtype": true,
  "<xcoff::Rel64 as read::xcoff::relocation::Rel>::r_symndx": true,
  "<xcoff::Rel64 as read::xcoff::relocation::Rel>::r_vaddr": true,
  "<xcoff::Rel64 as rustc_std_workspace_core::clone::Clone>::clone": true,
  "<xcoff::SectionHeader32 as read::xcoff::section::SectionHeader>::s_flags": true,
  "<xcoff::SectionHeader32 as read::xcoff::section::SectionHeader>::s_lnnoptr": true,
  "<xcoff::SectionHeader32 as read::xcoff::section::SectionHeader>::s_name": true,
  "<xcoff::SectionHeader32 as read::xcoff::section::SectionHeader>::s_nlnno": true,
  "<xcoff::SectionHeader32 as read::xcoff::section::SectionHeader>::s_nreloc": true,
  "<xcoff::SectionHeader32 as read::xcoff::section::SectionHeader>::s_paddr": true,
  "<xcoff::SectionHeader32 as read::xcoff::section::SectionHeader>::s_relptr": true,
  "<xcoff::SectionHeader32 as read::xcoff::section::SectionHeader>::s_scnptr": true,
  "<xcoff::SectionHeader32 as read::xcoff::section::SectionHeader>::s_size": true,
  "<xcoff::SectionHeader32 as read::xcoff::section::SectionHeader>::s_vaddr": true,
  "<xcoff::SectionHeader32 as rustc_std_workspace_core::clone::Clone>::clone": true,
  "<xcoff::SectionHeader64 as read::xcoff::section::SectionHeader>::s_flags": true,
  "<xcoff::SectionHeader64 as read::xcoff::section::SectionHeader>::s_lnnoptr": true,
  "<xcoff::SectionHeader64 as read::xcoff::section::SectionHeader>::s_name": true,
  "<xcoff::SectionHeader64 as read::xcoff::section::SectionHeader>::s_nlnno": true,
  "<xcoff::SectionHeader64 as read::xcoff::section::SectionHeader>::s_nreloc": true,
  "<xcoff::SectionHeader64 as read::xcoff::section::SectionHeader>::s_paddr": true,
  "<xcoff::SectionHeader64 as read::xcoff::section::SectionHeader>::s_relptr": true,
  "<xcoff::SectionHeader64 as read::xcoff::section::SectionHeader>::s_scnptr": true,
  "<xcoff::SectionHeader64 as read::xcoff::section::SectionHeader>::s_size": true,
  "<xcoff::SectionHeader64 as read::xcoff::section::SectionHeader>::s_vaddr": true,
  "<xcoff::SectionHeader64 as rustc_std_workspace_core::clone::Clone>::clone": true,
  "<xcoff::StatAux as rustc_std_workspace_core::clone::Clone>::clone": true,
  "<xcoff::Symbol32 as read::xcoff::symbol::Symbol>::n_numaux": true,
  "<xcoff::Symbol32 as read::xcoff::symbol::Symbol>::n_sclass": true,
  "<xcoff::Symbol32 as read::xcoff::symbol::Symbol>::n_scnum": true,
  "<xcoff::Symbol32 as read::xcoff::symbol::Symbol>::n_type": true,
  "<xcoff::Symbol32 as read::xcoff::symbol::Symbol>::n_value": true,
  "<xcoff::Symbol32 as read::xcoff::symbol::Symbol>::name_offset": true,
  "<xcoff::Symbol32 as rustc_std_workspace_core::clone::Clone>::clone": true,
  "<xcoff::Symbol64 as read::xcoff::symbol::Symbol>::n_numaux": true,
  "<xcoff::Symbol64 as read::xcoff::symbol::Symbol>::n_sclass": true,
  "<xcoff::Symbol64 as read::xcoff::symbol::Symbol>::n_scnum": true,
  "<xcoff::Symbol64 as read::xcoff::symbol::Symbol>::n_type": true,
  "<xcoff::Symbol64 as read::xcoff::symbol::Symbol>::n_value": true,
  "<xcoff::Symbol64 as read::xcoff::symbol::Symbol>::name_offset": true,
  "<xcoff::Symbol64 as rustc_std_workspace_core::clone::Clone>::clone": true,
  "<xcoff::SymbolBytes as rustc_std_workspace_core::clone::Clone>::clone": true,
  "Adler32::checksum": true,
  "Adler32::from_checksum": true,
  "Adler32::new": true,
  "ConcatStreamsHelper::new": true,
  "ConcatTreesHelper::new": true,
  "EscapeError::is_fatal": true,
  "Group::delimiter": true,
  "Group::new": true,
  "Group::set_span": true,
  "Group::span": true,
  "Group::span_close": true,
  "Group::span_open": true,
  "Group::stream": true,
  "Ident::set_span": true,
  "Ident::span": true,
  "Literal::byte_character": true,
  "Literal::byte_str_value": true,
  "Literal::character": true,
  "Literal::cstr_value": true,
  "Literal::f32_suffixed": true,
  "Literal::f32_unsuffixed": true,
  "Literal::f64_suffixed": true,
  "Literal::f64_unsuffixed": true,
  "Literal::i128_suffixed": true,
  "Literal::i128_unsuffixed": true,
  "Literal::i16_suffixed": true,
  "Literal::i16_unsuffixed": true,
  "Literal::i32_suffixed": true,
  "Literal::i32_unsuffixed": true,
  "Literal::i64_suffixed": true,
  "Literal::i64_unsuffixed": true,
  "Literal::i8_suffixed": true,
  "Literal::i8_unsuffixed": true,
  "Literal::isize_suffixed": true,
  "Literal::isize_unsuffixed": true,
  "Literal::set_span": true,
  "Literal::span": true,
  "Literal::str_value": true,
  "Literal::u128_suffixed": true,
  "Literal::u128_unsuffixed": true,
  "Literal::u16_suffixed": true,
  "Literal::u16_unsuffixed": true,
  "Literal::u32_suffixed": true,
  "Literal::u32_unsuffixed": true,
  "Literal::u64_suffixed": true,
  "Literal::u64_unsuffixed": true,
  "Literal::u8_suffixed": true,
  "Literal::u8_unsuffixed": true,
  "Literal::usize_suffixed": true,
  "Literal::usize_unsuffixed": true,
  "Literal::with_stringify_parts::get_hashes_str": true,
  "MZFlush::new": true,
  "Mode::in_double_quotes": true,
  "Mode::prefix_noraw": true,
  "Punct::as_char": true,
  "Punct::new": true,
  "Punct::set_span": true,
  "Punct::spacing": true,
  "Punct::span": true,
  "Span::byte_range": true,
  "Span::call_site": true,
  "Span::column": true,
  "Span::def_site": true,
  "Span::end": true,
  "Span::eq": true,
  "Span::file": true,
  "Span::join": true,
  "Span::line": true,
  "Span::local_file": true,
  "Span::located_at": true,
  "Span::mixed_site": true,
  "Span::parent": true,
  "Span::recover_proc_macro_span": true,
  "Span::resolved_at": true,
  "Span::save_span": true,
  "Span::source": true,
  "Span::source_text": true,
  "Span::start": true,
  "TokenStream::expand_expr": true,
  "TokenStream::is_empty": true,
  "TokenStream::new": true,
  "TokenTree::set_span": true,
  "TokenTree::span": true,
  "alloc::Global::alloc_impl": true,
  "alloc::Global::grow_impl": true,
  "alloc::System::alloc_impl": true,
  "alloc::_::__rg_oom": true,
  "alloc::__alloc_error_handler::__rdl_oom": true,
  "alloc::alloc": true,
  "alloc::alloc_zeroed": true,
  "alloc::default_alloc_error_hook": true,
  "alloc::exchange_malloc": true,
  "alloc::handle_alloc_error": true,
  "alloc::handle_alloc_error::ct_error": true,
  "alloc::handle_alloc_error::rt_error": true,
  "alloc::layout::Layout::align": true,
  "alloc::layout::Layout::alignment": true,
  "alloc::layout::Layout::array::inner": true,
  "alloc::layout::Layout::array::{closure#0}::{closure#1}::{closure#2}::inner": true,
  "alloc::layout::Layout::array::{closure#2}::{closure#2}::inner": true,
  "alloc::layout::Layout::array::{closure#3}::{closure#0}::inner": true,
  "alloc::layout::Layout::from_size_align_unchecked::precondition_check": true,
  "alloc::layout::Layout::from_size_align_unchecked::{closure#0}::{closure#1}::{closure#3}::precondition_check": true,
  "alloc::layout::Layout::from_size_align_unchecked::{closure#2}::{closure#3}::precondition_check": true,
  "alloc::layout::Layout::from_size_align_unchecked::{closure#3}::{closure#0}::precondition_check": true,
  "alloc::layout::Layout::from_size_alignment": true,
  "alloc::layout::Layout::is_size_align_valid": true,
  "alloc::layout::Layout::max_size_for_align": true,
  "alloc::layout::Layout::size": true,
  "alloc::layout::Layout::size_rounded_up_to_custom_align": true,
  "alloc::rust_oom": true,
  "alloc::take_alloc_error_hook": true,
  "arch::AArch64::register_name": true,
  "arch::Arm::register_name": true,
  "arch::LoongArch::register_name": true,
  "arch::MIPS::register_name": true,
  "arch::PowerPc64::register_name": true,
  "arch::RiscV::register_name": true,
  "arch::X86::register_name": true,
  "arch::X86_64::register_name": true,
  "arch::all::memchr::One::confirm": true,
  "arch::all::memchr::One::has_needle": true,
  "arch::all::memchr::One::new": true,
  "arch::all::memchr::Three::confirm": true,
  "arch::all::memchr::Three::has_needle": true,
  "arch::all::memchr::Three::new": true,
  "arch::all::memchr::Two::confirm": true,
  "arch::all::memchr::Two::has_needle": true,
  "arch::all::memchr::Two::new": true,
  "arch::all::memchr::has_zero_byte": true,
  "arch::all::memchr::splat": true,
  "arch::all::packedpair::Finder::pair": true,
  "arch::all::packedpair::Pair::index1": true,
  "arch::all::packedpair::Pair::index2": true,
  "arch::all::rabinkarp::Hash::add": true,
  "arch::all::rabinkarp::Hash::del": true,
  "arch::all::rabinkarp::Hash::new": true,
  "arch::all::rabinkarp::Hash::roll": true,
  "arch::all::twoway::ApproximateByteSet::contains": true,
  "arch::all::twoway::SuffixKind::cmp": true,
  "arch::breakpoint": true,
  "arch::x86_64::avx2::memchr::One::is_available": true,
  "arch::x86_64::avx2::memchr::One::new": true,
  "arch::x86_64::avx2::memchr::One::new_unchecked": true,
  "arch::x86_64::avx2::memchr::Three::is_available": true,
  "arch::x86_64::avx2::memchr::Three::new": true,
  "arch::x86_64::avx2::memchr::Three::new_unchecked": true,
  "arch::x86_64::avx2::memchr::Two::is_available": true,
  "arch::x86_64::avx2::memchr::Two::new": true,
  "arch::x86_64::avx2::memchr::Two::new_unchecked": true,
  "arch::x86_64::avx2::packedpair::Finder::is_available": true,
  "arch::x86_64::avx2::packedpair::Finder::min_haystack_len": true,
  "arch::x86_64::avx2::packedpair::Finder::pair": true,
  "arch::x86_64::sse2::memchr::One::is_available": true,
  "arch::x86_64::sse2::memchr::One::new": true,
  "arch::x86_64::sse2::memchr::One::new_unchecked": true,
  "arch::x86_64::sse2::memchr::Three::is_available": true,
  "arch::x86_64::sse2::memchr::Three::new": true,
  "arch::x86_64::sse2::memchr::Three::new_unchecked": true,
  "arch::x86_64::sse2::memchr::Two::is_available": true,
  "arch::x86_64::sse2::memchr::Two::new": true,
  "arch::x86_64::sse2::memchr::Two::new_unchecked": true,
  "arch::x86_64::sse2::packedpair::Finder::is_available": true,
  "arch::x86_64::sse2::packedpair::Finder::min_haystack_len": true,
  "arch::x86_64::sse2::packedpair::Finder::pair": true,
  "ascii::EscapeDefault::empty": true,
  "ascii::EscapeDefault::new": true,
  "ascii::ascii_char::<impl convert::From<ascii::ascii_char::AsciiChar> for char>::from": true,
  "ascii::ascii_char::<impl convert::From<ascii::ascii_char::AsciiChar> for u128>::from": true,
  "ascii::ascii_char::<impl convert::From<ascii::ascii_char::AsciiChar> for u16>::from": true,
  "ascii::ascii_char::<impl convert::From<ascii::ascii_char::AsciiChar> for u32>::from": true,
  "ascii::ascii_char::<impl convert::From<ascii::ascii_char::AsciiChar> for u64>::from": true,
  "ascii::ascii_char::<impl convert::From<ascii::ascii_char::AsciiChar> for u8>::from": true,
  "ascii::ascii_char::AsciiChar::as_str": true,
  "ascii::ascii_char::AsciiChar::digit": true,
  "ascii::ascii_char::AsciiChar::digit_unchecked": true,
  "ascii::ascii_char::AsciiChar::digit_unchecked::precondition_check": true,
  "ascii::ascii_char::AsciiChar::eq_ignore_case": true,
  "ascii::ascii_char::AsciiChar::escape_ascii": true,
  "ascii::ascii_char::AsciiChar::is_alphabetic": true,
  "ascii::ascii_char::AsciiChar::is_alphanumeric": true,
  "ascii::ascii_char::AsciiChar::is_control": true,
  "ascii::ascii_char::AsciiChar::is_digit": true,
  "ascii::ascii_char::AsciiChar::is_graphic": true,
  "ascii::ascii_char::AsciiChar::is_hexdigit": true,
  "ascii::ascii_char::AsciiChar::is_lowercase": true,
  "ascii::ascii_char::AsciiChar::is_octdigit": true,
  "ascii::ascii_char::AsciiChar::is_punctuation": true,
  "ascii::ascii_char::AsciiChar::is_uppercase": true,
  "ascii::ascii_char::AsciiChar::is_whitespace": true,
  "ascii::ascii_char::AsciiChar::make_lowercase": true,
  "ascii::ascii_char::AsciiChar::make_uppercase": true,
  "ascii::ascii_char::AsciiChar::to_char": true,
  "ascii::ascii_char::AsciiChar::to_lowercase": true,
  "ascii::ascii_char::AsciiChar::to_u8": true,
  "ascii::ascii_char::AsciiChar::to_uppercase": true,
  "ascii::escape_default": true,
  "backtrace::Backtrace::capture": true,
  "backtrace::Backtrace::create": true,
  "backtrace::Backtrace::disabled": true,
  "backtrace::Backtrace::enabled": true,
  "backtrace::Backtrace::force_capture": true,
  "backtrace::_assert_send_sync": true,
  "backtrace_rs::symbolize::gimli::Cache::new": true,
  "backtrace_rs::symbolize::gimli::clear_symbol_cache": true,
  "backtrace_rs::symbolize::gimli::elf::debug_path_exists": true,
  "backtrace_rs::symbolize::gimli::libs_dl_iterate_phdr::native_libraries": true,
  "backtrace_rs::symbolize::gimli::mmap::Mmap::map": true,
  "backtrace_rs::symbolize::gimli::parse_running_mmaps::parse_maps": true,
  "backtrace_rs::symbolize::gimli::stash::Stash::new": true,
  "boxed::thin::WithHeader::<H>::new_unsize_zst::max": true,
  "bridge::arena::Arena::new": true,
  "bridge::buffer::Buffer::new": true,
  "bridge::client::FreeFunctions::drop": true,
  "bridge::client::Span::byte_range": true,
  "bridge::client::Span::call_site": true,
  "bridge::client::Span::column": true,
  "bridge::client::Span::debug": true,
  "bridge::client::Span::def_site": true,
  "bridge::client::Span::end": true,
  "bridge::client::Span::file": true,
  "bridge::client::Span::join": true,
  "bridge::client::Span::line": true,
  "bridge::client::Span::local_file": true,
  "bridge::client::Span::mixed_site": true,
  "bridge::client::Span::parent": true,
  "bridge::client::Span::recover_proc_macro_span": true,
  "bridge::client::Span::resolved_at": true,
  "bridge::client::Span::save_span": true,
  "bridge::client::Span::source": true,
  "bridge::client::Span::source_text": true,
  "bridge::client::Span::start": true,
  "bridge::client::Span::subspan": true,
  "bridge::client::TokenStream::clone": true,
  "bridge::client::TokenStream::drop": true,
  "bridge::client::TokenStream::expand_expr": true,
  "bridge::client::TokenStream::from_token_tree": true,
  "bridge::client::TokenStream::into_trees": true,
  "bridge::client::TokenStream::is_empty": true,
  "bridge::client::TokenStream::to_string": true,
  "bridge::client::is_available": true,
  "bridge::client::maybe_install_panic_hook": true,
  "bridge::fxhash::FxHasher::add_to_hash": true,
  "bridge::server::RunningSameThreadGuard::new": true,
  "bridge::symbol::Symbol::invalidate_all": true,
  "cell::BorrowRef::<'_>::new": true,
  "cell::BorrowRefMut::<'_>::new": true,
  "cell::assert_coerce_unsized": true,
  "cell::is_reading": true,
  "cell::is_writing": true,
  "cell::lazy::panic_poisoned": true,
  "cell::panic_already_borrowed": true,
  "cell::panic_already_borrowed::do_panic": true,
  "cell::panic_already_borrowed::do_panic::compiletime": true,
  "cell::panic_already_borrowed::do_panic::runtime": true,
  "cell::panic_already_mutably_borrowed": true,
  "cell::panic_already_mutably_borrowed::do_panic": true,
  "cell::panic_already_mutably_borrowed::do_panic::compiletime": true,
  "cell::panic_already_mutably_borrowed::do_panic::runtime": true,
  "char2byte": true,
  "char::CaseMappingIter::new": true,
  "char::EscapeDebug::backslash": true,
  "char::EscapeDebug::printable": true,
  "char::EscapeDebug::unicode": true,
  "char::EscapeDefault::backslash": true,
  "char::EscapeDefault::printable": true,
  "char::EscapeDefault::unicode": true,
  "char::EscapeUnicode::new": true,
  "char::convert::<impl convert::From<char> for u128>::from": true,
  "char::convert::<impl convert::From<char> for u32>::from": true,
  "char::convert::<impl convert::From<char> for u64>::from": true,
  "char::convert::<impl convert::From<u8> for char>::from": true,
  "char::convert::<impl convert::TryFrom<char> for u16>::try_from": true,
  "char::convert::<impl convert::TryFrom<char> for u8>::try_from": true,
  "char::convert::<impl convert::TryFrom<u32> for char>::try_from": true,
  "char::convert::char_try_from_u32": true,
  "char::convert::from_digit": true,
  "char::convert::from_u32": true,
  "char::convert::from_u32_unchecked::precondition_check": true,
  "char::convert::from_u32_unchecked::{closure#0}::{closure#1}::{closure#1}::precondition_check": true,
  "char::convert::from_u32_unchecked::{closure#2}::{closure#1}::precondition_check": true,
  "char::convert::from_u32_unchecked::{closure#3}::{closure#0}::precondition_check": true,
  "char::decode::DecodeUtf16Error::unpaired_surrogate": true,
  "char::from_digit": true,
  "char::from_u32": true,
  "char::methods::<impl char>::as_ascii": true,
  "char::methods::<impl char>::as_ascii_unchecked": true,
  "char::methods::<impl char>::as_ascii_unchecked::precondition_check": true,
  "char::methods::<impl char>::eq_ignore_ascii_case": true,
  "char::methods::<impl char>::escape_debug": true,
  "char::methods::<impl char>::escape_debug_ext": true,
  "char::methods::<impl char>::escape_default": true,
  "char::methods::<impl char>::escape_unicode": true,
  "char::methods::<impl char>::from_digit": true,
  "char::methods::<impl char>::from_u32": true,
  "char::methods::<impl char>::from_u32_unchecked": true,
  "char::methods::<impl char>::is_alphabetic": true,
  "char::methods::<impl char>::is_alphanumeric": true,
  "char::methods::<impl char>::is_ascii": true,
  "char::methods::<impl char>::is_ascii_alphabetic": true,
  "char::methods::<impl char>::is_ascii_alphanumeric": true,
  "char::methods::<impl char>::is_ascii_control": true,
  "char::methods::<impl char>::is_ascii_digit": true,
  "char::methods::<impl char>::is_ascii_graphic": true,
  "char::methods::<impl char>::is_ascii_hexdigit": true,
  "char::methods::<impl char>::is_ascii_lowercase": true,
  "char::methods::<impl char>::is_ascii_octdigit": true,
  "char::methods::<impl char>::is_ascii_punctuation": true,
  "char::methods::<impl char>::is_ascii_uppercase": true,
  "char::methods::<impl char>::is_ascii_whitespace": true,
  "char::methods::<impl char>::is_case_ignorable": true,
  "char::methods::<impl char>::is_cased": true,
  "char::methods::<impl char>::is_control": true,
  "char::methods::<impl char>::is_digit": true,
  "char::methods::<impl char>::is_grapheme_extended": true,
  "char::methods::<impl char>::is_lowercase": true,
  "char::methods::<impl char>::is_numeric": true,
  "char::methods::<impl char>::is_uppercase": true,
  "char::methods::<impl char>::is_whitespace": true,
  "char::methods::<impl char>::len_utf16": true,
  "char::methods::<impl char>::len_utf8": true,
  "char::methods::<impl char>::make_ascii_lowercase": true,
  "char::methods::<impl char>::make_ascii_uppercase": true,
  "char::methods::<impl char>::to_ascii_lowercase": true,
  "char::methods::<impl char>::to_ascii_uppercase": true,
  "char::methods::<impl char>::to_digit": true,
  "char::methods::<impl char>::to_lowercase": true,
  "char::methods::<impl char>::to_uppercase": true,
  "char::methods::encode_utf16_raw::do_panic": true,
  "char::methods::encode_utf16_raw::do_panic::compiletime": true,
  "char::methods::encode_utf16_raw::do_panic::runtime": true,
  "char::methods::encode_utf8_raw::do_panic": true,
  "char::methods::encode_utf8_raw::do_panic::compiletime": true,
  "char::methods::encode_utf8_raw::do_panic::runtime": true,
  "char::methods::len_utf16": true,
  "char::methods::len_utf8": true,
  "clone::impls::<impl clone::Clone for bool>::clone": true,
  "clone::impls::<impl clone::Clone for char>::clone": true,
  "clone::impls::<impl clone::Clone for f128>::clone": true,
  "clone::impls::<impl clone::Clone for f16>::clone": true,
  "clone::impls::<impl clone::Clone for f32>::clone": true,
  "clone::impls::<impl clone::Clone for f64>::clone": true,
  "clone::impls::<impl clone::Clone for i128>::clone": true,
  "clone::impls::<impl clone::Clone for i16>::clone": true,
  "clone::impls::<impl clone::Clone for i32>::clone": true,
  "clone::impls::<impl clone::Clone for i64>::clone": true,
  "clone::impls::<impl clone::Clone for i8>::clone": true,
  "clone::impls::<impl clone::Clone for isize>::clone": true,
  "clone::impls::<impl clone::Clone for u128>::clone": true,
  "clone::impls::<impl clone::Clone for u16>::clone": true,
  "clone::impls::<impl clone::Clone for u32>::clone": true,
  "clone::impls::<impl clone::Clone for u64>::clone": true,
  "clone::impls::<impl clone::Clone for u8>::clone": true,
  "clone::impls::<impl clone::Clone for usize>::clone": true,
  "cmp::Ordering::as_raw": true,
  "cmp::Ordering::is_eq": true,
  "cmp::Ordering::is_ge": true,
  "cmp::Ordering::is_gt": true,
  "cmp::Ordering::is_le": true,
  "cmp::Ordering::is_lt": true,
  "cmp::Ordering::is_ne": true,
  "cmp::Ordering::reverse": true,
  "cmp::Ordering::then": true,
  "cmp::impls::<impl cmp::Ord for ()>::cmp": true,
  "cmp::impls::<impl cmp::Ord for bool>::clamp": true,
  "cmp::impls::<impl cmp::Ord for bool>::cmp": true,
  "cmp::impls::<impl cmp::Ord for bool>::max": true,
  "cmp::impls::<impl cmp::Ord for bool>::min": true,
  "cmp::impls::<impl cmp::Ord for char>::cmp": true,
  "cmp::impls::<impl cmp::Ord for i128>::cmp": true,
  "cmp::impls::<impl cmp::Ord for i16>::cmp": true,
  "cmp::impls::<impl cmp::Ord for i32>::cmp": true,
  "cmp::impls::<impl cmp::Ord for i64>::cmp": true,
  "cmp::impls::<impl cmp::Ord for i8>::cmp": true,
  "cmp::impls::<impl cmp::Ord for isize>::cmp": true,
  "cmp::impls::<impl cmp::Ord for u128>::cmp": true,
  "cmp::impls::<impl cmp::Ord for u16>::cmp": true,
  "cmp::impls::<impl cmp::Ord for u32>::cmp": true,
  "cmp::impls::<impl cmp::Ord for u64>::cmp": true,
  "cmp::impls::<impl cmp::Ord for u8>::cmp": true,
  "cmp::impls::<impl cmp::Ord for usize>::cmp": true,
  "cmp::impls::<impl cmp::PartialEq for ()>::eq": true,
  "cmp::impls::<impl cmp::PartialEq for ()>::ne": true,
  "cmp::impls::<impl cmp::PartialEq for bool>::eq": true,
  "cmp::impls::<impl cmp::PartialEq for bool>::ne": true,
  "cmp::impls::<impl cmp::PartialEq for char>::eq": true,
  "cmp::impls::<impl cmp::PartialEq for char>::ne": true,
  "cmp::impls::<impl cmp::PartialEq for f128>::eq": true,
  "cmp::impls::<impl cmp::PartialEq for f128>::ne": true,
  "cmp::impls::<impl cmp::PartialEq for f16>::eq": true,
  "cmp::impls::<impl cmp::PartialEq for f16>::ne": true,
  "cmp::impls::<impl cmp::PartialEq for f32>::eq": true,
  "cmp::impls::<impl cmp::PartialEq for f32>::ne": true,
  "cmp::impls::<impl cmp::PartialEq for f64>::eq": true,
  "cmp::impls::<impl cmp::PartialEq for f64>::ne": true,
  "cmp::impls::<impl cmp::PartialEq for i128>::eq": true,
  "cmp::impls::<impl cmp::PartialEq for i128>::ne": true,
  "cmp::impls::<impl cmp::PartialEq for i16>::eq": true,
  "cmp::impls::<impl cmp::PartialEq for i16>::ne": true,
  "cmp::impls::<impl cmp::PartialEq for i32>::eq": true,
  "cmp::impls::<impl cmp::PartialEq for i32>::ne": true,
  "cmp::impls::<impl cmp::PartialEq for i64>::eq": true,
  "cmp::impls::<impl cmp::PartialEq for i64>::ne": true,
  "cmp::impls::<impl cmp::PartialEq for i8>::eq": true,
  "cmp::impls::<impl cmp::PartialEq for i8>::ne": true,
  "cmp::impls::<impl cmp::PartialEq for isize>::eq": true,
  "cmp::impls::<impl cmp::PartialEq for isize>::ne": true,
  "cmp::impls::<impl cmp::PartialEq for u128>::eq": true,
  "cmp::impls::<impl cmp::PartialEq for u128>::ne": true,
  "cmp::impls::<impl cmp::PartialEq for u16>::eq": true,
  "cmp::impls::<impl cmp::PartialEq for u16>::ne": true,
  "cmp::impls::<impl cmp::PartialEq for u32>::eq": true,
  "cmp::impls::<impl cmp::PartialEq for u32>::ne": true,
  "cmp::impls::<impl cmp::PartialEq for u64>::eq": true,
  "cmp::impls::<impl cmp::PartialEq for u64>::ne": true,
  "cmp::impls::<impl cmp::PartialEq for u8>::eq": true,
  "cmp::impls::<impl cmp::PartialEq for u8>::ne": true,
  "cmp::impls::<impl cmp::PartialEq for usize>::eq": true,
  "cmp::impls::<impl cmp::PartialEq for usize>::ne": true,
  "cmp::impls::<impl cmp::PartialOrd for ()>::partial_cmp": true,
  "cmp::impls::<impl cmp::PartialOrd for bool>::__chaining_ge": true,
  "cmp::impls::<impl cmp::PartialOrd for bool>::__chaining_gt": true,
  "cmp::impls::<impl cmp::PartialOrd for bool>::__chaining_le": true,
  "cmp::impls::<impl cmp::PartialOrd for bool>::__chaining_lt": true,
  "cmp::impls::<impl cmp::PartialOrd for bool>::ge": true,
  "cmp::impls::<impl cmp::PartialOrd for bool>::gt": true,
  "cmp::impls::<impl cmp::PartialOrd for bool>::le": true,
  "cmp::impls::<impl cmp::PartialOrd for bool>::lt": true,
  "cmp::impls::<impl cmp::PartialOrd for bool>::partial_cmp": true,
  "cmp::impls::<impl cmp::PartialOrd for char>::__chaining_ge": true,
  "cmp::impls::<impl cmp::PartialOrd for char>::__chaining_gt": true,
  "cmp::impls::<impl cmp::PartialOrd for char>::__chaining_le": true,
  "cmp::impls::<impl cmp::PartialOrd for char>::__chaining_lt": true,
  "cmp::impls::<impl cmp::PartialOrd for char>::ge": true,
  "cmp::impls::<impl cmp::PartialOrd for char>::gt": true,
  "cmp::impls::<impl cmp::PartialOrd for char>::le": true,
  "cmp::impls::<impl cmp::PartialOrd for char>::lt": true,
  "cmp::impls::<impl cmp::PartialOrd for char>::partial_cmp": true,
  "cmp::impls::<impl cmp::PartialOrd for f128>::__chaining_ge": true,
  "cmp::impls::<impl cmp::PartialOrd for f128>::__chaining_gt": true,
  "cmp::impls::<impl cmp::PartialOrd for f128>::__chaining_le": true,
  "cmp::impls::<impl cmp::PartialOrd for f128>::__chaining_lt": true,
  "cmp::impls::<impl cmp::PartialOrd for f128>::ge": true,
  "cmp::impls::<impl cmp::PartialOrd for f128>::gt": true,
  "cmp::impls::<impl cmp::PartialOrd for f128>::le": true,
  "cmp::impls::<impl cmp::PartialOrd for f128>::lt": true,
  "cmp::impls::<impl cmp::PartialOrd for f128>::partial_cmp": true,
  "cmp::impls::<impl cmp::PartialOrd for f16>::__chaining_ge": true,
  "cmp::impls::<impl cmp::PartialOrd for f16>::__chaining_gt": true,
  "cmp::impls::<impl cmp::PartialOrd for f16>::__chaining_le": true,
  "cmp::impls::<impl cmp::PartialOrd for f16>::__chaining_lt": true,
  "cmp::impls::<impl cmp::PartialOrd for f16>::ge": true,
  "cmp::impls::<impl cmp::PartialOrd for f16>::gt": true,
  "cmp::impls::<impl cmp::PartialOrd for f16>::le": true,
  "cmp::impls::<impl cmp::PartialOrd for f16>::lt": true,
  "cmp::impls::<impl cmp::PartialOrd for f16>::partial_cmp": true,
  "cmp::impls::<impl cmp::PartialOrd for f32>::__chaining_ge": true,
  "cmp::impls::<impl cmp::PartialOrd for f32>::__chaining_gt": true,
  "cmp::impls::<impl cmp::PartialOrd for f32>::__chaining_le": true,
  "cmp::impls::<impl cmp::PartialOrd for f32>::__chaining_lt": true,
  "cmp::impls::<impl cmp::PartialOrd for f32>::ge": true,
  "cmp::impls::<impl cmp::PartialOrd for f32>::gt": true,
  "cmp::impls::<impl cmp::PartialOrd for f32>::le": true,
  "cmp::impls::<impl cmp::PartialOrd for f32>::lt": true,
  "cmp::impls::<impl cmp::PartialOrd for f32>::partial_cmp": true,
  "cmp::impls::<impl cmp::PartialOrd for f64>::__chaining_ge": true,
  "cmp::impls::<impl cmp::PartialOrd for f64>::__chaining_gt": true,
  "cmp::impls::<impl cmp::PartialOrd for f64>::__chaining_le": true,
  "cmp::impls::<impl cmp::PartialOrd for f64>::__chaining_lt": true,
  "cmp::impls::<impl cmp::PartialOrd for f64>::ge": true,
  "cmp::impls::<impl cmp::PartialOrd for f64>::gt": true,
  "cmp::impls::<impl cmp::PartialOrd for f64>::le": true,
  "cmp::impls::<impl cmp::PartialOrd for f64>::lt": true,
  "cmp::impls::<impl cmp::PartialOrd for f64>::partial_cmp": true,
  "cmp::impls::<impl cmp::PartialOrd for i128>::__chaining_ge": true,
  "cmp::impls::<impl cmp::PartialOrd for i128>::__chaining_gt": true,
  "cmp::impls::<impl cmp::PartialOrd for i128>::__chaining_le": true,
  "cmp::impls::<impl cmp::PartialOrd for i128>::__chaining_lt": true,
  "cmp::impls::<impl cmp::PartialOrd for i128>::ge": true,
  "cmp::impls::<impl cmp::PartialOrd for i128>::gt": true,
  "cmp::impls::<impl cmp::PartialOrd for i128>::le": true,
  "cmp::impls::<impl cmp::PartialOrd for i128>::lt": true,
  "cmp::impls::<impl cmp::PartialOrd for i128>::partial_cmp": true,
  "cmp::impls::<impl cmp::PartialOrd for i16>::__chaining_ge": true,
  "cmp::impls::<impl cmp::PartialOrd for i16>::__chaining_gt": true,
  "cmp::impls::<impl cmp::PartialOrd for i16>::__chaining_le": true,
  "cmp::impls::<impl cmp::PartialOrd for i16>::__chaining_lt": true,
  "cmp::impls::<impl cmp::PartialOrd for i16>::ge": true,
  "cmp::impls::<impl cmp::PartialOrd for i16>::gt": true,
  "cmp::impls::<impl cmp::PartialOrd for i16>::le": true,
  "cmp::impls::<impl cmp::PartialOrd for i16>::lt": true,
  "cmp::impls::<impl cmp::PartialOrd for i16>::partial_cmp": true,
  "cmp::impls::<impl cmp::PartialOrd for i32>::__chaining_ge": true,
  "cmp::impls::<impl cmp::PartialOrd for i32>::__chaining_gt": true,
  "cmp::impls::<impl cmp::PartialOrd for i32>::__chaining_le": true,
  "cmp::impls::<impl cmp::PartialOrd for i32>::__chaining_lt": true,
  "cmp::impls::<impl cmp::PartialOrd for i32>::ge": true,
  "cmp::impls::<impl cmp::PartialOrd for i32>::gt": true,
  "cmp::impls::<impl cmp::PartialOrd for i32>::le": true,
  "cmp::impls::<impl cmp::PartialOrd for i32>::lt": true,
  "cmp::impls::<impl cmp::PartialOrd for i32>::partial_cmp": true,
  "cmp::impls::<impl cmp::PartialOrd for i64>::__chaining_ge": true,
  "cmp::impls::<impl cmp::PartialOrd for i64>::__chaining_gt": true,
  "cmp::impls::<impl cmp::PartialOrd for i64>::__chaining_le": true,
  "cmp::impls::<impl cmp::PartialOrd for i64>::__chaining_lt": true,
  "cmp::impls::<impl cmp::PartialOrd for i64>::ge": true,
  "cmp::impls::<impl cmp::PartialOrd for i64>::gt": true,
  "cmp::impls::<impl cmp::PartialOrd for i64>::le": true,
  "cmp::impls::<impl cmp::PartialOrd for i64>::lt": true,
  "cmp::impls::<impl cmp::PartialOrd for i64>::partial_cmp": true,
  "cmp::impls::<impl cmp::PartialOrd for i8>::__chaining_ge": true,
  "cmp::impls::<impl cmp::PartialOrd for i8>::__chaining_gt": true,
  "cmp::impls::<impl cmp::PartialOrd for i8>::__chaining_le": true,
  "cmp::impls::<impl cmp::PartialOrd for i8>::__chaining_lt": true,
  "cmp::impls::<impl cmp::PartialOrd for i8>::ge": true,
  "cmp::impls::<impl cmp::PartialOrd for i8>::gt": true,
  "cmp::impls::<impl cmp::PartialOrd for i8>::le": true,
  "cmp::impls::<impl cmp::PartialOrd for i8>::lt": true,
  "cmp::impls::<impl cmp::PartialOrd for i8>::partial_cmp": true,
  "cmp::impls::<impl cmp::PartialOrd for isize>::__chaining_ge": true,
  "cmp::impls::<impl cmp::PartialOrd for isize>::__chaining_gt": true,
  "cmp::impls::<impl cmp::PartialOrd for isize>::__chaining_le": true,
  "cmp::impls::<impl cmp::PartialOrd for isize>::__chaining_lt": true,
  "cmp::impls::<impl cmp::PartialOrd for isize>::ge": true,
  "cmp::impls::<impl cmp::PartialOrd for isize>::gt": true,
  "cmp::impls::<impl cmp::PartialOrd for isize>::le": true,
  "cmp::impls::<impl cmp::PartialOrd for isize>::lt": true,
  "cmp::impls::<impl cmp::PartialOrd for isize>::partial_cmp": true,
  "cmp::impls::<impl cmp::PartialOrd for u128>::__chaining_ge": true,
  "cmp::impls::<impl cmp::PartialOrd for u128>::__chaining_gt": true,
  "cmp::impls::<impl cmp::PartialOrd for u128>::__chaining_le": true,
  "cmp::impls::<impl cmp::PartialOrd for u128>::__chaining_lt": true,
  "cmp::impls::<impl cmp::PartialOrd for u128>::ge": true,
  "cmp::impls::<impl cmp::PartialOrd for u128>::gt": true,
  "cmp::impls::<impl cmp::PartialOrd for u128>::le": true,
  "cmp::impls::<impl cmp::PartialOrd for u128>::lt": true,
  "cmp::impls::<impl cmp::PartialOrd for u128>::partial_cmp": true,
  "cmp::impls::<impl cmp::PartialOrd for u16>::__chaining_ge": true,
  "cmp::impls::<impl cmp::PartialOrd for u16>::__chaining_gt": true,
  "cmp::impls::<impl cmp::PartialOrd for u16>::__chaining_le": true,
  "cmp::impls::<impl cmp::PartialOrd for u16>::__chaining_lt": true,
  "cmp::impls::<impl cmp::PartialOrd for u16>::ge": true,
  "cmp::impls::<impl cmp::PartialOrd for u16>::gt": true,
  "cmp::impls::<impl cmp::PartialOrd for u16>::le": true,
  "cmp::impls::<impl cmp::PartialOrd for u16>::lt": true,
  "cmp::impls::<impl cmp::PartialOrd for u16>::partial_cmp": true,
  "cmp::impls::<impl cmp::PartialOrd for u32>::__chaining_ge": true,
  "cmp::impls::<impl cmp::PartialOrd for u32>::__chaining_gt": true,
  "cmp::impls::<impl cmp::PartialOrd for u32>::__chaining_le": true,
  "cmp::impls::<impl cmp::PartialOrd for u32>::__chaining_lt": true,
  "cmp::impls::<impl cmp::PartialOrd for u32>::ge": true,
  "cmp::impls::<impl cmp::PartialOrd for u32>::gt": true,
  "cmp::impls::<impl cmp::PartialOrd for u32>::le": true,
  "cmp::impls::<impl cmp::PartialOrd for u32>::lt": true,
  "cmp::impls::<impl cmp::PartialOrd for u32>::partial_cmp": true,
  "cmp::impls::<impl cmp::PartialOrd for u64>::__chaining_ge": true,
  "cmp::impls::<impl cmp::PartialOrd for u64>::__chaining_gt": true,
  "cmp::impls::<impl cmp::PartialOrd for u64>::__chaining_le": true,
  "cmp::impls::<impl cmp::PartialOrd for u64>::__chaining_lt": true,
  "cmp::impls::<impl cmp::PartialOrd for u64>::ge": true,
  "cmp::impls::<impl cmp::PartialOrd for u64>::gt": true,
  "cmp::impls::<impl cmp::PartialOrd for u64>::le": true,
  "cmp::impls::<impl cmp::PartialOrd for u64>::lt": true,
  "cmp::impls::<impl cmp::PartialOrd for u64>::partial_cmp": true,
  "cmp::impls::<impl cmp::PartialOrd for u8>::__chaining_ge": true,
  "cmp::impls::<impl cmp::PartialOrd for u8>::__chaining_gt": true,
  "cmp::impls::<impl cmp::PartialOrd for u8>::__chaining_le": true,
  "cmp::impls::<impl cmp::PartialOrd for u8>::__chaining_lt": true,
  "cmp::impls::<impl cmp::PartialOrd for u8>::ge": true,
  "cmp::impls::<impl cmp::PartialOrd for u8>::gt": true,
  "cmp::impls::<impl cmp::PartialOrd for u8>::le": true,
  "cmp::impls::<impl cmp::PartialOrd for u8>::lt": true,
  "cmp::impls::<impl cmp::PartialOrd for u8>::partial_cmp": true,
  "cmp::impls::<impl cmp::PartialOrd for usize>::__chaining_ge": true,
  "cmp::impls::<impl cmp::PartialOrd for usize>::__chaining_gt": true,
  "cmp::impls::<impl cmp::PartialOrd for usize>::__chaining_le": true,
  "cmp::impls::<impl cmp::PartialOrd for usize>::__chaining_lt": true,
  "cmp::impls::<impl cmp::PartialOrd for usize>::ge": true,
  "cmp::impls::<impl cmp::PartialOrd for usize>::gt": true,
  "cmp::impls::<impl cmp::PartialOrd for usize>::le": true,
  "cmp::impls::<impl cmp::PartialOrd for usize>::lt": true,
  "cmp::impls::<impl cmp::PartialOrd for usize>::partial_cmp": true,
  "collections::TryReserveError::kind": true,
  "collections::binary_heap::BinaryHeap::<T, A>::rebuild_tail::log2_fast": true,
  "collections::btree::node::splitpoint": true,
  "collections::hash::map::assert_covariance": true,
  "collections::hash::map::map_try_reserve_error": true,
  "collections::hash::set::assert_covariance": true,
  "collections::linked_list::assert_covariance": true,
  "collections::vec_deque::wrap_index": true,
  "common::AddressSize::bytes": true,
  "common::Architecture::address_size": true,
  "common::BinaryFormat::native_object": true,
  "common::Format::initial_length_size": true,
  "common::Format::word_size": true,
  "common::SectionId::dwo_name": true,
  "common::SectionId::is_string": true,
  "common::SectionId::name": true,
  "common::SectionId::xcoff_name": true,
  "common::SectionKind::is_bss": true,
  "constants::DwAccess::static_string": true,
  "constants::DwAddr::static_string": true,
  "constants::DwAt::static_string": true,
  "constants::DwAte::static_string": true,
  "constants::DwCc::static_string": true,
  "constants::DwCfa::static_string": true,
  "constants::DwChildren::static_string": true,
  "constants::DwDefaulted::static_string": true,
  "constants::DwDs::static_string": true,
  "constants::DwDsc::static_string": true,
  "constants::DwEhPe::application": true,
  "constants::DwEhPe::format": true,
  "constants::DwEhPe::is_absent": true,
  "constants::DwEhPe::is_indirect": true,
  "constants::DwEhPe::is_valid_encoding": true,
  "constants::DwEhPe::static_string": true,
  "constants::DwEnd::static_string": true,
  "constants::DwForm::static_string": true,
  "constants::DwId::static_string": true,
  "constants::DwIdx::static_string": true,
  "constants::DwInl::static_string": true,
  "constants::DwLang::default_lower_bound": true,
  "constants::DwLang::static_string": true,
  "constants::DwLle::static_string": true,
  "constants::DwLnct::static_string": true,
  "constants::DwLne::static_string": true,
  "constants::DwLns::static_string": true,
  "constants::DwMacinfo::static_string": true,
  "constants::DwMacro::static_string": true,
  "constants::DwOp::static_string": true,
  "constants::DwOrd::static_string": true,
  "constants::DwRle::static_string": true,
  "constants::DwSect::static_string": true,
  "constants::DwSectV2::static_string": true,
  "constants::DwTag::static_string": true,
  "constants::DwUt::static_string": true,
  "constants::DwVirtuality::static_string": true,
  "constants::DwVis::static_string": true,
  "control::bitmask::BitMask::any_bit_set": true,
  "control::bitmask::BitMask::invert": true,
  "control::bitmask::BitMask::leading_zeros": true,
  "control::bitmask::BitMask::lowest_set_bit": true,
  "control::bitmask::BitMask::nonzero_trailing_zeros": true,
  "control::bitmask::BitMask::remove_lowest_bit": true,
  "control::bitmask::BitMask::trailing_zeros": true,
  "control::group::sse2::Group::convert_special_to_empty_and_full_to_deleted": true,
  "control::group::sse2::Group::match_empty": true,
  "control::group::sse2::Group::match_empty_or_deleted": true,
  "control::group::sse2::Group::match_full": true,
  "control::group::sse2::Group::match_tag": true,
  "control::group::sse2::Group::static_empty": true,
  "control::tag::Tag::full": true,
  "control::tag::Tag::is_full": true,
  "control::tag::Tag::is_special": true,
  "control::tag::Tag::special_is_empty": true,
  "convert::num::<impl convert::From<bool> for f128>::from": true,
  "convert::num::<impl convert::From<bool> for f16>::from": true,
  "convert::num::<impl convert::From<bool> for f32>::from": true,
  "convert::num::<impl convert::From<bool> for f64>::from": true,
  "convert::num::<impl convert::From<bool> for i128>::from": true,
  "convert::num::<impl convert::From<bool> for i16>::from": true,
  "convert::num::<impl convert::From<bool> for i32>::from": true,
  "convert::num::<impl convert::From<bool> for i64>::from": true,
  "convert::num::<impl convert::From<bool> for i8>::from": true,
  "convert::num::<impl convert::From<bool> for isize>::from": true,
  "convert::num::<impl convert::From<bool> for u128>::from": true,
  "convert::num::<impl convert::From<bool> for u16>::from": true,
  "convert::num::<impl convert::From<bool> for u32>::from": true,
  "convert::num::<impl convert::From<bool> for u64>::from": true,
  "convert::num::<impl convert::From<bool> for u8>::from": true,
  "convert::num::<impl convert::From<bool> for usize>::from": true,
  "convert::num::<impl convert::From<f16> for f128>::from": true,
  "convert::num::<impl convert::From<f16> for f64>::from": true,
  "convert::num::<impl convert::From<f32> for f128>::from": true,
  "convert::num::<impl convert::From<f32> for f64>::from": true,
  "convert::num::<impl convert::From<f64> for f128>::from": true,
  "convert::num::<impl convert::From<i16> for f128>::from": true,
  "convert::num::<impl convert::From<i16> for f32>::from": true,
  "convert::num::<impl convert::From<i16> for f64>::from": true,
  "convert::num::<impl convert::From<i16> for i128>::from": true,
  "convert::num::<impl convert::From<i16> for i32>::from": true,
  "convert::num::<impl convert::From<i16> for i64>::from": true,
  "convert::num::<impl convert::From<i16> for isize>::from": true,
  "convert::num::<impl convert::From<i32> for f128>::from": true,
  "convert::num::<impl convert::From<i32> for f64>::from": true,
  "convert::num::<impl convert::From<i32> for i128>::from": true,
  "convert::num::<impl convert::From<i32> for i64>::from": true,
  "convert::num::<impl convert::From<i64> for i128>::from": true,
  "convert::num::<impl convert::From<i8> for f128>::from": true,
  "convert::num::<impl convert::From<i8> for f16>::from": true,
  "convert::num::<impl convert::From<i8> for f32>::from": true,
  "convert::num::<impl convert::From<i8> for f64>::from": true,
  "convert::num::<impl convert::From<i8> for i128>::from": true,
  "convert::num::<impl convert::From<i8> for i16>::from": true,
  "convert::num::<impl convert::From<i8> for i32>::from": true,
  "convert::num::<impl convert::From<i8> for i64>::from": true,
  "convert::num::<impl convert::From<i8> for isize>::from": true,
  "convert::num::<impl convert::From<num::nonzero::NonZero<i16>> for num::nonzero::NonZero<i128>>::from": true,
  "convert::num::<impl convert::From<num::nonzero::NonZero<i16>> for num::nonzero::NonZero<i32>>::from": true,
  "convert::num::<impl convert::From<num::nonzero::NonZero<i16>> for num::nonzero::NonZero<i64>>::from": true,
  "convert::num::<impl convert::From<num::nonzero::NonZero<i16>> for num::nonzero::NonZero<isize>>::from": true,
  "convert::num::<impl convert::From<num::nonzero::NonZero<i32>> for num::nonzero::NonZero<i128>>::from": true,
  "convert::num::<impl convert::From<num::nonzero::NonZero<i32>> for num::nonzero::NonZero<i64>>::from": true,
  "convert::num::<impl convert::From<num::nonzero::NonZero<i64>> for num::nonzero::NonZero<i128>>::from": true,
  "convert::num::<impl convert::From<num::nonzero::NonZero<i8>> for num::nonzero::NonZero<i128>>::from": true,
  "convert::num::<impl convert::From<num::nonzero::NonZero<i8>> for num::nonzero::NonZero<i16>>::from": true,
  "convert::num::<impl convert::From<num::nonzero::NonZero<i8>> for num::nonzero::NonZero<i32>>::from": true,
  "convert::num::<impl convert::From<num::nonzero::NonZero<i8>> for num::nonzero::NonZero<i64>>::from": true,
  "convert::num::<impl convert::From<num::nonzero::NonZero<i8>> for num::nonzero::NonZero<isize>>::from": true,
  "convert::num::<impl convert::From<num::nonzero::NonZero<u16>> for num::nonzero::NonZero<i128>>::from": true,
  "convert::num::<impl convert::From<num::nonzero::NonZero<u16>> for num::nonzero::NonZero<i32>>::from": true,
  "convert::num::<impl convert::From<num::nonzero::NonZero<u16>> for num::nonzero::NonZero<i64>>::from": true,
  "convert::num::<impl convert::From<num::nonzero::NonZero<u16>> for num::nonzero::NonZero<u128>>::from": true,
  "convert::num::<impl convert::From<num::nonzero::NonZero<u16>> for num::nonzero::NonZero<u32>>::from": true,
  "convert::num::<impl convert::From<num::nonzero::NonZero<u16>> for num::nonzero::NonZero<u64>>::from": true,
  "convert::num::<impl convert::From<num::nonzero::NonZero<u16>> for num::nonzero::NonZero<usize>>::from": true,
  "convert::num::<impl convert::From<num::nonzero::NonZero<u32>> for num::nonzero::NonZero<i128>>::from": true,
  "convert::num::<impl convert::From<num::nonzero::NonZero<u32>> for num::nonzero::NonZero<i64>>::from": true,
  "convert::num::<impl convert::From<num::nonzero::NonZero<u32>> for num::nonzero::NonZero<u128>>::from": true,
  "convert::num::<impl convert::From<num::nonzero::NonZero<u32>> for num::nonzero::NonZero<u64>>::from": true,
  "convert::num::<impl convert::From<num::nonzero::NonZero<u64>> for num::nonzero::NonZero<i128>>::from": true,
  "convert::num::<impl convert::From<num::nonzero::NonZero<u64>> for num::nonzero::NonZero<u128>>::from": true,
  "convert::num::<impl convert::From<num::nonzero::NonZero<u8>> for num::nonzero::NonZero<i128>>::from": true,
  "convert::num::<impl convert::From<num::nonzero::NonZero<u8>> for num::nonzero::NonZero<i16>>::from": true,
  "convert::num::<impl convert::From<num::nonzero::NonZero<u8>> for num::nonzero::NonZero<i32>>::from": true,
  "convert::num::<impl convert::From<num::nonzero::NonZero<u8>> for num::nonzero::NonZero<i64>>::from": true,
  "convert::num::<impl convert::From<num::nonzero::NonZero<u8>> for num::nonzero::NonZero<isize>>::from": true,
  "convert::num::<impl convert::From<num::nonzero::NonZero<u8>> for num::nonzero::NonZero<u128>>::from": true,
  "convert::num::<impl convert::From<num::nonzero::NonZero<u8>> for num::nonzero::NonZero<u16>>::from": true,
  "convert::num::<impl convert::From<num::nonzero::NonZero<u8>> for num::nonzero::NonZero<u32>>::from": true,
  "convert::num::<impl convert::From<num::nonzero::NonZero<u8>> for num::nonzero::NonZero<u64>>::from": true,
  "convert::num::<impl convert::From<num::nonzero::NonZero<u8>> for num::nonzero::NonZero<usize>>::from": true,
  "convert::num::<impl convert::From<u16> for f128>::from": true,
  "convert::num::<impl convert::From<u16> for f32>::from": true,
  "convert::num::<impl convert::From<u16> for f64>::from": true,
  "convert::num::<impl convert::From<u16> for i128>::from": true,
  "convert::num::<impl convert::From<u16> for i32>::from": true,
  "convert::num::<impl convert::From<u16> for i64>::from": true,
  "convert::num::<impl convert::From<u16> for u128>::from": true,
  "convert::num::<impl convert::From<u16> for u32>::from": true,
  "convert::num::<impl convert::From<u16> for u64>::from": true,
  "convert::num::<impl convert::From<u16> for usize>::from": true,
  "convert::num::<impl convert::From<u32> for f128>::from": true,
  "convert::num::<impl convert::From<u32> for f64>::from": true,
  "convert::num::<impl convert::From<u32> for i128>::from": true,
  "convert::num::<impl convert::From<u32> for i64>::from": true,
  "convert::num::<impl convert::From<u32> for u128>::from": true,
  "convert::num::<impl convert::From<u32> for u64>::from": true,
  "convert::num::<impl convert::From<u64> for i128>::from": true,
  "convert::num::<impl convert::From<u64> for u128>::from": true,
  "convert::num::<impl convert::From<u8> for f128>::from": true,
  "convert::num::<impl convert::From<u8> for f16>::from": true,
  "convert::num::<impl convert::From<u8> for f32>::from": true,
  "convert::num::<impl convert::From<u8> for f64>::from": true,
  "convert::num::<impl convert::From<u8> for i128>::from": true,
  "convert::num::<impl convert::From<u8> for i16>::from": true,
  "convert::num::<impl convert::From<u8> for i32>::from": true,
  "convert::num::<impl convert::From<u8> for i64>::from": true,
  "convert::num::<impl convert::From<u8> for isize>::from": true,
  "convert::num::<impl convert::From<u8> for u128>::from": true,
  "convert::num::<impl convert::From<u8> for u16>::from": true,
  "convert::num::<impl convert::From<u8> for u32>::from": true,
  "convert::num::<impl convert::From<u8> for u64>::from": true,
  "convert::num::<impl convert::From<u8> for usize>::from": true,
  "convert::num::<impl convert::TryFrom<i128> for i16>::try_from": true,
  "convert::num::<impl convert::TryFrom<i128> for i32>::try_from": true,
  "convert::num::<impl convert::TryFrom<i128> for i64>::try_from": true,
  "convert::num::<impl convert::TryFrom<i128> for i8>::try_from": true,
  "convert::num::<impl convert::TryFrom<i128> for num::nonzero::NonZero<i128>>::try_from": true,
  "convert::num::<impl convert::TryFrom<i128> for u128>::try_from": true,
  "convert::num::<impl convert::TryFrom<i128> for u16>::try_from": true,
  "convert::num::<impl convert::TryFrom<i128> for u32>::try_from": true,
  "convert::num::<impl convert::TryFrom<i128> for u64>::try_from": true,
  "convert::num::<impl convert::TryFrom<i128> for u8>::try_from": true,
  "convert::num::<impl convert::TryFrom<i16> for i8>::try_from": true,
  "convert::num::<impl convert::TryFrom<i16> for num::nonzero::NonZero<i16>>::try_from": true,
  "convert::num::<impl convert::TryFrom<i16> for u128>::try_from": true,
  "convert::num::<impl convert::TryFrom<i16> for u16>::try_from": true,
  "convert::num::<impl convert::TryFrom<i16> for u32>::try_from": true,
  "convert::num::<impl convert::TryFrom<i16> for u64>::try_from": true,
  "convert::num::<impl convert::TryFrom<i16> for u8>::try_from": true,
  "convert::num::<impl convert::TryFrom<i32> for i16>::try_from": true,
  "convert::num::<impl convert::TryFrom<i32> for i8>::try_from": true,
  "convert::num::<impl convert::TryFrom<i32> for num::nonzero::NonZero<i32>>::try_from": true,
  "convert::num::<impl convert::TryFrom<i32> for u128>::try_from": true,
  "convert::num::<impl convert::TryFrom<i32> for u16>::try_from": true,
  "convert::num::<impl convert::TryFrom<i32> for u32>::try_from": true,
  "convert::num::<impl convert::TryFrom<i32> for u64>::try_from": true,
  "convert::num::<impl convert::TryFrom<i32> for u8>::try_from": true,
  "convert::num::<impl convert::TryFrom<i64> for i16>::try_from": true,
  "convert::num::<impl convert::TryFrom<i64> for i32>::try_from": true,
  "convert::num::<impl convert::TryFrom<i64> for i8>::try_from": true,
  "convert::num::<impl convert::TryFrom<i64> for num::nonzero::NonZero<i64>>::try_from": true,
  "convert::num::<impl convert::TryFrom<i64> for u128>::try_from": true,
  "convert::num::<impl convert::TryFrom<i64> for u16>::try_from": true,
  "convert::num::<impl convert::TryFrom<i64> for u32>::try_from": true,
  "convert::num::<impl convert::TryFrom<i64> for u64>::try_from": true,
  "convert::num::<impl convert::TryFrom<i64> for u8>::try_from": true,
  "convert::num::<impl convert::TryFrom<i8> for num::nonzero::NonZero<i8>>::try_from": true,
  "convert::num::<impl convert::TryFrom<i8> for u128>::try_from": true,
  "convert::num::<impl convert::TryFrom<i8> for u16>::try_from": true,
  "convert::num::<impl convert::TryFrom<i8> for u32>::try_from": true,
  "convert::num::<impl convert::TryFrom<i8> for u64>::try_from": true,
  "convert::num::<impl convert::TryFrom<i8> for u8>::try_from": true,
  "convert::num::<impl convert::TryFrom<isize> for num::nonzero::NonZero<isize>>::try_from": true,
  "convert::num::<impl convert::TryFrom<isize> for usize>::try_from": true,
  "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<i128>> for num::nonzero::NonZero<i16>>::try_from": true,
  "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<i128>> for num::nonzero::NonZero<i32>>::try_from": true,
  "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<i128>> for num::nonzero::NonZero<i64>>::try_from": true,
  "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<i128>> for num::nonzero::NonZero<i8>>::try_from": true,
  "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<i128>> for num::nonzero::NonZero<isize>>::try_from": true,
  "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<i128>> for num::nonzero::NonZero<u128>>::try_from": true,
  "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<i128>> for num::nonzero::NonZero<u16>>::try_from": true,
  "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<i128>> for num::nonzero::NonZero<u32>>::try_from": true,
  "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<i128>> for num::nonzero::NonZero<u64>>::try_from": true,
  "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<i128>> for num::nonzero::NonZero<u8>>::try_from": true,
  "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<i128>> for num::nonzero::NonZero<usize>>::try_from": true,
  "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<i16>> for num::nonzero::NonZero<i8>>::try_from": true,
  "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<i16>> for num::nonzero::NonZero<u128>>::try_from": true,
  "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<i16>> for num::nonzero::NonZero<u16>>::try_from": true,
  "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<i16>> for num::nonzero::NonZero<u32>>::try_from": true,
  "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<i16>> for num::nonzero::NonZero<u64>>::try_from": true,
  "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<i16>> for num::nonzero::NonZero<u8>>::try_from": true,
  "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<i16>> for num::nonzero::NonZero<usize>>::try_from": true,
  "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<i32>> for num::nonzero::NonZero<i16>>::try_from": true,
  "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<i32>> for num::nonzero::NonZero<i8>>::try_from": true,
  "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<i32>> for num::nonzero::NonZero<isize>>::try_from": true,
  "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<i32>> for num::nonzero::NonZero<u128>>::try_from": true,
  "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<i32>> for num::nonzero::NonZero<u16>>::try_from": true,
  "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<i32>> for num::nonzero::NonZero<u32>>::try_from": true,
  "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<i32>> for num::nonzero::NonZero<u64>>::try_from": true,
  "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<i32>> for num::nonzero::NonZero<u8>>::try_from": true,
  "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<i32>> for num::nonzero::NonZero<usize>>::try_from": true,
  "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<i64>> for num::nonzero::NonZero<i16>>::try_from": true,
  "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<i64>> for num::nonzero::NonZero<i32>>::try_from": true,
  "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<i64>> for num::nonzero::NonZero<i8>>::try_from": true,
  "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<i64>> for num::nonzero::NonZero<isize>>::try_from": true,
  "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<i64>> for num::nonzero::NonZero<u128>>::try_from": true,
  "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<i64>> for num::nonzero::NonZero<u16>>::try_from": true,
  "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<i64>> for num::nonzero::NonZero<u32>>::try_from": true,
  "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<i64>> for num::nonzero::NonZero<u64>>::try_from": true,
  "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<i64>> for num::nonzero::NonZero<u8>>::try_from": true,
  "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<i64>> for num::nonzero::NonZero<usize>>::try_from": true,
  "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<i8>> for num::nonzero::NonZero<u128>>::try_from": true,
  "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<i8>> for num::nonzero::NonZero<u16>>::try_from": true,
  "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<i8>> for num::nonzero::NonZero<u32>>::try_from": true,
  "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<i8>> for num::nonzero::NonZero<u64>>::try_from": true,
  "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<i8>> for num::nonzero::NonZero<u8>>::try_from": true,
  "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<i8>> for num::nonzero::NonZero<usize>>::try_from": true,
  "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<isize>> for num::nonzero::NonZero<i128>>::try_from": true,
  "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<isize>> for num::nonzero::NonZero<i16>>::try_from": true,
  "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<isize>> for num::nonzero::NonZero<i32>>::try_from": true,
  "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<isize>> for num::nonzero::NonZero<i64>>::try_from": true,
  "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<isize>> for num::nonzero::NonZero<i8>>::try_from": true,
  "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<isize>> for num::nonzero::NonZero<u128>>::try_from": true,
  "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<isize>> for num::nonzero::NonZero<u16>>::try_from": true,
  "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<isize>> for num::nonzero::NonZero<u32>>::try_from": true,
  "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<isize>> for num::nonzero::NonZero<u64>>::try_from": true,
  "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<isize>> for num::nonzero::NonZero<u8>>::try_from": true,
  "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<isize>> for num::nonzero::NonZero<usize>>::try_from": true,
  "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<u128>> for num::nonzero::NonZero<i128>>::try_from": true,
  "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<u128>> for num::nonzero::NonZero<i16>>::try_from": true,
  "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<u128>> for num::nonzero::NonZero<i32>>::try_from": true,
  "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<u128>> for num::nonzero::NonZero<i64>>::try_from": true,
  "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<u128>> for num::nonzero::NonZero<i8>>::try_from": true,
  "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<u128>> for num::nonzero::NonZero<isize>>::try_from": true,
  "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<u128>> for num::nonzero::NonZero<u16>>::try_from": true,
  "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<u128>> for num::nonzero::NonZero<u32>>::try_from": true,
  "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<u128>> for num::nonzero::NonZero<u64>>::try_from": true,
  "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<u128>> for num::nonzero::NonZero<u8>>::try_from": true,
  "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<u128>> for num::nonzero::NonZero<usize>>::try_from": true,
  "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<u16>> for num::nonzero::NonZero<i16>>::try_from": true,
  "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<u16>> for num::nonzero::NonZero<i8>>::try_from": true,
  "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<u16>> for num::nonzero::NonZero<isize>>::try_from": true,
  "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<u16>> for num::nonzero::NonZero<u8>>::try_from": true,
  "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<u32>> for num::nonzero::NonZero<i16>>::try_from": true,
  "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<u32>> for num::nonzero::NonZero<i32>>::try_from": true,
  "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<u32>> for num::nonzero::NonZero<i8>>::try_from": true,
  "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<u32>> for num::nonzero::NonZero<isize>>::try_from": true,
  "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<u32>> for num::nonzero::NonZero<u16>>::try_from": true,
  "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<u32>> for num::nonzero::NonZero<u8>>::try_from": true,
  "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<u32>> for num::nonzero::NonZero<usize>>::try_from": true,
  "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<u64>> for num::nonzero::NonZero<i16>>::try_from": true,
  "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<u64>> for num::nonzero::NonZero<i32>>::try_from": true,
  "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<u64>> for num::nonzero::NonZero<i64>>::try_from": true,
  "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<u64>> for num::nonzero::NonZero<i8>>::try_from": true,
  "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<u64>> for num::nonzero::NonZero<isize>>::try_from": true,
  "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<u64>> for num::nonzero::NonZero<u16>>::try_from": true,
  "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<u64>> for num::nonzero::NonZero<u32>>::try_from": true,
  "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<u64>> for num::nonzero::NonZero<u8>>::try_from": true,
  "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<u64>> for num::nonzero::NonZero<usize>>::try_from": true,
  "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<u8>> for num::nonzero::NonZero<i8>>::try_from": true,
  "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<usize>> for num::nonzero::NonZero<i128>>::try_from": true,
  "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<usize>> for num::nonzero::NonZero<i16>>::try_from": true,
  "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<usize>> for num::nonzero::NonZero<i32>>::try_from": true,
  "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<usize>> for num::nonzero::NonZero<i64>>::try_from": true,
  "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<usize>> for num::nonzero::NonZero<i8>>::try_from": true,
  "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<usize>> for num::nonzero::NonZero<isize>>::try_from": true,
  "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<usize>> for num::nonzero::NonZero<u128>>::try_from": true,
  "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<usize>> for num::nonzero::NonZero<u16>>::try_from": true,
  "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<usize>> for num::nonzero::NonZero<u32>>::try_from": true,
  "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<usize>> for num::nonzero::NonZero<u64>>::try_from": true,
  "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<usize>> for num::nonzero::NonZero<u8>>::try_from": true,
  "convert::num::<impl convert::TryFrom<u128> for i128>::try_from": true,
  "convert::num::<impl convert::TryFrom<u128> for i16>::try_from": true,
  "convert::num::<impl convert::TryFrom<u128> for i32>::try_from": true,
  "convert::num::<impl convert::TryFrom<u128> for i64>::try_from": true,
  "convert::num::<impl convert::TryFrom<u128> for i8>::try_from": true,
  "convert::num::<impl convert::TryFrom<u128> for num::nonzero::NonZero<u128>>::try_from": true,
  "convert::num::<impl convert::TryFrom<u128> for u16>::try_from": true,
  "convert::num::<impl convert::TryFrom<u128> for u32>::try_from": true,
  "convert::num::<impl convert::TryFrom<u128> for u64>::try_from": true,
  "convert::num::<impl convert::TryFrom<u128> for u8>::try_from": true,
  "convert::num::<impl convert::TryFrom<u16> for i16>::try_from": true,
  "convert::num::<impl convert::TryFrom<u16> for i8>::try_from": true,
  "convert::num::<impl convert::TryFrom<u16> for num::nonzero::NonZero<u16>>::try_from": true,
  "convert::num::<impl convert::TryFrom<u16> for u8>::try_from": true,
  "convert::num::<impl convert::TryFrom<u32> for i16>::try_from": true,
  "convert::num::<impl convert::TryFrom<u32> for i32>::try_from": true,
  "convert::num::<impl convert::TryFrom<u32> for i8>::try_from": true,
  "convert::num::<impl convert::TryFrom<u32> for num::nonzero::NonZero<u32>>::try_from": true,
  "convert::num::<impl convert::TryFrom<u32> for u16>::try_from": true,
  "convert::num::<impl convert::TryFrom<u32> for u8>::try_from": true,
  "convert::num::<impl convert::TryFrom<u64> for i16>::try_from": true,
  "convert::num::<impl convert::TryFrom<u64> for i32>::try_from": true,
  "convert::num::<impl convert::TryFrom<u64> for i64>::try_from": true,
  "convert::num::<impl convert::TryFrom<u64> for i8>::try_from": true,
  "convert::num::<impl convert::TryFrom<u64> for num::nonzero::NonZero<u64>>::try_from": true,
  "convert::num::<impl convert::TryFrom<u64> for u16>::try_from": true,
  "convert::num::<impl convert::TryFrom<u64> for u32>::try_from": true,
  "convert::num::<impl convert::TryFrom<u64> for u8>::try_from": true,
  "convert::num::<impl convert::TryFrom<u8> for i8>::try_from": true,
  "convert::num::<impl convert::TryFrom<u8> for num::nonzero::NonZero<u8>>::try_from": true,
  "convert::num::<impl convert::TryFrom<usize> for isize>::try_from": true,
  "convert::num::<impl convert::TryFrom<usize> for num::nonzero::NonZero<usize>>::try_from": true,
  "convert::num::ptr_try_from_impls::<impl convert::TryFrom<i128> for isize>::try_from": true,
  "convert::num::ptr_try_from_impls::<impl convert::TryFrom<i128> for usize>::try_from": true,
  "convert::num::ptr_try_from_impls::<impl convert::TryFrom<i16> for usize>::try_from": true,
  "convert::num::ptr_try_from_impls::<impl convert::TryFrom<i32> for isize>::try_from": true,
  "convert::num::ptr_try_from_impls::<impl convert::TryFrom<i32> for usize>::try_from": true,
  "convert::num::ptr_try_from_impls::<impl convert::TryFrom<i64> for isize>::try_from": true,
  "convert::num::ptr_try_from_impls::<impl convert::TryFrom<i64> for usize>::try_from": true,
  "convert::num::ptr_try_from_impls::<impl convert::TryFrom<i8> for usize>::try_from": true,
  "convert::num::ptr_try_from_impls::<impl convert::TryFrom<isize> for i128>::try_from": true,
  "convert::num::ptr_try_from_impls::<impl convert::TryFrom<isize> for i16>::try_from": true,
  "convert::num::ptr_try_from_impls::<impl convert::TryFrom<isize> for i32>::try_from": true,
  "convert::num::ptr_try_from_impls::<impl convert::TryFrom<isize> for i64>::try_from": true,
  "convert::num::ptr_try_from_impls::<impl convert::TryFrom<isize> for i8>::try_from": true,
  "convert::num::ptr_try_from_impls::<impl convert::TryFrom<isize> for u128>::try_from": true,
  "convert::num::ptr_try_from_impls::<impl convert::TryFrom<isize> for u16>::try_from": true,
  "convert::num::ptr_try_from_impls::<impl convert::TryFrom<isize> for u32>::try_from": true,
  "convert::num::ptr_try_from_impls::<impl convert::TryFrom<isize> for u64>::try_from": true,
  "convert::num::ptr_try_from_impls::<impl convert::TryFrom<isize> for u8>::try_from": true,
  "convert::num::ptr_try_from_impls::<impl convert::TryFrom<u128> for isize>::try_from": true,
  "convert::num::ptr_try_from_impls::<impl convert::TryFrom<u128> for usize>::try_from": true,
  "convert::num::ptr_try_from_impls::<impl convert::TryFrom<u16> for isize>::try_from": true,
  "convert::num::ptr_try_from_impls::<impl convert::TryFrom<u32> for isize>::try_from": true,
  "convert::num::ptr_try_from_impls::<impl convert::TryFrom<u32> for usize>::try_from": true,
  "convert::num::ptr_try_from_impls::<impl convert::TryFrom<u64> for isize>::try_from": true,
  "convert::num::ptr_try_from_impls::<impl convert::TryFrom<u64> for usize>::try_from": true,
  "convert::num::ptr_try_from_impls::<impl convert::TryFrom<usize> for i128>::try_from": true,
  "convert::num::ptr_try_from_impls::<impl convert::TryFrom<usize> for i16>::try_from": true,
  "convert::num::ptr_try_from_impls::<impl convert::TryFrom<usize> for i32>::try_from": true,
  "convert::num::ptr_try_from_impls::<impl convert::TryFrom<usize> for i64>::try_from": true,
  "convert::num::ptr_try_from_impls::<impl convert::TryFrom<usize> for i8>::try_from": true,
  "convert::num::ptr_try_from_impls::<impl convert::TryFrom<usize> for u128>::try_from": true,
  "convert::num::ptr_try_from_impls::<impl convert::TryFrom<usize> for u16>::try_from": true,
  "convert::num::ptr_try_from_impls::<impl convert::TryFrom<usize> for u32>::try_from": true,
  "convert::num::ptr_try_from_impls::<impl convert::TryFrom<usize> for u64>::try_from": true,
  "convert::num::ptr_try_from_impls::<impl convert::TryFrom<usize> for u8>::try_from": true,
  "core_arch::simd::f16x16::as_array": true,
  "core_arch::simd::f16x16::extract": true,
  "core_arch::simd::f16x16::from_array": true,
  "core_arch::simd::f16x16::new": true,
  "core_arch::simd::f16x16::splat": true,
  "core_arch::simd::f16x32::as_array": true,
  "core_arch::simd::f16x32::extract": true,
  "core_arch::simd::f16x32::from_array": true,
  "core_arch::simd::f16x32::new": true,
  "core_arch::simd::f16x32::splat": true,
  "core_arch::simd::f16x4::as_array": true,
  "core_arch::simd::f16x4::extract": true,
  "core_arch::simd::f16x4::from_array": true,
  "core_arch::simd::f16x4::new": true,
  "core_arch::simd::f16x4::splat": true,
  "core_arch::simd::f16x8::as_array": true,
  "core_arch::simd::f16x8::extract": true,
  "core_arch::simd::f16x8::from_array": true,
  "core_arch::simd::f16x8::new": true,
  "core_arch::simd::f16x8::splat": true,
  "core_arch::simd::f32x16::as_array": true,
  "core_arch::simd::f32x16::extract": true,
  "core_arch::simd::f32x16::from_array": true,
  "core_arch::simd::f32x16::new": true,
  "core_arch::simd::f32x16::splat": true,
  "core_arch::simd::f32x2::as_array": true,
  "core_arch::simd::f32x2::extract": true,
  "core_arch::simd::f32x2::from_array": true,
  "core_arch::simd::f32x2::new": true,
  "core_arch::simd::f32x2::splat": true,
  "core_arch::simd::f32x4::as_array": true,
  "core_arch::simd::f32x4::extract": true,
  "core_arch::simd::f32x4::from_array": true,
  "core_arch::simd::f32x4::new": true,
  "core_arch::simd::f32x4::splat": true,
  "core_arch::simd::f32x8::as_array": true,
  "core_arch::simd::f32x8::extract": true,
  "core_arch::simd::f32x8::from_array": true,
  "core_arch::simd::f32x8::new": true,
  "core_arch::simd::f32x8::splat": true,
  "core_arch::simd::f64x1::as_array": true,
  "core_arch::simd::f64x1::extract": true,
  "core_arch::simd::f64x1::from_array": true,
  "core_arch::simd::f64x1::new": true,
  "core_arch::simd::f64x1::splat": true,
  "core_arch::simd::f64x2::as_array": true,
  "core_arch::simd::f64x2::extract": true,
  "core_arch::simd::f64x2::from_array": true,
  "core_arch::simd::f64x2::new": true,
  "core_arch::simd::f64x2::splat": true,
  "core_arch::simd::f64x4::as_array": true,
  "core_arch::simd::f64x4::extract": true,
  "core_arch::simd::f64x4::from_array": true,
  "core_arch::simd::f64x4::new": true,
  "core_arch::simd::f64x4::splat": true,
  "core_arch::simd::f64x8::as_array": true,
  "core_arch::simd::f64x8::extract": true,
  "core_arch::simd::f64x8::from_array": true,
  "core_arch::simd::f64x8::new": true,
  "core_arch::simd::f64x8::splat": true,
  "core_arch::simd::i16x16::as_array": true,
  "core_arch::simd::i16x16::extract": true,
  "core_arch::simd::i16x16::from_array": true,
  "core_arch::simd::i16x16::new": true,
  "core_arch::simd::i16x16::splat": true,
  "core_arch::simd::i16x2::as_array": true,
  "core_arch::simd::i16x2::extract": true,
  "core_arch::simd::i16x2::from_array": true,
  "core_arch::simd::i16x2::new": true,
  "core_arch::simd::i16x2::splat": true,
  "core_arch::simd::i16x32::as_array": true,
  "core_arch::simd::i16x32::extract": true,
  "core_arch::simd::i16x32::from_array": true,
  "core_arch::simd::i16x32::new": true,
  "core_arch::simd::i16x32::splat": true,
  "core_arch::simd::i16x4::as_array": true,
  "core_arch::simd::i16x4::extract": true,
  "core_arch::simd::i16x4::from_array": true,
  "core_arch::simd::i16x4::new": true,
  "core_arch::simd::i16x4::splat": true,
  "core_arch::simd::i16x8::as_array": true,
  "core_arch::simd::i16x8::extract": true,
  "core_arch::simd::i16x8::from_array": true,
  "core_arch::simd::i16x8::new": true,
  "core_arch::simd::i16x8::splat": true,
  "core_arch::simd::i32x16::as_array": true,
  "core_arch::simd::i32x16::extract": true,
  "core_arch::simd::i32x16::from_array": true,
  "core_arch::simd::i32x16::new": true,
  "core_arch::simd::i32x16::splat": true,
  "core_arch::simd::i32x2::as_array": true,
  "core_arch::simd::i32x2::extract": true,
  "core_arch::simd::i32x2::from_array": true,
  "core_arch::simd::i32x2::new": true,
  "core_arch::simd::i32x2::splat": true,
  "core_arch::simd::i32x32::as_array": true,
  "core_arch::simd::i32x32::extract": true,
  "core_arch::simd::i32x32::from_array": true,
  "core_arch::simd::i32x32::new": true,
  "core_arch::simd::i32x32::splat": true,
  "core_arch::simd::i32x4::as_array": true,
  "core_arch::simd::i32x4::extract": true,
  "core_arch::simd::i32x4::from_array": true,
  "core_arch::simd::i32x4::new": true,
  "core_arch::simd::i32x4::splat": true,
  "core_arch::simd::i32x8::as_array": true,
  "core_arch::simd::i32x8::extract": true,
  "core_arch::simd::i32x8::from_array": true,
  "core_arch::simd::i32x8::new": true,
  "core_arch::simd::i32x8::splat": true,
  "core_arch::simd::i64x1::as_array": true,
  "core_arch::simd::i64x1::extract": true,
  "core_arch::simd::i64x1::from_array": true,
  "core_arch::simd::i64x1::new": true,
  "core_arch::simd::i64x1::splat": true,
  "core_arch::simd::i64x2::as_array": true,
  "core_arch::simd::i64x2::extract": true,
  "core_arch::simd::i64x2::from_array": true,
  "core_arch::simd::i64x2::new": true,
  "core_arch::simd::i64x2::splat": true,
  "core_arch::simd::i64x4::as_array": true,
  "core_arch::simd::i64x4::extract": true,
  "core_arch::simd::i64x4::from_array": true,
  "core_arch::simd::i64x4::new": true,
  "core_arch::simd::i64x4::splat": true,
  "core_arch::simd::i64x8::as_array": true,
  "core_arch::simd::i64x8::extract": true,
  "core_arch::simd::i64x8::from_array": true,
  "core_arch::simd::i64x8::new": true,
  "core_arch::simd::i64x8::splat": true,
  "core_arch::simd::i8x16::as_array": true,
  "core_arch::simd::i8x16::extract": true,
  "core_arch::simd::i8x16::from_array": true,
  "core_arch::simd::i8x16::new": true,
  "core_arch::simd::i8x16::splat": true,
  "core_arch::simd::i8x2::as_array": true,
  "core_arch::simd::i8x2::extract": true,
  "core_arch::simd::i8x2::from_array": true,
  "core_arch::simd::i8x2::new": true,
  "core_arch::simd::i8x2::splat": true,
  "core_arch::simd::i8x32::as_array": true,
  "core_arch::simd::i8x32::extract": true,
  "core_arch::simd::i8x32::from_array": true,
  "core_arch::simd::i8x32::new": true,
  "core_arch::simd::i8x32::splat": true,
  "core_arch::simd::i8x4::as_array": true,
  "core_arch::simd::i8x4::extract": true,
  "core_arch::simd::i8x4::from_array": true,
  "core_arch::simd::i8x4::new": true,
  "core_arch::simd::i8x4::splat": true,
  "core_arch::simd::i8x64::as_array": true,
  "core_arch::simd::i8x64::extract": true,
  "core_arch::simd::i8x64::from_array": true,
  "core_arch::simd::i8x64::new": true,
  "core_arch::simd::i8x64::splat": true,
  "core_arch::simd::i8x8::as_array": true,
  "core_arch::simd::i8x8::extract": true,
  "core_arch::simd::i8x8::from_array": true,
  "core_arch::simd::i8x8::new": true,
  "core_arch::simd::i8x8::splat": true,
  "core_arch::simd::m16x16::as_array": true,
  "core_arch::simd::m16x16::bool_to_internal": true,
  "core_arch::simd::m16x16::new": true,
  "core_arch::simd::m16x16::splat": true,
  "core_arch::simd::m16x8::as_array": true,
  "core_arch::simd::m16x8::bool_to_internal": true,
  "core_arch::simd::m16x8::new": true,
  "core_arch::simd::m16x8::splat": true,
  "core_arch::simd::m32x4::as_array": true,
  "core_arch::simd::m32x4::bool_to_internal": true,
  "core_arch::simd::m32x4::new": true,
  "core_arch::simd::m32x4::splat": true,
  "core_arch::simd::m32x8::as_array": true,
  "core_arch::simd::m32x8::bool_to_internal": true,
  "core_arch::simd::m32x8::new": true,
  "core_arch::simd::m32x8::splat": true,
  "core_arch::simd::m64x2::as_array": true,
  "core_arch::simd::m64x2::bool_to_internal": true,
  "core_arch::simd::m64x2::new": true,
  "core_arch::simd::m64x2::splat": true,
  "core_arch::simd::m8x16::as_array": true,
  "core_arch::simd::m8x16::bool_to_internal": true,
  "core_arch::simd::m8x16::new": true,
  "core_arch::simd::m8x16::splat": true,
  "core_arch::simd::m8x32::as_array": true,
  "core_arch::simd::m8x32::bool_to_internal": true,
  "core_arch::simd::m8x32::new": true,
  "core_arch::simd::m8x32::splat": true,
  "core_arch::simd::u16x16::as_array": true,
  "core_arch::simd::u16x16::extract": true,
  "core_arch::simd::u16x16::from_array": true,
  "core_arch::simd::u16x16::new": true,
  "core_arch::simd::u16x16::splat": true,
  "core_arch::simd::u16x2::as_array": true,
  "core_arch::simd::u16x2::extract": true,
  "core_arch::simd::u16x2::from_array": true,
  "core_arch::simd::u16x2::new": true,
  "core_arch::simd::u16x2::splat": true,
  "core_arch::simd::u16x32::as_array": true,
  "core_arch::simd::u16x32::extract": true,
  "core_arch::simd::u16x32::from_array": true,
  "core_arch::simd::u16x32::new": true,
  "core_arch::simd::u16x32::splat": true,
  "core_arch::simd::u16x4::as_array": true,
  "core_arch::simd::u16x4::extract": true,
  "core_arch::simd::u16x4::from_array": true,
  "core_arch::simd::u16x4::new": true,
  "core_arch::simd::u16x4::splat": true,
  "core_arch::simd::u16x64::as_array": true,
  "core_arch::simd::u16x64::extract": true,
  "core_arch::simd::u16x64::from_array": true,
  "core_arch::simd::u16x64::new": true,
  "core_arch::simd::u16x64::splat": true,
  "core_arch::simd::u16x8::as_array": true,
  "core_arch::simd::u16x8::extract": true,
  "core_arch::simd::u16x8::from_array": true,
  "core_arch::simd::u16x8::new": true,
  "core_arch::simd::u16x8::splat": true,
  "core_arch::simd::u32x16::as_array": true,
  "core_arch::simd::u32x16::extract": true,
  "core_arch::simd::u32x16::from_array": true,
  "core_arch::simd::u32x16::new": true,
  "core_arch::simd::u32x16::splat": true,
  "core_arch::simd::u32x2::as_array": true,
  "core_arch::simd::u32x2::extract": true,
  "core_arch::simd::u32x2::from_array": true,
  "core_arch::simd::u32x2::new": true,
  "core_arch::simd::u32x2::splat": true,
  "core_arch::simd::u32x32::as_array": true,
  "core_arch::simd::u32x32::extract": true,
  "core_arch::simd::u32x32::from_array": true,
  "core_arch::simd::u32x32::new": true,
  "core_arch::simd::u32x32::splat": true,
  "core_arch::simd::u32x4::as_array": true,
  "core_arch::simd::u32x4::extract": true,
  "core_arch::simd::u32x4::from_array": true,
  "core_arch::simd::u32x4::new": true,
  "core_arch::simd::u32x4::splat": true,
  "core_arch::simd::u32x8::as_array": true,
  "core_arch::simd::u32x8::extract": true,
  "core_arch::simd::u32x8::from_array": true,
  "core_arch::simd::u32x8::new": true,
  "core_arch::simd::u32x8::splat": true,
  "core_arch::simd::u64x1::as_array": true,
  "core_arch::simd::u64x1::extract": true,
  "core_arch::simd::u64x1::from_array": true,
  "core_arch::simd::u64x1::new": true,
  "core_arch::simd::u64x1::splat": true,
  "core_arch::simd::u64x2::as_array": true,
  "core_arch::simd::u64x2::extract": true,
  "core_arch::simd::u64x2::from_array": true,
  "core_arch::simd::u64x2::new": true,
  "core_arch::simd::u64x2::splat": true,
  "core_arch::simd::u64x4::as_array": true,
  "core_arch::simd::u64x4::extract": true,
  "core_arch::simd::u64x4::from_array": true,
  "core_arch::simd::u64x4::new": true,
  "core_arch::simd::u64x4::splat": true,
  "core_arch::simd::u64x8::as_array": true,
  "core_arch::simd::u64x8::extract": true,
  "core_arch::simd::u64x8::from_array": true,
  "core_arch::simd::u64x8::new": true,
  "core_arch::simd::u64x8::splat": true,
  "core_arch::simd::u8x16::as_array": true,
  "core_arch::simd::u8x16::extract": true,
  "core_arch::simd::u8x16::from_array": true,
  "core_arch::simd::u8x16::new": true,
  "core_arch::simd::u8x16::splat": true,
  "core_arch::simd::u8x2::as_array": true,
  "core_arch::simd::u8x2::extract": true,
  "core_arch::simd::u8x2::from_array": true,
  "core_arch::simd::u8x2::new": true,
  "core_arch::simd::u8x2::splat": true,
  "core_arch::simd::u8x32::as_array": true,
  "core_arch::simd::u8x32::extract": true,
  "core_arch::simd::u8x32::from_array": true,
  "core_arch::simd::u8x32::new": true,
  "core_arch::simd::u8x32::splat": true,
  "core_arch::simd::u8x4::as_array": true,
  "core_arch::simd::u8x4::extract": true,
  "core_arch::simd::u8x4::from_array": true,
  "core_arch::simd::u8x4::new": true,
  "core_arch::simd::u8x4::splat": true,
  "core_arch::simd::u8x64::as_array": true,
  "core_arch::simd::u8x64::extract": true,
  "core_arch::simd::u8x64::from_array": true,
  "core_arch::simd::u8x64::new": true,
  "core_arch::simd::u8x64::splat": true,
  "core_arch::simd::u8x8::as_array": true,
  "core_arch::simd::u8x8::extract": true,
  "core_arch::simd::u8x8::from_array": true,
  "core_arch::simd::u8x8::new": true,
  "core_arch::simd::u8x8::splat": true,
  "core_arch::x86::<impl core_arch::simd::f16x16>::as_m256h": true,
  "core_arch::x86::<impl core_arch::simd::f16x32>::as_m512h": true,
  "core_arch::x86::<impl core_arch::simd::f16x8>::as_m128h": true,
  "core_arch::x86::<impl core_arch::simd::f32x16>::as_m512": true,
  "core_arch::x86::<impl core_arch::simd::f32x4>::as_m128": true,
  "core_arch::x86::<impl core_arch::simd::f32x8>::as_m256": true,
  "core_arch::x86::<impl core_arch::simd::f64x2>::as_m128d": true,
  "core_arch::x86::<impl core_arch::simd::f64x4>::as_m256d": true,
  "core_arch::x86::<impl core_arch::simd::f64x8>::as_m512d": true,
  "core_arch::x86::<impl core_arch::simd::i16x16>::as_m256bh": true,
  "core_arch::x86::<impl core_arch::simd::i16x16>::as_m256i": true,
  "core_arch::x86::<impl core_arch::simd::i16x32>::as_m512bh": true,
  "core_arch::x86::<impl core_arch::simd::i16x32>::as_m512i": true,
  "core_arch::x86::<impl core_arch::simd::i16x8>::as_m128bh": true,
  "core_arch::x86::<impl core_arch::simd::i16x8>::as_m128i": true,
  "core_arch::x86::<impl core_arch::simd::i32x16>::as_m512bh": true,
  "core_arch::x86::<impl core_arch::simd::i32x16>::as_m512i": true,
  "core_arch::x86::<impl core_arch::simd::i32x4>::as_m128bh": true,
  "core_arch::x86::<impl core_arch::simd::i32x4>::as_m128i": true,
  "core_arch::x86::<impl core_arch::simd::i32x8>::as_m256bh": true,
  "core_arch::x86::<impl core_arch::simd::i32x8>::as_m256i": true,
  "core_arch::x86::<impl core_arch::simd::i64x2>::as_m128i": true,
  "core_arch::x86::<impl core_arch::simd::i64x4>::as_m256i": true,
  "core_arch::x86::<impl core_arch::simd::i64x8>::as_m512i": true,
  "core_arch::x86::<impl core_arch::simd::i8x16>::as_m128i": true,
  "core_arch::x86::<impl core_arch::simd::i8x32>::as_m256i": true,
  "core_arch::x86::<impl core_arch::simd::i8x64>::as_m512i": true,
  "core_arch::x86::<impl core_arch::simd::u16x16>::as_m256bh": true,
  "core_arch::x86::<impl core_arch::simd::u16x16>::as_m256i": true,
  "core_arch::x86::<impl core_arch::simd::u16x32>::as_m512bh": true,
  "core_arch::x86::<impl core_arch::simd::u16x32>::as_m512i": true,
  "core_arch::x86::<impl core_arch::simd::u16x8>::as_m128bh": true,
  "core_arch::x86::<impl core_arch::simd::u16x8>::as_m128i": true,
  "core_arch::x86::<impl core_arch::simd::u32x16>::as_m512bh": true,
  "core_arch::x86::<impl core_arch::simd::u32x16>::as_m512i": true,
  "core_arch::x86::<impl core_arch::simd::u32x4>::as_m128bh": true,
  "core_arch::x86::<impl core_arch::simd::u32x4>::as_m128i": true,
  "core_arch::x86::<impl core_arch::simd::u32x8>::as_m256bh": true,
  "core_arch::x86::<impl core_arch::simd::u32x8>::as_m256i": true,
  "core_arch::x86::<impl core_arch::simd::u64x2>::as_m128i": true,
  "core_arch::x86::<impl core_arch::simd::u64x4>::as_m256i": true,
  "core_arch::x86::<impl core_arch::simd::u64x8>::as_m512i": true,
  "core_arch::x86::<impl core_arch::simd::u8x16>::as_m128i": true,
  "core_arch::x86::<impl core_arch::simd::u8x32>::as_m256i": true,
  "core_arch::x86::<impl core_arch::simd::u8x64>::as_m512i": true,
  "core_arch::x86::__m128::as_array": true,
  "core_arch::x86::__m128::as_f32x4": true,
  "core_arch::x86::__m128::as_mut_array": true,
  "core_arch::x86::__m128::splat": true,
  "core_arch::x86::__m128bh::as_array": true,
  "core_arch::x86::__m128bh::as_i16x8": true,
  "core_arch::x86::__m128bh::as_i32x4": true,
  "core_arch::x86::__m128bh::as_mut_array": true,
  "core_arch::x86::__m128bh::as_u16x8": true,
  "core_arch::x86::__m128bh::as_u32x4": true,
  "core_arch::x86::__m128bh::splat": true,
  "core_arch::x86::__m128d::as_array": true,
  "core_arch::x86::__m128d::as_f64x2": true,
  "core_arch::x86::__m128d::as_mut_array": true,
  "core_arch::x86::__m128d::splat": true,
  "core_arch::x86::__m128h::as_array": true,
  "core_arch::x86::__m128h::as_f16x8": true,
  "core_arch::x86::__m128h::as_mut_array": true,
  "core_arch::x86::__m128h::splat": true,
  "core_arch::x86::__m128i::as_array": true,
  "core_arch::x86::__m128i::as_i16x8": true,
  "core_arch::x86::__m128i::as_i32x4": true,
  "core_arch::x86::__m128i::as_i64x2": true,
  "core_arch::x86::__m128i::as_i8x16": true,
  "core_arch::x86::__m128i::as_mut_array": true,
  "core_arch::x86::__m128i::as_u16x8": true,
  "core_arch::x86::__m128i::as_u32x4": true,
  "core_arch::x86::__m128i::as_u64x2": true,
  "core_arch::x86::__m128i::as_u8x16": true,
  "core_arch::x86::__m128i::splat": true,
  "core_arch::x86::__m256::as_array": true,
  "core_arch::x86::__m256::as_f32x8": true,
  "core_arch::x86::__m256::as_mut_array": true,
  "core_arch::x86::__m256::splat": true,
  "core_arch::x86::__m256bh::as_array": true,
  "core_arch::x86::__m256bh::as_i16x16": true,
  "core_arch::x86::__m256bh::as_i32x8": true,
  "core_arch::x86::__m256bh::as_mut_array": true,
  "core_arch::x86::__m256bh::as_u16x16": true,
  "core_arch::x86::__m256bh::as_u32x8": true,
  "core_arch::x86::__m256bh::splat": true,
  "core_arch::x86::__m256d::as_array": true,
  "core_arch::x86::__m256d::as_f64x4": true,
  "core_arch::x86::__m256d::as_mut_array": true,
  "core_arch::x86::__m256d::splat": true,
  "core_arch::x86::__m256h::as_array": true,
  "core_arch::x86::__m256h::as_f16x16": true,
  "core_arch::x86::__m256h::as_mut_array": true,
  "core_arch::x86::__m256h::splat": true,
  "core_arch::x86::__m256i::as_array": true,
  "core_arch::x86::__m256i::as_i16x16": true,
  "core_arch::x86::__m256i::as_i32x8": true,
  "core_arch::x86::__m256i::as_i64x4": true,
  "core_arch::x86::__m256i::as_i8x32": true,
  "core_arch::x86::__m256i::as_mut_array": true,
  "core_arch::x86::__m256i::as_u16x16": true,
  "core_arch::x86::__m256i::as_u32x8": true,
  "core_arch::x86::__m256i::as_u64x4": true,
  "core_arch::x86::__m256i::as_u8x32": true,
  "core_arch::x86::__m256i::splat": true,
  "core_arch::x86::__m512::as_array": true,
  "core_arch::x86::__m512::as_f32x16": true,
  "core_arch::x86::__m512::as_mut_array": true,
  "core_arch::x86::__m512::splat": true,
  "core_arch::x86::__m512bh::as_array": true,
  "core_arch::x86::__m512bh::as_i16x32": true,
  "core_arch::x86::__m512bh::as_i32x16": true,
  "core_arch::x86::__m512bh::as_mut_array": true,
  "core_arch::x86::__m512bh::as_u16x32": true,
  "core_arch::x86::__m512bh::as_u32x16": true,
  "core_arch::x86::__m512bh::splat": true,
  "core_arch::x86::__m512d::as_array": true,
  "core_arch::x86::__m512d::as_f64x8": true,
  "core_arch::x86::__m512d::as_mut_array": true,
  "core_arch::x86::__m512d::splat": true,
  "core_arch::x86::__m512h::as_array": true,
  "core_arch::x86::__m512h::as_f16x32": true,
  "core_arch::x86::__m512h::as_mut_array": true,
  "core_arch::x86::__m512h::splat": true,
  "core_arch::x86::__m512i::as_array": true,
  "core_arch::x86::__m512i::as_i16x32": true,
  "core_arch::x86::__m512i::as_i32x16": true,
  "core_arch::x86::__m512i::as_i64x8": true,
  "core_arch::x86::__m512i::as_i8x64": true,
  "core_arch::x86::__m512i::as_mut_array": true,
  "core_arch::x86::__m512i::as_u16x32": true,
  "core_arch::x86::__m512i::as_u32x16": true,
  "core_arch::x86::__m512i::as_u64x8": true,
  "core_arch::x86::__m512i::as_u8x64": true,
  "core_arch::x86::__m512i::splat": true,
  "core_arch::x86::abm::_lzcnt_u32": true,
  "core_arch::x86::abm::_popcnt32": true,
  "core_arch::x86::adx::_addcarry_u32": true,
  "core_arch::x86::adx::_addcarryx_u32": true,
  "core_arch::x86::adx::_subborrow_u32": true,
  "core_arch::x86::aes::_mm_aesdec_si128": true,
  "core_arch::x86::aes::_mm_aesdeclast_si128": true,
  "core_arch::x86::aes::_mm_aesenc_si128": true,
  "core_arch::x86::aes::_mm_aesenclast_si128": true,
  "core_arch::x86::aes::_mm_aesimc_si128": true,
  "core_arch::x86::avx2::_mm256_abs_epi16": true,
  "core_arch::x86::avx2::_mm256_abs_epi32": true,
  "core_arch::x86::avx2::_mm256_abs_epi8": true,
  "core_arch::x86::avx2::_mm256_add_epi16": true,
  "core_arch::x86::avx2::_mm256_add_epi32": true,
  "core_arch::x86::avx2::_mm256_add_epi64": true,
  "core_arch::x86::avx2::_mm256_add_epi8": true,
  "core_arch::x86::avx2::_mm256_adds_epi16": true,
  "core_arch::x86::avx2::_mm256_adds_epi8": true,
  "core_arch::x86::avx2::_mm256_adds_epu16": true,
  "core_arch::x86::avx2::_mm256_adds_epu8": true,
  "core_arch::x86::avx2::_mm256_alignr_epi8::mask": true,
  "core_arch::x86::avx2::_mm256_and_si256": true,
  "core_arch::x86::avx2::_mm256_andnot_si256": true,
  "core_arch::x86::avx2::_mm256_avg_epu16": true,
  "core_arch::x86::avx2::_mm256_avg_epu8": true,
  "core_arch::x86::avx2::_mm256_blendv_epi8": true,
  "core_arch::x86::avx2::_mm256_broadcastb_epi8": true,
  "core_arch::x86::avx2::_mm256_broadcastd_epi32": true,
  "core_arch::x86::avx2::_mm256_broadcastq_epi64": true,
  "core_arch::x86::avx2::_mm256_broadcastsd_pd": true,
  "core_arch::x86::avx2::_mm256_broadcastsi128_si256": true,
  "core_arch::x86::avx2::_mm256_broadcastss_ps": true,
  "core_arch::x86::avx2::_mm256_broadcastw_epi16": true,
  "core_arch::x86::avx2::_mm256_bslli_epi128::mask": true,
  "core_arch::x86::avx2::_mm256_bsrli_epi128::mask": true,
  "core_arch::x86::avx2::_mm256_cmpeq_epi16": true,
  "core_arch::x86::avx2::_mm256_cmpeq_epi32": true,
  "core_arch::x86::avx2::_mm256_cmpeq_epi64": true,
  "core_arch::x86::avx2::_mm256_cmpeq_epi8": true,
  "core_arch::x86::avx2::_mm256_cmpgt_epi16": true,
  "core_arch::x86::avx2::_mm256_cmpgt_epi32": true,
  "core_arch::x86::avx2::_mm256_cmpgt_epi64": true,
  "core_arch::x86::avx2::_mm256_cmpgt_epi8": true,
  "core_arch::x86::avx2::_mm256_cvtepi16_epi32": true,
  "core_arch::x86::avx2::_mm256_cvtepi16_epi64": true,
  "core_arch::x86::avx2::_mm256_cvtepi32_epi64": true,
  "core_arch::x86::avx2::_mm256_cvtepi8_epi16": true,
  "core_arch::x86::avx2::_mm256_cvtepi8_epi32": true,
  "core_arch::x86::avx2::_mm256_cvtepi8_epi64": true,
  "core_arch::x86::avx2::_mm256_cvtepu16_epi32": true,
  "core_arch::x86::avx2::_mm256_cvtepu16_epi64": true,
  "core_arch::x86::avx2::_mm256_cvtepu32_epi64": true,
  "core_arch::x86::avx2::_mm256_cvtepu8_epi16": true,
  "core_arch::x86::avx2::_mm256_cvtepu8_epi32": true,
  "core_arch::x86::avx2::_mm256_cvtepu8_epi64": true,
  "core_arch::x86::avx2::_mm256_hadd_epi16": true,
  "core_arch::x86::avx2::_mm256_hadd_epi32": true,
  "core_arch::x86::avx2::_mm256_hadds_epi16": true,
  "core_arch::x86::avx2::_mm256_hsub_epi16": true,
  "core_arch::x86::avx2::_mm256_hsub_epi32": true,
  "core_arch::x86::avx2::_mm256_hsubs_epi16": true,
  "core_arch::x86::avx2::_mm256_madd_epi16": true,
  "core_arch::x86::avx2::_mm256_maddubs_epi16": true,
  "core_arch::x86::avx2::_mm256_max_epi16": true,
  "core_arch::x86::avx2::_mm256_max_epi32": true,
  "core_arch::x86::avx2::_mm256_max_epi8": true,
  "core_arch::x86::avx2::_mm256_max_epu16": true,
  "core_arch::x86::avx2::_mm256_max_epu32": true,
  "core_arch::x86::avx2::_mm256_max_epu8": true,
  "core_arch::x86::avx2::_mm256_min_epi16": true,
  "core_arch::x86::avx2::_mm256_min_epi32": true,
  "core_arch::x86::avx2::_mm256_min_epi8": true,
  "core_arch::x86::avx2::_mm256_min_epu16": true,
  "core_arch::x86::avx2::_mm256_min_epu32": true,
  "core_arch::x86::avx2::_mm256_min_epu8": true,
  "core_arch::x86::avx2::_mm256_movemask_epi8": true,
  "core_arch::x86::avx2::_mm256_mul_epi32": true,
  "core_arch::x86::avx2::_mm256_mul_epu32": true,
  "core_arch::x86::avx2::_mm256_mulhi_epi16": true,
  "core_arch::x86::avx2::_mm256_mulhi_epu16": true,
  "core_arch::x86::avx2::_mm256_mulhrs_epi16": true,
  "core_arch::x86::avx2::_mm256_mullo_epi16": true,
  "core_arch::x86::avx2::_mm256_mullo_epi32": true,
  "core_arch::x86::avx2::_mm256_or_si256": true,
  "core_arch::x86::avx2::_mm256_packs_epi16": true,
  "core_arch::x86::avx2::_mm256_packs_epi32": true,
  "core_arch::x86::avx2::_mm256_packus_epi16": true,
  "core_arch::x86::avx2::_mm256_packus_epi32": true,
  "core_arch::x86::avx2::_mm256_permutevar8x32_epi32": true,
  "core_arch::x86::avx2::_mm256_permutevar8x32_ps": true,
  "core_arch::x86::avx2::_mm256_sad_epu8": true,
  "core_arch::x86::avx2::_mm256_shuffle_epi8": true,
  "core_arch::x86::avx2::_mm256_sign_epi16": true,
  "core_arch::x86::avx2::_mm256_sign_epi32": true,
  "core_arch::x86::avx2::_mm256_sign_epi8": true,
  "core_arch::x86::avx2::_mm256_sll_epi16": true,
  "core_arch::x86::avx2::_mm256_sll_epi32": true,
  "core_arch::x86::avx2::_mm256_sll_epi64": true,
  "core_arch::x86::avx2::_mm256_sllv_epi32": true,
  "core_arch::x86::avx2::_mm256_sllv_epi64": true,
  "core_arch::x86::avx2::_mm256_sra_epi16": true,
  "core_arch::x86::avx2::_mm256_sra_epi32": true,
  "core_arch::x86::avx2::_mm256_srav_epi32": true,
  "core_arch::x86::avx2::_mm256_srl_epi16": true,
  "core_arch::x86::avx2::_mm256_srl_epi32": true,
  "core_arch::x86::avx2::_mm256_srl_epi64": true,
  "core_arch::x86::avx2::_mm256_srlv_epi32": true,
  "core_arch::x86::avx2::_mm256_srlv_epi64": true,
  "core_arch::x86::avx2::_mm256_sub_epi16": true,
  "core_arch::x86::avx2::_mm256_sub_epi32": true,
  "core_arch::x86::avx2::_mm256_sub_epi64": true,
  "core_arch::x86::avx2::_mm256_sub_epi8": true,
  "core_arch::x86::avx2::_mm256_subs_epi16": true,
  "core_arch::x86::avx2::_mm256_subs_epi8": true,
  "core_arch::x86::avx2::_mm256_subs_epu16": true,
  "core_arch::x86::avx2::_mm256_subs_epu8": true,
  "core_arch::x86::avx2::_mm256_unpackhi_epi16": true,
  "core_arch::x86::avx2::_mm256_unpackhi_epi32": true,
  "core_arch::x86::avx2::_mm256_unpackhi_epi64": true,
  "core_arch::x86::avx2::_mm256_unpackhi_epi8": true,
  "core_arch::x86::avx2::_mm256_unpacklo_epi16": true,
  "core_arch::x86::avx2::_mm256_unpacklo_epi32": true,
  "core_arch::x86::avx2::_mm256_unpacklo_epi64": true,
  "core_arch::x86::avx2::_mm256_unpacklo_epi8": true,
  "core_arch::x86::avx2::_mm256_xor_si256": true,
  "core_arch::x86::avx2::_mm_broadcastb_epi8": true,
  "core_arch::x86::avx2::_mm_broadcastd_epi32": true,
  "core_arch::x86::avx2::_mm_broadcastq_epi64": true,
  "core_arch::x86::avx2::_mm_broadcastsd_pd": true,
  "core_arch::x86::avx2::_mm_broadcastsi128_si256": true,
  "core_arch::x86::avx2::_mm_broadcastss_ps": true,
  "core_arch::x86::avx2::_mm_broadcastw_epi16": true,
  "core_arch::x86::avx2::_mm_sllv_epi32": true,
  "core_arch::x86::avx2::_mm_sllv_epi64": true,
  "core_arch::x86::avx2::_mm_srav_epi32": true,
  "core_arch::x86::avx2::_mm_srlv_epi32": true,
  "core_arch::x86::avx2::_mm_srlv_epi64": true,
  "core_arch::x86::avx512bf16::_mm256_cvtne2ps_pbh": true,
  "core_arch::x86::avx512bf16::_mm256_cvtneps_pbh": true,
  "core_arch::x86::avx512bf16::_mm256_cvtpbh_ps": true,
  "core_arch::x86::avx512bf16::_mm256_dpbf16_ps": true,
  "core_arch::x86::avx512bf16::_mm256_mask_cvtne2ps_pbh": true,
  "core_arch::x86::avx512bf16::_mm256_mask_cvtneps_pbh": true,
  "core_arch::x86::avx512bf16::_mm256_mask_cvtpbh_ps": true,
  "core_arch::x86::avx512bf16::_mm256_mask_dpbf16_ps": true,
  "core_arch::x86::avx512bf16::_mm256_maskz_cvtne2ps_pbh": true,
  "core_arch::x86::avx512bf16::_mm256_maskz_cvtneps_pbh": true,
  "core_arch::x86::avx512bf16::_mm256_maskz_cvtpbh_ps": true,
  "core_arch::x86::avx512bf16::_mm256_maskz_dpbf16_ps": true,
  "core_arch::x86::avx512bf16::_mm512_cvtne2ps_pbh": true,
  "core_arch::x86::avx512bf16::_mm512_cvtneps_pbh": true,
  "core_arch::x86::avx512bf16::_mm512_cvtpbh_ps": true,
  "core_arch::x86::avx512bf16::_mm512_dpbf16_ps": true,
  "core_arch::x86::avx512bf16::_mm512_mask_cvtne2ps_pbh": true,
  "core_arch::x86::avx512bf16::_mm512_mask_cvtneps_pbh": true,
  "core_arch::x86::avx512bf16::_mm512_mask_cvtpbh_ps": true,
  "core_arch::x86::avx512bf16::_mm512_mask_dpbf16_ps": true,
  "core_arch::x86::avx512bf16::_mm512_maskz_cvtne2ps_pbh": true,
  "core_arch::x86::avx512bf16::_mm512_maskz_cvtneps_pbh": true,
  "core_arch::x86::avx512bf16::_mm512_maskz_cvtpbh_ps": true,
  "core_arch::x86::avx512bf16::_mm512_maskz_dpbf16_ps": true,
  "core_arch::x86::avx512bf16::_mm_cvtne2ps_pbh": true,
  "core_arch::x86::avx512bf16::_mm_cvtneps_pbh": true,
  "core_arch::x86::avx512bf16::_mm_cvtness_sbh": true,
  "core_arch::x86::avx512bf16::_mm_cvtpbh_ps": true,
  "core_arch::x86::avx512bf16::_mm_cvtsbh_ss": true,
  "core_arch::x86::avx512bf16::_mm_dpbf16_ps": true,
  "core_arch::x86::avx512bf16::_mm_mask_cvtne2ps_pbh": true,
  "core_arch::x86::avx512bf16::_mm_mask_cvtneps_pbh": true,
  "core_arch::x86::avx512bf16::_mm_mask_cvtpbh_ps": true,
  "core_arch::x86::avx512bf16::_mm_mask_dpbf16_ps": true,
  "core_arch::x86::avx512bf16::_mm_maskz_cvtne2ps_pbh": true,
  "core_arch::x86::avx512bf16::_mm_maskz_cvtneps_pbh": true,
  "core_arch::x86::avx512bf16::_mm_maskz_cvtpbh_ps": true,
  "core_arch::x86::avx512bf16::_mm_maskz_dpbf16_ps": true,
  "core_arch::x86::avx512bitalg::_mm256_bitshuffle_epi64_mask": true,
  "core_arch::x86::avx512bitalg::_mm256_mask_bitshuffle_epi64_mask": true,
  "core_arch::x86::avx512bitalg::_mm256_mask_popcnt_epi16": true,
  "core_arch::x86::avx512bitalg::_mm256_mask_popcnt_epi8": true,
  "core_arch::x86::avx512bitalg::_mm256_maskz_popcnt_epi16": true,
  "core_arch::x86::avx512bitalg::_mm256_maskz_popcnt_epi8": true,
  "core_arch::x86::avx512bitalg::_mm256_popcnt_epi16": true,
  "core_arch::x86::avx512bitalg::_mm256_popcnt_epi8": true,
  "core_arch::x86::avx512bitalg::_mm512_bitshuffle_epi64_mask": true,
  "core_arch::x86::avx512bitalg::_mm512_mask_bitshuffle_epi64_mask": true,
  "core_arch::x86::avx512bitalg::_mm512_mask_popcnt_epi16": true,
  "core_arch::x86::avx512bitalg::_mm512_mask_popcnt_epi8": true,
  "core_arch::x86::avx512bitalg::_mm512_maskz_popcnt_epi16": true,
  "core_arch::x86::avx512bitalg::_mm512_maskz_popcnt_epi8": true,
  "core_arch::x86::avx512bitalg::_mm512_popcnt_epi16": true,
  "core_arch::x86::avx512bitalg::_mm512_popcnt_epi8": true,
  "core_arch::x86::avx512bitalg::_mm_bitshuffle_epi64_mask": true,
  "core_arch::x86::avx512bitalg::_mm_mask_bitshuffle_epi64_mask": true,
  "core_arch::x86::avx512bitalg::_mm_mask_popcnt_epi16": true,
  "core_arch::x86::avx512bitalg::_mm_mask_popcnt_epi8": true,
  "core_arch::x86::avx512bitalg::_mm_maskz_popcnt_epi16": true,
  "core_arch::x86::avx512bitalg::_mm_maskz_popcnt_epi8": true,
  "core_arch::x86::avx512bitalg::_mm_popcnt_epi16": true,
  "core_arch::x86::avx512bitalg::_mm_popcnt_epi8": true,
  "core_arch::x86::avx512bw::_cvtmask32_u32": true,
  "core_arch::x86::avx512bw::_cvtu32_mask32": true,
  "core_arch::x86::avx512bw::_kadd_mask32": true,
  "core_arch::x86::avx512bw::_kadd_mask64": true,
  "core_arch::x86::avx512bw::_kand_mask32": true,
  "core_arch::x86::avx512bw::_kand_mask64": true,
  "core_arch::x86::avx512bw::_kandn_mask32": true,
  "core_arch::x86::avx512bw::_kandn_mask64": true,
  "core_arch::x86::avx512bw::_knot_mask32": true,
  "core_arch::x86::avx512bw::_knot_mask64": true,
  "core_arch::x86::avx512bw::_kor_mask32": true,
  "core_arch::x86::avx512bw::_kor_mask64": true,
  "core_arch::x86::avx512bw::_kortestc_mask32_u8": true,
  "core_arch::x86::avx512bw::_kortestc_mask64_u8": true,
  "core_arch::x86::avx512bw::_kortestz_mask32_u8": true,
  "core_arch::x86::avx512bw::_kortestz_mask64_u8": true,
  "core_arch::x86::avx512bw::_ktestc_mask32_u8": true,
  "core_arch::x86::avx512bw::_ktestc_mask64_u8": true,
  "core_arch::x86::avx512bw::_ktestz_mask32_u8": true,
  "core_arch::x86::avx512bw::_ktestz_mask64_u8": true,
  "core_arch::x86::avx512bw::_kxnor_mask32": true,
  "core_arch::x86::avx512bw::_kxnor_mask64": true,
  "core_arch::x86::avx512bw::_kxor_mask32": true,
  "core_arch::x86::avx512bw::_kxor_mask64": true,
  "core_arch::x86::avx512bw::_mm256_cmpeq_epi16_mask": true,
  "core_arch::x86::avx512bw::_mm256_cmpeq_epi8_mask": true,
  "core_arch::x86::avx512bw::_mm256_cmpeq_epu16_mask": true,
  "core_arch::x86::avx512bw::_mm256_cmpeq_epu8_mask": true,
  "core_arch::x86::avx512bw::_mm256_cmpge_epi16_mask": true,
  "core_arch::x86::avx512bw::_mm256_cmpge_epi8_mask": true,
  "core_arch::x86::avx512bw::_mm256_cmpge_epu16_mask": true,
  "core_arch::x86::avx512bw::_mm256_cmpge_epu8_mask": true,
  "core_arch::x86::avx512bw::_mm256_cmpgt_epi16_mask": true,
  "core_arch::x86::avx512bw::_mm256_cmpgt_epi8_mask": true,
  "core_arch::x86::avx512bw::_mm256_cmpgt_epu16_mask": true,
  "core_arch::x86::avx512bw::_mm256_cmpgt_epu8_mask": true,
  "core_arch::x86::avx512bw::_mm256_cmple_epi16_mask": true,
  "core_arch::x86::avx512bw::_mm256_cmple_epi8_mask": true,
  "core_arch::x86::avx512bw::_mm256_cmple_epu16_mask": true,
  "core_arch::x86::avx512bw::_mm256_cmple_epu8_mask": true,
  "core_arch::x86::avx512bw::_mm256_cmplt_epi16_mask": true,
  "core_arch::x86::avx512bw::_mm256_cmplt_epi8_mask": true,
  "core_arch::x86::avx512bw::_mm256_cmplt_epu16_mask": true,
  "core_arch::x86::avx512bw::_mm256_cmplt_epu8_mask": true,
  "core_arch::x86::avx512bw::_mm256_cmpneq_epi16_mask": true,
  "core_arch::x86::avx512bw::_mm256_cmpneq_epi8_mask": true,
  "core_arch::x86::avx512bw::_mm256_cmpneq_epu16_mask": true,
  "core_arch::x86::avx512bw::_mm256_cmpneq_epu8_mask": true,
  "core_arch::x86::avx512bw::_mm256_cvtepi16_epi8": true,
  "core_arch::x86::avx512bw::_mm256_cvtsepi16_epi8": true,
  "core_arch::x86::avx512bw::_mm256_cvtusepi16_epi8": true,
  "core_arch::x86::avx512bw::_mm256_mask2_permutex2var_epi16": true,
  "core_arch::x86::avx512bw::_mm256_mask_abs_epi16": true,
  "core_arch::x86::avx512bw::_mm256_mask_abs_epi8": true,
  "core_arch::x86::avx512bw::_mm256_mask_add_epi16": true,
  "core_arch::x86::avx512bw::_mm256_mask_add_epi8": true,
  "core_arch::x86::avx512bw::_mm256_mask_adds_epi16": true,
  "core_arch::x86::avx512bw::_mm256_mask_adds_epi8": true,
  "core_arch::x86::avx512bw::_mm256_mask_adds_epu16": true,
  "core_arch::x86::avx512bw::_mm256_mask_adds_epu8": true,
  "core_arch::x86::avx512bw::_mm256_mask_avg_epu16": true,
  "core_arch::x86::avx512bw::_mm256_mask_avg_epu8": true,
  "core_arch::x86::avx512bw::_mm256_mask_blend_epi16": true,
  "core_arch::x86::avx512bw::_mm256_mask_blend_epi8": true,
  "core_arch::x86::avx512bw::_mm256_mask_broadcastb_epi8": true,
  "core_arch::x86::avx512bw::_mm256_mask_broadcastw_epi16": true,
  "core_arch::x86::avx512bw::_mm256_mask_cmpeq_epi16_mask": true,
  "core_arch::x86::avx512bw::_mm256_mask_cmpeq_epi8_mask": true,
  "core_arch::x86::avx512bw::_mm256_mask_cmpeq_epu16_mask": true,
  "core_arch::x86::avx512bw::_mm256_mask_cmpeq_epu8_mask": true,
  "core_arch::x86::avx512bw::_mm256_mask_cmpge_epi16_mask": true,
  "core_arch::x86::avx512bw::_mm256_mask_cmpge_epi8_mask": true,
  "core_arch::x86::avx512bw::_mm256_mask_cmpge_epu16_mask": true,
  "core_arch::x86::avx512bw::_mm256_mask_cmpge_epu8_mask": true,
  "core_arch::x86::avx512bw::_mm256_mask_cmpgt_epi16_mask": true,
  "core_arch::x86::avx512bw::_mm256_mask_cmpgt_epi8_mask": true,
  "core_arch::x86::avx512bw::_mm256_mask_cmpgt_epu16_mask": true,
  "core_arch::x86::avx512bw::_mm256_mask_cmpgt_epu8_mask": true,
  "core_arch::x86::avx512bw::_mm256_mask_cmple_epi16_mask": true,
  "core_arch::x86::avx512bw::_mm256_mask_cmple_epi8_mask": true,
  "core_arch::x86::avx512bw::_mm256_mask_cmple_epu16_mask": true,
  "core_arch::x86::avx512bw::_mm256_mask_cmple_epu8_mask": true,
  "core_arch::x86::avx512bw::_mm256_mask_cmplt_epi16_mask": true,
  "core_arch::x86::avx512bw::_mm256_mask_cmplt_epi8_mask": true,
  "core_arch::x86::avx512bw::_mm256_mask_cmplt_epu16_mask": true,
  "core_arch::x86::avx512bw::_mm256_mask_cmplt_epu8_mask": true,
  "core_arch::x86::avx512bw::_mm256_mask_cmpneq_epi16_mask": true,
  "core_arch::x86::avx512bw::_mm256_mask_cmpneq_epi8_mask": true,
  "core_arch::x86::avx512bw::_mm256_mask_cmpneq_epu16_mask": true,
  "core_arch::x86::avx512bw::_mm256_mask_cmpneq_epu8_mask": true,
  "core_arch::x86::avx512bw::_mm256_mask_cvtepi16_epi8": true,
  "core_arch::x86::avx512bw::_mm256_mask_cvtepi8_epi16": true,
  "core_arch::x86::avx512bw::_mm256_mask_cvtepu8_epi16": true,
  "core_arch::x86::avx512bw::_mm256_mask_cvtsepi16_epi8": true,
  "core_arch::x86::avx512bw::_mm256_mask_cvtusepi16_epi8": true,
  "core_arch::x86::avx512bw::_mm256_mask_madd_epi16": true,
  "core_arch::x86::avx512bw::_mm256_mask_maddubs_epi16": true,
  "core_arch::x86::avx512bw::_mm256_mask_max_epi16": true,
  "core_arch::x86::avx512bw::_mm256_mask_max_epi8": true,
  "core_arch::x86::avx512bw::_mm256_mask_max_epu16": true,
  "core_arch::x86::avx512bw::_mm256_mask_max_epu8": true,
  "core_arch::x86::avx512bw::_mm256_mask_min_epi16": true,
  "core_arch::x86::avx512bw::_mm256_mask_min_epi8": true,
  "core_arch::x86::avx512bw::_mm256_mask_min_epu16": true,
  "core_arch::x86::avx512bw::_mm256_mask_min_epu8": true,
  "core_arch::x86::avx512bw::_mm256_mask_mov_epi16": true,
  "core_arch::x86::avx512bw::_mm256_mask_mov_epi8": true,
  "core_arch::x86::avx512bw::_mm256_mask_mulhi_epi16": true,
  "core_arch::x86::avx512bw::_mm256_mask_mulhi_epu16": true,
  "core_arch::x86::avx512bw::_mm256_mask_mulhrs_epi16": true,
  "core_arch::x86::avx512bw::_mm256_mask_mullo_epi16": true,
  "core_arch::x86::avx512bw::_mm256_mask_packs_epi16": true,
  "core_arch::x86::avx512bw::_mm256_mask_packs_epi32": true,
  "core_arch::x86::avx512bw::_mm256_mask_packus_epi16": true,
  "core_arch::x86::avx512bw::_mm256_mask_packus_epi32": true,
  "core_arch::x86::avx512bw::_mm256_mask_permutex2var_epi16": true,
  "core_arch::x86::avx512bw::_mm256_mask_permutexvar_epi16": true,
  "core_arch::x86::avx512bw::_mm256_mask_reduce_add_epi16": true,
  "core_arch::x86::avx512bw::_mm256_mask_reduce_add_epi8": true,
  "core_arch::x86::avx512bw::_mm256_mask_reduce_and_epi16": true,
  "core_arch::x86::avx512bw::_mm256_mask_reduce_and_epi8": true,
  "core_arch::x86::avx512bw::_mm256_mask_reduce_max_epi16": true,
  "core_arch::x86::avx512bw::_mm256_mask_reduce_max_epi8": true,
  "core_arch::x86::avx512bw::_mm256_mask_reduce_max_epu16": true,
  "core_arch::x86::avx512bw::_mm256_mask_reduce_max_epu8": true,
  "core_arch::x86::avx512bw::_mm256_mask_reduce_min_epi16": true,
  "core_arch::x86::avx512bw::_mm256_mask_reduce_min_epi8": true,
  "core_arch::x86::avx512bw::_mm256_mask_reduce_min_epu16": true,
  "core_arch::x86::avx512bw::_mm256_mask_reduce_min_epu8": true,
  "core_arch::x86::avx512bw::_mm256_mask_reduce_mul_epi16": true,
  "core_arch::x86::avx512bw::_mm256_mask_reduce_mul_epi8": true,
  "core_arch::x86::avx512bw::_mm256_mask_reduce_or_epi16": true,
  "core_arch::x86::avx512bw::_mm256_mask_reduce_or_epi8": true,
  "core_arch::x86::avx512bw::_mm256_mask_set1_epi16": true,
  "core_arch::x86::avx512bw::_mm256_mask_set1_epi8": true,
  "core_arch::x86::avx512bw::_mm256_mask_shuffle_epi8": true,
  "core_arch::x86::avx512bw::_mm256_mask_sll_epi16": true,
  "core_arch::x86::avx512bw::_mm256_mask_sllv_epi16": true,
  "core_arch::x86::avx512bw::_mm256_mask_sra_epi16": true,
  "core_arch::x86::avx512bw::_mm256_mask_srav_epi16": true,
  "core_arch::x86::avx512bw::_mm256_mask_srl_epi16": true,
  "core_arch::x86::avx512bw::_mm256_mask_srlv_epi16": true,
  "core_arch::x86::avx512bw::_mm256_mask_sub_epi16": true,
  "core_arch::x86::avx512bw::_mm256_mask_sub_epi8": true,
  "core_arch::x86::avx512bw::_mm256_mask_subs_epi16": true,
  "core_arch::x86::avx512bw::_mm256_mask_subs_epi8": true,
  "core_arch::x86::avx512bw::_mm256_mask_subs_epu16": true,
  "core_arch::x86::avx512bw::_mm256_mask_subs_epu8": true,
  "core_arch::x86::avx512bw::_mm256_mask_test_epi16_mask": true,
  "core_arch::x86::avx512bw::_mm256_mask_test_epi8_mask": true,
  "core_arch::x86::avx512bw::_mm256_mask_testn_epi16_mask": true,
  "core_arch::x86::avx512bw::_mm256_mask_testn_epi8_mask": true,
  "core_arch::x86::avx512bw::_mm256_mask_unpackhi_epi16": true,
  "core_arch::x86::avx512bw::_mm256_mask_unpackhi_epi8": true,
  "core_arch::x86::avx512bw::_mm256_mask_unpacklo_epi16": true,
  "core_arch::x86::avx512bw::_mm256_mask_unpacklo_epi8": true,
  "core_arch::x86::avx512bw::_mm256_maskz_abs_epi16": true,
  "core_arch::x86::avx512bw::_mm256_maskz_abs_epi8": true,
  "core_arch::x86::avx512bw::_mm256_maskz_add_epi16": true,
  "core_arch::x86::avx512bw::_mm256_maskz_add_epi8": true,
  "core_arch::x86::avx512bw::_mm256_maskz_adds_epi16": true,
  "core_arch::x86::avx512bw::_mm256_maskz_adds_epi8": true,
  "core_arch::x86::avx512bw::_mm256_maskz_adds_epu16": true,
  "core_arch::x86::avx512bw::_mm256_maskz_adds_epu8": true,
  "core_arch::x86::avx512bw::_mm256_maskz_avg_epu16": true,
  "core_arch::x86::avx512bw::_mm256_maskz_avg_epu8": true,
  "core_arch::x86::avx512bw::_mm256_maskz_broadcastb_epi8": true,
  "core_arch::x86::avx512bw::_mm256_maskz_broadcastw_epi16": true,
  "core_arch::x86::avx512bw::_mm256_maskz_cvtepi16_epi8": true,
  "core_arch::x86::avx512bw::_mm256_maskz_cvtepi8_epi16": true,
  "core_arch::x86::avx512bw::_mm256_maskz_cvtepu8_epi16": true,
  "core_arch::x86::avx512bw::_mm256_maskz_cvtsepi16_epi8": true,
  "core_arch::x86::avx512bw::_mm256_maskz_cvtusepi16_epi8": true,
  "core_arch::x86::avx512bw::_mm256_maskz_madd_epi16": true,
  "core_arch::x86::avx512bw::_mm256_maskz_maddubs_epi16": true,
  "core_arch::x86::avx512bw::_mm256_maskz_max_epi16": true,
  "core_arch::x86::avx512bw::_mm256_maskz_max_epi8": true,
  "core_arch::x86::avx512bw::_mm256_maskz_max_epu16": true,
  "core_arch::x86::avx512bw::_mm256_maskz_max_epu8": true,
  "core_arch::x86::avx512bw::_mm256_maskz_min_epi16": true,
  "core_arch::x86::avx512bw::_mm256_maskz_min_epi8": true,
  "core_arch::x86::avx512bw::_mm256_maskz_min_epu16": true,
  "core_arch::x86::avx512bw::_mm256_maskz_min_epu8": true,
  "core_arch::x86::avx512bw::_mm256_maskz_mov_epi16": true,
  "core_arch::x86::avx512bw::_mm256_maskz_mov_epi8": true,
  "core_arch::x86::avx512bw::_mm256_maskz_mulhi_epi16": true,
  "core_arch::x86::avx512bw::_mm256_maskz_mulhi_epu16": true,
  "core_arch::x86::avx512bw::_mm256_maskz_mulhrs_epi16": true,
  "core_arch::x86::avx512bw::_mm256_maskz_mullo_epi16": true,
  "core_arch::x86::avx512bw::_mm256_maskz_packs_epi16": true,
  "core_arch::x86::avx512bw::_mm256_maskz_packs_epi32": true,
  "core_arch::x86::avx512bw::_mm256_maskz_packus_epi16": true,
  "core_arch::x86::avx512bw::_mm256_maskz_packus_epi32": true,
  "core_arch::x86::avx512bw::_mm256_maskz_permutex2var_epi16": true,
  "core_arch::x86::avx512bw::_mm256_maskz_permutexvar_epi16": true,
  "core_arch::x86::avx512bw::_mm256_maskz_set1_epi16": true,
  "core_arch::x86::avx512bw::_mm256_maskz_set1_epi8": true,
  "core_arch::x86::avx512bw::_mm256_maskz_shuffle_epi8": true,
  "core_arch::x86::avx512bw::_mm256_maskz_sll_epi16": true,
  "core_arch::x86::avx512bw::_mm256_maskz_sllv_epi16": true,
  "core_arch::x86::avx512bw::_mm256_maskz_sra_epi16": true,
  "core_arch::x86::avx512bw::_mm256_maskz_srav_epi16": true,
  "core_arch::x86::avx512bw::_mm256_maskz_srl_epi16": true,
  "core_arch::x86::avx512bw::_mm256_maskz_srlv_epi16": true,
  "core_arch::x86::avx512bw::_mm256_maskz_sub_epi16": true,
  "core_arch::x86::avx512bw::_mm256_maskz_sub_epi8": true,
  "core_arch::x86::avx512bw::_mm256_maskz_subs_epi16": true,
  "core_arch::x86::avx512bw::_mm256_maskz_subs_epi8": true,
  "core_arch::x86::avx512bw::_mm256_maskz_subs_epu16": true,
  "core_arch::x86::avx512bw::_mm256_maskz_subs_epu8": true,
  "core_arch::x86::avx512bw::_mm256_maskz_unpackhi_epi16": true,
  "core_arch::x86::avx512bw::_mm256_maskz_unpackhi_epi8": true,
  "core_arch::x86::avx512bw::_mm256_maskz_unpacklo_epi16": true,
  "core_arch::x86::avx512bw::_mm256_maskz_unpacklo_epi8": true,
  "core_arch::x86::avx512bw::_mm256_movepi16_mask": true,
  "core_arch::x86::avx512bw::_mm256_movepi8_mask": true,
  "core_arch::x86::avx512bw::_mm256_movm_epi16": true,
  "core_arch::x86::avx512bw::_mm256_movm_epi8": true,
  "core_arch::x86::avx512bw::_mm256_permutex2var_epi16": true,
  "core_arch::x86::avx512bw::_mm256_permutexvar_epi16": true,
  "core_arch::x86::avx512bw::_mm256_reduce_add_epi16": true,
  "core_arch::x86::avx512bw::_mm256_reduce_add_epi8": true,
  "core_arch::x86::avx512bw::_mm256_reduce_and_epi16": true,
  "core_arch::x86::avx512bw::_mm256_reduce_and_epi8": true,
  "core_arch::x86::avx512bw::_mm256_reduce_max_epi16": true,
  "core_arch::x86::avx512bw::_mm256_reduce_max_epi8": true,
  "core_arch::x86::avx512bw::_mm256_reduce_max_epu16": true,
  "core_arch::x86::avx512bw::_mm256_reduce_max_epu8": true,
  "core_arch::x86::avx512bw::_mm256_reduce_min_epi16": true,
  "core_arch::x86::avx512bw::_mm256_reduce_min_epi8": true,
  "core_arch::x86::avx512bw::_mm256_reduce_min_epu16": true,
  "core_arch::x86::avx512bw::_mm256_reduce_min_epu8": true,
  "core_arch::x86::avx512bw::_mm256_reduce_mul_epi16": true,
  "core_arch::x86::avx512bw::_mm256_reduce_mul_epi8": true,
  "core_arch::x86::avx512bw::_mm256_reduce_or_epi16": true,
  "core_arch::x86::avx512bw::_mm256_reduce_or_epi8": true,
  "core_arch::x86::avx512bw::_mm256_sllv_epi16": true,
  "core_arch::x86::avx512bw::_mm256_srav_epi16": true,
  "core_arch::x86::avx512bw::_mm256_srlv_epi16": true,
  "core_arch::x86::avx512bw::_mm256_test_epi16_mask": true,
  "core_arch::x86::avx512bw::_mm256_test_epi8_mask": true,
  "core_arch::x86::avx512bw::_mm256_testn_epi16_mask": true,
  "core_arch::x86::avx512bw::_mm256_testn_epi8_mask": true,
  "core_arch::x86::avx512bw::_mm512_abs_epi16": true,
  "core_arch::x86::avx512bw::_mm512_abs_epi8": true,
  "core_arch::x86::avx512bw::_mm512_add_epi16": true,
  "core_arch::x86::avx512bw::_mm512_add_epi8": true,
  "core_arch::x86::avx512bw::_mm512_adds_epi16": true,
  "core_arch::x86::avx512bw::_mm512_adds_epi8": true,
  "core_arch::x86::avx512bw::_mm512_adds_epu16": true,
  "core_arch::x86::avx512bw::_mm512_adds_epu8": true,
  "core_arch::x86::avx512bw::_mm512_alignr_epi8::mask": true,
  "core_arch::x86::avx512bw::_mm512_avg_epu16": true,
  "core_arch::x86::avx512bw::_mm512_avg_epu8": true,
  "core_arch::x86::avx512bw::_mm512_broadcastb_epi8": true,
  "core_arch::x86::avx512bw::_mm512_broadcastw_epi16": true,
  "core_arch::x86::avx512bw::_mm512_bslli_epi128::mask": true,
  "core_arch::x86::avx512bw::_mm512_bsrli_epi128::mask": true,
  "core_arch::x86::avx512bw::_mm512_cmpeq_epi16_mask": true,
  "core_arch::x86::avx512bw::_mm512_cmpeq_epi8_mask": true,
  "core_arch::x86::avx512bw::_mm512_cmpeq_epu16_mask": true,
  "core_arch::x86::avx512bw::_mm512_cmpeq_epu8_mask": true,
  "core_arch::x86::avx512bw::_mm512_cmpge_epi16_mask": true,
  "core_arch::x86::avx512bw::_mm512_cmpge_epi8_mask": true,
  "core_arch::x86::avx512bw::_mm512_cmpge_epu16_mask": true,
  "core_arch::x86::avx512bw::_mm512_cmpge_epu8_mask": true,
  "core_arch::x86::avx512bw::_mm512_cmpgt_epi16_mask": true,
  "core_arch::x86::avx512bw::_mm512_cmpgt_epi8_mask": true,
  "core_arch::x86::avx512bw::_mm512_cmpgt_epu16_mask": true,
  "core_arch::x86::avx512bw::_mm512_cmpgt_epu8_mask": true,
  "core_arch::x86::avx512bw::_mm512_cmple_epi16_mask": true,
  "core_arch::x86::avx512bw::_mm512_cmple_epi8_mask": true,
  "core_arch::x86::avx512bw::_mm512_cmple_epu16_mask": true,
  "core_arch::x86::avx512bw::_mm512_cmple_epu8_mask": true,
  "core_arch::x86::avx512bw::_mm512_cmplt_epi16_mask": true,
  "core_arch::x86::avx512bw::_mm512_cmplt_epi8_mask": true,
  "core_arch::x86::avx512bw::_mm512_cmplt_epu16_mask": true,
  "core_arch::x86::avx512bw::_mm512_cmplt_epu8_mask": true,
  "core_arch::x86::avx512bw::_mm512_cmpneq_epi16_mask": true,
  "core_arch::x86::avx512bw::_mm512_cmpneq_epi8_mask": true,
  "core_arch::x86::avx512bw::_mm512_cmpneq_epu16_mask": true,
  "core_arch::x86::avx512bw::_mm512_cmpneq_epu8_mask": true,
  "core_arch::x86::avx512bw::_mm512_cvtepi16_epi8": true,
  "core_arch::x86::avx512bw::_mm512_cvtepi8_epi16": true,
  "core_arch::x86::avx512bw::_mm512_cvtepu8_epi16": true,
  "core_arch::x86::avx512bw::_mm512_cvtsepi16_epi8": true,
  "core_arch::x86::avx512bw::_mm512_cvtusepi16_epi8": true,
  "core_arch::x86::avx512bw::_mm512_kunpackd": true,
  "core_arch::x86::avx512bw::_mm512_kunpackw": true,
  "core_arch::x86::avx512bw::_mm512_madd_epi16": true,
  "core_arch::x86::avx512bw::_mm512_maddubs_epi16": true,
  "core_arch::x86::avx512bw::_mm512_mask2_permutex2var_epi16": true,
  "core_arch::x86::avx512bw::_mm512_mask_abs_epi16": true,
  "core_arch::x86::avx512bw::_mm512_mask_abs_epi8": true,
  "core_arch::x86::avx512bw::_mm512_mask_add_epi16": true,
  "core_arch::x86::avx512bw::_mm512_mask_add_epi8": true,
  "core_arch::x86::avx512bw::_mm512_mask_adds_epi16": true,
  "core_arch::x86::avx512bw::_mm512_mask_adds_epi8": true,
  "core_arch::x86::avx512bw::_mm512_mask_adds_epu16": true,
  "core_arch::x86::avx512bw::_mm512_mask_adds_epu8": true,
  "core_arch::x86::avx512bw::_mm512_mask_avg_epu16": true,
  "core_arch::x86::avx512bw::_mm512_mask_avg_epu8": true,
  "core_arch::x86::avx512bw::_mm512_mask_blend_epi16": true,
  "core_arch::x86::avx512bw::_mm512_mask_blend_epi8": true,
  "core_arch::x86::avx512bw::_mm512_mask_broadcastb_epi8": true,
  "core_arch::x86::avx512bw::_mm512_mask_broadcastw_epi16": true,
  "core_arch::x86::avx512bw::_mm512_mask_cmpeq_epi16_mask": true,
  "core_arch::x86::avx512bw::_mm512_mask_cmpeq_epi8_mask": true,
  "core_arch::x86::avx512bw::_mm512_mask_cmpeq_epu16_mask": true,
  "core_arch::x86::avx512bw::_mm512_mask_cmpeq_epu8_mask": true,
  "core_arch::x86::avx512bw::_mm512_mask_cmpge_epi16_mask": true,
  "core_arch::x86::avx512bw::_mm512_mask_cmpge_epi8_mask": true,
  "core_arch::x86::avx512bw::_mm512_mask_cmpge_epu16_mask": true,
  "core_arch::x86::avx512bw::_mm512_mask_cmpge_epu8_mask": true,
  "core_arch::x86::avx512bw::_mm512_mask_cmpgt_epi16_mask": true,
  "core_arch::x86::avx512bw::_mm512_mask_cmpgt_epi8_mask": true,
  "core_arch::x86::avx512bw::_mm512_mask_cmpgt_epu16_mask": true,
  "core_arch::x86::avx512bw::_mm512_mask_cmpgt_epu8_mask": true,
  "core_arch::x86::avx512bw::_mm512_mask_cmple_epi16_mask": true,
  "core_arch::x86::avx512bw::_mm512_mask_cmple_epi8_mask": true,
  "core_arch::x86::avx512bw::_mm512_mask_cmple_epu16_mask": true,
  "core_arch::x86::avx512bw::_mm512_mask_cmple_epu8_mask": true,
  "core_arch::x86::avx512bw::_mm512_mask_cmplt_epi16_mask": true,
  "core_arch::x86::avx512bw::_mm512_mask_cmplt_epi8_mask": true,
  "core_arch::x86::avx512bw::_mm512_mask_cmplt_epu16_mask": true,
  "core_arch::x86::avx512bw::_mm512_mask_cmplt_epu8_mask": true,
  "core_arch::x86::avx512bw::_mm512_mask_cmpneq_epi16_mask": true,
  "core_arch::x86::avx512bw::_mm512_mask_cmpneq_epi8_mask": true,
  "core_arch::x86::avx512bw::_mm512_mask_cmpneq_epu16_mask": true,
  "core_arch::x86::avx512bw::_mm512_mask_cmpneq_epu8_mask": true,
  "core_arch::x86::avx512bw::_mm512_mask_cvtepi16_epi8": true,
  "core_arch::x86::avx512bw::_mm512_mask_cvtepi8_epi16": true,
  "core_arch::x86::avx512bw::_mm512_mask_cvtepu8_epi16": true,
  "core_arch::x86::avx512bw::_mm512_mask_cvtsepi16_epi8": true,
  "core_arch::x86::avx512bw::_mm512_mask_cvtusepi16_epi8": true,
  "core_arch::x86::avx512bw::_mm512_mask_madd_epi16": true,
  "core_arch::x86::avx512bw::_mm512_mask_maddubs_epi16": true,
  "core_arch::x86::avx512bw::_mm512_mask_max_epi16": true,
  "core_arch::x86::avx512bw::_mm512_mask_max_epi8": true,
  "core_arch::x86::avx512bw::_mm512_mask_max_epu16": true,
  "core_arch::x86::avx512bw::_mm512_mask_max_epu8": true,
  "core_arch::x86::avx512bw::_mm512_mask_min_epi16": true,
  "core_arch::x86::avx512bw::_mm512_mask_min_epi8": true,
  "core_arch::x86::avx512bw::_mm512_mask_min_epu16": true,
  "core_arch::x86::avx512bw::_mm512_mask_min_epu8": true,
  "core_arch::x86::avx512bw::_mm512_mask_mov_epi16": true,
  "core_arch::x86::avx512bw::_mm512_mask_mov_epi8": true,
  "core_arch::x86::avx512bw::_mm512_mask_mulhi_epi16": true,
  "core_arch::x86::avx512bw::_mm512_mask_mulhi_epu16": true,
  "core_arch::x86::avx512bw::_mm512_mask_mulhrs_epi16": true,
  "core_arch::x86::avx512bw::_mm512_mask_mullo_epi16": true,
  "core_arch::x86::avx512bw::_mm512_mask_packs_epi16": true,
  "core_arch::x86::avx512bw::_mm512_mask_packs_epi32": true,
  "core_arch::x86::avx512bw::_mm512_mask_packus_epi16": true,
  "core_arch::x86::avx512bw::_mm512_mask_packus_epi32": true,
  "core_arch::x86::avx512bw::_mm512_mask_permutex2var_epi16": true,
  "core_arch::x86::avx512bw::_mm512_mask_permutexvar_epi16": true,
  "core_arch::x86::avx512bw::_mm512_mask_set1_epi16": true,
  "core_arch::x86::avx512bw::_mm512_mask_set1_epi8": true,
  "core_arch::x86::avx512bw::_mm512_mask_shuffle_epi8": true,
  "core_arch::x86::avx512bw::_mm512_mask_sll_epi16": true,
  "core_arch::x86::avx512bw::_mm512_mask_sllv_epi16": true,
  "core_arch::x86::avx512bw::_mm512_mask_sra_epi16": true,
  "core_arch::x86::avx512bw::_mm512_mask_srav_epi16": true,
  "core_arch::x86::avx512bw::_mm512_mask_srl_epi16": true,
  "core_arch::x86::avx512bw::_mm512_mask_srlv_epi16": true,
  "core_arch::x86::avx512bw::_mm512_mask_sub_epi16": true,
  "core_arch::x86::avx512bw::_mm512_mask_sub_epi8": true,
  "core_arch::x86::avx512bw::_mm512_mask_subs_epi16": true,
  "core_arch::x86::avx512bw::_mm512_mask_subs_epi8": true,
  "core_arch::x86::avx512bw::_mm512_mask_subs_epu16": true,
  "core_arch::x86::avx512bw::_mm512_mask_subs_epu8": true,
  "core_arch::x86::avx512bw::_mm512_mask_test_epi16_mask": true,
  "core_arch::x86::avx512bw::_mm512_mask_test_epi8_mask": true,
  "core_arch::x86::avx512bw::_mm512_mask_testn_epi16_mask": true,
  "core_arch::x86::avx512bw::_mm512_mask_testn_epi8_mask": true,
  "core_arch::x86::avx512bw::_mm512_mask_unpackhi_epi16": true,
  "core_arch::x86::avx512bw::_mm512_mask_unpackhi_epi8": true,
  "core_arch::x86::avx512bw::_mm512_mask_unpacklo_epi16": true,
  "core_arch::x86::avx512bw::_mm512_mask_unpacklo_epi8": true,
  "core_arch::x86::avx512bw::_mm512_maskz_abs_epi16": true,
  "core_arch::x86::avx512bw::_mm512_maskz_abs_epi8": true,
  "core_arch::x86::avx512bw::_mm512_maskz_add_epi16": true,
  "core_arch::x86::avx512bw::_mm512_maskz_add_epi8": true,
  "core_arch::x86::avx512bw::_mm512_maskz_adds_epi16": true,
  "core_arch::x86::avx512bw::_mm512_maskz_adds_epi8": true,
  "core_arch::x86::avx512bw::_mm512_maskz_adds_epu16": true,
  "core_arch::x86::avx512bw::_mm512_maskz_adds_epu8": true,
  "core_arch::x86::avx512bw::_mm512_maskz_avg_epu16": true,
  "core_arch::x86::avx512bw::_mm512_maskz_avg_epu8": true,
  "core_arch::x86::avx512bw::_mm512_maskz_broadcastb_epi8": true,
  "core_arch::x86::avx512bw::_mm512_maskz_broadcastw_epi16": true,
  "core_arch::x86::avx512bw::_mm512_maskz_cvtepi16_epi8": true,
  "core_arch::x86::avx512bw::_mm512_maskz_cvtepi8_epi16": true,
  "core_arch::x86::avx512bw::_mm512_maskz_cvtepu8_epi16": true,
  "core_arch::x86::avx512bw::_mm512_maskz_cvtsepi16_epi8": true,
  "core_arch::x86::avx512bw::_mm512_maskz_cvtusepi16_epi8": true,
  "core_arch::x86::avx512bw::_mm512_maskz_madd_epi16": true,
  "core_arch::x86::avx512bw::_mm512_maskz_maddubs_epi16": true,
  "core_arch::x86::avx512bw::_mm512_maskz_max_epi16": true,
  "core_arch::x86::avx512bw::_mm512_maskz_max_epi8": true,
  "core_arch::x86::avx512bw::_mm512_maskz_max_epu16": true,
  "core_arch::x86::avx512bw::_mm512_maskz_max_epu8": true,
  "core_arch::x86::avx512bw::_mm512_maskz_min_epi16": true,
  "core_arch::x86::avx512bw::_mm512_maskz_min_epi8": true,
  "core_arch::x86::avx512bw::_mm512_maskz_min_epu16": true,
  "core_arch::x86::avx512bw::_mm512_maskz_min_epu8": true,
  "core_arch::x86::avx512bw::_mm512_maskz_mov_epi16": true,
  "core_arch::x86::avx512bw::_mm512_maskz_mov_epi8": true,
  "core_arch::x86::avx512bw::_mm512_maskz_mulhi_epi16": true,
  "core_arch::x86::avx512bw::_mm512_maskz_mulhi_epu16": true,
  "core_arch::x86::avx512bw::_mm512_maskz_mulhrs_epi16": true,
  "core_arch::x86::avx512bw::_mm512_maskz_mullo_epi16": true,
  "core_arch::x86::avx512bw::_mm512_maskz_packs_epi16": true,
  "core_arch::x86::avx512bw::_mm512_maskz_packs_epi32": true,
  "core_arch::x86::avx512bw::_mm512_maskz_packus_epi16": true,
  "core_arch::x86::avx512bw::_mm512_maskz_packus_epi32": true,
  "core_arch::x86::avx512bw::_mm512_maskz_permutex2var_epi16": true,
  "core_arch::x86::avx512bw::_mm512_maskz_permutexvar_epi16": true,
  "core_arch::x86::avx512bw::_mm512_maskz_set1_epi16": true,
  "core_arch::x86::avx512bw::_mm512_maskz_set1_epi8": true,
  "core_arch::x86::avx512bw::_mm512_maskz_shuffle_epi8": true,
  "core_arch::x86::avx512bw::_mm512_maskz_sll_epi16": true,
  "core_arch::x86::avx512bw::_mm512_maskz_sllv_epi16": true,
  "core_arch::x86::avx512bw::_mm512_maskz_sra_epi16": true,
  "core_arch::x86::avx512bw::_mm512_maskz_srav_epi16": true,
  "core_arch::x86::avx512bw::_mm512_maskz_srl_epi16": true,
  "core_arch::x86::avx512bw::_mm512_maskz_srlv_epi16": true,
  "core_arch::x86::avx512bw::_mm512_maskz_sub_epi16": true,
  "core_arch::x86::avx512bw::_mm512_maskz_sub_epi8": true,
  "core_arch::x86::avx512bw::_mm512_maskz_subs_epi16": true,
  "core_arch::x86::avx512bw::_mm512_maskz_subs_epi8": true,
  "core_arch::x86::avx512bw::_mm512_maskz_subs_epu16": true,
  "core_arch::x86::avx512bw::_mm512_maskz_subs_epu8": true,
  "core_arch::x86::avx512bw::_mm512_maskz_unpackhi_epi16": true,
  "core_arch::x86::avx512bw::_mm512_maskz_unpackhi_epi8": true,
  "core_arch::x86::avx512bw::_mm512_maskz_unpacklo_epi16": true,
  "core_arch::x86::avx512bw::_mm512_maskz_unpacklo_epi8": true,
  "core_arch::x86::avx512bw::_mm512_max_epi16": true,
  "core_arch::x86::avx512bw::_mm512_max_epi8": true,
  "core_arch::x86::avx512bw::_mm512_max_epu16": true,
  "core_arch::x86::avx512bw::_mm512_max_epu8": true,
  "core_arch::x86::avx512bw::_mm512_min_epi16": true,
  "core_arch::x86::avx512bw::_mm512_min_epi8": true,
  "core_arch::x86::avx512bw::_mm512_min_epu16": true,
  "core_arch::x86::avx512bw::_mm512_min_epu8": true,
  "core_arch::x86::avx512bw::_mm512_movepi16_mask": true,
  "core_arch::x86::avx512bw::_mm512_movepi8_mask": true,
  "core_arch::x86::avx512bw::_mm512_movm_epi16": true,
  "core_arch::x86::avx512bw::_mm512_movm_epi8": true,
  "core_arch::x86::avx512bw::_mm512_mulhi_epi16": true,
  "core_arch::x86::avx512bw::_mm512_mulhi_epu16": true,
  "core_arch::x86::avx512bw::_mm512_mulhrs_epi16": true,
  "core_arch::x86::avx512bw::_mm512_mullo_epi16": true,
  "core_arch::x86::avx512bw::_mm512_packs_epi16": true,
  "core_arch::x86::avx512bw::_mm512_packs_epi32": true,
  "core_arch::x86::avx512bw::_mm512_packus_epi16": true,
  "core_arch::x86::avx512bw::_mm512_packus_epi32": true,
  "core_arch::x86::avx512bw::_mm512_permutex2var_epi16": true,
  "core_arch::x86::avx512bw::_mm512_permutexvar_epi16": true,
  "core_arch::x86::avx512bw::_mm512_sad_epu8": true,
  "core_arch::x86::avx512bw::_mm512_shuffle_epi8": true,
  "core_arch::x86::avx512bw::_mm512_sll_epi16": true,
  "core_arch::x86::avx512bw::_mm512_sllv_epi16": true,
  "core_arch::x86::avx512bw::_mm512_sra_epi16": true,
  "core_arch::x86::avx512bw::_mm512_srav_epi16": true,
  "core_arch::x86::avx512bw::_mm512_srl_epi16": true,
  "core_arch::x86::avx512bw::_mm512_srlv_epi16": true,
  "core_arch::x86::avx512bw::_mm512_sub_epi16": true,
  "core_arch::x86::avx512bw::_mm512_sub_epi8": true,
  "core_arch::x86::avx512bw::_mm512_subs_epi16": true,
  "core_arch::x86::avx512bw::_mm512_subs_epi8": true,
  "core_arch::x86::avx512bw::_mm512_subs_epu16": true,
  "core_arch::x86::avx512bw::_mm512_subs_epu8": true,
  "core_arch::x86::avx512bw::_mm512_test_epi16_mask": true,
  "core_arch::x86::avx512bw::_mm512_test_epi8_mask": true,
  "core_arch::x86::avx512bw::_mm512_testn_epi16_mask": true,
  "core_arch::x86::avx512bw::_mm512_testn_epi8_mask": true,
  "core_arch::x86::avx512bw::_mm512_unpackhi_epi16": true,
  "core_arch::x86::avx512bw::_mm512_unpackhi_epi8": true,
  "core_arch::x86::avx512bw::_mm512_unpacklo_epi16": true,
  "core_arch::x86::avx512bw::_mm512_unpacklo_epi8": true,
  "core_arch::x86::avx512bw::_mm_cmpeq_epi16_mask": true,
  "core_arch::x86::avx512bw::_mm_cmpeq_epi8_mask": true,
  "core_arch::x86::avx512bw::_mm_cmpeq_epu16_mask": true,
  "core_arch::x86::avx512bw::_mm_cmpeq_epu8_mask": true,
  "core_arch::x86::avx512bw::_mm_cmpge_epi16_mask": true,
  "core_arch::x86::avx512bw::_mm_cmpge_epi8_mask": true,
  "core_arch::x86::avx512bw::_mm_cmpge_epu16_mask": true,
  "core_arch::x86::avx512bw::_mm_cmpge_epu8_mask": true,
  "core_arch::x86::avx512bw::_mm_cmpgt_epi16_mask": true,
  "core_arch::x86::avx512bw::_mm_cmpgt_epi8_mask": true,
  "core_arch::x86::avx512bw::_mm_cmpgt_epu16_mask": true,
  "core_arch::x86::avx512bw::_mm_cmpgt_epu8_mask": true,
  "core_arch::x86::avx512bw::_mm_cmple_epi16_mask": true,
  "core_arch::x86::avx512bw::_mm_cmple_epi8_mask": true,
  "core_arch::x86::avx512bw::_mm_cmple_epu16_mask": true,
  "core_arch::x86::avx512bw::_mm_cmple_epu8_mask": true,
  "core_arch::x86::avx512bw::_mm_cmplt_epi16_mask": true,
  "core_arch::x86::avx512bw::_mm_cmplt_epi8_mask": true,
  "core_arch::x86::avx512bw::_mm_cmplt_epu16_mask": true,
  "core_arch::x86::avx512bw::_mm_cmplt_epu8_mask": true,
  "core_arch::x86::avx512bw::_mm_cmpneq_epi16_mask": true,
  "core_arch::x86::avx512bw::_mm_cmpneq_epi8_mask": true,
  "core_arch::x86::avx512bw::_mm_cmpneq_epu16_mask": true,
  "core_arch::x86::avx512bw::_mm_cmpneq_epu8_mask": true,
  "core_arch::x86::avx512bw::_mm_cvtepi16_epi8": true,
  "core_arch::x86::avx512bw::_mm_cvtsepi16_epi8": true,
  "core_arch::x86::avx512bw::_mm_cvtusepi16_epi8": true,
  "core_arch::x86::avx512bw::_mm_mask2_permutex2var_epi16": true,
  "core_arch::x86::avx512bw::_mm_mask_abs_epi16": true,
  "core_arch::x86::avx512bw::_mm_mask_abs_epi8": true,
  "core_arch::x86::avx512bw::_mm_mask_add_epi16": true,
  "core_arch::x86::avx512bw::_mm_mask_add_epi8": true,
  "core_arch::x86::avx512bw::_mm_mask_adds_epi16": true,
  "core_arch::x86::avx512bw::_mm_mask_adds_epi8": true,
  "core_arch::x86::avx512bw::_mm_mask_adds_epu16": true,
  "core_arch::x86::avx512bw::_mm_mask_adds_epu8": true,
  "core_arch::x86::avx512bw::_mm_mask_avg_epu16": true,
  "core_arch::x86::avx512bw::_mm_mask_avg_epu8": true,
  "core_arch::x86::avx512bw::_mm_mask_blend_epi16": true,
  "core_arch::x86::avx512bw::_mm_mask_blend_epi8": true,
  "core_arch::x86::avx512bw::_mm_mask_broadcastb_epi8": true,
  "core_arch::x86::avx512bw::_mm_mask_broadcastw_epi16": true,
  "core_arch::x86::avx512bw::_mm_mask_cmpeq_epi16_mask": true,
  "core_arch::x86::avx512bw::_mm_mask_cmpeq_epi8_mask": true,
  "core_arch::x86::avx512bw::_mm_mask_cmpeq_epu16_mask": true,
  "core_arch::x86::avx512bw::_mm_mask_cmpeq_epu8_mask": true,
  "core_arch::x86::avx512bw::_mm_mask_cmpge_epi16_mask": true,
  "core_arch::x86::avx512bw::_mm_mask_cmpge_epi8_mask": true,
  "core_arch::x86::avx512bw::_mm_mask_cmpge_epu16_mask": true,
  "core_arch::x86::avx512bw::_mm_mask_cmpge_epu8_mask": true,
  "core_arch::x86::avx512bw::_mm_mask_cmpgt_epi16_mask": true,
  "core_arch::x86::avx512bw::_mm_mask_cmpgt_epi8_mask": true,
  "core_arch::x86::avx512bw::_mm_mask_cmpgt_epu16_mask": true,
  "core_arch::x86::avx512bw::_mm_mask_cmpgt_epu8_mask": true,
  "core_arch::x86::avx512bw::_mm_mask_cmple_epi16_mask": true,
  "core_arch::x86::avx512bw::_mm_mask_cmple_epi8_mask": true,
  "core_arch::x86::avx512bw::_mm_mask_cmple_epu16_mask": true,
  "core_arch::x86::avx512bw::_mm_mask_cmple_epu8_mask": true,
  "core_arch::x86::avx512bw::_mm_mask_cmplt_epi16_mask": true,
  "core_arch::x86::avx512bw::_mm_mask_cmplt_epi8_mask": true,
  "core_arch::x86::avx512bw::_mm_mask_cmplt_epu16_mask": true,
  "core_arch::x86::avx512bw::_mm_mask_cmplt_epu8_mask": true,
  "core_arch::x86::avx512bw::_mm_mask_cmpneq_epi16_mask": true,
  "core_arch::x86::avx512bw::_mm_mask_cmpneq_epi8_mask": true,
  "core_arch::x86::avx512bw::_mm_mask_cmpneq_epu16_mask": true,
  "core_arch::x86::avx512bw::_mm_mask_cmpneq_epu8_mask": true,
  "core_arch::x86::avx512bw::_mm_mask_cvtepi16_epi8": true,
  "core_arch::x86::avx512bw::_mm_mask_cvtepi8_epi16": true,
  "core_arch::x86::avx512bw::_mm_mask_cvtepu8_epi16": true,
  "core_arch::x86::avx512bw::_mm_mask_cvtsepi16_epi8": true,
  "core_arch::x86::avx512bw::_mm_mask_cvtusepi16_epi8": true,
  "core_arch::x86::avx512bw::_mm_mask_madd_epi16": true,
  "core_arch::x86::avx512bw::_mm_mask_maddubs_epi16": true,
  "core_arch::x86::avx512bw::_mm_mask_max_epi16": true,
  "core_arch::x86::avx512bw::_mm_mask_max_epi8": true,
  "core_arch::x86::avx512bw::_mm_mask_max_epu16": true,
  "core_arch::x86::avx512bw::_mm_mask_max_epu8": true,
  "core_arch::x86::avx512bw::_mm_mask_min_epi16": true,
  "core_arch::x86::avx512bw::_mm_mask_min_epi8": true,
  "core_arch::x86::avx512bw::_mm_mask_min_epu16": true,
  "core_arch::x86::avx512bw::_mm_mask_min_epu8": true,
  "core_arch::x86::avx512bw::_mm_mask_mov_epi16": true,
  "core_arch::x86::avx512bw::_mm_mask_mov_epi8": true,
  "core_arch::x86::avx512bw::_mm_mask_mulhi_epi16": true,
  "core_arch::x86::avx512bw::_mm_mask_mulhi_epu16": true,
  "core_arch::x86::avx512bw::_mm_mask_mulhrs_epi16": true,
  "core_arch::x86::avx512bw::_mm_mask_mullo_epi16": true,
  "core_arch::x86::avx512bw::_mm_mask_packs_epi16": true,
  "core_arch::x86::avx512bw::_mm_mask_packs_epi32": true,
  "core_arch::x86::avx512bw::_mm_mask_packus_epi16": true,
  "core_arch::x86::avx512bw::_mm_mask_packus_epi32": true,
  "core_arch::x86::avx512bw::_mm_mask_permutex2var_epi16": true,
  "core_arch::x86::avx512bw::_mm_mask_permutexvar_epi16": true,
  "core_arch::x86::avx512bw::_mm_mask_reduce_add_epi16": true,
  "core_arch::x86::avx512bw::_mm_mask_reduce_add_epi8": true,
  "core_arch::x86::avx512bw::_mm_mask_reduce_and_epi16": true,
  "core_arch::x86::avx512bw::_mm_mask_reduce_and_epi8": true,
  "core_arch::x86::avx512bw::_mm_mask_reduce_max_epi16": true,
  "core_arch::x86::avx512bw::_mm_mask_reduce_max_epi8": true,
  "core_arch::x86::avx512bw::_mm_mask_reduce_max_epu16": true,
  "core_arch::x86::avx512bw::_mm_mask_reduce_max_epu8": true,
  "core_arch::x86::avx512bw::_mm_mask_reduce_min_epi16": true,
  "core_arch::x86::avx512bw::_mm_mask_reduce_min_epi8": true,
  "core_arch::x86::avx512bw::_mm_mask_reduce_min_epu16": true,
  "core_arch::x86::avx512bw::_mm_mask_reduce_min_epu8": true,
  "core_arch::x86::avx512bw::_mm_mask_reduce_mul_epi16": true,
  "core_arch::x86::avx512bw::_mm_mask_reduce_mul_epi8": true,
  "core_arch::x86::avx512bw::_mm_mask_reduce_or_epi16": true,
  "core_arch::x86::avx512bw::_mm_mask_reduce_or_epi8": true,
  "core_arch::x86::avx512bw::_mm_mask_set1_epi16": true,
  "core_arch::x86::avx512bw::_mm_mask_set1_epi8": true,
  "core_arch::x86::avx512bw::_mm_mask_shuffle_epi8": true,
  "core_arch::x86::avx512bw::_mm_mask_sll_epi16": true,
  "core_arch::x86::avx512bw::_mm_mask_sllv_epi16": true,
  "core_arch::x86::avx512bw::_mm_mask_sra_epi16": true,
  "core_arch::x86::avx512bw::_mm_mask_srav_epi16": true,
  "core_arch::x86::avx512bw::_mm_mask_srl_epi16": true,
  "core_arch::x86::avx512bw::_mm_mask_srlv_epi16": true,
  "core_arch::x86::avx512bw::_mm_mask_sub_epi16": true,
  "core_arch::x86::avx512bw::_mm_mask_sub_epi8": true,
  "core_arch::x86::avx512bw::_mm_mask_subs_epi16": true,
  "core_arch::x86::avx512bw::_mm_mask_subs_epi8": true,
  "core_arch::x86::avx512bw::_mm_mask_subs_epu16": true,
  "core_arch::x86::avx512bw::_mm_mask_subs_epu8": true,
  "core_arch::x86::avx512bw::_mm_mask_test_epi16_mask": true,
  "core_arch::x86::avx512bw::_mm_mask_test_epi8_mask": true,
  "core_arch::x86::avx512bw::_mm_mask_testn_epi16_mask": true,
  "core_arch::x86::avx512bw::_mm_mask_testn_epi8_mask": true,
  "core_arch::x86::avx512bw::_mm_mask_unpackhi_epi16": true,
  "core_arch::x86::avx512bw::_mm_mask_unpackhi_epi8": true,
  "core_arch::x86::avx512bw::_mm_mask_unpacklo_epi16": true,
  "core_arch::x86::avx512bw::_mm_mask_unpacklo_epi8": true,
  "core_arch::x86::avx512bw::_mm_maskz_abs_epi16": true,
  "core_arch::x86::avx512bw::_mm_maskz_abs_epi8": true,
  "core_arch::x86::avx512bw::_mm_maskz_add_epi16": true,
  "core_arch::x86::avx512bw::_mm_maskz_add_epi8": true,
  "core_arch::x86::avx512bw::_mm_maskz_adds_epi16": true,
  "core_arch::x86::avx512bw::_mm_maskz_adds_epi8": true,
  "core_arch::x86::avx512bw::_mm_maskz_adds_epu16": true,
  "core_arch::x86::avx512bw::_mm_maskz_adds_epu8": true,
  "core_arch::x86::avx512bw::_mm_maskz_avg_epu16": true,
  "core_arch::x86::avx512bw::_mm_maskz_avg_epu8": true,
  "core_arch::x86::avx512bw::_mm_maskz_broadcastb_epi8": true,
  "core_arch::x86::avx512bw::_mm_maskz_broadcastw_epi16": true,
  "core_arch::x86::avx512bw::_mm_maskz_cvtepi16_epi8": true,
  "core_arch::x86::avx512bw::_mm_maskz_cvtepi8_epi16": true,
  "core_arch::x86::avx512bw::_mm_maskz_cvtepu8_epi16": true,
  "core_arch::x86::avx512bw::_mm_maskz_cvtsepi16_epi8": true,
  "core_arch::x86::avx512bw::_mm_maskz_cvtusepi16_epi8": true,
  "core_arch::x86::avx512bw::_mm_maskz_madd_epi16": true,
  "core_arch::x86::avx512bw::_mm_maskz_maddubs_epi16": true,
  "core_arch::x86::avx512bw::_mm_maskz_max_epi16": true,
  "core_arch::x86::avx512bw::_mm_maskz_max_epi8": true,
  "core_arch::x86::avx512bw::_mm_maskz_max_epu16": true,
  "core_arch::x86::avx512bw::_mm_maskz_max_epu8": true,
  "core_arch::x86::avx512bw::_mm_maskz_min_epi16": true,
  "core_arch::x86::avx512bw::_mm_maskz_min_epi8": true,
  "core_arch::x86::avx512bw::_mm_maskz_min_epu16": true,
  "core_arch::x86::avx512bw::_mm_maskz_min_epu8": true,
  "core_arch::x86::avx512bw::_mm_maskz_mov_epi16": true,
  "core_arch::x86::avx512bw::_mm_maskz_mov_epi8": true,
  "core_arch::x86::avx512bw::_mm_maskz_mulhi_epi16": true,
  "core_arch::x86::avx512bw::_mm_maskz_mulhi_epu16": true,
  "core_arch::x86::avx512bw::_mm_maskz_mulhrs_epi16": true,
  "core_arch::x86::avx512bw::_mm_maskz_mullo_epi16": true,
  "core_arch::x86::avx512bw::_mm_maskz_packs_epi16": true,
  "core_arch::x86::avx512bw::_mm_maskz_packs_epi32": true,
  "core_arch::x86::avx512bw::_mm_maskz_packus_epi16": true,
  "core_arch::x86::avx512bw::_mm_maskz_packus_epi32": true,
  "core_arch::x86::avx512bw::_mm_maskz_permutex2var_epi16": true,
  "core_arch::x86::avx512bw::_mm_maskz_permutexvar_epi16": true,
  "core_arch::x86::avx512bw::_mm_maskz_set1_epi16": true,
  "core_arch::x86::avx512bw::_mm_maskz_set1_epi8": true,
  "core_arch::x86::avx512bw::_mm_maskz_shuffle_epi8": true,
  "core_arch::x86::avx512bw::_mm_maskz_sll_epi16": true,
  "core_arch::x86::avx512bw::_mm_maskz_sllv_epi16": true,
  "core_arch::x86::avx512bw::_mm_maskz_sra_epi16": true,
  "core_arch::x86::avx512bw::_mm_maskz_srav_epi16": true,
  "core_arch::x86::avx512bw::_mm_maskz_srl_epi16": true,
  "core_arch::x86::avx512bw::_mm_maskz_srlv_epi16": true,
  "core_arch::x86::avx512bw::_mm_maskz_sub_epi16": true,
  "core_arch::x86::avx512bw::_mm_maskz_sub_epi8": true,
  "core_arch::x86::avx512bw::_mm_maskz_subs_epi16": true,
  "core_arch::x86::avx512bw::_mm_maskz_subs_epi8": true,
  "core_arch::x86::avx512bw::_mm_maskz_subs_epu16": true,
  "core_arch::x86::avx512bw::_mm_maskz_subs_epu8": true,
  "core_arch::x86::avx512bw::_mm_maskz_unpackhi_epi16": true,
  "core_arch::x86::avx512bw::_mm_maskz_unpackhi_epi8": true,
  "core_arch::x86::avx512bw::_mm_maskz_unpacklo_epi16": true,
  "core_arch::x86::avx512bw::_mm_maskz_unpacklo_epi8": true,
  "core_arch::x86::avx512bw::_mm_movepi16_mask": true,
  "core_arch::x86::avx512bw::_mm_movepi8_mask": true,
  "core_arch::x86::avx512bw::_mm_movm_epi16": true,
  "core_arch::x86::avx512bw::_mm_movm_epi8": true,
  "core_arch::x86::avx512bw::_mm_permutex2var_epi16": true,
  "core_arch::x86::avx512bw::_mm_permutexvar_epi16": true,
  "core_arch::x86::avx512bw::_mm_reduce_add_epi16": true,
  "core_arch::x86::avx512bw::_mm_reduce_add_epi8": true,
  "core_arch::x86::avx512bw::_mm_reduce_and_epi16": true,
  "core_arch::x86::avx512bw::_mm_reduce_and_epi8": true,
  "core_arch::x86::avx512bw::_mm_reduce_max_epi16": true,
  "core_arch::x86::avx512bw::_mm_reduce_max_epi8": true,
  "core_arch::x86::avx512bw::_mm_reduce_max_epu16": true,
  "core_arch::x86::avx512bw::_mm_reduce_max_epu8": true,
  "core_arch::x86::avx512bw::_mm_reduce_min_epi16": true,
  "core_arch::x86::avx512bw::_mm_reduce_min_epi8": true,
  "core_arch::x86::avx512bw::_mm_reduce_min_epu16": true,
  "core_arch::x86::avx512bw::_mm_reduce_min_epu8": true,
  "core_arch::x86::avx512bw::_mm_reduce_mul_epi16": true,
  "core_arch::x86::avx512bw::_mm_reduce_mul_epi8": true,
  "core_arch::x86::avx512bw::_mm_reduce_or_epi16": true,
  "core_arch::x86::avx512bw::_mm_reduce_or_epi8": true,
  "core_arch::x86::avx512bw::_mm_sllv_epi16": true,
  "core_arch::x86::avx512bw::_mm_srav_epi16": true,
  "core_arch::x86::avx512bw::_mm_srlv_epi16": true,
  "core_arch::x86::avx512bw::_mm_test_epi16_mask": true,
  "core_arch::x86::avx512bw::_mm_test_epi8_mask": true,
  "core_arch::x86::avx512bw::_mm_testn_epi16_mask": true,
  "core_arch::x86::avx512bw::_mm_testn_epi8_mask": true,
  "core_arch::x86::avx512cd::_mm256_broadcastmb_epi64": true,
  "core_arch::x86::avx512cd::_mm256_broadcastmw_epi32": true,
  "core_arch::x86::avx512cd::_mm256_conflict_epi32": true,
  "core_arch::x86::avx512cd::_mm256_conflict_epi64": true,
  "core_arch::x86::avx512cd::_mm256_lzcnt_epi32": true,
  "core_arch::x86::avx512cd::_mm256_lzcnt_epi64": true,
  "core_arch::x86::avx512cd::_mm256_mask_conflict_epi32": true,
  "core_arch::x86::avx512cd::_mm256_mask_conflict_epi64": true,
  "core_arch::x86::avx512cd::_mm256_mask_lzcnt_epi32": true,
  "core_arch::x86::avx512cd::_mm256_mask_lzcnt_epi64": true,
  "core_arch::x86::avx512cd::_mm256_maskz_conflict_epi32": true,
  "core_arch::x86::avx512cd::_mm256_maskz_conflict_epi64": true,
  "core_arch::x86::avx512cd::_mm256_maskz_lzcnt_epi32": true,
  "core_arch::x86::avx512cd::_mm256_maskz_lzcnt_epi64": true,
  "core_arch::x86::avx512cd::_mm512_broadcastmb_epi64": true,
  "core_arch::x86::avx512cd::_mm512_broadcastmw_epi32": true,
  "core_arch::x86::avx512cd::_mm512_conflict_epi32": true,
  "core_arch::x86::avx512cd::_mm512_conflict_epi64": true,
  "core_arch::x86::avx512cd::_mm512_lzcnt_epi32": true,
  "core_arch::x86::avx512cd::_mm512_lzcnt_epi64": true,
  "core_arch::x86::avx512cd::_mm512_mask_conflict_epi32": true,
  "core_arch::x86::avx512cd::_mm512_mask_conflict_epi64": true,
  "core_arch::x86::avx512cd::_mm512_mask_lzcnt_epi32": true,
  "core_arch::x86::avx512cd::_mm512_mask_lzcnt_epi64": true,
  "core_arch::x86::avx512cd::_mm512_maskz_conflict_epi32": true,
  "core_arch::x86::avx512cd::_mm512_maskz_conflict_epi64": true,
  "core_arch::x86::avx512cd::_mm512_maskz_lzcnt_epi32": true,
  "core_arch::x86::avx512cd::_mm512_maskz_lzcnt_epi64": true,
  "core_arch::x86::avx512cd::_mm_broadcastmb_epi64": true,
  "core_arch::x86::avx512cd::_mm_broadcastmw_epi32": true,
  "core_arch::x86::avx512cd::_mm_conflict_epi32": true,
  "core_arch::x86::avx512cd::_mm_conflict_epi64": true,
  "core_arch::x86::avx512cd::_mm_lzcnt_epi32": true,
  "core_arch::x86::avx512cd::_mm_lzcnt_epi64": true,
  "core_arch::x86::avx512cd::_mm_mask_conflict_epi32": true,
  "core_arch::x86::avx512cd::_mm_mask_conflict_epi64": true,
  "core_arch::x86::avx512cd::_mm_mask_lzcnt_epi32": true,
  "core_arch::x86::avx512cd::_mm_mask_lzcnt_epi64": true,
  "core_arch::x86::avx512cd::_mm_maskz_conflict_epi32": true,
  "core_arch::x86::avx512cd::_mm_maskz_conflict_epi64": true,
  "core_arch::x86::avx512cd::_mm_maskz_lzcnt_epi32": true,
  "core_arch::x86::avx512cd::_mm_maskz_lzcnt_epi64": true,
  "core_arch::x86::avx512dq::_cvtmask8_u32": true,
  "core_arch::x86::avx512dq::_cvtu32_mask8": true,
  "core_arch::x86::avx512dq::_kadd_mask16": true,
  "core_arch::x86::avx512dq::_kadd_mask8": true,
  "core_arch::x86::avx512dq::_kand_mask8": true,
  "core_arch::x86::avx512dq::_kandn_mask8": true,
  "core_arch::x86::avx512dq::_knot_mask8": true,
  "core_arch::x86::avx512dq::_kor_mask8": true,
  "core_arch::x86::avx512dq::_kortestc_mask8_u8": true,
  "core_arch::x86::avx512dq::_kortestz_mask8_u8": true,
  "core_arch::x86::avx512dq::_ktestc_mask16_u8": true,
  "core_arch::x86::avx512dq::_ktestc_mask8_u8": true,
  "core_arch::x86::avx512dq::_ktestz_mask16_u8": true,
  "core_arch::x86::avx512dq::_ktestz_mask8_u8": true,
  "core_arch::x86::avx512dq::_kxnor_mask8": true,
  "core_arch::x86::avx512dq::_kxor_mask8": true,
  "core_arch::x86::avx512dq::_mm256_broadcast_f32x2": true,
  "core_arch::x86::avx512dq::_mm256_broadcast_f64x2": true,
  "core_arch::x86::avx512dq::_mm256_broadcast_i32x2": true,
  "core_arch::x86::avx512dq::_mm256_broadcast_i64x2": true,
  "core_arch::x86::avx512dq::_mm256_cvtepi64_pd": true,
  "core_arch::x86::avx512dq::_mm256_cvtepi64_ps": true,
  "core_arch::x86::avx512dq::_mm256_cvtepu64_pd": true,
  "core_arch::x86::avx512dq::_mm256_cvtepu64_ps": true,
  "core_arch::x86::avx512dq::_mm256_cvtpd_epi64": true,
  "core_arch::x86::avx512dq::_mm256_cvtpd_epu64": true,
  "core_arch::x86::avx512dq::_mm256_cvtps_epi64": true,
  "core_arch::x86::avx512dq::_mm256_cvtps_epu64": true,
  "core_arch::x86::avx512dq::_mm256_cvttpd_epi64": true,
  "core_arch::x86::avx512dq::_mm256_cvttpd_epu64": true,
  "core_arch::x86::avx512dq::_mm256_cvttps_epi64": true,
  "core_arch::x86::avx512dq::_mm256_cvttps_epu64": true,
  "core_arch::x86::avx512dq::_mm256_mask_and_pd": true,
  "core_arch::x86::avx512dq::_mm256_mask_and_ps": true,
  "core_arch::x86::avx512dq::_mm256_mask_andnot_pd": true,
  "core_arch::x86::avx512dq::_mm256_mask_andnot_ps": true,
  "core_arch::x86::avx512dq::_mm256_mask_broadcast_f32x2": true,
  "core_arch::x86::avx512dq::_mm256_mask_broadcast_f64x2": true,
  "core_arch::x86::avx512dq::_mm256_mask_broadcast_i32x2": true,
  "core_arch::x86::avx512dq::_mm256_mask_broadcast_i64x2": true,
  "core_arch::x86::avx512dq::_mm256_mask_cvtepi64_pd": true,
  "core_arch::x86::avx512dq::_mm256_mask_cvtepi64_ps": true,
  "core_arch::x86::avx512dq::_mm256_mask_cvtepu64_pd": true,
  "core_arch::x86::avx512dq::_mm256_mask_cvtepu64_ps": true,
  "core_arch::x86::avx512dq::_mm256_mask_cvtpd_epi64": true,
  "core_arch::x86::avx512dq::_mm256_mask_cvtpd_epu64": true,
  "core_arch::x86::avx512dq::_mm256_mask_cvtps_epi64": true,
  "core_arch::x86::avx512dq::_mm256_mask_cvtps_epu64": true,
  "core_arch::x86::avx512dq::_mm256_mask_cvttpd_epi64": true,
  "core_arch::x86::avx512dq::_mm256_mask_cvttpd_epu64": true,
  "core_arch::x86::avx512dq::_mm256_mask_cvttps_epi64": true,
  "core_arch::x86::avx512dq::_mm256_mask_cvttps_epu64": true,
  "core_arch::x86::avx512dq::_mm256_mask_mullo_epi64": true,
  "core_arch::x86::avx512dq::_mm256_mask_or_pd": true,
  "core_arch::x86::avx512dq::_mm256_mask_or_ps": true,
  "core_arch::x86::avx512dq::_mm256_mask_xor_pd": true,
  "core_arch::x86::avx512dq::_mm256_mask_xor_ps": true,
  "core_arch::x86::avx512dq::_mm256_maskz_and_pd": true,
  "core_arch::x86::avx512dq::_mm256_maskz_and_ps": true,
  "core_arch::x86::avx512dq::_mm256_maskz_andnot_pd": true,
  "core_arch::x86::avx512dq::_mm256_maskz_andnot_ps": true,
  "core_arch::x86::avx512dq::_mm256_maskz_broadcast_f32x2": true,
  "core_arch::x86::avx512dq::_mm256_maskz_broadcast_f64x2": true,
  "core_arch::x86::avx512dq::_mm256_maskz_broadcast_i32x2": true,
  "core_arch::x86::avx512dq::_mm256_maskz_broadcast_i64x2": true,
  "core_arch::x86::avx512dq::_mm256_maskz_cvtepi64_pd": true,
  "core_arch::x86::avx512dq::_mm256_maskz_cvtepi64_ps": true,
  "core_arch::x86::avx512dq::_mm256_maskz_cvtepu64_pd": true,
  "core_arch::x86::avx512dq::_mm256_maskz_cvtepu64_ps": true,
  "core_arch::x86::avx512dq::_mm256_maskz_cvtpd_epi64": true,
  "core_arch::x86::avx512dq::_mm256_maskz_cvtpd_epu64": true,
  "core_arch::x86::avx512dq::_mm256_maskz_cvtps_epi64": true,
  "core_arch::x86::avx512dq::_mm256_maskz_cvtps_epu64": true,
  "core_arch::x86::avx512dq::_mm256_maskz_cvttpd_epi64": true,
  "core_arch::x86::avx512dq::_mm256_maskz_cvttpd_epu64": true,
  "core_arch::x86::avx512dq::_mm256_maskz_cvttps_epi64": true,
  "core_arch::x86::avx512dq::_mm256_maskz_cvttps_epu64": true,
  "core_arch::x86::avx512dq::_mm256_maskz_mullo_epi64": true,
  "core_arch::x86::avx512dq::_mm256_maskz_or_pd": true,
  "core_arch::x86::avx512dq::_mm256_maskz_or_ps": true,
  "core_arch::x86::avx512dq::_mm256_maskz_xor_pd": true,
  "core_arch::x86::avx512dq::_mm256_maskz_xor_ps": true,
  "core_arch::x86::avx512dq::_mm256_movepi32_mask": true,
  "core_arch::x86::avx512dq::_mm256_movepi64_mask": true,
  "core_arch::x86::avx512dq::_mm256_movm_epi32": true,
  "core_arch::x86::avx512dq::_mm256_movm_epi64": true,
  "core_arch::x86::avx512dq::_mm256_mullo_epi64": true,
  "core_arch::x86::avx512dq::_mm512_and_pd": true,
  "core_arch::x86::avx512dq::_mm512_and_ps": true,
  "core_arch::x86::avx512dq::_mm512_andnot_pd": true,
  "core_arch::x86::avx512dq::_mm512_andnot_ps": true,
  "core_arch::x86::avx512dq::_mm512_broadcast_f32x2": true,
  "core_arch::x86::avx512dq::_mm512_broadcast_f32x8": true,
  "core_arch::x86::avx512dq::_mm512_broadcast_f64x2": true,
  "core_arch::x86::avx512dq::_mm512_broadcast_i32x2": true,
  "core_arch::x86::avx512dq::_mm512_broadcast_i32x8": true,
  "core_arch::x86::avx512dq::_mm512_broadcast_i64x2": true,
  "core_arch::x86::avx512dq::_mm512_cvtepi64_pd": true,
  "core_arch::x86::avx512dq::_mm512_cvtepi64_ps": true,
  "core_arch::x86::avx512dq::_mm512_cvtepu64_pd": true,
  "core_arch::x86::avx512dq::_mm512_cvtepu64_ps": true,
  "core_arch::x86::avx512dq::_mm512_cvtpd_epi64": true,
  "core_arch::x86::avx512dq::_mm512_cvtpd_epu64": true,
  "core_arch::x86::avx512dq::_mm512_cvtps_epi64": true,
  "core_arch::x86::avx512dq::_mm512_cvtps_epu64": true,
  "core_arch::x86::avx512dq::_mm512_cvttpd_epi64": true,
  "core_arch::x86::avx512dq::_mm512_cvttpd_epu64": true,
  "core_arch::x86::avx512dq::_mm512_cvttps_epi64": true,
  "core_arch::x86::avx512dq::_mm512_cvttps_epu64": true,
  "core_arch::x86::avx512dq::_mm512_mask_and_pd": true,
  "core_arch::x86::avx512dq::_mm512_mask_and_ps": true,
  "core_arch::x86::avx512dq::_mm512_mask_andnot_pd": true,
  "core_arch::x86::avx512dq::_mm512_mask_andnot_ps": true,
  "core_arch::x86::avx512dq::_mm512_mask_broadcast_f32x2": true,
  "core_arch::x86::avx512dq::_mm512_mask_broadcast_f32x8": true,
  "core_arch::x86::avx512dq::_mm512_mask_broadcast_f64x2": true,
  "core_arch::x86::avx512dq::_mm512_mask_broadcast_i32x2": true,
  "core_arch::x86::avx512dq::_mm512_mask_broadcast_i32x8": true,
  "core_arch::x86::avx512dq::_mm512_mask_broadcast_i64x2": true,
  "core_arch::x86::avx512dq::_mm512_mask_cvtepi64_pd": true,
  "core_arch::x86::avx512dq::_mm512_mask_cvtepi64_ps": true,
  "core_arch::x86::avx512dq::_mm512_mask_cvtepu64_pd": true,
  "core_arch::x86::avx512dq::_mm512_mask_cvtepu64_ps": true,
  "core_arch::x86::avx512dq::_mm512_mask_cvtpd_epi64": true,
  "core_arch::x86::avx512dq::_mm512_mask_cvtpd_epu64": true,
  "core_arch::x86::avx512dq::_mm512_mask_cvtps_epi64": true,
  "core_arch::x86::avx512dq::_mm512_mask_cvtps_epu64": true,
  "core_arch::x86::avx512dq::_mm512_mask_cvttpd_epi64": true,
  "core_arch::x86::avx512dq::_mm512_mask_cvttpd_epu64": true,
  "core_arch::x86::avx512dq::_mm512_mask_cvttps_epi64": true,
  "core_arch::x86::avx512dq::_mm512_mask_cvttps_epu64": true,
  "core_arch::x86::avx512dq::_mm512_mask_mullo_epi64": true,
  "core_arch::x86::avx512dq::_mm512_mask_or_pd": true,
  "core_arch::x86::avx512dq::_mm512_mask_or_ps": true,
  "core_arch::x86::avx512dq::_mm512_mask_xor_pd": true,
  "core_arch::x86::avx512dq::_mm512_mask_xor_ps": true,
  "core_arch::x86::avx512dq::_mm512_maskz_and_pd": true,
  "core_arch::x86::avx512dq::_mm512_maskz_and_ps": true,
  "core_arch::x86::avx512dq::_mm512_maskz_andnot_pd": true,
  "core_arch::x86::avx512dq::_mm512_maskz_andnot_ps": true,
  "core_arch::x86::avx512dq::_mm512_maskz_broadcast_f32x2": true,
  "core_arch::x86::avx512dq::_mm512_maskz_broadcast_f32x8": true,
  "core_arch::x86::avx512dq::_mm512_maskz_broadcast_f64x2": true,
  "core_arch::x86::avx512dq::_mm512_maskz_broadcast_i32x2": true,
  "core_arch::x86::avx512dq::_mm512_maskz_broadcast_i32x8": true,
  "core_arch::x86::avx512dq::_mm512_maskz_broadcast_i64x2": true,
  "core_arch::x86::avx512dq::_mm512_maskz_cvtepi64_pd": true,
  "core_arch::x86::avx512dq::_mm512_maskz_cvtepi64_ps": true,
  "core_arch::x86::avx512dq::_mm512_maskz_cvtepu64_pd": true,
  "core_arch::x86::avx512dq::_mm512_maskz_cvtepu64_ps": true,
  "core_arch::x86::avx512dq::_mm512_maskz_cvtpd_epi64": true,
  "core_arch::x86::avx512dq::_mm512_maskz_cvtpd_epu64": true,
  "core_arch::x86::avx512dq::_mm512_maskz_cvtps_epi64": true,
  "core_arch::x86::avx512dq::_mm512_maskz_cvtps_epu64": true,
  "core_arch::x86::avx512dq::_mm512_maskz_cvttpd_epi64": true,
  "core_arch::x86::avx512dq::_mm512_maskz_cvttpd_epu64": true,
  "core_arch::x86::avx512dq::_mm512_maskz_cvttps_epi64": true,
  "core_arch::x86::avx512dq::_mm512_maskz_cvttps_epu64": true,
  "core_arch::x86::avx512dq::_mm512_maskz_mullo_epi64": true,
  "core_arch::x86::avx512dq::_mm512_maskz_or_pd": true,
  "core_arch::x86::avx512dq::_mm512_maskz_or_ps": true,
  "core_arch::x86::avx512dq::_mm512_maskz_xor_pd": true,
  "core_arch::x86::avx512dq::_mm512_maskz_xor_ps": true,
  "core_arch::x86::avx512dq::_mm512_movepi32_mask": true,
  "core_arch::x86::avx512dq::_mm512_movepi64_mask": true,
  "core_arch::x86::avx512dq::_mm512_movm_epi32": true,
  "core_arch::x86::avx512dq::_mm512_movm_epi64": true,
  "core_arch::x86::avx512dq::_mm512_mullo_epi64": true,
  "core_arch::x86::avx512dq::_mm512_or_pd": true,
  "core_arch::x86::avx512dq::_mm512_or_ps": true,
  "core_arch::x86::avx512dq::_mm512_xor_pd": true,
  "core_arch::x86::avx512dq::_mm512_xor_ps": true,
  "core_arch::x86::avx512dq::_mm_broadcast_i32x2": true,
  "core_arch::x86::avx512dq::_mm_cvtepi64_pd": true,
  "core_arch::x86::avx512dq::_mm_cvtepi64_ps": true,
  "core_arch::x86::avx512dq::_mm_cvtepu64_pd": true,
  "core_arch::x86::avx512dq::_mm_cvtepu64_ps": true,
  "core_arch::x86::avx512dq::_mm_cvtpd_epi64": true,
  "core_arch::x86::avx512dq::_mm_cvtpd_epu64": true,
  "core_arch::x86::avx512dq::_mm_cvtps_epi64": true,
  "core_arch::x86::avx512dq::_mm_cvtps_epu64": true,
  "core_arch::x86::avx512dq::_mm_cvttpd_epi64": true,
  "core_arch::x86::avx512dq::_mm_cvttpd_epu64": true,
  "core_arch::x86::avx512dq::_mm_cvttps_epi64": true,
  "core_arch::x86::avx512dq::_mm_cvttps_epu64": true,
  "core_arch::x86::avx512dq::_mm_mask_and_pd": true,
  "core_arch::x86::avx512dq::_mm_mask_and_ps": true,
  "core_arch::x86::avx512dq::_mm_mask_andnot_pd": true,
  "core_arch::x86::avx512dq::_mm_mask_andnot_ps": true,
  "core_arch::x86::avx512dq::_mm_mask_broadcast_i32x2": true,
  "core_arch::x86::avx512dq::_mm_mask_cvtepi64_pd": true,
  "core_arch::x86::avx512dq::_mm_mask_cvtepi64_ps": true,
  "core_arch::x86::avx512dq::_mm_mask_cvtepu64_pd": true,
  "core_arch::x86::avx512dq::_mm_mask_cvtepu64_ps": true,
  "core_arch::x86::avx512dq::_mm_mask_cvtpd_epi64": true,
  "core_arch::x86::avx512dq::_mm_mask_cvtpd_epu64": true,
  "core_arch::x86::avx512dq::_mm_mask_cvtps_epi64": true,
  "core_arch::x86::avx512dq::_mm_mask_cvtps_epu64": true,
  "core_arch::x86::avx512dq::_mm_mask_cvttpd_epi64": true,
  "core_arch::x86::avx512dq::_mm_mask_cvttpd_epu64": true,
  "core_arch::x86::avx512dq::_mm_mask_cvttps_epi64": true,
  "core_arch::x86::avx512dq::_mm_mask_cvttps_epu64": true,
  "core_arch::x86::avx512dq::_mm_mask_mullo_epi64": true,
  "core_arch::x86::avx512dq::_mm_mask_or_pd": true,
  "core_arch::x86::avx512dq::_mm_mask_or_ps": true,
  "core_arch::x86::avx512dq::_mm_mask_xor_pd": true,
  "core_arch::x86::avx512dq::_mm_mask_xor_ps": true,
  "core_arch::x86::avx512dq::_mm_maskz_and_pd": true,
  "core_arch::x86::avx512dq::_mm_maskz_and_ps": true,
  "core_arch::x86::avx512dq::_mm_maskz_andnot_pd": true,
  "core_arch::x86::avx512dq::_mm_maskz_andnot_ps": true,
  "core_arch::x86::avx512dq::_mm_maskz_broadcast_i32x2": true,
  "core_arch::x86::avx512dq::_mm_maskz_cvtepi64_pd": true,
  "core_arch::x86::avx512dq::_mm_maskz_cvtepi64_ps": true,
  "core_arch::x86::avx512dq::_mm_maskz_cvtepu64_pd": true,
  "core_arch::x86::avx512dq::_mm_maskz_cvtepu64_ps": true,
  "core_arch::x86::avx512dq::_mm_maskz_cvtpd_epi64": true,
  "core_arch::x86::avx512dq::_mm_maskz_cvtpd_epu64": true,
  "core_arch::x86::avx512dq::_mm_maskz_cvtps_epi64": true,
  "core_arch::x86::avx512dq::_mm_maskz_cvtps_epu64": true,
  "core_arch::x86::avx512dq::_mm_maskz_cvttpd_epi64": true,
  "core_arch::x86::avx512dq::_mm_maskz_cvttpd_epu64": true,
  "core_arch::x86::avx512dq::_mm_maskz_cvttps_epi64": true,
  "core_arch::x86::avx512dq::_mm_maskz_cvttps_epu64": true,
  "core_arch::x86::avx512dq::_mm_maskz_mullo_epi64": true,
  "core_arch::x86::avx512dq::_mm_maskz_or_pd": true,
  "core_arch::x86::avx512dq::_mm_maskz_or_ps": true,
  "core_arch::x86::avx512dq::_mm_maskz_xor_pd": true,
  "core_arch::x86::avx512dq::_mm_maskz_xor_ps": true,
  "core_arch::x86::avx512dq::_mm_movepi32_mask": true,
  "core_arch::x86::avx512dq::_mm_movepi64_mask": true,
  "core_arch::x86::avx512dq::_mm_movm_epi32": true,
  "core_arch::x86::avx512dq::_mm_movm_epi64": true,
  "core_arch::x86::avx512dq::_mm_mullo_epi64": true,
  "core_arch::x86::avx512f::_cvtmask16_u32": true,
  "core_arch::x86::avx512f::_cvtu32_mask16": true,
  "core_arch::x86::avx512f::_kand_mask16": true,
  "core_arch::x86::avx512f::_kandn_mask16": true,
  "core_arch::x86::avx512f::_knot_mask16": true,
  "core_arch::x86::avx512f::_kor_mask16": true,
  "core_arch::x86::avx512f::_kortestc_mask16_u8": true,
  "core_arch::x86::avx512f::_kortestz_mask16_u8": true,
  "core_arch::x86::avx512f::_kxnor_mask16": true,
  "core_arch::x86::avx512f::_kxor_mask16": true,
  "core_arch::x86::avx512f::_mm256_abs_epi64": true,
  "core_arch::x86::avx512f::_mm256_broadcast_f32x4": true,
  "core_arch::x86::avx512f::_mm256_broadcast_i32x4": true,
  "core_arch::x86::avx512f::_mm256_cmpeq_epi32_mask": true,
  "core_arch::x86::avx512f::_mm256_cmpeq_epi64_mask": true,
  "core_arch::x86::avx512f::_mm256_cmpeq_epu32_mask": true,
  "core_arch::x86::avx512f::_mm256_cmpeq_epu64_mask": true,
  "core_arch::x86::avx512f::_mm256_cmpge_epi32_mask": true,
  "core_arch::x86::avx512f::_mm256_cmpge_epi64_mask": true,
  "core_arch::x86::avx512f::_mm256_cmpge_epu32_mask": true,
  "core_arch::x86::avx512f::_mm256_cmpge_epu64_mask": true,
  "core_arch::x86::avx512f::_mm256_cmpgt_epi32_mask": true,
  "core_arch::x86::avx512f::_mm256_cmpgt_epi64_mask": true,
  "core_arch::x86::avx512f::_mm256_cmpgt_epu32_mask": true,
  "core_arch::x86::avx512f::_mm256_cmpgt_epu64_mask": true,
  "core_arch::x86::avx512f::_mm256_cmple_epi32_mask": true,
  "core_arch::x86::avx512f::_mm256_cmple_epi64_mask": true,
  "core_arch::x86::avx512f::_mm256_cmple_epu32_mask": true,
  "core_arch::x86::avx512f::_mm256_cmple_epu64_mask": true,
  "core_arch::x86::avx512f::_mm256_cmplt_epi32_mask": true,
  "core_arch::x86::avx512f::_mm256_cmplt_epi64_mask": true,
  "core_arch::x86::avx512f::_mm256_cmplt_epu32_mask": true,
  "core_arch::x86::avx512f::_mm256_cmplt_epu64_mask": true,
  "core_arch::x86::avx512f::_mm256_cmpneq_epi32_mask": true,
  "core_arch::x86::avx512f::_mm256_cmpneq_epi64_mask": true,
  "core_arch::x86::avx512f::_mm256_cmpneq_epu32_mask": true,
  "core_arch::x86::avx512f::_mm256_cmpneq_epu64_mask": true,
  "core_arch::x86::avx512f::_mm256_cvtepi32_epi16": true,
  "core_arch::x86::avx512f::_mm256_cvtepi32_epi8": true,
  "core_arch::x86::avx512f::_mm256_cvtepi64_epi16": true,
  "core_arch::x86::avx512f::_mm256_cvtepi64_epi32": true,
  "core_arch::x86::avx512f::_mm256_cvtepi64_epi8": true,
  "core_arch::x86::avx512f::_mm256_cvtepu32_pd": true,
  "core_arch::x86::avx512f::_mm256_cvtpd_epu32": true,
  "core_arch::x86::avx512f::_mm256_cvtps_epu32": true,
  "core_arch::x86::avx512f::_mm256_cvtsepi32_epi16": true,
  "core_arch::x86::avx512f::_mm256_cvtsepi32_epi8": true,
  "core_arch::x86::avx512f::_mm256_cvtsepi64_epi16": true,
  "core_arch::x86::avx512f::_mm256_cvtsepi64_epi32": true,
  "core_arch::x86::avx512f::_mm256_cvtsepi64_epi8": true,
  "core_arch::x86::avx512f::_mm256_cvttpd_epu32": true,
  "core_arch::x86::avx512f::_mm256_cvttps_epu32": true,
  "core_arch::x86::avx512f::_mm256_cvtusepi32_epi16": true,
  "core_arch::x86::avx512f::_mm256_cvtusepi32_epi8": true,
  "core_arch::x86::avx512f::_mm256_cvtusepi64_epi16": true,
  "core_arch::x86::avx512f::_mm256_cvtusepi64_epi32": true,
  "core_arch::x86::avx512f::_mm256_cvtusepi64_epi8": true,
  "core_arch::x86::avx512f::_mm256_getexp_pd": true,
  "core_arch::x86::avx512f::_mm256_getexp_ps": true,
  "core_arch::x86::avx512f::_mm256_mask2_permutex2var_epi32": true,
  "core_arch::x86::avx512f::_mm256_mask2_permutex2var_epi64": true,
  "core_arch::x86::avx512f::_mm256_mask2_permutex2var_pd": true,
  "core_arch::x86::avx512f::_mm256_mask2_permutex2var_ps": true,
  "core_arch::x86::avx512f::_mm256_mask3_fmadd_pd": true,
  "core_arch::x86::avx512f::_mm256_mask3_fmadd_ps": true,
  "core_arch::x86::avx512f::_mm256_mask3_fmaddsub_pd": true,
  "core_arch::x86::avx512f::_mm256_mask3_fmaddsub_ps": true,
  "core_arch::x86::avx512f::_mm256_mask3_fmsub_pd": true,
  "core_arch::x86::avx512f::_mm256_mask3_fmsub_ps": true,
  "core_arch::x86::avx512f::_mm256_mask3_fmsubadd_pd": true,
  "core_arch::x86::avx512f::_mm256_mask3_fmsubadd_ps": true,
  "core_arch::x86::avx512f::_mm256_mask3_fnmadd_pd": true,
  "core_arch::x86::avx512f::_mm256_mask3_fnmadd_ps": true,
  "core_arch::x86::avx512f::_mm256_mask3_fnmsub_pd": true,
  "core_arch::x86::avx512f::_mm256_mask3_fnmsub_ps": true,
  "core_arch::x86::avx512f::_mm256_mask_abs_epi32": true,
  "core_arch::x86::avx512f::_mm256_mask_abs_epi64": true,
  "core_arch::x86::avx512f::_mm256_mask_add_epi32": true,
  "core_arch::x86::avx512f::_mm256_mask_add_epi64": true,
  "core_arch::x86::avx512f::_mm256_mask_add_pd": true,
  "core_arch::x86::avx512f::_mm256_mask_add_ps": true,
  "core_arch::x86::avx512f::_mm256_mask_and_epi32": true,
  "core_arch::x86::avx512f::_mm256_mask_and_epi64": true,
  "core_arch::x86::avx512f::_mm256_mask_andnot_epi32": true,
  "core_arch::x86::avx512f::_mm256_mask_andnot_epi64": true,
  "core_arch::x86::avx512f::_mm256_mask_blend_epi32": true,
  "core_arch::x86::avx512f::_mm256_mask_blend_epi64": true,
  "core_arch::x86::avx512f::_mm256_mask_blend_pd": true,
  "core_arch::x86::avx512f::_mm256_mask_blend_ps": true,
  "core_arch::x86::avx512f::_mm256_mask_broadcast_f32x4": true,
  "core_arch::x86::avx512f::_mm256_mask_broadcast_i32x4": true,
  "core_arch::x86::avx512f::_mm256_mask_broadcastd_epi32": true,
  "core_arch::x86::avx512f::_mm256_mask_broadcastq_epi64": true,
  "core_arch::x86::avx512f::_mm256_mask_broadcastsd_pd": true,
  "core_arch::x86::avx512f::_mm256_mask_broadcastss_ps": true,
  "core_arch::x86::avx512f::_mm256_mask_cmpeq_epi32_mask": true,
  "core_arch::x86::avx512f::_mm256_mask_cmpeq_epi64_mask": true,
  "core_arch::x86::avx512f::_mm256_mask_cmpeq_epu32_mask": true,
  "core_arch::x86::avx512f::_mm256_mask_cmpeq_epu64_mask": true,
  "core_arch::x86::avx512f::_mm256_mask_cmpge_epi32_mask": true,
  "core_arch::x86::avx512f::_mm256_mask_cmpge_epi64_mask": true,
  "core_arch::x86::avx512f::_mm256_mask_cmpge_epu32_mask": true,
  "core_arch::x86::avx512f::_mm256_mask_cmpge_epu64_mask": true,
  "core_arch::x86::avx512f::_mm256_mask_cmpgt_epi32_mask": true,
  "core_arch::x86::avx512f::_mm256_mask_cmpgt_epi64_mask": true,
  "core_arch::x86::avx512f::_mm256_mask_cmpgt_epu32_mask": true,
  "core_arch::x86::avx512f::_mm256_mask_cmpgt_epu64_mask": true,
  "core_arch::x86::avx512f::_mm256_mask_cmple_epi32_mask": true,
  "core_arch::x86::avx512f::_mm256_mask_cmple_epi64_mask": true,
  "core_arch::x86::avx512f::_mm256_mask_cmple_epu32_mask": true,
  "core_arch::x86::avx512f::_mm256_mask_cmple_epu64_mask": true,
  "core_arch::x86::avx512f::_mm256_mask_cmplt_epi32_mask": true,
  "core_arch::x86::avx512f::_mm256_mask_cmplt_epi64_mask": true,
  "core_arch::x86::avx512f::_mm256_mask_cmplt_epu32_mask": true,
  "core_arch::x86::avx512f::_mm256_mask_cmplt_epu64_mask": true,
  "core_arch::x86::avx512f::_mm256_mask_cmpneq_epi32_mask": true,
  "core_arch::x86::avx512f::_mm256_mask_cmpneq_epi64_mask": true,
  "core_arch::x86::avx512f::_mm256_mask_cmpneq_epu32_mask": true,
  "core_arch::x86::avx512f::_mm256_mask_cmpneq_epu64_mask": true,
  "core_arch::x86::avx512f::_mm256_mask_compress_epi32": true,
  "core_arch::x86::avx512f::_mm256_mask_compress_epi64": true,
  "core_arch::x86::avx512f::_mm256_mask_compress_pd": true,
  "core_arch::x86::avx512f::_mm256_mask_compress_ps": true,
  "core_arch::x86::avx512f::_mm256_mask_cvtepi16_epi32": true,
  "core_arch::x86::avx512f::_mm256_mask_cvtepi16_epi64": true,
  "core_arch::x86::avx512f::_mm256_mask_cvtepi32_epi16": true,
  "core_arch::x86::avx512f::_mm256_mask_cvtepi32_epi64": true,
  "core_arch::x86::avx512f::_mm256_mask_cvtepi32_epi8": true,
  "core_arch::x86::avx512f::_mm256_mask_cvtepi32_pd": true,
  "core_arch::x86::avx512f::_mm256_mask_cvtepi32_ps": true,
  "core_arch::x86::avx512f::_mm256_mask_cvtepi64_epi16": true,
  "core_arch::x86::avx512f::_mm256_mask_cvtepi64_epi32": true,
  "core_arch::x86::avx512f::_mm256_mask_cvtepi64_epi8": true,
  "core_arch::x86::avx512f::_mm256_mask_cvtepi8_epi32": true,
  "core_arch::x86::avx512f::_mm256_mask_cvtepi8_epi64": true,
  "core_arch::x86::avx512f::_mm256_mask_cvtepu16_epi32": true,
  "core_arch::x86::avx512f::_mm256_mask_cvtepu16_epi64": true,
  "core_arch::x86::avx512f::_mm256_mask_cvtepu32_epi64": true,
  "core_arch::x86::avx512f::_mm256_mask_cvtepu32_pd": true,
  "core_arch::x86::avx512f::_mm256_mask_cvtepu8_epi32": true,
  "core_arch::x86::avx512f::_mm256_mask_cvtepu8_epi64": true,
  "core_arch::x86::avx512f::_mm256_mask_cvtpd_epi32": true,
  "core_arch::x86::avx512f::_mm256_mask_cvtpd_epu32": true,
  "core_arch::x86::avx512f::_mm256_mask_cvtpd_ps": true,
  "core_arch::x86::avx512f::_mm256_mask_cvtph_ps": true,
  "core_arch::x86::avx512f::_mm256_mask_cvtps_epi32": true,
  "core_arch::x86::avx512f::_mm256_mask_cvtps_epu32": true,
  "core_arch::x86::avx512f::_mm256_mask_cvtsepi32_epi16": true,
  "core_arch::x86::avx512f::_mm256_mask_cvtsepi32_epi8": true,
  "core_arch::x86::avx512f::_mm256_mask_cvtsepi64_epi16": true,
  "core_arch::x86::avx512f::_mm256_mask_cvtsepi64_epi32": true,
  "core_arch::x86::avx512f::_mm256_mask_cvtsepi64_epi8": true,
  "core_arch::x86::avx512f::_mm256_mask_cvttpd_epi32": true,
  "core_arch::x86::avx512f::_mm256_mask_cvttpd_epu32": true,
  "core_arch::x86::avx512f::_mm256_mask_cvttps_epi32": true,
  "core_arch::x86::avx512f::_mm256_mask_cvttps_epu32": true,
  "core_arch::x86::avx512f::_mm256_mask_cvtusepi32_epi16": true,
  "core_arch::x86::avx512f::_mm256_mask_cvtusepi32_epi8": true,
  "core_arch::x86::avx512f::_mm256_mask_cvtusepi64_epi16": true,
  "core_arch::x86::avx512f::_mm256_mask_cvtusepi64_epi32": true,
  "core_arch::x86::avx512f::_mm256_mask_cvtusepi64_epi8": true,
  "core_arch::x86::avx512f::_mm256_mask_div_pd": true,
  "core_arch::x86::avx512f::_mm256_mask_div_ps": true,
  "core_arch::x86::avx512f::_mm256_mask_expand_epi32": true,
  "core_arch::x86::avx512f::_mm256_mask_expand_epi64": true,
  "core_arch::x86::avx512f::_mm256_mask_expand_pd": true,
  "core_arch::x86::avx512f::_mm256_mask_expand_ps": true,
  "core_arch::x86::avx512f::_mm256_mask_fmadd_pd": true,
  "core_arch::x86::avx512f::_mm256_mask_fmadd_ps": true,
  "core_arch::x86::avx512f::_mm256_mask_fmaddsub_pd": true,
  "core_arch::x86::avx512f::_mm256_mask_fmaddsub_ps": true,
  "core_arch::x86::avx512f::_mm256_mask_fmsub_pd": true,
  "core_arch::x86::avx512f::_mm256_mask_fmsub_ps": true,
  "core_arch::x86::avx512f::_mm256_mask_fmsubadd_pd": true,
  "core_arch::x86::avx512f::_mm256_mask_fmsubadd_ps": true,
  "core_arch::x86::avx512f::_mm256_mask_fnmadd_pd": true,
  "core_arch::x86::avx512f::_mm256_mask_fnmadd_ps": true,
  "core_arch::x86::avx512f::_mm256_mask_fnmsub_pd": true,
  "core_arch::x86::avx512f::_mm256_mask_fnmsub_ps": true,
  "core_arch::x86::avx512f::_mm256_mask_getexp_pd": true,
  "core_arch::x86::avx512f::_mm256_mask_getexp_ps": true,
  "core_arch::x86::avx512f::_mm256_mask_max_epi32": true,
  "core_arch::x86::avx512f::_mm256_mask_max_epi64": true,
  "core_arch::x86::avx512f::_mm256_mask_max_epu32": true,
  "core_arch::x86::avx512f::_mm256_mask_max_epu64": true,
  "core_arch::x86::avx512f::_mm256_mask_max_pd": true,
  "core_arch::x86::avx512f::_mm256_mask_max_ps": true,
  "core_arch::x86::avx512f::_mm256_mask_min_epi32": true,
  "core_arch::x86::avx512f::_mm256_mask_min_epi64": true,
  "core_arch::x86::avx512f::_mm256_mask_min_epu32": true,
  "core_arch::x86::avx512f::_mm256_mask_min_epu64": true,
  "core_arch::x86::avx512f::_mm256_mask_min_pd": true,
  "core_arch::x86::avx512f::_mm256_mask_min_ps": true,
  "core_arch::x86::avx512f::_mm256_mask_mov_epi32": true,
  "core_arch::x86::avx512f::_mm256_mask_mov_epi64": true,
  "core_arch::x86::avx512f::_mm256_mask_mov_pd": true,
  "core_arch::x86::avx512f::_mm256_mask_mov_ps": true,
  "core_arch::x86::avx512f::_mm256_mask_movedup_pd": true,
  "core_arch::x86::avx512f::_mm256_mask_movehdup_ps": true,
  "core_arch::x86::avx512f::_mm256_mask_moveldup_ps": true,
  "core_arch::x86::avx512f::_mm256_mask_mul_epi32": true,
  "core_arch::x86::avx512f::_mm256_mask_mul_epu32": true,
  "core_arch::x86::avx512f::_mm256_mask_mul_pd": true,
  "core_arch::x86::avx512f::_mm256_mask_mul_ps": true,
  "core_arch::x86::avx512f::_mm256_mask_mullo_epi32": true,
  "core_arch::x86::avx512f::_mm256_mask_or_epi32": true,
  "core_arch::x86::avx512f::_mm256_mask_or_epi64": true,
  "core_arch::x86::avx512f::_mm256_mask_permutevar_pd": true,
  "core_arch::x86::avx512f::_mm256_mask_permutevar_ps": true,
  "core_arch::x86::avx512f::_mm256_mask_permutex2var_epi32": true,
  "core_arch::x86::avx512f::_mm256_mask_permutex2var_epi64": true,
  "core_arch::x86::avx512f::_mm256_mask_permutex2var_pd": true,
  "core_arch::x86::avx512f::_mm256_mask_permutex2var_ps": true,
  "core_arch::x86::avx512f::_mm256_mask_permutexvar_epi32": true,
  "core_arch::x86::avx512f::_mm256_mask_permutexvar_epi64": true,
  "core_arch::x86::avx512f::_mm256_mask_permutexvar_pd": true,
  "core_arch::x86::avx512f::_mm256_mask_permutexvar_ps": true,
  "core_arch::x86::avx512f::_mm256_mask_rcp14_pd": true,
  "core_arch::x86::avx512f::_mm256_mask_rcp14_ps": true,
  "core_arch::x86::avx512f::_mm256_mask_rolv_epi32": true,
  "core_arch::x86::avx512f::_mm256_mask_rolv_epi64": true,
  "core_arch::x86::avx512f::_mm256_mask_rorv_epi32": true,
  "core_arch::x86::avx512f::_mm256_mask_rorv_epi64": true,
  "core_arch::x86::avx512f::_mm256_mask_rsqrt14_pd": true,
  "core_arch::x86::avx512f::_mm256_mask_rsqrt14_ps": true,
  "core_arch::x86::avx512f::_mm256_mask_scalef_pd": true,
  "core_arch::x86::avx512f::_mm256_mask_scalef_ps": true,
  "core_arch::x86::avx512f::_mm256_mask_set1_epi32": true,
  "core_arch::x86::avx512f::_mm256_mask_set1_epi64": true,
  "core_arch::x86::avx512f::_mm256_mask_sll_epi32": true,
  "core_arch::x86::avx512f::_mm256_mask_sll_epi64": true,
  "core_arch::x86::avx512f::_mm256_mask_sllv_epi32": true,
  "core_arch::x86::avx512f::_mm256_mask_sllv_epi64": true,
  "core_arch::x86::avx512f::_mm256_mask_sqrt_pd": true,
  "core_arch::x86::avx512f::_mm256_mask_sqrt_ps": true,
  "core_arch::x86::avx512f::_mm256_mask_sra_epi32": true,
  "core_arch::x86::avx512f::_mm256_mask_sra_epi64": true,
  "core_arch::x86::avx512f::_mm256_mask_srav_epi32": true,
  "core_arch::x86::avx512f::_mm256_mask_srav_epi64": true,
  "core_arch::x86::avx512f::_mm256_mask_srl_epi32": true,
  "core_arch::x86::avx512f::_mm256_mask_srl_epi64": true,
  "core_arch::x86::avx512f::_mm256_mask_srlv_epi32": true,
  "core_arch::x86::avx512f::_mm256_mask_srlv_epi64": true,
  "core_arch::x86::avx512f::_mm256_mask_sub_epi32": true,
  "core_arch::x86::avx512f::_mm256_mask_sub_epi64": true,
  "core_arch::x86::avx512f::_mm256_mask_sub_pd": true,
  "core_arch::x86::avx512f::_mm256_mask_sub_ps": true,
  "core_arch::x86::avx512f::_mm256_mask_test_epi32_mask": true,
  "core_arch::x86::avx512f::_mm256_mask_test_epi64_mask": true,
  "core_arch::x86::avx512f::_mm256_mask_testn_epi32_mask": true,
  "core_arch::x86::avx512f::_mm256_mask_testn_epi64_mask": true,
  "core_arch::x86::avx512f::_mm256_mask_unpackhi_epi32": true,
  "core_arch::x86::avx512f::_mm256_mask_unpackhi_epi64": true,
  "core_arch::x86::avx512f::_mm256_mask_unpackhi_pd": true,
  "core_arch::x86::avx512f::_mm256_mask_unpackhi_ps": true,
  "core_arch::x86::avx512f::_mm256_mask_unpacklo_epi32": true,
  "core_arch::x86::avx512f::_mm256_mask_unpacklo_epi64": true,
  "core_arch::x86::avx512f::_mm256_mask_unpacklo_pd": true,
  "core_arch::x86::avx512f::_mm256_mask_unpacklo_ps": true,
  "core_arch::x86::avx512f::_mm256_mask_xor_epi32": true,
  "core_arch::x86::avx512f::_mm256_mask_xor_epi64": true,
  "core_arch::x86::avx512f::_mm256_maskz_abs_epi32": true,
  "core_arch::x86::avx512f::_mm256_maskz_abs_epi64": true,
  "core_arch::x86::avx512f::_mm256_maskz_add_epi32": true,
  "core_arch::x86::avx512f::_mm256_maskz_add_epi64": true,
  "core_arch::x86::avx512f::_mm256_maskz_add_pd": true,
  "core_arch::x86::avx512f::_mm256_maskz_add_ps": true,
  "core_arch::x86::avx512f::_mm256_maskz_and_epi32": true,
  "core_arch::x86::avx512f::_mm256_maskz_and_epi64": true,
  "core_arch::x86::avx512f::_mm256_maskz_andnot_epi32": true,
  "core_arch::x86::avx512f::_mm256_maskz_andnot_epi64": true,
  "core_arch::x86::avx512f::_mm256_maskz_broadcast_f32x4": true,
  "core_arch::x86::avx512f::_mm256_maskz_broadcast_i32x4": true,
  "core_arch::x86::avx512f::_mm256_maskz_broadcastd_epi32": true,
  "core_arch::x86::avx512f::_mm256_maskz_broadcastq_epi64": true,
  "core_arch::x86::avx512f::_mm256_maskz_broadcastsd_pd": true,
  "core_arch::x86::avx512f::_mm256_maskz_broadcastss_ps": true,
  "core_arch::x86::avx512f::_mm256_maskz_compress_epi32": true,
  "core_arch::x86::avx512f::_mm256_maskz_compress_epi64": true,
  "core_arch::x86::avx512f::_mm256_maskz_compress_pd": true,
  "core_arch::x86::avx512f::_mm256_maskz_compress_ps": true,
  "core_arch::x86::avx512f::_mm256_maskz_cvtepi16_epi32": true,
  "core_arch::x86::avx512f::_mm256_maskz_cvtepi16_epi64": true,
  "core_arch::x86::avx512f::_mm256_maskz_cvtepi32_epi16": true,
  "core_arch::x86::avx512f::_mm256_maskz_cvtepi32_epi64": true,
  "core_arch::x86::avx512f::_mm256_maskz_cvtepi32_epi8": true,
  "core_arch::x86::avx512f::_mm256_maskz_cvtepi32_pd": true,
  "core_arch::x86::avx512f::_mm256_maskz_cvtepi32_ps": true,
  "core_arch::x86::avx512f::_mm256_maskz_cvtepi64_epi16": true,
  "core_arch::x86::avx512f::_mm256_maskz_cvtepi64_epi32": true,
  "core_arch::x86::avx512f::_mm256_maskz_cvtepi64_epi8": true,
  "core_arch::x86::avx512f::_mm256_maskz_cvtepi8_epi32": true,
  "core_arch::x86::avx512f::_mm256_maskz_cvtepi8_epi64": true,
  "core_arch::x86::avx512f::_mm256_maskz_cvtepu16_epi32": true,
  "core_arch::x86::avx512f::_mm256_maskz_cvtepu16_epi64": true,
  "core_arch::x86::avx512f::_mm256_maskz_cvtepu32_epi64": true,
  "core_arch::x86::avx512f::_mm256_maskz_cvtepu32_pd": true,
  "core_arch::x86::avx512f::_mm256_maskz_cvtepu8_epi32": true,
  "core_arch::x86::avx512f::_mm256_maskz_cvtepu8_epi64": true,
  "core_arch::x86::avx512f::_mm256_maskz_cvtpd_epi32": true,
  "core_arch::x86::avx512f::_mm256_maskz_cvtpd_epu32": true,
  "core_arch::x86::avx512f::_mm256_maskz_cvtpd_ps": true,
  "core_arch::x86::avx512f::_mm256_maskz_cvtph_ps": true,
  "core_arch::x86::avx512f::_mm256_maskz_cvtps_epi32": true,
  "core_arch::x86::avx512f::_mm256_maskz_cvtps_epu32": true,
  "core_arch::x86::avx512f::_mm256_maskz_cvtsepi32_epi16": true,
  "core_arch::x86::avx512f::_mm256_maskz_cvtsepi32_epi8": true,
  "core_arch::x86::avx512f::_mm256_maskz_cvtsepi64_epi16": true,
  "core_arch::x86::avx512f::_mm256_maskz_cvtsepi64_epi32": true,
  "core_arch::x86::avx512f::_mm256_maskz_cvtsepi64_epi8": true,
  "core_arch::x86::avx512f::_mm256_maskz_cvttpd_epi32": true,
  "core_arch::x86::avx512f::_mm256_maskz_cvttpd_epu32": true,
  "core_arch::x86::avx512f::_mm256_maskz_cvttps_epi32": true,
  "core_arch::x86::avx512f::_mm256_maskz_cvttps_epu32": true,
  "core_arch::x86::avx512f::_mm256_maskz_cvtusepi32_epi16": true,
  "core_arch::x86::avx512f::_mm256_maskz_cvtusepi32_epi8": true,
  "core_arch::x86::avx512f::_mm256_maskz_cvtusepi64_epi16": true,
  "core_arch::x86::avx512f::_mm256_maskz_cvtusepi64_epi32": true,
  "core_arch::x86::avx512f::_mm256_maskz_cvtusepi64_epi8": true,
  "core_arch::x86::avx512f::_mm256_maskz_div_pd": true,
  "core_arch::x86::avx512f::_mm256_maskz_div_ps": true,
  "core_arch::x86::avx512f::_mm256_maskz_expand_epi32": true,
  "core_arch::x86::avx512f::_mm256_maskz_expand_epi64": true,
  "core_arch::x86::avx512f::_mm256_maskz_expand_pd": true,
  "core_arch::x86::avx512f::_mm256_maskz_expand_ps": true,
  "core_arch::x86::avx512f::_mm256_maskz_fmadd_pd": true,
  "core_arch::x86::avx512f::_mm256_maskz_fmadd_ps": true,
  "core_arch::x86::avx512f::_mm256_maskz_fmaddsub_pd": true,
  "core_arch::x86::avx512f::_mm256_maskz_fmaddsub_ps": true,
  "core_arch::x86::avx512f::_mm256_maskz_fmsub_pd": true,
  "core_arch::x86::avx512f::_mm256_maskz_fmsub_ps": true,
  "core_arch::x86::avx512f::_mm256_maskz_fmsubadd_pd": true,
  "core_arch::x86::avx512f::_mm256_maskz_fmsubadd_ps": true,
  "core_arch::x86::avx512f::_mm256_maskz_fnmadd_pd": true,
  "core_arch::x86::avx512f::_mm256_maskz_fnmadd_ps": true,
  "core_arch::x86::avx512f::_mm256_maskz_fnmsub_pd": true,
  "core_arch::x86::avx512f::_mm256_maskz_fnmsub_ps": true,
  "core_arch::x86::avx512f::_mm256_maskz_getexp_pd": true,
  "core_arch::x86::avx512f::_mm256_maskz_getexp_ps": true,
  "core_arch::x86::avx512f::_mm256_maskz_max_epi32": true,
  "core_arch::x86::avx512f::_mm256_maskz_max_epi64": true,
  "core_arch::x86::avx512f::_mm256_maskz_max_epu32": true,
  "core_arch::x86::avx512f::_mm256_maskz_max_epu64": true,
  "core_arch::x86::avx512f::_mm256_maskz_max_pd": true,
  "core_arch::x86::avx512f::_mm256_maskz_max_ps": true,
  "core_arch::x86::avx512f::_mm256_maskz_min_epi32": true,
  "core_arch::x86::avx512f::_mm256_maskz_min_epi64": true,
  "core_arch::x86::avx512f::_mm256_maskz_min_epu32": true,
  "core_arch::x86::avx512f::_mm256_maskz_min_epu64": true,
  "core_arch::x86::avx512f::_mm256_maskz_min_pd": true,
  "core_arch::x86::avx512f::_mm256_maskz_min_ps": true,
  "core_arch::x86::avx512f::_mm256_maskz_mov_epi32": true,
  "core_arch::x86::avx512f::_mm256_maskz_mov_epi64": true,
  "core_arch::x86::avx512f::_mm256_maskz_mov_pd": true,
  "core_arch::x86::avx512f::_mm256_maskz_mov_ps": true,
  "core_arch::x86::avx512f::_mm256_maskz_movedup_pd": true,
  "core_arch::x86::avx512f::_mm256_maskz_movehdup_ps": true,
  "core_arch::x86::avx512f::_mm256_maskz_moveldup_ps": true,
  "core_arch::x86::avx512f::_mm256_maskz_mul_epi32": true,
  "core_arch::x86::avx512f::_mm256_maskz_mul_epu32": true,
  "core_arch::x86::avx512f::_mm256_maskz_mul_pd": true,
  "core_arch::x86::avx512f::_mm256_maskz_mul_ps": true,
  "core_arch::x86::avx512f::_mm256_maskz_mullo_epi32": true,
  "core_arch::x86::avx512f::_mm256_maskz_or_epi32": true,
  "core_arch::x86::avx512f::_mm256_maskz_or_epi64": true,
  "core_arch::x86::avx512f::_mm256_maskz_permutevar_pd": true,
  "core_arch::x86::avx512f::_mm256_maskz_permutevar_ps": true,
  "core_arch::x86::avx512f::_mm256_maskz_permutex2var_epi32": true,
  "core_arch::x86::avx512f::_mm256_maskz_permutex2var_epi64": true,
  "core_arch::x86::avx512f::_mm256_maskz_permutex2var_pd": true,
  "core_arch::x86::avx512f::_mm256_maskz_permutex2var_ps": true,
  "core_arch::x86::avx512f::_mm256_maskz_permutexvar_epi32": true,
  "core_arch::x86::avx512f::_mm256_maskz_permutexvar_epi64": true,
  "core_arch::x86::avx512f::_mm256_maskz_permutexvar_pd": true,
  "core_arch::x86::avx512f::_mm256_maskz_permutexvar_ps": true,
  "core_arch::x86::avx512f::_mm256_maskz_rcp14_pd": true,
  "core_arch::x86::avx512f::_mm256_maskz_rcp14_ps": true,
  "core_arch::x86::avx512f::_mm256_maskz_rolv_epi32": true,
  "core_arch::x86::avx512f::_mm256_maskz_rolv_epi64": true,
  "core_arch::x86::avx512f::_mm256_maskz_rorv_epi32": true,
  "core_arch::x86::avx512f::_mm256_maskz_rorv_epi64": true,
  "core_arch::x86::avx512f::_mm256_maskz_rsqrt14_pd": true,
  "core_arch::x86::avx512f::_mm256_maskz_rsqrt14_ps": true,
  "core_arch::x86::avx512f::_mm256_maskz_scalef_pd": true,
  "core_arch::x86::avx512f::_mm256_maskz_scalef_ps": true,
  "core_arch::x86::avx512f::_mm256_maskz_set1_epi32": true,
  "core_arch::x86::avx512f::_mm256_maskz_set1_epi64": true,
  "core_arch::x86::avx512f::_mm256_maskz_sll_epi32": true,
  "core_arch::x86::avx512f::_mm256_maskz_sll_epi64": true,
  "core_arch::x86::avx512f::_mm256_maskz_sllv_epi32": true,
  "core_arch::x86::avx512f::_mm256_maskz_sllv_epi64": true,
  "core_arch::x86::avx512f::_mm256_maskz_sqrt_pd": true,
  "core_arch::x86::avx512f::_mm256_maskz_sqrt_ps": true,
  "core_arch::x86::avx512f::_mm256_maskz_sra_epi32": true,
  "core_arch::x86::avx512f::_mm256_maskz_sra_epi64": true,
  "core_arch::x86::avx512f::_mm256_maskz_srav_epi32": true,
  "core_arch::x86::avx512f::_mm256_maskz_srav_epi64": true,
  "core_arch::x86::avx512f::_mm256_maskz_srl_epi32": true,
  "core_arch::x86::avx512f::_mm256_maskz_srl_epi64": true,
  "core_arch::x86::avx512f::_mm256_maskz_srlv_epi32": true,
  "core_arch::x86::avx512f::_mm256_maskz_srlv_epi64": true,
  "core_arch::x86::avx512f::_mm256_maskz_sub_epi32": true,
  "core_arch::x86::avx512f::_mm256_maskz_sub_epi64": true,
  "core_arch::x86::avx512f::_mm256_maskz_sub_pd": true,
  "core_arch::x86::avx512f::_mm256_maskz_sub_ps": true,
  "core_arch::x86::avx512f::_mm256_maskz_unpackhi_epi32": true,
  "core_arch::x86::avx512f::_mm256_maskz_unpackhi_epi64": true,
  "core_arch::x86::avx512f::_mm256_maskz_unpackhi_pd": true,
  "core_arch::x86::avx512f::_mm256_maskz_unpackhi_ps": true,
  "core_arch::x86::avx512f::_mm256_maskz_unpacklo_epi32": true,
  "core_arch::x86::avx512f::_mm256_maskz_unpacklo_epi64": true,
  "core_arch::x86::avx512f::_mm256_maskz_unpacklo_pd": true,
  "core_arch::x86::avx512f::_mm256_maskz_unpacklo_ps": true,
  "core_arch::x86::avx512f::_mm256_maskz_xor_epi32": true,
  "core_arch::x86::avx512f::_mm256_maskz_xor_epi64": true,
  "core_arch::x86::avx512f::_mm256_max_epi64": true,
  "core_arch::x86::avx512f::_mm256_max_epu64": true,
  "core_arch::x86::avx512f::_mm256_min_epi64": true,
  "core_arch::x86::avx512f::_mm256_min_epu64": true,
  "core_arch::x86::avx512f::_mm256_or_epi32": true,
  "core_arch::x86::avx512f::_mm256_or_epi64": true,
  "core_arch::x86::avx512f::_mm256_permutex2var_epi32": true,
  "core_arch::x86::avx512f::_mm256_permutex2var_epi64": true,
  "core_arch::x86::avx512f::_mm256_permutex2var_pd": true,
  "core_arch::x86::avx512f::_mm256_permutex2var_ps": true,
  "core_arch::x86::avx512f::_mm256_permutexvar_epi32": true,
  "core_arch::x86::avx512f::_mm256_permutexvar_epi64": true,
  "core_arch::x86::avx512f::_mm256_permutexvar_pd": true,
  "core_arch::x86::avx512f::_mm256_permutexvar_ps": true,
  "core_arch::x86::avx512f::_mm256_rcp14_pd": true,
  "core_arch::x86::avx512f::_mm256_rcp14_ps": true,
  "core_arch::x86::avx512f::_mm256_rolv_epi32": true,
  "core_arch::x86::avx512f::_mm256_rolv_epi64": true,
  "core_arch::x86::avx512f::_mm256_rorv_epi32": true,
  "core_arch::x86::avx512f::_mm256_rorv_epi64": true,
  "core_arch::x86::avx512f::_mm256_rsqrt14_pd": true,
  "core_arch::x86::avx512f::_mm256_rsqrt14_ps": true,
  "core_arch::x86::avx512f::_mm256_scalef_pd": true,
  "core_arch::x86::avx512f::_mm256_scalef_ps": true,
  "core_arch::x86::avx512f::_mm256_sra_epi64": true,
  "core_arch::x86::avx512f::_mm256_srav_epi64": true,
  "core_arch::x86::avx512f::_mm256_test_epi32_mask": true,
  "core_arch::x86::avx512f::_mm256_test_epi64_mask": true,
  "core_arch::x86::avx512f::_mm256_testn_epi32_mask": true,
  "core_arch::x86::avx512f::_mm256_testn_epi64_mask": true,
  "core_arch::x86::avx512f::_mm256_xor_epi32": true,
  "core_arch::x86::avx512f::_mm256_xor_epi64": true,
  "core_arch::x86::avx512f::_mm512_abs_epi32": true,
  "core_arch::x86::avx512f::_mm512_abs_epi64": true,
  "core_arch::x86::avx512f::_mm512_abs_pd": true,
  "core_arch::x86::avx512f::_mm512_abs_ps": true,
  "core_arch::x86::avx512f::_mm512_add_epi32": true,
  "core_arch::x86::avx512f::_mm512_add_epi64": true,
  "core_arch::x86::avx512f::_mm512_add_pd": true,
  "core_arch::x86::avx512f::_mm512_add_ps": true,
  "core_arch::x86::avx512f::_mm512_and_epi32": true,
  "core_arch::x86::avx512f::_mm512_and_epi64": true,
  "core_arch::x86::avx512f::_mm512_and_si512": true,
  "core_arch::x86::avx512f::_mm512_andnot_epi32": true,
  "core_arch::x86::avx512f::_mm512_andnot_epi64": true,
  "core_arch::x86::avx512f::_mm512_andnot_si512": true,
  "core_arch::x86::avx512f::_mm512_broadcast_f32x4": true,
  "core_arch::x86::avx512f::_mm512_broadcast_f64x4": true,
  "core_arch::x86::avx512f::_mm512_broadcast_i32x4": true,
  "core_arch::x86::avx512f::_mm512_broadcast_i64x4": true,
  "core_arch::x86::avx512f::_mm512_broadcastd_epi32": true,
  "core_arch::x86::avx512f::_mm512_broadcastq_epi64": true,
  "core_arch::x86::avx512f::_mm512_broadcastsd_pd": true,
  "core_arch::x86::avx512f::_mm512_broadcastss_ps": true,
  "core_arch::x86::avx512f::_mm512_castpd128_pd512": true,
  "core_arch::x86::avx512f::_mm512_castpd256_pd512": true,
  "core_arch::x86::avx512f::_mm512_castpd512_pd128": true,
  "core_arch::x86::avx512f::_mm512_castpd512_pd256": true,
  "core_arch::x86::avx512f::_mm512_castpd_ps": true,
  "core_arch::x86::avx512f::_mm512_castpd_si512": true,
  "core_arch::x86::avx512f::_mm512_castps128_ps512": true,
  "core_arch::x86::avx512f::_mm512_castps256_ps512": true,
  "core_arch::x86::avx512f::_mm512_castps512_ps128": true,
  "core_arch::x86::avx512f::_mm512_castps512_ps256": true,
  "core_arch::x86::avx512f::_mm512_castps_pd": true,
  "core_arch::x86::avx512f::_mm512_castps_si512": true,
  "core_arch::x86::avx512f::_mm512_castsi128_si512": true,
  "core_arch::x86::avx512f::_mm512_castsi256_si512": true,
  "core_arch::x86::avx512f::_mm512_castsi512_pd": true,
  "core_arch::x86::avx512f::_mm512_castsi512_ps": true,
  "core_arch::x86::avx512f::_mm512_castsi512_si128": true,
  "core_arch::x86::avx512f::_mm512_castsi512_si256": true,
  "core_arch::x86::avx512f::_mm512_cmpeq_epi32_mask": true,
  "core_arch::x86::avx512f::_mm512_cmpeq_epi64_mask": true,
  "core_arch::x86::avx512f::_mm512_cmpeq_epu32_mask": true,
  "core_arch::x86::avx512f::_mm512_cmpeq_epu64_mask": true,
  "core_arch::x86::avx512f::_mm512_cmpeq_pd_mask": true,
  "core_arch::x86::avx512f::_mm512_cmpeq_ps_mask": true,
  "core_arch::x86::avx512f::_mm512_cmpge_epi32_mask": true,
  "core_arch::x86::avx512f::_mm512_cmpge_epi64_mask": true,
  "core_arch::x86::avx512f::_mm512_cmpge_epu32_mask": true,
  "core_arch::x86::avx512f::_mm512_cmpge_epu64_mask": true,
  "core_arch::x86::avx512f::_mm512_cmpgt_epi32_mask": true,
  "core_arch::x86::avx512f::_mm512_cmpgt_epi64_mask": true,
  "core_arch::x86::avx512f::_mm512_cmpgt_epu32_mask": true,
  "core_arch::x86::avx512f::_mm512_cmpgt_epu64_mask": true,
  "core_arch::x86::avx512f::_mm512_cmple_epi32_mask": true,
  "core_arch::x86::avx512f::_mm512_cmple_epi64_mask": true,
  "core_arch::x86::avx512f::_mm512_cmple_epu32_mask": true,
  "core_arch::x86::avx512f::_mm512_cmple_epu64_mask": true,
  "core_arch::x86::avx512f::_mm512_cmple_pd_mask": true,
  "core_arch::x86::avx512f::_mm512_cmple_ps_mask": true,
  "core_arch::x86::avx512f::_mm512_cmplt_epi32_mask": true,
  "core_arch::x86::avx512f::_mm512_cmplt_epi64_mask": true,
  "core_arch::x86::avx512f::_mm512_cmplt_epu32_mask": true,
  "core_arch::x86::avx512f::_mm512_cmplt_epu64_mask": true,
  "core_arch::x86::avx512f::_mm512_cmplt_pd_mask": true,
  "core_arch::x86::avx512f::_mm512_cmplt_ps_mask": true,
  "core_arch::x86::avx512f::_mm512_cmpneq_epi32_mask": true,
  "core_arch::x86::avx512f::_mm512_cmpneq_epi64_mask": true,
  "core_arch::x86::avx512f::_mm512_cmpneq_epu32_mask": true,
  "core_arch::x86::avx512f::_mm512_cmpneq_epu64_mask": true,
  "core_arch::x86::avx512f::_mm512_cmpneq_pd_mask": true,
  "core_arch::x86::avx512f::_mm512_cmpneq_ps_mask": true,
  "core_arch::x86::avx512f::_mm512_cmpnle_pd_mask": true,
  "core_arch::x86::avx512f::_mm512_cmpnle_ps_mask": true,
  "core_arch::x86::avx512f::_mm512_cmpnlt_pd_mask": true,
  "core_arch::x86::avx512f::_mm512_cmpnlt_ps_mask": true,
  "core_arch::x86::avx512f::_mm512_cmpord_pd_mask": true,
  "core_arch::x86::avx512f::_mm512_cmpord_ps_mask": true,
  "core_arch::x86::avx512f::_mm512_cmpunord_pd_mask": true,
  "core_arch::x86::avx512f::_mm512_cmpunord_ps_mask": true,
  "core_arch::x86::avx512f::_mm512_cvtepi16_epi32": true,
  "core_arch::x86::avx512f::_mm512_cvtepi16_epi64": true,
  "core_arch::x86::avx512f::_mm512_cvtepi32_epi16": true,
  "core_arch::x86::avx512f::_mm512_cvtepi32_epi64": true,
  "core_arch::x86::avx512f::_mm512_cvtepi32_epi8": true,
  "core_arch::x86::avx512f::_mm512_cvtepi32_pd": true,
  "core_arch::x86::avx512f::_mm512_cvtepi32_ps": true,
  "core_arch::x86::avx512f::_mm512_cvtepi32lo_pd": true,
  "core_arch::x86::avx512f::_mm512_cvtepi64_epi16": true,
  "core_arch::x86::avx512f::_mm512_cvtepi64_epi32": true,
  "core_arch::x86::avx512f::_mm512_cvtepi64_epi8": true,
  "core_arch::x86::avx512f::_mm512_cvtepi8_epi32": true,
  "core_arch::x86::avx512f::_mm512_cvtepi8_epi64": true,
  "core_arch::x86::avx512f::_mm512_cvtepu16_epi32": true,
  "core_arch::x86::avx512f::_mm512_cvtepu16_epi64": true,
  "core_arch::x86::avx512f::_mm512_cvtepu32_epi64": true,
  "core_arch::x86::avx512f::_mm512_cvtepu32_pd": true,
  "core_arch::x86::avx512f::_mm512_cvtepu32_ps": true,
  "core_arch::x86::avx512f::_mm512_cvtepu32lo_pd": true,
  "core_arch::x86::avx512f::_mm512_cvtepu8_epi32": true,
  "core_arch::x86::avx512f::_mm512_cvtepu8_epi64": true,
  "core_arch::x86::avx512f::_mm512_cvtpd_epi32": true,
  "core_arch::x86::avx512f::_mm512_cvtpd_epu32": true,
  "core_arch::x86::avx512f::_mm512_cvtpd_ps": true,
  "core_arch::x86::avx512f::_mm512_cvtpd_pslo": true,
  "core_arch::x86::avx512f::_mm512_cvtph_ps": true,
  "core_arch::x86::avx512f::_mm512_cvtps_epi32": true,
  "core_arch::x86::avx512f::_mm512_cvtps_epu32": true,
  "core_arch::x86::avx512f::_mm512_cvtps_pd": true,
  "core_arch::x86::avx512f::_mm512_cvtpslo_pd": true,
  "core_arch::x86::avx512f::_mm512_cvtsd_f64": true,
  "core_arch::x86::avx512f::_mm512_cvtsepi32_epi16": true,
  "core_arch::x86::avx512f::_mm512_cvtsepi32_epi8": true,
  "core_arch::x86::avx512f::_mm512_cvtsepi64_epi16": true,
  "core_arch::x86::avx512f::_mm512_cvtsepi64_epi32": true,
  "core_arch::x86::avx512f::_mm512_cvtsepi64_epi8": true,
  "core_arch::x86::avx512f::_mm512_cvtsi512_si32": true,
  "core_arch::x86::avx512f::_mm512_cvtss_f32": true,
  "core_arch::x86::avx512f::_mm512_cvttpd_epi32": true,
  "core_arch::x86::avx512f::_mm512_cvttpd_epu32": true,
  "core_arch::x86::avx512f::_mm512_cvttps_epi32": true,
  "core_arch::x86::avx512f::_mm512_cvttps_epu32": true,
  "core_arch::x86::avx512f::_mm512_cvtusepi32_epi16": true,
  "core_arch::x86::avx512f::_mm512_cvtusepi32_epi8": true,
  "core_arch::x86::avx512f::_mm512_cvtusepi64_epi16": true,
  "core_arch::x86::avx512f::_mm512_cvtusepi64_epi32": true,
  "core_arch::x86::avx512f::_mm512_cvtusepi64_epi8": true,
  "core_arch::x86::avx512f::_mm512_div_pd": true,
  "core_arch::x86::avx512f::_mm512_div_ps": true,
  "core_arch::x86::avx512f::_mm512_fmadd_pd": true,
  "core_arch::x86::avx512f::_mm512_fmadd_ps": true,
  "core_arch::x86::avx512f::_mm512_fmaddsub_pd": true,
  "core_arch::x86::avx512f::_mm512_fmaddsub_ps": true,
  "core_arch::x86::avx512f::_mm512_fmsub_pd": true,
  "core_arch::x86::avx512f::_mm512_fmsub_ps": true,
  "core_arch::x86::avx512f::_mm512_fmsubadd_pd": true,
  "core_arch::x86::avx512f::_mm512_fmsubadd_ps": true,
  "core_arch::x86::avx512f::_mm512_fnmadd_pd": true,
  "core_arch::x86::avx512f::_mm512_fnmadd_ps": true,
  "core_arch::x86::avx512f::_mm512_fnmsub_pd": true,
  "core_arch::x86::avx512f::_mm512_fnmsub_ps": true,
  "core_arch::x86::avx512f::_mm512_getexp_pd": true,
  "core_arch::x86::avx512f::_mm512_getexp_ps": true,
  "core_arch::x86::avx512f::_mm512_int2mask": true,
  "core_arch::x86::avx512f::_mm512_kand": true,
  "core_arch::x86::avx512f::_mm512_kandn": true,
  "core_arch::x86::avx512f::_mm512_kmov": true,
  "core_arch::x86::avx512f::_mm512_knot": true,
  "core_arch::x86::avx512f::_mm512_kor": true,
  "core_arch::x86::avx512f::_mm512_kortestc": true,
  "core_arch::x86::avx512f::_mm512_kortestz": true,
  "core_arch::x86::avx512f::_mm512_kunpackb": true,
  "core_arch::x86::avx512f::_mm512_kxnor": true,
  "core_arch::x86::avx512f::_mm512_kxor": true,
  "core_arch::x86::avx512f::_mm512_mask2_permutex2var_epi32": true,
  "core_arch::x86::avx512f::_mm512_mask2_permutex2var_epi64": true,
  "core_arch::x86::avx512f::_mm512_mask2_permutex2var_pd": true,
  "core_arch::x86::avx512f::_mm512_mask2_permutex2var_ps": true,
  "core_arch::x86::avx512f::_mm512_mask2int": true,
  "core_arch::x86::avx512f::_mm512_mask3_fmadd_pd": true,
  "core_arch::x86::avx512f::_mm512_mask3_fmadd_ps": true,
  "core_arch::x86::avx512f::_mm512_mask3_fmaddsub_pd": true,
  "core_arch::x86::avx512f::_mm512_mask3_fmaddsub_ps": true,
  "core_arch::x86::avx512f::_mm512_mask3_fmsub_pd": true,
  "core_arch::x86::avx512f::_mm512_mask3_fmsub_ps": true,
  "core_arch::x86::avx512f::_mm512_mask3_fmsubadd_pd": true,
  "core_arch::x86::avx512f::_mm512_mask3_fmsubadd_ps": true,
  "core_arch::x86::avx512f::_mm512_mask3_fnmadd_pd": true,
  "core_arch::x86::avx512f::_mm512_mask3_fnmadd_ps": true,
  "core_arch::x86::avx512f::_mm512_mask3_fnmsub_pd": true,
  "core_arch::x86::avx512f::_mm512_mask3_fnmsub_ps": true,
  "core_arch::x86::avx512f::_mm512_mask_abs_epi32": true,
  "core_arch::x86::avx512f::_mm512_mask_abs_epi64": true,
  "core_arch::x86::avx512f::_mm512_mask_abs_pd": true,
  "core_arch::x86::avx512f::_mm512_mask_abs_ps": true,
  "core_arch::x86::avx512f::_mm512_mask_add_epi32": true,
  "core_arch::x86::avx512f::_mm512_mask_add_epi64": true,
  "core_arch::x86::avx512f::_mm512_mask_add_pd": true,
  "core_arch::x86::avx512f::_mm512_mask_add_ps": true,
  "core_arch::x86::avx512f::_mm512_mask_and_epi32": true,
  "core_arch::x86::avx512f::_mm512_mask_and_epi64": true,
  "core_arch::x86::avx512f::_mm512_mask_andnot_epi32": true,
  "core_arch::x86::avx512f::_mm512_mask_andnot_epi64": true,
  "core_arch::x86::avx512f::_mm512_mask_blend_epi32": true,
  "core_arch::x86::avx512f::_mm512_mask_blend_epi64": true,
  "core_arch::x86::avx512f::_mm512_mask_blend_pd": true,
  "core_arch::x86::avx512f::_mm512_mask_blend_ps": true,
  "core_arch::x86::avx512f::_mm512_mask_broadcast_f32x4": true,
  "core_arch::x86::avx512f::_mm512_mask_broadcast_f64x4": true,
  "core_arch::x86::avx512f::_mm512_mask_broadcast_i32x4": true,
  "core_arch::x86::avx512f::_mm512_mask_broadcast_i64x4": true,
  "core_arch::x86::avx512f::_mm512_mask_broadcastd_epi32": true,
  "core_arch::x86::avx512f::_mm512_mask_broadcastq_epi64": true,
  "core_arch::x86::avx512f::_mm512_mask_broadcastsd_pd": true,
  "core_arch::x86::avx512f::_mm512_mask_broadcastss_ps": true,
  "core_arch::x86::avx512f::_mm512_mask_cmpeq_epi32_mask": true,
  "core_arch::x86::avx512f::_mm512_mask_cmpeq_epi64_mask": true,
  "core_arch::x86::avx512f::_mm512_mask_cmpeq_epu32_mask": true,
  "core_arch::x86::avx512f::_mm512_mask_cmpeq_epu64_mask": true,
  "core_arch::x86::avx512f::_mm512_mask_cmpeq_pd_mask": true,
  "core_arch::x86::avx512f::_mm512_mask_cmpeq_ps_mask": true,
  "core_arch::x86::avx512f::_mm512_mask_cmpge_epi32_mask": true,
  "core_arch::x86::avx512f::_mm512_mask_cmpge_epi64_mask": true,
  "core_arch::x86::avx512f::_mm512_mask_cmpge_epu32_mask": true,
  "core_arch::x86::avx512f::_mm512_mask_cmpge_epu64_mask": true,
  "core_arch::x86::avx512f::_mm512_mask_cmpgt_epi32_mask": true,
  "core_arch::x86::avx512f::_mm512_mask_cmpgt_epi64_mask": true,
  "core_arch::x86::avx512f::_mm512_mask_cmpgt_epu32_mask": true,
  "core_arch::x86::avx512f::_mm512_mask_cmpgt_epu64_mask": true,
  "core_arch::x86::avx512f::_mm512_mask_cmple_epi32_mask": true,
  "core_arch::x86::avx512f::_mm512_mask_cmple_epi64_mask": true,
  "core_arch::x86::avx512f::_mm512_mask_cmple_epu32_mask": true,
  "core_arch::x86::avx512f::_mm512_mask_cmple_epu64_mask": true,
  "core_arch::x86::avx512f::_mm512_mask_cmple_pd_mask": true,
  "core_arch::x86::avx512f::_mm512_mask_cmple_ps_mask": true,
  "core_arch::x86::avx512f::_mm512_mask_cmplt_epi32_mask": true,
  "core_arch::x86::avx512f::_mm512_mask_cmplt_epi64_mask": true,
  "core_arch::x86::avx512f::_mm512_mask_cmplt_epu32_mask": true,
  "core_arch::x86::avx512f::_mm512_mask_cmplt_epu64_mask": true,
  "core_arch::x86::avx512f::_mm512_mask_cmplt_pd_mask": true,
  "core_arch::x86::avx512f::_mm512_mask_cmplt_ps_mask": true,
  "core_arch::x86::avx512f::_mm512_mask_cmpneq_epi32_mask": true,
  "core_arch::x86::avx512f::_mm512_mask_cmpneq_epi64_mask": true,
  "core_arch::x86::avx512f::_mm512_mask_cmpneq_epu32_mask": true,
  "core_arch::x86::avx512f::_mm512_mask_cmpneq_epu64_mask": true,
  "core_arch::x86::avx512f::_mm512_mask_cmpneq_pd_mask": true,
  "core_arch::x86::avx512f::_mm512_mask_cmpneq_ps_mask": true,
  "core_arch::x86::avx512f::_mm512_mask_cmpnle_pd_mask": true,
  "core_arch::x86::avx512f::_mm512_mask_cmpnle_ps_mask": true,
  "core_arch::x86::avx512f::_mm512_mask_cmpnlt_pd_mask": true,
  "core_arch::x86::avx512f::_mm512_mask_cmpnlt_ps_mask": true,
  "core_arch::x86::avx512f::_mm512_mask_cmpord_pd_mask": true,
  "core_arch::x86::avx512f::_mm512_mask_cmpord_ps_mask": true,
  "core_arch::x86::avx512f::_mm512_mask_cmpunord_pd_mask": true,
  "core_arch::x86::avx512f::_mm512_mask_cmpunord_ps_mask": true,
  "core_arch::x86::avx512f::_mm512_mask_compress_epi32": true,
  "core_arch::x86::avx512f::_mm512_mask_compress_epi64": true,
  "core_arch::x86::avx512f::_mm512_mask_compress_pd": true,
  "core_arch::x86::avx512f::_mm512_mask_compress_ps": true,
  "core_arch::x86::avx512f::_mm512_mask_cvtepi16_epi32": true,
  "core_arch::x86::avx512f::_mm512_mask_cvtepi16_epi64": true,
  "core_arch::x86::avx512f::_mm512_mask_cvtepi32_epi16": true,
  "core_arch::x86::avx512f::_mm512_mask_cvtepi32_epi64": true,
  "core_arch::x86::avx512f::_mm512_mask_cvtepi32_epi8": true,
  "core_arch::x86::avx512f::_mm512_mask_cvtepi32_pd": true,
  "core_arch::x86::avx512f::_mm512_mask_cvtepi32_ps": true,
  "core_arch::x86::avx512f::_mm512_mask_cvtepi32lo_pd": true,
  "core_arch::x86::avx512f::_mm512_mask_cvtepi64_epi16": true,
  "core_arch::x86::avx512f::_mm512_mask_cvtepi64_epi32": true,
  "core_arch::x86::avx512f::_mm512_mask_cvtepi64_epi8": true,
  "core_arch::x86::avx512f::_mm512_mask_cvtepi8_epi32": true,
  "core_arch::x86::avx512f::_mm512_mask_cvtepi8_epi64": true,
  "core_arch::x86::avx512f::_mm512_mask_cvtepu16_epi32": true,
  "core_arch::x86::avx512f::_mm512_mask_cvtepu16_epi64": true,
  "core_arch::x86::avx512f::_mm512_mask_cvtepu32_epi64": true,
  "core_arch::x86::avx512f::_mm512_mask_cvtepu32_pd": true,
  "core_arch::x86::avx512f::_mm512_mask_cvtepu32_ps": true,
  "core_arch::x86::avx512f::_mm512_mask_cvtepu32lo_pd": true,
  "core_arch::x86::avx512f::_mm512_mask_cvtepu8_epi32": true,
  "core_arch::x86::avx512f::_mm512_mask_cvtepu8_epi64": true,
  "core_arch::x86::avx512f::_mm512_mask_cvtpd_epi32": true,
  "core_arch::x86::avx512f::_mm512_mask_cvtpd_epu32": true,
  "core_arch::x86::avx512f::_mm512_mask_cvtpd_ps": true,
  "core_arch::x86::avx512f::_mm512_mask_cvtpd_pslo": true,
  "core_arch::x86::avx512f::_mm512_mask_cvtph_ps": true,
  "core_arch::x86::avx512f::_mm512_mask_cvtps_epi32": true,
  "core_arch::x86::avx512f::_mm512_mask_cvtps_epu32": true,
  "core_arch::x86::avx512f::_mm512_mask_cvtps_pd": true,
  "core_arch::x86::avx512f::_mm512_mask_cvtpslo_pd": true,
  "core_arch::x86::avx512f::_mm512_mask_cvtsepi32_epi16": true,
  "core_arch::x86::avx512f::_mm512_mask_cvtsepi32_epi8": true,
  "core_arch::x86::avx512f::_mm512_mask_cvtsepi64_epi16": true,
  "core_arch::x86::avx512f::_mm512_mask_cvtsepi64_epi32": true,
  "core_arch::x86::avx512f::_mm512_mask_cvtsepi64_epi8": true,
  "core_arch::x86::avx512f::_mm512_mask_cvttpd_epi32": true,
  "core_arch::x86::avx512f::_mm512_mask_cvttpd_epu32": true,
  "core_arch::x86::avx512f::_mm512_mask_cvttps_epi32": true,
  "core_arch::x86::avx512f::_mm512_mask_cvttps_epu32": true,
  "core_arch::x86::avx512f::_mm512_mask_cvtusepi32_epi16": true,
  "core_arch::x86::avx512f::_mm512_mask_cvtusepi32_epi8": true,
  "core_arch::x86::avx512f::_mm512_mask_cvtusepi64_epi16": true,
  "core_arch::x86::avx512f::_mm512_mask_cvtusepi64_epi32": true,
  "core_arch::x86::avx512f::_mm512_mask_cvtusepi64_epi8": true,
  "core_arch::x86::avx512f::_mm512_mask_div_pd": true,
  "core_arch::x86::avx512f::_mm512_mask_div_ps": true,
  "core_arch::x86::avx512f::_mm512_mask_expand_epi32": true,
  "core_arch::x86::avx512f::_mm512_mask_expand_epi64": true,
  "core_arch::x86::avx512f::_mm512_mask_expand_pd": true,
  "core_arch::x86::avx512f::_mm512_mask_expand_ps": true,
  "core_arch::x86::avx512f::_mm512_mask_fmadd_pd": true,
  "core_arch::x86::avx512f::_mm512_mask_fmadd_ps": true,
  "core_arch::x86::avx512f::_mm512_mask_fmaddsub_pd": true,
  "core_arch::x86::avx512f::_mm512_mask_fmaddsub_ps": true,
  "core_arch::x86::avx512f::_mm512_mask_fmsub_pd": true,
  "core_arch::x86::avx512f::_mm512_mask_fmsub_ps": true,
  "core_arch::x86::avx512f::_mm512_mask_fmsubadd_pd": true,
  "core_arch::x86::avx512f::_mm512_mask_fmsubadd_ps": true,
  "core_arch::x86::avx512f::_mm512_mask_fnmadd_pd": true,
  "core_arch::x86::avx512f::_mm512_mask_fnmadd_ps": true,
  "core_arch::x86::avx512f::_mm512_mask_fnmsub_pd": true,
  "core_arch::x86::avx512f::_mm512_mask_fnmsub_ps": true,
  "core_arch::x86::avx512f::_mm512_mask_getexp_pd": true,
  "core_arch::x86::avx512f::_mm512_mask_getexp_ps": true,
  "core_arch::x86::avx512f::_mm512_mask_max_epi32": true,
  "core_arch::x86::avx512f::_mm512_mask_max_epi64": true,
  "core_arch::x86::avx512f::_mm512_mask_max_epu32": true,
  "core_arch::x86::avx512f::_mm512_mask_max_epu64": true,
  "core_arch::x86::avx512f::_mm512_mask_max_pd": true,
  "core_arch::x86::avx512f::_mm512_mask_max_ps": true,
  "core_arch::x86::avx512f::_mm512_mask_min_epi32": true,
  "core_arch::x86::avx512f::_mm512_mask_min_epi64": true,
  "core_arch::x86::avx512f::_mm512_mask_min_epu32": true,
  "core_arch::x86::avx512f::_mm512_mask_min_epu64": true,
  "core_arch::x86::avx512f::_mm512_mask_min_pd": true,
  "core_arch::x86::avx512f::_mm512_mask_min_ps": true,
  "core_arch::x86::avx512f::_mm512_mask_mov_epi32": true,
  "core_arch::x86::avx512f::_mm512_mask_mov_epi64": true,
  "core_arch::x86::avx512f::_mm512_mask_mov_pd": true,
  "core_arch::x86::avx512f::_mm512_mask_mov_ps": true,
  "core_arch::x86::avx512f::_mm512_mask_movedup_pd": true,
  "core_arch::x86::avx512f::_mm512_mask_movehdup_ps": true,
  "core_arch::x86::avx512f::_mm512_mask_moveldup_ps": true,
  "core_arch::x86::avx512f::_mm512_mask_mul_epi32": true,
  "core_arch::x86::avx512f::_mm512_mask_mul_epu32": true,
  "core_arch::x86::avx512f::_mm512_mask_mul_pd": true,
  "core_arch::x86::avx512f::_mm512_mask_mul_ps": true,
  "core_arch::x86::avx512f::_mm512_mask_mullo_epi32": true,
  "core_arch::x86::avx512f::_mm512_mask_mullox_epi64": true,
  "core_arch::x86::avx512f::_mm512_mask_or_epi32": true,
  "core_arch::x86::avx512f::_mm512_mask_or_epi64": true,
  "core_arch::x86::avx512f::_mm512_mask_permutevar_epi32": true,
  "core_arch::x86::avx512f::_mm512_mask_permutevar_pd": true,
  "core_arch::x86::avx512f::_mm512_mask_permutevar_ps": true,
  "core_arch::x86::avx512f::_mm512_mask_permutex2var_epi32": true,
  "core_arch::x86::avx512f::_mm512_mask_permutex2var_epi64": true,
  "core_arch::x86::avx512f::_mm512_mask_permutex2var_pd": true,
  "core_arch::x86::avx512f::_mm512_mask_permutex2var_ps": true,
  "core_arch::x86::avx512f::_mm512_mask_permutexvar_epi32": true,
  "core_arch::x86::avx512f::_mm512_mask_permutexvar_epi64": true,
  "core_arch::x86::avx512f::_mm512_mask_permutexvar_pd": true,
  "core_arch::x86::avx512f::_mm512_mask_permutexvar_ps": true,
  "core_arch::x86::avx512f::_mm512_mask_rcp14_pd": true,
  "core_arch::x86::avx512f::_mm512_mask_rcp14_ps": true,
  "core_arch::x86::avx512f::_mm512_mask_reduce_add_epi32": true,
  "core_arch::x86::avx512f::_mm512_mask_reduce_add_epi64": true,
  "core_arch::x86::avx512f::_mm512_mask_reduce_add_pd": true,
  "core_arch::x86::avx512f::_mm512_mask_reduce_add_ps": true,
  "core_arch::x86::avx512f::_mm512_mask_reduce_and_epi32": true,
  "core_arch::x86::avx512f::_mm512_mask_reduce_and_epi64": true,
  "core_arch::x86::avx512f::_mm512_mask_reduce_max_epi32": true,
  "core_arch::x86::avx512f::_mm512_mask_reduce_max_epi64": true,
  "core_arch::x86::avx512f::_mm512_mask_reduce_max_epu32": true,
  "core_arch::x86::avx512f::_mm512_mask_reduce_max_epu64": true,
  "core_arch::x86::avx512f::_mm512_mask_reduce_max_pd": true,
  "core_arch::x86::avx512f::_mm512_mask_reduce_max_ps": true,
  "core_arch::x86::avx512f::_mm512_mask_reduce_min_epi32": true,
  "core_arch::x86::avx512f::_mm512_mask_reduce_min_epi64": true,
  "core_arch::x86::avx512f::_mm512_mask_reduce_min_epu32": true,
  "core_arch::x86::avx512f::_mm512_mask_reduce_min_epu64": true,
  "core_arch::x86::avx512f::_mm512_mask_reduce_min_pd": true,
  "core_arch::x86::avx512f::_mm512_mask_reduce_min_ps": true,
  "core_arch::x86::avx512f::_mm512_mask_reduce_mul_epi32": true,
  "core_arch::x86::avx512f::_mm512_mask_reduce_mul_epi64": true,
  "core_arch::x86::avx512f::_mm512_mask_reduce_mul_pd": true,
  "core_arch::x86::avx512f::_mm512_mask_reduce_mul_ps": true,
  "core_arch::x86::avx512f::_mm512_mask_reduce_or_epi32": true,
  "core_arch::x86::avx512f::_mm512_mask_reduce_or_epi64": true,
  "core_arch::x86::avx512f::_mm512_mask_rolv_epi32": true,
  "core_arch::x86::avx512f::_mm512_mask_rolv_epi64": true,
  "core_arch::x86::avx512f::_mm512_mask_rorv_epi32": true,
  "core_arch::x86::avx512f::_mm512_mask_rorv_epi64": true,
  "core_arch::x86::avx512f::_mm512_mask_rsqrt14_pd": true,
  "core_arch::x86::avx512f::_mm512_mask_rsqrt14_ps": true,
  "core_arch::x86::avx512f::_mm512_mask_scalef_pd": true,
  "core_arch::x86::avx512f::_mm512_mask_scalef_ps": true,
  "core_arch::x86::avx512f::_mm512_mask_set1_epi32": true,
  "core_arch::x86::avx512f::_mm512_mask_set1_epi64": true,
  "core_arch::x86::avx512f::_mm512_mask_sll_epi32": true,
  "core_arch::x86::avx512f::_mm512_mask_sll_epi64": true,
  "core_arch::x86::avx512f::_mm512_mask_sllv_epi32": true,
  "core_arch::x86::avx512f::_mm512_mask_sllv_epi64": true,
  "core_arch::x86::avx512f::_mm512_mask_sqrt_pd": true,
  "core_arch::x86::avx512f::_mm512_mask_sqrt_ps": true,
  "core_arch::x86::avx512f::_mm512_mask_sra_epi32": true,
  "core_arch::x86::avx512f::_mm512_mask_sra_epi64": true,
  "core_arch::x86::avx512f::_mm512_mask_srav_epi32": true,
  "core_arch::x86::avx512f::_mm512_mask_srav_epi64": true,
  "core_arch::x86::avx512f::_mm512_mask_srl_epi32": true,
  "core_arch::x86::avx512f::_mm512_mask_srl_epi64": true,
  "core_arch::x86::avx512f::_mm512_mask_srlv_epi32": true,
  "core_arch::x86::avx512f::_mm512_mask_srlv_epi64": true,
  "core_arch::x86::avx512f::_mm512_mask_sub_epi32": true,
  "core_arch::x86::avx512f::_mm512_mask_sub_epi64": true,
  "core_arch::x86::avx512f::_mm512_mask_sub_pd": true,
  "core_arch::x86::avx512f::_mm512_mask_sub_ps": true,
  "core_arch::x86::avx512f::_mm512_mask_test_epi32_mask": true,
  "core_arch::x86::avx512f::_mm512_mask_test_epi64_mask": true,
  "core_arch::x86::avx512f::_mm512_mask_testn_epi32_mask": true,
  "core_arch::x86::avx512f::_mm512_mask_testn_epi64_mask": true,
  "core_arch::x86::avx512f::_mm512_mask_unpackhi_epi32": true,
  "core_arch::x86::avx512f::_mm512_mask_unpackhi_epi64": true,
  "core_arch::x86::avx512f::_mm512_mask_unpackhi_pd": true,
  "core_arch::x86::avx512f::_mm512_mask_unpackhi_ps": true,
  "core_arch::x86::avx512f::_mm512_mask_unpacklo_epi32": true,
  "core_arch::x86::avx512f::_mm512_mask_unpacklo_epi64": true,
  "core_arch::x86::avx512f::_mm512_mask_unpacklo_pd": true,
  "core_arch::x86::avx512f::_mm512_mask_unpacklo_ps": true,
  "core_arch::x86::avx512f::_mm512_mask_xor_epi32": true,
  "core_arch::x86::avx512f::_mm512_mask_xor_epi64": true,
  "core_arch::x86::avx512f::_mm512_maskz_abs_epi32": true,
  "core_arch::x86::avx512f::_mm512_maskz_abs_epi64": true,
  "core_arch::x86::avx512f::_mm512_maskz_add_epi32": true,
  "core_arch::x86::avx512f::_mm512_maskz_add_epi64": true,
  "core_arch::x86::avx512f::_mm512_maskz_add_pd": true,
  "core_arch::x86::avx512f::_mm512_maskz_add_ps": true,
  "core_arch::x86::avx512f::_mm512_maskz_and_epi32": true,
  "core_arch::x86::avx512f::_mm512_maskz_and_epi64": true,
  "core_arch::x86::avx512f::_mm512_maskz_andnot_epi32": true,
  "core_arch::x86::avx512f::_mm512_maskz_andnot_epi64": true,
  "core_arch::x86::avx512f::_mm512_maskz_broadcast_f32x4": true,
  "core_arch::x86::avx512f::_mm512_maskz_broadcast_f64x4": true,
  "core_arch::x86::avx512f::_mm512_maskz_broadcast_i32x4": true,
  "core_arch::x86::avx512f::_mm512_maskz_broadcast_i64x4": true,
  "core_arch::x86::avx512f::_mm512_maskz_broadcastd_epi32": true,
  "core_arch::x86::avx512f::_mm512_maskz_broadcastq_epi64": true,
  "core_arch::x86::avx512f::_mm512_maskz_broadcastsd_pd": true,
  "core_arch::x86::avx512f::_mm512_maskz_broadcastss_ps": true,
  "core_arch::x86::avx512f::_mm512_maskz_compress_epi32": true,
  "core_arch::x86::avx512f::_mm512_maskz_compress_epi64": true,
  "core_arch::x86::avx512f::_mm512_maskz_compress_pd": true,
  "core_arch::x86::avx512f::_mm512_maskz_compress_ps": true,
  "core_arch::x86::avx512f::_mm512_maskz_cvtepi16_epi32": true,
  "core_arch::x86::avx512f::_mm512_maskz_cvtepi16_epi64": true,
  "core_arch::x86::avx512f::_mm512_maskz_cvtepi32_epi16": true,
  "core_arch::x86::avx512f::_mm512_maskz_cvtepi32_epi64": true,
  "core_arch::x86::avx512f::_mm512_maskz_cvtepi32_epi8": true,
  "core_arch::x86::avx512f::_mm512_maskz_cvtepi32_pd": true,
  "core_arch::x86::avx512f::_mm512_maskz_cvtepi32_ps": true,
  "core_arch::x86::avx512f::_mm512_maskz_cvtepi64_epi16": true,
  "core_arch::x86::avx512f::_mm512_maskz_cvtepi64_epi32": true,
  "core_arch::x86::avx512f::_mm512_maskz_cvtepi64_epi8": true,
  "core_arch::x86::avx512f::_mm512_maskz_cvtepi8_epi32": true,
  "core_arch::x86::avx512f::_mm512_maskz_cvtepi8_epi64": true,
  "core_arch::x86::avx512f::_mm512_maskz_cvtepu16_epi32": true,
  "core_arch::x86::avx512f::_mm512_maskz_cvtepu16_epi64": true,
  "core_arch::x86::avx512f::_mm512_maskz_cvtepu32_epi64": true,
  "core_arch::x86::avx512f::_mm512_maskz_cvtepu32_pd": true,
  "core_arch::x86::avx512f::_mm512_maskz_cvtepu32_ps": true,
  "core_arch::x86::avx512f::_mm512_maskz_cvtepu8_epi32": true,
  "core_arch::x86::avx512f::_mm512_maskz_cvtepu8_epi64": true,
  "core_arch::x86::avx512f::_mm512_maskz_cvtpd_epi32": true,
  "core_arch::x86::avx512f::_mm512_maskz_cvtpd_epu32": true,
  "core_arch::x86::avx512f::_mm512_maskz_cvtpd_ps": true,
  "core_arch::x86::avx512f::_mm512_maskz_cvtph_ps": true,
  "core_arch::x86::avx512f::_mm512_maskz_cvtps_epi32": true,
  "core_arch::x86::avx512f::_mm512_maskz_cvtps_epu32": true,
  "core_arch::x86::avx512f::_mm512_maskz_cvtps_pd": true,
  "core_arch::x86::avx512f::_mm512_maskz_cvtsepi32_epi16": true,
  "core_arch::x86::avx512f::_mm512_maskz_cvtsepi32_epi8": true,
  "core_arch::x86::avx512f::_mm512_maskz_cvtsepi64_epi16": true,
  "core_arch::x86::avx512f::_mm512_maskz_cvtsepi64_epi32": true,
  "core_arch::x86::avx512f::_mm512_maskz_cvtsepi64_epi8": true,
  "core_arch::x86::avx512f::_mm512_maskz_cvttpd_epi32": true,
  "core_arch::x86::avx512f::_mm512_maskz_cvttpd_epu32": true,
  "core_arch::x86::avx512f::_mm512_maskz_cvttps_epi32": true,
  "core_arch::x86::avx512f::_mm512_maskz_cvttps_epu32": true,
  "core_arch::x86::avx512f::_mm512_maskz_cvtusepi32_epi16": true,
  "core_arch::x86::avx512f::_mm512_maskz_cvtusepi32_epi8": true,
  "core_arch::x86::avx512f::_mm512_maskz_cvtusepi64_epi16": true,
  "core_arch::x86::avx512f::_mm512_maskz_cvtusepi64_epi32": true,
  "core_arch::x86::avx512f::_mm512_maskz_cvtusepi64_epi8": true,
  "core_arch::x86::avx512f::_mm512_maskz_div_pd": true,
  "core_arch::x86::avx512f::_mm512_maskz_div_ps": true,
  "core_arch::x86::avx512f::_mm512_maskz_expand_epi32": true,
  "core_arch::x86::avx512f::_mm512_maskz_expand_epi64": true,
  "core_arch::x86::avx512f::_mm512_maskz_expand_pd": true,
  "core_arch::x86::avx512f::_mm512_maskz_expand_ps": true,
  "core_arch::x86::avx512f::_mm512_maskz_fmadd_pd": true,
  "core_arch::x86::avx512f::_mm512_maskz_fmadd_ps": true,
  "core_arch::x86::avx512f::_mm512_maskz_fmaddsub_pd": true,
  "core_arch::x86::avx512f::_mm512_maskz_fmaddsub_ps": true,
  "core_arch::x86::avx512f::_mm512_maskz_fmsub_pd": true,
  "core_arch::x86::avx512f::_mm512_maskz_fmsub_ps": true,
  "core_arch::x86::avx512f::_mm512_maskz_fmsubadd_pd": true,
  "core_arch::x86::avx512f::_mm512_maskz_fmsubadd_ps": true,
  "core_arch::x86::avx512f::_mm512_maskz_fnmadd_pd": true,
  "core_arch::x86::avx512f::_mm512_maskz_fnmadd_ps": true,
  "core_arch::x86::avx512f::_mm512_maskz_fnmsub_pd": true,
  "core_arch::x86::avx512f::_mm512_maskz_fnmsub_ps": true,
  "core_arch::x86::avx512f::_mm512_maskz_getexp_pd": true,
  "core_arch::x86::avx512f::_mm512_maskz_getexp_ps": true,
  "core_arch::x86::avx512f::_mm512_maskz_max_epi32": true,
  "core_arch::x86::avx512f::_mm512_maskz_max_epi64": true,
  "core_arch::x86::avx512f::_mm512_maskz_max_epu32": true,
  "core_arch::x86::avx512f::_mm512_maskz_max_epu64": true,
  "core_arch::x86::avx512f::_mm512_maskz_max_pd": true,
  "core_arch::x86::avx512f::_mm512_maskz_max_ps": true,
  "core_arch::x86::avx512f::_mm512_maskz_min_epi32": true,
  "core_arch::x86::avx512f::_mm512_maskz_min_epi64": true,
  "core_arch::x86::avx512f::_mm512_maskz_min_epu32": true,
  "core_arch::x86::avx512f::_mm512_maskz_min_epu64": true,
  "core_arch::x86::avx512f::_mm512_maskz_min_pd": true,
  "core_arch::x86::avx512f::_mm512_maskz_min_ps": true,
  "core_arch::x86::avx512f::_mm512_maskz_mov_epi32": true,
  "core_arch::x86::avx512f::_mm512_maskz_mov_epi64": true,
  "core_arch::x86::avx512f::_mm512_maskz_mov_pd": true,
  "core_arch::x86::avx512f::_mm512_maskz_mov_ps": true,
  "core_arch::x86::avx512f::_mm512_maskz_movedup_pd": true,
  "core_arch::x86::avx512f::_mm512_maskz_movehdup_ps": true,
  "core_arch::x86::avx512f::_mm512_maskz_moveldup_ps": true,
  "core_arch::x86::avx512f::_mm512_maskz_mul_epi32": true,
  "core_arch::x86::avx512f::_mm512_maskz_mul_epu32": true,
  "core_arch::x86::avx512f::_mm512_maskz_mul_pd": true,
  "core_arch::x86::avx512f::_mm512_maskz_mul_ps": true,
  "core_arch::x86::avx512f::_mm512_maskz_mullo_epi32": true,
  "core_arch::x86::avx512f::_mm512_maskz_or_epi32": true,
  "core_arch::x86::avx512f::_mm512_maskz_or_epi64": true,
  "core_arch::x86::avx512f::_mm512_maskz_permutevar_pd": true,
  "core_arch::x86::avx512f::_mm512_maskz_permutevar_ps": true,
  "core_arch::x86::avx512f::_mm512_maskz_permutex2var_epi32": true,
  "core_arch::x86::avx512f::_mm512_maskz_permutex2var_epi64": true,
  "core_arch::x86::avx512f::_mm512_maskz_permutex2var_pd": true,
  "core_arch::x86::avx512f::_mm512_maskz_permutex2var_ps": true,
  "core_arch::x86::avx512f::_mm512_maskz_permutexvar_epi32": true,
  "core_arch::x86::avx512f::_mm512_maskz_permutexvar_epi64": true,
  "core_arch::x86::avx512f::_mm512_maskz_permutexvar_pd": true,
  "core_arch::x86::avx512f::_mm512_maskz_permutexvar_ps": true,
  "core_arch::x86::avx512f::_mm512_maskz_rcp14_pd": true,
  "core_arch::x86::avx512f::_mm512_maskz_rcp14_ps": true,
  "core_arch::x86::avx512f::_mm512_maskz_rolv_epi32": true,
  "core_arch::x86::avx512f::_mm512_maskz_rolv_epi64": true,
  "core_arch::x86::avx512f::_mm512_maskz_rorv_epi32": true,
  "core_arch::x86::avx512f::_mm512_maskz_rorv_epi64": true,
  "core_arch::x86::avx512f::_mm512_maskz_rsqrt14_pd": true,
  "core_arch::x86::avx512f::_mm512_maskz_rsqrt14_ps": true,
  "core_arch::x86::avx512f::_mm512_maskz_scalef_pd": true,
  "core_arch::x86::avx512f::_mm512_maskz_scalef_ps": true,
  "core_arch::x86::avx512f::_mm512_maskz_set1_epi32": true,
  "core_arch::x86::avx512f::_mm512_maskz_set1_epi64": true,
  "core_arch::x86::avx512f::_mm512_maskz_sll_epi32": true,
  "core_arch::x86::avx512f::_mm512_maskz_sll_epi64": true,
  "core_arch::x86::avx512f::_mm512_maskz_sllv_epi32": true,
  "core_arch::x86::avx512f::_mm512_maskz_sllv_epi64": true,
  "core_arch::x86::avx512f::_mm512_maskz_sqrt_pd": true,
  "core_arch::x86::avx512f::_mm512_maskz_sqrt_ps": true,
  "core_arch::x86::avx512f::_mm512_maskz_sra_epi32": true,
  "core_arch::x86::avx512f::_mm512_maskz_sra_epi64": true,
  "core_arch::x86::avx512f::_mm512_maskz_srav_epi32": true,
  "core_arch::x86::avx512f::_mm512_maskz_srav_epi64": true,
  "core_arch::x86::avx512f::_mm512_maskz_srl_epi32": true,
  "core_arch::x86::avx512f::_mm512_maskz_srl_epi64": true,
  "core_arch::x86::avx512f::_mm512_maskz_srlv_epi32": true,
  "core_arch::x86::avx512f::_mm512_maskz_srlv_epi64": true,
  "core_arch::x86::avx512f::_mm512_maskz_sub_epi32": true,
  "core_arch::x86::avx512f::_mm512_maskz_sub_epi64": true,
  "core_arch::x86::avx512f::_mm512_maskz_sub_pd": true,
  "core_arch::x86::avx512f::_mm512_maskz_sub_ps": true,
  "core_arch::x86::avx512f::_mm512_maskz_unpackhi_epi32": true,
  "core_arch::x86::avx512f::_mm512_maskz_unpackhi_epi64": true,
  "core_arch::x86::avx512f::_mm512_maskz_unpackhi_pd": true,
  "core_arch::x86::avx512f::_mm512_maskz_unpackhi_ps": true,
  "core_arch::x86::avx512f::_mm512_maskz_unpacklo_epi32": true,
  "core_arch::x86::avx512f::_mm512_maskz_unpacklo_epi64": true,
  "core_arch::x86::avx512f::_mm512_maskz_unpacklo_pd": true,
  "core_arch::x86::avx512f::_mm512_maskz_unpacklo_ps": true,
  "core_arch::x86::avx512f::_mm512_maskz_xor_epi32": true,
  "core_arch::x86::avx512f::_mm512_maskz_xor_epi64": true,
  "core_arch::x86::avx512f::_mm512_max_epi32": true,
  "core_arch::x86::avx512f::_mm512_max_epi64": true,
  "core_arch::x86::avx512f::_mm512_max_epu32": true,
  "core_arch::x86::avx512f::_mm512_max_epu64": true,
  "core_arch::x86::avx512f::_mm512_max_pd": true,
  "core_arch::x86::avx512f::_mm512_max_ps": true,
  "core_arch::x86::avx512f::_mm512_min_epi32": true,
  "core_arch::x86::avx512f::_mm512_min_epi64": true,
  "core_arch::x86::avx512f::_mm512_min_epu32": true,
  "core_arch::x86::avx512f::_mm512_min_epu64": true,
  "core_arch::x86::avx512f::_mm512_min_pd": true,
  "core_arch::x86::avx512f::_mm512_min_ps": true,
  "core_arch::x86::avx512f::_mm512_movedup_pd": true,
  "core_arch::x86::avx512f::_mm512_movehdup_ps": true,
  "core_arch::x86::avx512f::_mm512_moveldup_ps": true,
  "core_arch::x86::avx512f::_mm512_mul_epi32": true,
  "core_arch::x86::avx512f::_mm512_mul_epu32": true,
  "core_arch::x86::avx512f::_mm512_mul_pd": true,
  "core_arch::x86::avx512f::_mm512_mul_ps": true,
  "core_arch::x86::avx512f::_mm512_mullo_epi32": true,
  "core_arch::x86::avx512f::_mm512_mullox_epi64": true,
  "core_arch::x86::avx512f::_mm512_or_epi32": true,
  "core_arch::x86::avx512f::_mm512_or_epi64": true,
  "core_arch::x86::avx512f::_mm512_or_si512": true,
  "core_arch::x86::avx512f::_mm512_permutevar_epi32": true,
  "core_arch::x86::avx512f::_mm512_permutevar_pd": true,
  "core_arch::x86::avx512f::_mm512_permutevar_ps": true,
  "core_arch::x86::avx512f::_mm512_permutex2var_epi32": true,
  "core_arch::x86::avx512f::_mm512_permutex2var_epi64": true,
  "core_arch::x86::avx512f::_mm512_permutex2var_pd": true,
  "core_arch::x86::avx512f::_mm512_permutex2var_ps": true,
  "core_arch::x86::avx512f::_mm512_permutexvar_epi32": true,
  "core_arch::x86::avx512f::_mm512_permutexvar_epi64": true,
  "core_arch::x86::avx512f::_mm512_permutexvar_pd": true,
  "core_arch::x86::avx512f::_mm512_permutexvar_ps": true,
  "core_arch::x86::avx512f::_mm512_rcp14_pd": true,
  "core_arch::x86::avx512f::_mm512_rcp14_ps": true,
  "core_arch::x86::avx512f::_mm512_reduce_add_epi32": true,
  "core_arch::x86::avx512f::_mm512_reduce_add_epi64": true,
  "core_arch::x86::avx512f::_mm512_reduce_add_pd": true,
  "core_arch::x86::avx512f::_mm512_reduce_add_ps": true,
  "core_arch::x86::avx512f::_mm512_reduce_and_epi32": true,
  "core_arch::x86::avx512f::_mm512_reduce_and_epi64": true,
  "core_arch::x86::avx512f::_mm512_reduce_max_epi32": true,
  "core_arch::x86::avx512f::_mm512_reduce_max_epi64": true,
  "core_arch::x86::avx512f::_mm512_reduce_max_epu32": true,
  "core_arch::x86::avx512f::_mm512_reduce_max_epu64": true,
  "core_arch::x86::avx512f::_mm512_reduce_max_pd": true,
  "core_arch::x86::avx512f::_mm512_reduce_max_ps": true,
  "core_arch::x86::avx512f::_mm512_reduce_min_epi32": true,
  "core_arch::x86::avx512f::_mm512_reduce_min_epi64": true,
  "core_arch::x86::avx512f::_mm512_reduce_min_epu32": true,
  "core_arch::x86::avx512f::_mm512_reduce_min_epu64": true,
  "core_arch::x86::avx512f::_mm512_reduce_min_pd": true,
  "core_arch::x86::avx512f::_mm512_reduce_min_ps": true,
  "core_arch::x86::avx512f::_mm512_reduce_mul_epi32": true,
  "core_arch::x86::avx512f::_mm512_reduce_mul_epi64": true,
  "core_arch::x86::avx512f::_mm512_reduce_mul_pd": true,
  "core_arch::x86::avx512f::_mm512_reduce_mul_ps": true,
  "core_arch::x86::avx512f::_mm512_reduce_or_epi32": true,
  "core_arch::x86::avx512f::_mm512_reduce_or_epi64": true,
  "core_arch::x86::avx512f::_mm512_rolv_epi32": true,
  "core_arch::x86::avx512f::_mm512_rolv_epi64": true,
  "core_arch::x86::avx512f::_mm512_rorv_epi32": true,
  "core_arch::x86::avx512f::_mm512_rorv_epi64": true,
  "core_arch::x86::avx512f::_mm512_rsqrt14_pd": true,
  "core_arch::x86::avx512f::_mm512_rsqrt14_ps": true,
  "core_arch::x86::avx512f::_mm512_scalef_pd": true,
  "core_arch::x86::avx512f::_mm512_scalef_ps": true,
  "core_arch::x86::avx512f::_mm512_set1_epi16": true,
  "core_arch::x86::avx512f::_mm512_set1_epi32": true,
  "core_arch::x86::avx512f::_mm512_set1_epi64": true,
  "core_arch::x86::avx512f::_mm512_set1_epi8": true,
  "core_arch::x86::avx512f::_mm512_set1_pd": true,
  "core_arch::x86::avx512f::_mm512_set1_ps": true,
  "core_arch::x86::avx512f::_mm512_set4_epi32": true,
  "core_arch::x86::avx512f::_mm512_set4_epi64": true,
  "core_arch::x86::avx512f::_mm512_set4_pd": true,
  "core_arch::x86::avx512f::_mm512_set4_ps": true,
  "core_arch::x86::avx512f::_mm512_set_epi16": true,
  "core_arch::x86::avx512f::_mm512_set_epi32": true,
  "core_arch::x86::avx512f::_mm512_set_epi64": true,
  "core_arch::x86::avx512f::_mm512_set_epi8": true,
  "core_arch::x86::avx512f::_mm512_set_pd": true,
  "core_arch::x86::avx512f::_mm512_set_ps": true,
  "core_arch::x86::avx512f::_mm512_setr4_epi32": true,
  "core_arch::x86::avx512f::_mm512_setr4_epi64": true,
  "core_arch::x86::avx512f::_mm512_setr4_pd": true,
  "core_arch::x86::avx512f::_mm512_setr4_ps": true,
  "core_arch::x86::avx512f::_mm512_setr_epi32": true,
  "core_arch::x86::avx512f::_mm512_setr_epi64": true,
  "core_arch::x86::avx512f::_mm512_setr_pd": true,
  "core_arch::x86::avx512f::_mm512_setr_ps": true,
  "core_arch::x86::avx512f::_mm512_setzero": true,
  "core_arch::x86::avx512f::_mm512_setzero_epi32": true,
  "core_arch::x86::avx512f::_mm512_setzero_pd": true,
  "core_arch::x86::avx512f::_mm512_setzero_ps": true,
  "core_arch::x86::avx512f::_mm512_setzero_si512": true,
  "core_arch::x86::avx512f::_mm512_sll_epi32": true,
  "core_arch::x86::avx512f::_mm512_sll_epi64": true,
  "core_arch::x86::avx512f::_mm512_sllv_epi32": true,
  "core_arch::x86::avx512f::_mm512_sllv_epi64": true,
  "core_arch::x86::avx512f::_mm512_sqrt_pd": true,
  "core_arch::x86::avx512f::_mm512_sqrt_ps": true,
  "core_arch::x86::avx512f::_mm512_sra_epi32": true,
  "core_arch::x86::avx512f::_mm512_sra_epi64": true,
  "core_arch::x86::avx512f::_mm512_srav_epi32": true,
  "core_arch::x86::avx512f::_mm512_srav_epi64": true,
  "core_arch::x86::avx512f::_mm512_srl_epi32": true,
  "core_arch::x86::avx512f::_mm512_srl_epi64": true,
  "core_arch::x86::avx512f::_mm512_srlv_epi32": true,
  "core_arch::x86::avx512f::_mm512_srlv_epi64": true,
  "core_arch::x86::avx512f::_mm512_sub_epi32": true,
  "core_arch::x86::avx512f::_mm512_sub_epi64": true,
  "core_arch::x86::avx512f::_mm512_sub_pd": true,
  "core_arch::x86::avx512f::_mm512_sub_ps": true,
  "core_arch::x86::avx512f::_mm512_test_epi32_mask": true,
  "core_arch::x86::avx512f::_mm512_test_epi64_mask": true,
  "core_arch::x86::avx512f::_mm512_testn_epi32_mask": true,
  "core_arch::x86::avx512f::_mm512_testn_epi64_mask": true,
  "core_arch::x86::avx512f::_mm512_undefined": true,
  "core_arch::x86::avx512f::_mm512_undefined_epi32": true,
  "core_arch::x86::avx512f::_mm512_undefined_pd": true,
  "core_arch::x86::avx512f::_mm512_undefined_ps": true,
  "core_arch::x86::avx512f::_mm512_unpackhi_epi32": true,
  "core_arch::x86::avx512f::_mm512_unpackhi_epi64": true,
  "core_arch::x86::avx512f::_mm512_unpackhi_pd": true,
  "core_arch::x86::avx512f::_mm512_unpackhi_ps": true,
  "core_arch::x86::avx512f::_mm512_unpacklo_epi32": true,
  "core_arch::x86::avx512f::_mm512_unpacklo_epi64": true,
  "core_arch::x86::avx512f::_mm512_unpacklo_pd": true,
  "core_arch::x86::avx512f::_mm512_unpacklo_ps": true,
  "core_arch::x86::avx512f::_mm512_xor_epi32": true,
  "core_arch::x86::avx512f::_mm512_xor_epi64": true,
  "core_arch::x86::avx512f::_mm512_xor_si512": true,
  "core_arch::x86::avx512f::_mm512_zextpd128_pd512": true,
  "core_arch::x86::avx512f::_mm512_zextpd256_pd512": true,
  "core_arch::x86::avx512f::_mm512_zextps128_ps512": true,
  "core_arch::x86::avx512f::_mm512_zextps256_ps512": true,
  "core_arch::x86::avx512f::_mm512_zextsi128_si512": true,
  "core_arch::x86::avx512f::_mm512_zextsi256_si512": true,
  "core_arch::x86::avx512f::_mm_abs_epi64": true,
  "core_arch::x86::avx512f::_mm_cmpeq_epi32_mask": true,
  "core_arch::x86::avx512f::_mm_cmpeq_epi64_mask": true,
  "core_arch::x86::avx512f::_mm_cmpeq_epu32_mask": true,
  "core_arch::x86::avx512f::_mm_cmpeq_epu64_mask": true,
  "core_arch::x86::avx512f::_mm_cmpge_epi32_mask": true,
  "core_arch::x86::avx512f::_mm_cmpge_epi64_mask": true,
  "core_arch::x86::avx512f::_mm_cmpge_epu32_mask": true,
  "core_arch::x86::avx512f::_mm_cmpge_epu64_mask": true,
  "core_arch::x86::avx512f::_mm_cmpgt_epi32_mask": true,
  "core_arch::x86::avx512f::_mm_cmpgt_epi64_mask": true,
  "core_arch::x86::avx512f::_mm_cmpgt_epu32_mask": true,
  "core_arch::x86::avx512f::_mm_cmpgt_epu64_mask": true,
  "core_arch::x86::avx512f::_mm_cmple_epi32_mask": true,
  "core_arch::x86::avx512f::_mm_cmple_epi64_mask": true,
  "core_arch::x86::avx512f::_mm_cmple_epu32_mask": true,
  "core_arch::x86::avx512f::_mm_cmple_epu64_mask": true,
  "core_arch::x86::avx512f::_mm_cmplt_epi32_mask": true,
  "core_arch::x86::avx512f::_mm_cmplt_epi64_mask": true,
  "core_arch::x86::avx512f::_mm_cmplt_epu32_mask": true,
  "core_arch::x86::avx512f::_mm_cmplt_epu64_mask": true,
  "core_arch::x86::avx512f::_mm_cmpneq_epi32_mask": true,
  "core_arch::x86::avx512f::_mm_cmpneq_epi64_mask": true,
  "core_arch::x86::avx512f::_mm_cmpneq_epu32_mask": true,
  "core_arch::x86::avx512f::_mm_cmpneq_epu64_mask": true,
  "core_arch::x86::avx512f::_mm_cvtepi32_epi16": true,
  "core_arch::x86::avx512f::_mm_cvtepi32_epi8": true,
  "core_arch::x86::avx512f::_mm_cvtepi64_epi16": true,
  "core_arch::x86::avx512f::_mm_cvtepi64_epi32": true,
  "core_arch::x86::avx512f::_mm_cvtepi64_epi8": true,
  "core_arch::x86::avx512f::_mm_cvtepu32_pd": true,
  "core_arch::x86::avx512f::_mm_cvti32_sd": true,
  "core_arch::x86::avx512f::_mm_cvti32_ss": true,
  "core_arch::x86::avx512f::_mm_cvtpd_epu32": true,
  "core_arch::x86::avx512f::_mm_cvtps_epu32": true,
  "core_arch::x86::avx512f::_mm_cvtsd_i32": true,
  "core_arch::x86::avx512f::_mm_cvtsd_u32": true,
  "core_arch::x86::avx512f::_mm_cvtsepi32_epi16": true,
  "core_arch::x86::avx512f::_mm_cvtsepi32_epi8": true,
  "core_arch::x86::avx512f::_mm_cvtsepi64_epi16": true,
  "core_arch::x86::avx512f::_mm_cvtsepi64_epi32": true,
  "core_arch::x86::avx512f::_mm_cvtsepi64_epi8": true,
  "core_arch::x86::avx512f::_mm_cvtss_i32": true,
  "core_arch::x86::avx512f::_mm_cvtss_u32": true,
  "core_arch::x86::avx512f::_mm_cvttpd_epu32": true,
  "core_arch::x86::avx512f::_mm_cvttps_epu32": true,
  "core_arch::x86::avx512f::_mm_cvttsd_i32": true,
  "core_arch::x86::avx512f::_mm_cvttsd_u32": true,
  "core_arch::x86::avx512f::_mm_cvttss_i32": true,
  "core_arch::x86::avx512f::_mm_cvttss_u32": true,
  "core_arch::x86::avx512f::_mm_cvtu32_sd": true,
  "core_arch::x86::avx512f::_mm_cvtu32_ss": true,
  "core_arch::x86::avx512f::_mm_cvtusepi32_epi16": true,
  "core_arch::x86::avx512f::_mm_cvtusepi32_epi8": true,
  "core_arch::x86::avx512f::_mm_cvtusepi64_epi16": true,
  "core_arch::x86::avx512f::_mm_cvtusepi64_epi32": true,
  "core_arch::x86::avx512f::_mm_cvtusepi64_epi8": true,
  "core_arch::x86::avx512f::_mm_getexp_pd": true,
  "core_arch::x86::avx512f::_mm_getexp_ps": true,
  "core_arch::x86::avx512f::_mm_getexp_sd": true,
  "core_arch::x86::avx512f::_mm_getexp_ss": true,
  "core_arch::x86::avx512f::_mm_mask2_permutex2var_epi32": true,
  "core_arch::x86::avx512f::_mm_mask2_permutex2var_epi64": true,
  "core_arch::x86::avx512f::_mm_mask2_permutex2var_pd": true,
  "core_arch::x86::avx512f::_mm_mask2_permutex2var_ps": true,
  "core_arch::x86::avx512f::_mm_mask3_fmadd_pd": true,
  "core_arch::x86::avx512f::_mm_mask3_fmadd_ps": true,
  "core_arch::x86::avx512f::_mm_mask3_fmadd_sd": true,
  "core_arch::x86::avx512f::_mm_mask3_fmadd_ss": true,
  "core_arch::x86::avx512f::_mm_mask3_fmaddsub_pd": true,
  "core_arch::x86::avx512f::_mm_mask3_fmaddsub_ps": true,
  "core_arch::x86::avx512f::_mm_mask3_fmsub_pd": true,
  "core_arch::x86::avx512f::_mm_mask3_fmsub_ps": true,
  "core_arch::x86::avx512f::_mm_mask3_fmsub_sd": true,
  "core_arch::x86::avx512f::_mm_mask3_fmsub_ss": true,
  "core_arch::x86::avx512f::_mm_mask3_fmsubadd_pd": true,
  "core_arch::x86::avx512f::_mm_mask3_fmsubadd_ps": true,
  "core_arch::x86::avx512f::_mm_mask3_fnmadd_pd": true,
  "core_arch::x86::avx512f::_mm_mask3_fnmadd_ps": true,
  "core_arch::x86::avx512f::_mm_mask3_fnmadd_sd": true,
  "core_arch::x86::avx512f::_mm_mask3_fnmadd_ss": true,
  "core_arch::x86::avx512f::_mm_mask3_fnmsub_pd": true,
  "core_arch::x86::avx512f::_mm_mask3_fnmsub_ps": true,
  "core_arch::x86::avx512f::_mm_mask3_fnmsub_sd": true,
  "core_arch::x86::avx512f::_mm_mask3_fnmsub_ss": true,
  "core_arch::x86::avx512f::_mm_mask_abs_epi32": true,
  "core_arch::x86::avx512f::_mm_mask_abs_epi64": true,
  "core_arch::x86::avx512f::_mm_mask_add_epi32": true,
  "core_arch::x86::avx512f::_mm_mask_add_epi64": true,
  "core_arch::x86::avx512f::_mm_mask_add_pd": true,
  "core_arch::x86::avx512f::_mm_mask_add_ps": true,
  "core_arch::x86::avx512f::_mm_mask_add_sd": true,
  "core_arch::x86::avx512f::_mm_mask_add_ss": true,
  "core_arch::x86::avx512f::_mm_mask_and_epi32": true,
  "core_arch::x86::avx512f::_mm_mask_and_epi64": true,
  "core_arch::x86::avx512f::_mm_mask_andnot_epi32": true,
  "core_arch::x86::avx512f::_mm_mask_andnot_epi64": true,
  "core_arch::x86::avx512f::_mm_mask_blend_epi32": true,
  "core_arch::x86::avx512f::_mm_mask_blend_epi64": true,
  "core_arch::x86::avx512f::_mm_mask_blend_pd": true,
  "core_arch::x86::avx512f::_mm_mask_blend_ps": true,
  "core_arch::x86::avx512f::_mm_mask_broadcastd_epi32": true,
  "core_arch::x86::avx512f::_mm_mask_broadcastq_epi64": true,
  "core_arch::x86::avx512f::_mm_mask_broadcastss_ps": true,
  "core_arch::x86::avx512f::_mm_mask_cmpeq_epi32_mask": true,
  "core_arch::x86::avx512f::_mm_mask_cmpeq_epi64_mask": true,
  "core_arch::x86::avx512f::_mm_mask_cmpeq_epu32_mask": true,
  "core_arch::x86::avx512f::_mm_mask_cmpeq_epu64_mask": true,
  "core_arch::x86::avx512f::_mm_mask_cmpge_epi32_mask": true,
  "core_arch::x86::avx512f::_mm_mask_cmpge_epi64_mask": true,
  "core_arch::x86::avx512f::_mm_mask_cmpge_epu32_mask": true,
  "core_arch::x86::avx512f::_mm_mask_cmpge_epu64_mask": true,
  "core_arch::x86::avx512f::_mm_mask_cmpgt_epi32_mask": true,
  "core_arch::x86::avx512f::_mm_mask_cmpgt_epi64_mask": true,
  "core_arch::x86::avx512f::_mm_mask_cmpgt_epu32_mask": true,
  "core_arch::x86::avx512f::_mm_mask_cmpgt_epu64_mask": true,
  "core_arch::x86::avx512f::_mm_mask_cmple_epi32_mask": true,
  "core_arch::x86::avx512f::_mm_mask_cmple_epi64_mask": true,
  "core_arch::x86::avx512f::_mm_mask_cmple_epu32_mask": true,
  "core_arch::x86::avx512f::_mm_mask_cmple_epu64_mask": true,
  "core_arch::x86::avx512f::_mm_mask_cmplt_epi32_mask": true,
  "core_arch::x86::avx512f::_mm_mask_cmplt_epi64_mask": true,
  "core_arch::x86::avx512f::_mm_mask_cmplt_epu32_mask": true,
  "core_arch::x86::avx512f::_mm_mask_cmplt_epu64_mask": true,
  "core_arch::x86::avx512f::_mm_mask_cmpneq_epi32_mask": true,
  "core_arch::x86::avx512f::_mm_mask_cmpneq_epi64_mask": true,
  "core_arch::x86::avx512f::_mm_mask_cmpneq_epu32_mask": true,
  "core_arch::x86::avx512f::_mm_mask_cmpneq_epu64_mask": true,
  "core_arch::x86::avx512f::_mm_mask_compress_epi32": true,
  "core_arch::x86::avx512f::_mm_mask_compress_epi64": true,
  "core_arch::x86::avx512f::_mm_mask_compress_pd": true,
  "core_arch::x86::avx512f::_mm_mask_compress_ps": true,
  "core_arch::x86::avx512f::_mm_mask_cvtepi16_epi32": true,
  "core_arch::x86::avx512f::_mm_mask_cvtepi16_epi64": true,
  "core_arch::x86::avx512f::_mm_mask_cvtepi32_epi16": true,
  "core_arch::x86::avx512f::_mm_mask_cvtepi32_epi64": true,
  "core_arch::x86::avx512f::_mm_mask_cvtepi32_epi8": true,
  "core_arch::x86::avx512f::_mm_mask_cvtepi32_pd": true,
  "core_arch::x86::avx512f::_mm_mask_cvtepi32_ps": true,
  "core_arch::x86::avx512f::_mm_mask_cvtepi64_epi16": true,
  "core_arch::x86::avx512f::_mm_mask_cvtepi64_epi32": true,
  "core_arch::x86::avx512f::_mm_mask_cvtepi64_epi8": true,
  "core_arch::x86::avx512f::_mm_mask_cvtepi8_epi32": true,
  "core_arch::x86::avx512f::_mm_mask_cvtepi8_epi64": true,
  "core_arch::x86::avx512f::_mm_mask_cvtepu16_epi32": true,
  "core_arch::x86::avx512f::_mm_mask_cvtepu16_epi64": true,
  "core_arch::x86::avx512f::_mm_mask_cvtepu32_epi64": true,
  "core_arch::x86::avx512f::_mm_mask_cvtepu32_pd": true,
  "core_arch::x86::avx512f::_mm_mask_cvtepu8_epi32": true,
  "core_arch::x86::avx512f::_mm_mask_cvtepu8_epi64": true,
  "core_arch::x86::avx512f::_mm_mask_cvtpd_epi32": true,
  "core_arch::x86::avx512f::_mm_mask_cvtpd_epu32": true,
  "core_arch::x86::avx512f::_mm_mask_cvtpd_ps": true,
  "core_arch::x86::avx512f::_mm_mask_cvtph_ps": true,
  "core_arch::x86::avx512f::_mm_mask_cvtps_epi32": true,
  "core_arch::x86::avx512f::_mm_mask_cvtps_epu32": true,
  "core_arch::x86::avx512f::_mm_mask_cvtsd_ss": true,
  "core_arch::x86::avx512f::_mm_mask_cvtsepi32_epi16": true,
  "core_arch::x86::avx512f::_mm_mask_cvtsepi32_epi8": true,
  "core_arch::x86::avx512f::_mm_mask_cvtsepi64_epi16": true,
  "core_arch::x86::avx512f::_mm_mask_cvtsepi64_epi32": true,
  "core_arch::x86::avx512f::_mm_mask_cvtsepi64_epi8": true,
  "core_arch::x86::avx512f::_mm_mask_cvtss_sd": true,
  "core_arch::x86::avx512f::_mm_mask_cvttpd_epi32": true,
  "core_arch::x86::avx512f::_mm_mask_cvttpd_epu32": true,
  "core_arch::x86::avx512f::_mm_mask_cvttps_epi32": true,
  "core_arch::x86::avx512f::_mm_mask_cvttps_epu32": true,
  "core_arch::x86::avx512f::_mm_mask_cvtusepi32_epi16": true,
  "core_arch::x86::avx512f::_mm_mask_cvtusepi32_epi8": true,
  "core_arch::x86::avx512f::_mm_mask_cvtusepi64_epi16": true,
  "core_arch::x86::avx512f::_mm_mask_cvtusepi64_epi32": true,
  "core_arch::x86::avx512f::_mm_mask_cvtusepi64_epi8": true,
  "core_arch::x86::avx512f::_mm_mask_div_pd": true,
  "core_arch::x86::avx512f::_mm_mask_div_ps": true,
  "core_arch::x86::avx512f::_mm_mask_div_sd": true,
  "core_arch::x86::avx512f::_mm_mask_div_ss": true,
  "core_arch::x86::avx512f::_mm_mask_expand_epi32": true,
  "core_arch::x86::avx512f::_mm_mask_expand_epi64": true,
  "core_arch::x86::avx512f::_mm_mask_expand_pd": true,
  "core_arch::x86::avx512f::_mm_mask_expand_ps": true,
  "core_arch::x86::avx512f::_mm_mask_fmadd_pd": true,
  "core_arch::x86::avx512f::_mm_mask_fmadd_ps": true,
  "core_arch::x86::avx512f::_mm_mask_fmadd_sd": true,
  "core_arch::x86::avx512f::_mm_mask_fmadd_ss": true,
  "core_arch::x86::avx512f::_mm_mask_fmaddsub_pd": true,
  "core_arch::x86::avx512f::_mm_mask_fmaddsub_ps": true,
  "core_arch::x86::avx512f::_mm_mask_fmsub_pd": true,
  "core_arch::x86::avx512f::_mm_mask_fmsub_ps": true,
  "core_arch::x86::avx512f::_mm_mask_fmsub_sd": true,
  "core_arch::x86::avx512f::_mm_mask_fmsub_ss": true,
  "core_arch::x86::avx512f::_mm_mask_fmsubadd_pd": true,
  "core_arch::x86::avx512f::_mm_mask_fmsubadd_ps": true,
  "core_arch::x86::avx512f::_mm_mask_fnmadd_pd": true,
  "core_arch::x86::avx512f::_mm_mask_fnmadd_ps": true,
  "core_arch::x86::avx512f::_mm_mask_fnmadd_sd": true,
  "core_arch::x86::avx512f::_mm_mask_fnmadd_ss": true,
  "core_arch::x86::avx512f::_mm_mask_fnmsub_pd": true,
  "core_arch::x86::avx512f::_mm_mask_fnmsub_ps": true,
  "core_arch::x86::avx512f::_mm_mask_fnmsub_sd": true,
  "core_arch::x86::avx512f::_mm_mask_fnmsub_ss": true,
  "core_arch::x86::avx512f::_mm_mask_getexp_pd": true,
  "core_arch::x86::avx512f::_mm_mask_getexp_ps": true,
  "core_arch::x86::avx512f::_mm_mask_getexp_sd": true,
  "core_arch::x86::avx512f::_mm_mask_getexp_ss": true,
  "core_arch::x86::avx512f::_mm_mask_max_epi32": true,
  "core_arch::x86::avx512f::_mm_mask_max_epi64": true,
  "core_arch::x86::avx512f::_mm_mask_max_epu32": true,
  "core_arch::x86::avx512f::_mm_mask_max_epu64": true,
  "core_arch::x86::avx512f::_mm_mask_max_pd": true,
  "core_arch::x86::avx512f::_mm_mask_max_ps": true,
  "core_arch::x86::avx512f::_mm_mask_max_sd": true,
  "core_arch::x86::avx512f::_mm_mask_max_ss": true,
  "core_arch::x86::avx512f::_mm_mask_min_epi32": true,
  "core_arch::x86::avx512f::_mm_mask_min_epi64": true,
  "core_arch::x86::avx512f::_mm_mask_min_epu32": true,
  "core_arch::x86::avx512f::_mm_mask_min_epu64": true,
  "core_arch::x86::avx512f::_mm_mask_min_pd": true,
  "core_arch::x86::avx512f::_mm_mask_min_ps": true,
  "core_arch::x86::avx512f::_mm_mask_min_sd": true,
  "core_arch::x86::avx512f::_mm_mask_min_ss": true,
  "core_arch::x86::avx512f::_mm_mask_mov_epi32": true,
  "core_arch::x86::avx512f::_mm_mask_mov_epi64": true,
  "core_arch::x86::avx512f::_mm_mask_mov_pd": true,
  "core_arch::x86::avx512f::_mm_mask_mov_ps": true,
  "core_arch::x86::avx512f::_mm_mask_move_sd": true,
  "core_arch::x86::avx512f::_mm_mask_move_ss": true,
  "core_arch::x86::avx512f::_mm_mask_movedup_pd": true,
  "core_arch::x86::avx512f::_mm_mask_movehdup_ps": true,
  "core_arch::x86::avx512f::_mm_mask_moveldup_ps": true,
  "core_arch::x86::avx512f::_mm_mask_mul_epi32": true,
  "core_arch::x86::avx512f::_mm_mask_mul_epu32": true,
  "core_arch::x86::avx512f::_mm_mask_mul_pd": true,
  "core_arch::x86::avx512f::_mm_mask_mul_ps": true,
  "core_arch::x86::avx512f::_mm_mask_mul_sd": true,
  "core_arch::x86::avx512f::_mm_mask_mul_ss": true,
  "core_arch::x86::avx512f::_mm_mask_mullo_epi32": true,
  "core_arch::x86::avx512f::_mm_mask_or_epi32": true,
  "core_arch::x86::avx512f::_mm_mask_or_epi64": true,
  "core_arch::x86::avx512f::_mm_mask_permutevar_pd": true,
  "core_arch::x86::avx512f::_mm_mask_permutevar_ps": true,
  "core_arch::x86::avx512f::_mm_mask_permutex2var_epi32": true,
  "core_arch::x86::avx512f::_mm_mask_permutex2var_epi64": true,
  "core_arch::x86::avx512f::_mm_mask_permutex2var_pd": true,
  "core_arch::x86::avx512f::_mm_mask_permutex2var_ps": true,
  "core_arch::x86::avx512f::_mm_mask_rcp14_pd": true,
  "core_arch::x86::avx512f::_mm_mask_rcp14_ps": true,
  "core_arch::x86::avx512f::_mm_mask_rcp14_sd": true,
  "core_arch::x86::avx512f::_mm_mask_rcp14_ss": true,
  "core_arch::x86::avx512f::_mm_mask_rolv_epi32": true,
  "core_arch::x86::avx512f::_mm_mask_rolv_epi64": true,
  "core_arch::x86::avx512f::_mm_mask_rorv_epi32": true,
  "core_arch::x86::avx512f::_mm_mask_rorv_epi64": true,
  "core_arch::x86::avx512f::_mm_mask_rsqrt14_pd": true,
  "core_arch::x86::avx512f::_mm_mask_rsqrt14_ps": true,
  "core_arch::x86::avx512f::_mm_mask_rsqrt14_sd": true,
  "core_arch::x86::avx512f::_mm_mask_rsqrt14_ss": true,
  "core_arch::x86::avx512f::_mm_mask_scalef_pd": true,
  "core_arch::x86::avx512f::_mm_mask_scalef_ps": true,
  "core_arch::x86::avx512f::_mm_mask_scalef_sd": true,
  "core_arch::x86::avx512f::_mm_mask_scalef_ss": true,
  "core_arch::x86::avx512f::_mm_mask_set1_epi32": true,
  "core_arch::x86::avx512f::_mm_mask_set1_epi64": true,
  "core_arch::x86::avx512f::_mm_mask_sll_epi32": true,
  "core_arch::x86::avx512f::_mm_mask_sll_epi64": true,
  "core_arch::x86::avx512f::_mm_mask_sllv_epi32": true,
  "core_arch::x86::avx512f::_mm_mask_sllv_epi64": true,
  "core_arch::x86::avx512f::_mm_mask_sqrt_pd": true,
  "core_arch::x86::avx512f::_mm_mask_sqrt_ps": true,
  "core_arch::x86::avx512f::_mm_mask_sqrt_sd": true,
  "core_arch::x86::avx512f::_mm_mask_sqrt_ss": true,
  "core_arch::x86::avx512f::_mm_mask_sra_epi32": true,
  "core_arch::x86::avx512f::_mm_mask_sra_epi64": true,
  "core_arch::x86::avx512f::_mm_mask_srav_epi32": true,
  "core_arch::x86::avx512f::_mm_mask_srav_epi64": true,
  "core_arch::x86::avx512f::_mm_mask_srl_epi32": true,
  "core_arch::x86::avx512f::_mm_mask_srl_epi64": true,
  "core_arch::x86::avx512f::_mm_mask_srlv_epi32": true,
  "core_arch::x86::avx512f::_mm_mask_srlv_epi64": true,
  "core_arch::x86::avx512f::_mm_mask_sub_epi32": true,
  "core_arch::x86::avx512f::_mm_mask_sub_epi64": true,
  "core_arch::x86::avx512f::_mm_mask_sub_pd": true,
  "core_arch::x86::avx512f::_mm_mask_sub_ps": true,
  "core_arch::x86::avx512f::_mm_mask_sub_sd": true,
  "core_arch::x86::avx512f::_mm_mask_sub_ss": true,
  "core_arch::x86::avx512f::_mm_mask_test_epi32_mask": true,
  "core_arch::x86::avx512f::_mm_mask_test_epi64_mask": true,
  "core_arch::x86::avx512f::_mm_mask_testn_epi32_mask": true,
  "core_arch::x86::avx512f::_mm_mask_testn_epi64_mask": true,
  "core_arch::x86::avx512f::_mm_mask_unpackhi_epi32": true,
  "core_arch::x86::avx512f::_mm_mask_unpackhi_epi64": true,
  "core_arch::x86::avx512f::_mm_mask_unpackhi_pd": true,
  "core_arch::x86::avx512f::_mm_mask_unpackhi_ps": true,
  "core_arch::x86::avx512f::_mm_mask_unpacklo_epi32": true,
  "core_arch::x86::avx512f::_mm_mask_unpacklo_epi64": true,
  "core_arch::x86::avx512f::_mm_mask_unpacklo_pd": true,
  "core_arch::x86::avx512f::_mm_mask_unpacklo_ps": true,
  "core_arch::x86::avx512f::_mm_mask_xor_epi32": true,
  "core_arch::x86::avx512f::_mm_mask_xor_epi64": true,
  "core_arch::x86::avx512f::_mm_maskz_abs_epi32": true,
  "core_arch::x86::avx512f::_mm_maskz_abs_epi64": true,
  "core_arch::x86::avx512f::_mm_maskz_add_epi32": true,
  "core_arch::x86::avx512f::_mm_maskz_add_epi64": true,
  "core_arch::x86::avx512f::_mm_maskz_add_pd": true,
  "core_arch::x86::avx512f::_mm_maskz_add_ps": true,
  "core_arch::x86::avx512f::_mm_maskz_add_sd": true,
  "core_arch::x86::avx512f::_mm_maskz_add_ss": true,
  "core_arch::x86::avx512f::_mm_maskz_and_epi32": true,
  "core_arch::x86::avx512f::_mm_maskz_and_epi64": true,
  "core_arch::x86::avx512f::_mm_maskz_andnot_epi32": true,
  "core_arch::x86::avx512f::_mm_maskz_andnot_epi64": true,
  "core_arch::x86::avx512f::_mm_maskz_broadcastd_epi32": true,
  "core_arch::x86::avx512f::_mm_maskz_broadcastq_epi64": true,
  "core_arch::x86::avx512f::_mm_maskz_broadcastss_ps": true,
  "core_arch::x86::avx512f::_mm_maskz_compress_epi32": true,
  "core_arch::x86::avx512f::_mm_maskz_compress_epi64": true,
  "core_arch::x86::avx512f::_mm_maskz_compress_pd": true,
  "core_arch::x86::avx512f::_mm_maskz_compress_ps": true,
  "core_arch::x86::avx512f::_mm_maskz_cvtepi16_epi32": true,
  "core_arch::x86::avx512f::_mm_maskz_cvtepi16_epi64": true,
  "core_arch::x86::avx512f::_mm_maskz_cvtepi32_epi16": true,
  "core_arch::x86::avx512f::_mm_maskz_cvtepi32_epi64": true,
  "core_arch::x86::avx512f::_mm_maskz_cvtepi32_epi8": true,
  "core_arch::x86::avx512f::_mm_maskz_cvtepi32_pd": true,
  "core_arch::x86::avx512f::_mm_maskz_cvtepi32_ps": true,
  "core_arch::x86::avx512f::_mm_maskz_cvtepi64_epi16": true,
  "core_arch::x86::avx512f::_mm_maskz_cvtepi64_epi32": true,
  "core_arch::x86::avx512f::_mm_maskz_cvtepi64_epi8": true,
  "core_arch::x86::avx512f::_mm_maskz_cvtepi8_epi32": true,
  "core_arch::x86::avx512f::_mm_maskz_cvtepi8_epi64": true,
  "core_arch::x86::avx512f::_mm_maskz_cvtepu16_epi32": true,
  "core_arch::x86::avx512f::_mm_maskz_cvtepu16_epi64": true,
  "core_arch::x86::avx512f::_mm_maskz_cvtepu32_epi64": true,
  "core_arch::x86::avx512f::_mm_maskz_cvtepu32_pd": true,
  "core_arch::x86::avx512f::_mm_maskz_cvtepu8_epi32": true,
  "core_arch::x86::avx512f::_mm_maskz_cvtepu8_epi64": true,
  "core_arch::x86::avx512f::_mm_maskz_cvtpd_epi32": true,
  "core_arch::x86::avx512f::_mm_maskz_cvtpd_epu32": true,
  "core_arch::x86::avx512f::_mm_maskz_cvtpd_ps": true,
  "core_arch::x86::avx512f::_mm_maskz_cvtph_ps": true,
  "core_arch::x86::avx512f::_mm_maskz_cvtps_epi32": true,
  "core_arch::x86::avx512f::_mm_maskz_cvtps_epu32": true,
  "core_arch::x86::avx512f::_mm_maskz_cvtsd_ss": true,
  "core_arch::x86::avx512f::_mm_maskz_cvtsepi32_epi16": true,
  "core_arch::x86::avx512f::_mm_maskz_cvtsepi32_epi8": true,
  "core_arch::x86::avx512f::_mm_maskz_cvtsepi64_epi16": true,
  "core_arch::x86::avx512f::_mm_maskz_cvtsepi64_epi32": true,
  "core_arch::x86::avx512f::_mm_maskz_cvtsepi64_epi8": true,
  "core_arch::x86::avx512f::_mm_maskz_cvtss_sd": true,
  "core_arch::x86::avx512f::_mm_maskz_cvttpd_epi32": true,
  "core_arch::x86::avx512f::_mm_maskz_cvttpd_epu32": true,
  "core_arch::x86::avx512f::_mm_maskz_cvttps_epi32": true,
  "core_arch::x86::avx512f::_mm_maskz_cvttps_epu32": true,
  "core_arch::x86::avx512f::_mm_maskz_cvtusepi32_epi16": true,
  "core_arch::x86::avx512f::_mm_maskz_cvtusepi32_epi8": true,
  "core_arch::x86::avx512f::_mm_maskz_cvtusepi64_epi16": true,
  "core_arch::x86::avx512f::_mm_maskz_cvtusepi64_epi32": true,
  "core_arch::x86::avx512f::_mm_maskz_cvtusepi64_epi8": true,
  "core_arch::x86::avx512f::_mm_maskz_div_pd": true,
  "core_arch::x86::avx512f::_mm_maskz_div_ps": true,
  "core_arch::x86::avx512f::_mm_maskz_div_sd": true,
  "core_arch::x86::avx512f::_mm_maskz_div_ss": true,
  "core_arch::x86::avx512f::_mm_maskz_expand_epi32": true,
  "core_arch::x86::avx512f::_mm_maskz_expand_epi64": true,
  "core_arch::x86::avx512f::_mm_maskz_expand_pd": true,
  "core_arch::x86::avx512f::_mm_maskz_expand_ps": true,
  "core_arch::x86::avx512f::_mm_maskz_fmadd_pd": true,
  "core_arch::x86::avx512f::_mm_maskz_fmadd_ps": true,
  "core_arch::x86::avx512f::_mm_maskz_fmadd_sd": true,
  "core_arch::x86::avx512f::_mm_maskz_fmadd_ss": true,
  "core_arch::x86::avx512f::_mm_maskz_fmaddsub_pd": true,
  "core_arch::x86::avx512f::_mm_maskz_fmaddsub_ps": true,
  "core_arch::x86::avx512f::_mm_maskz_fmsub_pd": true,
  "core_arch::x86::avx512f::_mm_maskz_fmsub_ps": true,
  "core_arch::x86::avx512f::_mm_maskz_fmsub_sd": true,
  "core_arch::x86::avx512f::_mm_maskz_fmsub_ss": true,
  "core_arch::x86::avx512f::_mm_maskz_fmsubadd_pd": true,
  "core_arch::x86::avx512f::_mm_maskz_fmsubadd_ps": true,
  "core_arch::x86::avx512f::_mm_maskz_fnmadd_pd": true,
  "core_arch::x86::avx512f::_mm_maskz_fnmadd_ps": true,
  "core_arch::x86::avx512f::_mm_maskz_fnmadd_sd": true,
  "core_arch::x86::avx512f::_mm_maskz_fnmadd_ss": true,
  "core_arch::x86::avx512f::_mm_maskz_fnmsub_pd": true,
  "core_arch::x86::avx512f::_mm_maskz_fnmsub_ps": true,
  "core_arch::x86::avx512f::_mm_maskz_fnmsub_sd": true,
  "core_arch::x86::avx512f::_mm_maskz_fnmsub_ss": true,
  "core_arch::x86::avx512f::_mm_maskz_getexp_pd": true,
  "core_arch::x86::avx512f::_mm_maskz_getexp_ps": true,
  "core_arch::x86::avx512f::_mm_maskz_getexp_sd": true,
  "core_arch::x86::avx512f::_mm_maskz_getexp_ss": true,
  "core_arch::x86::avx512f::_mm_maskz_max_epi32": true,
  "core_arch::x86::avx512f::_mm_maskz_max_epi64": true,
  "core_arch::x86::avx512f::_mm_maskz_max_epu32": true,
  "core_arch::x86::avx512f::_mm_maskz_max_epu64": true,
  "core_arch::x86::avx512f::_mm_maskz_max_pd": true,
  "core_arch::x86::avx512f::_mm_maskz_max_ps": true,
  "core_arch::x86::avx512f::_mm_maskz_max_sd": true,
  "core_arch::x86::avx512f::_mm_maskz_max_ss": true,
  "core_arch::x86::avx512f::_mm_maskz_min_epi32": true,
  "core_arch::x86::avx512f::_mm_maskz_min_epi64": true,
  "core_arch::x86::avx512f::_mm_maskz_min_epu32": true,
  "core_arch::x86::avx512f::_mm_maskz_min_epu64": true,
  "core_arch::x86::avx512f::_mm_maskz_min_pd": true,
  "core_arch::x86::avx512f::_mm_maskz_min_ps": true,
  "core_arch::x86::avx512f::_mm_maskz_min_sd": true,
  "core_arch::x86::avx512f::_mm_maskz_min_ss": true,
  "core_arch::x86::avx512f::_mm_maskz_mov_epi32": true,
  "core_arch::x86::avx512f::_mm_maskz_mov_epi64": true,
  "core_arch::x86::avx512f::_mm_maskz_mov_pd": true,
  "core_arch::x86::avx512f::_mm_maskz_mov_ps": true,
  "core_arch::x86::avx512f::_mm_maskz_move_sd": true,
  "core_arch::x86::avx512f::_mm_maskz_move_ss": true,
  "core_arch::x86::avx512f::_mm_maskz_movedup_pd": true,
  "core_arch::x86::avx512f::_mm_maskz_movehdup_ps": true,
  "core_arch::x86::avx512f::_mm_maskz_moveldup_ps": true,
  "core_arch::x86::avx512f::_mm_maskz_mul_epi32": true,
  "core_arch::x86::avx512f::_mm_maskz_mul_epu32": true,
  "core_arch::x86::avx512f::_mm_maskz_mul_pd": true,
  "core_arch::x86::avx512f::_mm_maskz_mul_ps": true,
  "core_arch::x86::avx512f::_mm_maskz_mul_sd": true,
  "core_arch::x86::avx512f::_mm_maskz_mul_ss": true,
  "core_arch::x86::avx512f::_mm_maskz_mullo_epi32": true,
  "core_arch::x86::avx512f::_mm_maskz_or_epi32": true,
  "core_arch::x86::avx512f::_mm_maskz_or_epi64": true,
  "core_arch::x86::avx512f::_mm_maskz_permutevar_pd": true,
  "core_arch::x86::avx512f::_mm_maskz_permutevar_ps": true,
  "core_arch::x86::avx512f::_mm_maskz_permutex2var_epi32": true,
  "core_arch::x86::avx512f::_mm_maskz_permutex2var_epi64": true,
  "core_arch::x86::avx512f::_mm_maskz_permutex2var_pd": true,
  "core_arch::x86::avx512f::_mm_maskz_permutex2var_ps": true,
  "core_arch::x86::avx512f::_mm_maskz_rcp14_pd": true,
  "core_arch::x86::avx512f::_mm_maskz_rcp14_ps": true,
  "core_arch::x86::avx512f::_mm_maskz_rcp14_sd": true,
  "core_arch::x86::avx512f::_mm_maskz_rcp14_ss": true,
  "core_arch::x86::avx512f::_mm_maskz_rolv_epi32": true,
  "core_arch::x86::avx512f::_mm_maskz_rolv_epi64": true,
  "core_arch::x86::avx512f::_mm_maskz_rorv_epi32": true,
  "core_arch::x86::avx512f::_mm_maskz_rorv_epi64": true,
  "core_arch::x86::avx512f::_mm_maskz_rsqrt14_pd": true,
  "core_arch::x86::avx512f::_mm_maskz_rsqrt14_ps": true,
  "core_arch::x86::avx512f::_mm_maskz_rsqrt14_sd": true,
  "core_arch::x86::avx512f::_mm_maskz_rsqrt14_ss": true,
  "core_arch::x86::avx512f::_mm_maskz_scalef_pd": true,
  "core_arch::x86::avx512f::_mm_maskz_scalef_ps": true,
  "core_arch::x86::avx512f::_mm_maskz_scalef_sd": true,
  "core_arch::x86::avx512f::_mm_maskz_scalef_ss": true,
  "core_arch::x86::avx512f::_mm_maskz_set1_epi32": true,
  "core_arch::x86::avx512f::_mm_maskz_set1_epi64": true,
  "core_arch::x86::avx512f::_mm_maskz_sll_epi32": true,
  "core_arch::x86::avx512f::_mm_maskz_sll_epi64": true,
  "core_arch::x86::avx512f::_mm_maskz_sllv_epi32": true,
  "core_arch::x86::avx512f::_mm_maskz_sllv_epi64": true,
  "core_arch::x86::avx512f::_mm_maskz_sqrt_pd": true,
  "core_arch::x86::avx512f::_mm_maskz_sqrt_ps": true,
  "core_arch::x86::avx512f::_mm_maskz_sqrt_sd": true,
  "core_arch::x86::avx512f::_mm_maskz_sqrt_ss": true,
  "core_arch::x86::avx512f::_mm_maskz_sra_epi32": true,
  "core_arch::x86::avx512f::_mm_maskz_sra_epi64": true,
  "core_arch::x86::avx512f::_mm_maskz_srav_epi32": true,
  "core_arch::x86::avx512f::_mm_maskz_srav_epi64": true,
  "core_arch::x86::avx512f::_mm_maskz_srl_epi32": true,
  "core_arch::x86::avx512f::_mm_maskz_srl_epi64": true,
  "core_arch::x86::avx512f::_mm_maskz_srlv_epi32": true,
  "core_arch::x86::avx512f::_mm_maskz_srlv_epi64": true,
  "core_arch::x86::avx512f::_mm_maskz_sub_epi32": true,
  "core_arch::x86::avx512f::_mm_maskz_sub_epi64": true,
  "core_arch::x86::avx512f::_mm_maskz_sub_pd": true,
  "core_arch::x86::avx512f::_mm_maskz_sub_ps": true,
  "core_arch::x86::avx512f::_mm_maskz_sub_sd": true,
  "core_arch::x86::avx512f::_mm_maskz_sub_ss": true,
  "core_arch::x86::avx512f::_mm_maskz_unpackhi_epi32": true,
  "core_arch::x86::avx512f::_mm_maskz_unpackhi_epi64": true,
  "core_arch::x86::avx512f::_mm_maskz_unpackhi_pd": true,
  "core_arch::x86::avx512f::_mm_maskz_unpackhi_ps": true,
  "core_arch::x86::avx512f::_mm_maskz_unpacklo_epi32": true,
  "core_arch::x86::avx512f::_mm_maskz_unpacklo_epi64": true,
  "core_arch::x86::avx512f::_mm_maskz_unpacklo_pd": true,
  "core_arch::x86::avx512f::_mm_maskz_unpacklo_ps": true,
  "core_arch::x86::avx512f::_mm_maskz_xor_epi32": true,
  "core_arch::x86::avx512f::_mm_maskz_xor_epi64": true,
  "core_arch::x86::avx512f::_mm_max_epi64": true,
  "core_arch::x86::avx512f::_mm_max_epu64": true,
  "core_arch::x86::avx512f::_mm_min_epi64": true,
  "core_arch::x86::avx512f::_mm_min_epu64": true,
  "core_arch::x86::avx512f::_mm_or_epi32": true,
  "core_arch::x86::avx512f::_mm_or_epi64": true,
  "core_arch::x86::avx512f::_mm_permutex2var_epi32": true,
  "core_arch::x86::avx512f::_mm_permutex2var_epi64": true,
  "core_arch::x86::avx512f::_mm_permutex2var_pd": true,
  "core_arch::x86::avx512f::_mm_permutex2var_ps": true,
  "core_arch::x86::avx512f::_mm_rcp14_pd": true,
  "core_arch::x86::avx512f::_mm_rcp14_ps": true,
  "core_arch::x86::avx512f::_mm_rcp14_sd": true,
  "core_arch::x86::avx512f::_mm_rcp14_ss": true,
  "core_arch::x86::avx512f::_mm_rolv_epi32": true,
  "core_arch::x86::avx512f::_mm_rolv_epi64": true,
  "core_arch::x86::avx512f::_mm_rorv_epi32": true,
  "core_arch::x86::avx512f::_mm_rorv_epi64": true,
  "core_arch::x86::avx512f::_mm_rsqrt14_pd": true,
  "core_arch::x86::avx512f::_mm_rsqrt14_ps": true,
  "core_arch::x86::avx512f::_mm_rsqrt14_sd": true,
  "core_arch::x86::avx512f::_mm_rsqrt14_ss": true,
  "core_arch::x86::avx512f::_mm_scalef_pd": true,
  "core_arch::x86::avx512f::_mm_scalef_ps": true,
  "core_arch::x86::avx512f::_mm_scalef_sd": true,
  "core_arch::x86::avx512f::_mm_scalef_ss": true,
  "core_arch::x86::avx512f::_mm_sra_epi64": true,
  "core_arch::x86::avx512f::_mm_srav_epi64": true,
  "core_arch::x86::avx512f::_mm_test_epi32_mask": true,
  "core_arch::x86::avx512f::_mm_test_epi64_mask": true,
  "core_arch::x86::avx512f::_mm_testn_epi32_mask": true,
  "core_arch::x86::avx512f::_mm_testn_epi64_mask": true,
  "core_arch::x86::avx512f::_mm_xor_epi32": true,
  "core_arch::x86::avx512f::_mm_xor_epi64": true,
  "core_arch::x86::avx512fp16::_mm256_abs_ph": true,
  "core_arch::x86::avx512fp16::_mm256_add_ph": true,
  "core_arch::x86::avx512fp16::_mm256_castpd_ph": true,
  "core_arch::x86::avx512fp16::_mm256_castph128_ph256": true,
  "core_arch::x86::avx512fp16::_mm256_castph256_ph128": true,
  "core_arch::x86::avx512fp16::_mm256_castph_pd": true,
  "core_arch::x86::avx512fp16::_mm256_castph_ps": true,
  "core_arch::x86::avx512fp16::_mm256_castph_si256": true,
  "core_arch::x86::avx512fp16::_mm256_castps_ph": true,
  "core_arch::x86::avx512fp16::_mm256_castsi256_ph": true,
  "core_arch::x86::avx512fp16::_mm256_cmul_pch": true,
  "core_arch::x86::avx512fp16::_mm256_conj_pch": true,
  "core_arch::x86::avx512fp16::_mm256_cvtepi16_ph": true,
  "core_arch::x86::avx512fp16::_mm256_cvtepi32_ph": true,
  "core_arch::x86::avx512fp16::_mm256_cvtepi64_ph": true,
  "core_arch::x86::avx512fp16::_mm256_cvtepu16_ph": true,
  "core_arch::x86::avx512fp16::_mm256_cvtepu32_ph": true,
  "core_arch::x86::avx512fp16::_mm256_cvtepu64_ph": true,
  "core_arch::x86::avx512fp16::_mm256_cvtpd_ph": true,
  "core_arch::x86::avx512fp16::_mm256_cvtph_epi16": true,
  "core_arch::x86::avx512fp16::_mm256_cvtph_epi32": true,
  "core_arch::x86::avx512fp16::_mm256_cvtph_epi64": true,
  "core_arch::x86::avx512fp16::_mm256_cvtph_epu16": true,
  "core_arch::x86::avx512fp16::_mm256_cvtph_epu32": true,
  "core_arch::x86::avx512fp16::_mm256_cvtph_epu64": true,
  "core_arch::x86::avx512fp16::_mm256_cvtph_pd": true,
  "core_arch::x86::avx512fp16::_mm256_cvtsh_h": true,
  "core_arch::x86::avx512fp16::_mm256_cvttph_epi16": true,
  "core_arch::x86::avx512fp16::_mm256_cvttph_epi32": true,
  "core_arch::x86::avx512fp16::_mm256_cvttph_epi64": true,
  "core_arch::x86::avx512fp16::_mm256_cvttph_epu16": true,
  "core_arch::x86::avx512fp16::_mm256_cvttph_epu32": true,
  "core_arch::x86::avx512fp16::_mm256_cvttph_epu64": true,
  "core_arch::x86::avx512fp16::_mm256_cvtxph_ps": true,
  "core_arch::x86::avx512fp16::_mm256_cvtxps_ph": true,
  "core_arch::x86::avx512fp16::_mm256_div_ph": true,
  "core_arch::x86::avx512fp16::_mm256_fcmadd_pch": true,
  "core_arch::x86::avx512fp16::_mm256_fcmul_pch": true,
  "core_arch::x86::avx512fp16::_mm256_fmadd_pch": true,
  "core_arch::x86::avx512fp16::_mm256_fmadd_ph": true,
  "core_arch::x86::avx512fp16::_mm256_fmaddsub_ph": true,
  "core_arch::x86::avx512fp16::_mm256_fmsub_ph": true,
  "core_arch::x86::avx512fp16::_mm256_fmsubadd_ph": true,
  "core_arch::x86::avx512fp16::_mm256_fmul_pch": true,
  "core_arch::x86::avx512fp16::_mm256_fnmadd_ph": true,
  "core_arch::x86::avx512fp16::_mm256_fnmsub_ph": true,
  "core_arch::x86::avx512fp16::_mm256_getexp_ph": true,
  "core_arch::x86::avx512fp16::_mm256_mask3_fcmadd_pch": true,
  "core_arch::x86::avx512fp16::_mm256_mask3_fmadd_pch": true,
  "core_arch::x86::avx512fp16::_mm256_mask3_fmadd_ph": true,
  "core_arch::x86::avx512fp16::_mm256_mask3_fmaddsub_ph": true,
  "core_arch::x86::avx512fp16::_mm256_mask3_fmsub_ph": true,
  "core_arch::x86::avx512fp16::_mm256_mask3_fmsubadd_ph": true,
  "core_arch::x86::avx512fp16::_mm256_mask3_fnmadd_ph": true,
  "core_arch::x86::avx512fp16::_mm256_mask3_fnmsub_ph": true,
  "core_arch::x86::avx512fp16::_mm256_mask_add_ph": true,
  "core_arch::x86::avx512fp16::_mm256_mask_blend_ph": true,
  "core_arch::x86::avx512fp16::_mm256_mask_cmul_pch": true,
  "core_arch::x86::avx512fp16::_mm256_mask_conj_pch": true,
  "core_arch::x86::avx512fp16::_mm256_mask_cvtepi16_ph": true,
  "core_arch::x86::avx512fp16::_mm256_mask_cvtepi32_ph": true,
  "core_arch::x86::avx512fp16::_mm256_mask_cvtepi64_ph": true,
  "core_arch::x86::avx512fp16::_mm256_mask_cvtepu16_ph": true,
  "core_arch::x86::avx512fp16::_mm256_mask_cvtepu32_ph": true,
  "core_arch::x86::avx512fp16::_mm256_mask_cvtepu64_ph": true,
  "core_arch::x86::avx512fp16::_mm256_mask_cvtpd_ph": true,
  "core_arch::x86::avx512fp16::_mm256_mask_cvtph_epi16": true,
  "core_arch::x86::avx512fp16::_mm256_mask_cvtph_epi32": true,
  "core_arch::x86::avx512fp16::_mm256_mask_cvtph_epi64": true,
  "core_arch::x86::avx512fp16::_mm256_mask_cvtph_epu16": true,
  "core_arch::x86::avx512fp16::_mm256_mask_cvtph_epu32": true,
  "core_arch::x86::avx512fp16::_mm256_mask_cvtph_epu64": true,
  "core_arch::x86::avx512fp16::_mm256_mask_cvtph_pd": true,
  "core_arch::x86::avx512fp16::_mm256_mask_cvttph_epi16": true,
  "core_arch::x86::avx512fp16::_mm256_mask_cvttph_epi32": true,
  "core_arch::x86::avx512fp16::_mm256_mask_cvttph_epi64": true,
  "core_arch::x86::avx512fp16::_mm256_mask_cvttph_epu16": true,
  "core_arch::x86::avx512fp16::_mm256_mask_cvttph_epu32": true,
  "core_arch::x86::avx512fp16::_mm256_mask_cvttph_epu64": true,
  "core_arch::x86::avx512fp16::_mm256_mask_cvtxph_ps": true,
  "core_arch::x86::avx512fp16::_mm256_mask_cvtxps_ph": true,
  "core_arch::x86::avx512fp16::_mm256_mask_div_ph": true,
  "core_arch::x86::avx512fp16::_mm256_mask_fcmadd_pch": true,
  "core_arch::x86::avx512fp16::_mm256_mask_fcmul_pch": true,
  "core_arch::x86::avx512fp16::_mm256_mask_fmadd_pch": true,
  "core_arch::x86::avx512fp16::_mm256_mask_fmadd_ph": true,
  "core_arch::x86::avx512fp16::_mm256_mask_fmaddsub_ph": true,
  "core_arch::x86::avx512fp16::_mm256_mask_fmsub_ph": true,
  "core_arch::x86::avx512fp16::_mm256_mask_fmsubadd_ph": true,
  "core_arch::x86::avx512fp16::_mm256_mask_fmul_pch": true,
  "core_arch::x86::avx512fp16::_mm256_mask_fnmadd_ph": true,
  "core_arch::x86::avx512fp16::_mm256_mask_fnmsub_ph": true,
  "core_arch::x86::avx512fp16::_mm256_mask_getexp_ph": true,
  "core_arch::x86::avx512fp16::_mm256_mask_max_ph": true,
  "core_arch::x86::avx512fp16::_mm256_mask_min_ph": true,
  "core_arch::x86::avx512fp16::_mm256_mask_mul_pch": true,
  "core_arch::x86::avx512fp16::_mm256_mask_mul_ph": true,
  "core_arch::x86::avx512fp16::_mm256_mask_rcp_ph": true,
  "core_arch::x86::avx512fp16::_mm256_mask_rsqrt_ph": true,
  "core_arch::x86::avx512fp16::_mm256_mask_scalef_ph": true,
  "core_arch::x86::avx512fp16::_mm256_mask_sqrt_ph": true,
  "core_arch::x86::avx512fp16::_mm256_mask_sub_ph": true,
  "core_arch::x86::avx512fp16::_mm256_maskz_add_ph": true,
  "core_arch::x86::avx512fp16::_mm256_maskz_cmul_pch": true,
  "core_arch::x86::avx512fp16::_mm256_maskz_conj_pch": true,
  "core_arch::x86::avx512fp16::_mm256_maskz_cvtepi16_ph": true,
  "core_arch::x86::avx512fp16::_mm256_maskz_cvtepi32_ph": true,
  "core_arch::x86::avx512fp16::_mm256_maskz_cvtepi64_ph": true,
  "core_arch::x86::avx512fp16::_mm256_maskz_cvtepu16_ph": true,
  "core_arch::x86::avx512fp16::_mm256_maskz_cvtepu32_ph": true,
  "core_arch::x86::avx512fp16::_mm256_maskz_cvtepu64_ph": true,
  "core_arch::x86::avx512fp16::_mm256_maskz_cvtpd_ph": true,
  "core_arch::x86::avx512fp16::_mm256_maskz_cvtph_epi16": true,
  "core_arch::x86::avx512fp16::_mm256_maskz_cvtph_epi32": true,
  "core_arch::x86::avx512fp16::_mm256_maskz_cvtph_epi64": true,
  "core_arch::x86::avx512fp16::_mm256_maskz_cvtph_epu16": true,
  "core_arch::x86::avx512fp16::_mm256_maskz_cvtph_epu32": true,
  "core_arch::x86::avx512fp16::_mm256_maskz_cvtph_epu64": true,
  "core_arch::x86::avx512fp16::_mm256_maskz_cvtph_pd": true,
  "core_arch::x86::avx512fp16::_mm256_maskz_cvttph_epi16": true,
  "core_arch::x86::avx512fp16::_mm256_maskz_cvttph_epi32": true,
  "core_arch::x86::avx512fp16::_mm256_maskz_cvttph_epi64": true,
  "core_arch::x86::avx512fp16::_mm256_maskz_cvttph_epu16": true,
  "core_arch::x86::avx512fp16::_mm256_maskz_cvttph_epu32": true,
  "core_arch::x86::avx512fp16::_mm256_maskz_cvttph_epu64": true,
  "core_arch::x86::avx512fp16::_mm256_maskz_cvtxph_ps": true,
  "core_arch::x86::avx512fp16::_mm256_maskz_cvtxps_ph": true,
  "core_arch::x86::avx512fp16::_mm256_maskz_div_ph": true,
  "core_arch::x86::avx512fp16::_mm256_maskz_fcmadd_pch": true,
  "core_arch::x86::avx512fp16::_mm256_maskz_fcmul_pch": true,
  "core_arch::x86::avx512fp16::_mm256_maskz_fmadd_pch": true,
  "core_arch::x86::avx512fp16::_mm256_maskz_fmadd_ph": true,
  "core_arch::x86::avx512fp16::_mm256_maskz_fmaddsub_ph": true,
  "core_arch::x86::avx512fp16::_mm256_maskz_fmsub_ph": true,
  "core_arch::x86::avx512fp16::_mm256_maskz_fmsubadd_ph": true,
  "core_arch::x86::avx512fp16::_mm256_maskz_fmul_pch": true,
  "core_arch::x86::avx512fp16::_mm256_maskz_fnmadd_ph": true,
  "core_arch::x86::avx512fp16::_mm256_maskz_fnmsub_ph": true,
  "core_arch::x86::avx512fp16::_mm256_maskz_getexp_ph": true,
  "core_arch::x86::avx512fp16::_mm256_maskz_max_ph": true,
  "core_arch::x86::avx512fp16::_mm256_maskz_min_ph": true,
  "core_arch::x86::avx512fp16::_mm256_maskz_mul_pch": true,
  "core_arch::x86::avx512fp16::_mm256_maskz_mul_ph": true,
  "core_arch::x86::avx512fp16::_mm256_maskz_rcp_ph": true,
  "core_arch::x86::avx512fp16::_mm256_maskz_rsqrt_ph": true,
  "core_arch::x86::avx512fp16::_mm256_maskz_scalef_ph": true,
  "core_arch::x86::avx512fp16::_mm256_maskz_sqrt_ph": true,
  "core_arch::x86::avx512fp16::_mm256_maskz_sub_ph": true,
  "core_arch::x86::avx512fp16::_mm256_max_ph": true,
  "core_arch::x86::avx512fp16::_mm256_min_ph": true,
  "core_arch::x86::avx512fp16::_mm256_mul_pch": true,
  "core_arch::x86::avx512fp16::_mm256_mul_ph": true,
  "core_arch::x86::avx512fp16::_mm256_permutex2var_ph": true,
  "core_arch::x86::avx512fp16::_mm256_permutexvar_ph": true,
  "core_arch::x86::avx512fp16::_mm256_rcp_ph": true,
  "core_arch::x86::avx512fp16::_mm256_reduce_add_ph": true,
  "core_arch::x86::avx512fp16::_mm256_reduce_max_ph": true,
  "core_arch::x86::avx512fp16::_mm256_reduce_min_ph": true,
  "core_arch::x86::avx512fp16::_mm256_reduce_mul_ph": true,
  "core_arch::x86::avx512fp16::_mm256_rsqrt_ph": true,
  "core_arch::x86::avx512fp16::_mm256_scalef_ph": true,
  "core_arch::x86::avx512fp16::_mm256_set1_ph": true,
  "core_arch::x86::avx512fp16::_mm256_set_ph": true,
  "core_arch::x86::avx512fp16::_mm256_setr_ph": true,
  "core_arch::x86::avx512fp16::_mm256_setzero_ph": true,
  "core_arch::x86::avx512fp16::_mm256_sqrt_ph": true,
  "core_arch::x86::avx512fp16::_mm256_sub_ph": true,
  "core_arch::x86::avx512fp16::_mm256_undefined_ph": true,
  "core_arch::x86::avx512fp16::_mm256_zextph128_ph256": true,
  "core_arch::x86::avx512fp16::_mm512_abs_ph": true,
  "core_arch::x86::avx512fp16::_mm512_add_ph": true,
  "core_arch::x86::avx512fp16::_mm512_castpd_ph": true,
  "core_arch::x86::avx512fp16::_mm512_castph128_ph512": true,
  "core_arch::x86::avx512fp16::_mm512_castph256_ph512": true,
  "core_arch::x86::avx512fp16::_mm512_castph512_ph128": true,
  "core_arch::x86::avx512fp16::_mm512_castph512_ph256": true,
  "core_arch::x86::avx512fp16::_mm512_castph_pd": true,
  "core_arch::x86::avx512fp16::_mm512_castph_ps": true,
  "core_arch::x86::avx512fp16::_mm512_castph_si512": true,
  "core_arch::x86::avx512fp16::_mm512_castps_ph": true,
  "core_arch::x86::avx512fp16::_mm512_castsi512_ph": true,
  "core_arch::x86::avx512fp16::_mm512_cmul_pch": true,
  "core_arch::x86::avx512fp16::_mm512_conj_pch": true,
  "core_arch::x86::avx512fp16::_mm512_cvtepi16_ph": true,
  "core_arch::x86::avx512fp16::_mm512_cvtepi32_ph": true,
  "core_arch::x86::avx512fp16::_mm512_cvtepi64_ph": true,
  "core_arch::x86::avx512fp16::_mm512_cvtepu16_ph": true,
  "core_arch::x86::avx512fp16::_mm512_cvtepu32_ph": true,
  "core_arch::x86::avx512fp16::_mm512_cvtepu64_ph": true,
  "core_arch::x86::avx512fp16::_mm512_cvtpd_ph": true,
  "core_arch::x86::avx512fp16::_mm512_cvtph_epi16": true,
  "core_arch::x86::avx512fp16::_mm512_cvtph_epi32": true,
  "core_arch::x86::avx512fp16::_mm512_cvtph_epi64": true,
  "core_arch::x86::avx512fp16::_mm512_cvtph_epu16": true,
  "core_arch::x86::avx512fp16::_mm512_cvtph_epu32": true,
  "core_arch::x86::avx512fp16::_mm512_cvtph_epu64": true,
  "core_arch::x86::avx512fp16::_mm512_cvtph_pd": true,
  "core_arch::x86::avx512fp16::_mm512_cvtsh_h": true,
  "core_arch::x86::avx512fp16::_mm512_cvttph_epi16": true,
  "core_arch::x86::avx512fp16::_mm512_cvttph_epi32": true,
  "core_arch::x86::avx512fp16::_mm512_cvttph_epi64": true,
  "core_arch::x86::avx512fp16::_mm512_cvttph_epu16": true,
  "core_arch::x86::avx512fp16::_mm512_cvttph_epu32": true,
  "core_arch::x86::avx512fp16::_mm512_cvttph_epu64": true,
  "core_arch::x86::avx512fp16::_mm512_cvtxph_ps": true,
  "core_arch::x86::avx512fp16::_mm512_cvtxps_ph": true,
  "core_arch::x86::avx512fp16::_mm512_div_ph": true,
  "core_arch::x86::avx512fp16::_mm512_fcmadd_pch": true,
  "core_arch::x86::avx512fp16::_mm512_fcmul_pch": true,
  "core_arch::x86::avx512fp16::_mm512_fmadd_pch": true,
  "core_arch::x86::avx512fp16::_mm512_fmadd_ph": true,
  "core_arch::x86::avx512fp16::_mm512_fmaddsub_ph": true,
  "core_arch::x86::avx512fp16::_mm512_fmsub_ph": true,
  "core_arch::x86::avx512fp16::_mm512_fmsubadd_ph": true,
  "core_arch::x86::avx512fp16::_mm512_fmul_pch": true,
  "core_arch::x86::avx512fp16::_mm512_fnmadd_ph": true,
  "core_arch::x86::avx512fp16::_mm512_fnmsub_ph": true,
  "core_arch::x86::avx512fp16::_mm512_getexp_ph": true,
  "core_arch::x86::avx512fp16::_mm512_mask3_fcmadd_pch": true,
  "core_arch::x86::avx512fp16::_mm512_mask3_fmadd_pch": true,
  "core_arch::x86::avx512fp16::_mm512_mask3_fmadd_ph": true,
  "core_arch::x86::avx512fp16::_mm512_mask3_fmaddsub_ph": true,
  "core_arch::x86::avx512fp16::_mm512_mask3_fmsub_ph": true,
  "core_arch::x86::avx512fp16::_mm512_mask3_fmsubadd_ph": true,
  "core_arch::x86::avx512fp16::_mm512_mask3_fnmadd_ph": true,
  "core_arch::x86::avx512fp16::_mm512_mask3_fnmsub_ph": true,
  "core_arch::x86::avx512fp16::_mm512_mask_add_ph": true,
  "core_arch::x86::avx512fp16::_mm512_mask_blend_ph": true,
  "core_arch::x86::avx512fp16::_mm512_mask_cmul_pch": true,
  "core_arch::x86::avx512fp16::_mm512_mask_conj_pch": true,
  "core_arch::x86::avx512fp16::_mm512_mask_cvtepi16_ph": true,
  "core_arch::x86::avx512fp16::_mm512_mask_cvtepi32_ph": true,
  "core_arch::x86::avx512fp16::_mm512_mask_cvtepi64_ph": true,
  "core_arch::x86::avx512fp16::_mm512_mask_cvtepu16_ph": true,
  "core_arch::x86::avx512fp16::_mm512_mask_cvtepu32_ph": true,
  "core_arch::x86::avx512fp16::_mm512_mask_cvtepu64_ph": true,
  "core_arch::x86::avx512fp16::_mm512_mask_cvtpd_ph": true,
  "core_arch::x86::avx512fp16::_mm512_mask_cvtph_epi16": true,
  "core_arch::x86::avx512fp16::_mm512_mask_cvtph_epi32": true,
  "core_arch::x86::avx512fp16::_mm512_mask_cvtph_epi64": true,
  "core_arch::x86::avx512fp16::_mm512_mask_cvtph_epu16": true,
  "core_arch::x86::avx512fp16::_mm512_mask_cvtph_epu32": true,
  "core_arch::x86::avx512fp16::_mm512_mask_cvtph_epu64": true,
  "core_arch::x86::avx512fp16::_mm512_mask_cvtph_pd": true,
  "core_arch::x86::avx512fp16::_mm512_mask_cvttph_epi16": true,
  "core_arch::x86::avx512fp16::_mm512_mask_cvttph_epi32": true,
  "core_arch::x86::avx512fp16::_mm512_mask_cvttph_epi64": true,
  "core_arch::x86::avx512fp16::_mm512_mask_cvttph_epu16": true,
  "core_arch::x86::avx512fp16::_mm512_mask_cvttph_epu32": true,
  "core_arch::x86::avx512fp16::_mm512_mask_cvttph_epu64": true,
  "core_arch::x86::avx512fp16::_mm512_mask_cvtxph_ps": true,
  "core_arch::x86::avx512fp16::_mm512_mask_cvtxps_ph": true,
  "core_arch::x86::avx512fp16::_mm512_mask_div_ph": true,
  "core_arch::x86::avx512fp16::_mm512_mask_fcmadd_pch": true,
  "core_arch::x86::avx512fp16::_mm512_mask_fcmul_pch": true,
  "core_arch::x86::avx512fp16::_mm512_mask_fmadd_pch": true,
  "core_arch::x86::avx512fp16::_mm512_mask_fmadd_ph": true,
  "core_arch::x86::avx512fp16::_mm512_mask_fmaddsub_ph": true,
  "core_arch::x86::avx512fp16::_mm512_mask_fmsub_ph": true,
  "core_arch::x86::avx512fp16::_mm512_mask_fmsubadd_ph": true,
  "core_arch::x86::avx512fp16::_mm512_mask_fmul_pch": true,
  "core_arch::x86::avx512fp16::_mm512_mask_fnmadd_ph": true,
  "core_arch::x86::avx512fp16::_mm512_mask_fnmsub_ph": true,
  "core_arch::x86::avx512fp16::_mm512_mask_getexp_ph": true,
  "core_arch::x86::avx512fp16::_mm512_mask_max_ph": true,
  "core_arch::x86::avx512fp16::_mm512_mask_min_ph": true,
  "core_arch::x86::avx512fp16::_mm512_mask_mul_pch": true,
  "core_arch::x86::avx512fp16::_mm512_mask_mul_ph": true,
  "core_arch::x86::avx512fp16::_mm512_mask_rcp_ph": true,
  "core_arch::x86::avx512fp16::_mm512_mask_rsqrt_ph": true,
  "core_arch::x86::avx512fp16::_mm512_mask_scalef_ph": true,
  "core_arch::x86::avx512fp16::_mm512_mask_sqrt_ph": true,
  "core_arch::x86::avx512fp16::_mm512_mask_sub_ph": true,
  "core_arch::x86::avx512fp16::_mm512_maskz_add_ph": true,
  "core_arch::x86::avx512fp16::_mm512_maskz_cmul_pch": true,
  "core_arch::x86::avx512fp16::_mm512_maskz_conj_pch": true,
  "core_arch::x86::avx512fp16::_mm512_maskz_cvtepi16_ph": true,
  "core_arch::x86::avx512fp16::_mm512_maskz_cvtepi32_ph": true,
  "core_arch::x86::avx512fp16::_mm512_maskz_cvtepi64_ph": true,
  "core_arch::x86::avx512fp16::_mm512_maskz_cvtepu16_ph": true,
  "core_arch::x86::avx512fp16::_mm512_maskz_cvtepu32_ph": true,
  "core_arch::x86::avx512fp16::_mm512_maskz_cvtepu64_ph": true,
  "core_arch::x86::avx512fp16::_mm512_maskz_cvtpd_ph": true,
  "core_arch::x86::avx512fp16::_mm512_maskz_cvtph_epi16": true,
  "core_arch::x86::avx512fp16::_mm512_maskz_cvtph_epi32": true,
  "core_arch::x86::avx512fp16::_mm512_maskz_cvtph_epi64": true,
  "core_arch::x86::avx512fp16::_mm512_maskz_cvtph_epu16": true,
  "core_arch::x86::avx512fp16::_mm512_maskz_cvtph_epu32": true,
  "core_arch::x86::avx512fp16::_mm512_maskz_cvtph_epu64": true,
  "core_arch::x86::avx512fp16::_mm512_maskz_cvtph_pd": true,
  "core_arch::x86::avx512fp16::_mm512_maskz_cvttph_epi16": true,
  "core_arch::x86::avx512fp16::_mm512_maskz_cvttph_epi32": true,
  "core_arch::x86::avx512fp16::_mm512_maskz_cvttph_epi64": true,
  "core_arch::x86::avx512fp16::_mm512_maskz_cvttph_epu16": true,
  "core_arch::x86::avx512fp16::_mm512_maskz_cvttph_epu32": true,
  "core_arch::x86::avx512fp16::_mm512_maskz_cvttph_epu64": true,
  "core_arch::x86::avx512fp16::_mm512_maskz_cvtxph_ps": true,
  "core_arch::x86::avx512fp16::_mm512_maskz_cvtxps_ph": true,
  "core_arch::x86::avx512fp16::_mm512_maskz_div_ph": true,
  "core_arch::x86::avx512fp16::_mm512_maskz_fcmadd_pch": true,
  "core_arch::x86::avx512fp16::_mm512_maskz_fcmul_pch": true,
  "core_arch::x86::avx512fp16::_mm512_maskz_fmadd_pch": true,
  "core_arch::x86::avx512fp16::_mm512_maskz_fmadd_ph": true,
  "core_arch::x86::avx512fp16::_mm512_maskz_fmaddsub_ph": true,
  "core_arch::x86::avx512fp16::_mm512_maskz_fmsub_ph": true,
  "core_arch::x86::avx512fp16::_mm512_maskz_fmsubadd_ph": true,
  "core_arch::x86::avx512fp16::_mm512_maskz_fmul_pch": true,
  "core_arch::x86::avx512fp16::_mm512_maskz_fnmadd_ph": true,
  "core_arch::x86::avx512fp16::_mm512_maskz_fnmsub_ph": true,
  "core_arch::x86::avx512fp16::_mm512_maskz_getexp_ph": true,
  "core_arch::x86::avx512fp16::_mm512_maskz_max_ph": true,
  "core_arch::x86::avx512fp16::_mm512_maskz_min_ph": true,
  "core_arch::x86::avx512fp16::_mm512_maskz_mul_pch": true,
  "core_arch::x86::avx512fp16::_mm512_maskz_mul_ph": true,
  "core_arch::x86::avx512fp16::_mm512_maskz_rcp_ph": true,
  "core_arch::x86::avx512fp16::_mm512_maskz_rsqrt_ph": true,
  "core_arch::x86::avx512fp16::_mm512_maskz_scalef_ph": true,
  "core_arch::x86::avx512fp16::_mm512_maskz_sqrt_ph": true,
  "core_arch::x86::avx512fp16::_mm512_maskz_sub_ph": true,
  "core_arch::x86::avx512fp16::_mm512_max_ph": true,
  "core_arch::x86::avx512fp16::_mm512_min_ph": true,
  "core_arch::x86::avx512fp16::_mm512_mul_pch": true,
  "core_arch::x86::avx512fp16::_mm512_mul_ph": true,
  "core_arch::x86::avx512fp16::_mm512_permutex2var_ph": true,
  "core_arch::x86::avx512fp16::_mm512_permutexvar_ph": true,
  "core_arch::x86::avx512fp16::_mm512_rcp_ph": true,
  "core_arch::x86::avx512fp16::_mm512_reduce_add_ph": true,
  "core_arch::x86::avx512fp16::_mm512_reduce_max_ph": true,
  "core_arch::x86::avx512fp16::_mm512_reduce_min_ph": true,
  "core_arch::x86::avx512fp16::_mm512_reduce_mul_ph": true,
  "core_arch::x86::avx512fp16::_mm512_rsqrt_ph": true,
  "core_arch::x86::avx512fp16::_mm512_scalef_ph": true,
  "core_arch::x86::avx512fp16::_mm512_set1_ph": true,
  "core_arch::x86::avx512fp16::_mm512_set_ph": true,
  "core_arch::x86::avx512fp16::_mm512_setr_ph": true,
  "core_arch::x86::avx512fp16::_mm512_setzero_ph": true,
  "core_arch::x86::avx512fp16::_mm512_sqrt_ph": true,
  "core_arch::x86::avx512fp16::_mm512_sub_ph": true,
  "core_arch::x86::avx512fp16::_mm512_undefined_ph": true,
  "core_arch::x86::avx512fp16::_mm512_zextph128_ph512": true,
  "core_arch::x86::avx512fp16::_mm512_zextph256_ph512": true,
  "core_arch::x86::avx512fp16::_mm_abs_ph": true,
  "core_arch::x86::avx512fp16::_mm_add_ph": true,
  "core_arch::x86::avx512fp16::_mm_add_sh": true,
  "core_arch::x86::avx512fp16::_mm_castpd_ph": true,
  "core_arch::x86::avx512fp16::_mm_castph_pd": true,
  "core_arch::x86::avx512fp16::_mm_castph_ps": true,
  "core_arch::x86::avx512fp16::_mm_castph_si128": true,
  "core_arch::x86::avx512fp16::_mm_castps_ph": true,
  "core_arch::x86::avx512fp16::_mm_castsi128_ph": true,
  "core_arch::x86::avx512fp16::_mm_cmul_pch": true,
  "core_arch::x86::avx512fp16::_mm_cmul_sch": true,
  "core_arch::x86::avx512fp16::_mm_comieq_sh": true,
  "core_arch::x86::avx512fp16::_mm_comige_sh": true,
  "core_arch::x86::avx512fp16::_mm_comigt_sh": true,
  "core_arch::x86::avx512fp16::_mm_comile_sh": true,
  "core_arch::x86::avx512fp16::_mm_comilt_sh": true,
  "core_arch::x86::avx512fp16::_mm_comineq_sh": true,
  "core_arch::x86::avx512fp16::_mm_conj_pch": true,
  "core_arch::x86::avx512fp16::_mm_cvtepi16_ph": true,
  "core_arch::x86::avx512fp16::_mm_cvtepi32_ph": true,
  "core_arch::x86::avx512fp16::_mm_cvtepi64_ph": true,
  "core_arch::x86::avx512fp16::_mm_cvtepu16_ph": true,
  "core_arch::x86::avx512fp16::_mm_cvtepu32_ph": true,
  "core_arch::x86::avx512fp16::_mm_cvtepu64_ph": true,
  "core_arch::x86::avx512fp16::_mm_cvti32_sh": true,
  "core_arch::x86::avx512fp16::_mm_cvtpd_ph": true,
  "core_arch::x86::avx512fp16::_mm_cvtph_epi16": true,
  "core_arch::x86::avx512fp16::_mm_cvtph_epi32": true,
  "core_arch::x86::avx512fp16::_mm_cvtph_epi64": true,
  "core_arch::x86::avx512fp16::_mm_cvtph_epu16": true,
  "core_arch::x86::avx512fp16::_mm_cvtph_epu32": true,
  "core_arch::x86::avx512fp16::_mm_cvtph_epu64": true,
  "core_arch::x86::avx512fp16::_mm_cvtph_pd": true,
  "core_arch::x86::avx512fp16::_mm_cvtsd_sh": true,
  "core_arch::x86::avx512fp16::_mm_cvtsh_h": true,
  "core_arch::x86::avx512fp16::_mm_cvtsh_i32": true,
  "core_arch::x86::avx512fp16::_mm_cvtsh_sd": true,
  "core_arch::x86::avx512fp16::_mm_cvtsh_ss": true,
  "core_arch::x86::avx512fp16::_mm_cvtsh_u32": true,
  "core_arch::x86::avx512fp16::_mm_cvtsi128_si16": true,
  "core_arch::x86::avx512fp16::_mm_cvtsi16_si128": true,
  "core_arch::x86::avx512fp16::_mm_cvtss_sh": true,
  "core_arch::x86::avx512fp16::_mm_cvttph_epi16": true,
  "core_arch::x86::avx512fp16::_mm_cvttph_epi32": true,
  "core_arch::x86::avx512fp16::_mm_cvttph_epi64": true,
  "core_arch::x86::avx512fp16::_mm_cvttph_epu16": true,
  "core_arch::x86::avx512fp16::_mm_cvttph_epu32": true,
  "core_arch::x86::avx512fp16::_mm_cvttph_epu64": true,
  "core_arch::x86::avx512fp16::_mm_cvttsh_i32": true,
  "core_arch::x86::avx512fp16::_mm_cvttsh_u32": true,
  "core_arch::x86::avx512fp16::_mm_cvtu32_sh": true,
  "core_arch::x86::avx512fp16::_mm_cvtxph_ps": true,
  "core_arch::x86::avx512fp16::_mm_cvtxps_ph": true,
  "core_arch::x86::avx512fp16::_mm_div_ph": true,
  "core_arch::x86::avx512fp16::_mm_div_sh": true,
  "core_arch::x86::avx512fp16::_mm_fcmadd_pch": true,
  "core_arch::x86::avx512fp16::_mm_fcmadd_sch": true,
  "core_arch::x86::avx512fp16::_mm_fcmul_pch": true,
  "core_arch::x86::avx512fp16::_mm_fcmul_sch": true,
  "core_arch::x86::avx512fp16::_mm_fmadd_pch": true,
  "core_arch::x86::avx512fp16::_mm_fmadd_ph": true,
  "core_arch::x86::avx512fp16::_mm_fmadd_sch": true,
  "core_arch::x86::avx512fp16::_mm_fmadd_sh": true,
  "core_arch::x86::avx512fp16::_mm_fmaddsub_ph": true,
  "core_arch::x86::avx512fp16::_mm_fmsub_ph": true,
  "core_arch::x86::avx512fp16::_mm_fmsub_sh": true,
  "core_arch::x86::avx512fp16::_mm_fmsubadd_ph": true,
  "core_arch::x86::avx512fp16::_mm_fmul_pch": true,
  "core_arch::x86::avx512fp16::_mm_fmul_sch": true,
  "core_arch::x86::avx512fp16::_mm_fnmadd_ph": true,
  "core_arch::x86::avx512fp16::_mm_fnmadd_sh": true,
  "core_arch::x86::avx512fp16::_mm_fnmsub_ph": true,
  "core_arch::x86::avx512fp16::_mm_fnmsub_sh": true,
  "core_arch::x86::avx512fp16::_mm_getexp_ph": true,
  "core_arch::x86::avx512fp16::_mm_getexp_sh": true,
  "core_arch::x86::avx512fp16::_mm_mask3_fcmadd_pch": true,
  "core_arch::x86::avx512fp16::_mm_mask3_fcmadd_sch": true,
  "core_arch::x86::avx512fp16::_mm_mask3_fmadd_pch": true,
  "core_arch::x86::avx512fp16::_mm_mask3_fmadd_ph": true,
  "core_arch::x86::avx512fp16::_mm_mask3_fmadd_sch": true,
  "core_arch::x86::avx512fp16::_mm_mask3_fmadd_sh": true,
  "core_arch::x86::avx512fp16::_mm_mask3_fmaddsub_ph": true,
  "core_arch::x86::avx512fp16::_mm_mask3_fmsub_ph": true,
  "core_arch::x86::avx512fp16::_mm_mask3_fmsub_sh": true,
  "core_arch::x86::avx512fp16::_mm_mask3_fmsubadd_ph": true,
  "core_arch::x86::avx512fp16::_mm_mask3_fnmadd_ph": true,
  "core_arch::x86::avx512fp16::_mm_mask3_fnmadd_sh": true,
  "core_arch::x86::avx512fp16::_mm_mask3_fnmsub_ph": true,
  "core_arch::x86::avx512fp16::_mm_mask3_fnmsub_sh": true,
  "core_arch::x86::avx512fp16::_mm_mask_add_ph": true,
  "core_arch::x86::avx512fp16::_mm_mask_add_sh": true,
  "core_arch::x86::avx512fp16::_mm_mask_blend_ph": true,
  "core_arch::x86::avx512fp16::_mm_mask_cmul_pch": true,
  "core_arch::x86::avx512fp16::_mm_mask_cmul_sch": true,
  "core_arch::x86::avx512fp16::_mm_mask_conj_pch": true,
  "core_arch::x86::avx512fp16::_mm_mask_cvtepi16_ph": true,
  "core_arch::x86::avx512fp16::_mm_mask_cvtepi32_ph": true,
  "core_arch::x86::avx512fp16::_mm_mask_cvtepi64_ph": true,
  "core_arch::x86::avx512fp16::_mm_mask_cvtepu16_ph": true,
  "core_arch::x86::avx512fp16::_mm_mask_cvtepu32_ph": true,
  "core_arch::x86::avx512fp16::_mm_mask_cvtepu64_ph": true,
  "core_arch::x86::avx512fp16::_mm_mask_cvtpd_ph": true,
  "core_arch::x86::avx512fp16::_mm_mask_cvtph_epi16": true,
  "core_arch::x86::avx512fp16::_mm_mask_cvtph_epi32": true,
  "core_arch::x86::avx512fp16::_mm_mask_cvtph_epi64": true,
  "core_arch::x86::avx512fp16::_mm_mask_cvtph_epu16": true,
  "core_arch::x86::avx512fp16::_mm_mask_cvtph_epu32": true,
  "core_arch::x86::avx512fp16::_mm_mask_cvtph_epu64": true,
  "core_arch::x86::avx512fp16::_mm_mask_cvtph_pd": true,
  "core_arch::x86::avx512fp16::_mm_mask_cvtsd_sh": true,
  "core_arch::x86::avx512fp16::_mm_mask_cvtsh_sd": true,
  "core_arch::x86::avx512fp16::_mm_mask_cvtsh_ss": true,
  "core_arch::x86::avx512fp16::_mm_mask_cvtss_sh": true,
  "core_arch::x86::avx512fp16::_mm_mask_cvttph_epi16": true,
  "core_arch::x86::avx512fp16::_mm_mask_cvttph_epi32": true,
  "core_arch::x86::avx512fp16::_mm_mask_cvttph_epi64": true,
  "core_arch::x86::avx512fp16::_mm_mask_cvttph_epu16": true,
  "core_arch::x86::avx512fp16::_mm_mask_cvttph_epu32": true,
  "core_arch::x86::avx512fp16::_mm_mask_cvttph_epu64": true,
  "core_arch::x86::avx512fp16::_mm_mask_cvtxph_ps": true,
  "core_arch::x86::avx512fp16::_mm_mask_cvtxps_ph": true,
  "core_arch::x86::avx512fp16::_mm_mask_div_ph": true,
  "core_arch::x86::avx512fp16::_mm_mask_div_sh": true,
  "core_arch::x86::avx512fp16::_mm_mask_fcmadd_pch": true,
  "core_arch::x86::avx512fp16::_mm_mask_fcmadd_sch": true,
  "core_arch::x86::avx512fp16::_mm_mask_fcmul_pch": true,
  "core_arch::x86::avx512fp16::_mm_mask_fcmul_sch": true,
  "core_arch::x86::avx512fp16::_mm_mask_fmadd_pch": true,
  "core_arch::x86::avx512fp16::_mm_mask_fmadd_ph": true,
  "core_arch::x86::avx512fp16::_mm_mask_fmadd_sch": true,
  "core_arch::x86::avx512fp16::_mm_mask_fmadd_sh": true,
  "core_arch::x86::avx512fp16::_mm_mask_fmaddsub_ph": true,
  "core_arch::x86::avx512fp16::_mm_mask_fmsub_ph": true,
  "core_arch::x86::avx512fp16::_mm_mask_fmsub_sh": true,
  "core_arch::x86::avx512fp16::_mm_mask_fmsubadd_ph": true,
  "core_arch::x86::avx512fp16::_mm_mask_fmul_pch": true,
  "core_arch::x86::avx512fp16::_mm_mask_fmul_sch": true,
  "core_arch::x86::avx512fp16::_mm_mask_fnmadd_ph": true,
  "core_arch::x86::avx512fp16::_mm_mask_fnmadd_sh": true,
  "core_arch::x86::avx512fp16::_mm_mask_fnmsub_ph": true,
  "core_arch::x86::avx512fp16::_mm_mask_fnmsub_sh": true,
  "core_arch::x86::avx512fp16::_mm_mask_getexp_ph": true,
  "core_arch::x86::avx512fp16::_mm_mask_getexp_sh": true,
  "core_arch::x86::avx512fp16::_mm_mask_max_ph": true,
  "core_arch::x86::avx512fp16::_mm_mask_max_sh": true,
  "core_arch::x86::avx512fp16::_mm_mask_min_ph": true,
  "core_arch::x86::avx512fp16::_mm_mask_min_sh": true,
  "core_arch::x86::avx512fp16::_mm_mask_move_sh": true,
  "core_arch::x86::avx512fp16::_mm_mask_mul_pch": true,
  "core_arch::x86::avx512fp16::_mm_mask_mul_ph": true,
  "core_arch::x86::avx512fp16::_mm_mask_mul_sch": true,
  "core_arch::x86::avx512fp16::_mm_mask_mul_sh": true,
  "core_arch::x86::avx512fp16::_mm_mask_rcp_ph": true,
  "core_arch::x86::avx512fp16::_mm_mask_rcp_sh": true,
  "core_arch::x86::avx512fp16::_mm_mask_rsqrt_ph": true,
  "core_arch::x86::avx512fp16::_mm_mask_rsqrt_sh": true,
  "core_arch::x86::avx512fp16::_mm_mask_scalef_ph": true,
  "core_arch::x86::avx512fp16::_mm_mask_scalef_sh": true,
  "core_arch::x86::avx512fp16::_mm_mask_sqrt_ph": true,
  "core_arch::x86::avx512fp16::_mm_mask_sqrt_sh": true,
  "core_arch::x86::avx512fp16::_mm_mask_sub_ph": true,
  "core_arch::x86::avx512fp16::_mm_mask_sub_sh": true,
  "core_arch::x86::avx512fp16::_mm_maskz_add_ph": true,
  "core_arch::x86::avx512fp16::_mm_maskz_add_sh": true,
  "core_arch::x86::avx512fp16::_mm_maskz_cmul_pch": true,
  "core_arch::x86::avx512fp16::_mm_maskz_cmul_sch": true,
  "core_arch::x86::avx512fp16::_mm_maskz_conj_pch": true,
  "core_arch::x86::avx512fp16::_mm_maskz_cvtepi16_ph": true,
  "core_arch::x86::avx512fp16::_mm_maskz_cvtepi32_ph": true,
  "core_arch::x86::avx512fp16::_mm_maskz_cvtepi64_ph": true,
  "core_arch::x86::avx512fp16::_mm_maskz_cvtepu16_ph": true,
  "core_arch::x86::avx512fp16::_mm_maskz_cvtepu32_ph": true,
  "core_arch::x86::avx512fp16::_mm_maskz_cvtepu64_ph": true,
  "core_arch::x86::avx512fp16::_mm_maskz_cvtpd_ph": true,
  "core_arch::x86::avx512fp16::_mm_maskz_cvtph_epi16": true,
  "core_arch::x86::avx512fp16::_mm_maskz_cvtph_epi32": true,
  "core_arch::x86::avx512fp16::_mm_maskz_cvtph_epi64": true,
  "core_arch::x86::avx512fp16::_mm_maskz_cvtph_epu16": true,
  "core_arch::x86::avx512fp16::_mm_maskz_cvtph_epu32": true,
  "core_arch::x86::avx512fp16::_mm_maskz_cvtph_epu64": true,
  "core_arch::x86::avx512fp16::_mm_maskz_cvtph_pd": true,
  "core_arch::x86::avx512fp16::_mm_maskz_cvtsd_sh": true,
  "core_arch::x86::avx512fp16::_mm_maskz_cvtsh_sd": true,
  "core_arch::x86::avx512fp16::_mm_maskz_cvtsh_ss": true,
  "core_arch::x86::avx512fp16::_mm_maskz_cvtss_sh": true,
  "core_arch::x86::avx512fp16::_mm_maskz_cvttph_epi16": true,
  "core_arch::x86::avx512fp16::_mm_maskz_cvttph_epi32": true,
  "core_arch::x86::avx512fp16::_mm_maskz_cvttph_epi64": true,
  "core_arch::x86::avx512fp16::_mm_maskz_cvttph_epu16": true,
  "core_arch::x86::avx512fp16::_mm_maskz_cvttph_epu32": true,
  "core_arch::x86::avx512fp16::_mm_maskz_cvttph_epu64": true,
  "core_arch::x86::avx512fp16::_mm_maskz_cvtxph_ps": true,
  "core_arch::x86::avx512fp16::_mm_maskz_cvtxps_ph": true,
  "core_arch::x86::avx512fp16::_mm_maskz_div_ph": true,
  "core_arch::x86::avx512fp16::_mm_maskz_div_sh": true,
  "core_arch::x86::avx512fp16::_mm_maskz_fcmadd_pch": true,
  "core_arch::x86::avx512fp16::_mm_maskz_fcmadd_sch": true,
  "core_arch::x86::avx512fp16::_mm_maskz_fcmul_pch": true,
  "core_arch::x86::avx512fp16::_mm_maskz_fcmul_sch": true,
  "core_arch::x86::avx512fp16::_mm_maskz_fmadd_pch": true,
  "core_arch::x86::avx512fp16::_mm_maskz_fmadd_ph": true,
  "core_arch::x86::avx512fp16::_mm_maskz_fmadd_sch": true,
  "core_arch::x86::avx512fp16::_mm_maskz_fmadd_sh": true,
  "core_arch::x86::avx512fp16::_mm_maskz_fmaddsub_ph": true,
  "core_arch::x86::avx512fp16::_mm_maskz_fmsub_ph": true,
  "core_arch::x86::avx512fp16::_mm_maskz_fmsub_sh": true,
  "core_arch::x86::avx512fp16::_mm_maskz_fmsubadd_ph": true,
  "core_arch::x86::avx512fp16::_mm_maskz_fmul_pch": true,
  "core_arch::x86::avx512fp16::_mm_maskz_fmul_sch": true,
  "core_arch::x86::avx512fp16::_mm_maskz_fnmadd_ph": true,
  "core_arch::x86::avx512fp16::_mm_maskz_fnmadd_sh": true,
  "core_arch::x86::avx512fp16::_mm_maskz_fnmsub_ph": true,
  "core_arch::x86::avx512fp16::_mm_maskz_fnmsub_sh": true,
  "core_arch::x86::avx512fp16::_mm_maskz_getexp_ph": true,
  "core_arch::x86::avx512fp16::_mm_maskz_getexp_sh": true,
  "core_arch::x86::avx512fp16::_mm_maskz_max_ph": true,
  "core_arch::x86::avx512fp16::_mm_maskz_max_sh": true,
  "core_arch::x86::avx512fp16::_mm_maskz_min_ph": true,
  "core_arch::x86::avx512fp16::_mm_maskz_min_sh": true,
  "core_arch::x86::avx512fp16::_mm_maskz_move_sh": true,
  "core_arch::x86::avx512fp16::_mm_maskz_mul_pch": true,
  "core_arch::x86::avx512fp16::_mm_maskz_mul_ph": true,
  "core_arch::x86::avx512fp16::_mm_maskz_mul_sch": true,
  "core_arch::x86::avx512fp16::_mm_maskz_mul_sh": true,
  "core_arch::x86::avx512fp16::_mm_maskz_rcp_ph": true,
  "core_arch::x86::avx512fp16::_mm_maskz_rcp_sh": true,
  "core_arch::x86::avx512fp16::_mm_maskz_rsqrt_ph": true,
  "core_arch::x86::avx512fp16::_mm_maskz_rsqrt_sh": true,
  "core_arch::x86::avx512fp16::_mm_maskz_scalef_ph": true,
  "core_arch::x86::avx512fp16::_mm_maskz_scalef_sh": true,
  "core_arch::x86::avx512fp16::_mm_maskz_sqrt_ph": true,
  "core_arch::x86::avx512fp16::_mm_maskz_sqrt_sh": true,
  "core_arch::x86::avx512fp16::_mm_maskz_sub_ph": true,
  "core_arch::x86::avx512fp16::_mm_maskz_sub_sh": true,
  "core_arch::x86::avx512fp16::_mm_max_ph": true,
  "core_arch::x86::avx512fp16::_mm_max_sh": true,
  "core_arch::x86::avx512fp16::_mm_min_ph": true,
  "core_arch::x86::avx512fp16::_mm_min_sh": true,
  "core_arch::x86::avx512fp16::_mm_move_sh": true,
  "core_arch::x86::avx512fp16::_mm_mul_pch": true,
  "core_arch::x86::avx512fp16::_mm_mul_ph": true,
  "core_arch::x86::avx512fp16::_mm_mul_sch": true,
  "core_arch::x86::avx512fp16::_mm_mul_sh": true,
  "core_arch::x86::avx512fp16::_mm_permutex2var_ph": true,
  "core_arch::x86::avx512fp16::_mm_permutexvar_ph": true,
  "core_arch::x86::avx512fp16::_mm_rcp_ph": true,
  "core_arch::x86::avx512fp16::_mm_rcp_sh": true,
  "core_arch::x86::avx512fp16::_mm_reduce_add_ph": true,
  "core_arch::x86::avx512fp16::_mm_reduce_max_ph": true,
  "core_arch::x86::avx512fp16::_mm_reduce_min_ph": true,
  "core_arch::x86::avx512fp16::_mm_reduce_mul_ph": true,
  "core_arch::x86::avx512fp16::_mm_rsqrt_ph": true,
  "core_arch::x86::avx512fp16::_mm_rsqrt_sh": true,
  "core_arch::x86::avx512fp16::_mm_scalef_ph": true,
  "core_arch::x86::avx512fp16::_mm_scalef_sh": true,
  "core_arch::x86::avx512fp16::_mm_set1_ph": true,
  "core_arch::x86::avx512fp16::_mm_set_ph": true,
  "core_arch::x86::avx512fp16::_mm_set_sh": true,
  "core_arch::x86::avx512fp16::_mm_setr_ph": true,
  "core_arch::x86::avx512fp16::_mm_setzero_ph": true,
  "core_arch::x86::avx512fp16::_mm_sqrt_ph": true,
  "core_arch::x86::avx512fp16::_mm_sqrt_sh": true,
  "core_arch::x86::avx512fp16::_mm_sub_ph": true,
  "core_arch::x86::avx512fp16::_mm_sub_sh": true,
  "core_arch::x86::avx512fp16::_mm_ucomieq_sh": true,
  "core_arch::x86::avx512fp16::_mm_ucomige_sh": true,
  "core_arch::x86::avx512fp16::_mm_ucomigt_sh": true,
  "core_arch::x86::avx512fp16::_mm_ucomile_sh": true,
  "core_arch::x86::avx512fp16::_mm_ucomilt_sh": true,
  "core_arch::x86::avx512fp16::_mm_ucomineq_sh": true,
  "core_arch::x86::avx512fp16::_mm_undefined_ph": true,
  "core_arch::x86::avx512ifma::_mm256_madd52hi_avx_epu64": true,
  "core_arch::x86::avx512ifma::_mm256_madd52hi_epu64": true,
  "core_arch::x86::avx512ifma::_mm256_madd52lo_avx_epu64": true,
  "core_arch::x86::avx512ifma::_mm256_madd52lo_epu64": true,
  "core_arch::x86::avx512ifma::_mm256_mask_madd52hi_epu64": true,
  "core_arch::x86::avx512ifma::_mm256_mask_madd52lo_epu64": true,
  "core_arch::x86::avx512ifma::_mm256_maskz_madd52hi_epu64": true,
  "core_arch::x86::avx512ifma::_mm256_maskz_madd52lo_epu64": true,
  "core_arch::x86::avx512ifma::_mm512_madd52hi_epu64": true,
  "core_arch::x86::avx512ifma::_mm512_madd52lo_epu64": true,
  "core_arch::x86::avx512ifma::_mm512_mask_madd52hi_epu64": true,
  "core_arch::x86::avx512ifma::_mm512_mask_madd52lo_epu64": true,
  "core_arch::x86::avx512ifma::_mm512_maskz_madd52hi_epu64": true,
  "core_arch::x86::avx512ifma::_mm512_maskz_madd52lo_epu64": true,
  "core_arch::x86::avx512ifma::_mm_madd52hi_avx_epu64": true,
  "core_arch::x86::avx512ifma::_mm_madd52hi_epu64": true,
  "core_arch::x86::avx512ifma::_mm_madd52lo_avx_epu64": true,
  "core_arch::x86::avx512ifma::_mm_madd52lo_epu64": true,
  "core_arch::x86::avx512ifma::_mm_mask_madd52hi_epu64": true,
  "core_arch::x86::avx512ifma::_mm_mask_madd52lo_epu64": true,
  "core_arch::x86::avx512ifma::_mm_maskz_madd52hi_epu64": true,
  "core_arch::x86::avx512ifma::_mm_maskz_madd52lo_epu64": true,
  "core_arch::x86::avx512vbmi2::_mm256_mask_compress_epi16": true,
  "core_arch::x86::avx512vbmi2::_mm256_mask_compress_epi8": true,
  "core_arch::x86::avx512vbmi2::_mm256_mask_expand_epi16": true,
  "core_arch::x86::avx512vbmi2::_mm256_mask_expand_epi8": true,
  "core_arch::x86::avx512vbmi2::_mm256_mask_shldv_epi16": true,
  "core_arch::x86::avx512vbmi2::_mm256_mask_shldv_epi32": true,
  "core_arch::x86::avx512vbmi2::_mm256_mask_shldv_epi64": true,
  "core_arch::x86::avx512vbmi2::_mm256_mask_shrdv_epi16": true,
  "core_arch::x86::avx512vbmi2::_mm256_mask_shrdv_epi32": true,
  "core_arch::x86::avx512vbmi2::_mm256_mask_shrdv_epi64": true,
  "core_arch::x86::avx512vbmi2::_mm256_maskz_compress_epi16": true,
  "core_arch::x86::avx512vbmi2::_mm256_maskz_compress_epi8": true,
  "core_arch::x86::avx512vbmi2::_mm256_maskz_expand_epi16": true,
  "core_arch::x86::avx512vbmi2::_mm256_maskz_expand_epi8": true,
  "core_arch::x86::avx512vbmi2::_mm256_maskz_shldv_epi16": true,
  "core_arch::x86::avx512vbmi2::_mm256_maskz_shldv_epi32": true,
  "core_arch::x86::avx512vbmi2::_mm256_maskz_shldv_epi64": true,
  "core_arch::x86::avx512vbmi2::_mm256_maskz_shrdv_epi16": true,
  "core_arch::x86::avx512vbmi2::_mm256_maskz_shrdv_epi32": true,
  "core_arch::x86::avx512vbmi2::_mm256_maskz_shrdv_epi64": true,
  "core_arch::x86::avx512vbmi2::_mm256_shldv_epi16": true,
  "core_arch::x86::avx512vbmi2::_mm256_shldv_epi32": true,
  "core_arch::x86::avx512vbmi2::_mm256_shldv_epi64": true,
  "core_arch::x86::avx512vbmi2::_mm256_shrdv_epi16": true,
  "core_arch::x86::avx512vbmi2::_mm256_shrdv_epi32": true,
  "core_arch::x86::avx512vbmi2::_mm256_shrdv_epi64": true,
  "core_arch::x86::avx512vbmi2::_mm512_mask_compress_epi16": true,
  "core_arch::x86::avx512vbmi2::_mm512_mask_compress_epi8": true,
  "core_arch::x86::avx512vbmi2::_mm512_mask_expand_epi16": true,
  "core_arch::x86::avx512vbmi2::_mm512_mask_expand_epi8": true,
  "core_arch::x86::avx512vbmi2::_mm512_mask_shldv_epi16": true,
  "core_arch::x86::avx512vbmi2::_mm512_mask_shldv_epi32": true,
  "core_arch::x86::avx512vbmi2::_mm512_mask_shldv_epi64": true,
  "core_arch::x86::avx512vbmi2::_mm512_mask_shrdv_epi16": true,
  "core_arch::x86::avx512vbmi2::_mm512_mask_shrdv_epi32": true,
  "core_arch::x86::avx512vbmi2::_mm512_mask_shrdv_epi64": true,
  "core_arch::x86::avx512vbmi2::_mm512_maskz_compress_epi16": true,
  "core_arch::x86::avx512vbmi2::_mm512_maskz_compress_epi8": true,
  "core_arch::x86::avx512vbmi2::_mm512_maskz_expand_epi16": true,
  "core_arch::x86::avx512vbmi2::_mm512_maskz_expand_epi8": true,
  "core_arch::x86::avx512vbmi2::_mm512_maskz_shldv_epi16": true,
  "core_arch::x86::avx512vbmi2::_mm512_maskz_shldv_epi32": true,
  "core_arch::x86::avx512vbmi2::_mm512_maskz_shldv_epi64": true,
  "core_arch::x86::avx512vbmi2::_mm512_maskz_shrdv_epi16": true,
  "core_arch::x86::avx512vbmi2::_mm512_maskz_shrdv_epi32": true,
  "core_arch::x86::avx512vbmi2::_mm512_maskz_shrdv_epi64": true,
  "core_arch::x86::avx512vbmi2::_mm512_shldv_epi16": true,
  "core_arch::x86::avx512vbmi2::_mm512_shldv_epi32": true,
  "core_arch::x86::avx512vbmi2::_mm512_shldv_epi64": true,
  "core_arch::x86::avx512vbmi2::_mm512_shrdv_epi16": true,
  "core_arch::x86::avx512vbmi2::_mm512_shrdv_epi32": true,
  "core_arch::x86::avx512vbmi2::_mm512_shrdv_epi64": true,
  "core_arch::x86::avx512vbmi2::_mm_mask_compress_epi16": true,
  "core_arch::x86::avx512vbmi2::_mm_mask_compress_epi8": true,
  "core_arch::x86::avx512vbmi2::_mm_mask_expand_epi16": true,
  "core_arch::x86::avx512vbmi2::_mm_mask_expand_epi8": true,
  "core_arch::x86::avx512vbmi2::_mm_mask_shldv_epi16": true,
  "core_arch::x86::avx512vbmi2::_mm_mask_shldv_epi32": true,
  "core_arch::x86::avx512vbmi2::_mm_mask_shldv_epi64": true,
  "core_arch::x86::avx512vbmi2::_mm_mask_shrdv_epi16": true,
  "core_arch::x86::avx512vbmi2::_mm_mask_shrdv_epi32": true,
  "core_arch::x86::avx512vbmi2::_mm_mask_shrdv_epi64": true,
  "core_arch::x86::avx512vbmi2::_mm_maskz_compress_epi16": true,
  "core_arch::x86::avx512vbmi2::_mm_maskz_compress_epi8": true,
  "core_arch::x86::avx512vbmi2::_mm_maskz_expand_epi16": true,
  "core_arch::x86::avx512vbmi2::_mm_maskz_expand_epi8": true,
  "core_arch::x86::avx512vbmi2::_mm_maskz_shldv_epi16": true,
  "core_arch::x86::avx512vbmi2::_mm_maskz_shldv_epi32": true,
  "core_arch::x86::avx512vbmi2::_mm_maskz_shldv_epi64": true,
  "core_arch::x86::avx512vbmi2::_mm_maskz_shrdv_epi16": true,
  "core_arch::x86::avx512vbmi2::_mm_maskz_shrdv_epi32": true,
  "core_arch::x86::avx512vbmi2::_mm_maskz_shrdv_epi64": true,
  "core_arch::x86::avx512vbmi2::_mm_shldv_epi16": true,
  "core_arch::x86::avx512vbmi2::_mm_shldv_epi32": true,
  "core_arch::x86::avx512vbmi2::_mm_shldv_epi64": true,
  "core_arch::x86::avx512vbmi2::_mm_shrdv_epi16": true,
  "core_arch::x86::avx512vbmi2::_mm_shrdv_epi32": true,
  "core_arch::x86::avx512vbmi2::_mm_shrdv_epi64": true,
  "core_arch::x86::avx512vbmi::_mm256_mask2_permutex2var_epi8": true,
  "core_arch::x86::avx512vbmi::_mm256_mask_multishift_epi64_epi8": true,
  "core_arch::x86::avx512vbmi::_mm256_mask_permutex2var_epi8": true,
  "core_arch::x86::avx512vbmi::_mm256_mask_permutexvar_epi8": true,
  "core_arch::x86::avx512vbmi::_mm256_maskz_multishift_epi64_epi8": true,
  "core_arch::x86::avx512vbmi::_mm256_maskz_permutex2var_epi8": true,
  "core_arch::x86::avx512vbmi::_mm256_maskz_permutexvar_epi8": true,
  "core_arch::x86::avx512vbmi::_mm256_multishift_epi64_epi8": true,
  "core_arch::x86::avx512vbmi::_mm256_permutex2var_epi8": true,
  "core_arch::x86::avx512vbmi::_mm256_permutexvar_epi8": true,
  "core_arch::x86::avx512vbmi::_mm512_mask2_permutex2var_epi8": true,
  "core_arch::x86::avx512vbmi::_mm512_mask_multishift_epi64_epi8": true,
  "core_arch::x86::avx512vbmi::_mm512_mask_permutex2var_epi8": true,
  "core_arch::x86::avx512vbmi::_mm512_mask_permutexvar_epi8": true,
  "core_arch::x86::avx512vbmi::_mm512_maskz_multishift_epi64_epi8": true,
  "core_arch::x86::avx512vbmi::_mm512_maskz_permutex2var_epi8": true,
  "core_arch::x86::avx512vbmi::_mm512_maskz_permutexvar_epi8": true,
  "core_arch::x86::avx512vbmi::_mm512_multishift_epi64_epi8": true,
  "core_arch::x86::avx512vbmi::_mm512_permutex2var_epi8": true,
  "core_arch::x86::avx512vbmi::_mm512_permutexvar_epi8": true,
  "core_arch::x86::avx512vbmi::_mm_mask2_permutex2var_epi8": true,
  "core_arch::x86::avx512vbmi::_mm_mask_multishift_epi64_epi8": true,
  "core_arch::x86::avx512vbmi::_mm_mask_permutex2var_epi8": true,
  "core_arch::x86::avx512vbmi::_mm_mask_permutexvar_epi8": true,
  "core_arch::x86::avx512vbmi::_mm_maskz_multishift_epi64_epi8": true,
  "core_arch::x86::avx512vbmi::_mm_maskz_permutex2var_epi8": true,
  "core_arch::x86::avx512vbmi::_mm_maskz_permutexvar_epi8": true,
  "core_arch::x86::avx512vbmi::_mm_multishift_epi64_epi8": true,
  "core_arch::x86::avx512vbmi::_mm_permutex2var_epi8": true,
  "core_arch::x86::avx512vbmi::_mm_permutexvar_epi8": true,
  "core_arch::x86::avx512vnni::_mm256_dpbssd_epi32": true,
  "core_arch::x86::avx512vnni::_mm256_dpbssds_epi32": true,
  "core_arch::x86::avx512vnni::_mm256_dpbsud_epi32": true,
  "core_arch::x86::avx512vnni::_mm256_dpbsuds_epi32": true,
  "core_arch::x86::avx512vnni::_mm256_dpbusd_avx_epi32": true,
  "core_arch::x86::avx512vnni::_mm256_dpbusd_epi32": true,
  "core_arch::x86::avx512vnni::_mm256_dpbusds_avx_epi32": true,
  "core_arch::x86::avx512vnni::_mm256_dpbusds_epi32": true,
  "core_arch::x86::avx512vnni::_mm256_dpbuud_epi32": true,
  "core_arch::x86::avx512vnni::_mm256_dpbuuds_epi32": true,
  "core_arch::x86::avx512vnni::_mm256_dpwssd_avx_epi32": true,
  "core_arch::x86::avx512vnni::_mm256_dpwssd_epi32": true,
  "core_arch::x86::avx512vnni::_mm256_dpwssds_avx_epi32": true,
  "core_arch::x86::avx512vnni::_mm256_dpwssds_epi32": true,
  "core_arch::x86::avx512vnni::_mm256_dpwsud_epi32": true,
  "core_arch::x86::avx512vnni::_mm256_dpwsuds_epi32": true,
  "core_arch::x86::avx512vnni::_mm256_dpwusd_epi32": true,
  "core_arch::x86::avx512vnni::_mm256_dpwusds_epi32": true,
  "core_arch::x86::avx512vnni::_mm256_dpwuud_epi32": true,
  "core_arch::x86::avx512vnni::_mm256_dpwuuds_epi32": true,
  "core_arch::x86::avx512vnni::_mm256_mask_dpbusd_epi32": true,
  "core_arch::x86::avx512vnni::_mm256_mask_dpbusds_epi32": true,
  "core_arch::x86::avx512vnni::_mm256_mask_dpwssd_epi32": true,
  "core_arch::x86::avx512vnni::_mm256_mask_dpwssds_epi32": true,
  "core_arch::x86::avx512vnni::_mm256_maskz_dpbusd_epi32": true,
  "core_arch::x86::avx512vnni::_mm256_maskz_dpbusds_epi32": true,
  "core_arch::x86::avx512vnni::_mm256_maskz_dpwssd_epi32": true,
  "core_arch::x86::avx512vnni::_mm256_maskz_dpwssds_epi32": true,
  "core_arch::x86::avx512vnni::_mm512_dpbusd_epi32": true,
  "core_arch::x86::avx512vnni::_mm512_dpbusds_epi32": true,
  "core_arch::x86::avx512vnni::_mm512_dpwssd_epi32": true,
  "core_arch::x86::avx512vnni::_mm512_dpwssds_epi32": true,
  "core_arch::x86::avx512vnni::_mm512_mask_dpbusd_epi32": true,
  "core_arch::x86::avx512vnni::_mm512_mask_dpbusds_epi32": true,
  "core_arch::x86::avx512vnni::_mm512_mask_dpwssd_epi32": true,
  "core_arch::x86::avx512vnni::_mm512_mask_dpwssds_epi32": true,
  "core_arch::x86::avx512vnni::_mm512_maskz_dpbusd_epi32": true,
  "core_arch::x86::avx512vnni::_mm512_maskz_dpbusds_epi32": true,
  "core_arch::x86::avx512vnni::_mm512_maskz_dpwssd_epi32": true,
  "core_arch::x86::avx512vnni::_mm512_maskz_dpwssds_epi32": true,
  "core_arch::x86::avx512vnni::_mm_dpbssd_epi32": true,
  "core_arch::x86::avx512vnni::_mm_dpbssds_epi32": true,
  "core_arch::x86::avx512vnni::_mm_dpbsud_epi32": true,
  "core_arch::x86::avx512vnni::_mm_dpbsuds_epi32": true,
  "core_arch::x86::avx512vnni::_mm_dpbusd_avx_epi32": true,
  "core_arch::x86::avx512vnni::_mm_dpbusd_epi32": true,
  "core_arch::x86::avx512vnni::_mm_dpbusds_avx_epi32": true,
  "core_arch::x86::avx512vnni::_mm_dpbusds_epi32": true,
  "core_arch::x86::avx512vnni::_mm_dpbuud_epi32": true,
  "core_arch::x86::avx512vnni::_mm_dpbuuds_epi32": true,
  "core_arch::x86::avx512vnni::_mm_dpwssd_avx_epi32": true,
  "core_arch::x86::avx512vnni::_mm_dpwssd_epi32": true,
  "core_arch::x86::avx512vnni::_mm_dpwssds_avx_epi32": true,
  "core_arch::x86::avx512vnni::_mm_dpwssds_epi32": true,
  "core_arch::x86::avx512vnni::_mm_dpwsud_epi32": true,
  "core_arch::x86::avx512vnni::_mm_dpwsuds_epi32": true,
  "core_arch::x86::avx512vnni::_mm_dpwusd_epi32": true,
  "core_arch::x86::avx512vnni::_mm_dpwusds_epi32": true,
  "core_arch::x86::avx512vnni::_mm_dpwuud_epi32": true,
  "core_arch::x86::avx512vnni::_mm_dpwuuds_epi32": true,
  "core_arch::x86::avx512vnni::_mm_mask_dpbusd_epi32": true,
  "core_arch::x86::avx512vnni::_mm_mask_dpbusds_epi32": true,
  "core_arch::x86::avx512vnni::_mm_mask_dpwssd_epi32": true,
  "core_arch::x86::avx512vnni::_mm_mask_dpwssds_epi32": true,
  "core_arch::x86::avx512vnni::_mm_maskz_dpbusd_epi32": true,
  "core_arch::x86::avx512vnni::_mm_maskz_dpbusds_epi32": true,
  "core_arch::x86::avx512vnni::_mm_maskz_dpwssd_epi32": true,
  "core_arch::x86::avx512vnni::_mm_maskz_dpwssds_epi32": true,
  "core_arch::x86::avx512vpopcntdq::_mm256_mask_popcnt_epi32": true,
  "core_arch::x86::avx512vpopcntdq::_mm256_mask_popcnt_epi64": true,
  "core_arch::x86::avx512vpopcntdq::_mm256_maskz_popcnt_epi32": true,
  "core_arch::x86::avx512vpopcntdq::_mm256_maskz_popcnt_epi64": true,
  "core_arch::x86::avx512vpopcntdq::_mm256_popcnt_epi32": true,
  "core_arch::x86::avx512vpopcntdq::_mm256_popcnt_epi64": true,
  "core_arch::x86::avx512vpopcntdq::_mm512_mask_popcnt_epi32": true,
  "core_arch::x86::avx512vpopcntdq::_mm512_mask_popcnt_epi64": true,
  "core_arch::x86::avx512vpopcntdq::_mm512_maskz_popcnt_epi32": true,
  "core_arch::x86::avx512vpopcntdq::_mm512_maskz_popcnt_epi64": true,
  "core_arch::x86::avx512vpopcntdq::_mm512_popcnt_epi32": true,
  "core_arch::x86::avx512vpopcntdq::_mm512_popcnt_epi64": true,
  "core_arch::x86::avx512vpopcntdq::_mm_mask_popcnt_epi32": true,
  "core_arch::x86::avx512vpopcntdq::_mm_mask_popcnt_epi64": true,
  "core_arch::x86::avx512vpopcntdq::_mm_maskz_popcnt_epi32": true,
  "core_arch::x86::avx512vpopcntdq::_mm_maskz_popcnt_epi64": true,
  "core_arch::x86::avx512vpopcntdq::_mm_popcnt_epi32": true,
  "core_arch::x86::avx512vpopcntdq::_mm_popcnt_epi64": true,
  "core_arch::x86::avx::_mm256_add_pd": true,
  "core_arch::x86::avx::_mm256_add_ps": true,
  "core_arch::x86::avx::_mm256_addsub_pd": true,
  "core_arch::x86::avx::_mm256_addsub_ps": true,
  "core_arch::x86::avx::_mm256_and_pd": true,
  "core_arch::x86::avx::_mm256_and_ps": true,
  "core_arch::x86::avx::_mm256_andnot_pd": true,
  "core_arch::x86::avx::_mm256_andnot_ps": true,
  "core_arch::x86::avx::_mm256_blendv_pd": true,
  "core_arch::x86::avx::_mm256_blendv_ps": true,
  "core_arch::x86::avx::_mm256_broadcast_pd": true,
  "core_arch::x86::avx::_mm256_broadcast_ps": true,
  "core_arch::x86::avx::_mm256_broadcast_sd": true,
  "core_arch::x86::avx::_mm256_broadcast_ss": true,
  "core_arch::x86::avx::_mm256_castpd128_pd256": true,
  "core_arch::x86::avx::_mm256_castpd256_pd128": true,
  "core_arch::x86::avx::_mm256_castpd_ps": true,
  "core_arch::x86::avx::_mm256_castpd_si256": true,
  "core_arch::x86::avx::_mm256_castps128_ps256": true,
  "core_arch::x86::avx::_mm256_castps256_ps128": true,
  "core_arch::x86::avx::_mm256_castps_pd": true,
  "core_arch::x86::avx::_mm256_castps_si256": true,
  "core_arch::x86::avx::_mm256_castsi128_si256": true,
  "core_arch::x86::avx::_mm256_castsi256_pd": true,
  "core_arch::x86::avx::_mm256_castsi256_ps": true,
  "core_arch::x86::avx::_mm256_castsi256_si128": true,
  "core_arch::x86::avx::_mm256_ceil_pd": true,
  "core_arch::x86::avx::_mm256_ceil_ps": true,
  "core_arch::x86::avx::_mm256_cvtepi32_pd": true,
  "core_arch::x86::avx::_mm256_cvtepi32_ps": true,
  "core_arch::x86::avx::_mm256_cvtpd_epi32": true,
  "core_arch::x86::avx::_mm256_cvtpd_ps": true,
  "core_arch::x86::avx::_mm256_cvtps_epi32": true,
  "core_arch::x86::avx::_mm256_cvtps_pd": true,
  "core_arch::x86::avx::_mm256_cvtsd_f64": true,
  "core_arch::x86::avx::_mm256_cvtsi256_si32": true,
  "core_arch::x86::avx::_mm256_cvtss_f32": true,
  "core_arch::x86::avx::_mm256_cvttpd_epi32": true,
  "core_arch::x86::avx::_mm256_cvttps_epi32": true,
  "core_arch::x86::avx::_mm256_div_pd": true,
  "core_arch::x86::avx::_mm256_div_ps": true,
  "core_arch::x86::avx::_mm256_floor_pd": true,
  "core_arch::x86::avx::_mm256_floor_ps": true,
  "core_arch::x86::avx::_mm256_hadd_pd": true,
  "core_arch::x86::avx::_mm256_hadd_ps": true,
  "core_arch::x86::avx::_mm256_hsub_pd": true,
  "core_arch::x86::avx::_mm256_hsub_ps": true,
  "core_arch::x86::avx::_mm256_max_pd": true,
  "core_arch::x86::avx::_mm256_max_ps": true,
  "core_arch::x86::avx::_mm256_min_pd": true,
  "core_arch::x86::avx::_mm256_min_ps": true,
  "core_arch::x86::avx::_mm256_movedup_pd": true,
  "core_arch::x86::avx::_mm256_movehdup_ps": true,
  "core_arch::x86::avx::_mm256_moveldup_ps": true,
  "core_arch::x86::avx::_mm256_movemask_pd": true,
  "core_arch::x86::avx::_mm256_movemask_ps": true,
  "core_arch::x86::avx::_mm256_mul_pd": true,
  "core_arch::x86::avx::_mm256_mul_ps": true,
  "core_arch::x86::avx::_mm256_or_pd": true,
  "core_arch::x86::avx::_mm256_or_ps": true,
  "core_arch::x86::avx::_mm256_permutevar_pd": true,
  "core_arch::x86::avx::_mm256_permutevar_ps": true,
  "core_arch::x86::avx::_mm256_rcp_ps": true,
  "core_arch::x86::avx::_mm256_rsqrt_ps": true,
  "core_arch::x86::avx::_mm256_set1_epi16": true,
  "core_arch::x86::avx::_mm256_set1_epi32": true,
  "core_arch::x86::avx::_mm256_set1_epi64x": true,
  "core_arch::x86::avx::_mm256_set1_epi8": true,
  "core_arch::x86::avx::_mm256_set1_pd": true,
  "core_arch::x86::avx::_mm256_set1_ps": true,
  "core_arch::x86::avx::_mm256_set_epi16": true,
  "core_arch::x86::avx::_mm256_set_epi32": true,
  "core_arch::x86::avx::_mm256_set_epi64x": true,
  "core_arch::x86::avx::_mm256_set_epi8": true,
  "core_arch::x86::avx::_mm256_set_m128": true,
  "core_arch::x86::avx::_mm256_set_m128d": true,
  "core_arch::x86::avx::_mm256_set_m128i": true,
  "core_arch::x86::avx::_mm256_set_pd": true,
  "core_arch::x86::avx::_mm256_set_ps": true,
  "core_arch::x86::avx::_mm256_setr_epi16": true,
  "core_arch::x86::avx::_mm256_setr_epi32": true,
  "core_arch::x86::avx::_mm256_setr_epi64x": true,
  "core_arch::x86::avx::_mm256_setr_epi8": true,
  "core_arch::x86::avx::_mm256_setr_m128": true,
  "core_arch::x86::avx::_mm256_setr_m128d": true,
  "core_arch::x86::avx::_mm256_setr_m128i": true,
  "core_arch::x86::avx::_mm256_setr_pd": true,
  "core_arch::x86::avx::_mm256_setr_ps": true,
  "core_arch::x86::avx::_mm256_setzero_pd": true,
  "core_arch::x86::avx::_mm256_setzero_ps": true,
  "core_arch::x86::avx::_mm256_setzero_si256": true,
  "core_arch::x86::avx::_mm256_sqrt_pd": true,
  "core_arch::x86::avx::_mm256_sqrt_ps": true,
  "core_arch::x86::avx::_mm256_sub_pd": true,
  "core_arch::x86::avx::_mm256_sub_ps": true,
  "core_arch::x86::avx::_mm256_testc_pd": true,
  "core_arch::x86::avx::_mm256_testc_ps": true,
  "core_arch::x86::avx::_mm256_testc_si256": true,
  "core_arch::x86::avx::_mm256_testnzc_pd": true,
  "core_arch::x86::avx::_mm256_testnzc_ps": true,
  "core_arch::x86::avx::_mm256_testnzc_si256": true,
  "core_arch::x86::avx::_mm256_testz_pd": true,
  "core_arch::x86::avx::_mm256_testz_ps": true,
  "core_arch::x86::avx::_mm256_testz_si256": true,
  "core_arch::x86::avx::_mm256_undefined_pd": true,
  "core_arch::x86::avx::_mm256_undefined_ps": true,
  "core_arch::x86::avx::_mm256_undefined_si256": true,
  "core_arch::x86::avx::_mm256_unpackhi_pd": true,
  "core_arch::x86::avx::_mm256_unpackhi_ps": true,
  "core_arch::x86::avx::_mm256_unpacklo_pd": true,
  "core_arch::x86::avx::_mm256_unpacklo_ps": true,
  "core_arch::x86::avx::_mm256_xor_pd": true,
  "core_arch::x86::avx::_mm256_xor_ps": true,
  "core_arch::x86::avx::_mm256_zeroall": true,
  "core_arch::x86::avx::_mm256_zeroupper": true,
  "core_arch::x86::avx::_mm256_zextpd128_pd256": true,
  "core_arch::x86::avx::_mm256_zextps128_ps256": true,
  "core_arch::x86::avx::_mm256_zextsi128_si256": true,
  "core_arch::x86::avx::_mm_broadcast_ss": true,
  "core_arch::x86::avx::_mm_permutevar_pd": true,
  "core_arch::x86::avx::_mm_permutevar_ps": true,
  "core_arch::x86::avx::_mm_testc_pd": true,
  "core_arch::x86::avx::_mm_testc_ps": true,
  "core_arch::x86::avx::_mm_testnzc_pd": true,
  "core_arch::x86::avx::_mm_testnzc_ps": true,
  "core_arch::x86::avx::_mm_testz_pd": true,
  "core_arch::x86::avx::_mm_testz_ps": true,
  "core_arch::x86::avxneconvert::_mm256_cvtneps_avx_pbh": true,
  "core_arch::x86::avxneconvert::_mm_cvtneps_avx_pbh": true,
  "core_arch::x86::bf16::from_bits": true,
  "core_arch::x86::bf16::to_bits": true,
  "core_arch::x86::bmi1::_andn_u32": true,
  "core_arch::x86::bmi1::_bextr2_u32": true,
  "core_arch::x86::bmi1::_bextr_u32": true,
  "core_arch::x86::bmi1::_blsi_u32": true,
  "core_arch::x86::bmi1::_blsmsk_u32": true,
  "core_arch::x86::bmi1::_blsr_u32": true,
  "core_arch::x86::bmi1::_mm_tzcnt_32": true,
  "core_arch::x86::bmi1::_tzcnt_u16": true,
  "core_arch::x86::bmi1::_tzcnt_u32": true,
  "core_arch::x86::bmi2::_bzhi_u32": true,
  "core_arch::x86::bmi2::_mulx_u32": true,
  "core_arch::x86::bmi2::_pdep_u32": true,
  "core_arch::x86::bmi2::_pext_u32": true,
  "core_arch::x86::bswap::_bswap": true,
  "core_arch::x86::cpuid::__cpuid": true,
  "core_arch::x86::cpuid::__cpuid_count": true,
  "core_arch::x86::cpuid::__get_cpuid_max": true,
  "core_arch::x86::eflags::__readeflags": true,
  "core_arch::x86::eflags::__writeeflags": true,
  "core_arch::x86::f16c::_mm256_cvtph_ps": true,
  "core_arch::x86::f16c::_mm_cvtph_ps": true,
  "core_arch::x86::fma::_mm256_fmadd_pd": true,
  "core_arch::x86::fma::_mm256_fmadd_ps": true,
  "core_arch::x86::fma::_mm256_fmaddsub_pd": true,
  "core_arch::x86::fma::_mm256_fmaddsub_ps": true,
  "core_arch::x86::fma::_mm256_fmsub_pd": true,
  "core_arch::x86::fma::_mm256_fmsub_ps": true,
  "core_arch::x86::fma::_mm256_fmsubadd_pd": true,
  "core_arch::x86::fma::_mm256_fmsubadd_ps": true,
  "core_arch::x86::fma::_mm256_fnmadd_pd": true,
  "core_arch::x86::fma::_mm256_fnmadd_ps": true,
  "core_arch::x86::fma::_mm256_fnmsub_pd": true,
  "core_arch::x86::fma::_mm256_fnmsub_ps": true,
  "core_arch::x86::fma::_mm_fmadd_pd": true,
  "core_arch::x86::fma::_mm_fmadd_ps": true,
  "core_arch::x86::fma::_mm_fmadd_sd": true,
  "core_arch::x86::fma::_mm_fmadd_ss": true,
  "core_arch::x86::fma::_mm_fmaddsub_pd": true,
  "core_arch::x86::fma::_mm_fmaddsub_ps": true,
  "core_arch::x86::fma::_mm_fmsub_pd": true,
  "core_arch::x86::fma::_mm_fmsub_ps": true,
  "core_arch::x86::fma::_mm_fmsub_sd": true,
  "core_arch::x86::fma::_mm_fmsub_ss": true,
  "core_arch::x86::fma::_mm_fmsubadd_pd": true,
  "core_arch::x86::fma::_mm_fmsubadd_ps": true,
  "core_arch::x86::fma::_mm_fnmadd_pd": true,
  "core_arch::x86::fma::_mm_fnmadd_ps": true,
  "core_arch::x86::fma::_mm_fnmadd_sd": true,
  "core_arch::x86::fma::_mm_fnmadd_ss": true,
  "core_arch::x86::fma::_mm_fnmsub_pd": true,
  "core_arch::x86::fma::_mm_fnmsub_ps": true,
  "core_arch::x86::fma::_mm_fnmsub_sd": true,
  "core_arch::x86::fma::_mm_fnmsub_ss": true,
  "core_arch::x86::gfni::_mm256_gf2p8mul_epi8": true,
  "core_arch::x86::gfni::_mm256_mask_gf2p8mul_epi8": true,
  "core_arch::x86::gfni::_mm256_maskz_gf2p8mul_epi8": true,
  "core_arch::x86::gfni::_mm512_gf2p8mul_epi8": true,
  "core_arch::x86::gfni::_mm512_mask_gf2p8mul_epi8": true,
  "core_arch::x86::gfni::_mm512_maskz_gf2p8mul_epi8": true,
  "core_arch::x86::gfni::_mm_gf2p8mul_epi8": true,
  "core_arch::x86::gfni::_mm_mask_gf2p8mul_epi8": true,
  "core_arch::x86::gfni::_mm_maskz_gf2p8mul_epi8": true,
  "core_arch::x86::kl::_mm_loadiwkey": true,
  "core_arch::x86::rdrand::_rdrand16_step": true,
  "core_arch::x86::rdrand::_rdrand32_step": true,
  "core_arch::x86::rdrand::_rdseed16_step": true,
  "core_arch::x86::rdrand::_rdseed32_step": true,
  "core_arch::x86::rdtsc::_rdtsc": true,
  "core_arch::x86::rtm::_xabort_code": true,
  "core_arch::x86::rtm::_xbegin": true,
  "core_arch::x86::rtm::_xend": true,
  "core_arch::x86::rtm::_xtest": true,
  "core_arch::x86::sha::_mm256_sha512msg1_epi64": true,
  "core_arch::x86::sha::_mm256_sha512msg2_epi64": true,
  "core_arch::x86::sha::_mm256_sha512rnds2_epi64": true,
  "core_arch::x86::sha::_mm256_sm4key4_epi32": true,
  "core_arch::x86::sha::_mm256_sm4rnds4_epi32": true,
  "core_arch::x86::sha::_mm_sha1msg1_epu32": true,
  "core_arch::x86::sha::_mm_sha1msg2_epu32": true,
  "core_arch::x86::sha::_mm_sha1nexte_epu32": true,
  "core_arch::x86::sha::_mm_sha256msg1_epu32": true,
  "core_arch::x86::sha::_mm_sha256msg2_epu32": true,
  "core_arch::x86::sha::_mm_sha256rnds2_epu32": true,
  "core_arch::x86::sha::_mm_sm3msg1_epi32": true,
  "core_arch::x86::sha::_mm_sm3msg2_epi32": true,
  "core_arch::x86::sha::_mm_sm4key4_epi32": true,
  "core_arch::x86::sha::_mm_sm4rnds4_epi32": true,
  "core_arch::x86::sse2::_mm_add_epi16": true,
  "core_arch::x86::sse2::_mm_add_epi32": true,
  "core_arch::x86::sse2::_mm_add_epi64": true,
  "core_arch::x86::sse2::_mm_add_epi8": true,
  "core_arch::x86::sse2::_mm_add_pd": true,
  "core_arch::x86::sse2::_mm_add_sd": true,
  "core_arch::x86::sse2::_mm_adds_epi16": true,
  "core_arch::x86::sse2::_mm_adds_epi8": true,
  "core_arch::x86::sse2::_mm_adds_epu16": true,
  "core_arch::x86::sse2::_mm_adds_epu8": true,
  "core_arch::x86::sse2::_mm_and_pd": true,
  "core_arch::x86::sse2::_mm_and_si128": true,
  "core_arch::x86::sse2::_mm_andnot_pd": true,
  "core_arch::x86::sse2::_mm_andnot_si128": true,
  "core_arch::x86::sse2::_mm_avg_epu16": true,
  "core_arch::x86::sse2::_mm_avg_epu8": true,
  "core_arch::x86::sse2::_mm_castpd_ps": true,
  "core_arch::x86::sse2::_mm_castpd_si128": true,
  "core_arch::x86::sse2::_mm_castps_pd": true,
  "core_arch::x86::sse2::_mm_castps_si128": true,
  "core_arch::x86::sse2::_mm_castsi128_pd": true,
  "core_arch::x86::sse2::_mm_castsi128_ps": true,
  "core_arch::x86::sse2::_mm_cmpeq_epi16": true,
  "core_arch::x86::sse2::_mm_cmpeq_epi32": true,
  "core_arch::x86::sse2::_mm_cmpeq_epi8": true,
  "core_arch::x86::sse2::_mm_cmpeq_pd": true,
  "core_arch::x86::sse2::_mm_cmpeq_sd": true,
  "core_arch::x86::sse2::_mm_cmpge_pd": true,
  "core_arch::x86::sse2::_mm_cmpge_sd": true,
  "core_arch::x86::sse2::_mm_cmpgt_epi16": true,
  "core_arch::x86::sse2::_mm_cmpgt_epi32": true,
  "core_arch::x86::sse2::_mm_cmpgt_epi8": true,
  "core_arch::x86::sse2::_mm_cmpgt_pd": true,
  "core_arch::x86::sse2::_mm_cmpgt_sd": true,
  "core_arch::x86::sse2::_mm_cmple_pd": true,
  "core_arch::x86::sse2::_mm_cmple_sd": true,
  "core_arch::x86::sse2::_mm_cmplt_epi16": true,
  "core_arch::x86::sse2::_mm_cmplt_epi32": true,
  "core_arch::x86::sse2::_mm_cmplt_epi8": true,
  "core_arch::x86::sse2::_mm_cmplt_pd": true,
  "core_arch::x86::sse2::_mm_cmplt_sd": true,
  "core_arch::x86::sse2::_mm_cmpneq_pd": true,
  "core_arch::x86::sse2::_mm_cmpneq_sd": true,
  "core_arch::x86::sse2::_mm_cmpnge_pd": true,
  "core_arch::x86::sse2::_mm_cmpnge_sd": true,
  "core_arch::x86::sse2::_mm_cmpngt_pd": true,
  "core_arch::x86::sse2::_mm_cmpngt_sd": true,
  "core_arch::x86::sse2::_mm_cmpnle_pd": true,
  "core_arch::x86::sse2::_mm_cmpnle_sd": true,
  "core_arch::x86::sse2::_mm_cmpnlt_pd": true,
  "core_arch::x86::sse2::_mm_cmpnlt_sd": true,
  "core_arch::x86::sse2::_mm_cmpord_pd": true,
  "core_arch::x86::sse2::_mm_cmpord_sd": true,
  "core_arch::x86::sse2::_mm_cmpunord_pd": true,
  "core_arch::x86::sse2::_mm_cmpunord_sd": true,
  "core_arch::x86::sse2::_mm_comieq_sd": true,
  "core_arch::x86::sse2::_mm_comige_sd": true,
  "core_arch::x86::sse2::_mm_comigt_sd": true,
  "core_arch::x86::sse2::_mm_comile_sd": true,
  "core_arch::x86::sse2::_mm_comilt_sd": true,
  "core_arch::x86::sse2::_mm_comineq_sd": true,
  "core_arch::x86::sse2::_mm_cvtepi32_pd": true,
  "core_arch::x86::sse2::_mm_cvtepi32_ps": true,
  "core_arch::x86::sse2::_mm_cvtpd_epi32": true,
  "core_arch::x86::sse2::_mm_cvtpd_ps": true,
  "core_arch::x86::sse2::_mm_cvtps_epi32": true,
  "core_arch::x86::sse2::_mm_cvtps_pd": true,
  "core_arch::x86::sse2::_mm_cvtsd_f64": true,
  "core_arch::x86::sse2::_mm_cvtsd_si32": true,
  "core_arch::x86::sse2::_mm_cvtsd_ss": true,
  "core_arch::x86::sse2::_mm_cvtsi128_si32": true,
  "core_arch::x86::sse2::_mm_cvtsi32_sd": true,
  "core_arch::x86::sse2::_mm_cvtsi32_si128": true,
  "core_arch::x86::sse2::_mm_cvtss_sd": true,
  "core_arch::x86::sse2::_mm_cvttpd_epi32": true,
  "core_arch::x86::sse2::_mm_cvttps_epi32": true,
  "core_arch::x86::sse2::_mm_cvttsd_si32": true,
  "core_arch::x86::sse2::_mm_div_pd": true,
  "core_arch::x86::sse2::_mm_div_sd": true,
  "core_arch::x86::sse2::_mm_lfence": true,
  "core_arch::x86::sse2::_mm_madd_epi16": true,
  "core_arch::x86::sse2::_mm_max_epi16": true,
  "core_arch::x86::sse2::_mm_max_epu8": true,
  "core_arch::x86::sse2::_mm_max_pd": true,
  "core_arch::x86::sse2::_mm_max_sd": true,
  "core_arch::x86::sse2::_mm_mfence": true,
  "core_arch::x86::sse2::_mm_min_epi16": true,
  "core_arch::x86::sse2::_mm_min_epu8": true,
  "core_arch::x86::sse2::_mm_min_pd": true,
  "core_arch::x86::sse2::_mm_min_sd": true,
  "core_arch::x86::sse2::_mm_move_epi64": true,
  "core_arch::x86::sse2::_mm_move_sd": true,
  "core_arch::x86::sse2::_mm_movemask_epi8": true,
  "core_arch::x86::sse2::_mm_movemask_pd": true,
  "core_arch::x86::sse2::_mm_mul_epu32": true,
  "core_arch::x86::sse2::_mm_mul_pd": true,
  "core_arch::x86::sse2::_mm_mul_sd": true,
  "core_arch::x86::sse2::_mm_mulhi_epi16": true,
  "core_arch::x86::sse2::_mm_mulhi_epu16": true,
  "core_arch::x86::sse2::_mm_mullo_epi16": true,
  "core_arch::x86::sse2::_mm_or_pd": true,
  "core_arch::x86::sse2::_mm_or_si128": true,
  "core_arch::x86::sse2::_mm_packs_epi16": true,
  "core_arch::x86::sse2::_mm_packs_epi32": true,
  "core_arch::x86::sse2::_mm_packus_epi16": true,
  "core_arch::x86::sse2::_mm_pause": true,
  "core_arch::x86::sse2::_mm_sad_epu8": true,
  "core_arch::x86::sse2::_mm_set1_epi16": true,
  "core_arch::x86::sse2::_mm_set1_epi32": true,
  "core_arch::x86::sse2::_mm_set1_epi64x": true,
  "core_arch::x86::sse2::_mm_set1_epi8": true,
  "core_arch::x86::sse2::_mm_set1_pd": true,
  "core_arch::x86::sse2::_mm_set_epi16": true,
  "core_arch::x86::sse2::_mm_set_epi32": true,
  "core_arch::x86::sse2::_mm_set_epi64x": true,
  "core_arch::x86::sse2::_mm_set_epi8": true,
  "core_arch::x86::sse2::_mm_set_pd": true,
  "core_arch::x86::sse2::_mm_set_pd1": true,
  "core_arch::x86::sse2::_mm_set_sd": true,
  "core_arch::x86::sse2::_mm_setr_epi16": true,
  "core_arch::x86::sse2::_mm_setr_epi32": true,
  "core_arch::x86::sse2::_mm_setr_epi8": true,
  "core_arch::x86::sse2::_mm_setr_pd": true,
  "core_arch::x86::sse2::_mm_setzero_pd": true,
  "core_arch::x86::sse2::_mm_setzero_si128": true,
  "core_arch::x86::sse2::_mm_sll_epi16": true,
  "core_arch::x86::sse2::_mm_sll_epi32": true,
  "core_arch::x86::sse2::_mm_sll_epi64": true,
  "core_arch::x86::sse2::_mm_slli_si128_impl::mask": true,
  "core_arch::x86::sse2::_mm_sqrt_pd": true,
  "core_arch::x86::sse2::_mm_sqrt_sd": true,
  "core_arch::x86::sse2::_mm_sra_epi16": true,
  "core_arch::x86::sse2::_mm_sra_epi32": true,
  "core_arch::x86::sse2::_mm_srl_epi16": true,
  "core_arch::x86::sse2::_mm_srl_epi32": true,
  "core_arch::x86::sse2::_mm_srl_epi64": true,
  "core_arch::x86::sse2::_mm_srli_si128_impl::mask": true,
  "core_arch::x86::sse2::_mm_sub_epi16": true,
  "core_arch::x86::sse2::_mm_sub_epi32": true,
  "core_arch::x86::sse2::_mm_sub_epi64": true,
  "core_arch::x86::sse2::_mm_sub_epi8": true,
  "core_arch::x86::sse2::_mm_sub_pd": true,
  "core_arch::x86::sse2::_mm_sub_sd": true,
  "core_arch::x86::sse2::_mm_subs_epi16": true,
  "core_arch::x86::sse2::_mm_subs_epi8": true,
  "core_arch::x86::sse2::_mm_subs_epu16": true,
  "core_arch::x86::sse2::_mm_subs_epu8": true,
  "core_arch::x86::sse2::_mm_ucomieq_sd": true,
  "core_arch::x86::sse2::_mm_ucomige_sd": true,
  "core_arch::x86::sse2::_mm_ucomigt_sd": true,
  "core_arch::x86::sse2::_mm_ucomile_sd": true,
  "core_arch::x86::sse2::_mm_ucomilt_sd": true,
  "core_arch::x86::sse2::_mm_ucomineq_sd": true,
  "core_arch::x86::sse2::_mm_undefined_pd": true,
  "core_arch::x86::sse2::_mm_undefined_si128": true,
  "core_arch::x86::sse2::_mm_unpackhi_epi16": true,
  "core_arch::x86::sse2::_mm_unpackhi_epi32": true,
  "core_arch::x86::sse2::_mm_unpackhi_epi64": true,
  "core_arch::x86::sse2::_mm_unpackhi_epi8": true,
  "core_arch::x86::sse2::_mm_unpackhi_pd": true,
  "core_arch::x86::sse2::_mm_unpacklo_epi16": true,
  "core_arch::x86::sse2::_mm_unpacklo_epi32": true,
  "core_arch::x86::sse2::_mm_unpacklo_epi64": true,
  "core_arch::x86::sse2::_mm_unpacklo_epi8": true,
  "core_arch::x86::sse2::_mm_unpacklo_pd": true,
  "core_arch::x86::sse2::_mm_xor_pd": true,
  "core_arch::x86::sse2::_mm_xor_si128": true,
  "core_arch::x86::sse3::_mm_addsub_pd": true,
  "core_arch::x86::sse3::_mm_addsub_ps": true,
  "core_arch::x86::sse3::_mm_hadd_pd": true,
  "core_arch::x86::sse3::_mm_hadd_ps": true,
  "core_arch::x86::sse3::_mm_hsub_pd": true,
  "core_arch::x86::sse3::_mm_hsub_ps": true,
  "core_arch::x86::sse3::_mm_movedup_pd": true,
  "core_arch::x86::sse3::_mm_movehdup_ps": true,
  "core_arch::x86::sse3::_mm_moveldup_ps": true,
  "core_arch::x86::sse41::_mm_blendv_epi8": true,
  "core_arch::x86::sse41::_mm_blendv_pd": true,
  "core_arch::x86::sse41::_mm_blendv_ps": true,
  "core_arch::x86::sse41::_mm_ceil_pd": true,
  "core_arch::x86::sse41::_mm_ceil_ps": true,
  "core_arch::x86::sse41::_mm_ceil_sd": true,
  "core_arch::x86::sse41::_mm_ceil_ss": true,
  "core_arch::x86::sse41::_mm_cmpeq_epi64": true,
  "core_arch::x86::sse41::_mm_cvtepi16_epi32": true,
  "core_arch::x86::sse41::_mm_cvtepi16_epi64": true,
  "core_arch::x86::sse41::_mm_cvtepi32_epi64": true,
  "core_arch::x86::sse41::_mm_cvtepi8_epi16": true,
  "core_arch::x86::sse41::_mm_cvtepi8_epi32": true,
  "core_arch::x86::sse41::_mm_cvtepi8_epi64": true,
  "core_arch::x86::sse41::_mm_cvtepu16_epi32": true,
  "core_arch::x86::sse41::_mm_cvtepu16_epi64": true,
  "core_arch::x86::sse41::_mm_cvtepu32_epi64": true,
  "core_arch::x86::sse41::_mm_cvtepu8_epi16": true,
  "core_arch::x86::sse41::_mm_cvtepu8_epi32": true,
  "core_arch::x86::sse41::_mm_cvtepu8_epi64": true,
  "core_arch::x86::sse41::_mm_floor_pd": true,
  "core_arch::x86::sse41::_mm_floor_ps": true,
  "core_arch::x86::sse41::_mm_floor_sd": true,
  "core_arch::x86::sse41::_mm_floor_ss": true,
  "core_arch::x86::sse41::_mm_max_epi32": true,
  "core_arch::x86::sse41::_mm_max_epi8": true,
  "core_arch::x86::sse41::_mm_max_epu16": true,
  "core_arch::x86::sse41::_mm_max_epu32": true,
  "core_arch::x86::sse41::_mm_min_epi32": true,
  "core_arch::x86::sse41::_mm_min_epi8": true,
  "core_arch::x86::sse41::_mm_min_epu16": true,
  "core_arch::x86::sse41::_mm_min_epu32": true,
  "core_arch::x86::sse41::_mm_minpos_epu16": true,
  "core_arch::x86::sse41::_mm_mul_epi32": true,
  "core_arch::x86::sse41::_mm_mullo_epi32": true,
  "core_arch::x86::sse41::_mm_packus_epi32": true,
  "core_arch::x86::sse41::_mm_test_all_ones": true,
  "core_arch::x86::sse41::_mm_test_all_zeros": true,
  "core_arch::x86::sse41::_mm_test_mix_ones_zeros": true,
  "core_arch::x86::sse41::_mm_testc_si128": true,
  "core_arch::x86::sse41::_mm_testnzc_si128": true,
  "core_arch::x86::sse41::_mm_testz_si128": true,
  "core_arch::x86::sse42::_mm_cmpgt_epi64": true,
  "core_arch::x86::sse42::_mm_crc32_u16": true,
  "core_arch::x86::sse42::_mm_crc32_u32": true,
  "core_arch::x86::sse42::_mm_crc32_u8": true,
  "core_arch::x86::sse4a::_mm_extract_si64": true,
  "core_arch::x86::sse4a::_mm_insert_si64": true,
  "core_arch::x86::sse::_MM_GET_EXCEPTION_MASK": true,
  "core_arch::x86::sse::_MM_GET_EXCEPTION_STATE": true,
  "core_arch::x86::sse::_MM_GET_FLUSH_ZERO_MODE": true,
  "core_arch::x86::sse::_MM_GET_ROUNDING_MODE": true,
  "core_arch::x86::sse::_MM_SET_EXCEPTION_MASK": true,
  "core_arch::x86::sse::_MM_SET_EXCEPTION_STATE": true,
  "core_arch::x86::sse::_MM_SET_FLUSH_ZERO_MODE": true,
  "core_arch::x86::sse::_MM_SET_ROUNDING_MODE": true,
  "core_arch::x86::sse::_MM_SHUFFLE": true,
  "core_arch::x86::sse::_MM_TRANSPOSE4_PS": true,
  "core_arch::x86::sse::_mm_add_ps": true,
  "core_arch::x86::sse::_mm_add_ss": true,
  "core_arch::x86::sse::_mm_and_ps": true,
  "core_arch::x86::sse::_mm_andnot_ps": true,
  "core_arch::x86::sse::_mm_cmpeq_ps": true,
  "core_arch::x86::sse::_mm_cmpeq_ss": true,
  "core_arch::x86::sse::_mm_cmpge_ps": true,
  "core_arch::x86::sse::_mm_cmpge_ss": true,
  "core_arch::x86::sse::_mm_cmpgt_ps": true,
  "core_arch::x86::sse::_mm_cmpgt_ss": true,
  "core_arch::x86::sse::_mm_cmple_ps": true,
  "core_arch::x86::sse::_mm_cmple_ss": true,
  "core_arch::x86::sse::_mm_cmplt_ps": true,
  "core_arch::x86::sse::_mm_cmplt_ss": true,
  "core_arch::x86::sse::_mm_cmpneq_ps": true,
  "core_arch::x86::sse::_mm_cmpneq_ss": true,
  "core_arch::x86::sse::_mm_cmpnge_ps": true,
  "core_arch::x86::sse::_mm_cmpnge_ss": true,
  "core_arch::x86::sse::_mm_cmpngt_ps": true,
  "core_arch::x86::sse::_mm_cmpngt_ss": true,
  "core_arch::x86::sse::_mm_cmpnle_ps": true,
  "core_arch::x86::sse::_mm_cmpnle_ss": true,
  "core_arch::x86::sse::_mm_cmpnlt_ps": true,
  "core_arch::x86::sse::_mm_cmpnlt_ss": true,
  "core_arch::x86::sse::_mm_cmpord_ps": true,
  "core_arch::x86::sse::_mm_cmpord_ss": true,
  "core_arch::x86::sse::_mm_cmpunord_ps": true,
  "core_arch::x86::sse::_mm_cmpunord_ss": true,
  "core_arch::x86::sse::_mm_comieq_ss": true,
  "core_arch::x86::sse::_mm_comige_ss": true,
  "core_arch::x86::sse::_mm_comigt_ss": true,
  "core_arch::x86::sse::_mm_comile_ss": true,
  "core_arch::x86::sse::_mm_comilt_ss": true,
  "core_arch::x86::sse::_mm_comineq_ss": true,
  "core_arch::x86::sse::_mm_cvt_si2ss": true,
  "core_arch::x86::sse::_mm_cvt_ss2si": true,
  "core_arch::x86::sse::_mm_cvtsi32_ss": true,
  "core_arch::x86::sse::_mm_cvtss_f32": true,
  "core_arch::x86::sse::_mm_cvtss_si32": true,
  "core_arch::x86::sse::_mm_cvtt_ss2si": true,
  "core_arch::x86::sse::_mm_cvttss_si32": true,
  "core_arch::x86::sse::_mm_div_ps": true,
  "core_arch::x86::sse::_mm_div_ss": true,
  "core_arch::x86::sse::_mm_getcsr": true,
  "core_arch::x86::sse::_mm_max_ps": true,
  "core_arch::x86::sse::_mm_max_ss": true,
  "core_arch::x86::sse::_mm_min_ps": true,
  "core_arch::x86::sse::_mm_min_ss": true,
  "core_arch::x86::sse::_mm_move_ss": true,
  "core_arch::x86::sse::_mm_movehl_ps": true,
  "core_arch::x86::sse::_mm_movelh_ps": true,
  "core_arch::x86::sse::_mm_movemask_ps": true,
  "core_arch::x86::sse::_mm_mul_ps": true,
  "core_arch::x86::sse::_mm_mul_ss": true,
  "core_arch::x86::sse::_mm_or_ps": true,
  "core_arch::x86::sse::_mm_rcp_ps": true,
  "core_arch::x86::sse::_mm_rcp_ss": true,
  "core_arch::x86::sse::_mm_rsqrt_ps": true,
  "core_arch::x86::sse::_mm_rsqrt_ss": true,
  "core_arch::x86::sse::_mm_set1_ps": true,
  "core_arch::x86::sse::_mm_set_ps": true,
  "core_arch::x86::sse::_mm_set_ps1": true,
  "core_arch::x86::sse::_mm_set_ss": true,
  "core_arch::x86::sse::_mm_setcsr": true,
  "core_arch::x86::sse::_mm_setr_ps": true,
  "core_arch::x86::sse::_mm_setzero_ps": true,
  "core_arch::x86::sse::_mm_sfence": true,
  "core_arch::x86::sse::_mm_sqrt_ps": true,
  "core_arch::x86::sse::_mm_sqrt_ss": true,
  "core_arch::x86::sse::_mm_sub_ps": true,
  "core_arch::x86::sse::_mm_sub_ss": true,
  "core_arch::x86::sse::_mm_ucomieq_ss": true,
  "core_arch::x86::sse::_mm_ucomige_ss": true,
  "core_arch::x86::sse::_mm_ucomigt_ss": true,
  "core_arch::x86::sse::_mm_ucomile_ss": true,
  "core_arch::x86::sse::_mm_ucomilt_ss": true,
  "core_arch::x86::sse::_mm_ucomineq_ss": true,
  "core_arch::x86::sse::_mm_undefined_ps": true,
  "core_arch::x86::sse::_mm_unpackhi_ps": true,
  "core_arch::x86::sse::_mm_unpacklo_ps": true,
  "core_arch::x86::sse::_mm_xor_ps": true,
  "core_arch::x86::ssse3::_mm_abs_epi16": true,
  "core_arch::x86::ssse3::_mm_abs_epi32": true,
  "core_arch::x86::ssse3::_mm_abs_epi8": true,
  "core_arch::x86::ssse3::_mm_alignr_epi8::mask": true,
  "core_arch::x86::ssse3::_mm_hadd_epi16": true,
  "core_arch::x86::ssse3::_mm_hadd_epi32": true,
  "core_arch::x86::ssse3::_mm_hadds_epi16": true,
  "core_arch::x86::ssse3::_mm_hsub_epi16": true,
  "core_arch::x86::ssse3::_mm_hsub_epi32": true,
  "core_arch::x86::ssse3::_mm_hsubs_epi16": true,
  "core_arch::x86::ssse3::_mm_maddubs_epi16": true,
  "core_arch::x86::ssse3::_mm_mulhrs_epi16": true,
  "core_arch::x86::ssse3::_mm_shuffle_epi8": true,
  "core_arch::x86::ssse3::_mm_sign_epi16": true,
  "core_arch::x86::ssse3::_mm_sign_epi32": true,
  "core_arch::x86::ssse3::_mm_sign_epi8": true,
  "core_arch::x86::tbm::_blcfill_u32": true,
  "core_arch::x86::tbm::_blci_u32": true,
  "core_arch::x86::tbm::_blcic_u32": true,
  "core_arch::x86::tbm::_blcmsk_u32": true,
  "core_arch::x86::tbm::_blcs_u32": true,
  "core_arch::x86::tbm::_blsfill_u32": true,
  "core_arch::x86::tbm::_blsic_u32": true,
  "core_arch::x86::tbm::_t1mskc_u32": true,
  "core_arch::x86::tbm::_tzmsk_u32": true,
  "core_arch::x86::vaes::_mm256_aesdec_epi128": true,
  "core_arch::x86::vaes::_mm256_aesdeclast_epi128": true,
  "core_arch::x86::vaes::_mm256_aesenc_epi128": true,
  "core_arch::x86::vaes::_mm256_aesenclast_epi128": true,
  "core_arch::x86::vaes::_mm512_aesdec_epi128": true,
  "core_arch::x86::vaes::_mm512_aesdeclast_epi128": true,
  "core_arch::x86::vaes::_mm512_aesenc_epi128": true,
  "core_arch::x86::vaes::_mm512_aesenclast_epi128": true,
  "core_arch::x86::xsave::_xgetbv": true,
  "core_arch::x86::xsave::_xsetbv": true,
  "core_arch::x86_64::abm::_lzcnt_u64": true,
  "core_arch::x86_64::abm::_popcnt64": true,
  "core_arch::x86_64::adx::_addcarry_u64": true,
  "core_arch::x86_64::adx::_addcarryx_u64": true,
  "core_arch::x86_64::adx::_subborrow_u64": true,
  "core_arch::x86_64::amx::_tile_release": true,
  "core_arch::x86_64::avx512bw::_cvtmask64_u64": true,
  "core_arch::x86_64::avx512bw::_cvtu64_mask64": true,
  "core_arch::x86_64::avx512f::_mm_cvti64_sd": true,
  "core_arch::x86_64::avx512f::_mm_cvti64_ss": true,
  "core_arch::x86_64::avx512f::_mm_cvtsd_i64": true,
  "core_arch::x86_64::avx512f::_mm_cvtsd_u64": true,
  "core_arch::x86_64::avx512f::_mm_cvtss_i64": true,
  "core_arch::x86_64::avx512f::_mm_cvtss_u64": true,
  "core_arch::x86_64::avx512f::_mm_cvttsd_i64": true,
  "core_arch::x86_64::avx512f::_mm_cvttsd_u64": true,
  "core_arch::x86_64::avx512f::_mm_cvttss_i64": true,
  "core_arch::x86_64::avx512f::_mm_cvttss_u64": true,
  "core_arch::x86_64::avx512f::_mm_cvtu64_sd": true,
  "core_arch::x86_64::avx512f::_mm_cvtu64_ss": true,
  "core_arch::x86_64::avx512fp16::_mm_cvti64_sh": true,
  "core_arch::x86_64::avx512fp16::_mm_cvtsh_i64": true,
  "core_arch::x86_64::avx512fp16::_mm_cvtsh_u64": true,
  "core_arch::x86_64::avx512fp16::_mm_cvttsh_i64": true,
  "core_arch::x86_64::avx512fp16::_mm_cvttsh_u64": true,
  "core_arch::x86_64::avx512fp16::_mm_cvtu64_sh": true,
  "core_arch::x86_64::bmi2::_bzhi_u64": true,
  "core_arch::x86_64::bmi2::_mulx_u64": true,
  "core_arch::x86_64::bmi2::_pdep_u64": true,
  "core_arch::x86_64::bmi2::_pext_u64": true,
  "core_arch::x86_64::bmi::_andn_u64": true,
  "core_arch::x86_64::bmi::_bextr2_u64": true,
  "core_arch::x86_64::bmi::_bextr_u64": true,
  "core_arch::x86_64::bmi::_blsi_u64": true,
  "core_arch::x86_64::bmi::_blsmsk_u64": true,
  "core_arch::x86_64::bmi::_blsr_u64": true,
  "core_arch::x86_64::bmi::_mm_tzcnt_64": true,
  "core_arch::x86_64::bmi::_tzcnt_u64": true,
  "core_arch::x86_64::bswap::_bswap64": true,
  "core_arch::x86_64::rdrand::_rdrand64_step": true,
  "core_arch::x86_64::rdrand::_rdseed64_step": true,
  "core_arch::x86_64::sse2::_mm_cvtsd_si64": true,
  "core_arch::x86_64::sse2::_mm_cvtsd_si64x": true,
  "core_arch::x86_64::sse2::_mm_cvtsi128_si64": true,
  "core_arch::x86_64::sse2::_mm_cvtsi128_si64x": true,
  "core_arch::x86_64::sse2::_mm_cvtsi64_sd": true,
  "core_arch::x86_64::sse2::_mm_cvtsi64_si128": true,
  "core_arch::x86_64::sse2::_mm_cvtsi64x_sd": true,
  "core_arch::x86_64::sse2::_mm_cvtsi64x_si128": true,
  "core_arch::x86_64::sse2::_mm_cvttsd_si64": true,
  "core_arch::x86_64::sse2::_mm_cvttsd_si64x": true,
  "core_arch::x86_64::sse42::_mm_crc32_u64": true,
  "core_arch::x86_64::sse::_mm_cvtsi64_ss": true,
  "core_arch::x86_64::sse::_mm_cvtss_si64": true,
  "core_arch::x86_64::sse::_mm_cvttss_si64": true,
  "core_arch::x86_64::tbm::_blcfill_u64": true,
  "core_arch::x86_64::tbm::_blci_u64": true,
  "core_arch::x86_64::tbm::_blcic_u64": true,
  "core_arch::x86_64::tbm::_blcmsk_u64": true,
  "core_arch::x86_64::tbm::_blcs_u64": true,
  "core_arch::x86_64::tbm::_blsfill_u64": true,
  "core_arch::x86_64::tbm::_blsic_u64": true,
  "core_arch::x86_64::tbm::_t1mskc_u64": true,
  "core_arch::x86_64::tbm::_tzmsk_u64": true,
  "core_simd::masks::<impl core_simd::masks::sealed::Sealed for i16>::eq": true,
  "core_simd::masks::<impl core_simd::masks::sealed::Sealed for i16>::max_unsigned": true,
  "core_simd::masks::<impl core_simd::masks::sealed::Sealed for i16>::to_usize": true,
  "core_simd::masks::<impl core_simd::masks::sealed::Sealed for i32>::eq": true,
  "core_simd::masks::<impl core_simd::masks::sealed::Sealed for i32>::max_unsigned": true,
  "core_simd::masks::<impl core_simd::masks::sealed::Sealed for i32>::to_usize": true,
  "core_simd::masks::<impl core_simd::masks::sealed::Sealed for i64>::eq": true,
  "core_simd::masks::<impl core_simd::masks::sealed::Sealed for i64>::max_unsigned": true,
  "core_simd::masks::<impl core_simd::masks::sealed::Sealed for i64>::to_usize": true,
  "core_simd::masks::<impl core_simd::masks::sealed::Sealed for i8>::eq": true,
  "core_simd::masks::<impl core_simd::masks::sealed::Sealed for i8>::max_unsigned": true,
  "core_simd::masks::<impl core_simd::masks::sealed::Sealed for i8>::to_usize": true,
  "core_simd::masks::<impl core_simd::masks::sealed::Sealed for isize>::eq": true,
  "core_simd::masks::<impl core_simd::masks::sealed::Sealed for isize>::max_unsigned": true,
  "core_simd::masks::<impl core_simd::masks::sealed::Sealed for isize>::to_usize": true,
  "core_simd::swizzle_dyn::avx2_pshufb": true,
  "core_simd::vendor::x86::<impl convert::From<core_arch::x86::__m128> for core_simd::vector::Simd<f32, 4>>::from": true,
  "core_simd::vendor::x86::<impl convert::From<core_arch::x86::__m128d> for core_simd::vector::Simd<f64, 2>>::from": true,
  "core_simd::vendor::x86::<impl convert::From<core_arch::x86::__m128i> for core_simd::vector::Simd<i16, 8>>::from": true,
  "core_simd::vendor::x86::<impl convert::From<core_arch::x86::__m128i> for core_simd::vector::Simd<i32, 4>>::from": true,
  "core_simd::vendor::x86::<impl convert::From<core_arch::x86::__m128i> for core_simd::vector::Simd<i64, 2>>::from": true,
  "core_simd::vendor::x86::<impl convert::From<core_arch::x86::__m128i> for core_simd::vector::Simd<i8, 16>>::from": true,
  "core_simd::vendor::x86::<impl convert::From<core_arch::x86::__m128i> for core_simd::vector::Simd<u16, 8>>::from": true,
  "core_simd::vendor::x86::<impl convert::From<core_arch::x86::__m128i> for core_simd::vector::Simd<u32, 4>>::from": true,
  "core_simd::vendor::x86::<impl convert::From<core_arch::x86::__m128i> for core_simd::vector::Simd<u64, 2>>::from": true,
  "core_simd::vendor::x86::<impl convert::From<core_arch::x86::__m128i> for core_simd::vector::Simd<u8, 16>>::from": true,
  "core_simd::vendor::x86::<impl convert::From<core_arch::x86::__m256> for core_simd::vector::Simd<f32, 8>>::from": true,
  "core_simd::vendor::x86::<impl convert::From<core_arch::x86::__m256d> for core_simd::vector::Simd<f64, 4>>::from": true,
  "core_simd::vendor::x86::<impl convert::From<core_arch::x86::__m256i> for core_simd::vector::Simd<i16, 16>>::from": true,
  "core_simd::vendor::x86::<impl convert::From<core_arch::x86::__m256i> for core_simd::vector::Simd<i32, 8>>::from": true,
  "core_simd::vendor::x86::<impl convert::From<core_arch::x86::__m256i> for core_simd::vector::Simd<i64, 4>>::from": true,
  "core_simd::vendor::x86::<impl convert::From<core_arch::x86::__m256i> for core_simd::vector::Simd<i8, 32>>::from": true,
  "core_simd::vendor::x86::<impl convert::From<core_arch::x86::__m256i> for core_simd::vector::Simd<u16, 16>>::from": true,
  "core_simd::vendor::x86::<impl convert::From<core_arch::x86::__m256i> for core_simd::vector::Simd<u32, 8>>::from": true,
  "core_simd::vendor::x86::<impl convert::From<core_arch::x86::__m256i> for core_simd::vector::Simd<u64, 4>>::from": true,
  "core_simd::vendor::x86::<impl convert::From<core_arch::x86::__m256i> for core_simd::vector::Simd<u8, 32>>::from": true,
  "core_simd::vendor::x86::<impl convert::From<core_arch::x86::__m512> for core_simd::vector::Simd<f32, 16>>::from": true,
  "core_simd::vendor::x86::<impl convert::From<core_arch::x86::__m512d> for core_simd::vector::Simd<f64, 8>>::from": true,
  "core_simd::vendor::x86::<impl convert::From<core_arch::x86::__m512i> for core_simd::vector::Simd<i16, 32>>::from": true,
  "core_simd::vendor::x86::<impl convert::From<core_arch::x86::__m512i> for core_simd::vector::Simd<i32, 16>>::from": true,
  "core_simd::vendor::x86::<impl convert::From<core_arch::x86::__m512i> for core_simd::vector::Simd<i64, 8>>::from": true,
  "core_simd::vendor::x86::<impl convert::From<core_arch::x86::__m512i> for core_simd::vector::Simd<i8, 64>>::from": true,
  "core_simd::vendor::x86::<impl convert::From<core_arch::x86::__m512i> for core_simd::vector::Simd<u16, 32>>::from": true,
  "core_simd::vendor::x86::<impl convert::From<core_arch::x86::__m512i> for core_simd::vector::Simd<u32, 16>>::from": true,
  "core_simd::vendor::x86::<impl convert::From<core_arch::x86::__m512i> for core_simd::vector::Simd<u64, 8>>::from": true,
  "core_simd::vendor::x86::<impl convert::From<core_arch::x86::__m512i> for core_simd::vector::Simd<u8, 64>>::from": true,
  "core_simd::vendor::x86::<impl convert::From<core_simd::vector::Simd<f32, 16>> for core_arch::x86::__m512>::from": true,
  "core_simd::vendor::x86::<impl convert::From<core_simd::vector::Simd<f32, 4>> for core_arch::x86::__m128>::from": true,
  "core_simd::vendor::x86::<impl convert::From<core_simd::vector::Simd<f32, 8>> for core_arch::x86::__m256>::from": true,
  "core_simd::vendor::x86::<impl convert::From<core_simd::vector::Simd<f64, 2>> for core_arch::x86::__m128d>::from": true,
  "core_simd::vendor::x86::<impl convert::From<core_simd::vector::Simd<f64, 4>> for core_arch::x86::__m256d>::from": true,
  "core_simd::vendor::x86::<impl convert::From<core_simd::vector::Simd<f64, 8>> for core_arch::x86::__m512d>::from": true,
  "core_simd::vendor::x86::<impl convert::From<core_simd::vector::Simd<i16, 16>> for core_arch::x86::__m256i>::from": true,
  "core_simd::vendor::x86::<impl convert::From<core_simd::vector::Simd<i16, 32>> for core_arch::x86::__m512i>::from": true,
  "core_simd::vendor::x86::<impl convert::From<core_simd::vector::Simd<i16, 8>> for core_arch::x86::__m128i>::from": true,
  "core_simd::vendor::x86::<impl convert::From<core_simd::vector::Simd<i32, 16>> for core_arch::x86::__m512i>::from": true,
  "core_simd::vendor::x86::<impl convert::From<core_simd::vector::Simd<i32, 4>> for core_arch::x86::__m128i>::from": true,
  "core_simd::vendor::x86::<impl convert::From<core_simd::vector::Simd<i32, 8>> for core_arch::x86::__m256i>::from": true,
  "core_simd::vendor::x86::<impl convert::From<core_simd::vector::Simd<i64, 2>> for core_arch::x86::__m128i>::from": true,
  "core_simd::vendor::x86::<impl convert::From<core_simd::vector::Simd<i64, 4>> for core_arch::x86::__m256i>::from": true,
  "core_simd::vendor::x86::<impl convert::From<core_simd::vector::Simd<i64, 8>> for core_arch::x86::__m512i>::from": true,
  "core_simd::vendor::x86::<impl convert::From<core_simd::vector::Simd<i8, 16>> for core_arch::x86::__m128i>::from": true,
  "core_simd::vendor::x86::<impl convert::From<core_simd::vector::Simd<i8, 32>> for core_arch::x86::__m256i>::from": true,
  "core_simd::vendor::x86::<impl convert::From<core_simd::vector::Simd<i8, 64>> for core_arch::x86::__m512i>::from": true,
  "core_simd::vendor::x86::<impl convert::From<core_simd::vector::Simd<u16, 16>> for core_arch::x86::__m256i>::from": true,
  "core_simd::vendor::x86::<impl convert::From<core_simd::vector::Simd<u16, 32>> for core_arch::x86::__m512i>::from": true,
  "core_simd::vendor::x86::<impl convert::From<core_simd::vector::Simd<u16, 8>> for core_arch::x86::__m128i>::from": true,
  "core_simd::vendor::x86::<impl convert::From<core_simd::vector::Simd<u32, 16>> for core_arch::x86::__m512i>::from": true,
  "core_simd::vendor::x86::<impl convert::From<core_simd::vector::Simd<u32, 4>> for core_arch::x86::__m128i>::from": true,
  "core_simd::vendor::x86::<impl convert::From<core_simd::vector::Simd<u32, 8>> for core_arch::x86::__m256i>::from": true,
  "core_simd::vendor::x86::<impl convert::From<core_simd::vector::Simd<u64, 2>> for core_arch::x86::__m128i>::from": true,
  "core_simd::vendor::x86::<impl convert::From<core_simd::vector::Simd<u64, 4>> for core_arch::x86::__m256i>::from": true,
  "core_simd::vendor::x86::<impl convert::From<core_simd::vector::Simd<u64, 8>> for core_arch::x86::__m512i>::from": true,
  "core_simd::vendor::x86::<impl convert::From<core_simd::vector::Simd<u8, 16>> for core_arch::x86::__m128i>::from": true,
  "core_simd::vendor::x86::<impl convert::From<core_simd::vector::Simd<u8, 32>> for core_arch::x86::__m256i>::from": true,
  "core_simd::vendor::x86::<impl convert::From<core_simd::vector::Simd<u8, 64>> for core_arch::x86::__m512i>::from": true,
  "core_simd::vendor::x86::p64::<impl convert::From<core_arch::x86::__m128i> for core_simd::vector::Simd<isize, 2>>::from": true,
  "core_simd::vendor::x86::p64::<impl convert::From<core_arch::x86::__m128i> for core_simd::vector::Simd<usize, 2>>::from": true,
  "core_simd::vendor::x86::p64::<impl convert::From<core_arch::x86::__m256i> for core_simd::vector::Simd<isize, 4>>::from": true,
  "core_simd::vendor::x86::p64::<impl convert::From<core_arch::x86::__m256i> for core_simd::vector::Simd<usize, 4>>::from": true,
  "core_simd::vendor::x86::p64::<impl convert::From<core_arch::x86::__m512i> for core_simd::vector::Simd<isize, 8>>::from": true,
  "core_simd::vendor::x86::p64::<impl convert::From<core_arch::x86::__m512i> for core_simd::vector::Simd<usize, 8>>::from": true,
  "core_simd::vendor::x86::p64::<impl convert::From<core_simd::vector::Simd<isize, 2>> for core_arch::x86::__m128i>::from": true,
  "core_simd::vendor::x86::p64::<impl convert::From<core_simd::vector::Simd<isize, 4>> for core_arch::x86::__m256i>::from": true,
  "core_simd::vendor::x86::p64::<impl convert::From<core_simd::vector::Simd<isize, 8>> for core_arch::x86::__m512i>::from": true,
  "core_simd::vendor::x86::p64::<impl convert::From<core_simd::vector::Simd<usize, 2>> for core_arch::x86::__m128i>::from": true,
  "core_simd::vendor::x86::p64::<impl convert::From<core_simd::vector::Simd<usize, 4>> for core_arch::x86::__m256i>::from": true,
  "core_simd::vendor::x86::p64::<impl convert::From<core_simd::vector::Simd<usize, 8>> for core_arch::x86::__m512i>::from": true,
  "detect::arch::x86::Feature::to_str": true,
  "detect::arch::x86::__is_feature_detected::adx": true,
  "detect::arch::x86::__is_feature_detected::aes": true,
  "detect::arch::x86::__is_feature_detected::amx_avx512": true,
  "detect::arch::x86::__is_feature_detected::amx_bf16": true,
  "detect::arch::x86::__is_feature_detected::amx_complex": true,
  "detect::arch::x86::__is_feature_detected::amx_fp16": true,
  "detect::arch::x86::__is_feature_detected::amx_fp8": true,
  "detect::arch::x86::__is_feature_detected::amx_int8": true,
  "detect::arch::x86::__is_feature_detected::amx_movrs": true,
  "detect::arch::x86::__is_feature_detected::amx_tf32": true,
  "detect::arch::x86::__is_feature_detected::amx_tile": true,
  "detect::arch::x86::__is_feature_detected::amx_transpose": true,
  "detect::arch::x86::__is_feature_detected::apxf": true,
  "detect::arch::x86::__is_feature_detected::avx": true,
  "detect::arch::x86::__is_feature_detected::avx10_1": true,
  "detect::arch::x86::__is_feature_detected::avx10_2": true,
  "detect::arch::x86::__is_feature_detected::avx2": true,
  "detect::arch::x86::__is_feature_detected::avx512bf16": true,
  "detect::arch::x86::__is_feature_detected::avx512bitalg": true,
  "detect::arch::x86::__is_feature_detected::avx512bw": true,
  "detect::arch::x86::__is_feature_detected::avx512cd": true,
  "detect::arch::x86::__is_feature_detected::avx512dq": true,
  "detect::arch::x86::__is_feature_detected::avx512er": true,
  "detect::arch::x86::__is_feature_detected::avx512f": true,
  "detect::arch::x86::__is_feature_detected::avx512fp16": true,
  "detect::arch::x86::__is_feature_detected::avx512ifma": true,
  "detect::arch::x86::__is_feature_detected::avx512pf": true,
  "detect::arch::x86::__is_feature_detected::avx512vbmi": true,
  "detect::arch::x86::__is_feature_detected::avx512vbmi2": true,
  "detect::arch::x86::__is_feature_detected::avx512vl": true,
  "detect::arch::x86::__is_feature_detected::avx512vnni": true,
  "detect::arch::x86::__is_feature_detected::avx512vp2intersect": true,
  "detect::arch::x86::__is_feature_detected::avx512vpopcntdq": true,
  "detect::arch::x86::__is_feature_detected::avxifma": true,
  "detect::arch::x86::__is_feature_detected::avxneconvert": true,
  "detect::arch::x86::__is_feature_detected::avxvnni": true,
  "detect::arch::x86::__is_feature_detected::avxvnniint16": true,
  "detect::arch::x86::__is_feature_detected::avxvnniint8": true,
  "detect::arch::x86::__is_feature_detected::bmi1": true,
  "detect::arch::x86::__is_feature_detected::bmi2": true,
  "detect::arch::x86::__is_feature_detected::cmpxchg16b": true,
  "detect::arch::x86::__is_feature_detected::ermsb": true,
  "detect::arch::x86::__is_feature_detected::f16c": true,
  "detect::arch::x86::__is_feature_detected::fma": true,
  "detect::arch::x86::__is_feature_detected::fxsr": true,
  "detect::arch::x86::__is_feature_detected::gfni": true,
  "detect::arch::x86::__is_feature_detected::kl": true,
  "detect::arch::x86::__is_feature_detected::lzcnt": true,
  "detect::arch::x86::__is_feature_detected::mmx": true,
  "detect::arch::x86::__is_feature_detected::movbe": true,
  "detect::arch::x86::__is_feature_detected::movrs": true,
  "detect::arch::x86::__is_feature_detected::pclmulqdq": true,
  "detect::arch::x86::__is_feature_detected::popcnt": true,
  "detect::arch::x86::__is_feature_detected::rdrand": true,
  "detect::arch::x86::__is_feature_detected::rdseed": true,
  "detect::arch::x86::__is_feature_detected::rtm": true,
  "detect::arch::x86::__is_feature_detected::sha": true,
  "detect::arch::x86::__is_feature_detected::sha512": true,
  "detect::arch::x86::__is_feature_detected::sm3": true,
  "detect::arch::x86::__is_feature_detected::sm4": true,
  "detect::arch::x86::__is_feature_detected::sse": true,
  "detect::arch::x86::__is_feature_detected::sse2": true,
  "detect::arch::x86::__is_feature_detected::sse3": true,
  "detect::arch::x86::__is_feature_detected::sse4_1": true,
  "detect::arch::x86::__is_feature_detected::sse4_2": true,
  "detect::arch::x86::__is_feature_detected::sse4a": true,
  "detect::arch::x86::__is_feature_detected::ssse3": true,
  "detect::arch::x86::__is_feature_detected::tbm": true,
  "detect::arch::x86::__is_feature_detected::tsc": true,
  "detect::arch::x86::__is_feature_detected::vaes": true,
  "detect::arch::x86::__is_feature_detected::vpclmulqdq": true,
  "detect::arch::x86::__is_feature_detected::widekl": true,
  "detect::arch::x86::__is_feature_detected::xop": true,
  "detect::arch::x86::__is_feature_detected::xsave": true,
  "detect::arch::x86::__is_feature_detected::xsavec": true,
  "detect::arch::x86::__is_feature_detected::xsaveopt": true,
  "detect::arch::x86::__is_feature_detected::xsaves": true,
  "detect::bit::test": true,
  "detect::cache::Cache::initialize": true,
  "detect::cache::Cache::test": true,
  "detect::cache::Cache::uninitialized": true,
  "detect::cache::Initializer::set": true,
  "detect::cache::Initializer::test": true,
  "detect::cache::Initializer::unset": true,
  "detect::cache::detect_and_initialize": true,
  "detect::cache::do_initialize": true,
  "detect::cache::initialize": true,
  "detect::cache::set_bit": true,
  "detect::cache::test": true,
  "detect::cache::test_bit": true,
  "detect::cache::unset_bit": true,
  "detect::check_for": true,
  "detect::features": true,
  "detect::os::detect_features": true,
  "dummy": true,
  "elf::ef_e2k_flag_to_mach": true,
  "elf::ef_e2k_mach_to_flag": true,
  "env::args": true,
  "env::args_os": true,
  "env::current_dir": true,
  "env::current_exe": true,
  "env::home_dir": true,
  "env::temp_dir": true,
  "env::vars": true,
  "env::vars_os": true,
  "f128::<impl f128>::abs": true,
  "f128::<impl f128>::acos": true,
  "f128::<impl f128>::acosh": true,
  "f128::<impl f128>::algebraic_add": true,
  "f128::<impl f128>::algebraic_div": true,
  "f128::<impl f128>::algebraic_mul": true,
  "f128::<impl f128>::algebraic_rem": true,
  "f128::<impl f128>::algebraic_sub": true,
  "f128::<impl f128>::asin": true,
  "f128::<impl f128>::asinh": true,
  "f128::<impl f128>::atan": true,
  "f128::<impl f128>::atan2": true,
  "f128::<impl f128>::atanh": true,
  "f128::<impl f128>::cbrt": true,
  "f128::<impl f128>::ceil": true,
  "f128::<impl f128>::clamp": true,
  "f128::<impl f128>::clamp::do_panic": true,
  "f128::<impl f128>::clamp::do_panic::compiletime": true,
  "f128::<impl f128>::clamp::do_panic::runtime": true,
  "f128::<impl f128>::classify": true,
  "f128::<impl f128>::copysign": true,
  "f128::<impl f128>::cos": true,
  "f128::<impl f128>::cosh": true,
  "f128::<impl f128>::div_euclid": true,
  "f128::<impl f128>::erf": true,
  "f128::<impl f128>::erfc": true,
  "f128::<impl f128>::exp": true,
  "f128::<impl f128>::exp2": true,
  "f128::<impl f128>::exp_m1": true,
  "f128::<impl f128>::floor": true,
  "f128::<impl f128>::fract": true,
  "f128::<impl f128>::from_be_bytes": true,
  "f128::<impl f128>::from_bits": true,
  "f128::<impl f128>::from_le_bytes": true,
  "f128::<impl f128>::from_ne_bytes": true,
  "f128::<impl f128>::gamma": true,
  "f128::<impl f128>::hypot": true,
  "f128::<impl f128>::is_finite": true,
  "f128::<impl f128>::is_infinite": true,
  "f128::<impl f128>::is_nan": true,
  "f128::<impl f128>::is_normal": true,
  "f128::<impl f128>::is_sign_negative": true,
  "f128::<impl f128>::is_sign_positive": true,
  "f128::<impl f128>::is_subnormal": true,
  "f128::<impl f128>::ln": true,
  "f128::<impl f128>::ln_1p": true,
  "f128::<impl f128>::ln_gamma": true,
  "f128::<impl f128>::log": true,
  "f128::<impl f128>::log10": true,
  "f128::<impl f128>::log2": true,
  "f128::<impl f128>::max": true,
  "f128::<impl f128>::maximum": true,
  "f128::<impl f128>::midpoint": true,
  "f128::<impl f128>::min": true,
  "f128::<impl f128>::minimum": true,
  "f128::<impl f128>::mul_add": true,
  "f128::<impl f128>::next_down": true,
  "f128::<impl f128>::next_up": true,
  "f128::<impl f128>::powf": true,
  "f128::<impl f128>::powi": true,
  "f128::<impl f128>::recip": true,
  "f128::<impl f128>::rem_euclid": true,
  "f128::<impl f128>::round": true,
  "f128::<impl f128>::round_ties_even": true,
  "f128::<impl f128>::signum": true,
  "f128::<impl f128>::sin": true,
  "f128::<impl f128>::sin_cos": true,
  "f128::<impl f128>::sinh": true,
  "f128::<impl f128>::sqrt": true,
  "f128::<impl f128>::tan": true,
  "f128::<impl f128>::tanh": true,
  "f128::<impl f128>::to_be_bytes": true,
  "f128::<impl f128>::to_bits": true,
  "f128::<impl f128>::to_degrees": true,
  "f128::<impl f128>::to_le_bytes": true,
  "f128::<impl f128>::to_ne_bytes": true,
  "f128::<impl f128>::to_radians": true,
  "f128::<impl f128>::total_cmp": true,
  "f128::<impl f128>::trunc": true,
  "f16::<impl f16>::abs": true,
  "f16::<impl f16>::acos": true,
  "f16::<impl f16>::acosh": true,
  "f16::<impl f16>::algebraic_add": true,
  "f16::<impl f16>::algebraic_div": true,
  "f16::<impl f16>::algebraic_mul": true,
  "f16::<impl f16>::algebraic_rem": true,
  "f16::<impl f16>::algebraic_sub": true,
  "f16::<impl f16>::asin": true,
  "f16::<impl f16>::asinh": true,
  "f16::<impl f16>::atan": true,
  "f16::<impl f16>::atan2": true,
  "f16::<impl f16>::atanh": true,
  "f16::<impl f16>::cbrt": true,
  "f16::<impl f16>::ceil": true,
  "f16::<impl f16>::clamp": true,
  "f16::<impl f16>::clamp::do_panic": true,
  "f16::<impl f16>::clamp::do_panic::compiletime": true,
  "f16::<impl f16>::clamp::do_panic::runtime": true,
  "f16::<impl f16>::classify": true,
  "f16::<impl f16>::copysign": true,
  "f16::<impl f16>::cos": true,
  "f16::<impl f16>::cosh": true,
  "f16::<impl f16>::div_euclid": true,
  "f16::<impl f16>::erf": true,
  "f16::<impl f16>::erfc": true,
  "f16::<impl f16>::exp": true,
  "f16::<impl f16>::exp2": true,
  "f16::<impl f16>::exp_m1": true,
  "f16::<impl f16>::floor": true,
  "f16::<impl f16>::fract": true,
  "f16::<impl f16>::from_be_bytes": true,
  "f16::<impl f16>::from_bits": true,
  "f16::<impl f16>::from_le_bytes": true,
  "f16::<impl f16>::from_ne_bytes": true,
  "f16::<impl f16>::gamma": true,
  "f16::<impl f16>::hypot": true,
  "f16::<impl f16>::is_finite": true,
  "f16::<impl f16>::is_infinite": true,
  "f16::<impl f16>::is_nan": true,
  "f16::<impl f16>::is_normal": true,
  "f16::<impl f16>::is_sign_negative": true,
  "f16::<impl f16>::is_sign_positive": true,
  "f16::<impl f16>::is_subnormal": true,
  "f16::<impl f16>::ln": true,
  "f16::<impl f16>::ln_1p": true,
  "f16::<impl f16>::ln_gamma": true,
  "f16::<impl f16>::log": true,
  "f16::<impl f16>::log10": true,
  "f16::<impl f16>::log2": true,
  "f16::<impl f16>::max": true,
  "f16::<impl f16>::maximum": true,
  "f16::<impl f16>::midpoint": true,
  "f16::<impl f16>::min": true,
  "f16::<impl f16>::minimum": true,
  "f16::<impl f16>::mul_add": true,
  "f16::<impl f16>::next_down": true,
  "f16::<impl f16>::next_up": true,
  "f16::<impl f16>::powf": true,
  "f16::<impl f16>::powi": true,
  "f16::<impl f16>::recip": true,
  "f16::<impl f16>::rem_euclid": true,
  "f16::<impl f16>::round": true,
  "f16::<impl f16>::round_ties_even": true,
  "f16::<impl f16>::signum": true,
  "f16::<impl f16>::sin": true,
  "f16::<impl f16>::sin_cos": true,
  "f16::<impl f16>::sinh": true,
  "f16::<impl f16>::sqrt": true,
  "f16::<impl f16>::tan": true,
  "f16::<impl f16>::tanh": true,
  "f16::<impl f16>::to_be_bytes": true,
  "f16::<impl f16>::to_bits": true,
  "f16::<impl f16>::to_degrees": true,
  "f16::<impl f16>::to_le_bytes": true,
  "f16::<impl f16>::to_ne_bytes": true,
  "f16::<impl f16>::to_radians": true,
  "f16::<impl f16>::total_cmp": true,
  "f16::<impl f16>::trunc": true,
  "f32::<impl f32>::abs": true,
  "f32::<impl f32>::abs_sub": true,
  "f32::<impl f32>::acos": true,
  "f32::<impl f32>::acosh": true,
  "f32::<impl f32>::algebraic_add": true,
  "f32::<impl f32>::algebraic_div": true,
  "f32::<impl f32>::algebraic_mul": true,
  "f32::<impl f32>::algebraic_rem": true,
  "f32::<impl f32>::algebraic_sub": true,
  "f32::<impl f32>::asin": true,
  "f32::<impl f32>::asinh": true,
  "f32::<impl f32>::atan": true,
  "f32::<impl f32>::atan2": true,
  "f32::<impl f32>::atanh": true,
  "f32::<impl f32>::cbrt": true,
  "f32::<impl f32>::ceil": true,
  "f32::<impl f32>::clamp": true,
  "f32::<impl f32>::clamp::do_panic": true,
  "f32::<impl f32>::clamp::do_panic::compiletime": true,
  "f32::<impl f32>::clamp::do_panic::runtime": true,
  "f32::<impl f32>::classify": true,
  "f32::<impl f32>::copysign": true,
  "f32::<impl f32>::cos": true,
  "f32::<impl f32>::cosh": true,
  "f32::<impl f32>::div_euclid": true,
  "f32::<impl f32>::erf": true,
  "f32::<impl f32>::erfc": true,
  "f32::<impl f32>::exp": true,
  "f32::<impl f32>::exp2": true,
  "f32::<impl f32>::exp_m1": true,
  "f32::<impl f32>::floor": true,
  "f32::<impl f32>::fract": true,
  "f32::<impl f32>::from_be_bytes": true,
  "f32::<impl f32>::from_bits": true,
  "f32::<impl f32>::from_le_bytes": true,
  "f32::<impl f32>::from_ne_bytes": true,
  "f32::<impl f32>::gamma": true,
  "f32::<impl f32>::hypot": true,
  "f32::<impl f32>::is_finite": true,
  "f32::<impl f32>::is_infinite": true,
  "f32::<impl f32>::is_nan": true,
  "f32::<impl f32>::is_normal": true,
  "f32::<impl f32>::is_sign_negative": true,
  "f32::<impl f32>::is_sign_positive": true,
  "f32::<impl f32>::is_subnormal": true,
  "f32::<impl f32>::ln": true,
  "f32::<impl f32>::ln_1p": true,
  "f32::<impl f32>::ln_gamma": true,
  "f32::<impl f32>::log": true,
  "f32::<impl f32>::log10": true,
  "f32::<impl f32>::log2": true,
  "f32::<impl f32>::max": true,
  "f32::<impl f32>::maximum": true,
  "f32::<impl f32>::midpoint": true,
  "f32::<impl f32>::min": true,
  "f32::<impl f32>::minimum": true,
  "f32::<impl f32>::mul_add": true,
  "f32::<impl f32>::next_down": true,
  "f32::<impl f32>::next_up": true,
  "f32::<impl f32>::powf": true,
  "f32::<impl f32>::powi": true,
  "f32::<impl f32>::recip": true,
  "f32::<impl f32>::rem_euclid": true,
  "f32::<impl f32>::round": true,
  "f32::<impl f32>::round_ties_even": true,
  "f32::<impl f32>::signum": true,
  "f32::<impl f32>::sin": true,
  "f32::<impl f32>::sin_cos": true,
  "f32::<impl f32>::sinh": true,
  "f32::<impl f32>::sqrt": true,
  "f32::<impl f32>::tan": true,
  "f32::<impl f32>::tanh": true,
  "f32::<impl f32>::to_be_bytes": true,
  "f32::<impl f32>::to_bits": true,
  "f32::<impl f32>::to_degrees": true,
  "f32::<impl f32>::to_le_bytes": true,
  "f32::<impl f32>::to_ne_bytes": true,
  "f32::<impl f32>::to_radians": true,
  "f32::<impl f32>::total_cmp": true,
  "f32::<impl f32>::trunc": true,
  "f32::math::abs_sub": true,
  "f32::math::cbrt": true,
  "f32::math::ceil": true,
  "f32::math::div_euclid": true,
  "f32::math::floor": true,
  "f32::math::fract": true,
  "f32::math::mul_add": true,
  "f32::math::powi": true,
  "f32::math::rem_euclid": true,
  "f32::math::round": true,
  "f32::math::round_ties_even": true,
  "f32::math::sqrt": true,
  "f32::math::trunc": true,
  "f64::<impl f64>::abs": true,
  "f64::<impl f64>::abs_sub": true,
  "f64::<impl f64>::acos": true,
  "f64::<impl f64>::acosh": true,
  "f64::<impl f64>::algebraic_add": true,
  "f64::<impl f64>::algebraic_div": true,
  "f64::<impl f64>::algebraic_mul": true,
  "f64::<impl f64>::algebraic_rem": true,
  "f64::<impl f64>::algebraic_sub": true,
  "f64::<impl f64>::asin": true,
  "f64::<impl f64>::asinh": true,
  "f64::<impl f64>::atan": true,
  "f64::<impl f64>::atan2": true,
  "f64::<impl f64>::atanh": true,
  "f64::<impl f64>::cbrt": true,
  "f64::<impl f64>::ceil": true,
  "f64::<impl f64>::clamp": true,
  "f64::<impl f64>::clamp::do_panic": true,
  "f64::<impl f64>::clamp::do_panic::compiletime": true,
  "f64::<impl f64>::clamp::do_panic::runtime": true,
  "f64::<impl f64>::classify": true,
  "f64::<impl f64>::copysign": true,
  "f64::<impl f64>::cos": true,
  "f64::<impl f64>::cosh": true,
  "f64::<impl f64>::div_euclid": true,
  "f64::<impl f64>::erf": true,
  "f64::<impl f64>::erfc": true,
  "f64::<impl f64>::exp": true,
  "f64::<impl f64>::exp2": true,
  "f64::<impl f64>::exp_m1": true,
  "f64::<impl f64>::floor": true,
  "f64::<impl f64>::fract": true,
  "f64::<impl f64>::from_be_bytes": true,
  "f64::<impl f64>::from_bits": true,
  "f64::<impl f64>::from_le_bytes": true,
  "f64::<impl f64>::from_ne_bytes": true,
  "f64::<impl f64>::gamma": true,
  "f64::<impl f64>::hypot": true,
  "f64::<impl f64>::is_finite": true,
  "f64::<impl f64>::is_infinite": true,
  "f64::<impl f64>::is_nan": true,
  "f64::<impl f64>::is_negative": true,
  "f64::<impl f64>::is_normal": true,
  "f64::<impl f64>::is_positive": true,
  "f64::<impl f64>::is_sign_negative": true,
  "f64::<impl f64>::is_sign_positive": true,
  "f64::<impl f64>::is_subnormal": true,
  "f64::<impl f64>::ln": true,
  "f64::<impl f64>::ln_1p": true,
  "f64::<impl f64>::ln_gamma": true,
  "f64::<impl f64>::log": true,
  "f64::<impl f64>::log10": true,
  "f64::<impl f64>::log2": true,
  "f64::<impl f64>::max": true,
  "f64::<impl f64>::maximum": true,
  "f64::<impl f64>::midpoint": true,
  "f64::<impl f64>::min": true,
  "f64::<impl f64>::minimum": true,
  "f64::<impl f64>::mul_add": true,
  "f64::<impl f64>::next_down": true,
  "f64::<impl f64>::next_up": true,
  "f64::<impl f64>::powf": true,
  "f64::<impl f64>::powi": true,
  "f64::<impl f64>::recip": true,
  "f64::<impl f64>::rem_euclid": true,
  "f64::<impl f64>::round": true,
  "f64::<impl f64>::round_ties_even": true,
  "f64::<impl f64>::signum": true,
  "f64::<impl f64>::sin": true,
  "f64::<impl f64>::sin_cos": true,
  "f64::<impl f64>::sinh": true,
  "f64::<impl f64>::sqrt": true,
  "f64::<impl f64>::tan": true,
  "f64::<impl f64>::tanh": true,
  "f64::<impl f64>::to_be_bytes": true,
  "f64::<impl f64>::to_bits": true,
  "f64::<impl f64>::to_degrees": true,
  "f64::<impl f64>::to_le_bytes": true,
  "f64::<impl f64>::to_ne_bytes": true,
  "f64::<impl f64>::to_radians": true,
  "f64::<impl f64>::total_cmp": true,
  "f64::<impl f64>::trunc": true,
  "f64::math::abs_sub": true,
  "f64::math::cbrt": true,
  "f64::math::ceil": true,
  "f64::math::div_euclid": true,
  "f64::math::floor": true,
  "f64::math::fract": true,
  "f64::math::mul_add": true,
  "f64::math::powi": true,
  "f64::math::rem_euclid": true,
  "f64::math::round": true,
  "f64::math::round_ties_even": true,
  "f64::math::sqrt": true,
  "f64::math::trunc": true,
  "ffi::c_str::<impl core::default::Default for boxed::Box<core::ffi::CStr>>::default": true,
  "ffi::c_str::<impl core::default::Default for rc::Rc<core::ffi::CStr>>::default": true,
  "ffi::os_str::<impl core::default::Default for alloc_crate::boxed::Box<ffi::os_str::OsStr>>::default": true,
  "ffi::os_str::OsString::new": true,
  "ffi::os_str::OsString::with_capacity": true,
  "float::add::__adddf3": true,
  "float::add::__adddf3::__adddf3": true,
  "float::add::__addhf3": true,
  "float::add::__addhf3::__addhf3": true,
  "float::add::__addsf3": true,
  "float::add::__addsf3::__addsf3": true,
  "float::add::__addtf3": true,
  "float::add::__addtf3::__addtf3": true,
  "float::cmp::Result::to_ge_abi": true,
  "float::cmp::Result::to_le_abi": true,
  "float::cmp::__eqdf2": true,
  "float::cmp::__eqdf2::__eqdf2": true,
  "float::cmp::__eqhf2": true,
  "float::cmp::__eqhf2::__eqhf2": true,
  "float::cmp::__eqsf2": true,
  "float::cmp::__eqsf2::__eqsf2": true,
  "float::cmp::__eqtf2": true,
  "float::cmp::__eqtf2::__eqtf2": true,
  "float::cmp::__gedf2": true,
  "float::cmp::__gedf2::__gedf2": true,
  "float::cmp::__gehf2": true,
  "float::cmp::__gehf2::__gehf2": true,
  "float::cmp::__gesf2": true,
  "float::cmp::__gesf2::__gesf2": true,
  "float::cmp::__getf2": true,
  "float::cmp::__getf2::__getf2": true,
  "float::cmp::__gtdf2": true,
  "float::cmp::__gtdf2::__gtdf2": true,
  "float::cmp::__gthf2": true,
  "float::cmp::__gthf2::__gthf2": true,
  "float::cmp::__gtsf2": true,
  "float::cmp::__gtsf2::__gtsf2": true,
  "float::cmp::__gttf2": true,
  "float::cmp::__gttf2::__gttf2": true,
  "float::cmp::__ledf2": true,
  "float::cmp::__ledf2::__ledf2": true,
  "float::cmp::__lehf2": true,
  "float::cmp::__lehf2::__lehf2": true,
  "float::cmp::__lesf2": true,
  "float::cmp::__lesf2::__lesf2": true,
  "float::cmp::__letf2": true,
  "float::cmp::__letf2::__letf2": true,
  "float::cmp::__ltdf2": true,
  "float::cmp::__ltdf2::__ltdf2": true,
  "float::cmp::__lthf2": true,
  "float::cmp::__lthf2::__lthf2": true,
  "float::cmp::__ltsf2": true,
  "float::cmp::__ltsf2::__ltsf2": true,
  "float::cmp::__lttf2": true,
  "float::cmp::__lttf2::__lttf2": true,
  "float::cmp::__nedf2": true,
  "float::cmp::__nedf2::__nedf2": true,
  "float::cmp::__nehf2": true,
  "float::cmp::__nehf2::__nehf2": true,
  "float::cmp::__nesf2": true,
  "float::cmp::__nesf2::__nesf2": true,
  "float::cmp::__netf2": true,
  "float::cmp::__netf2::__netf2": true,
  "float::cmp::__unorddf2": true,
  "float::cmp::__unorddf2::__unorddf2": true,
  "float::cmp::__unordhf2": true,
  "float::cmp::__unordhf2::__unordhf2": true,
  "float::cmp::__unordsf2": true,
  "float::cmp::__unordsf2::__unordsf2": true,
  "float::cmp::__unordtf2": true,
  "float::cmp::__unordtf2::__unordtf2": true,
  "float::conv::__fixdfdi": true,
  "float::conv::__fixdfdi::__fixdfdi": true,
  "float::conv::__fixdfsi": true,
  "float::conv::__fixdfsi::__fixdfsi": true,
  "float::conv::__fixdfti": true,
  "float::conv::__fixdfti::__fixdfti": true,
  "float::conv::__fixsfdi": true,
  "float::conv::__fixsfdi::__fixsfdi": true,
  "float::conv::__fixsfsi": true,
  "float::conv::__fixsfsi::__fixsfsi": true,
  "float::conv::__fixsfti": true,
  "float::conv::__fixsfti::__fixsfti": true,
  "float::conv::__fixtfdi": true,
  "float::conv::__fixtfdi::__fixtfdi": true,
  "float::conv::__fixtfsi": true,
  "float::conv::__fixtfsi::__fixtfsi": true,
  "float::conv::__fixtfti": true,
  "float::conv::__fixtfti::__fixtfti": true,
  "float::conv::__fixunsdfdi": true,
  "float::conv::__fixunsdfdi::__fixunsdfdi": true,
  "float::conv::__fixunsdfsi": true,
  "float::conv::__fixunsdfsi::__fixunsdfsi": true,
  "float::conv::__fixunsdfti": true,
  "float::conv::__fixunsdfti::__fixunsdfti": true,
  "float::conv::__fixunssfdi": true,
  "float::conv::__fixunssfdi::__fixunssfdi": true,
  "float::conv::__fixunssfsi": true,
  "float::conv::__fixunssfsi::__fixunssfsi": true,
  "float::conv::__fixunssfti": true,
  "float::conv::__fixunssfti::__fixunssfti": true,
  "float::conv::__fixunstfdi": true,
  "float::conv::__fixunstfdi::__fixunstfdi": true,
  "float::conv::__fixunstfsi": true,
  "float::conv::__fixunstfsi::__fixunstfsi": true,
  "float::conv::__fixunstfti": true,
  "float::conv::__fixunstfti::__fixunstfti": true,
  "float::conv::__floatdidf": true,
  "float::conv::__floatdidf::__floatdidf": true,
  "float::conv::__floatdisf": true,
  "float::conv::__floatdisf::__floatdisf": true,
  "float::conv::__floatditf": true,
  "float::conv::__floatditf::__floatditf": true,
  "float::conv::__floatsidf": true,
  "float::conv::__floatsidf::__floatsidf": true,
  "float::conv::__floatsisf": true,
  "float::conv::__floatsisf::__floatsisf": true,
  "float::conv::__floatsitf": true,
  "float::conv::__floatsitf::__floatsitf": true,
  "float::conv::__floattidf": true,
  "float::conv::__floattidf::__floattidf": true,
  "float::conv::__floattisf": true,
  "float::conv::__floattisf::__floattisf": true,
  "float::conv::__floattitf": true,
  "float::conv::__floattitf::__floattitf": true,
  "float::conv::__floatundidf": true,
  "float::conv::__floatundidf::__floatundidf": true,
  "float::conv::__floatundisf": true,
  "float::conv::__floatundisf::__floatundisf": true,
  "float::conv::__floatunditf": true,
  "float::conv::__floatunditf::__floatunditf": true,
  "float::conv::__floatunsidf": true,
  "float::conv::__floatunsidf::__floatunsidf": true,
  "float::conv::__floatunsisf": true,
  "float::conv::__floatunsisf::__floatunsisf": true,
  "float::conv::__floatunsitf": true,
  "float::conv::__floatunsitf::__floatunsitf": true,
  "float::conv::__floatuntidf": true,
  "float::conv::__floatuntidf::__floatuntidf": true,
  "float::conv::__floatuntisf": true,
  "float::conv::__floatuntisf::__floatuntisf": true,
  "float::conv::__floatuntitf": true,
  "float::conv::__floatuntitf::__floatuntitf": true,
  "float::conv::int_to_float::u128_to_f128_bits": true,
  "float::conv::int_to_float::u128_to_f32_bits": true,
  "float::conv::int_to_float::u128_to_f64_bits": true,
  "float::conv::int_to_float::u32_to_f128_bits": true,
  "float::conv::int_to_float::u32_to_f32_bits": true,
  "float::conv::int_to_float::u32_to_f64_bits": true,
  "float::conv::int_to_float::u64_to_f128_bits": true,
  "float::conv::int_to_float::u64_to_f32_bits": true,
  "float::conv::int_to_float::u64_to_f64_bits": true,
  "float::div::__divdf3": true,
  "float::div::__divdf3::__divdf3": true,
  "float::div::__divsf3": true,
  "float::div::__divsf3::__divsf3": true,
  "float::div::__divtf3": true,
  "float::div::__divtf3::__divtf3": true,
  "float::extend::__extenddftf2": true,
  "float::extend::__extenddftf2::__extenddftf2": true,
  "float::extend::__extendhfdf2": true,
  "float::extend::__extendhfdf2::__extendhfdf2": true,
  "float::extend::__extendhfsf2": true,
  "float::extend::__extendhfsf2::__extendhfsf2": true,
  "float::extend::__extendhftf2": true,
  "float::extend::__extendhftf2::__extendhftf2": true,
  "float::extend::__extendsfdf2": true,
  "float::extend::__extendsfdf2::__extendsfdf2": true,
  "float::extend::__extendsftf2": true,
  "float::extend::__extendsftf2::__extendsftf2": true,
  "float::extend::__gnu_h2f_ieee": true,
  "float::extend::__gnu_h2f_ieee::__gnu_h2f_ieee": true,
  "float::mul::__muldf3": true,
  "float::mul::__muldf3::__muldf3": true,
  "float::mul::__mulhf3": true,
  "float::mul::__mulhf3::__mulhf3": true,
  "float::mul::__mulsf3": true,
  "float::mul::__mulsf3::__mulsf3": true,
  "float::mul::__multf3": true,
  "float::mul::__multf3::__multf3": true,
  "float::pow::__powidf2": true,
  "float::pow::__powidf2::__powidf2": true,
  "float::pow::__powisf2": true,
  "float::pow::__powisf2::__powisf2": true,
  "float::pow::__powitf2": true,
  "float::pow::__powitf2::__powitf2": true,
  "float::sub::__subdf3": true,
  "float::sub::__subdf3::__subdf3": true,
  "float::sub::__subhf3": true,
  "float::sub::__subhf3::__subhf3": true,
  "float::sub::__subsf3": true,
  "float::sub::__subsf3::__subsf3": true,
  "float::sub::__subtf3": true,
  "float::sub::__subtf3::__subtf3": true,
  "float::trunc::__gnu_f2h_ieee": true,
  "float::trunc::__gnu_f2h_ieee::__gnu_f2h_ieee": true,
  "float::trunc::__truncdfhf2": true,
  "float::trunc::__truncdfhf2::__truncdfhf2": true,
  "float::trunc::__truncdfsf2": true,
  "float::trunc::__truncdfsf2::__truncdfsf2": true,
  "float::trunc::__truncsfhf2": true,
  "float::trunc::__truncsfhf2::__truncsfhf2": true,
  "float::trunc::__trunctfdf2": true,
  "float::trunc::__trunctfdf2::__trunctfdf2": true,
  "float::trunc::__trunctfhf2": true,
  "float::trunc::__trunctfhf2::__trunctfhf2": true,
  "float::trunc::__trunctfsf2": true,
  "float::trunc::__trunctfsf2::__trunctfsf2": true,
  "fmt::FormattingOptions::align": true,
  "fmt::FormattingOptions::alternate": true,
  "fmt::FormattingOptions::debug_as_hex": true,
  "fmt::FormattingOptions::fill": true,
  "fmt::FormattingOptions::get_align": true,
  "fmt::FormattingOptions::get_alternate": true,
  "fmt::FormattingOptions::get_debug_as_hex": true,
  "fmt::FormattingOptions::get_fill": true,
  "fmt::FormattingOptions::get_precision": true,
  "fmt::FormattingOptions::get_sign": true,
  "fmt::FormattingOptions::get_sign_aware_zero_pad": true,
  "fmt::FormattingOptions::get_width": true,
  "fmt::FormattingOptions::new": true,
  "fmt::FormattingOptions::precision": true,
  "fmt::FormattingOptions::sign": true,
  "fmt::FormattingOptions::sign_aware_zero_pad": true,
  "fmt::FormattingOptions::width": true,
  "fmt::PostPadding::new": true,
  "fmt::num::<impl i128>::format_into": true,
  "fmt::num::<impl u128>::format_into": true,
  "fmt::num::div_rem_1e16": true,
  "fmt::num::imp::<impl i16>::format_into": true,
  "fmt::num::imp::<impl i32>::format_into": true,
  "fmt::num::imp::<impl i64>::format_into": true,
  "fmt::num::imp::<impl i8>::format_into": true,
  "fmt::num::imp::<impl isize>::format_into": true,
  "fmt::num::imp::<impl u16>::format_into": true,
  "fmt::num::imp::<impl u32>::format_into": true,
  "fmt::num::imp::<impl u64>::format_into": true,
  "fmt::num::imp::<impl u8>::format_into": true,
  "fmt::num::imp::<impl usize>::format_into": true,
  "fmt::rt::Argument::<'_>::from_usize": true,
  "fs::DirBuilder::new": true,
  "fs::DirBuilder::recursive": true,
  "fs::File::lock": true,
  "fs::File::lock_shared": true,
  "fs::File::metadata": true,
  "fs::File::options": true,
  "fs::File::set_len": true,
  "fs::File::set_modified": true,
  "fs::File::set_permissions": true,
  "fs::File::set_times": true,
  "fs::File::sync_all": true,
  "fs::File::sync_data": true,
  "fs::File::try_clone": true,
  "fs::File::try_lock": true,
  "fs::File::try_lock_shared": true,
  "fs::File::unlock": true,
  "fs::FileTimes::new": true,
  "fs::FileTimes::set_accessed": true,
  "fs::FileTimes::set_modified": true,
  "fs::FileType::is_dir": true,
  "fs::FileType::is_file": true,
  "fs::FileType::is_symlink": true,
  "fs::Metadata::accessed": true,
  "fs::Metadata::created": true,
  "fs::Metadata::file_type": true,
  "fs::Metadata::is_dir": true,
  "fs::Metadata::is_file": true,
  "fs::Metadata::is_symlink": true,
  "fs::Metadata::len": true,
  "fs::Metadata::modified": true,
  "fs::Metadata::permissions": true,
  "fs::OpenOptions::append": true,
  "fs::OpenOptions::create": true,
  "fs::OpenOptions::create_new": true,
  "fs::OpenOptions::new": true,
  "fs::OpenOptions::read": true,
  "fs::OpenOptions::truncate": true,
  "fs::OpenOptions::write": true,
  "fs::Permissions::readonly": true,
  "fs::Permissions::set_readonly": true,
  "fs::buffer_capacity_required": true,
  "hash::random::DefaultHasher::new": true,
  "hash::random::RandomState::new": true,
  "hash::random::RandomState::new::KEYS::__init": true,
  "hash::sip::SipHasher13::new": true,
  "hash::sip::SipHasher13::new_with_keys": true,
  "hash::sip::SipHasher::new": true,
  "hash::sip::SipHasher::new_with_keys": true,
  "hint::assert_unchecked::precondition_check": true,
  "hint::assert_unchecked::{closure#0}::{closure#1}::{closure#0}::precondition_check": true,
  "hint::assert_unchecked::{closure#2}::{closure#0}::precondition_check": true,
  "hint::assert_unchecked::{closure#3}::{closure#0}::precondition_check": true,
  "hint::cold_path": true,
  "hint::likely": true,
  "hint::spin_loop": true,
  "hint::unlikely": true,
  "hint::unreachable_unchecked::precondition_check": true,
  "hint::unreachable_unchecked::{closure#0}::{closure#1}::{closure#0}::precondition_check": true,
  "hint::unreachable_unchecked::{closure#2}::{closure#0}::precondition_check": true,
  "hint::unreachable_unchecked::{closure#3}::{closure#0}::precondition_check": true,
  "inflate::TINFLStatus::from_i32": true,
  "inflate::core::DecompressorOxide::new": true,
  "inflate::core::HuffmanTable::fast_lookup": true,
  "inflate::core::HuffmanTable::lookup": true,
  "inflate::core::HuffmanTable::new": true,
  "inflate::core::HuffmanTable::tree_lookup": true,
  "inflate::core::State::begin": true,
  "inflate::core::end_of_input": true,
  "inflate::core::num_extra_bits_for_distance_code": true,
  "inflate::core::reverse_bits": true,
  "inflate::core::undo_bytes": true,
  "inflate::core::validate_zlib_header": true,
  "int::addsub::__rust_i128_add": true,
  "int::addsub::__rust_i128_add::__rust_i128_add": true,
  "int::addsub::__rust_i128_addo": true,
  "int::addsub::__rust_i128_addo::__rust_i128_addo": true,
  "int::addsub::__rust_i128_sub": true,
  "int::addsub::__rust_i128_sub::__rust_i128_sub": true,
  "int::addsub::__rust_i128_subo": true,
  "int::addsub::__rust_i128_subo::__rust_i128_subo": true,
  "int::addsub::__rust_u128_add": true,
  "int::addsub::__rust_u128_add::__rust_u128_add": true,
  "int::addsub::__rust_u128_addo": true,
  "int::addsub::__rust_u128_addo::__rust_u128_addo": true,
  "int::addsub::__rust_u128_sub": true,
  "int::addsub::__rust_u128_sub::__rust_u128_sub": true,
  "int::addsub::__rust_u128_subo": true,
  "int::addsub::__rust_u128_subo::__rust_u128_subo": true,
  "int::big::<impl int::traits::HInt for i128>::widen": true,
  "int::big::<impl int::traits::HInt for i128>::widen_hi": true,
  "int::big::<impl int::traits::HInt for i128>::widen_mul": true,
  "int::big::<impl int::traits::HInt for i128>::zero_widen": true,
  "int::big::<impl int::traits::HInt for i128>::zero_widen_mul": true,
  "int::big::<impl int::traits::HInt for u128>::widen": true,
  "int::big::<impl int::traits::HInt for u128>::widen_hi": true,
  "int::big::<impl int::traits::HInt for u128>::widen_mul": true,
  "int::big::<impl int::traits::HInt for u128>::zero_widen": true,
  "int::big::<impl int::traits::HInt for u128>::zero_widen_mul": true,
  "int::big::i256::unsigned": true,
  "int::big::u256::signed": true,
  "int::bswap::__bswapdi2": true,
  "int::bswap::__bswapdi2::__bswapdi2": true,
  "int::bswap::__bswapsi2": true,
  "int::bswap::__bswapsi2::__bswapsi2": true,
  "int::bswap::__bswapti2": true,
  "int::bswap::__bswapti2::__bswapti2": true,
  "int::leading_zeros::__clzdi2": true,
  "int::leading_zeros::__clzdi2::__clzdi2": true,
  "int::leading_zeros::__clzsi2": true,
  "int::leading_zeros::__clzsi2::__clzsi2": true,
  "int::leading_zeros::__clzti2": true,
  "int::leading_zeros::__clzti2::__clzti2": true,
  "int::mul::__muldi3": true,
  "int::mul::__muldi3::__muldi3": true,
  "int::mul::__mulodi4": true,
  "int::mul::__mulodi4::__mulodi4": true,
  "int::mul::__mulosi4": true,
  "int::mul::__mulosi4::__mulosi4": true,
  "int::mul::__muloti4": true,
  "int::mul::__muloti4::__muloti4": true,
  "int::mul::__multi3": true,
  "int::mul::__multi3::__multi3": true,
  "int::mul::__rust_i128_mulo": true,
  "int::mul::__rust_i128_mulo::__rust_i128_mulo": true,
  "int::mul::__rust_u128_mulo": true,
  "int::mul::__rust_u128_mulo::__rust_u128_mulo": true,
  "int::mul::i128_overflowing_mul": true,
  "int::mul::i32_overflowing_mul": true,
  "int::mul::i64_overflowing_mul": true,
  "int::sdiv::__divdi3": true,
  "int::sdiv::__divdi3::__divdi3": true,
  "int::sdiv::__divmoddi4": true,
  "int::sdiv::__divmoddi4::__divmoddi4": true,
  "int::sdiv::__divmodsi4": true,
  "int::sdiv::__divmodsi4::__divmodsi4": true,
  "int::sdiv::__divmodti4": true,
  "int::sdiv::__divmodti4::__divmodti4": true,
  "int::sdiv::__divsi3": true,
  "int::sdiv::__divsi3::__divsi3": true,
  "int::sdiv::__divti3": true,
  "int::sdiv::__divti3::__divti3": true,
  "int::sdiv::__moddi3": true,
  "int::sdiv::__moddi3::__moddi3": true,
  "int::sdiv::__modsi3": true,
  "int::sdiv::__modsi3::__modsi3": true,
  "int::sdiv::__modti3": true,
  "int::sdiv::__modti3::__modti3": true,
  "int::shift::__ashldi3": true,
  "int::shift::__ashldi3::__ashldi3": true,
  "int::shift::__ashlsi3": true,
  "int::shift::__ashlsi3::__ashlsi3": true,
  "int::shift::__ashlti3": true,
  "int::shift::__ashlti3::__ashlti3": true,
  "int::shift::__ashrdi3": true,
  "int::shift::__ashrdi3::__ashrdi3": true,
  "int::shift::__ashrsi3": true,
  "int::shift::__ashrsi3::__ashrsi3": true,
  "int::shift::__ashrti3": true,
  "int::shift::__ashrti3::__ashrti3": true,
  "int::shift::__lshrdi3": true,
  "int::shift::__lshrdi3::__lshrdi3": true,
  "int::shift::__lshrsi3": true,
  "int::shift::__lshrsi3::__lshrsi3": true,
  "int::shift::__lshrti3": true,
  "int::shift::__lshrti3::__lshrti3": true,
  "int::specialized_div_rem::delegate::u128_divide_sparc": true,
  "int::specialized_div_rem::u128_by_u64_div_rem": true,
  "int::specialized_div_rem::u128_div_rem": true,
  "int::specialized_div_rem::u32_by_u32_div_rem": true,
  "int::specialized_div_rem::u32_div_rem": true,
  "int::specialized_div_rem::u32_normalization_shift": true,
  "int::specialized_div_rem::u64_by_u64_div_rem": true,
  "int::specialized_div_rem::u64_div_rem": true,
  "int::specialized_div_rem::u64_normalization_shift": true,
  "int::specialized_div_rem::zero_div_fn": true,
  "int::trailing_zeros::__ctzdi2": true,
  "int::trailing_zeros::__ctzdi2::__ctzdi2": true,
  "int::trailing_zeros::__ctzsi2": true,
  "int::trailing_zeros::__ctzsi2::__ctzsi2": true,
  "int::trailing_zeros::__ctzti2": true,
  "int::trailing_zeros::__ctzti2::__ctzti2": true,
  "int::udiv::__udivdi3": true,
  "int::udiv::__udivdi3::__udivdi3": true,
  "int::udiv::__udivmoddi4": true,
  "int::udiv::__udivmoddi4::__udivmoddi4": true,
  "int::udiv::__udivmodsi4": true,
  "int::udiv::__udivmodsi4::__udivmodsi4": true,
  "int::udiv::__udivmodti4": true,
  "int::udiv::__udivmodti4::__udivmodti4": true,
  "int::udiv::__udivsi3": true,
  "int::udiv::__udivsi3::__udivsi3": true,
  "int::udiv::__udivti3": true,
  "int::udiv::__udivti3::__udivti3": true,
  "int::udiv::__umoddi3": true,
  "int::udiv::__umoddi3::__umoddi3": true,
  "int::udiv::__umodsi3": true,
  "int::udiv::__umodsi3::__umodsi3": true,
  "int::udiv::__umodti3": true,
  "int::udiv::__umodti3::__umodti3": true,
  "intrinsics::assume": true,
  "intrinsics::cold_path": true,
  "intrinsics::const_allocate": true,
  "intrinsics::contract_checks": true,
  "intrinsics::fallback::wide_mul_u128": true,
  "intrinsics::fallback::wide_mul_u128::from_low_high": true,
  "intrinsics::fallback::wide_mul_u128::scalar_mul": true,
  "intrinsics::fallback::wide_mul_u128::to_low_high": true,
  "intrinsics::likely": true,
  "intrinsics::maximumf128": true,
  "intrinsics::maximumf16": true,
  "intrinsics::maximumf32": true,
  "intrinsics::maximumf64": true,
  "intrinsics::minimumf128": true,
  "intrinsics::minimumf16": true,
  "intrinsics::minimumf32": true,
  "intrinsics::minimumf64": true,
  "intrinsics::mir::Assume": true,
  "intrinsics::mir::Call": true,
  "intrinsics::mir::Goto": true,
  "intrinsics::mir::Return": true,
  "intrinsics::mir::ReturnTo": true,
  "intrinsics::mir::Unreachable": true,
  "intrinsics::mir::UnwindCleanup": true,
  "intrinsics::mir::UnwindContinue": true,
  "intrinsics::mir::UnwindResume": true,
  "intrinsics::mir::UnwindTerminate": true,
  "intrinsics::mir::UnwindUnreachable": true,
  "intrinsics::ub_checks": true,
  "intrinsics::unlikely": true,
  "intrinsics::verify::supported_status": true,
  "io::buffered::bufreader::buffer::Buffer::try_with_capacity": true,
  "io::buffered::bufreader::buffer::Buffer::with_capacity": true,
  "io::error::Error::from_raw_os_error": true,
  "io::error::Error::last_os_error": true,
  "io::error::ErrorKind::as_str": true,
  "io::error::_assert_error_is_sync_send": true,
  "io::error::repr_bitpacked::Repr::new_os": true,
  "io::error::repr_bitpacked::Repr::new_simple": true,
  "io::error::repr_bitpacked::kind_from_prim": true,
  "io::pipe::PipeReader::try_clone": true,
  "io::pipe::PipeWriter::try_clone": true,
  "io::pipe::pipe": true,
  "io::stdio::Stderr::lock": true,
  "io::stdio::cleanup": true,
  "io::stdio::stderr": true,
  "io::stdio::stderr_raw": true,
  "io::stdio::stdin": true,
  "io::stdio::stdin_raw": true,
  "io::stdio::stdout": true,
  "io::stdio::stdout_raw": true,
  "io::util::empty": true,
  "io::util::repeat": true,
  "io::util::sink": true,
  "is_ascii_alphanumeric": true,
  "is_ascii_punctuation": true,
  "is_available": true,
  "kani::mem_init::MemoryInitializationState::new": true,
  "leb128::low_bits_of_byte": true,
  "leb128::low_bits_of_u64": true,
  "line::LazyLines::new": true,
  "macho::DyldCacheSlidePointer3::addr_div": true,
  "macho::DyldCacheSlidePointer3::diversity": true,
  "macho::DyldCacheSlidePointer3::high8": true,
  "macho::DyldCacheSlidePointer3::is_auth": true,
  "macho::DyldCacheSlidePointer3::key": true,
  "macho::DyldCacheSlidePointer3::next": true,
  "macho::DyldCacheSlidePointer3::runtime_offset": true,
  "macho::DyldCacheSlidePointer3::target": true,
  "macho::DyldCacheSlidePointer5::addr_div": true,
  "macho::DyldCacheSlidePointer5::diversity": true,
  "macho::DyldCacheSlidePointer5::high8": true,
  "macho::DyldCacheSlidePointer5::is_auth": true,
  "macho::DyldCacheSlidePointer5::key_is_data": true,
  "macho::DyldCacheSlidePointer5::next": true,
  "macho::DyldCacheSlidePointer5::runtime_offset": true,
  "macho::cpu_subtype_intel": true,
  "macho::cpu_subtype_intel_family": true,
  "macho::cpu_subtype_intel_model": true,
  "map::assert_covariance": true,
  "marker::variance::PhantomContravariantLifetime::<'_>::new": true,
  "marker::variance::PhantomCovariantLifetime::<'_>::new": true,
  "marker::variance::PhantomInvariantLifetime::<'_>::new": true,
  "math::full_availability::cbrt": true,
  "math::full_availability::cbrt::cbrt": true,
  "math::full_availability::cbrtf": true,
  "math::full_availability::cbrtf::cbrtf": true,
  "math::full_availability::ceil": true,
  "math::full_availability::ceil::ceil": true,
  "math::full_availability::ceilf": true,
  "math::full_availability::ceilf128": true,
  "math::full_availability::ceilf128::ceilf128": true,
  "math::full_availability::ceilf16": true,
  "math::full_availability::ceilf16::ceilf16": true,
  "math::full_availability::ceilf::ceilf": true,
  "math::full_availability::copysign": true,
  "math::full_availability::copysign::copysign": true,
  "math::full_availability::copysignf": true,
  "math::full_availability::copysignf128": true,
  "math::full_availability::copysignf128::copysignf128": true,
  "math::full_availability::copysignf16": true,
  "math::full_availability::copysignf16::copysignf16": true,
  "math::full_availability::copysignf::copysignf": true,
  "math::full_availability::fabs": true,
  "math::full_availability::fabs::fabs": true,
  "math::full_availability::fabsf": true,
  "math::full_availability::fabsf128": true,
  "math::full_availability::fabsf128::fabsf128": true,
  "math::full_availability::fabsf16": true,
  "math::full_availability::fabsf16::fabsf16": true,
  "math::full_availability::fabsf::fabsf": true,
  "math::full_availability::fdim": true,
  "math::full_availability::fdim::fdim": true,
  "math::full_availability::fdimf": true,
  "math::full_availability::fdimf128": true,
  "math::full_availability::fdimf128::fdimf128": true,
  "math::full_availability::fdimf16": true,
  "math::full_availability::fdimf16::fdimf16": true,
  "math::full_availability::fdimf::fdimf": true,
  "math::full_availability::floor": true,
  "math::full_availability::floor::floor": true,
  "math::full_availability::floorf": true,
  "math::full_availability::floorf128": true,
  "math::full_availability::floorf128::floorf128": true,
  "math::full_availability::floorf16": true,
  "math::full_availability::floorf16::floorf16": true,
  "math::full_availability::floorf::floorf": true,
  "math::full_availability::fma": true,
  "math::full_availability::fma::fma": true,
  "math::full_availability::fmaf": true,
  "math::full_availability::fmaf128": true,
  "math::full_availability::fmaf128::fmaf128": true,
  "math::full_availability::fmaf::fmaf": true,
  "math::full_availability::fmax": true,
  "math::full_availability::fmax::fmax": true,
  "math::full_availability::fmaxf": true,
  "math::full_availability::fmaxf128": true,
  "math::full_availability::fmaxf128::fmaxf128": true,
  "math::full_availability::fmaxf16": true,
  "math::full_availability::fmaxf16::fmaxf16": true,
  "math::full_availability::fmaxf::fmaxf": true,
  "math::full_availability::fmaximum": true,
  "math::full_availability::fmaximum::fmaximum": true,
  "math::full_availability::fmaximumf": true,
  "math::full_availability::fmaximumf128": true,
  "math::full_availability::fmaximumf128::fmaximumf128": true,
  "math::full_availability::fmaximumf16": true,
  "math::full_availability::fmaximumf16::fmaximumf16": true,
  "math::full_availability::fmaximumf::fmaximumf": true,
  "math::full_availability::fmin": true,
  "math::full_availability::fmin::fmin": true,
  "math::full_availability::fminf": true,
  "math::full_availability::fminf128": true,
  "math::full_availability::fminf128::fminf128": true,
  "math::full_availability::fminf16": true,
  "math::full_availability::fminf16::fminf16": true,
  "math::full_availability::fminf::fminf": true,
  "math::full_availability::fminimum": true,
  "math::full_availability::fminimum::fminimum": true,
  "math::full_availability::fminimumf": true,
  "math::full_availability::fminimumf128": true,
  "math::full_availability::fminimumf128::fminimumf128": true,
  "math::full_availability::fminimumf16": true,
  "math::full_availability::fminimumf16::fminimumf16": true,
  "math::full_availability::fminimumf::fminimumf": true,
  "math::full_availability::fmod": true,
  "math::full_availability::fmod::fmod": true,
  "math::full_availability::fmodf": true,
  "math::full_availability::fmodf128": true,
  "math::full_availability::fmodf128::fmodf128": true,
  "math::full_availability::fmodf16": true,
  "math::full_availability::fmodf16::fmodf16": true,
  "math::full_availability::fmodf::fmodf": true,
  "math::full_availability::rint": true,
  "math::full_availability::rint::rint": true,
  "math::full_availability::rintf": true,
  "math::full_availability::rintf128": true,
  "math::full_availability::rintf128::rintf128": true,
  "math::full_availability::rintf16": true,
  "math::full_availability::rintf16::rintf16": true,
  "math::full_availability::rintf::rintf": true,
  "math::full_availability::round": true,
  "math::full_availability::round::round": true,
  "math::full_availability::roundeven": true,
  "math::full_availability::roundeven::roundeven": true,
  "math::full_availability::roundevenf": true,
  "math::full_availability::roundevenf128": true,
  "math::full_availability::roundevenf128::roundevenf128": true,
  "math::full_availability::roundevenf16": true,
  "math::full_availability::roundevenf16::roundevenf16": true,
  "math::full_availability::roundevenf::roundevenf": true,
  "math::full_availability::roundf": true,
  "math::full_availability::roundf128": true,
  "math::full_availability::roundf128::roundf128": true,
  "math::full_availability::roundf16": true,
  "math::full_availability::roundf16::roundf16": true,
  "math::full_availability::roundf::roundf": true,
  "math::full_availability::sqrt": true,
  "math::full_availability::sqrt::sqrt": true,
  "math::full_availability::sqrtf": true,
  "math::full_availability::sqrtf128": true,
  "math::full_availability::sqrtf128::sqrtf128": true,
  "math::full_availability::sqrtf16": true,
  "math::full_availability::sqrtf16::sqrtf16": true,
  "math::full_availability::sqrtf::sqrtf": true,
  "math::full_availability::trunc": true,
  "math::full_availability::trunc::trunc": true,
  "math::full_availability::truncf": true,
  "math::full_availability::truncf128": true,
  "math::full_availability::truncf128::truncf128": true,
  "math::full_availability::truncf16": true,
  "math::full_availability::truncf16::truncf16": true,
  "math::full_availability::truncf::truncf": true,
  "math::libm_math::acos::acos": true,
  "math::libm_math::acos::r": true,
  "math::libm_math::acosf::acosf": true,
  "math::libm_math::acosf::r": true,
  "math::libm_math::acosh::acosh": true,
  "math::libm_math::acoshf::acoshf": true,
  "math::libm_math::arch::x86::detect::get_cpu_features": true,
  "math::libm_math::arch::x86::detect::load_x86_features": true,
  "math::libm_math::arch::x86::fma::fma": true,
  "math::libm_math::arch::x86::fma::fma::initializer": true,
  "math::libm_math::arch::x86::fma::fma_fallback": true,
  "math::libm_math::arch::x86::fma::fma_with_fma": true,
  "math::libm_math::arch::x86::fma::fma_with_fma4": true,
  "math::libm_math::arch::x86::fma::fmaf": true,
  "math::libm_math::arch::x86::fma::fmaf::initializer": true,
  "math::libm_math::arch::x86::fma::fmaf_fallback": true,
  "math::libm_math::arch::x86::fma::fmaf_with_fma": true,
  "math::libm_math::arch::x86::fma::fmaf_with_fma4": true,
  "math::libm_math::arch::x86::sqrt": true,
  "math::libm_math::arch::x86::sqrtf": true,
  "math::libm_math::asin::asin": true,
  "math::libm_math::asin::comp_r": true,
  "math::libm_math::asinf::asinf": true,
  "math::libm_math::asinf::r": true,
  "math::libm_math::asinh::asinh": true,
  "math::libm_math::asinhf::asinhf": true,
  "math::libm_math::atan2::atan2": true,
  "math::libm_math::atan2f::atan2f": true,
  "math::libm_math::atan::atan": true,
  "math::libm_math::atanf::atanf": true,
  "math::libm_math::atanh::atanh": true,
  "math::libm_math::atanhf::atanhf": true,
  "math::libm_math::cbrt::cbrt": true,
  "math::libm_math::cbrt::cbrt_round": true,
  "math::libm_math::cbrtf::cbrtf": true,
  "math::libm_math::ceil::ceil": true,
  "math::libm_math::ceil::ceilf": true,
  "math::libm_math::ceil::ceilf128": true,
  "math::libm_math::ceil::ceilf16": true,
  "math::libm_math::combine_words": true,
  "math::libm_math::copysign::copysign": true,
  "math::libm_math::copysign::copysignf": true,
  "math::libm_math::copysign::copysignf128": true,
  "math::libm_math::copysign::copysignf16": true,
  "math::libm_math::cos::cos": true,
  "math::libm_math::cosf::cosf": true,
  "math::libm_math::cosh::cosh": true,
  "math::libm_math::coshf::coshf": true,
  "math::libm_math::erf::erf": true,
  "math::libm_math::erf::erfc": true,
  "math::libm_math::erf::erfc1": true,
  "math::libm_math::erf::erfc2": true,
  "math::libm_math::erff::erfc1": true,
  "math::libm_math::erff::erfc2": true,
  "math::libm_math::erff::erfcf": true,
  "math::libm_math::erff::erff": true,
  "math::libm_math::exp10::exp10": true,
  "math::libm_math::exp10f::exp10f": true,
  "math::libm_math::exp2::exp2": true,
  "math::libm_math::exp2f::exp2f": true,
  "math::libm_math::exp::exp": true,
  "math::libm_math::expf::expf": true,
  "math::libm_math::expm1::expm1": true,
  "math::libm_math::expm1f::expm1f": true,
  "math::libm_math::expo2::expo2": true,
  "math::libm_math::fabs::fabs": true,
  "math::libm_math::fabs::fabsf": true,
  "math::libm_math::fabs::fabsf128": true,
  "math::libm_math::fabs::fabsf16": true,
  "math::libm_math::fdim::fdim": true,
  "math::libm_math::fdim::fdimf": true,
  "math::libm_math::fdim::fdimf128": true,
  "math::libm_math::fdim::fdimf16": true,
  "math::libm_math::floor::floor": true,
  "math::libm_math::floor::floorf": true,
  "math::libm_math::floor::floorf128": true,
  "math::libm_math::floor::floorf16": true,
  "math::libm_math::fma::fma": true,
  "math::libm_math::fma::fmaf": true,
  "math::libm_math::fma::fmaf128": true,
  "math::libm_math::fma::fmaf16": true,
  "math::libm_math::fmin_fmax::fmax": true,
  "math::libm_math::fmin_fmax::fmaxf": true,
  "math::libm_math::fmin_fmax::fmaxf128": true,
  "math::libm_math::fmin_fmax::fmaxf16": true,
  "math::libm_math::fmin_fmax::fmin": true,
  "math::libm_math::fmin_fmax::fminf": true,
  "math::libm_math::fmin_fmax::fminf128": true,
  "math::libm_math::fmin_fmax::fminf16": true,
  "math::libm_math::fminimum_fmaximum::fmaximum": true,
  "math::libm_math::fminimum_fmaximum::fmaximumf": true,
  "math::libm_math::fminimum_fmaximum::fmaximumf128": true,
  "math::libm_math::fminimum_fmaximum::fmaximumf16": true,
  "math::libm_math::fminimum_fmaximum::fminimum": true,
  "math::libm_math::fminimum_fmaximum::fminimumf": true,
  "math::libm_math::fminimum_fmaximum::fminimumf128": true,
  "math::libm_math::fminimum_fmaximum::fminimumf16": true,
  "math::libm_math::fminimum_fmaximum_num::fmaximum_num": true,
  "math::libm_math::fminimum_fmaximum_num::fmaximum_numf": true,
  "math::libm_math::fminimum_fmaximum_num::fmaximum_numf128": true,
  "math::libm_math::fminimum_fmaximum_num::fmaximum_numf16": true,
  "math::libm_math::fminimum_fmaximum_num::fminimum_num": true,
  "math::libm_math::fminimum_fmaximum_num::fminimum_numf": true,
  "math::libm_math::fminimum_fmaximum_num::fminimum_numf128": true,
  "math::libm_math::fminimum_fmaximum_num::fminimum_numf16": true,
  "math::libm_math::fmod::fmod": true,
  "math::libm_math::fmod::fmodf": true,
  "math::libm_math::fmod::fmodf128": true,
  "math::libm_math::fmod::fmodf16": true,
  "math::libm_math::frexp::frexp": true,
  "math::libm_math::frexpf::frexpf": true,
  "math::libm_math::get_high_word": true,
  "math::libm_math::get_low_word": true,
  "math::libm_math::hypot::hypot": true,
  "math::libm_math::hypot::sq": true,
  "math::libm_math::hypotf::hypotf": true,
  "math::libm_math::ilogb::ilogb": true,
  "math::libm_math::ilogbf::ilogbf": true,
  "math::libm_math::j0::common": true,
  "math::libm_math::j0::j0": true,
  "math::libm_math::j0::pzero": true,
  "math::libm_math::j0::qzero": true,
  "math::libm_math::j0::y0": true,
  "math::libm_math::j0f::common": true,
  "math::libm_math::j0f::j0f": true,
  "math::libm_math::j0f::pzerof": true,
  "math::libm_math::j0f::qzerof": true,
  "math::libm_math::j0f::y0f": true,
  "math::libm_math::j1::common": true,
  "math::libm_math::j1::j1": true,
  "math::libm_math::j1::pone": true,
  "math::libm_math::j1::qone": true,
  "math::libm_math::j1::y1": true,
  "math::libm_math::j1f::common": true,
  "math::libm_math::j1f::j1f": true,
  "math::libm_math::j1f::ponef": true,
  "math::libm_math::j1f::qonef": true,
  "math::libm_math::j1f::y1f": true,
  "math::libm_math::jn::jn": true,
  "math::libm_math::jn::yn": true,
  "math::libm_math::jnf::jnf": true,
  "math::libm_math::jnf::ynf": true,
  "math::libm_math::k_cos::k_cos": true,
  "math::libm_math::k_cosf::k_cosf": true,
  "math::libm_math::k_expo2::k_expo2": true,
  "math::libm_math::k_expo2f::k_expo2f": true,
  "math::libm_math::k_sin::k_sin": true,
  "math::libm_math::k_sinf::k_sinf": true,
  "math::libm_math::k_tan::k_tan": true,
  "math::libm_math::k_tan::zero_low_word": true,
  "math::libm_math::k_tanf::k_tanf": true,
  "math::libm_math::ldexp::ldexp": true,
  "math::libm_math::ldexp::ldexpf": true,
  "math::libm_math::ldexp::ldexpf128": true,
  "math::libm_math::ldexp::ldexpf16": true,
  "math::libm_math::lgamma::lgamma": true,
  "math::libm_math::lgamma_r::lgamma_r": true,
  "math::libm_math::lgamma_r::sin_pi": true,
  "math::libm_math::lgammaf::lgammaf": true,
  "math::libm_math::lgammaf_r::lgammaf_r": true,
  "math::libm_math::lgammaf_r::sin_pi": true,
  "math::libm_math::log10::log10": true,
  "math::libm_math::log10f::log10f": true,
  "math::libm_math::log1p::log1p": true,
  "math::libm_math::log1pf::log1pf": true,
  "math::libm_math::log2::log2": true,
  "math::libm_math::log2f::log2f": true,
  "math::libm_math::log::log": true,
  "math::libm_math::logf::logf": true,
  "math::libm_math::modf::modf": true,
  "math::libm_math::modff::modff": true,
  "math::libm_math::nextafter::nextafter": true,
  "math::libm_math::nextafterf::nextafterf": true,
  "math::libm_math::pow::pow": true,
  "math::libm_math::powf::powf": true,
  "math::libm_math::rem_pio2::rem_pio2": true,
  "math::libm_math::rem_pio2::rem_pio2::medium": true,
  "math::libm_math::rem_pio2_large::rem_pio2_large::floor": true,
  "math::libm_math::rem_pio2f::rem_pio2f": true,
  "math::libm_math::remainder::remainder": true,
  "math::libm_math::remainderf::remainderf": true,
  "math::libm_math::remquo::remquo": true,
  "math::libm_math::remquof::remquof": true,
  "math::libm_math::rint::rint": true,
  "math::libm_math::rint::rintf": true,
  "math::libm_math::rint::rintf128": true,
  "math::libm_math::rint::rintf16": true,
  "math::libm_math::round::round": true,
  "math::libm_math::round::roundf": true,
  "math::libm_math::round::roundf128": true,
  "math::libm_math::round::roundf16": true,
  "math::libm_math::roundeven::roundeven": true,
  "math::libm_math::roundeven::roundevenf": true,
  "math::libm_math::roundeven::roundevenf128": true,
  "math::libm_math::roundeven::roundevenf16": true,
  "math::libm_math::scalbn::scalbn": true,
  "math::libm_math::scalbn::scalbnf": true,
  "math::libm_math::scalbn::scalbnf128": true,
  "math::libm_math::scalbn::scalbnf16": true,
  "math::libm_math::sin::sin": true,
  "math::libm_math::sincos::sincos": true,
  "math::libm_math::sincosf::sincosf": true,
  "math::libm_math::sinf::sinf": true,
  "math::libm_math::sinh::sinh": true,
  "math::libm_math::sinhf::sinhf": true,
  "math::libm_math::sqrt::sqrt": true,
  "math::libm_math::sqrt::sqrtf": true,
  "math::libm_math::sqrt::sqrtf128": true,
  "math::libm_math::sqrt::sqrtf16": true,
  "math::libm_math::support::big::<impl math::libm_math::support::int_traits::HInt for i128>::widen": true,
  "math::libm_math::support::big::<impl math::libm_math::support::int_traits::HInt for i128>::widen_hi": true,
  "math::libm_math::support::big::<impl math::libm_math::support::int_traits::HInt for i128>::widen_mul": true,
  "math::libm_math::support::big::<impl math::libm_math::support::int_traits::HInt for i128>::zero_widen": true,
  "math::libm_math::support::big::<impl math::libm_math::support::int_traits::HInt for i128>::zero_widen_mul": true,
  "math::libm_math::support::big::<impl math::libm_math::support::int_traits::HInt for u128>::widen": true,
  "math::libm_math::support::big::<impl math::libm_math::support::int_traits::HInt for u128>::widen_hi": true,
  "math::libm_math::support::big::<impl math::libm_math::support::int_traits::HInt for u128>::widen_mul": true,
  "math::libm_math::support::big::<impl math::libm_math::support::int_traits::HInt for u128>::zero_widen": true,
  "math::libm_math::support::big::<impl math::libm_math::support::int_traits::HInt for u128>::zero_widen_mul": true,
  "math::libm_math::support::big::u256::signed": true,
  "math::libm_math::support::cold_path": true,
  "math::libm_math::support::env::Status::inexact": true,
  "math::libm_math::support::env::Status::overflow": true,
  "math::libm_math::support::env::Status::set_flag": true,
  "math::libm_math::support::env::Status::set_inexact": true,
  "math::libm_math::support::env::Status::set_underflow": true,
  "math::libm_math::support::env::Status::underflow": true,
  "math::libm_math::support::env::Status::with": true,
  "math::libm_math::support::feature_detect::Flags::bits": true,
  "math::libm_math::support::feature_detect::Flags::contains": true,
  "math::libm_math::support::feature_detect::Flags::empty": true,
  "math::libm_math::support::feature_detect::Flags::from_bits": true,
  "math::libm_math::support::feature_detect::Flags::insert": true,
  "math::libm_math::support::feature_detect::Flags::test_nth": true,
  "math::libm_math::support::float_traits::f32_from_bits": true,
  "math::libm_math::support::float_traits::f32_to_bits": true,
  "math::libm_math::support::float_traits::f64_from_bits": true,
  "math::libm_math::support::float_traits::f64_to_bits": true,
  "math::libm_math::support::hex_float::dec_digit": true,
  "math::libm_math::support::hex_float::hex_digit": true,
  "math::libm_math::support::hex_float::shr2_round": true,
  "math::libm_math::support::hex_float::shr_odd_rounding": true,
  "math::libm_math::support::hex_float::u128_ilog2": true,
  "math::libm_math::tan::tan": true,
  "math::libm_math::tanf::tanf": true,
  "math::libm_math::tanh::tanh": true,
  "math::libm_math::tanhf::tanhf": true,
  "math::libm_math::tgamma::s": true,
  "math::libm_math::tgamma::sinpi": true,
  "math::libm_math::tgamma::tgamma": true,
  "math::libm_math::tgammaf::tgammaf": true,
  "math::libm_math::trunc::trunc": true,
  "math::libm_math::trunc::truncf": true,
  "math::libm_math::trunc::truncf128": true,
  "math::libm_math::trunc::truncf16": true,
  "math::libm_math::with_set_high_word": true,
  "math::libm_math::with_set_low_word": true,
  "mem::transmutability::Assume::and": true,
  "mem::transmutability::Assume::but_not": true,
  "memmem::FinderBuilder::new": true,
  "memmem::FinderBuilder::prefilter": true,
  "memmem::searcher::PrefilterConfig::is_none": true,
  "memmem::searcher::PrefilterState::is_effective": true,
  "memmem::searcher::PrefilterState::is_inert": true,
  "memmem::searcher::PrefilterState::new": true,
  "memmem::searcher::PrefilterState::skips": true,
  "memmem::searcher::PrefilterState::update": true,
  "net::ip_addr::<impl convert::From<net::ip_addr::Ipv4Addr> for u32>::from": true,
  "net::ip_addr::<impl convert::From<net::ip_addr::Ipv6Addr> for u128>::from": true,
  "net::ip_addr::IpAddr::as_octets": true,
  "net::ip_addr::IpAddr::is_benchmarking": true,
  "net::ip_addr::IpAddr::is_documentation": true,
  "net::ip_addr::IpAddr::is_global": true,
  "net::ip_addr::IpAddr::is_ipv4": true,
  "net::ip_addr::IpAddr::is_ipv6": true,
  "net::ip_addr::IpAddr::is_loopback": true,
  "net::ip_addr::IpAddr::is_multicast": true,
  "net::ip_addr::IpAddr::is_unspecified": true,
  "net::ip_addr::IpAddr::to_canonical": true,
  "net::ip_addr::Ipv4Addr::as_octets": true,
  "net::ip_addr::Ipv4Addr::from_bits": true,
  "net::ip_addr::Ipv4Addr::from_octets": true,
  "net::ip_addr::Ipv4Addr::is_benchmarking": true,
  "net::ip_addr::Ipv4Addr::is_broadcast": true,
  "net::ip_addr::Ipv4Addr::is_documentation": true,
  "net::ip_addr::Ipv4Addr::is_global": true,
  "net::ip_addr::Ipv4Addr::is_link_local": true,
  "net::ip_addr::Ipv4Addr::is_loopback": true,
  "net::ip_addr::Ipv4Addr::is_multicast": true,
  "net::ip_addr::Ipv4Addr::is_private": true,
  "net::ip_addr::Ipv4Addr::is_reserved": true,
  "net::ip_addr::Ipv4Addr::is_shared": true,
  "net::ip_addr::Ipv4Addr::is_unspecified": true,
  "net::ip_addr::Ipv4Addr::new": true,
  "net::ip_addr::Ipv4Addr::octets": true,
  "net::ip_addr::Ipv4Addr::to_bits": true,
  "net::ip_addr::Ipv4Addr::to_ipv6_compatible": true,
  "net::ip_addr::Ipv4Addr::to_ipv6_mapped": true,
  "net::ip_addr::Ipv6Addr::as_octets": true,
  "net::ip_addr::Ipv6Addr::from_bits": true,
  "net::ip_addr::Ipv6Addr::from_octets": true,
  "net::ip_addr::Ipv6Addr::from_segments": true,
  "net::ip_addr::Ipv6Addr::is_benchmarking": true,
  "net::ip_addr::Ipv6Addr::is_documentation": true,
  "net::ip_addr::Ipv6Addr::is_global": true,
  "net::ip_addr::Ipv6Addr::is_ipv4_mapped": true,
  "net::ip_addr::Ipv6Addr::is_loopback": true,
  "net::ip_addr::Ipv6Addr::is_multicast": true,
  "net::ip_addr::Ipv6Addr::is_unicast": true,
  "net::ip_addr::Ipv6Addr::is_unicast_global": true,
  "net::ip_addr::Ipv6Addr::is_unicast_link_local": true,
  "net::ip_addr::Ipv6Addr::is_unique_local": true,
  "net::ip_addr::Ipv6Addr::is_unspecified": true,
  "net::ip_addr::Ipv6Addr::multicast_scope": true,
  "net::ip_addr::Ipv6Addr::new": true,
  "net::ip_addr::Ipv6Addr::octets": true,
  "net::ip_addr::Ipv6Addr::segments": true,
  "net::ip_addr::Ipv6Addr::to_bits": true,
  "net::ip_addr::Ipv6Addr::to_canonical": true,
  "net::ip_addr::Ipv6Addr::to_ipv4": true,
  "net::ip_addr::Ipv6Addr::to_ipv4_mapped": true,
  "net::socket_addr::SocketAddr::ip": true,
  "net::socket_addr::SocketAddr::is_ipv4": true,
  "net::socket_addr::SocketAddr::is_ipv6": true,
  "net::socket_addr::SocketAddr::new": true,
  "net::socket_addr::SocketAddr::port": true,
  "net::socket_addr::SocketAddr::set_ip": true,
  "net::socket_addr::SocketAddr::set_port": true,
  "net::socket_addr::SocketAddrV4::ip": true,
  "net::socket_addr::SocketAddrV4::new": true,
  "net::socket_addr::SocketAddrV4::port": true,
  "net::socket_addr::SocketAddrV4::set_ip": true,
  "net::socket_addr::SocketAddrV4::set_port": true,
  "net::socket_addr::SocketAddrV6::flowinfo": true,
  "net::socket_addr::SocketAddrV6::ip": true,
  "net::socket_addr::SocketAddrV6::new": true,
  "net::socket_addr::SocketAddrV6::port": true,
  "net::socket_addr::SocketAddrV6::scope_id": true,
  "net::socket_addr::SocketAddrV6::set_flowinfo": true,
  "net::socket_addr::SocketAddrV6::set_ip": true,
  "net::socket_addr::SocketAddrV6::set_port": true,
  "net::socket_addr::SocketAddrV6::set_scope_id": true,
  "net::tcp::TcpListener::accept": true,
  "net::tcp::TcpListener::incoming": true,
  "net::tcp::TcpListener::into_incoming": true,
  "net::tcp::TcpListener::local_addr": true,
  "net::tcp::TcpListener::only_v6": true,
  "net::tcp::TcpListener::set_nonblocking": true,
  "net::tcp::TcpListener::set_only_v6": true,
  "net::tcp::TcpListener::set_ttl": true,
  "net::tcp::TcpListener::take_error": true,
  "net::tcp::TcpListener::try_clone": true,
  "net::tcp::TcpListener::ttl": true,
  "net::tcp::TcpStream::connect_timeout": true,
  "net::tcp::TcpStream::linger": true,
  "net::tcp::TcpStream::local_addr": true,
  "net::tcp::TcpStream::nodelay": true,
  "net::tcp::TcpStream::peer_addr": true,
  "net::tcp::TcpStream::read_timeout": true,
  "net::tcp::TcpStream::set_linger": true,
  "net::tcp::TcpStream::set_nodelay": true,
  "net::tcp::TcpStream::set_nonblocking": true,
  "net::tcp::TcpStream::set_read_timeout": true,
  "net::tcp::TcpStream::set_ttl": true,
  "net::tcp::TcpStream::set_write_timeout": true,
  "net::tcp::TcpStream::shutdown": true,
  "net::tcp::TcpStream::take_error": true,
  "net::tcp::TcpStream::try_clone": true,
  "net::tcp::TcpStream::ttl": true,
  "net::tcp::TcpStream::write_timeout": true,
  "net::udp::UdpSocket::broadcast": true,
  "net::udp::UdpSocket::join_multicast_v4": true,
  "net::udp::UdpSocket::join_multicast_v6": true,
  "net::udp::UdpSocket::leave_multicast_v4": true,
  "net::udp::UdpSocket::leave_multicast_v6": true,
  "net::udp::UdpSocket::local_addr": true,
  "net::udp::UdpSocket::multicast_loop_v4": true,
  "net::udp::UdpSocket::multicast_loop_v6": true,
  "net::udp::UdpSocket::multicast_ttl_v4": true,
  "net::udp::UdpSocket::peer_addr": true,
  "net::udp::UdpSocket::read_timeout": true,
  "net::udp::UdpSocket::set_broadcast": true,
  "net::udp::UdpSocket::set_multicast_loop_v4": true,
  "net::udp::UdpSocket::set_multicast_loop_v6": true,
  "net::udp::UdpSocket::set_multicast_ttl_v4": true,
  "net::udp::UdpSocket::set_nonblocking": true,
  "net::udp::UdpSocket::set_read_timeout": true,
  "net::udp::UdpSocket::set_ttl": true,
  "net::udp::UdpSocket::set_write_timeout": true,
  "net::udp::UdpSocket::take_error": true,
  "net::udp::UdpSocket::try_clone": true,
  "net::udp::UdpSocket::ttl": true,
  "net::udp::UdpSocket::write_timeout": true,
  "num::<impl i128>::abs": true,
  "num::<impl i128>::abs_diff": true,
  "num::<impl i128>::borrowing_sub": true,
  "num::<impl i128>::carrying_add": true,
  "num::<impl i128>::carrying_mul": true,
  "num::<impl i128>::carrying_mul_add": true,
  "num::<impl i128>::cast_unsigned": true,
  "num::<impl i128>::checked_abs": true,
  "num::<impl i128>::checked_add": true,
  "num::<impl i128>::checked_add_unsigned": true,
  "num::<impl i128>::checked_div": true,
  "num::<impl i128>::checked_div_euclid": true,
  "num::<impl i128>::checked_exact_div": true,
  "num::<impl i128>::checked_ilog": true,
  "num::<impl i128>::checked_ilog10": true,
  "num::<impl i128>::checked_ilog2": true,
  "num::<impl i128>::checked_isqrt": true,
  "num::<impl i128>::checked_mul": true,
  "num::<impl i128>::checked_neg": true,
  "num::<impl i128>::checked_next_multiple_of": true,
  "num::<impl i128>::checked_pow": true,
  "num::<impl i128>::checked_rem": true,
  "num::<impl i128>::checked_rem_euclid": true,
  "num::<impl i128>::checked_shl": true,
  "num::<impl i128>::checked_shr": true,
  "num::<impl i128>::checked_sub": true,
  "num::<impl i128>::checked_sub_unsigned": true,
  "num::<impl i128>::count_ones": true,
  "num::<impl i128>::count_zeros": true,
  "num::<impl i128>::div_ceil": true,
  "num::<impl i128>::div_euclid": true,
  "num::<impl i128>::div_floor": true,
  "num::<impl i128>::exact_div": true,
  "num::<impl i128>::exact_shl": true,
  "num::<impl i128>::exact_shr": true,
  "num::<impl i128>::from_be": true,
  "num::<impl i128>::from_be_bytes": true,
  "num::<impl i128>::from_le": true,
  "num::<impl i128>::from_le_bytes": true,
  "num::<impl i128>::from_ne_bytes": true,
  "num::<impl i128>::highest_one": true,
  "num::<impl i128>::ilog": true,
  "num::<impl i128>::ilog10": true,
  "num::<impl i128>::ilog2": true,
  "num::<impl i128>::is_negative": true,
  "num::<impl i128>::is_positive": true,
  "num::<impl i128>::isolate_highest_one": true,
  "num::<impl i128>::isolate_lowest_one": true,
  "num::<impl i128>::isqrt": true,
  "num::<impl i128>::leading_ones": true,
  "num::<impl i128>::leading_zeros": true,
  "num::<impl i128>::lowest_one": true,
  "num::<impl i128>::max_value": true,
  "num::<impl i128>::midpoint": true,
  "num::<impl i128>::min_value": true,
  "num::<impl i128>::next_multiple_of": true,
  "num::<impl i128>::overflowing_abs": true,
  "num::<impl i128>::overflowing_add": true,
  "num::<impl i128>::overflowing_add_unsigned": true,
  "num::<impl i128>::overflowing_div": true,
  "num::<impl i128>::overflowing_div_euclid": true,
  "num::<impl i128>::overflowing_mul": true,
  "num::<impl i128>::overflowing_neg": true,
  "num::<impl i128>::overflowing_pow": true,
  "num::<impl i128>::overflowing_rem": true,
  "num::<impl i128>::overflowing_rem_euclid": true,
  "num::<impl i128>::overflowing_shl": true,
  "num::<impl i128>::overflowing_shr": true,
  "num::<impl i128>::overflowing_sub": true,
  "num::<impl i128>::overflowing_sub_unsigned": true,
  "num::<impl i128>::pow": true,
  "num::<impl i128>::rem_euclid": true,
  "num::<impl i128>::reverse_bits": true,
  "num::<impl i128>::rotate_left": true,
  "num::<impl i128>::rotate_right": true,
  "num::<impl i128>::saturating_abs": true,
  "num::<impl i128>::saturating_add": true,
  "num::<impl i128>::saturating_add_unsigned": true,
  "num::<impl i128>::saturating_div": true,
  "num::<impl i128>::saturating_mul": true,
  "num::<impl i128>::saturating_neg": true,
  "num::<impl i128>::saturating_pow": true,
  "num::<impl i128>::saturating_sub": true,
  "num::<impl i128>::saturating_sub_unsigned": true,
  "num::<impl i128>::signum": true,
  "num::<impl i128>::strict_abs": true,
  "num::<impl i128>::strict_add": true,
  "num::<impl i128>::strict_add_unsigned": true,
  "num::<impl i128>::strict_div": true,
  "num::<impl i128>::strict_div_euclid": true,
  "num::<impl i128>::strict_mul": true,
  "num::<impl i128>::strict_neg": true,
  "num::<impl i128>::strict_pow": true,
  "num::<impl i128>::strict_rem": true,
  "num::<impl i128>::strict_rem_euclid": true,
  "num::<impl i128>::strict_shl": true,
  "num::<impl i128>::strict_shr": true,
  "num::<impl i128>::strict_sub": true,
  "num::<impl i128>::strict_sub_unsigned": true,
  "num::<impl i128>::swap_bytes": true,
  "num::<impl i128>::to_be": true,
  "num::<impl i128>::to_be_bytes": true,
  "num::<impl i128>::to_le": true,
  "num::<impl i128>::to_le_bytes": true,
  "num::<impl i128>::to_ne_bytes": true,
  "num::<impl i128>::trailing_ones": true,
  "num::<impl i128>::trailing_zeros": true,
  "num::<impl i128>::unbounded_shl": true,
  "num::<impl i128>::unbounded_shr": true,
  "num::<impl i128>::unchecked_add::precondition_check": true,
  "num::<impl i128>::unchecked_add::{closure#0}::{closure#1}::{closure#0}::precondition_check": true,
  "num::<impl i128>::unchecked_add::{closure#2}::{closure#0}::precondition_check": true,
  "num::<impl i128>::unchecked_add::{closure#3}::{closure#0}::precondition_check": true,
  "num::<impl i128>::unchecked_exact_div": true,
  "num::<impl i128>::unchecked_exact_div::precondition_check": true,
  "num::<impl i128>::unchecked_exact_shl": true,
  "num::<impl i128>::unchecked_exact_shl::precondition_check": true,
  "num::<impl i128>::unchecked_exact_shr": true,
  "num::<impl i128>::unchecked_exact_shr::precondition_check": true,
  "num::<impl i128>::unchecked_mul::precondition_check": true,
  "num::<impl i128>::unchecked_mul::{closure#0}::{closure#1}::{closure#0}::precondition_check": true,
  "num::<impl i128>::unchecked_mul::{closure#2}::{closure#0}::precondition_check": true,
  "num::<impl i128>::unchecked_mul::{closure#3}::{closure#0}::precondition_check": true,
  "num::<impl i128>::unchecked_neg::precondition_check": true,
  "num::<impl i128>::unchecked_neg::{closure#0}::{closure#1}::{closure#1}::precondition_check": true,
  "num::<impl i128>::unchecked_neg::{closure#2}::{closure#1}::precondition_check": true,
  "num::<impl i128>::unchecked_neg::{closure#3}::{closure#0}::precondition_check": true,
  "num::<impl i128>::unchecked_shl::precondition_check": true,
  "num::<impl i128>::unchecked_shl::{closure#0}::{closure#1}::{closure#0}::precondition_check": true,
  "num::<impl i128>::unchecked_shl::{closure#2}::{closure#0}::precondition_check": true,
  "num::<impl i128>::unchecked_shl::{closure#3}::{closure#0}::precondition_check": true,
  "num::<impl i128>::unchecked_shr::precondition_check": true,
  "num::<impl i128>::unchecked_shr::{closure#0}::{closure#1}::{closure#0}::precondition_check": true,
  "num::<impl i128>::unchecked_shr::{closure#2}::{closure#0}::precondition_check": true,
  "num::<impl i128>::unchecked_shr::{closure#3}::{closure#0}::precondition_check": true,
  "num::<impl i128>::unchecked_sub::precondition_check": true,
  "num::<impl i128>::unchecked_sub::{closure#0}::{closure#1}::{closure#0}::precondition_check": true,
  "num::<impl i128>::unchecked_sub::{closure#2}::{closure#0}::precondition_check": true,
  "num::<impl i128>::unchecked_sub::{closure#3}::{closure#0}::precondition_check": true,
  "num::<impl i128>::unsigned_abs": true,
  "num::<impl i128>::widening_mul": true,
  "num::<impl i128>::wrapping_abs": true,
  "num::<impl i128>::wrapping_add": true,
  "num::<impl i128>::wrapping_add_unsigned": true,
  "num::<impl i128>::wrapping_div": true,
  "num::<impl i128>::wrapping_div_euclid": true,
  "num::<impl i128>::wrapping_mul": true,
  "num::<impl i128>::wrapping_neg": true,
  "num::<impl i128>::wrapping_pow": true,
  "num::<impl i128>::wrapping_rem": true,
  "num::<impl i128>::wrapping_rem_euclid": true,
  "num::<impl i128>::wrapping_sub": true,
  "num::<impl i128>::wrapping_sub_unsigned": true,
  "num::<impl i16>::abs": true,
  "num::<impl i16>::abs_diff": true,
  "num::<impl i16>::borrowing_sub": true,
  "num::<impl i16>::carrying_add": true,
  "num::<impl i16>::carrying_mul": true,
  "num::<impl i16>::carrying_mul_add": true,
  "num::<impl i16>::cast_unsigned": true,
  "num::<impl i16>::checked_abs": true,
  "num::<impl i16>::checked_add": true,
  "num::<impl i16>::checked_add_unsigned": true,
  "num::<impl i16>::checked_div": true,
  "num::<impl i16>::checked_div_euclid": true,
  "num::<impl i16>::checked_exact_div": true,
  "num::<impl i16>::checked_ilog": true,
  "num::<impl i16>::checked_ilog10": true,
  "num::<impl i16>::checked_ilog2": true,
  "num::<impl i16>::checked_isqrt": true,
  "num::<impl i16>::checked_mul": true,
  "num::<impl i16>::checked_neg": true,
  "num::<impl i16>::checked_next_multiple_of": true,
  "num::<impl i16>::checked_pow": true,
  "num::<impl i16>::checked_rem": true,
  "num::<impl i16>::checked_rem_euclid": true,
  "num::<impl i16>::checked_shl": true,
  "num::<impl i16>::checked_shr": true,
  "num::<impl i16>::checked_sub": true,
  "num::<impl i16>::checked_sub_unsigned": true,
  "num::<impl i16>::count_ones": true,
  "num::<impl i16>::count_zeros": true,
  "num::<impl i16>::div_ceil": true,
  "num::<impl i16>::div_euclid": true,
  "num::<impl i16>::div_floor": true,
  "num::<impl i16>::exact_div": true,
  "num::<impl i16>::exact_shl": true,
  "num::<impl i16>::exact_shr": true,
  "num::<impl i16>::from_be": true,
  "num::<impl i16>::from_be_bytes": true,
  "num::<impl i16>::from_le": true,
  "num::<impl i16>::from_le_bytes": true,
  "num::<impl i16>::from_ne_bytes": true,
  "num::<impl i16>::highest_one": true,
  "num::<impl i16>::ilog": true,
  "num::<impl i16>::ilog10": true,
  "num::<impl i16>::ilog2": true,
  "num::<impl i16>::is_negative": true,
  "num::<impl i16>::is_positive": true,
  "num::<impl i16>::isolate_highest_one": true,
  "num::<impl i16>::isolate_lowest_one": true,
  "num::<impl i16>::isqrt": true,
  "num::<impl i16>::leading_ones": true,
  "num::<impl i16>::leading_zeros": true,
  "num::<impl i16>::lowest_one": true,
  "num::<impl i16>::max_value": true,
  "num::<impl i16>::midpoint": true,
  "num::<impl i16>::min_value": true,
  "num::<impl i16>::next_multiple_of": true,
  "num::<impl i16>::overflowing_abs": true,
  "num::<impl i16>::overflowing_add": true,
  "num::<impl i16>::overflowing_add_unsigned": true,
  "num::<impl i16>::overflowing_div": true,
  "num::<impl i16>::overflowing_div_euclid": true,
  "num::<impl i16>::overflowing_mul": true,
  "num::<impl i16>::overflowing_neg": true,
  "num::<impl i16>::overflowing_pow": true,
  "num::<impl i16>::overflowing_rem": true,
  "num::<impl i16>::overflowing_rem_euclid": true,
  "num::<impl i16>::overflowing_shl": true,
  "num::<impl i16>::overflowing_shr": true,
  "num::<impl i16>::overflowing_sub": true,
  "num::<impl i16>::overflowing_sub_unsigned": true,
  "num::<impl i16>::pow": true,
  "num::<impl i16>::rem_euclid": true,
  "num::<impl i16>::reverse_bits": true,
  "num::<impl i16>::rotate_left": true,
  "num::<impl i16>::rotate_right": true,
  "num::<impl i16>::saturating_abs": true,
  "num::<impl i16>::saturating_add": true,
  "num::<impl i16>::saturating_add_unsigned": true,
  "num::<impl i16>::saturating_div": true,
  "num::<impl i16>::saturating_mul": true,
  "num::<impl i16>::saturating_neg": true,
  "num::<impl i16>::saturating_pow": true,
  "num::<impl i16>::saturating_sub": true,
  "num::<impl i16>::saturating_sub_unsigned": true,
  "num::<impl i16>::signum": true,
  "num::<impl i16>::strict_abs": true,
  "num::<impl i16>::strict_add": true,
  "num::<impl i16>::strict_add_unsigned": true,
  "num::<impl i16>::strict_div": true,
  "num::<impl i16>::strict_div_euclid": true,
  "num::<impl i16>::strict_mul": true,
  "num::<impl i16>::strict_neg": true,
  "num::<impl i16>::strict_pow": true,
  "num::<impl i16>::strict_rem": true,
  "num::<impl i16>::strict_rem_euclid": true,
  "num::<impl i16>::strict_shl": true,
  "num::<impl i16>::strict_shr": true,
  "num::<impl i16>::strict_sub": true,
  "num::<impl i16>::strict_sub_unsigned": true,
  "num::<impl i16>::swap_bytes": true,
  "num::<impl i16>::to_be": true,
  "num::<impl i16>::to_be_bytes": true,
  "num::<impl i16>::to_le": true,
  "num::<impl i16>::to_le_bytes": true,
  "num::<impl i16>::to_ne_bytes": true,
  "num::<impl i16>::trailing_ones": true,
  "num::<impl i16>::trailing_zeros": true,
  "num::<impl i16>::unbounded_shl": true,
  "num::<impl i16>::unbounded_shr": true,
  "num::<impl i16>::unchecked_add::precondition_check": true,
  "num::<impl i16>::unchecked_add::{closure#0}::{closure#1}::{closure#0}::precondition_check": true,
  "num::<impl i16>::unchecked_add::{closure#2}::{closure#0}::precondition_check": true,
  "num::<impl i16>::unchecked_add::{closure#3}::{closure#0}::precondition_check": true,
  "num::<impl i16>::unchecked_exact_div": true,
  "num::<impl i16>::unchecked_exact_div::precondition_check": true,
  "num::<impl i16>::unchecked_exact_shl": true,
  "num::<impl i16>::unchecked_exact_shl::precondition_check": true,
  "num::<impl i16>::unchecked_exact_shr": true,
  "num::<impl i16>::unchecked_exact_shr::precondition_check": true,
  "num::<impl i16>::unchecked_mul::precondition_check": true,
  "num::<impl i16>::unchecked_mul::{closure#0}::{closure#1}::{closure#0}::precondition_check": true,
  "num::<impl i16>::unchecked_mul::{closure#2}::{closure#0}::precondition_check": true,
  "num::<impl i16>::unchecked_mul::{closure#3}::{closure#0}::precondition_check": true,
  "num::<impl i16>::unchecked_neg::precondition_check": true,
  "num::<impl i16>::unchecked_neg::{closure#0}::{closure#1}::{closure#1}::precondition_check": true,
  "num::<impl i16>::unchecked_neg::{closure#2}::{closure#1}::precondition_check": true,
  "num::<impl i16>::unchecked_neg::{closure#3}::{closure#0}::precondition_check": true,
  "num::<impl i16>::unchecked_shl::precondition_check": true,
  "num::<impl i16>::unchecked_shl::{closure#0}::{closure#1}::{closure#0}::precondition_check": true,
  "num::<impl i16>::unchecked_shl::{closure#2}::{closure#0}::precondition_check": true,
  "num::<impl i16>::unchecked_shl::{closure#3}::{closure#0}::precondition_check": true,
  "num::<impl i16>::unchecked_shr::precondition_check": true,
  "num::<impl i16>::unchecked_shr::{closure#0}::{closure#1}::{closure#0}::precondition_check": true,
  "num::<impl i16>::unchecked_shr::{closure#2}::{closure#0}::precondition_check": true,
  "num::<impl i16>::unchecked_shr::{closure#3}::{closure#0}::precondition_check": true,
  "num::<impl i16>::unchecked_sub::precondition_check": true,
  "num::<impl i16>::unchecked_sub::{closure#0}::{closure#1}::{closure#0}::precondition_check": true,
  "num::<impl i16>::unchecked_sub::{closure#2}::{closure#0}::precondition_check": true,
  "num::<impl i16>::unchecked_sub::{closure#3}::{closure#0}::precondition_check": true,
  "num::<impl i16>::unsigned_abs": true,
  "num::<impl i16>::widening_mul": true,
  "num::<impl i16>::wrapping_abs": true,
  "num::<impl i16>::wrapping_add": true,
  "num::<impl i16>::wrapping_add_unsigned": true,
  "num::<impl i16>::wrapping_div": true,
  "num::<impl i16>::wrapping_div_euclid": true,
  "num::<impl i16>::wrapping_mul": true,
  "num::<impl i16>::wrapping_neg": true,
  "num::<impl i16>::wrapping_pow": true,
  "num::<impl i16>::wrapping_rem": true,
  "num::<impl i16>::wrapping_rem_euclid": true,
  "num::<impl i16>::wrapping_sub": true,
  "num::<impl i16>::wrapping_sub_unsigned": true,
  "num::<impl i32>::abs": true,
  "num::<impl i32>::abs_diff": true,
  "num::<impl i32>::borrowing_sub": true,
  "num::<impl i32>::carrying_add": true,
  "num::<impl i32>::carrying_mul": true,
  "num::<impl i32>::carrying_mul_add": true,
  "num::<impl i32>::cast_unsigned": true,
  "num::<impl i32>::checked_abs": true,
  "num::<impl i32>::checked_add": true,
  "num::<impl i32>::checked_add_unsigned": true,
  "num::<impl i32>::checked_div": true,
  "num::<impl i32>::checked_div_euclid": true,
  "num::<impl i32>::checked_exact_div": true,
  "num::<impl i32>::checked_ilog": true,
  "num::<impl i32>::checked_ilog10": true,
  "num::<impl i32>::checked_ilog2": true,
  "num::<impl i32>::checked_isqrt": true,
  "num::<impl i32>::checked_mul": true,
  "num::<impl i32>::checked_neg": true,
  "num::<impl i32>::checked_next_multiple_of": true,
  "num::<impl i32>::checked_pow": true,
  "num::<impl i32>::checked_rem": true,
  "num::<impl i32>::checked_rem_euclid": true,
  "num::<impl i32>::checked_shl": true,
  "num::<impl i32>::checked_shr": true,
  "num::<impl i32>::checked_sub": true,
  "num::<impl i32>::checked_sub_unsigned": true,
  "num::<impl i32>::count_ones": true,
  "num::<impl i32>::count_zeros": true,
  "num::<impl i32>::div_ceil": true,
  "num::<impl i32>::div_euclid": true,
  "num::<impl i32>::div_floor": true,
  "num::<impl i32>::exact_div": true,
  "num::<impl i32>::exact_shl": true,
  "num::<impl i32>::exact_shr": true,
  "num::<impl i32>::from_be": true,
  "num::<impl i32>::from_be_bytes": true,
  "num::<impl i32>::from_le": true,
  "num::<impl i32>::from_le_bytes": true,
  "num::<impl i32>::from_ne_bytes": true,
  "num::<impl i32>::highest_one": true,
  "num::<impl i32>::ilog": true,
  "num::<impl i32>::ilog10": true,
  "num::<impl i32>::ilog2": true,
  "num::<impl i32>::is_negative": true,
  "num::<impl i32>::is_positive": true,
  "num::<impl i32>::isolate_highest_one": true,
  "num::<impl i32>::isolate_lowest_one": true,
  "num::<impl i32>::isqrt": true,
  "num::<impl i32>::leading_ones": true,
  "num::<impl i32>::leading_zeros": true,
  "num::<impl i32>::lowest_one": true,
  "num::<impl i32>::max_value": true,
  "num::<impl i32>::midpoint": true,
  "num::<impl i32>::min_value": true,
  "num::<impl i32>::next_multiple_of": true,
  "num::<impl i32>::overflowing_abs": true,
  "num::<impl i32>::overflowing_add": true,
  "num::<impl i32>::overflowing_add_unsigned": true,
  "num::<impl i32>::overflowing_div": true,
  "num::<impl i32>::overflowing_div_euclid": true,
  "num::<impl i32>::overflowing_mul": true,
  "num::<impl i32>::overflowing_neg": true,
  "num::<impl i32>::overflowing_pow": true,
  "num::<impl i32>::overflowing_rem": true,
  "num::<impl i32>::overflowing_rem_euclid": true,
  "num::<impl i32>::overflowing_shl": true,
  "num::<impl i32>::overflowing_shr": true,
  "num::<impl i32>::overflowing_sub": true,
  "num::<impl i32>::overflowing_sub_unsigned": true,
  "num::<impl i32>::pow": true,
  "num::<impl i32>::rem_euclid": true,
  "num::<impl i32>::reverse_bits": true,
  "num::<impl i32>::rotate_left": true,
  "num::<impl i32>::rotate_right": true,
  "num::<impl i32>::saturating_abs": true,
  "num::<impl i32>::saturating_add": true,
  "num::<impl i32>::saturating_add_unsigned": true,
  "num::<impl i32>::saturating_div": true,
  "num::<impl i32>::saturating_mul": true,
  "num::<impl i32>::saturating_neg": true,
  "num::<impl i32>::saturating_pow": true,
  "num::<impl i32>::saturating_sub": true,
  "num::<impl i32>::saturating_sub_unsigned": true,
  "num::<impl i32>::signum": true,
  "num::<impl i32>::strict_abs": true,
  "num::<impl i32>::strict_add": true,
  "num::<impl i32>::strict_add_unsigned": true,
  "num::<impl i32>::strict_div": true,
  "num::<impl i32>::strict_div_euclid": true,
  "num::<impl i32>::strict_mul": true,
  "num::<impl i32>::strict_neg": true,
  "num::<impl i32>::strict_pow": true,
  "num::<impl i32>::strict_rem": true,
  "num::<impl i32>::strict_rem_euclid": true,
  "num::<impl i32>::strict_shl": true,
  "num::<impl i32>::strict_shr": true,
  "num::<impl i32>::strict_sub": true,
  "num::<impl i32>::strict_sub_unsigned": true,
  "num::<impl i32>::swap_bytes": true,
  "num::<impl i32>::to_be": true,
  "num::<impl i32>::to_be_bytes": true,
  "num::<impl i32>::to_le": true,
  "num::<impl i32>::to_le_bytes": true,
  "num::<impl i32>::to_ne_bytes": true,
  "num::<impl i32>::trailing_ones": true,
  "num::<impl i32>::trailing_zeros": true,
  "num::<impl i32>::unbounded_shl": true,
  "num::<impl i32>::unbounded_shr": true,
  "num::<impl i32>::unchecked_add::precondition_check": true,
  "num::<impl i32>::unchecked_add::{closure#0}::{closure#1}::{closure#0}::precondition_check": true,
  "num::<impl i32>::unchecked_add::{closure#2}::{closure#0}::precondition_check": true,
  "num::<impl i32>::unchecked_add::{closure#3}::{closure#0}::precondition_check": true,
  "num::<impl i32>::unchecked_exact_div": true,
  "num::<impl i32>::unchecked_exact_div::precondition_check": true,
  "num::<impl i32>::unchecked_exact_shl": true,
  "num::<impl i32>::unchecked_exact_shl::precondition_check": true,
  "num::<impl i32>::unchecked_exact_shr": true,
  "num::<impl i32>::unchecked_exact_shr::precondition_check": true,
  "num::<impl i32>::unchecked_mul::precondition_check": true,
  "num::<impl i32>::unchecked_mul::{closure#0}::{closure#1}::{closure#0}::precondition_check": true,
  "num::<impl i32>::unchecked_mul::{closure#2}::{closure#0}::precondition_check": true,
  "num::<impl i32>::unchecked_mul::{closure#3}::{closure#0}::precondition_check": true,
  "num::<impl i32>::unchecked_neg::precondition_check": true,
  "num::<impl i32>::unchecked_neg::{closure#0}::{closure#1}::{closure#1}::precondition_check": true,
  "num::<impl i32>::unchecked_neg::{closure#2}::{closure#1}::precondition_check": true,
  "num::<impl i32>::unchecked_neg::{closure#3}::{closure#0}::precondition_check": true,
  "num::<impl i32>::unchecked_shl::precondition_check": true,
  "num::<impl i32>::unchecked_shl::{closure#0}::{closure#1}::{closure#0}::precondition_check": true,
  "num::<impl i32>::unchecked_shl::{closure#2}::{closure#0}::precondition_check": true,
  "num::<impl i32>::unchecked_shl::{closure#3}::{closure#0}::precondition_check": true,
  "num::<impl i32>::unchecked_shr::precondition_check": true,
  "num::<impl i32>::unchecked_shr::{closure#0}::{closure#1}::{closure#0}::precondition_check": true,
  "num::<impl i32>::unchecked_shr::{closure#2}::{closure#0}::precondition_check": true,
  "num::<impl i32>::unchecked_shr::{closure#3}::{closure#0}::precondition_check": true,
  "num::<impl i32>::unchecked_sub::precondition_check": true,
  "num::<impl i32>::unchecked_sub::{closure#0}::{closure#1}::{closure#0}::precondition_check": true,
  "num::<impl i32>::unchecked_sub::{closure#2}::{closure#0}::precondition_check": true,
  "num::<impl i32>::unchecked_sub::{closure#3}::{closure#0}::precondition_check": true,
  "num::<impl i32>::unsigned_abs": true,
  "num::<impl i32>::widening_mul": true,
  "num::<impl i32>::wrapping_abs": true,
  "num::<impl i32>::wrapping_add": true,
  "num::<impl i32>::wrapping_add_unsigned": true,
  "num::<impl i32>::wrapping_div": true,
  "num::<impl i32>::wrapping_div_euclid": true,
  "num::<impl i32>::wrapping_mul": true,
  "num::<impl i32>::wrapping_neg": true,
  "num::<impl i32>::wrapping_pow": true,
  "num::<impl i32>::wrapping_rem": true,
  "num::<impl i32>::wrapping_rem_euclid": true,
  "num::<impl i32>::wrapping_sub": true,
  "num::<impl i32>::wrapping_sub_unsigned": true,
  "num::<impl i64>::abs": true,
  "num::<impl i64>::abs_diff": true,
  "num::<impl i64>::borrowing_sub": true,
  "num::<impl i64>::carrying_add": true,
  "num::<impl i64>::carrying_mul": true,
  "num::<impl i64>::carrying_mul_add": true,
  "num::<impl i64>::cast_unsigned": true,
  "num::<impl i64>::checked_abs": true,
  "num::<impl i64>::checked_add": true,
  "num::<impl i64>::checked_add_unsigned": true,
  "num::<impl i64>::checked_div": true,
  "num::<impl i64>::checked_div_euclid": true,
  "num::<impl i64>::checked_exact_div": true,
  "num::<impl i64>::checked_ilog": true,
  "num::<impl i64>::checked_ilog10": true,
  "num::<impl i64>::checked_ilog2": true,
  "num::<impl i64>::checked_isqrt": true,
  "num::<impl i64>::checked_mul": true,
  "num::<impl i64>::checked_neg": true,
  "num::<impl i64>::checked_next_multiple_of": true,
  "num::<impl i64>::checked_pow": true,
  "num::<impl i64>::checked_rem": true,
  "num::<impl i64>::checked_rem_euclid": true,
  "num::<impl i64>::checked_shl": true,
  "num::<impl i64>::checked_shr": true,
  "num::<impl i64>::checked_sub": true,
  "num::<impl i64>::checked_sub_unsigned": true,
  "num::<impl i64>::count_ones": true,
  "num::<impl i64>::count_zeros": true,
  "num::<impl i64>::div_ceil": true,
  "num::<impl i64>::div_euclid": true,
  "num::<impl i64>::div_floor": true,
  "num::<impl i64>::exact_div": true,
  "num::<impl i64>::exact_shl": true,
  "num::<impl i64>::exact_shr": true,
  "num::<impl i64>::from_be": true,
  "num::<impl i64>::from_be_bytes": true,
  "num::<impl i64>::from_le": true,
  "num::<impl i64>::from_le_bytes": true,
  "num::<impl i64>::from_ne_bytes": true,
  "num::<impl i64>::highest_one": true,
  "num::<impl i64>::ilog": true,
  "num::<impl i64>::ilog10": true,
  "num::<impl i64>::ilog2": true,
  "num::<impl i64>::is_negative": true,
  "num::<impl i64>::is_positive": true,
  "num::<impl i64>::isolate_highest_one": true,
  "num::<impl i64>::isolate_lowest_one": true,
  "num::<impl i64>::isqrt": true,
  "num::<impl i64>::leading_ones": true,
  "num::<impl i64>::leading_zeros": true,
  "num::<impl i64>::lowest_one": true,
  "num::<impl i64>::max_value": true,
  "num::<impl i64>::midpoint": true,
  "num::<impl i64>::min_value": true,
  "num::<impl i64>::next_multiple_of": true,
  "num::<impl i64>::overflowing_abs": true,
  "num::<impl i64>::overflowing_add": true,
  "num::<impl i64>::overflowing_add_unsigned": true,
  "num::<impl i64>::overflowing_div": true,
  "num::<impl i64>::overflowing_div_euclid": true,
  "num::<impl i64>::overflowing_mul": true,
  "num::<impl i64>::overflowing_neg": true,
  "num::<impl i64>::overflowing_pow": true,
  "num::<impl i64>::overflowing_rem": true,
  "num::<impl i64>::overflowing_rem_euclid": true,
  "num::<impl i64>::overflowing_shl": true,
  "num::<impl i64>::overflowing_shr": true,
  "num::<impl i64>::overflowing_sub": true,
  "num::<impl i64>::overflowing_sub_unsigned": true,
  "num::<impl i64>::pow": true,
  "num::<impl i64>::rem_euclid": true,
  "num::<impl i64>::reverse_bits": true,
  "num::<impl i64>::rotate_left": true,
  "num::<impl i64>::rotate_right": true,
  "num::<impl i64>::saturating_abs": true,
  "num::<impl i64>::saturating_add": true,
  "num::<impl i64>::saturating_add_unsigned": true,
  "num::<impl i64>::saturating_div": true,
  "num::<impl i64>::saturating_mul": true,
  "num::<impl i64>::saturating_neg": true,
  "num::<impl i64>::saturating_pow": true,
  "num::<impl i64>::saturating_sub": true,
  "num::<impl i64>::saturating_sub_unsigned": true,
  "num::<impl i64>::signum": true,
  "num::<impl i64>::strict_abs": true,
  "num::<impl i64>::strict_add": true,
  "num::<impl i64>::strict_add_unsigned": true,
  "num::<impl i64>::strict_div": true,
  "num::<impl i64>::strict_div_euclid": true,
  "num::<impl i64>::strict_mul": true,
  "num::<impl i64>::strict_neg": true,
  "num::<impl i64>::strict_pow": true,
  "num::<impl i64>::strict_rem": true,
  "num::<impl i64>::strict_rem_euclid": true,
  "num::<impl i64>::strict_shl": true,
  "num::<impl i64>::strict_shr": true,
  "num::<impl i64>::strict_sub": true,
  "num::<impl i64>::strict_sub_unsigned": true,
  "num::<impl i64>::swap_bytes": true,
  "num::<impl i64>::to_be": true,
  "num::<impl i64>::to_be_bytes": true,
  "num::<impl i64>::to_le": true,
  "num::<impl i64>::to_le_bytes": true,
  "num::<impl i64>::to_ne_bytes": true,
  "num::<impl i64>::trailing_ones": true,
  "num::<impl i64>::trailing_zeros": true,
  "num::<impl i64>::unbounded_shl": true,
  "num::<impl i64>::unbounded_shr": true,
  "num::<impl i64>::unchecked_add::precondition_check": true,
  "num::<impl i64>::unchecked_add::{closure#0}::{closure#1}::{closure#0}::precondition_check": true,
  "num::<impl i64>::unchecked_add::{closure#2}::{closure#0}::precondition_check": true,
  "num::<impl i64>::unchecked_add::{closure#3}::{closure#0}::precondition_check": true,
  "num::<impl i64>::unchecked_exact_div": true,
  "num::<impl i64>::unchecked_exact_div::precondition_check": true,
  "num::<impl i64>::unchecked_exact_shl": true,
  "num::<impl i64>::unchecked_exact_shl::precondition_check": true,
  "num::<impl i64>::unchecked_exact_shr": true,
  "num::<impl i64>::unchecked_exact_shr::precondition_check": true,
  "num::<impl i64>::unchecked_mul::precondition_check": true,
  "num::<impl i64>::unchecked_mul::{closure#0}::{closure#1}::{closure#0}::precondition_check": true,
  "num::<impl i64>::unchecked_mul::{closure#2}::{closure#0}::precondition_check": true,
  "num::<impl i64>::unchecked_mul::{closure#3}::{closure#0}::precondition_check": true,
  "num::<impl i64>::unchecked_neg::precondition_check": true,
  "num::<impl i64>::unchecked_neg::{closure#0}::{closure#1}::{closure#1}::precondition_check": true,
  "num::<impl i64>::unchecked_neg::{closure#2}::{closure#1}::precondition_check": true,
  "num::<impl i64>::unchecked_neg::{closure#3}::{closure#0}::precondition_check": true,
  "num::<impl i64>::unchecked_shl::precondition_check": true,
  "num::<impl i64>::unchecked_shl::{closure#0}::{closure#1}::{closure#0}::precondition_check": true,
  "num::<impl i64>::unchecked_shl::{closure#2}::{closure#0}::precondition_check": true,
  "num::<impl i64>::unchecked_shl::{closure#3}::{closure#0}::precondition_check": true,
  "num::<impl i64>::unchecked_shr::precondition_check": true,
  "num::<impl i64>::unchecked_shr::{closure#0}::{closure#1}::{closure#0}::precondition_check": true,
  "num::<impl i64>::unchecked_shr::{closure#2}::{closure#0}::precondition_check": true,
  "num::<impl i64>::unchecked_shr::{closure#3}::{closure#0}::precondition_check": true,
  "num::<impl i64>::unchecked_sub::precondition_check": true,
  "num::<impl i64>::unchecked_sub::{closure#0}::{closure#1}::{closure#0}::precondition_check": true,
  "num::<impl i64>::unchecked_sub::{closure#2}::{closure#0}::precondition_check": true,
  "num::<impl i64>::unchecked_sub::{closure#3}::{closure#0}::precondition_check": true,
  "num::<impl i64>::unsigned_abs": true,
  "num::<impl i64>::widening_mul": true,
  "num::<impl i64>::wrapping_abs": true,
  "num::<impl i64>::wrapping_add": true,
  "num::<impl i64>::wrapping_add_unsigned": true,
  "num::<impl i64>::wrapping_div": true,
  "num::<impl i64>::wrapping_div_euclid": true,
  "num::<impl i64>::wrapping_mul": true,
  "num::<impl i64>::wrapping_neg": true,
  "num::<impl i64>::wrapping_pow": true,
  "num::<impl i64>::wrapping_rem": true,
  "num::<impl i64>::wrapping_rem_euclid": true,
  "num::<impl i64>::wrapping_sub": true,
  "num::<impl i64>::wrapping_sub_unsigned": true,
  "num::<impl i8>::abs": true,
  "num::<impl i8>::abs_diff": true,
  "num::<impl i8>::borrowing_sub": true,
  "num::<impl i8>::carrying_add": true,
  "num::<impl i8>::carrying_mul": true,
  "num::<impl i8>::carrying_mul_add": true,
  "num::<impl i8>::cast_unsigned": true,
  "num::<impl i8>::checked_abs": true,
  "num::<impl i8>::checked_add": true,
  "num::<impl i8>::checked_add_unsigned": true,
  "num::<impl i8>::checked_div": true,
  "num::<impl i8>::checked_div_euclid": true,
  "num::<impl i8>::checked_exact_div": true,
  "num::<impl i8>::checked_ilog": true,
  "num::<impl i8>::checked_ilog10": true,
  "num::<impl i8>::checked_ilog2": true,
  "num::<impl i8>::checked_isqrt": true,
  "num::<impl i8>::checked_mul": true,
  "num::<impl i8>::checked_neg": true,
  "num::<impl i8>::checked_next_multiple_of": true,
  "num::<impl i8>::checked_pow": true,
  "num::<impl i8>::checked_rem": true,
  "num::<impl i8>::checked_rem_euclid": true,
  "num::<impl i8>::checked_shl": true,
  "num::<impl i8>::checked_shr": true,
  "num::<impl i8>::checked_sub": true,
  "num::<impl i8>::checked_sub_unsigned": true,
  "num::<impl i8>::count_ones": true,
  "num::<impl i8>::count_zeros": true,
  "num::<impl i8>::div_ceil": true,
  "num::<impl i8>::div_euclid": true,
  "num::<impl i8>::div_floor": true,
  "num::<impl i8>::exact_div": true,
  "num::<impl i8>::exact_shl": true,
  "num::<impl i8>::exact_shr": true,
  "num::<impl i8>::from_be": true,
  "num::<impl i8>::from_be_bytes": true,
  "num::<impl i8>::from_le": true,
  "num::<impl i8>::from_le_bytes": true,
  "num::<impl i8>::from_ne_bytes": true,
  "num::<impl i8>::highest_one": true,
  "num::<impl i8>::ilog": true,
  "num::<impl i8>::ilog10": true,
  "num::<impl i8>::ilog2": true,
  "num::<impl i8>::is_negative": true,
  "num::<impl i8>::is_positive": true,
  "num::<impl i8>::isolate_highest_one": true,
  "num::<impl i8>::isolate_lowest_one": true,
  "num::<impl i8>::isqrt": true,
  "num::<impl i8>::leading_ones": true,
  "num::<impl i8>::leading_zeros": true,
  "num::<impl i8>::lowest_one": true,
  "num::<impl i8>::max_value": true,
  "num::<impl i8>::midpoint": true,
  "num::<impl i8>::min_value": true,
  "num::<impl i8>::next_multiple_of": true,
  "num::<impl i8>::overflowing_abs": true,
  "num::<impl i8>::overflowing_add": true,
  "num::<impl i8>::overflowing_add_unsigned": true,
  "num::<impl i8>::overflowing_div": true,
  "num::<impl i8>::overflowing_div_euclid": true,
  "num::<impl i8>::overflowing_mul": true,
  "num::<impl i8>::overflowing_neg": true,
  "num::<impl i8>::overflowing_pow": true,
  "num::<impl i8>::overflowing_rem": true,
  "num::<impl i8>::overflowing_rem_euclid": true,
  "num::<impl i8>::overflowing_shl": true,
  "num::<impl i8>::overflowing_shr": true,
  "num::<impl i8>::overflowing_sub": true,
  "num::<impl i8>::overflowing_sub_unsigned": true,
  "num::<impl i8>::pow": true,
  "num::<impl i8>::rem_euclid": true,
  "num::<impl i8>::reverse_bits": true,
  "num::<impl i8>::rotate_left": true,
  "num::<impl i8>::rotate_right": true,
  "num::<impl i8>::saturating_abs": true,
  "num::<impl i8>::saturating_add": true,
  "num::<impl i8>::saturating_add_unsigned": true,
  "num::<impl i8>::saturating_div": true,
  "num::<impl i8>::saturating_mul": true,
  "num::<impl i8>::saturating_neg": true,
  "num::<impl i8>::saturating_pow": true,
  "num::<impl i8>::saturating_sub": true,
  "num::<impl i8>::saturating_sub_unsigned": true,
  "num::<impl i8>::signum": true,
  "num::<impl i8>::strict_abs": true,
  "num::<impl i8>::strict_add": true,
  "num::<impl i8>::strict_add_unsigned": true,
  "num::<impl i8>::strict_div": true,
  "num::<impl i8>::strict_div_euclid": true,
  "num::<impl i8>::strict_mul": true,
  "num::<impl i8>::strict_neg": true,
  "num::<impl i8>::strict_pow": true,
  "num::<impl i8>::strict_rem": true,
  "num::<impl i8>::strict_rem_euclid": true,
  "num::<impl i8>::strict_shl": true,
  "num::<impl i8>::strict_shr": true,
  "num::<impl i8>::strict_sub": true,
  "num::<impl i8>::strict_sub_unsigned": true,
  "num::<impl i8>::swap_bytes": true,
  "num::<impl i8>::to_be": true,
  "num::<impl i8>::to_be_bytes": true,
  "num::<impl i8>::to_le": true,
  "num::<impl i8>::to_le_bytes": true,
  "num::<impl i8>::to_ne_bytes": true,
  "num::<impl i8>::trailing_ones": true,
  "num::<impl i8>::trailing_zeros": true,
  "num::<impl i8>::unbounded_shl": true,
  "num::<impl i8>::unbounded_shr": true,
  "num::<impl i8>::unchecked_add::precondition_check": true,
  "num::<impl i8>::unchecked_add::{closure#0}::{closure#1}::{closure#0}::precondition_check": true,
  "num::<impl i8>::unchecked_add::{closure#2}::{closure#0}::precondition_check": true,
  "num::<impl i8>::unchecked_add::{closure#3}::{closure#0}::precondition_check": true,
  "num::<impl i8>::unchecked_exact_div": true,
  "num::<impl i8>::unchecked_exact_div::precondition_check": true,
  "num::<impl i8>::unchecked_exact_shl": true,
  "num::<impl i8>::unchecked_exact_shl::precondition_check": true,
  "num::<impl i8>::unchecked_exact_shr": true,
  "num::<impl i8>::unchecked_exact_shr::precondition_check": true,
  "num::<impl i8>::unchecked_mul::precondition_check": true,
  "num::<impl i8>::unchecked_mul::{closure#0}::{closure#1}::{closure#0}::precondition_check": true,
  "num::<impl i8>::unchecked_mul::{closure#2}::{closure#0}::precondition_check": true,
  "num::<impl i8>::unchecked_mul::{closure#3}::{closure#0}::precondition_check": true,
  "num::<impl i8>::unchecked_neg::precondition_check": true,
  "num::<impl i8>::unchecked_neg::{closure#0}::{closure#1}::{closure#1}::precondition_check": true,
  "num::<impl i8>::unchecked_neg::{closure#2}::{closure#1}::precondition_check": true,
  "num::<impl i8>::unchecked_neg::{closure#3}::{closure#0}::precondition_check": true,
  "num::<impl i8>::unchecked_shl::precondition_check": true,
  "num::<impl i8>::unchecked_shl::{closure#0}::{closure#1}::{closure#0}::precondition_check": true,
  "num::<impl i8>::unchecked_shl::{closure#2}::{closure#0}::precondition_check": true,
  "num::<impl i8>::unchecked_shl::{closure#3}::{closure#0}::precondition_check": true,
  "num::<impl i8>::unchecked_shr::precondition_check": true,
  "num::<impl i8>::unchecked_shr::{closure#0}::{closure#1}::{closure#0}::precondition_check": true,
  "num::<impl i8>::unchecked_shr::{closure#2}::{closure#0}::precondition_check": true,
  "num::<impl i8>::unchecked_shr::{closure#3}::{closure#0}::precondition_check": true,
  "num::<impl i8>::unchecked_sub::precondition_check": true,
  "num::<impl i8>::unchecked_sub::{closure#0}::{closure#1}::{closure#0}::precondition_check": true,
  "num::<impl i8>::unchecked_sub::{closure#2}::{closure#0}::precondition_check": true,
  "num::<impl i8>::unchecked_sub::{closure#3}::{closure#0}::precondition_check": true,
  "num::<impl i8>::unsigned_abs": true,
  "num::<impl i8>::widening_mul": true,
  "num::<impl i8>::wrapping_abs": true,
  "num::<impl i8>::wrapping_add": true,
  "num::<impl i8>::wrapping_add_unsigned": true,
  "num::<impl i8>::wrapping_div": true,
  "num::<impl i8>::wrapping_div_euclid": true,
  "num::<impl i8>::wrapping_mul": true,
  "num::<impl i8>::wrapping_neg": true,
  "num::<impl i8>::wrapping_pow": true,
  "num::<impl i8>::wrapping_rem": true,
  "num::<impl i8>::wrapping_rem_euclid": true,
  "num::<impl i8>::wrapping_sub": true,
  "num::<impl i8>::wrapping_sub_unsigned": true,
  "num::<impl isize>::abs": true,
  "num::<impl isize>::abs_diff": true,
  "num::<impl isize>::borrowing_sub": true,
  "num::<impl isize>::carrying_add": true,
  "num::<impl isize>::carrying_mul": true,
  "num::<impl isize>::carrying_mul_add": true,
  "num::<impl isize>::cast_unsigned": true,
  "num::<impl isize>::checked_abs": true,
  "num::<impl isize>::checked_add": true,
  "num::<impl isize>::checked_add_unsigned": true,
  "num::<impl isize>::checked_div": true,
  "num::<impl isize>::checked_div_euclid": true,
  "num::<impl isize>::checked_exact_div": true,
  "num::<impl isize>::checked_ilog": true,
  "num::<impl isize>::checked_ilog10": true,
  "num::<impl isize>::checked_ilog2": true,
  "num::<impl isize>::checked_isqrt": true,
  "num::<impl isize>::checked_mul": true,
  "num::<impl isize>::checked_neg": true,
  "num::<impl isize>::checked_next_multiple_of": true,
  "num::<impl isize>::checked_pow": true,
  "num::<impl isize>::checked_rem": true,
  "num::<impl isize>::checked_rem_euclid": true,
  "num::<impl isize>::checked_shl": true,
  "num::<impl isize>::checked_shr": true,
  "num::<impl isize>::checked_sub": true,
  "num::<impl isize>::checked_sub_unsigned": true,
  "num::<impl isize>::count_ones": true,
  "num::<impl isize>::count_zeros": true,
  "num::<impl isize>::div_ceil": true,
  "num::<impl isize>::div_euclid": true,
  "num::<impl isize>::div_floor": true,
  "num::<impl isize>::exact_div": true,
  "num::<impl isize>::exact_shl": true,
  "num::<impl isize>::exact_shr": true,
  "num::<impl isize>::from_be": true,
  "num::<impl isize>::from_be_bytes": true,
  "num::<impl isize>::from_le": true,
  "num::<impl isize>::from_le_bytes": true,
  "num::<impl isize>::from_ne_bytes": true,
  "num::<impl isize>::highest_one": true,
  "num::<impl isize>::ilog": true,
  "num::<impl isize>::ilog10": true,
  "num::<impl isize>::ilog2": true,
  "num::<impl isize>::is_negative": true,
  "num::<impl isize>::is_positive": true,
  "num::<impl isize>::isolate_highest_one": true,
  "num::<impl isize>::isolate_lowest_one": true,
  "num::<impl isize>::isqrt": true,
  "num::<impl isize>::leading_ones": true,
  "num::<impl isize>::leading_zeros": true,
  "num::<impl isize>::lowest_one": true,
  "num::<impl isize>::max_value": true,
  "num::<impl isize>::midpoint": true,
  "num::<impl isize>::min_value": true,
  "num::<impl isize>::next_multiple_of": true,
  "num::<impl isize>::overflowing_abs": true,
  "num::<impl isize>::overflowing_add": true,
  "num::<impl isize>::overflowing_add_unsigned": true,
  "num::<impl isize>::overflowing_div": true,
  "num::<impl isize>::overflowing_div_euclid": true,
  "num::<impl isize>::overflowing_mul": true,
  "num::<impl isize>::overflowing_neg": true,
  "num::<impl isize>::overflowing_pow": true,
  "num::<impl isize>::overflowing_rem": true,
  "num::<impl isize>::overflowing_rem_euclid": true,
  "num::<impl isize>::overflowing_shl": true,
  "num::<impl isize>::overflowing_shr": true,
  "num::<impl isize>::overflowing_sub": true,
  "num::<impl isize>::overflowing_sub_unsigned": true,
  "num::<impl isize>::pow": true,
  "num::<impl isize>::rem_euclid": true,
  "num::<impl isize>::reverse_bits": true,
  "num::<impl isize>::rotate_left": true,
  "num::<impl isize>::rotate_right": true,
  "num::<impl isize>::saturating_abs": true,
  "num::<impl isize>::saturating_add": true,
  "num::<impl isize>::saturating_add_unsigned": true,
  "num::<impl isize>::saturating_div": true,
  "num::<impl isize>::saturating_mul": true,
  "num::<impl isize>::saturating_neg": true,
  "num::<impl isize>::saturating_pow": true,
  "num::<impl isize>::saturating_sub": true,
  "num::<impl isize>::saturating_sub_unsigned": true,
  "num::<impl isize>::signum": true,
  "num::<impl isize>::strict_abs": true,
  "num::<impl isize>::strict_add": true,
  "num::<impl isize>::strict_add_unsigned": true,
  "num::<impl isize>::strict_div": true,
  "num::<impl isize>::strict_div_euclid": true,
  "num::<impl isize>::strict_mul": true,
  "num::<impl isize>::strict_neg": true,
  "num::<impl isize>::strict_pow": true,
  "num::<impl isize>::strict_rem": true,
  "num::<impl isize>::strict_rem_euclid": true,
  "num::<impl isize>::strict_shl": true,
  "num::<impl isize>::strict_shr": true,
  "num::<impl isize>::strict_sub": true,
  "num::<impl isize>::strict_sub_unsigned": true,
  "num::<impl isize>::swap_bytes": true,
  "num::<impl isize>::to_be": true,
  "num::<impl isize>::to_be_bytes": true,
  "num::<impl isize>::to_le": true,
  "num::<impl isize>::to_le_bytes": true,
  "num::<impl isize>::to_ne_bytes": true,
  "num::<impl isize>::trailing_ones": true,
  "num::<impl isize>::trailing_zeros": true,
  "num::<impl isize>::unbounded_shl": true,
  "num::<impl isize>::unbounded_shr": true,
  "num::<impl isize>::unchecked_add::precondition_check": true,
  "num::<impl isize>::unchecked_add::{closure#0}::{closure#1}::{closure#0}::precondition_check": true,
  "num::<impl isize>::unchecked_add::{closure#2}::{closure#0}::precondition_check": true,
  "num::<impl isize>::unchecked_add::{closure#3}::{closure#0}::precondition_check": true,
  "num::<impl isize>::unchecked_exact_div": true,
  "num::<impl isize>::unchecked_exact_div::precondition_check": true,
  "num::<impl isize>::unchecked_exact_shl": true,
  "num::<impl isize>::unchecked_exact_shl::precondition_check": true,
  "num::<impl isize>::unchecked_exact_shr": true,
  "num::<impl isize>::unchecked_exact_shr::precondition_check": true,
  "num::<impl isize>::unchecked_mul::precondition_check": true,
  "num::<impl isize>::unchecked_mul::{closure#0}::{closure#1}::{closure#0}::precondition_check": true,
  "num::<impl isize>::unchecked_mul::{closure#2}::{closure#0}::precondition_check": true,
  "num::<impl isize>::unchecked_mul::{closure#3}::{closure#0}::precondition_check": true,
  "num::<impl isize>::unchecked_neg::precondition_check": true,
  "num::<impl isize>::unchecked_neg::{closure#0}::{closure#1}::{closure#1}::precondition_check": true,
  "num::<impl isize>::unchecked_neg::{closure#2}::{closure#1}::precondition_check": true,
  "num::<impl isize>::unchecked_neg::{closure#3}::{closure#0}::precondition_check": true,
  "num::<impl isize>::unchecked_shl::precondition_check": true,
  "num::<impl isize>::unchecked_shl::{closure#0}::{closure#1}::{closure#0}::precondition_check": true,
  "num::<impl isize>::unchecked_shl::{closure#2}::{closure#0}::precondition_check": true,
  "num::<impl isize>::unchecked_shl::{closure#3}::{closure#0}::precondition_check": true,
  "num::<impl isize>::unchecked_shr::precondition_check": true,
  "num::<impl isize>::unchecked_shr::{closure#0}::{closure#1}::{closure#0}::precondition_check": true,
  "num::<impl isize>::unchecked_shr::{closure#2}::{closure#0}::precondition_check": true,
  "num::<impl isize>::unchecked_shr::{closure#3}::{closure#0}::precondition_check": true,
  "num::<impl isize>::unchecked_sub::precondition_check": true,
  "num::<impl isize>::unchecked_sub::{closure#0}::{closure#1}::{closure#0}::precondition_check": true,
  "num::<impl isize>::unchecked_sub::{closure#2}::{closure#0}::precondition_check": true,
  "num::<impl isize>::unchecked_sub::{closure#3}::{closure#0}::precondition_check": true,
  "num::<impl isize>::unsigned_abs": true,
  "num::<impl isize>::widening_mul": true,
  "num::<impl isize>::wrapping_abs": true,
  "num::<impl isize>::wrapping_add": true,
  "num::<impl isize>::wrapping_add_unsigned": true,
  "num::<impl isize>::wrapping_div": true,
  "num::<impl isize>::wrapping_div_euclid": true,
  "num::<impl isize>::wrapping_mul": true,
  "num::<impl isize>::wrapping_neg": true,
  "num::<impl isize>::wrapping_pow": true,
  "num::<impl isize>::wrapping_rem": true,
  "num::<impl isize>::wrapping_rem_euclid": true,
  "num::<impl isize>::wrapping_sub": true,
  "num::<impl isize>::wrapping_sub_unsigned": true,
  "num::<impl u128>::abs_diff": true,
  "num::<impl u128>::bit_width": true,
  "num::<impl u128>::borrowing_sub": true,
  "num::<impl u128>::carrying_add": true,
  "num::<impl u128>::carrying_mul": true,
  "num::<impl u128>::carrying_mul_add": true,
  "num::<impl u128>::cast_signed": true,
  "num::<impl u128>::checked_add": true,
  "num::<impl u128>::checked_add_signed": true,
  "num::<impl u128>::checked_div": true,
  "num::<impl u128>::checked_div_euclid": true,
  "num::<impl u128>::checked_exact_div": true,
  "num::<impl u128>::checked_ilog": true,
  "num::<impl u128>::checked_ilog10": true,
  "num::<impl u128>::checked_ilog2": true,
  "num::<impl u128>::checked_mul": true,
  "num::<impl u128>::checked_neg": true,
  "num::<impl u128>::checked_next_multiple_of": true,
  "num::<impl u128>::checked_next_power_of_two": true,
  "num::<impl u128>::checked_pow": true,
  "num::<impl u128>::checked_rem": true,
  "num::<impl u128>::checked_rem_euclid": true,
  "num::<impl u128>::checked_shl": true,
  "num::<impl u128>::checked_shr": true,
  "num::<impl u128>::checked_signed_diff": true,
  "num::<impl u128>::checked_sub": true,
  "num::<impl u128>::checked_sub_signed": true,
  "num::<impl u128>::count_ones": true,
  "num::<impl u128>::count_zeros": true,
  "num::<impl u128>::div_ceil": true,
  "num::<impl u128>::div_euclid": true,
  "num::<impl u128>::div_floor": true,
  "num::<impl u128>::exact_div": true,
  "num::<impl u128>::exact_shl": true,
  "num::<impl u128>::exact_shr": true,
  "num::<impl u128>::from_be": true,
  "num::<impl u128>::from_be_bytes": true,
  "num::<impl u128>::from_le": true,
  "num::<impl u128>::from_le_bytes": true,
  "num::<impl u128>::from_ne_bytes": true,
  "num::<impl u128>::funnel_shl": true,
  "num::<impl u128>::funnel_shr": true,
  "num::<impl u128>::highest_one": true,
  "num::<impl u128>::ilog": true,
  "num::<impl u128>::ilog10": true,
  "num::<impl u128>::ilog2": true,
  "num::<impl u128>::is_multiple_of": true,
  "num::<impl u128>::is_power_of_two": true,
  "num::<impl u128>::isolate_highest_one": true,
  "num::<impl u128>::isolate_lowest_one": true,
  "num::<impl u128>::isqrt": true,
  "num::<impl u128>::leading_ones": true,
  "num::<impl u128>::leading_zeros": true,
  "num::<impl u128>::lowest_one": true,
  "num::<impl u128>::max_value": true,
  "num::<impl u128>::midpoint": true,
  "num::<impl u128>::min_value": true,
  "num::<impl u128>::next_multiple_of": true,
  "num::<impl u128>::next_power_of_two": true,
  "num::<impl u128>::one_less_than_next_power_of_two": true,
  "num::<impl u128>::overflowing_add": true,
  "num::<impl u128>::overflowing_add_signed": true,
  "num::<impl u128>::overflowing_div": true,
  "num::<impl u128>::overflowing_div_euclid": true,
  "num::<impl u128>::overflowing_mul": true,
  "num::<impl u128>::overflowing_neg": true,
  "num::<impl u128>::overflowing_pow": true,
  "num::<impl u128>::overflowing_rem": true,
  "num::<impl u128>::overflowing_rem_euclid": true,
  "num::<impl u128>::overflowing_shl": true,
  "num::<impl u128>::overflowing_shr": true,
  "num::<impl u128>::overflowing_sub": true,
  "num::<impl u128>::overflowing_sub_signed": true,
  "num::<impl u128>::pow": true,
  "num::<impl u128>::rem_euclid": true,
  "num::<impl u128>::reverse_bits": true,
  "num::<impl u128>::rotate_left": true,
  "num::<impl u128>::rotate_right": true,
  "num::<impl u128>::saturating_add": true,
  "num::<impl u128>::saturating_add_signed": true,
  "num::<impl u128>::saturating_div": true,
  "num::<impl u128>::saturating_mul": true,
  "num::<impl u128>::saturating_pow": true,
  "num::<impl u128>::saturating_sub": true,
  "num::<impl u128>::saturating_sub_signed": true,
  "num::<impl u128>::strict_add": true,
  "num::<impl u128>::strict_add_signed": true,
  "num::<impl u128>::strict_div": true,
  "num::<impl u128>::strict_div_euclid": true,
  "num::<impl u128>::strict_mul": true,
  "num::<impl u128>::strict_neg": true,
  "num::<impl u128>::strict_pow": true,
  "num::<impl u128>::strict_rem": true,
  "num::<impl u128>::strict_rem_euclid": true,
  "num::<impl u128>::strict_shl": true,
  "num::<impl u128>::strict_shr": true,
  "num::<impl u128>::strict_sub": true,
  "num::<impl u128>::strict_sub_signed": true,
  "num::<impl u128>::swap_bytes": true,
  "num::<impl u128>::to_be": true,
  "num::<impl u128>::to_be_bytes": true,
  "num::<impl u128>::to_le": true,
  "num::<impl u128>::to_le_bytes": true,
  "num::<impl u128>::to_ne_bytes": true,
  "num::<impl u128>::trailing_ones": true,
  "num::<impl u128>::trailing_zeros": true,
  "num::<impl u128>::unbounded_shl": true,
  "num::<impl u128>::unbounded_shr": true,
  "num::<impl u128>::unchecked_add::precondition_check": true,
  "num::<impl u128>::unchecked_add::{closure#0}::{closure#1}::{closure#0}::precondition_check": true,
  "num::<impl u128>::unchecked_add::{closure#2}::{closure#0}::precondition_check": true,
  "num::<impl u128>::unchecked_add::{closure#3}::{closure#0}::precondition_check": true,
  "num::<impl u128>::unchecked_disjoint_bitor::precondition_check": true,
  "num::<impl u128>::unchecked_disjoint_bitor::{closure#0}::{closure#1}::{closure#0}::precondition_check": true,
  "num::<impl u128>::unchecked_disjoint_bitor::{closure#2}::{closure#0}::precondition_check": true,
  "num::<impl u128>::unchecked_disjoint_bitor::{closure#3}::{closure#0}::precondition_check": true,
  "num::<impl u128>::unchecked_exact_div": true,
  "num::<impl u128>::unchecked_exact_div::precondition_check": true,
  "num::<impl u128>::unchecked_exact_shl": true,
  "num::<impl u128>::unchecked_exact_shl::precondition_check": true,
  "num::<impl u128>::unchecked_exact_shr": true,
  "num::<impl u128>::unchecked_exact_shr::precondition_check": true,
  "num::<impl u128>::unchecked_mul::precondition_check": true,
  "num::<impl u128>::unchecked_mul::{closure#0}::{closure#1}::{closure#0}::precondition_check": true,
  "num::<impl u128>::unchecked_mul::{closure#2}::{closure#0}::precondition_check": true,
  "num::<impl u128>::unchecked_mul::{closure#3}::{closure#0}::precondition_check": true,
  "num::<impl u128>::unchecked_shl::precondition_check": true,
  "num::<impl u128>::unchecked_shl::{closure#0}::{closure#1}::{closure#0}::precondition_check": true,
  "num::<impl u128>::unchecked_shl::{closure#2}::{closure#0}::precondition_check": true,
  "num::<impl u128>::unchecked_shl::{closure#3}::{closure#0}::precondition_check": true,
  "num::<impl u128>::unchecked_shr::precondition_check": true,
  "num::<impl u128>::unchecked_shr::{closure#0}::{closure#1}::{closure#0}::precondition_check": true,
  "num::<impl u128>::unchecked_shr::{closure#2}::{closure#0}::precondition_check": true,
  "num::<impl u128>::unchecked_shr::{closure#3}::{closure#0}::precondition_check": true,
  "num::<impl u128>::unchecked_sub::precondition_check": true,
  "num::<impl u128>::unchecked_sub::{closure#0}::{closure#1}::{closure#0}::precondition_check": true,
  "num::<impl u128>::unchecked_sub::{closure#2}::{closure#0}::precondition_check": true,
  "num::<impl u128>::unchecked_sub::{closure#3}::{closure#0}::precondition_check": true,
  "num::<impl u128>::widening_mul": true,
  "num::<impl u128>::wrapping_add": true,
  "num::<impl u128>::wrapping_add_signed": true,
  "num::<impl u128>::wrapping_div": true,
  "num::<impl u128>::wrapping_div_euclid": true,
  "num::<impl u128>::wrapping_mul": true,
  "num::<impl u128>::wrapping_neg": true,
  "num::<impl u128>::wrapping_next_power_of_two": true,
  "num::<impl u128>::wrapping_pow": true,
  "num::<impl u128>::wrapping_rem": true,
  "num::<impl u128>::wrapping_rem_euclid": true,
  "num::<impl u128>::wrapping_sub": true,
  "num::<impl u128>::wrapping_sub_signed": true,
  "num::<impl u16>::abs_diff": true,
  "num::<impl u16>::bit_width": true,
  "num::<impl u16>::borrowing_sub": true,
  "num::<impl u16>::carrying_add": true,
  "num::<impl u16>::carrying_mul": true,
  "num::<impl u16>::carrying_mul_add": true,
  "num::<impl u16>::cast_signed": true,
  "num::<impl u16>::checked_add": true,
  "num::<impl u16>::checked_add_signed": true,
  "num::<impl u16>::checked_div": true,
  "num::<impl u16>::checked_div_euclid": true,
  "num::<impl u16>::checked_exact_div": true,
  "num::<impl u16>::checked_ilog": true,
  "num::<impl u16>::checked_ilog10": true,
  "num::<impl u16>::checked_ilog2": true,
  "num::<impl u16>::checked_mul": true,
  "num::<impl u16>::checked_neg": true,
  "num::<impl u16>::checked_next_multiple_of": true,
  "num::<impl u16>::checked_next_power_of_two": true,
  "num::<impl u16>::checked_pow": true,
  "num::<impl u16>::checked_rem": true,
  "num::<impl u16>::checked_rem_euclid": true,
  "num::<impl u16>::checked_shl": true,
  "num::<impl u16>::checked_shr": true,
  "num::<impl u16>::checked_signed_diff": true,
  "num::<impl u16>::checked_sub": true,
  "num::<impl u16>::checked_sub_signed": true,
  "num::<impl u16>::count_ones": true,
  "num::<impl u16>::count_zeros": true,
  "num::<impl u16>::div_ceil": true,
  "num::<impl u16>::div_euclid": true,
  "num::<impl u16>::div_floor": true,
  "num::<impl u16>::exact_div": true,
  "num::<impl u16>::exact_shl": true,
  "num::<impl u16>::exact_shr": true,
  "num::<impl u16>::from_be": true,
  "num::<impl u16>::from_be_bytes": true,
  "num::<impl u16>::from_le": true,
  "num::<impl u16>::from_le_bytes": true,
  "num::<impl u16>::from_ne_bytes": true,
  "num::<impl u16>::funnel_shl": true,
  "num::<impl u16>::funnel_shr": true,
  "num::<impl u16>::highest_one": true,
  "num::<impl u16>::ilog": true,
  "num::<impl u16>::ilog10": true,
  "num::<impl u16>::ilog2": true,
  "num::<impl u16>::is_multiple_of": true,
  "num::<impl u16>::is_power_of_two": true,
  "num::<impl u16>::is_utf16_surrogate": true,
  "num::<impl u16>::isolate_highest_one": true,
  "num::<impl u16>::isolate_lowest_one": true,
  "num::<impl u16>::isqrt": true,
  "num::<impl u16>::leading_ones": true,
  "num::<impl u16>::leading_zeros": true,
  "num::<impl u16>::lowest_one": true,
  "num::<impl u16>::max_value": true,
  "num::<impl u16>::midpoint": true,
  "num::<impl u16>::min_value": true,
  "num::<impl u16>::next_multiple_of": true,
  "num::<impl u16>::next_power_of_two": true,
  "num::<impl u16>::one_less_than_next_power_of_two": true,
  "num::<impl u16>::overflowing_add": true,
  "num::<impl u16>::overflowing_add_signed": true,
  "num::<impl u16>::overflowing_div": true,
  "num::<impl u16>::overflowing_div_euclid": true,
  "num::<impl u16>::overflowing_mul": true,
  "num::<impl u16>::overflowing_neg": true,
  "num::<impl u16>::overflowing_pow": true,
  "num::<impl u16>::overflowing_rem": true,
  "num::<impl u16>::overflowing_rem_euclid": true,
  "num::<impl u16>::overflowing_shl": true,
  "num::<impl u16>::overflowing_shr": true,
  "num::<impl u16>::overflowing_sub": true,
  "num::<impl u16>::overflowing_sub_signed": true,
  "num::<impl u16>::pow": true,
  "num::<impl u16>::rem_euclid": true,
  "num::<impl u16>::reverse_bits": true,
  "num::<impl u16>::rotate_left": true,
  "num::<impl u16>::rotate_right": true,
  "num::<impl u16>::saturating_add": true,
  "num::<impl u16>::saturating_add_signed": true,
  "num::<impl u16>::saturating_div": true,
  "num::<impl u16>::saturating_mul": true,
  "num::<impl u16>::saturating_pow": true,
  "num::<impl u16>::saturating_sub": true,
  "num::<impl u16>::saturating_sub_signed": true,
  "num::<impl u16>::strict_add": true,
  "num::<impl u16>::strict_add_signed": true,
  "num::<impl u16>::strict_div": true,
  "num::<impl u16>::strict_div_euclid": true,
  "num::<impl u16>::strict_mul": true,
  "num::<impl u16>::strict_neg": true,
  "num::<impl u16>::strict_pow": true,
  "num::<impl u16>::strict_rem": true,
  "num::<impl u16>::strict_rem_euclid": true,
  "num::<impl u16>::strict_shl": true,
  "num::<impl u16>::strict_shr": true,
  "num::<impl u16>::strict_sub": true,
  "num::<impl u16>::strict_sub_signed": true,
  "num::<impl u16>::swap_bytes": true,
  "num::<impl u16>::to_be": true,
  "num::<impl u16>::to_be_bytes": true,
  "num::<impl u16>::to_le": true,
  "num::<impl u16>::to_le_bytes": true,
  "num::<impl u16>::to_ne_bytes": true,
  "num::<impl u16>::trailing_ones": true,
  "num::<impl u16>::trailing_zeros": true,
  "num::<impl u16>::unbounded_shl": true,
  "num::<impl u16>::unbounded_shr": true,
  "num::<impl u16>::unchecked_add::precondition_check": true,
  "num::<impl u16>::unchecked_add::{closure#0}::{closure#1}::{closure#0}::precondition_check": true,
  "num::<impl u16>::unchecked_add::{closure#2}::{closure#0}::precondition_check": true,
  "num::<impl u16>::unchecked_add::{closure#3}::{closure#0}::precondition_check": true,
  "num::<impl u16>::unchecked_disjoint_bitor::precondition_check": true,
  "num::<impl u16>::unchecked_disjoint_bitor::{closure#0}::{closure#1}::{closure#0}::precondition_check": true,
  "num::<impl u16>::unchecked_disjoint_bitor::{closure#2}::{closure#0}::precondition_check": true,
  "num::<impl u16>::unchecked_disjoint_bitor::{closure#3}::{closure#0}::precondition_check": true,
  "num::<impl u16>::unchecked_exact_div": true,
  "num::<impl u16>::unchecked_exact_div::precondition_check": true,
  "num::<impl u16>::unchecked_exact_shl": true,
  "num::<impl u16>::unchecked_exact_shl::precondition_check": true,
  "num::<impl u16>::unchecked_exact_shr": true,
  "num::<impl u16>::unchecked_exact_shr::precondition_check": true,
  "num::<impl u16>::unchecked_mul::precondition_check": true,
  "num::<impl u16>::unchecked_mul::{closure#0}::{closure#1}::{closure#0}::precondition_check": true,
  "num::<impl u16>::unchecked_mul::{closure#2}::{closure#0}::precondition_check": true,
  "num::<impl u16>::unchecked_mul::{closure#3}::{closure#0}::precondition_check": true,
  "num::<impl u16>::unchecked_shl::precondition_check": true,
  "num::<impl u16>::unchecked_shl::{closure#0}::{closure#1}::{closure#0}::precondition_check": true,
  "num::<impl u16>::unchecked_shl::{closure#2}::{closure#0}::precondition_check": true,
  "num::<impl u16>::unchecked_shl::{closure#3}::{closure#0}::precondition_check": true,
  "num::<impl u16>::unchecked_shr::precondition_check": true,
  "num::<impl u16>::unchecked_shr::{closure#0}::{closure#1}::{closure#0}::precondition_check": true,
  "num::<impl u16>::unchecked_shr::{closure#2}::{closure#0}::precondition_check": true,
  "num::<impl u16>::unchecked_shr::{closure#3}::{closure#0}::precondition_check": true,
  "num::<impl u16>::unchecked_sub::precondition_check": true,
  "num::<impl u16>::unchecked_sub::{closure#0}::{closure#1}::{closure#0}::precondition_check": true,
  "num::<impl u16>::unchecked_sub::{closure#2}::{closure#0}::precondition_check": true,
  "num::<impl u16>::unchecked_sub::{closure#3}::{closure#0}::precondition_check": true,
  "num::<impl u16>::widening_mul": true,
  "num::<impl u16>::wrapping_add": true,
  "num::<impl u16>::wrapping_add_signed": true,
  "num::<impl u16>::wrapping_div": true,
  "num::<impl u16>::wrapping_div_euclid": true,
  "num::<impl u16>::wrapping_mul": true,
  "num::<impl u16>::wrapping_neg": true,
  "num::<impl u16>::wrapping_next_power_of_two": true,
  "num::<impl u16>::wrapping_pow": true,
  "num::<impl u16>::wrapping_rem": true,
  "num::<impl u16>::wrapping_rem_euclid": true,
  "num::<impl u16>::wrapping_sub": true,
  "num::<impl u16>::wrapping_sub_signed": true,
  "num::<impl u32>::abs_diff": true,
  "num::<impl u32>::bit_width": true,
  "num::<impl u32>::borrowing_sub": true,
  "num::<impl u32>::carrying_add": true,
  "num::<impl u32>::carrying_mul": true,
  "num::<impl u32>::carrying_mul_add": true,
  "num::<impl u32>::cast_signed": true,
  "num::<impl u32>::checked_add": true,
  "num::<impl u32>::checked_add_signed": true,
  "num::<impl u32>::checked_div": true,
  "num::<impl u32>::checked_div_euclid": true,
  "num::<impl u32>::checked_exact_div": true,
  "num::<impl u32>::checked_ilog": true,
  "num::<impl u32>::checked_ilog10": true,
  "num::<impl u32>::checked_ilog2": true,
  "num::<impl u32>::checked_mul": true,
  "num::<impl u32>::checked_neg": true,
  "num::<impl u32>::checked_next_multiple_of": true,
  "num::<impl u32>::checked_next_power_of_two": true,
  "num::<impl u32>::checked_pow": true,
  "num::<impl u32>::checked_rem": true,
  "num::<impl u32>::checked_rem_euclid": true,
  "num::<impl u32>::checked_shl": true,
  "num::<impl u32>::checked_shr": true,
  "num::<impl u32>::checked_signed_diff": true,
  "num::<impl u32>::checked_sub": true,
  "num::<impl u32>::checked_sub_signed": true,
  "num::<impl u32>::count_ones": true,
  "num::<impl u32>::count_zeros": true,
  "num::<impl u32>::div_ceil": true,
  "num::<impl u32>::div_euclid": true,
  "num::<impl u32>::div_floor": true,
  "num::<impl u32>::exact_div": true,
  "num::<impl u32>::exact_shl": true,
  "num::<impl u32>::exact_shr": true,
  "num::<impl u32>::from_be": true,
  "num::<impl u32>::from_be_bytes": true,
  "num::<impl u32>::from_le": true,
  "num::<impl u32>::from_le_bytes": true,
  "num::<impl u32>::from_ne_bytes": true,
  "num::<impl u32>::funnel_shl": true,
  "num::<impl u32>::funnel_shr": true,
  "num::<impl u32>::highest_one": true,
  "num::<impl u32>::ilog": true,
  "num::<impl u32>::ilog10": true,
  "num::<impl u32>::ilog2": true,
  "num::<impl u32>::is_multiple_of": true,
  "num::<impl u32>::is_power_of_two": true,
  "num::<impl u32>::isolate_highest_one": true,
  "num::<impl u32>::isolate_lowest_one": true,
  "num::<impl u32>::isqrt": true,
  "num::<impl u32>::leading_ones": true,
  "num::<impl u32>::leading_zeros": true,
  "num::<impl u32>::lowest_one": true,
  "num::<impl u32>::max_value": true,
  "num::<impl u32>::midpoint": true,
  "num::<impl u32>::min_value": true,
  "num::<impl u32>::next_multiple_of": true,
  "num::<impl u32>::next_power_of_two": true,
  "num::<impl u32>::one_less_than_next_power_of_two": true,
  "num::<impl u32>::overflowing_add": true,
  "num::<impl u32>::overflowing_add_signed": true,
  "num::<impl u32>::overflowing_div": true,
  "num::<impl u32>::overflowing_div_euclid": true,
  "num::<impl u32>::overflowing_mul": true,
  "num::<impl u32>::overflowing_neg": true,
  "num::<impl u32>::overflowing_pow": true,
  "num::<impl u32>::overflowing_rem": true,
  "num::<impl u32>::overflowing_rem_euclid": true,
  "num::<impl u32>::overflowing_shl": true,
  "num::<impl u32>::overflowing_shr": true,
  "num::<impl u32>::overflowing_sub": true,
  "num::<impl u32>::overflowing_sub_signed": true,
  "num::<impl u32>::pow": true,
  "num::<impl u32>::rem_euclid": true,
  "num::<impl u32>::reverse_bits": true,
  "num::<impl u32>::rotate_left": true,
  "num::<impl u32>::rotate_right": true,
  "num::<impl u32>::saturating_add": true,
  "num::<impl u32>::saturating_add_signed": true,
  "num::<impl u32>::saturating_div": true,
  "num::<impl u32>::saturating_mul": true,
  "num::<impl u32>::saturating_pow": true,
  "num::<impl u32>::saturating_sub": true,
  "num::<impl u32>::saturating_sub_signed": true,
  "num::<impl u32>::strict_add": true,
  "num::<impl u32>::strict_add_signed": true,
  "num::<impl u32>::strict_div": true,
  "num::<impl u32>::strict_div_euclid": true,
  "num::<impl u32>::strict_mul": true,
  "num::<impl u32>::strict_neg": true,
  "num::<impl u32>::strict_pow": true,
  "num::<impl u32>::strict_rem": true,
  "num::<impl u32>::strict_rem_euclid": true,
  "num::<impl u32>::strict_shl": true,
  "num::<impl u32>::strict_shr": true,
  "num::<impl u32>::strict_sub": true,
  "num::<impl u32>::strict_sub_signed": true,
  "num::<impl u32>::swap_bytes": true,
  "num::<impl u32>::to_be": true,
  "num::<impl u32>::to_be_bytes": true,
  "num::<impl u32>::to_le": true,
  "num::<impl u32>::to_le_bytes": true,
  "num::<impl u32>::to_ne_bytes": true,
  "num::<impl u32>::trailing_ones": true,
  "num::<impl u32>::trailing_zeros": true,
  "num::<impl u32>::unbounded_shl": true,
  "num::<impl u32>::unbounded_shr": true,
  "num::<impl u32>::unchecked_add::precondition_check": true,
  "num::<impl u32>::unchecked_add::{closure#0}::{closure#1}::{closure#0}::precondition_check": true,
  "num::<impl u32>::unchecked_add::{closure#2}::{closure#0}::precondition_check": true,
  "num::<impl u32>::unchecked_add::{closure#3}::{closure#0}::precondition_check": true,
  "num::<impl u32>::unchecked_disjoint_bitor::precondition_check": true,
  "num::<impl u32>::unchecked_disjoint_bitor::{closure#0}::{closure#1}::{closure#0}::precondition_check": true,
  "num::<impl u32>::unchecked_disjoint_bitor::{closure#2}::{closure#0}::precondition_check": true,
  "num::<impl u32>::unchecked_disjoint_bitor::{closure#3}::{closure#0}::precondition_check": true,
  "num::<impl u32>::unchecked_exact_div": true,
  "num::<impl u32>::unchecked_exact_div::precondition_check": true,
  "num::<impl u32>::unchecked_exact_shl": true,
  "num::<impl u32>::unchecked_exact_shl::precondition_check": true,
  "num::<impl u32>::unchecked_exact_shr": true,
  "num::<impl u32>::unchecked_exact_shr::precondition_check": true,
  "num::<impl u32>::unchecked_mul::precondition_check": true,
  "num::<impl u32>::unchecked_mul::{closure#0}::{closure#1}::{closure#0}::precondition_check": true,
  "num::<impl u32>::unchecked_mul::{closure#2}::{closure#0}::precondition_check": true,
  "num::<impl u32>::unchecked_mul::{closure#3}::{closure#0}::precondition_check": true,
  "num::<impl u32>::unchecked_shl::precondition_check": true,
  "num::<impl u32>::unchecked_shl::{closure#0}::{closure#1}::{closure#0}::precondition_check": true,
  "num::<impl u32>::unchecked_shl::{closure#2}::{closure#0}::precondition_check": true,
  "num::<impl u32>::unchecked_shl::{closure#3}::{closure#0}::precondition_check": true,
  "num::<impl u32>::unchecked_shr::precondition_check": true,
  "num::<impl u32>::unchecked_shr::{closure#0}::{closure#1}::{closure#0}::precondition_check": true,
  "num::<impl u32>::unchecked_shr::{closure#2}::{closure#0}::precondition_check": true,
  "num::<impl u32>::unchecked_shr::{closure#3}::{closure#0}::precondition_check": true,
  "num::<impl u32>::unchecked_sub::precondition_check": true,
  "num::<impl u32>::unchecked_sub::{closure#0}::{closure#1}::{closure#0}::precondition_check": true,
  "num::<impl u32>::unchecked_sub::{closure#2}::{closure#0}::precondition_check": true,
  "num::<impl u32>::unchecked_sub::{closure#3}::{closure#0}::precondition_check": true,
  "num::<impl u32>::widening_mul": true,
  "num::<impl u32>::wrapping_add": true,
  "num::<impl u32>::wrapping_add_signed": true,
  "num::<impl u32>::wrapping_div": true,
  "num::<impl u32>::wrapping_div_euclid": true,
  "num::<impl u32>::wrapping_mul": true,
  "num::<impl u32>::wrapping_neg": true,
  "num::<impl u32>::wrapping_next_power_of_two": true,
  "num::<impl u32>::wrapping_pow": true,
  "num::<impl u32>::wrapping_rem": true,
  "num::<impl u32>::wrapping_rem_euclid": true,
  "num::<impl u32>::wrapping_sub": true,
  "num::<impl u32>::wrapping_sub_signed": true,
  "num::<impl u64>::abs_diff": true,
  "num::<impl u64>::bit_width": true,
  "num::<impl u64>::borrowing_sub": true,
  "num::<impl u64>::carrying_add": true,
  "num::<impl u64>::carrying_mul": true,
  "num::<impl u64>::carrying_mul_add": true,
  "num::<impl u64>::cast_signed": true,
  "num::<impl u64>::checked_add": true,
  "num::<impl u64>::checked_add_signed": true,
  "num::<impl u64>::checked_div": true,
  "num::<impl u64>::checked_div_euclid": true,
  "num::<impl u64>::checked_exact_div": true,
  "num::<impl u64>::checked_ilog": true,
  "num::<impl u64>::checked_ilog10": true,
  "num::<impl u64>::checked_ilog2": true,
  "num::<impl u64>::checked_mul": true,
  "num::<impl u64>::checked_neg": true,
  "num::<impl u64>::checked_next_multiple_of": true,
  "num::<impl u64>::checked_next_power_of_two": true,
  "num::<impl u64>::checked_pow": true,
  "num::<impl u64>::checked_rem": true,
  "num::<impl u64>::checked_rem_euclid": true,
  "num::<impl u64>::checked_shl": true,
  "num::<impl u64>::checked_shr": true,
  "num::<impl u64>::checked_signed_diff": true,
  "num::<impl u64>::checked_sub": true,
  "num::<impl u64>::checked_sub_signed": true,
  "num::<impl u64>::count_ones": true,
  "num::<impl u64>::count_zeros": true,
  "num::<impl u64>::div_ceil": true,
  "num::<impl u64>::div_euclid": true,
  "num::<impl u64>::div_floor": true,
  "num::<impl u64>::exact_div": true,
  "num::<impl u64>::exact_shl": true,
  "num::<impl u64>::exact_shr": true,
  "num::<impl u64>::from_be": true,
  "num::<impl u64>::from_be_bytes": true,
  "num::<impl u64>::from_le": true,
  "num::<impl u64>::from_le_bytes": true,
  "num::<impl u64>::from_ne_bytes": true,
  "num::<impl u64>::funnel_shl": true,
  "num::<impl u64>::funnel_shr": true,
  "num::<impl u64>::highest_one": true,
  "num::<impl u64>::ilog": true,
  "num::<impl u64>::ilog10": true,
  "num::<impl u64>::ilog2": true,
  "num::<impl u64>::is_multiple_of": true,
  "num::<impl u64>::is_power_of_two": true,
  "num::<impl u64>::isolate_highest_one": true,
  "num::<impl u64>::isolate_lowest_one": true,
  "num::<impl u64>::isqrt": true,
  "num::<impl u64>::leading_ones": true,
  "num::<impl u64>::leading_zeros": true,
  "num::<impl u64>::lowest_one": true,
  "num::<impl u64>::max_value": true,
  "num::<impl u64>::midpoint": true,
  "num::<impl u64>::min_value": true,
  "num::<impl u64>::next_multiple_of": true,
  "num::<impl u64>::next_power_of_two": true,
  "num::<impl u64>::one_less_than_next_power_of_two": true,
  "num::<impl u64>::overflowing_add": true,
  "num::<impl u64>::overflowing_add_signed": true,
  "num::<impl u64>::overflowing_div": true,
  "num::<impl u64>::overflowing_div_euclid": true,
  "num::<impl u64>::overflowing_mul": true,
  "num::<impl u64>::overflowing_neg": true,
  "num::<impl u64>::overflowing_pow": true,
  "num::<impl u64>::overflowing_rem": true,
  "num::<impl u64>::overflowing_rem_euclid": true,
  "num::<impl u64>::overflowing_shl": true,
  "num::<impl u64>::overflowing_shr": true,
  "num::<impl u64>::overflowing_sub": true,
  "num::<impl u64>::overflowing_sub_signed": true,
  "num::<impl u64>::pow": true,
  "num::<impl u64>::rem_euclid": true,
  "num::<impl u64>::reverse_bits": true,
  "num::<impl u64>::rotate_left": true,
  "num::<impl u64>::rotate_right": true,
  "num::<impl u64>::saturating_add": true,
  "num::<impl u64>::saturating_add_signed": true,
  "num::<impl u64>::saturating_div": true,
  "num::<impl u64>::saturating_mul": true,
  "num::<impl u64>::saturating_pow": true,
  "num::<impl u64>::saturating_sub": true,
  "num::<impl u64>::saturating_sub_signed": true,
  "num::<impl u64>::strict_add": true,
  "num::<impl u64>::strict_add_signed": true,
  "num::<impl u64>::strict_div": true,
  "num::<impl u64>::strict_div_euclid": true,
  "num::<impl u64>::strict_mul": true,
  "num::<impl u64>::strict_neg": true,
  "num::<impl u64>::strict_pow": true,
  "num::<impl u64>::strict_rem": true,
  "num::<impl u64>::strict_rem_euclid": true,
  "num::<impl u64>::strict_shl": true,
  "num::<impl u64>::strict_shr": true,
  "num::<impl u64>::strict_sub": true,
  "num::<impl u64>::strict_sub_signed": true,
  "num::<impl u64>::swap_bytes": true,
  "num::<impl u64>::to_be": true,
  "num::<impl u64>::to_be_bytes": true,
  "num::<impl u64>::to_le": true,
  "num::<impl u64>::to_le_bytes": true,
  "num::<impl u64>::to_ne_bytes": true,
  "num::<impl u64>::trailing_ones": true,
  "num::<impl u64>::trailing_zeros": true,
  "num::<impl u64>::unbounded_shl": true,
  "num::<impl u64>::unbounded_shr": true,
  "num::<impl u64>::unchecked_add::precondition_check": true,
  "num::<impl u64>::unchecked_add::{closure#0}::{closure#1}::{closure#0}::precondition_check": true,
  "num::<impl u64>::unchecked_add::{closure#2}::{closure#0}::precondition_check": true,
  "num::<impl u64>::unchecked_add::{closure#3}::{closure#0}::precondition_check": true,
  "num::<impl u64>::unchecked_disjoint_bitor::precondition_check": true,
  "num::<impl u64>::unchecked_disjoint_bitor::{closure#0}::{closure#1}::{closure#0}::precondition_check": true,
  "num::<impl u64>::unchecked_disjoint_bitor::{closure#2}::{closure#0}::precondition_check": true,
  "num::<impl u64>::unchecked_disjoint_bitor::{closure#3}::{closure#0}::precondition_check": true,
  "num::<impl u64>::unchecked_exact_div": true,
  "num::<impl u64>::unchecked_exact_div::precondition_check": true,
  "num::<impl u64>::unchecked_exact_shl": true,
  "num::<impl u64>::unchecked_exact_shl::precondition_check": true,
  "num::<impl u64>::unchecked_exact_shr": true,
  "num::<impl u64>::unchecked_exact_shr::precondition_check": true,
  "num::<impl u64>::unchecked_mul::precondition_check": true,
  "num::<impl u64>::unchecked_mul::{closure#0}::{closure#1}::{closure#0}::precondition_check": true,
  "num::<impl u64>::unchecked_mul::{closure#2}::{closure#0}::precondition_check": true,
  "num::<impl u64>::unchecked_mul::{closure#3}::{closure#0}::precondition_check": true,
  "num::<impl u64>::unchecked_shl::precondition_check": true,
  "num::<impl u64>::unchecked_shl::{closure#0}::{closure#1}::{closure#0}::precondition_check": true,
  "num::<impl u64>::unchecked_shl::{closure#2}::{closure#0}::precondition_check": true,
  "num::<impl u64>::unchecked_shl::{closure#3}::{closure#0}::precondition_check": true,
  "num::<impl u64>::unchecked_shr::precondition_check": true,
  "num::<impl u64>::unchecked_shr::{closure#0}::{closure#1}::{closure#0}::precondition_check": true,
  "num::<impl u64>::unchecked_shr::{closure#2}::{closure#0}::precondition_check": true,
  "num::<impl u64>::unchecked_shr::{closure#3}::{closure#0}::precondition_check": true,
  "num::<impl u64>::unchecked_sub::precondition_check": true,
  "num::<impl u64>::unchecked_sub::{closure#0}::{closure#1}::{closure#0}::precondition_check": true,
  "num::<impl u64>::unchecked_sub::{closure#2}::{closure#0}::precondition_check": true,
  "num::<impl u64>::unchecked_sub::{closure#3}::{closure#0}::precondition_check": true,
  "num::<impl u64>::widening_mul": true,
  "num::<impl u64>::wrapping_add": true,
  "num::<impl u64>::wrapping_add_signed": true,
  "num::<impl u64>::wrapping_div": true,
  "num::<impl u64>::wrapping_div_euclid": true,
  "num::<impl u64>::wrapping_mul": true,
  "num::<impl u64>::wrapping_neg": true,
  "num::<impl u64>::wrapping_next_power_of_two": true,
  "num::<impl u64>::wrapping_pow": true,
  "num::<impl u64>::wrapping_rem": true,
  "num::<impl u64>::wrapping_rem_euclid": true,
  "num::<impl u64>::wrapping_sub": true,
  "num::<impl u64>::wrapping_sub_signed": true,
  "num::<impl u8>::abs_diff": true,
  "num::<impl u8>::as_ascii": true,
  "num::<impl u8>::as_ascii_unchecked": true,
  "num::<impl u8>::as_ascii_unchecked::precondition_check": true,
  "num::<impl u8>::ascii_change_case_unchecked": true,
  "num::<impl u8>::bit_width": true,
  "num::<impl u8>::borrowing_sub": true,
  "num::<impl u8>::carrying_add": true,
  "num::<impl u8>::carrying_mul": true,
  "num::<impl u8>::carrying_mul_add": true,
  "num::<impl u8>::cast_signed": true,
  "num::<impl u8>::checked_add": true,
  "num::<impl u8>::checked_add_signed": true,
  "num::<impl u8>::checked_div": true,
  "num::<impl u8>::checked_div_euclid": true,
  "num::<impl u8>::checked_exact_div": true,
  "num::<impl u8>::checked_ilog": true,
  "num::<impl u8>::checked_ilog10": true,
  "num::<impl u8>::checked_ilog2": true,
  "num::<impl u8>::checked_mul": true,
  "num::<impl u8>::checked_neg": true,
  "num::<impl u8>::checked_next_multiple_of": true,
  "num::<impl u8>::checked_next_power_of_two": true,
  "num::<impl u8>::checked_pow": true,
  "num::<impl u8>::checked_rem": true,
  "num::<impl u8>::checked_rem_euclid": true,
  "num::<impl u8>::checked_shl": true,
  "num::<impl u8>::checked_shr": true,
  "num::<impl u8>::checked_signed_diff": true,
  "num::<impl u8>::checked_sub": true,
  "num::<impl u8>::checked_sub_signed": true,
  "num::<impl u8>::count_ones": true,
  "num::<impl u8>::count_zeros": true,
  "num::<impl u8>::div_ceil": true,
  "num::<impl u8>::div_euclid": true,
  "num::<impl u8>::div_floor": true,
  "num::<impl u8>::eq_ignore_ascii_case": true,
  "num::<impl u8>::escape_ascii": true,
  "num::<impl u8>::exact_div": true,
  "num::<impl u8>::exact_shl": true,
  "num::<impl u8>::exact_shr": true,
  "num::<impl u8>::from_be": true,
  "num::<impl u8>::from_be_bytes": true,
  "num::<impl u8>::from_le": true,
  "num::<impl u8>::from_le_bytes": true,
  "num::<impl u8>::from_ne_bytes": true,
  "num::<impl u8>::funnel_shl": true,
  "num::<impl u8>::funnel_shr": true,
  "num::<impl u8>::highest_one": true,
  "num::<impl u8>::ilog": true,
  "num::<impl u8>::ilog10": true,
  "num::<impl u8>::ilog2": true,
  "num::<impl u8>::is_ascii": true,
  "num::<impl u8>::is_ascii_alphabetic": true,
  "num::<impl u8>::is_ascii_alphanumeric": true,
  "num::<impl u8>::is_ascii_control": true,
  "num::<impl u8>::is_ascii_digit": true,
  "num::<impl u8>::is_ascii_graphic": true,
  "num::<impl u8>::is_ascii_hexdigit": true,
  "num::<impl u8>::is_ascii_lowercase": true,
  "num::<impl u8>::is_ascii_octdigit": true,
  "num::<impl u8>::is_ascii_punctuation": true,
  "num::<impl u8>::is_ascii_uppercase": true,
  "num::<impl u8>::is_ascii_whitespace": true,
  "num::<impl u8>::is_multiple_of": true,
  "num::<impl u8>::is_power_of_two": true,
  "num::<impl u8>::is_utf8_char_boundary": true,
  "num::<impl u8>::isolate_highest_one": true,
  "num::<impl u8>::isolate_lowest_one": true,
  "num::<impl u8>::isqrt": true,
  "num::<impl u8>::leading_ones": true,
  "num::<impl u8>::leading_zeros": true,
  "num::<impl u8>::lowest_one": true,
  "num::<impl u8>::make_ascii_lowercase": true,
  "num::<impl u8>::make_ascii_uppercase": true,
  "num::<impl u8>::max_value": true,
  "num::<impl u8>::midpoint": true,
  "num::<impl u8>::min_value": true,
  "num::<impl u8>::next_multiple_of": true,
  "num::<impl u8>::next_power_of_two": true,
  "num::<impl u8>::one_less_than_next_power_of_two": true,
  "num::<impl u8>::overflowing_add": true,
  "num::<impl u8>::overflowing_add_signed": true,
  "num::<impl u8>::overflowing_div": true,
  "num::<impl u8>::overflowing_div_euclid": true,
  "num::<impl u8>::overflowing_mul": true,
  "num::<impl u8>::overflowing_neg": true,
  "num::<impl u8>::overflowing_pow": true,
  "num::<impl u8>::overflowing_rem": true,
  "num::<impl u8>::overflowing_rem_euclid": true,
  "num::<impl u8>::overflowing_shl": true,
  "num::<impl u8>::overflowing_shr": true,
  "num::<impl u8>::overflowing_sub": true,
  "num::<impl u8>::overflowing_sub_signed": true,
  "num::<impl u8>::pow": true,
  "num::<impl u8>::rem_euclid": true,
  "num::<impl u8>::reverse_bits": true,
  "num::<impl u8>::rotate_left": true,
  "num::<impl u8>::rotate_right": true,
  "num::<impl u8>::saturating_add": true,
  "num::<impl u8>::saturating_add_signed": true,
  "num::<impl u8>::saturating_div": true,
  "num::<impl u8>::saturating_mul": true,
  "num::<impl u8>::saturating_pow": true,
  "num::<impl u8>::saturating_sub": true,
  "num::<impl u8>::saturating_sub_signed": true,
  "num::<impl u8>::strict_add": true,
  "num::<impl u8>::strict_add_signed": true,
  "num::<impl u8>::strict_div": true,
  "num::<impl u8>::strict_div_euclid": true,
  "num::<impl u8>::strict_mul": true,
  "num::<impl u8>::strict_neg": true,
  "num::<impl u8>::strict_pow": true,
  "num::<impl u8>::strict_rem": true,
  "num::<impl u8>::strict_rem_euclid": true,
  "num::<impl u8>::strict_shl": true,
  "num::<impl u8>::strict_shr": true,
  "num::<impl u8>::strict_sub": true,
  "num::<impl u8>::strict_sub_signed": true,
  "num::<impl u8>::swap_bytes": true,
  "num::<impl u8>::to_ascii_lowercase": true,
  "num::<impl u8>::to_ascii_uppercase": true,
  "num::<impl u8>::to_be": true,
  "num::<impl u8>::to_be_bytes": true,
  "num::<impl u8>::to_le": true,
  "num::<impl u8>::to_le_bytes": true,
  "num::<impl u8>::to_ne_bytes": true,
  "num::<impl u8>::trailing_ones": true,
  "num::<impl u8>::trailing_zeros": true,
  "num::<impl u8>::unbounded_shl": true,
  "num::<impl u8>::unbounded_shr": true,
  "num::<impl u8>::unchecked_add::precondition_check": true,
  "num::<impl u8>::unchecked_add::{closure#0}::{closure#1}::{closure#0}::precondition_check": true,
  "num::<impl u8>::unchecked_add::{closure#2}::{closure#0}::precondition_check": true,
  "num::<impl u8>::unchecked_add::{closure#3}::{closure#0}::precondition_check": true,
  "num::<impl u8>::unchecked_disjoint_bitor::precondition_check": true,
  "num::<impl u8>::unchecked_disjoint_bitor::{closure#0}::{closure#1}::{closure#0}::precondition_check": true,
  "num::<impl u8>::unchecked_disjoint_bitor::{closure#2}::{closure#0}::precondition_check": true,
  "num::<impl u8>::unchecked_disjoint_bitor::{closure#3}::{closure#0}::precondition_check": true,
  "num::<impl u8>::unchecked_exact_div": true,
  "num::<impl u8>::unchecked_exact_div::precondition_check": true,
  "num::<impl u8>::unchecked_exact_shl": true,
  "num::<impl u8>::unchecked_exact_shl::precondition_check": true,
  "num::<impl u8>::unchecked_exact_shr": true,
  "num::<impl u8>::unchecked_exact_shr::precondition_check": true,
  "num::<impl u8>::unchecked_mul::precondition_check": true,
  "num::<impl u8>::unchecked_mul::{closure#0}::{closure#1}::{closure#0}::precondition_check": true,
  "num::<impl u8>::unchecked_mul::{closure#2}::{closure#0}::precondition_check": true,
  "num::<impl u8>::unchecked_mul::{closure#3}::{closure#0}::precondition_check": true,
  "num::<impl u8>::unchecked_shl::precondition_check": true,
  "num::<impl u8>::unchecked_shl::{closure#0}::{closure#1}::{closure#0}::precondition_check": true,
  "num::<impl u8>::unchecked_shl::{closure#2}::{closure#0}::precondition_check": true,
  "num::<impl u8>::unchecked_shl::{closure#3}::{closure#0}::precondition_check": true,
  "num::<impl u8>::unchecked_shr::precondition_check": true,
  "num::<impl u8>::unchecked_shr::{closure#0}::{closure#1}::{closure#0}::precondition_check": true,
  "num::<impl u8>::unchecked_shr::{closure#2}::{closure#0}::precondition_check": true,
  "num::<impl u8>::unchecked_shr::{closure#3}::{closure#0}::precondition_check": true,
  "num::<impl u8>::unchecked_sub::precondition_check": true,
  "num::<impl u8>::unchecked_sub::{closure#0}::{closure#1}::{closure#0}::precondition_check": true,
  "num::<impl u8>::unchecked_sub::{closure#2}::{closure#0}::precondition_check": true,
  "num::<impl u8>::unchecked_sub::{closure#3}::{closure#0}::precondition_check": true,
  "num::<impl u8>::widening_mul": true,
  "num::<impl u8>::wrapping_add": true,
  "num::<impl u8>::wrapping_add_signed": true,
  "num::<impl u8>::wrapping_div": true,
  "num::<impl u8>::wrapping_div_euclid": true,
  "num::<impl u8>::wrapping_mul": true,
  "num::<impl u8>::wrapping_neg": true,
  "num::<impl u8>::wrapping_next_power_of_two": true,
  "num::<impl u8>::wrapping_pow": true,
  "num::<impl u8>::wrapping_rem": true,
  "num::<impl u8>::wrapping_rem_euclid": true,
  "num::<impl u8>::wrapping_sub": true,
  "num::<impl u8>::wrapping_sub_signed": true,
  "num::<impl usize>::abs_diff": true,
  "num::<impl usize>::bit_width": true,
  "num::<impl usize>::borrowing_sub": true,
  "num::<impl usize>::carrying_add": true,
  "num::<impl usize>::carrying_mul": true,
  "num::<impl usize>::carrying_mul_add": true,
  "num::<impl usize>::cast_signed": true,
  "num::<impl usize>::checked_add": true,
  "num::<impl usize>::checked_add_signed": true,
  "num::<impl usize>::checked_div": true,
  "num::<impl usize>::checked_div_euclid": true,
  "num::<impl usize>::checked_exact_div": true,
  "num::<impl usize>::checked_ilog": true,
  "num::<impl usize>::checked_ilog10": true,
  "num::<impl usize>::checked_ilog2": true,
  "num::<impl usize>::checked_mul": true,
  "num::<impl usize>::checked_neg": true,
  "num::<impl usize>::checked_next_multiple_of": true,
  "num::<impl usize>::checked_next_power_of_two": true,
  "num::<impl usize>::checked_pow": true,
  "num::<impl usize>::checked_rem": true,
  "num::<impl usize>::checked_rem_euclid": true,
  "num::<impl usize>::checked_shl": true,
  "num::<impl usize>::checked_shr": true,
  "num::<impl usize>::checked_signed_diff": true,
  "num::<impl usize>::checked_sub": true,
  "num::<impl usize>::checked_sub_signed": true,
  "num::<impl usize>::count_ones": true,
  "num::<impl usize>::count_zeros": true,
  "num::<impl usize>::div_ceil": true,
  "num::<impl usize>::div_euclid": true,
  "num::<impl usize>::div_floor": true,
  "num::<impl usize>::exact_div": true,
  "num::<impl usize>::exact_shl": true,
  "num::<impl usize>::exact_shr": true,
  "num::<impl usize>::from_be": true,
  "num::<impl usize>::from_be_bytes": true,
  "num::<impl usize>::from_le": true,
  "num::<impl usize>::from_le_bytes": true,
  "num::<impl usize>::from_ne_bytes": true,
  "num::<impl usize>::funnel_shl": true,
  "num::<impl usize>::funnel_shr": true,
  "num::<impl usize>::highest_one": true,
  "num::<impl usize>::ilog": true,
  "num::<impl usize>::ilog10": true,
  "num::<impl usize>::ilog2": true,
  "num::<impl usize>::is_multiple_of": true,
  "num::<impl usize>::is_power_of_two": true,
  "num::<impl usize>::isolate_highest_one": true,
  "num::<impl usize>::isolate_lowest_one": true,
  "num::<impl usize>::isqrt": true,
  "num::<impl usize>::leading_ones": true,
  "num::<impl usize>::leading_zeros": true,
  "num::<impl usize>::lowest_one": true,
  "num::<impl usize>::max_value": true,
  "num::<impl usize>::midpoint": true,
  "num::<impl usize>::min_value": true,
  "num::<impl usize>::next_multiple_of": true,
  "num::<impl usize>::next_power_of_two": true,
  "num::<impl usize>::one_less_than_next_power_of_two": true,
  "num::<impl usize>::overflowing_add": true,
  "num::<impl usize>::overflowing_add_signed": true,
  "num::<impl usize>::overflowing_div": true,
  "num::<impl usize>::overflowing_div_euclid": true,
  "num::<impl usize>::overflowing_mul": true,
  "num::<impl usize>::overflowing_neg": true,
  "num::<impl usize>::overflowing_pow": true,
  "num::<impl usize>::overflowing_rem": true,
  "num::<impl usize>::overflowing_rem_euclid": true,
  "num::<impl usize>::overflowing_shl": true,
  "num::<impl usize>::overflowing_shr": true,
  "num::<impl usize>::overflowing_sub": true,
  "num::<impl usize>::overflowing_sub_signed": true,
  "num::<impl usize>::pow": true,
  "num::<impl usize>::rem_euclid": true,
  "num::<impl usize>::repeat_u16": true,
  "num::<impl usize>::repeat_u8": true,
  "num::<impl usize>::reverse_bits": true,
  "num::<impl usize>::rotate_left": true,
  "num::<impl usize>::rotate_right": true,
  "num::<impl usize>::saturating_add": true,
  "num::<impl usize>::saturating_add_signed": true,
  "num::<impl usize>::saturating_div": true,
  "num::<impl usize>::saturating_mul": true,
  "num::<impl usize>::saturating_pow": true,
  "num::<impl usize>::saturating_sub": true,
  "num::<impl usize>::saturating_sub_signed": true,
  "num::<impl usize>::strict_add": true,
  "num::<impl usize>::strict_add_signed": true,
  "num::<impl usize>::strict_div": true,
  "num::<impl usize>::strict_div_euclid": true,
  "num::<impl usize>::strict_mul": true,
  "num::<impl usize>::strict_neg": true,
  "num::<impl usize>::strict_pow": true,
  "num::<impl usize>::strict_rem": true,
  "num::<impl usize>::strict_rem_euclid": true,
  "num::<impl usize>::strict_shl": true,
  "num::<impl usize>::strict_shr": true,
  "num::<impl usize>::strict_sub": true,
  "num::<impl usize>::strict_sub_signed": true,
  "num::<impl usize>::swap_bytes": true,
  "num::<impl usize>::to_be": true,
  "num::<impl usize>::to_be_bytes": true,
  "num::<impl usize>::to_le": true,
  "num::<impl usize>::to_le_bytes": true,
  "num::<impl usize>::to_ne_bytes": true,
  "num::<impl usize>::trailing_ones": true,
  "num::<impl usize>::trailing_zeros": true,
  "num::<impl usize>::unbounded_shl": true,
  "num::<impl usize>::unbounded_shr": true,
  "num::<impl usize>::unchecked_add::precondition_check": true,
  "num::<impl usize>::unchecked_add::{closure#0}::{closure#1}::{closure#0}::precondition_check": true,
  "num::<impl usize>::unchecked_add::{closure#2}::{closure#0}::precondition_check": true,
  "num::<impl usize>::unchecked_add::{closure#3}::{closure#0}::precondition_check": true,
  "num::<impl usize>::unchecked_disjoint_bitor::precondition_check": true,
  "num::<impl usize>::unchecked_disjoint_bitor::{closure#0}::{closure#1}::{closure#0}::precondition_check": true,
  "num::<impl usize>::unchecked_disjoint_bitor::{closure#2}::{closure#0}::precondition_check": true,
  "num::<impl usize>::unchecked_disjoint_bitor::{closure#3}::{closure#0}::precondition_check": true,
  "num::<impl usize>::unchecked_exact_div": true,
  "num::<impl usize>::unchecked_exact_div::precondition_check": true,
  "num::<impl usize>::unchecked_exact_shl": true,
  "num::<impl usize>::unchecked_exact_shl::precondition_check": true,
  "num::<impl usize>::unchecked_exact_shr": true,
  "num::<impl usize>::unchecked_exact_shr::precondition_check": true,
  "num::<impl usize>::unchecked_mul::precondition_check": true,
  "num::<impl usize>::unchecked_mul::{closure#0}::{closure#1}::{closure#0}::precondition_check": true,
  "num::<impl usize>::unchecked_mul::{closure#2}::{closure#0}::precondition_check": true,
  "num::<impl usize>::unchecked_mul::{closure#3}::{closure#0}::precondition_check": true,
  "num::<impl usize>::unchecked_shl::precondition_check": true,
  "num::<impl usize>::unchecked_shl::{closure#0}::{closure#1}::{closure#0}::precondition_check": true,
  "num::<impl usize>::unchecked_shl::{closure#2}::{closure#0}::precondition_check": true,
  "num::<impl usize>::unchecked_shl::{closure#3}::{closure#0}::precondition_check": true,
  "num::<impl usize>::unchecked_shr::precondition_check": true,
  "num::<impl usize>::unchecked_shr::{closure#0}::{closure#1}::{closure#0}::precondition_check": true,
  "num::<impl usize>::unchecked_shr::{closure#2}::{closure#0}::precondition_check": true,
  "num::<impl usize>::unchecked_shr::{closure#3}::{closure#0}::precondition_check": true,
  "num::<impl usize>::unchecked_sub::precondition_check": true,
  "num::<impl usize>::unchecked_sub::{closure#0}::{closure#1}::{closure#0}::precondition_check": true,
  "num::<impl usize>::unchecked_sub::{closure#2}::{closure#0}::precondition_check": true,
  "num::<impl usize>::unchecked_sub::{closure#3}::{closure#0}::precondition_check": true,
  "num::<impl usize>::widening_mul": true,
  "num::<impl usize>::wrapping_add": true,
  "num::<impl usize>::wrapping_add_signed": true,
  "num::<impl usize>::wrapping_div": true,
  "num::<impl usize>::wrapping_div_euclid": true,
  "num::<impl usize>::wrapping_mul": true,
  "num::<impl usize>::wrapping_neg": true,
  "num::<impl usize>::wrapping_next_power_of_two": true,
  "num::<impl usize>::wrapping_pow": true,
  "num::<impl usize>::wrapping_rem": true,
  "num::<impl usize>::wrapping_rem_euclid": true,
  "num::<impl usize>::wrapping_sub": true,
  "num::<impl usize>::wrapping_sub_signed": true,
  "num::bignum::Big32x40::add": true,
  "num::bignum::Big32x40::add_small": true,
  "num::bignum::Big32x40::bit_length": true,
  "num::bignum::Big32x40::digits": true,
  "num::bignum::Big32x40::div_rem": true,
  "num::bignum::Big32x40::div_rem_small": true,
  "num::bignum::Big32x40::from_small": true,
  "num::bignum::Big32x40::from_u64": true,
  "num::bignum::Big32x40::get_bit": true,
  "num::bignum::Big32x40::is_zero": true,
  "num::bignum::Big32x40::mul_pow2": true,
  "num::bignum::Big32x40::mul_pow5": true,
  "num::bignum::Big32x40::mul_small": true,
  "num::bignum::Big32x40::sub": true,
  "num::bignum::tests::Big8x3::add": true,
  "num::bignum::tests::Big8x3::add_small": true,
  "num::bignum::tests::Big8x3::bit_length": true,
  "num::bignum::tests::Big8x3::digits": true,
  "num::bignum::tests::Big8x3::div_rem": true,
  "num::bignum::tests::Big8x3::div_rem_small": true,
  "num::bignum::tests::Big8x3::from_small": true,
  "num::bignum::tests::Big8x3::from_u64": true,
  "num::bignum::tests::Big8x3::get_bit": true,
  "num::bignum::tests::Big8x3::is_zero": true,
  "num::bignum::tests::Big8x3::mul_pow2": true,
  "num::bignum::tests::Big8x3::mul_pow5": true,
  "num::bignum::tests::Big8x3::mul_small": true,
  "num::bignum::tests::Big8x3::sub": true,
  "num::dec2flt::common::BiasedFp::zero_pow2": true,
  "num::dec2flt::common::is_8digits": true,
  "num::dec2flt::decimal_seq::DecimalSeq::left_shift": true,
  "num::dec2flt::decimal_seq::DecimalSeq::right_shift": true,
  "num::dec2flt::decimal_seq::DecimalSeq::round": true,
  "num::dec2flt::decimal_seq::DecimalSeq::trim": true,
  "num::dec2flt::decimal_seq::DecimalSeq::try_add_digit": true,
  "num::dec2flt::float::pow2_to_pow10": true,
  "num::dec2flt::lemire::compute_product_approx": true,
  "num::dec2flt::lemire::full_multiplication": true,
  "num::dec2flt::lemire::power": true,
  "num::dec2flt::parse::parse_8digits": true,
  "num::dec2flt::pfe_empty": true,
  "num::dec2flt::pfe_invalid": true,
  "num::diy_float::Fp::mul": true,
  "num::diy_float::Fp::normalize": true,
  "num::diy_float::Fp::normalize_to": true,
  "num::error::ParseIntError::kind": true,
  "num::flt2dec::determine_sign": true,
  "num::flt2dec::estimate_max_buf_len": true,
  "num::flt2dec::estimator::estimate_scaling_factor": true,
  "num::flt2dec::strategy::dragon::div_2pow10": true,
  "num::flt2dec::strategy::dragon::div_rem_upto_16": true,
  "num::flt2dec::strategy::dragon::mul_pow10": true,
  "num::flt2dec::strategy::grisu::cached_power": true,
  "num::flt2dec::strategy::grisu::max_pow10_no_more_than": true,
  "num::from_ascii_radix_panic": true,
  "num::from_ascii_radix_panic::do_panic": true,
  "num::from_ascii_radix_panic::do_panic::compiletime": true,
  "num::from_ascii_radix_panic::do_panic::runtime": true,
  "num::int_log10::i128": true,
  "num::int_log10::i16": true,
  "num::int_log10::i32": true,
  "num::int_log10::i64": true,
  "num::int_log10::i8": true,
  "num::int_log10::less_than_5": true,
  "num::int_log10::panic_for_nonpositive_argument": true,
  "num::int_log10::u128": true,
  "num::int_log10::u16": true,
  "num::int_log10::u32": true,
  "num::int_log10::u64": true,
  "num::int_log10::u8": true,
  "num::int_log10::usize": true,
  "num::int_sqrt::i128": true,
  "num::int_sqrt::i16": true,
  "num::int_sqrt::i32": true,
  "num::int_sqrt::i64": true,
  "num::int_sqrt::i8": true,
  "num::int_sqrt::panic_for_negative_argument": true,
  "num::int_sqrt::u128": true,
  "num::int_sqrt::u128_stages": true,
  "num::int_sqrt::u16": true,
  "num::int_sqrt::u16_stages": true,
  "num::int_sqrt::u32": true,
  "num::int_sqrt::u32_stages": true,
  "num::int_sqrt::u64": true,
  "num::int_sqrt::u64_stages": true,
  "num::int_sqrt::u8": true,
  "num::niche_types::CodePointInner::as_inner": true,
  "num::niche_types::CodePointInner::new": true,
  "num::niche_types::CodePointInner::new_unchecked": true,
  "num::niche_types::I32NotAllOnes::as_inner": true,
  "num::niche_types::I32NotAllOnes::new": true,
  "num::niche_types::I32NotAllOnes::new_unchecked": true,
  "num::niche_types::I64NotAllOnes::as_inner": true,
  "num::niche_types::I64NotAllOnes::new": true,
  "num::niche_types::I64NotAllOnes::new_unchecked": true,
  "num::niche_types::Nanoseconds::as_inner": true,
  "num::niche_types::Nanoseconds::new": true,
  "num::niche_types::Nanoseconds::new_unchecked": true,
  "num::niche_types::NonZeroCharInner::as_inner": true,
  "num::niche_types::NonZeroCharInner::new": true,
  "num::niche_types::NonZeroCharInner::new_unchecked": true,
  "num::niche_types::NonZeroI128Inner::as_inner": true,
  "num::niche_types::NonZeroI128Inner::new": true,
  "num::niche_types::NonZeroI128Inner::new_unchecked": true,
  "num::niche_types::NonZeroI16Inner::as_inner": true,
  "num::niche_types::NonZeroI16Inner::new": true,
  "num::niche_types::NonZeroI16Inner::new_unchecked": true,
  "num::niche_types::NonZeroI32Inner::as_inner": true,
  "num::niche_types::NonZeroI32Inner::new": true,
  "num::niche_types::NonZeroI32Inner::new_unchecked": true,
  "num::niche_types::NonZeroI64Inner::as_inner": true,
  "num::niche_types::NonZeroI64Inner::new": true,
  "num::niche_types::NonZeroI64Inner::new_unchecked": true,
  "num::niche_types::NonZeroI8Inner::as_inner": true,
  "num::niche_types::NonZeroI8Inner::new": true,
  "num::niche_types::NonZeroI8Inner::new_unchecked": true,
  "num::niche_types::NonZeroIsizeInner::as_inner": true,
  "num::niche_types::NonZeroIsizeInner::new": true,
  "num::niche_types::NonZeroIsizeInner::new_unchecked": true,
  "num::niche_types::NonZeroU128Inner::as_inner": true,
  "num::niche_types::NonZeroU128Inner::new": true,
  "num::niche_types::NonZeroU128Inner::new_unchecked": true,
  "num::niche_types::NonZeroU16Inner::as_inner": true,
  "num::niche_types::NonZeroU16Inner::new": true,
  "num::niche_types::NonZeroU16Inner::new_unchecked": true,
  "num::niche_types::NonZeroU32Inner::as_inner": true,
  "num::niche_types::NonZeroU32Inner::new": true,
  "num::niche_types::NonZeroU32Inner::new_unchecked": true,
  "num::niche_types::NonZeroU64Inner::as_inner": true,
  "num::niche_types::NonZeroU64Inner::new": true,
  "num::niche_types::NonZeroU64Inner::new_unchecked": true,
  "num::niche_types::NonZeroU8Inner::as_inner": true,
  "num::niche_types::NonZeroU8Inner::new": true,
  "num::niche_types::NonZeroU8Inner::new_unchecked": true,
  "num::niche_types::NonZeroUsizeInner::as_inner": true,
  "num::niche_types::NonZeroUsizeInner::new": true,
  "num::niche_types::NonZeroUsizeInner::new_unchecked": true,
  "num::niche_types::U32NotAllOnes::as_inner": true,
  "num::niche_types::U32NotAllOnes::new": true,
  "num::niche_types::U32NotAllOnes::new_unchecked": true,
  "num::niche_types::U64NotAllOnes::as_inner": true,
  "num::niche_types::U64NotAllOnes::new": true,
  "num::niche_types::U64NotAllOnes::new_unchecked": true,
  "num::niche_types::UsizeNoHighBit::as_inner": true,
  "num::niche_types::UsizeNoHighBit::new": true,
  "num::niche_types::UsizeNoHighBit::new_unchecked": true,
  "num::nonzero::<impl ops::arith::Div<num::nonzero::NonZero<u128>> for u128>::div": true,
  "num::nonzero::<impl ops::arith::Div<num::nonzero::NonZero<u16>> for u16>::div": true,
  "num::nonzero::<impl ops::arith::Div<num::nonzero::NonZero<u32>> for u32>::div": true,
  "num::nonzero::<impl ops::arith::Div<num::nonzero::NonZero<u64>> for u64>::div": true,
  "num::nonzero::<impl ops::arith::Div<num::nonzero::NonZero<u8>> for u8>::div": true,
  "num::nonzero::<impl ops::arith::Div<num::nonzero::NonZero<usize>> for usize>::div": true,
  "num::nonzero::<impl ops::arith::DivAssign<num::nonzero::NonZero<u128>> for u128>::div_assign": true,
  "num::nonzero::<impl ops::arith::DivAssign<num::nonzero::NonZero<u16>> for u16>::div_assign": true,
  "num::nonzero::<impl ops::arith::DivAssign<num::nonzero::NonZero<u32>> for u32>::div_assign": true,
  "num::nonzero::<impl ops::arith::DivAssign<num::nonzero::NonZero<u64>> for u64>::div_assign": true,
  "num::nonzero::<impl ops::arith::DivAssign<num::nonzero::NonZero<u8>> for u8>::div_assign": true,
  "num::nonzero::<impl ops::arith::DivAssign<num::nonzero::NonZero<usize>> for usize>::div_assign": true,
  "num::nonzero::<impl ops::arith::Rem<num::nonzero::NonZero<u128>> for u128>::rem": true,
  "num::nonzero::<impl ops::arith::Rem<num::nonzero::NonZero<u16>> for u16>::rem": true,
  "num::nonzero::<impl ops::arith::Rem<num::nonzero::NonZero<u32>> for u32>::rem": true,
  "num::nonzero::<impl ops::arith::Rem<num::nonzero::NonZero<u64>> for u64>::rem": true,
  "num::nonzero::<impl ops::arith::Rem<num::nonzero::NonZero<u8>> for u8>::rem": true,
  "num::nonzero::<impl ops::arith::Rem<num::nonzero::NonZero<usize>> for usize>::rem": true,
  "num::nonzero::<impl ops::arith::RemAssign<num::nonzero::NonZero<u128>> for u128>::rem_assign": true,
  "num::nonzero::<impl ops::arith::RemAssign<num::nonzero::NonZero<u16>> for u16>::rem_assign": true,
  "num::nonzero::<impl ops::arith::RemAssign<num::nonzero::NonZero<u32>> for u32>::rem_assign": true,
  "num::nonzero::<impl ops::arith::RemAssign<num::nonzero::NonZero<u64>> for u64>::rem_assign": true,
  "num::nonzero::<impl ops::arith::RemAssign<num::nonzero::NonZero<u8>> for u8>::rem_assign": true,
  "num::nonzero::<impl ops::arith::RemAssign<num::nonzero::NonZero<usize>> for usize>::rem_assign": true,
  "num::nonzero::NonZero::<T>::from_mut_unchecked::precondition_check": true,
  "num::nonzero::NonZero::<T>::from_mut_unchecked::{closure#0}::{closure#1}::{closure#1}::precondition_check": true,
  "num::nonzero::NonZero::<T>::from_mut_unchecked::{closure#2}::{closure#1}::precondition_check": true,
  "num::nonzero::NonZero::<T>::from_mut_unchecked::{closure#3}::{closure#1}::precondition_check": true,
  "num::nonzero::NonZero::<T>::new_unchecked::precondition_check": true,
  "num::nonzero::NonZero::<T>::new_unchecked::{closure#0}::{closure#1}::{closure#2}::precondition_check": true,
  "num::nonzero::NonZero::<T>::new_unchecked::{closure#2}::{closure#2}::precondition_check": true,
  "num::nonzero::NonZero::<T>::new_unchecked::{closure#3}::{closure#1}::precondition_check": true,
  "num::nonzero::NonZero::<i128>::abs": true,
  "num::nonzero::NonZero::<i128>::cast_unsigned": true,
  "num::nonzero::NonZero::<i128>::checked_abs": true,
  "num::nonzero::NonZero::<i128>::checked_mul": true,
  "num::nonzero::NonZero::<i128>::checked_neg": true,
  "num::nonzero::NonZero::<i128>::checked_pow": true,
  "num::nonzero::NonZero::<i128>::from_be": true,
  "num::nonzero::NonZero::<i128>::from_le": true,
  "num::nonzero::NonZero::<i128>::highest_one": true,
  "num::nonzero::NonZero::<i128>::is_negative": true,
  "num::nonzero::NonZero::<i128>::is_positive": true,
  "num::nonzero::NonZero::<i128>::isolate_highest_one": true,
  "num::nonzero::NonZero::<i128>::isolate_lowest_one": true,
  "num::nonzero::NonZero::<i128>::leading_zeros": true,
  "num::nonzero::NonZero::<i128>::lowest_one": true,
  "num::nonzero::NonZero::<i128>::overflowing_abs": true,
  "num::nonzero::NonZero::<i128>::overflowing_neg": true,
  "num::nonzero::NonZero::<i128>::reverse_bits": true,
  "num::nonzero::NonZero::<i128>::saturating_abs": true,
  "num::nonzero::NonZero::<i128>::saturating_mul": true,
  "num::nonzero::NonZero::<i128>::saturating_neg": true,
  "num::nonzero::NonZero::<i128>::saturating_pow": true,
  "num::nonzero::NonZero::<i128>::swap_bytes": true,
  "num::nonzero::NonZero::<i128>::to_be": true,
  "num::nonzero::NonZero::<i128>::to_le": true,
  "num::nonzero::NonZero::<i128>::trailing_zeros": true,
  "num::nonzero::NonZero::<i128>::unsigned_abs": true,
  "num::nonzero::NonZero::<i128>::wrapping_abs": true,
  "num::nonzero::NonZero::<i128>::wrapping_neg": true,
  "num::nonzero::NonZero::<i16>::abs": true,
  "num::nonzero::NonZero::<i16>::cast_unsigned": true,
  "num::nonzero::NonZero::<i16>::checked_abs": true,
  "num::nonzero::NonZero::<i16>::checked_mul": true,
  "num::nonzero::NonZero::<i16>::checked_neg": true,
  "num::nonzero::NonZero::<i16>::checked_pow": true,
  "num::nonzero::NonZero::<i16>::from_be": true,
  "num::nonzero::NonZero::<i16>::from_le": true,
  "num::nonzero::NonZero::<i16>::highest_one": true,
  "num::nonzero::NonZero::<i16>::is_negative": true,
  "num::nonzero::NonZero::<i16>::is_positive": true,
  "num::nonzero::NonZero::<i16>::isolate_highest_one": true,
  "num::nonzero::NonZero::<i16>::isolate_lowest_one": true,
  "num::nonzero::NonZero::<i16>::leading_zeros": true,
  "num::nonzero::NonZero::<i16>::lowest_one": true,
  "num::nonzero::NonZero::<i16>::overflowing_abs": true,
  "num::nonzero::NonZero::<i16>::overflowing_neg": true,
  "num::nonzero::NonZero::<i16>::reverse_bits": true,
  "num::nonzero::NonZero::<i16>::saturating_abs": true,
  "num::nonzero::NonZero::<i16>::saturating_mul": true,
  "num::nonzero::NonZero::<i16>::saturating_neg": true,
  "num::nonzero::NonZero::<i16>::saturating_pow": true,
  "num::nonzero::NonZero::<i16>::swap_bytes": true,
  "num::nonzero::NonZero::<i16>::to_be": true,
  "num::nonzero::NonZero::<i16>::to_le": true,
  "num::nonzero::NonZero::<i16>::trailing_zeros": true,
  "num::nonzero::NonZero::<i16>::unsigned_abs": true,
  "num::nonzero::NonZero::<i16>::wrapping_abs": true,
  "num::nonzero::NonZero::<i16>::wrapping_neg": true,
  "num::nonzero::NonZero::<i32>::abs": true,
  "num::nonzero::NonZero::<i32>::cast_unsigned": true,
  "num::nonzero::NonZero::<i32>::checked_abs": true,
  "num::nonzero::NonZero::<i32>::checked_mul": true,
  "num::nonzero::NonZero::<i32>::checked_neg": true,
  "num::nonzero::NonZero::<i32>::checked_pow": true,
  "num::nonzero::NonZero::<i32>::from_be": true,
  "num::nonzero::NonZero::<i32>::from_le": true,
  "num::nonzero::NonZero::<i32>::highest_one": true,
  "num::nonzero::NonZero::<i32>::is_negative": true,
  "num::nonzero::NonZero::<i32>::is_positive": true,
  "num::nonzero::NonZero::<i32>::isolate_highest_one": true,
  "num::nonzero::NonZero::<i32>::isolate_lowest_one": true,
  "num::nonzero::NonZero::<i32>::leading_zeros": true,
  "num::nonzero::NonZero::<i32>::lowest_one": true,
  "num::nonzero::NonZero::<i32>::overflowing_abs": true,
  "num::nonzero::NonZero::<i32>::overflowing_neg": true,
  "num::nonzero::NonZero::<i32>::reverse_bits": true,
  "num::nonzero::NonZero::<i32>::saturating_abs": true,
  "num::nonzero::NonZero::<i32>::saturating_mul": true,
  "num::nonzero::NonZero::<i32>::saturating_neg": true,
  "num::nonzero::NonZero::<i32>::saturating_pow": true,
  "num::nonzero::NonZero::<i32>::swap_bytes": true,
  "num::nonzero::NonZero::<i32>::to_be": true,
  "num::nonzero::NonZero::<i32>::to_le": true,
  "num::nonzero::NonZero::<i32>::trailing_zeros": true,
  "num::nonzero::NonZero::<i32>::unsigned_abs": true,
  "num::nonzero::NonZero::<i32>::wrapping_abs": true,
  "num::nonzero::NonZero::<i32>::wrapping_neg": true,
  "num::nonzero::NonZero::<i64>::abs": true,
  "num::nonzero::NonZero::<i64>::cast_unsigned": true,
  "num::nonzero::NonZero::<i64>::checked_abs": true,
  "num::nonzero::NonZero::<i64>::checked_mul": true,
  "num::nonzero::NonZero::<i64>::checked_neg": true,
  "num::nonzero::NonZero::<i64>::checked_pow": true,
  "num::nonzero::NonZero::<i64>::from_be": true,
  "num::nonzero::NonZero::<i64>::from_le": true,
  "num::nonzero::NonZero::<i64>::highest_one": true,
  "num::nonzero::NonZero::<i64>::is_negative": true,
  "num::nonzero::NonZero::<i64>::is_positive": true,
  "num::nonzero::NonZero::<i64>::isolate_highest_one": true,
  "num::nonzero::NonZero::<i64>::isolate_lowest_one": true,
  "num::nonzero::NonZero::<i64>::leading_zeros": true,
  "num::nonzero::NonZero::<i64>::lowest_one": true,
  "num::nonzero::NonZero::<i64>::overflowing_abs": true,
  "num::nonzero::NonZero::<i64>::overflowing_neg": true,
  "num::nonzero::NonZero::<i64>::reverse_bits": true,
  "num::nonzero::NonZero::<i64>::saturating_abs": true,
  "num::nonzero::NonZero::<i64>::saturating_mul": true,
  "num::nonzero::NonZero::<i64>::saturating_neg": true,
  "num::nonzero::NonZero::<i64>::saturating_pow": true,
  "num::nonzero::NonZero::<i64>::swap_bytes": true,
  "num::nonzero::NonZero::<i64>::to_be": true,
  "num::nonzero::NonZero::<i64>::to_le": true,
  "num::nonzero::NonZero::<i64>::trailing_zeros": true,
  "num::nonzero::NonZero::<i64>::unsigned_abs": true,
  "num::nonzero::NonZero::<i64>::wrapping_abs": true,
  "num::nonzero::NonZero::<i64>::wrapping_neg": true,
  "num::nonzero::NonZero::<i8>::abs": true,
  "num::nonzero::NonZero::<i8>::cast_unsigned": true,
  "num::nonzero::NonZero::<i8>::checked_abs": true,
  "num::nonzero::NonZero::<i8>::checked_mul": true,
  "num::nonzero::NonZero::<i8>::checked_neg": true,
  "num::nonzero::NonZero::<i8>::checked_pow": true,
  "num::nonzero::NonZero::<i8>::from_be": true,
  "num::nonzero::NonZero::<i8>::from_le": true,
  "num::nonzero::NonZero::<i8>::highest_one": true,
  "num::nonzero::NonZero::<i8>::is_negative": true,
  "num::nonzero::NonZero::<i8>::is_positive": true,
  "num::nonzero::NonZero::<i8>::isolate_highest_one": true,
  "num::nonzero::NonZero::<i8>::isolate_lowest_one": true,
  "num::nonzero::NonZero::<i8>::leading_zeros": true,
  "num::nonzero::NonZero::<i8>::lowest_one": true,
  "num::nonzero::NonZero::<i8>::overflowing_abs": true,
  "num::nonzero::NonZero::<i8>::overflowing_neg": true,
  "num::nonzero::NonZero::<i8>::reverse_bits": true,
  "num::nonzero::NonZero::<i8>::saturating_abs": true,
  "num::nonzero::NonZero::<i8>::saturating_mul": true,
  "num::nonzero::NonZero::<i8>::saturating_neg": true,
  "num::nonzero::NonZero::<i8>::saturating_pow": true,
  "num::nonzero::NonZero::<i8>::swap_bytes": true,
  "num::nonzero::NonZero::<i8>::to_be": true,
  "num::nonzero::NonZero::<i8>::to_le": true,
  "num::nonzero::NonZero::<i8>::trailing_zeros": true,
  "num::nonzero::NonZero::<i8>::unsigned_abs": true,
  "num::nonzero::NonZero::<i8>::wrapping_abs": true,
  "num::nonzero::NonZero::<i8>::wrapping_neg": true,
  "num::nonzero::NonZero::<isize>::abs": true,
  "num::nonzero::NonZero::<isize>::cast_unsigned": true,
  "num::nonzero::NonZero::<isize>::checked_abs": true,
  "num::nonzero::NonZero::<isize>::checked_mul": true,
  "num::nonzero::NonZero::<isize>::checked_neg": true,
  "num::nonzero::NonZero::<isize>::checked_pow": true,
  "num::nonzero::NonZero::<isize>::from_be": true,
  "num::nonzero::NonZero::<isize>::from_le": true,
  "num::nonzero::NonZero::<isize>::highest_one": true,
  "num::nonzero::NonZero::<isize>::is_negative": true,
  "num::nonzero::NonZero::<isize>::is_positive": true,
  "num::nonzero::NonZero::<isize>::isolate_highest_one": true,
  "num::nonzero::NonZero::<isize>::isolate_lowest_one": true,
  "num::nonzero::NonZero::<isize>::leading_zeros": true,
  "num::nonzero::NonZero::<isize>::lowest_one": true,
  "num::nonzero::NonZero::<isize>::overflowing_abs": true,
  "num::nonzero::NonZero::<isize>::overflowing_neg": true,
  "num::nonzero::NonZero::<isize>::reverse_bits": true,
  "num::nonzero::NonZero::<isize>::saturating_abs": true,
  "num::nonzero::NonZero::<isize>::saturating_mul": true,
  "num::nonzero::NonZero::<isize>::saturating_neg": true,
  "num::nonzero::NonZero::<isize>::saturating_pow": true,
  "num::nonzero::NonZero::<isize>::swap_bytes": true,
  "num::nonzero::NonZero::<isize>::to_be": true,
  "num::nonzero::NonZero::<isize>::to_le": true,
  "num::nonzero::NonZero::<isize>::trailing_zeros": true,
  "num::nonzero::NonZero::<isize>::unsigned_abs": true,
  "num::nonzero::NonZero::<isize>::wrapping_abs": true,
  "num::nonzero::NonZero::<isize>::wrapping_neg": true,
  "num::nonzero::NonZero::<u128>::cast_signed": true,
  "num::nonzero::NonZero::<u128>::checked_add": true,
  "num::nonzero::NonZero::<u128>::checked_mul": true,
  "num::nonzero::NonZero::<u128>::checked_next_power_of_two": true,
  "num::nonzero::NonZero::<u128>::checked_pow": true,
  "num::nonzero::NonZero::<u128>::div_ceil": true,
  "num::nonzero::NonZero::<u128>::from_be": true,
  "num::nonzero::NonZero::<u128>::from_le": true,
  "num::nonzero::NonZero::<u128>::highest_one": true,
  "num::nonzero::NonZero::<u128>::ilog10": true,
  "num::nonzero::NonZero::<u128>::ilog2": true,
  "num::nonzero::NonZero::<u128>::is_power_of_two": true,
  "num::nonzero::NonZero::<u128>::isolate_highest_one": true,
  "num::nonzero::NonZero::<u128>::isolate_lowest_one": true,
  "num::nonzero::NonZero::<u128>::isqrt": true,
  "num::nonzero::NonZero::<u128>::leading_zeros": true,
  "num::nonzero::NonZero::<u128>::lowest_one": true,
  "num::nonzero::NonZero::<u128>::midpoint": true,
  "num::nonzero::NonZero::<u128>::reverse_bits": true,
  "num::nonzero::NonZero::<u128>::saturating_add": true,
  "num::nonzero::NonZero::<u128>::saturating_mul": true,
  "num::nonzero::NonZero::<u128>::saturating_pow": true,
  "num::nonzero::NonZero::<u128>::swap_bytes": true,
  "num::nonzero::NonZero::<u128>::to_be": true,
  "num::nonzero::NonZero::<u128>::to_le": true,
  "num::nonzero::NonZero::<u128>::trailing_zeros": true,
  "num::nonzero::NonZero::<u16>::cast_signed": true,
  "num::nonzero::NonZero::<u16>::checked_add": true,
  "num::nonzero::NonZero::<u16>::checked_mul": true,
  "num::nonzero::NonZero::<u16>::checked_next_power_of_two": true,
  "num::nonzero::NonZero::<u16>::checked_pow": true,
  "num::nonzero::NonZero::<u16>::div_ceil": true,
  "num::nonzero::NonZero::<u16>::from_be": true,
  "num::nonzero::NonZero::<u16>::from_le": true,
  "num::nonzero::NonZero::<u16>::highest_one": true,
  "num::nonzero::NonZero::<u16>::ilog10": true,
  "num::nonzero::NonZero::<u16>::ilog2": true,
  "num::nonzero::NonZero::<u16>::is_power_of_two": true,
  "num::nonzero::NonZero::<u16>::isolate_highest_one": true,
  "num::nonzero::NonZero::<u16>::isolate_lowest_one": true,
  "num::nonzero::NonZero::<u16>::isqrt": true,
  "num::nonzero::NonZero::<u16>::leading_zeros": true,
  "num::nonzero::NonZero::<u16>::lowest_one": true,
  "num::nonzero::NonZero::<u16>::midpoint": true,
  "num::nonzero::NonZero::<u16>::reverse_bits": true,
  "num::nonzero::NonZero::<u16>::saturating_add": true,
  "num::nonzero::NonZero::<u16>::saturating_mul": true,
  "num::nonzero::NonZero::<u16>::saturating_pow": true,
  "num::nonzero::NonZero::<u16>::swap_bytes": true,
  "num::nonzero::NonZero::<u16>::to_be": true,
  "num::nonzero::NonZero::<u16>::to_le": true,
  "num::nonzero::NonZero::<u16>::trailing_zeros": true,
  "num::nonzero::NonZero::<u32>::cast_signed": true,
  "num::nonzero::NonZero::<u32>::checked_add": true,
  "num::nonzero::NonZero::<u32>::checked_mul": true,
  "num::nonzero::NonZero::<u32>::checked_next_power_of_two": true,
  "num::nonzero::NonZero::<u32>::checked_pow": true,
  "num::nonzero::NonZero::<u32>::div_ceil": true,
  "num::nonzero::NonZero::<u32>::from_be": true,
  "num::nonzero::NonZero::<u32>::from_le": true,
  "num::nonzero::NonZero::<u32>::highest_one": true,
  "num::nonzero::NonZero::<u32>::ilog10": true,
  "num::nonzero::NonZero::<u32>::ilog2": true,
  "num::nonzero::NonZero::<u32>::is_power_of_two": true,
  "num::nonzero::NonZero::<u32>::isolate_highest_one": true,
  "num::nonzero::NonZero::<u32>::isolate_lowest_one": true,
  "num::nonzero::NonZero::<u32>::isqrt": true,
  "num::nonzero::NonZero::<u32>::leading_zeros": true,
  "num::nonzero::NonZero::<u32>::lowest_one": true,
  "num::nonzero::NonZero::<u32>::midpoint": true,
  "num::nonzero::NonZero::<u32>::reverse_bits": true,
  "num::nonzero::NonZero::<u32>::saturating_add": true,
  "num::nonzero::NonZero::<u32>::saturating_mul": true,
  "num::nonzero::NonZero::<u32>::saturating_pow": true,
  "num::nonzero::NonZero::<u32>::swap_bytes": true,
  "num::nonzero::NonZero::<u32>::to_be": true,
  "num::nonzero::NonZero::<u32>::to_le": true,
  "num::nonzero::NonZero::<u32>::trailing_zeros": true,
  "num::nonzero::NonZero::<u64>::cast_signed": true,
  "num::nonzero::NonZero::<u64>::checked_add": true,
  "num::nonzero::NonZero::<u64>::checked_mul": true,
  "num::nonzero::NonZero::<u64>::checked_next_power_of_two": true,
  "num::nonzero::NonZero::<u64>::checked_pow": true,
  "num::nonzero::NonZero::<u64>::div_ceil": true,
  "num::nonzero::NonZero::<u64>::from_be": true,
  "num::nonzero::NonZero::<u64>::from_le": true,
  "num::nonzero::NonZero::<u64>::highest_one": true,
  "num::nonzero::NonZero::<u64>::ilog10": true,
  "num::nonzero::NonZero::<u64>::ilog2": true,
  "num::nonzero::NonZero::<u64>::is_power_of_two": true,
  "num::nonzero::NonZero::<u64>::isolate_highest_one": true,
  "num::nonzero::NonZero::<u64>::isolate_lowest_one": true,
  "num::nonzero::NonZero::<u64>::isqrt": true,
  "num::nonzero::NonZero::<u64>::leading_zeros": true,
  "num::nonzero::NonZero::<u64>::lowest_one": true,
  "num::nonzero::NonZero::<u64>::midpoint": true,
  "num::nonzero::NonZero::<u64>::reverse_bits": true,
  "num::nonzero::NonZero::<u64>::saturating_add": true,
  "num::nonzero::NonZero::<u64>::saturating_mul": true,
  "num::nonzero::NonZero::<u64>::saturating_pow": true,
  "num::nonzero::NonZero::<u64>::swap_bytes": true,
  "num::nonzero::NonZero::<u64>::to_be": true,
  "num::nonzero::NonZero::<u64>::to_le": true,
  "num::nonzero::NonZero::<u64>::trailing_zeros": true,
  "num::nonzero::NonZero::<u8>::cast_signed": true,
  "num::nonzero::NonZero::<u8>::checked_add": true,
  "num::nonzero::NonZero::<u8>::checked_mul": true,
  "num::nonzero::NonZero::<u8>::checked_next_power_of_two": true,
  "num::nonzero::NonZero::<u8>::checked_pow": true,
  "num::nonzero::NonZero::<u8>::div_ceil": true,
  "num::nonzero::NonZero::<u8>::from_be": true,
  "num::nonzero::NonZero::<u8>::from_le": true,
  "num::nonzero::NonZero::<u8>::highest_one": true,
  "num::nonzero::NonZero::<u8>::ilog10": true,
  "num::nonzero::NonZero::<u8>::ilog2": true,
  "num::nonzero::NonZero::<u8>::is_power_of_two": true,
  "num::nonzero::NonZero::<u8>::isolate_highest_one": true,
  "num::nonzero::NonZero::<u8>::isolate_lowest_one": true,
  "num::nonzero::NonZero::<u8>::isqrt": true,
  "num::nonzero::NonZero::<u8>::leading_zeros": true,
  "num::nonzero::NonZero::<u8>::lowest_one": true,
  "num::nonzero::NonZero::<u8>::midpoint": true,
  "num::nonzero::NonZero::<u8>::reverse_bits": true,
  "num::nonzero::NonZero::<u8>::saturating_add": true,
  "num::nonzero::NonZero::<u8>::saturating_mul": true,
  "num::nonzero::NonZero::<u8>::saturating_pow": true,
  "num::nonzero::NonZero::<u8>::swap_bytes": true,
  "num::nonzero::NonZero::<u8>::to_be": true,
  "num::nonzero::NonZero::<u8>::to_le": true,
  "num::nonzero::NonZero::<u8>::trailing_zeros": true,
  "num::nonzero::NonZero::<usize>::cast_signed": true,
  "num::nonzero::NonZero::<usize>::checked_add": true,
  "num::nonzero::NonZero::<usize>::checked_mul": true,
  "num::nonzero::NonZero::<usize>::checked_next_power_of_two": true,
  "num::nonzero::NonZero::<usize>::checked_pow": true,
  "num::nonzero::NonZero::<usize>::div_ceil": true,
  "num::nonzero::NonZero::<usize>::from_be": true,
  "num::nonzero::NonZero::<usize>::from_le": true,
  "num::nonzero::NonZero::<usize>::highest_one": true,
  "num::nonzero::NonZero::<usize>::ilog10": true,
  "num::nonzero::NonZero::<usize>::ilog2": true,
  "num::nonzero::NonZero::<usize>::is_power_of_two": true,
  "num::nonzero::NonZero::<usize>::isolate_highest_one": true,
  "num::nonzero::NonZero::<usize>::isolate_lowest_one": true,
  "num::nonzero::NonZero::<usize>::isqrt": true,
  "num::nonzero::NonZero::<usize>::leading_zeros": true,
  "num::nonzero::NonZero::<usize>::lowest_one": true,
  "num::nonzero::NonZero::<usize>::midpoint": true,
  "num::nonzero::NonZero::<usize>::reverse_bits": true,
  "num::nonzero::NonZero::<usize>::saturating_add": true,
  "num::nonzero::NonZero::<usize>::saturating_mul": true,
  "num::nonzero::NonZero::<usize>::saturating_pow": true,
  "num::nonzero::NonZero::<usize>::swap_bytes": true,
  "num::nonzero::NonZero::<usize>::to_be": true,
  "num::nonzero::NonZero::<usize>::to_le": true,
  "num::nonzero::NonZero::<usize>::trailing_zeros": true,
  "num::overflow_panic::add": true,
  "num::overflow_panic::div": true,
  "num::overflow_panic::mul": true,
  "num::overflow_panic::neg": true,
  "num::overflow_panic::rem": true,
  "num::overflow_panic::shl": true,
  "num::overflow_panic::shr": true,
  "num::overflow_panic::sub": true,
  "num::saturating::Saturating::<i128>::abs": true,
  "num::saturating::Saturating::<i128>::count_ones": true,
  "num::saturating::Saturating::<i128>::count_zeros": true,
  "num::saturating::Saturating::<i128>::from_be": true,
  "num::saturating::Saturating::<i128>::from_le": true,
  "num::saturating::Saturating::<i128>::is_negative": true,
  "num::saturating::Saturating::<i128>::is_positive": true,
  "num::saturating::Saturating::<i128>::leading_zeros": true,
  "num::saturating::Saturating::<i128>::pow": true,
  "num::saturating::Saturating::<i128>::reverse_bits": true,
  "num::saturating::Saturating::<i128>::rotate_left": true,
  "num::saturating::Saturating::<i128>::rotate_right": true,
  "num::saturating::Saturating::<i128>::signum": true,
  "num::saturating::Saturating::<i128>::swap_bytes": true,
  "num::saturating::Saturating::<i128>::to_be": true,
  "num::saturating::Saturating::<i128>::to_le": true,
  "num::saturating::Saturating::<i128>::trailing_zeros": true,
  "num::saturating::Saturating::<i16>::abs": true,
  "num::saturating::Saturating::<i16>::count_ones": true,
  "num::saturating::Saturating::<i16>::count_zeros": true,
  "num::saturating::Saturating::<i16>::from_be": true,
  "num::saturating::Saturating::<i16>::from_le": true,
  "num::saturating::Saturating::<i16>::is_negative": true,
  "num::saturating::Saturating::<i16>::is_positive": true,
  "num::saturating::Saturating::<i16>::leading_zeros": true,
  "num::saturating::Saturating::<i16>::pow": true,
  "num::saturating::Saturating::<i16>::reverse_bits": true,
  "num::saturating::Saturating::<i16>::rotate_left": true,
  "num::saturating::Saturating::<i16>::rotate_right": true,
  "num::saturating::Saturating::<i16>::signum": true,
  "num::saturating::Saturating::<i16>::swap_bytes": true,
  "num::saturating::Saturating::<i16>::to_be": true,
  "num::saturating::Saturating::<i16>::to_le": true,
  "num::saturating::Saturating::<i16>::trailing_zeros": true,
  "num::saturating::Saturating::<i32>::abs": true,
  "num::saturating::Saturating::<i32>::count_ones": true,
  "num::saturating::Saturating::<i32>::count_zeros": true,
  "num::saturating::Saturating::<i32>::from_be": true,
  "num::saturating::Saturating::<i32>::from_le": true,
  "num::saturating::Saturating::<i32>::is_negative": true,
  "num::saturating::Saturating::<i32>::is_positive": true,
  "num::saturating::Saturating::<i32>::leading_zeros": true,
  "num::saturating::Saturating::<i32>::pow": true,
  "num::saturating::Saturating::<i32>::reverse_bits": true,
  "num::saturating::Saturating::<i32>::rotate_left": true,
  "num::saturating::Saturating::<i32>::rotate_right": true,
  "num::saturating::Saturating::<i32>::signum": true,
  "num::saturating::Saturating::<i32>::swap_bytes": true,
  "num::saturating::Saturating::<i32>::to_be": true,
  "num::saturating::Saturating::<i32>::to_le": true,
  "num::saturating::Saturating::<i32>::trailing_zeros": true,
  "num::saturating::Saturating::<i64>::abs": true,
  "num::saturating::Saturating::<i64>::count_ones": true,
  "num::saturating::Saturating::<i64>::count_zeros": true,
  "num::saturating::Saturating::<i64>::from_be": true,
  "num::saturating::Saturating::<i64>::from_le": true,
  "num::saturating::Saturating::<i64>::is_negative": true,
  "num::saturating::Saturating::<i64>::is_positive": true,
  "num::saturating::Saturating::<i64>::leading_zeros": true,
  "num::saturating::Saturating::<i64>::pow": true,
  "num::saturating::Saturating::<i64>::reverse_bits": true,
  "num::saturating::Saturating::<i64>::rotate_left": true,
  "num::saturating::Saturating::<i64>::rotate_right": true,
  "num::saturating::Saturating::<i64>::signum": true,
  "num::saturating::Saturating::<i64>::swap_bytes": true,
  "num::saturating::Saturating::<i64>::to_be": true,
  "num::saturating::Saturating::<i64>::to_le": true,
  "num::saturating::Saturating::<i64>::trailing_zeros": true,
  "num::saturating::Saturating::<i8>::abs": true,
  "num::saturating::Saturating::<i8>::count_ones": true,
  "num::saturating::Saturating::<i8>::count_zeros": true,
  "num::saturating::Saturating::<i8>::from_be": true,
  "num::saturating::Saturating::<i8>::from_le": true,
  "num::saturating::Saturating::<i8>::is_negative": true,
  "num::saturating::Saturating::<i8>::is_positive": true,
  "num::saturating::Saturating::<i8>::leading_zeros": true,
  "num::saturating::Saturating::<i8>::pow": true,
  "num::saturating::Saturating::<i8>::reverse_bits": true,
  "num::saturating::Saturating::<i8>::rotate_left": true,
  "num::saturating::Saturating::<i8>::rotate_right": true,
  "num::saturating::Saturating::<i8>::signum": true,
  "num::saturating::Saturating::<i8>::swap_bytes": true,
  "num::saturating::Saturating::<i8>::to_be": true,
  "num::saturating::Saturating::<i8>::to_le": true,
  "num::saturating::Saturating::<i8>::trailing_zeros": true,
  "num::saturating::Saturating::<isize>::abs": true,
  "num::saturating::Saturating::<isize>::count_ones": true,
  "num::saturating::Saturating::<isize>::count_zeros": true,
  "num::saturating::Saturating::<isize>::from_be": true,
  "num::saturating::Saturating::<isize>::from_le": true,
  "num::saturating::Saturating::<isize>::is_negative": true,
  "num::saturating::Saturating::<isize>::is_positive": true,
  "num::saturating::Saturating::<isize>::leading_zeros": true,
  "num::saturating::Saturating::<isize>::pow": true,
  "num::saturating::Saturating::<isize>::reverse_bits": true,
  "num::saturating::Saturating::<isize>::rotate_left": true,
  "num::saturating::Saturating::<isize>::rotate_right": true,
  "num::saturating::Saturating::<isize>::signum": true,
  "num::saturating::Saturating::<isize>::swap_bytes": true,
  "num::saturating::Saturating::<isize>::to_be": true,
  "num::saturating::Saturating::<isize>::to_le": true,
  "num::saturating::Saturating::<isize>::trailing_zeros": true,
  "num::saturating::Saturating::<u128>::count_ones": true,
  "num::saturating::Saturating::<u128>::count_zeros": true,
  "num::saturating::Saturating::<u128>::from_be": true,
  "num::saturating::Saturating::<u128>::from_le": true,
  "num::saturating::Saturating::<u128>::is_power_of_two": true,
  "num::saturating::Saturating::<u128>::leading_zeros": true,
  "num::saturating::Saturating::<u128>::pow": true,
  "num::saturating::Saturating::<u128>::reverse_bits": true,
  "num::saturating::Saturating::<u128>::rotate_left": true,
  "num::saturating::Saturating::<u128>::rotate_right": true,
  "num::saturating::Saturating::<u128>::swap_bytes": true,
  "num::saturating::Saturating::<u128>::to_be": true,
  "num::saturating::Saturating::<u128>::to_le": true,
  "num::saturating::Saturating::<u128>::trailing_zeros": true,
  "num::saturating::Saturating::<u16>::count_ones": true,
  "num::saturating::Saturating::<u16>::count_zeros": true,
  "num::saturating::Saturating::<u16>::from_be": true,
  "num::saturating::Saturating::<u16>::from_le": true,
  "num::saturating::Saturating::<u16>::is_power_of_two": true,
  "num::saturating::Saturating::<u16>::leading_zeros": true,
  "num::saturating::Saturating::<u16>::pow": true,
  "num::saturating::Saturating::<u16>::reverse_bits": true,
  "num::saturating::Saturating::<u16>::rotate_left": true,
  "num::saturating::Saturating::<u16>::rotate_right": true,
  "num::saturating::Saturating::<u16>::swap_bytes": true,
  "num::saturating::Saturating::<u16>::to_be": true,
  "num::saturating::Saturating::<u16>::to_le": true,
  "num::saturating::Saturating::<u16>::trailing_zeros": true,
  "num::saturating::Saturating::<u32>::count_ones": true,
  "num::saturating::Saturating::<u32>::count_zeros": true,
  "num::saturating::Saturating::<u32>::from_be": true,
  "num::saturating::Saturating::<u32>::from_le": true,
  "num::saturating::Saturating::<u32>::is_power_of_two": true,
  "num::saturating::Saturating::<u32>::leading_zeros": true,
  "num::saturating::Saturating::<u32>::pow": true,
  "num::saturating::Saturating::<u32>::reverse_bits": true,
  "num::saturating::Saturating::<u32>::rotate_left": true,
  "num::saturating::Saturating::<u32>::rotate_right": true,
  "num::saturating::Saturating::<u32>::swap_bytes": true,
  "num::saturating::Saturating::<u32>::to_be": true,
  "num::saturating::Saturating::<u32>::to_le": true,
  "num::saturating::Saturating::<u32>::trailing_zeros": true,
  "num::saturating::Saturating::<u64>::count_ones": true,
  "num::saturating::Saturating::<u64>::count_zeros": true,
  "num::saturating::Saturating::<u64>::from_be": true,
  "num::saturating::Saturating::<u64>::from_le": true,
  "num::saturating::Saturating::<u64>::is_power_of_two": true,
  "num::saturating::Saturating::<u64>::leading_zeros": true,
  "num::saturating::Saturating::<u64>::pow": true,
  "num::saturating::Saturating::<u64>::reverse_bits": true,
  "num::saturating::Saturating::<u64>::rotate_left": true,
  "num::saturating::Saturating::<u64>::rotate_right": true,
  "num::saturating::Saturating::<u64>::swap_bytes": true,
  "num::saturating::Saturating::<u64>::to_be": true,
  "num::saturating::Saturating::<u64>::to_le": true,
  "num::saturating::Saturating::<u64>::trailing_zeros": true,
  "num::saturating::Saturating::<u8>::count_ones": true,
  "num::saturating::Saturating::<u8>::count_zeros": true,
  "num::saturating::Saturating::<u8>::from_be": true,
  "num::saturating::Saturating::<u8>::from_le": true,
  "num::saturating::Saturating::<u8>::is_power_of_two": true,
  "num::saturating::Saturating::<u8>::leading_zeros": true,
  "num::saturating::Saturating::<u8>::pow": true,
  "num::saturating::Saturating::<u8>::reverse_bits": true,
  "num::saturating::Saturating::<u8>::rotate_left": true,
  "num::saturating::Saturating::<u8>::rotate_right": true,
  "num::saturating::Saturating::<u8>::swap_bytes": true,
  "num::saturating::Saturating::<u8>::to_be": true,
  "num::saturating::Saturating::<u8>::to_le": true,
  "num::saturating::Saturating::<u8>::trailing_zeros": true,
  "num::saturating::Saturating::<usize>::count_ones": true,
  "num::saturating::Saturating::<usize>::count_zeros": true,
  "num::saturating::Saturating::<usize>::from_be": true,
  "num::saturating::Saturating::<usize>::from_le": true,
  "num::saturating::Saturating::<usize>::is_power_of_two": true,
  "num::saturating::Saturating::<usize>::leading_zeros": true,
  "num::saturating::Saturating::<usize>::pow": true,
  "num::saturating::Saturating::<usize>::reverse_bits": true,
  "num::saturating::Saturating::<usize>::rotate_left": true,
  "num::saturating::Saturating::<usize>::rotate_right": true,
  "num::saturating::Saturating::<usize>::swap_bytes": true,
  "num::saturating::Saturating::<usize>::to_be": true,
  "num::saturating::Saturating::<usize>::to_le": true,
  "num::saturating::Saturating::<usize>::trailing_zeros": true,
  "num::wrapping::Wrapping::<i128>::abs": true,
  "num::wrapping::Wrapping::<i128>::count_ones": true,
  "num::wrapping::Wrapping::<i128>::count_zeros": true,
  "num::wrapping::Wrapping::<i128>::from_be": true,
  "num::wrapping::Wrapping::<i128>::from_le": true,
  "num::wrapping::Wrapping::<i128>::is_negative": true,
  "num::wrapping::Wrapping::<i128>::is_positive": true,
  "num::wrapping::Wrapping::<i128>::leading_zeros": true,
  "num::wrapping::Wrapping::<i128>::pow": true,
  "num::wrapping::Wrapping::<i128>::reverse_bits": true,
  "num::wrapping::Wrapping::<i128>::rotate_left": true,
  "num::wrapping::Wrapping::<i128>::rotate_right": true,
  "num::wrapping::Wrapping::<i128>::signum": true,
  "num::wrapping::Wrapping::<i128>::swap_bytes": true,
  "num::wrapping::Wrapping::<i128>::to_be": true,
  "num::wrapping::Wrapping::<i128>::to_le": true,
  "num::wrapping::Wrapping::<i128>::trailing_zeros": true,
  "num::wrapping::Wrapping::<i16>::abs": true,
  "num::wrapping::Wrapping::<i16>::count_ones": true,
  "num::wrapping::Wrapping::<i16>::count_zeros": true,
  "num::wrapping::Wrapping::<i16>::from_be": true,
  "num::wrapping::Wrapping::<i16>::from_le": true,
  "num::wrapping::Wrapping::<i16>::is_negative": true,
  "num::wrapping::Wrapping::<i16>::is_positive": true,
  "num::wrapping::Wrapping::<i16>::leading_zeros": true,
  "num::wrapping::Wrapping::<i16>::pow": true,
  "num::wrapping::Wrapping::<i16>::reverse_bits": true,
  "num::wrapping::Wrapping::<i16>::rotate_left": true,
  "num::wrapping::Wrapping::<i16>::rotate_right": true,
  "num::wrapping::Wrapping::<i16>::signum": true,
  "num::wrapping::Wrapping::<i16>::swap_bytes": true,
  "num::wrapping::Wrapping::<i16>::to_be": true,
  "num::wrapping::Wrapping::<i16>::to_le": true,
  "num::wrapping::Wrapping::<i16>::trailing_zeros": true,
  "num::wrapping::Wrapping::<i32>::abs": true,
  "num::wrapping::Wrapping::<i32>::count_ones": true,
  "num::wrapping::Wrapping::<i32>::count_zeros": true,
  "num::wrapping::Wrapping::<i32>::from_be": true,
  "num::wrapping::Wrapping::<i32>::from_le": true,
  "num::wrapping::Wrapping::<i32>::is_negative": true,
  "num::wrapping::Wrapping::<i32>::is_positive": true,
  "num::wrapping::Wrapping::<i32>::leading_zeros": true,
  "num::wrapping::Wrapping::<i32>::pow": true,
  "num::wrapping::Wrapping::<i32>::reverse_bits": true,
  "num::wrapping::Wrapping::<i32>::rotate_left": true,
  "num::wrapping::Wrapping::<i32>::rotate_right": true,
  "num::wrapping::Wrapping::<i32>::signum": true,
  "num::wrapping::Wrapping::<i32>::swap_bytes": true,
  "num::wrapping::Wrapping::<i32>::to_be": true,
  "num::wrapping::Wrapping::<i32>::to_le": true,
  "num::wrapping::Wrapping::<i32>::trailing_zeros": true,
  "num::wrapping::Wrapping::<i64>::abs": true,
  "num::wrapping::Wrapping::<i64>::count_ones": true,
  "num::wrapping::Wrapping::<i64>::count_zeros": true,
  "num::wrapping::Wrapping::<i64>::from_be": true,
  "num::wrapping::Wrapping::<i64>::from_le": true,
  "num::wrapping::Wrapping::<i64>::is_negative": true,
  "num::wrapping::Wrapping::<i64>::is_positive": true,
  "num::wrapping::Wrapping::<i64>::leading_zeros": true,
  "num::wrapping::Wrapping::<i64>::pow": true,
  "num::wrapping::Wrapping::<i64>::reverse_bits": true,
  "num::wrapping::Wrapping::<i64>::rotate_left": true,
  "num::wrapping::Wrapping::<i64>::rotate_right": true,
  "num::wrapping::Wrapping::<i64>::signum": true,
  "num::wrapping::Wrapping::<i64>::swap_bytes": true,
  "num::wrapping::Wrapping::<i64>::to_be": true,
  "num::wrapping::Wrapping::<i64>::to_le": true,
  "num::wrapping::Wrapping::<i64>::trailing_zeros": true,
  "num::wrapping::Wrapping::<i8>::abs": true,
  "num::wrapping::Wrapping::<i8>::count_ones": true,
  "num::wrapping::Wrapping::<i8>::count_zeros": true,
  "num::wrapping::Wrapping::<i8>::from_be": true,
  "num::wrapping::Wrapping::<i8>::from_le": true,
  "num::wrapping::Wrapping::<i8>::is_negative": true,
  "num::wrapping::Wrapping::<i8>::is_positive": true,
  "num::wrapping::Wrapping::<i8>::leading_zeros": true,
  "num::wrapping::Wrapping::<i8>::pow": true,
  "num::wrapping::Wrapping::<i8>::reverse_bits": true,
  "num::wrapping::Wrapping::<i8>::rotate_left": true,
  "num::wrapping::Wrapping::<i8>::rotate_right": true,
  "num::wrapping::Wrapping::<i8>::signum": true,
  "num::wrapping::Wrapping::<i8>::swap_bytes": true,
  "num::wrapping::Wrapping::<i8>::to_be": true,
  "num::wrapping::Wrapping::<i8>::to_le": true,
  "num::wrapping::Wrapping::<i8>::trailing_zeros": true,
  "num::wrapping::Wrapping::<isize>::abs": true,
  "num::wrapping::Wrapping::<isize>::count_ones": true,
  "num::wrapping::Wrapping::<isize>::count_zeros": true,
  "num::wrapping::Wrapping::<isize>::from_be": true,
  "num::wrapping::Wrapping::<isize>::from_le": true,
  "num::wrapping::Wrapping::<isize>::is_negative": true,
  "num::wrapping::Wrapping::<isize>::is_positive": true,
  "num::wrapping::Wrapping::<isize>::leading_zeros": true,
  "num::wrapping::Wrapping::<isize>::pow": true,
  "num::wrapping::Wrapping::<isize>::reverse_bits": true,
  "num::wrapping::Wrapping::<isize>::rotate_left": true,
  "num::wrapping::Wrapping::<isize>::rotate_right": true,
  "num::wrapping::Wrapping::<isize>::signum": true,
  "num::wrapping::Wrapping::<isize>::swap_bytes": true,
  "num::wrapping::Wrapping::<isize>::to_be": true,
  "num::wrapping::Wrapping::<isize>::to_le": true,
  "num::wrapping::Wrapping::<isize>::trailing_zeros": true,
  "num::wrapping::Wrapping::<u128>::count_ones": true,
  "num::wrapping::Wrapping::<u128>::count_zeros": true,
  "num::wrapping::Wrapping::<u128>::from_be": true,
  "num::wrapping::Wrapping::<u128>::from_le": true,
  "num::wrapping::Wrapping::<u128>::is_power_of_two": true,
  "num::wrapping::Wrapping::<u128>::leading_zeros": true,
  "num::wrapping::Wrapping::<u128>::next_power_of_two": true,
  "num::wrapping::Wrapping::<u128>::pow": true,
  "num::wrapping::Wrapping::<u128>::reverse_bits": true,
  "num::wrapping::Wrapping::<u128>::rotate_left": true,
  "num::wrapping::Wrapping::<u128>::rotate_right": true,
  "num::wrapping::Wrapping::<u128>::swap_bytes": true,
  "num::wrapping::Wrapping::<u128>::to_be": true,
  "num::wrapping::Wrapping::<u128>::to_le": true,
  "num::wrapping::Wrapping::<u128>::trailing_zeros": true,
  "num::wrapping::Wrapping::<u16>::count_ones": true,
  "num::wrapping::Wrapping::<u16>::count_zeros": true,
  "num::wrapping::Wrapping::<u16>::from_be": true,
  "num::wrapping::Wrapping::<u16>::from_le": true,
  "num::wrapping::Wrapping::<u16>::is_power_of_two": true,
  "num::wrapping::Wrapping::<u16>::leading_zeros": true,
  "num::wrapping::Wrapping::<u16>::next_power_of_two": true,
  "num::wrapping::Wrapping::<u16>::pow": true,
  "num::wrapping::Wrapping::<u16>::reverse_bits": true,
  "num::wrapping::Wrapping::<u16>::rotate_left": true,
  "num::wrapping::Wrapping::<u16>::rotate_right": true,
  "num::wrapping::Wrapping::<u16>::swap_bytes": true,
  "num::wrapping::Wrapping::<u16>::to_be": true,
  "num::wrapping::Wrapping::<u16>::to_le": true,
  "num::wrapping::Wrapping::<u16>::trailing_zeros": true,
  "num::wrapping::Wrapping::<u32>::count_ones": true,
  "num::wrapping::Wrapping::<u32>::count_zeros": true,
  "num::wrapping::Wrapping::<u32>::from_be": true,
  "num::wrapping::Wrapping::<u32>::from_le": true,
  "num::wrapping::Wrapping::<u32>::is_power_of_two": true,
  "num::wrapping::Wrapping::<u32>::leading_zeros": true,
  "num::wrapping::Wrapping::<u32>::next_power_of_two": true,
  "num::wrapping::Wrapping::<u32>::pow": true,
  "num::wrapping::Wrapping::<u32>::reverse_bits": true,
  "num::wrapping::Wrapping::<u32>::rotate_left": true,
  "num::wrapping::Wrapping::<u32>::rotate_right": true,
  "num::wrapping::Wrapping::<u32>::swap_bytes": true,
  "num::wrapping::Wrapping::<u32>::to_be": true,
  "num::wrapping::Wrapping::<u32>::to_le": true,
  "num::wrapping::Wrapping::<u32>::trailing_zeros": true,
  "num::wrapping::Wrapping::<u64>::count_ones": true,
  "num::wrapping::Wrapping::<u64>::count_zeros": true,
  "num::wrapping::Wrapping::<u64>::from_be": true,
  "num::wrapping::Wrapping::<u64>::from_le": true,
  "num::wrapping::Wrapping::<u64>::is_power_of_two": true,
  "num::wrapping::Wrapping::<u64>::leading_zeros": true,
  "num::wrapping::Wrapping::<u64>::next_power_of_two": true,
  "num::wrapping::Wrapping::<u64>::pow": true,
  "num::wrapping::Wrapping::<u64>::reverse_bits": true,
  "num::wrapping::Wrapping::<u64>::rotate_left": true,
  "num::wrapping::Wrapping::<u64>::rotate_right": true,
  "num::wrapping::Wrapping::<u64>::swap_bytes": true,
  "num::wrapping::Wrapping::<u64>::to_be": true,
  "num::wrapping::Wrapping::<u64>::to_le": true,
  "num::wrapping::Wrapping::<u64>::trailing_zeros": true,
  "num::wrapping::Wrapping::<u8>::count_ones": true,
  "num::wrapping::Wrapping::<u8>::count_zeros": true,
  "num::wrapping::Wrapping::<u8>::from_be": true,
  "num::wrapping::Wrapping::<u8>::from_le": true,
  "num::wrapping::Wrapping::<u8>::is_power_of_two": true,
  "num::wrapping::Wrapping::<u8>::leading_zeros": true,
  "num::wrapping::Wrapping::<u8>::next_power_of_two": true,
  "num::wrapping::Wrapping::<u8>::pow": true,
  "num::wrapping::Wrapping::<u8>::reverse_bits": true,
  "num::wrapping::Wrapping::<u8>::rotate_left": true,
  "num::wrapping::Wrapping::<u8>::rotate_right": true,
  "num::wrapping::Wrapping::<u8>::swap_bytes": true,
  "num::wrapping::Wrapping::<u8>::to_be": true,
  "num::wrapping::Wrapping::<u8>::to_le": true,
  "num::wrapping::Wrapping::<u8>::trailing_zeros": true,
  "num::wrapping::Wrapping::<usize>::count_ones": true,
  "num::wrapping::Wrapping::<usize>::count_zeros": true,
  "num::wrapping::Wrapping::<usize>::from_be": true,
  "num::wrapping::Wrapping::<usize>::from_le": true,
  "num::wrapping::Wrapping::<usize>::is_power_of_two": true,
  "num::wrapping::Wrapping::<usize>::leading_zeros": true,
  "num::wrapping::Wrapping::<usize>::next_power_of_two": true,
  "num::wrapping::Wrapping::<usize>::pow": true,
  "num::wrapping::Wrapping::<usize>::reverse_bits": true,
  "num::wrapping::Wrapping::<usize>::rotate_left": true,
  "num::wrapping::Wrapping::<usize>::rotate_right": true,
  "num::wrapping::Wrapping::<usize>::swap_bytes": true,
  "num::wrapping::Wrapping::<usize>::to_be": true,
  "num::wrapping::Wrapping::<usize>::to_le": true,
  "num::wrapping::Wrapping::<usize>::trailing_zeros": true,
  "ops::index_range::IndexRange::assume_range": true,
  "ops::index_range::IndexRange::end": true,
  "ops::index_range::IndexRange::len": true,
  "ops::index_range::IndexRange::new_unchecked::precondition_check": true,
  "ops::index_range::IndexRange::new_unchecked::{closure#0}::{closure#1}::{closure#0}::precondition_check": true,
  "ops::index_range::IndexRange::new_unchecked::{closure#2}::{closure#0}::precondition_check": true,
  "ops::index_range::IndexRange::new_unchecked::{closure#3}::{closure#0}::precondition_check": true,
  "ops::index_range::IndexRange::start": true,
  "ops::index_range::IndexRange::take_prefix": true,
  "ops::index_range::IndexRange::take_suffix": true,
  "ops::index_range::IndexRange::zero_to": true,
  "ops::range::RangeInclusive::<usize>::into_slice_range": true,
  "option::unwrap_failed": true,
  "os::fd::net::<impl os::fd::raw::AsRawFd for net::tcp::TcpListener>::as_raw_fd": true,
  "os::fd::net::<impl os::fd::raw::AsRawFd for net::tcp::TcpStream>::as_raw_fd": true,
  "os::fd::net::<impl os::fd::raw::AsRawFd for net::udp::UdpSocket>::as_raw_fd": true,
  "os::fd::net::<impl os::fd::raw::FromRawFd for net::tcp::TcpListener>::from_raw_fd": true,
  "os::fd::net::<impl os::fd::raw::FromRawFd for net::tcp::TcpStream>::from_raw_fd": true,
  "os::fd::net::<impl os::fd::raw::FromRawFd for net::udp::UdpSocket>::from_raw_fd": true,
  "os::fd::net::<impl os::fd::raw::IntoRawFd for net::tcp::TcpListener>::into_raw_fd": true,
  "os::fd::net::<impl os::fd::raw::IntoRawFd for net::tcp::TcpStream>::into_raw_fd": true,
  "os::fd::net::<impl os::fd::raw::IntoRawFd for net::udp::UdpSocket>::into_raw_fd": true,
  "os::fd::owned::<impl core::convert::From<os::fd::owned::OwnedFd> for fs::File>::from": true,
  "os::fd::owned::<impl core::convert::From<os::fd::owned::OwnedFd> for io::pipe::PipeReader>::from": true,
  "os::fd::owned::<impl core::convert::From<os::fd::owned::OwnedFd> for io::pipe::PipeWriter>::from": true,
  "os::fd::owned::<impl core::convert::From<os::fd::owned::OwnedFd> for net::tcp::TcpListener>::from": true,
  "os::fd::owned::<impl core::convert::From<os::fd::owned::OwnedFd> for net::tcp::TcpStream>::from": true,
  "os::fd::owned::<impl core::convert::From<os::fd::owned::OwnedFd> for net::udp::UdpSocket>::from": true,
  "os::fd::owned::BorrowedFd::<'_>::borrow_raw": true,
  "os::fd::owned::OwnedFd::try_clone": true,
  "os::linux::process::<impl core::convert::From<os::linux::process::PidFd> for os::fd::owned::OwnedFd>::from": true,
  "os::linux::process::PidFd::kill": true,
  "os::linux::process::PidFd::try_wait": true,
  "os::linux::process::PidFd::wait": true,
  "os::unix::net::addr::SocketAddr::address": true,
  "os::unix::net::addr::SocketAddr::as_pathname": true,
  "os::unix::net::addr::SocketAddr::from_parts": true,
  "os::unix::net::addr::SocketAddr::is_unnamed": true,
  "os::unix::net::ancillary::AncillaryData::<'_>::try_from_cmsghdr": true,
  "os::unix::net::ancillary::SocketCred::get_gid": true,
  "os::unix::net::ancillary::SocketCred::get_pid": true,
  "os::unix::net::ancillary::SocketCred::get_uid": true,
  "os::unix::net::ancillary::SocketCred::new": true,
  "os::unix::net::ancillary::SocketCred::set_gid": true,
  "os::unix::net::ancillary::SocketCred::set_pid": true,
  "os::unix::net::ancillary::SocketCred::set_uid": true,
  "os::unix::net::datagram::<impl core::convert::From<os::unix::net::datagram::UnixDatagram> for os::fd::owned::OwnedFd>::from": true,
  "os::unix::net::datagram::UnixDatagram::bind_addr": true,
  "os::unix::net::datagram::UnixDatagram::connect_addr": true,
  "os::unix::net::datagram::UnixDatagram::local_addr": true,
  "os::unix::net::datagram::UnixDatagram::pair": true,
  "os::unix::net::datagram::UnixDatagram::peer_addr": true,
  "os::unix::net::datagram::UnixDatagram::read_timeout": true,
  "os::unix::net::datagram::UnixDatagram::set_mark": true,
  "os::unix::net::datagram::UnixDatagram::set_nonblocking": true,
  "os::unix::net::datagram::UnixDatagram::set_read_timeout": true,
  "os::unix::net::datagram::UnixDatagram::set_write_timeout": true,
  "os::unix::net::datagram::UnixDatagram::shutdown": true,
  "os::unix::net::datagram::UnixDatagram::take_error": true,
  "os::unix::net::datagram::UnixDatagram::try_clone": true,
  "os::unix::net::datagram::UnixDatagram::unbound": true,
  "os::unix::net::datagram::UnixDatagram::write_timeout": true,
  "os::unix::net::listener::<impl core::convert::From<os::unix::net::listener::UnixListener> for os::fd::owned::OwnedFd>::from": true,
  "os::unix::net::listener::UnixListener::accept": true,
  "os::unix::net::listener::UnixListener::bind_addr": true,
  "os::unix::net::listener::UnixListener::incoming": true,
  "os::unix::net::listener::UnixListener::local_addr": true,
  "os::unix::net::listener::UnixListener::set_nonblocking": true,
  "os::unix::net::listener::UnixListener::take_error": true,
  "os::unix::net::listener::UnixListener::try_clone": true,
  "os::unix::net::stream::<impl core::convert::From<os::unix::net::stream::UnixStream> for os::fd::owned::OwnedFd>::from": true,
  "os::unix::net::stream::UnixStream::connect_addr": true,
  "os::unix::net::stream::UnixStream::local_addr": true,
  "os::unix::net::stream::UnixStream::pair": true,
  "os::unix::net::stream::UnixStream::peer_addr": true,
  "os::unix::net::stream::UnixStream::peer_cred": true,
  "os::unix::net::stream::UnixStream::read_timeout": true,
  "os::unix::net::stream::UnixStream::set_mark": true,
  "os::unix::net::stream::UnixStream::set_nonblocking": true,
  "os::unix::net::stream::UnixStream::set_read_timeout": true,
  "os::unix::net::stream::UnixStream::set_write_timeout": true,
  "os::unix::net::stream::UnixStream::shutdown": true,
  "os::unix::net::stream::UnixStream::take_error": true,
  "os::unix::net::stream::UnixStream::try_clone": true,
  "os::unix::net::stream::UnixStream::write_timeout": true,
  "os::unix::net::ucred::impl_linux::peer_cred": true,
  "os::unix::process::<impl core::convert::From<os::fd::owned::OwnedFd> for process::ChildStderr>::from": true,
  "os::unix::process::<impl core::convert::From<os::fd::owned::OwnedFd> for process::ChildStdin>::from": true,
  "os::unix::process::<impl core::convert::From<os::fd::owned::OwnedFd> for process::ChildStdout>::from": true,
  "os::unix::process::<impl core::convert::From<os::fd::owned::OwnedFd> for process::Stdio>::from": true,
  "os::unix::process::<impl core::convert::From<process::ChildStderr> for os::fd::owned::OwnedFd>::from": true,
  "os::unix::process::<impl core::convert::From<process::ChildStdin> for os::fd::owned::OwnedFd>::from": true,
  "os::unix::process::<impl core::convert::From<process::ChildStdout> for os::fd::owned::OwnedFd>::from": true,
  "os::unix::process::<impl os::fd::owned::AsFd for process::ChildStderr>::as_fd": true,
  "os::unix::process::<impl os::fd::owned::AsFd for process::ChildStdin>::as_fd": true,
  "os::unix::process::<impl os::fd::owned::AsFd for process::ChildStdout>::as_fd": true,
  "os::unix::process::<impl os::fd::raw::AsRawFd for process::ChildStderr>::as_raw_fd": true,
  "os::unix::process::<impl os::fd::raw::AsRawFd for process::ChildStdin>::as_raw_fd": true,
  "os::unix::process::<impl os::fd::raw::AsRawFd for process::ChildStdout>::as_raw_fd": true,
  "os::unix::process::<impl os::fd::raw::FromRawFd for process::Stdio>::from_raw_fd": true,
  "os::unix::process::<impl os::fd::raw::IntoRawFd for process::ChildStderr>::into_raw_fd": true,
  "os::unix::process::<impl os::fd::raw::IntoRawFd for process::ChildStdin>::into_raw_fd": true,
  "os::unix::process::<impl os::fd::raw::IntoRawFd for process::ChildStdout>::into_raw_fd": true,
  "os::unix::process::parent_id": true,
  "panic::BacktraceStyle::as_u8": true,
  "panic::BacktraceStyle::from_u8": true,
  "panic::BacktraceStyle::full": true,
  "panic::always_abort": true,
  "panic::get_backtrace_style": true,
  "panic::location::Location::<'_>::caller": true,
  "panic::set_backtrace_style": true,
  "panicking::__rust_drop_panic": true,
  "panicking::__rust_foreign_exception": true,
  "panicking::panic_bounds_check": true,
  "panicking::panic_cannot_unwind": true,
  "panicking::panic_const::panic_const_add_overflow": true,
  "panicking::panic_const::panic_const_async_fn_resumed": true,
  "panicking::panic_const::panic_const_async_fn_resumed_drop": true,
  "panicking::panic_const::panic_const_async_fn_resumed_panic": true,
  "panicking::panic_const::panic_const_async_gen_fn_resumed": true,
  "panicking::panic_const::panic_const_async_gen_fn_resumed_drop": true,
  "panicking::panic_const::panic_const_async_gen_fn_resumed_panic": true,
  "panicking::panic_const::panic_const_coroutine_resumed": true,
  "panicking::panic_const::panic_const_coroutine_resumed_drop": true,
  "panicking::panic_const::panic_const_coroutine_resumed_panic": true,
  "panicking::panic_const::panic_const_div_by_zero": true,
  "panicking::panic_const::panic_const_div_overflow": true,
  "panicking::panic_const::panic_const_gen_fn_none": true,
  "panicking::panic_const::panic_const_gen_fn_none_drop": true,
  "panicking::panic_const::panic_const_gen_fn_none_panic": true,
  "panicking::panic_const::panic_const_mul_overflow": true,
  "panicking::panic_const::panic_const_neg_overflow": true,
  "panicking::panic_const::panic_const_rem_by_zero": true,
  "panicking::panic_const::panic_const_rem_overflow": true,
  "panicking::panic_const::panic_const_shl_overflow": true,
  "panicking::panic_const::panic_const_shr_overflow": true,
  "panicking::panic_const::panic_const_sub_overflow": true,
  "panicking::panic_count::count_is_zero": true,
  "panicking::panic_count::decrease": true,
  "panicking::panic_count::finished_panic_hook": true,
  "panicking::panic_count::get_count": true,
  "panicking::panic_count::increase": true,
  "panicking::panic_count::is_zero_slow_path": true,
  "panicking::panic_count::set_always_abort": true,
  "panicking::panic_in_cleanup": true,
  "panicking::panic_invalid_enum_construction": true,
  "panicking::panic_misaligned_pointer_dereference": true,
  "panicking::panic_null_pointer_dereference": true,
  "panicking::panicking": true,
  "panicking::take_hook": true,
  "path::PathBuf::new": true,
  "path::PathBuf::with_capacity": true,
  "path::is_separator": true,
  "pe::Guid::data1": true,
  "pe::Guid::data2": true,
  "pe::Guid::data3": true,
  "pe::Guid::data4": true,
  "pe::ImageDelayloadDescriptor::is_null": true,
  "pe::ImageImportDescriptor::is_null": true,
  "probestack::__rust_probestack": true,
  "process::Child::id": true,
  "process::Child::kill": true,
  "process::Child::try_wait": true,
  "process::Child::wait": true,
  "process::Child::wait_with_output": true,
  "process::ExitCode::exit_process": true,
  "process::ExitCode::to_i32": true,
  "process::ExitStatus::code": true,
  "process::ExitStatus::exit_ok": true,
  "process::ExitStatus::success": true,
  "process::ExitStatusError::code": true,
  "process::ExitStatusError::code_nonzero": true,
  "process::ExitStatusError::into_status": true,
  "process::Stdio::inherit": true,
  "process::Stdio::null": true,
  "process::Stdio::piped": true,
  "process::abort": true,
  "process::exit": true,
  "process::id": true,
  "ptr::alignment::<impl convert::From<ptr::alignment::Alignment> for num::nonzero::NonZero<usize>>::from": true,
  "ptr::alignment::<impl convert::From<ptr::alignment::Alignment> for usize>::from": true,
  "ptr::alignment::Alignment::max": true,
  "ptr::alignment::Alignment::new_unchecked::precondition_check": true,
  "ptr::alignment::Alignment::new_unchecked::{closure#0}::{closure#1}::{closure#2}::precondition_check": true,
  "ptr::alignment::Alignment::new_unchecked::{closure#2}::{closure#2}::precondition_check": true,
  "ptr::alignment::Alignment::new_unchecked::{closure#3}::{closure#0}::precondition_check": true,
  "ptr::alignment::_alignment_can_be_structurally_matched": true,
  "quote::collect_meta_vars": true,
  "quote::quote": true,
  "quote::quote_span": true,
  "range::RangeInclusive::<usize>::into_slice_range": true,
  "raw::Fallibility::alloc_err": true,
  "raw::Fallibility::capacity_overflow": true,
  "raw::ProbeSeq::move_next": true,
  "raw::RawTableInner::new": true,
  "raw::TableLayout::calculate_layout_for": true,
  "raw::bucket_mask_to_capacity": true,
  "raw::capacity_to_buckets": true,
  "raw::h1": true,
  "raw_vec::RawVecInner::with_capacity": true,
  "raw_vec::capacity_overflow": true,
  "raw_vec::handle_error": true,
  "raw_vec::layout_array": true,
  "raw_vec::min_non_zero_cap": true,
  "rc::data_offset_align": true,
  "rc::rc_inner_layout_for_value_layout": true,
  "read::<impl common::Register>::from_u64": true,
  "read::CompressedFileRange::none": true,
  "read::Error::description": true,
  "read::Relocation::addend": true,
  "read::Relocation::encoding": true,
  "read::Relocation::flags": true,
  "read::Relocation::has_implicit_addend": true,
  "read::Relocation::kind": true,
  "read::Relocation::set_addend": true,
  "read::Relocation::size": true,
  "read::Relocation::target": true,
  "read::SymbolSection::index": true,
  "read::abbrev::Abbreviations::empty": true,
  "read::abbrev::AbbreviationsCache::new": true,
  "read::abbrev::AttributeSpecification::form": true,
  "read::abbrev::AttributeSpecification::implicit_const_value": true,
  "read::abbrev::AttributeSpecification::name": true,
  "read::abbrev::AttributeSpecification::new": true,
  "read::abbrev::Attributes::new": true,
  "read::abbrev::get_attribute_size": true,
  "read::aranges::ArangeEntry::address": true,
  "read::aranges::ArangeEntry::length": true,
  "read::aranges::ArangeEntry::range": true,
  "read::cfi::BaseAddresses::set_eh_frame": true,
  "read::cfi::BaseAddresses::set_eh_frame_hdr": true,
  "read::cfi::BaseAddresses::set_got": true,
  "read::cfi::BaseAddresses::set_text": true,
  "read::cfi::Pointer::direct": true,
  "read::cfi::Pointer::new": true,
  "read::cfi::Pointer::pointer": true,
  "read::coff::import::<impl pe::ImportObjectHeader>::import_type": true,
  "read::coff::import::<impl pe::ImportObjectHeader>::name_type": true,
  "read::coff::relocation::<impl pe::ImageRelocation>::symbol": true,
  "read::coff::section::<impl pe::ImageSectionHeader>::coff_alignment": true,
  "read::coff::section::<impl pe::ImageSectionHeader>::coff_file_range": true,
  "read::coff::section::<impl pe::ImageSectionHeader>::kind": true,
  "read::coff::section::<impl pe::ImageSectionHeader>::name_offset": true,
  "read::coff::section::<impl pe::ImageSectionHeader>::raw_name": true,
  "read::coff::symbol::<impl pe::ImageAuxSymbolWeak>::default_symbol": true,
  "read::elf::relocation::Crel::symbol": true,
  "read::elf::version::VersionIndex::index": true,
  "read::elf::version::VersionIndex::is_global": true,
  "read::elf::version::VersionIndex::is_hidden": true,
  "read::elf::version::VersionIndex::is_local": true,
  "read::index::IndexSectionId::dwo_name": true,
  "read::index::IndexSectionId::section_id": true,
  "read::line::LineRow::address": true,
  "read::line::LineRow::apply_line_advance": true,
  "read::line::LineRow::basic_block": true,
  "read::line::LineRow::column": true,
  "read::line::LineRow::discriminator": true,
  "read::line::LineRow::end_sequence": true,
  "read::line::LineRow::epilogue_begin": true,
  "read::line::LineRow::file_index": true,
  "read::line::LineRow::is_stmt": true,
  "read::line::LineRow::isa": true,
  "read::line::LineRow::line": true,
  "read::line::LineRow::op_index": true,
  "read::line::LineRow::prologue_end": true,
  "read::lists::ListsHeader::size": true,
  "read::lists::ListsHeader::size_for_encoding": true,
  "read::pe::data_directory::<impl pe::ImageDataDirectory>::address_range": true,
  "read::pe::resource::<impl pe::ImageResourceDirectoryEntry>::data_offset": true,
  "read::pe::resource::<impl pe::ImageResourceDirectoryEntry>::has_name": true,
  "read::pe::resource::<impl pe::ImageResourceDirectoryEntry>::id": true,
  "read::pe::resource::<impl pe::ImageResourceDirectoryEntry>::is_table": true,
  "read::pe::resource::<impl pe::ImageResourceDirectoryEntry>::name": true,
  "read::pe::resource::<impl pe::ImageResourceDirectoryEntry>::name_or_id": true,
  "read::pe::resource::ResourceNameOrId::id": true,
  "read::pe::resource::ResourceNameOrId::name": true,
  "read::pe::section::<impl pe::ImageSectionHeader>::contains_rva": true,
  "read::pe::section::<impl pe::ImageSectionHeader>::pe_address_range": true,
  "read::pe::section::<impl pe::ImageSectionHeader>::pe_file_range": true,
  "read::pe::section::<impl pe::ImageSectionHeader>::pe_file_range_at": true,
  "read::rnglists::Range::add_base_address": true,
  "read::rnglists::RawRange::is_base_address": true,
  "read::rnglists::RawRange::is_end": true,
  "read::unit::allow_section_offset": true,
  "read::util::align": true,
  "read::value::Value::abs": true,
  "read::value::Value::add": true,
  "read::value::Value::and": true,
  "read::value::Value::convert": true,
  "read::value::Value::div": true,
  "read::value::Value::eq": true,
  "read::value::Value::from_f32": true,
  "read::value::Value::from_f64": true,
  "read::value::Value::from_u64": true,
  "read::value::Value::ge": true,
  "read::value::Value::gt": true,
  "read::value::Value::le": true,
  "read::value::Value::lt": true,
  "read::value::Value::mul": true,
  "read::value::Value::ne": true,
  "read::value::Value::neg": true,
  "read::value::Value::not": true,
  "read::value::Value::or": true,
  "read::value::Value::reinterpret": true,
  "read::value::Value::rem": true,
  "read::value::Value::shift_length": true,
  "read::value::Value::shl": true,
  "read::value::Value::shr": true,
  "read::value::Value::shra": true,
  "read::value::Value::sub": true,
  "read::value::Value::to_u64": true,
  "read::value::Value::value_type": true,
  "read::value::Value::xor": true,
  "read::value::ValueType::bit_size": true,
  "read::value::ValueType::from_encoding": true,
  "read::value::mask_bit_size": true,
  "read::value::sign_extend": true,
  "rt::__rust_abort": true,
  "rt::cleanup": true,
  "rt::thread_cleanup": true,
  "set::assert_covariance": true,
  "simple_escape": true,
  "slice::<impl [T]>::align_to_offsets::gcd": true,
  "slice::<impl [T]>::as_chunks_unchecked::precondition_check": true,
  "slice::<impl [T]>::as_chunks_unchecked_mut::precondition_check": true,
  "slice::<impl [T]>::copy_from_slice::len_mismatch_fail": true,
  "slice::<impl [T]>::copy_from_slice::len_mismatch_fail::do_panic": true,
  "slice::<impl [T]>::copy_from_slice::len_mismatch_fail::do_panic::compiletime": true,
  "slice::<impl [T]>::copy_from_slice::len_mismatch_fail::do_panic::runtime": true,
  "slice::<impl [T]>::split_at_mut_unchecked::precondition_check": true,
  "slice::<impl [T]>::split_at_unchecked::precondition_check": true,
  "slice::<impl [T]>::swap_unchecked::precondition_check": true,
  "slice::cmp::as_underlying": true,
  "slice::index::into_range": true,
  "slice::index::into_range_unchecked": true,
  "slice::index::into_slice_range": true,
  "slice::index::slice_index_fail": true,
  "slice::index::slice_index_fail::do_panic": true,
  "slice::index::slice_index_fail::do_panic::compiletime": true,
  "slice::index::slice_index_fail::do_panic::runtime": true,
  "slice::memchr::contains_zero_byte": true,
  "slice::rotate::const_min": true,
  "slice::sort::shared::smallsort::panic_on_ord_violation": true,
  "slice::sort::stable::drift::DriftsortRun::len": true,
  "slice::sort::stable::drift::DriftsortRun::new_sorted": true,
  "slice::sort::stable::drift::DriftsortRun::new_unsorted": true,
  "slice::sort::stable::drift::DriftsortRun::sorted": true,
  "slice::sort::stable::drift::merge_tree_depth": true,
  "slice::sort::stable::drift::merge_tree_scale_factor": true,
  "slice::sort::stable::drift::sqrt_approx": true,
  "str::<impl default::Default for &mut str>::default": true,
  "str::<impl default::Default for &str>::default": true,
  "str::count::contains_non_continuation_byte": true,
  "str::count::sum_bytes_in_usize": true,
  "str::error::Utf8Error::error_len": true,
  "str::error::Utf8Error::valid_up_to": true,
  "str::pattern::TwoWaySearcher::byteset_contains": true,
  "str::pattern::verify::check_small_slice_eq": true,
  "str::pattern::verify::check_small_slice_eq_empty": true,
  "str::traits::<impl slice::index::SliceIndex<str> for ops::range::Range<usize>>::get_unchecked::precondition_check": true,
  "str::traits::<impl slice::index::SliceIndex<str> for ops::range::Range<usize>>::get_unchecked_mut::precondition_check": true,
  "str::traits::<impl slice::index::SliceIndex<str> for range::Range<usize>>::get_unchecked::precondition_check": true,
  "str::traits::<impl slice::index::SliceIndex<str> for range::Range<usize>>::get_unchecked_mut::precondition_check": true,
  "str::traits::str_index_overflow_fail": true,
  "str::validations::contains_nonascii": true,
  "str::validations::utf8_acc_cont_byte": true,
  "str::validations::utf8_char_width": true,
  "str::validations::utf8_first_byte": true,
  "str::validations::utf8_is_cont_byte": true,
  "string::String::new": true,
  "string::String::try_with_capacity": true,
  "string::String::with_capacity": true,
  "sync::WaitTimeoutResult::timed_out": true,
  "sync::Weak::<T, A>::upgrade::checked_increment": true,
  "sync::arcinner_layout_for_value_layout": true,
  "sync::atomic::AtomicBool::as_ptr": true,
  "sync::atomic::AtomicBool::compare_and_swap": true,
  "sync::atomic::AtomicBool::compare_exchange": true,
  "sync::atomic::AtomicBool::compare_exchange_weak": true,
  "sync::atomic::AtomicBool::fetch_and": true,
  "sync::atomic::AtomicBool::fetch_nand": true,
  "sync::atomic::AtomicBool::fetch_not": true,
  "sync::atomic::AtomicBool::fetch_or": true,
  "sync::atomic::AtomicBool::fetch_xor": true,
  "sync::atomic::AtomicBool::from_mut": true,
  "sync::atomic::AtomicBool::get_mut": true,
  "sync::atomic::AtomicBool::into_inner": true,
  "sync::atomic::AtomicBool::load": true,
  "sync::atomic::AtomicBool::new": true,
  "sync::atomic::AtomicBool::store": true,
  "sync::atomic::AtomicBool::swap": true,
  "sync::atomic::AtomicI16::as_ptr": true,
  "sync::atomic::AtomicI16::compare_and_swap": true,
  "sync::atomic::AtomicI16::compare_exchange": true,
  "sync::atomic::AtomicI16::compare_exchange_weak": true,
  "sync::atomic::AtomicI16::fetch_add": true,
  "sync::atomic::AtomicI16::fetch_and": true,
  "sync::atomic::AtomicI16::fetch_max": true,
  "sync::atomic::AtomicI16::fetch_min": true,
  "sync::atomic::AtomicI16::fetch_nand": true,
  "sync::atomic::AtomicI16::fetch_or": true,
  "sync::atomic::AtomicI16::fetch_sub": true,
  "sync::atomic::AtomicI16::fetch_xor": true,
  "sync::atomic::AtomicI16::from_mut": true,
  "sync::atomic::AtomicI16::get_mut": true,
  "sync::atomic::AtomicI16::into_inner": true,
  "sync::atomic::AtomicI16::load": true,
  "sync::atomic::AtomicI16::new": true,
  "sync::atomic::AtomicI16::store": true,
  "sync::atomic::AtomicI16::swap": true,
  "sync::atomic::AtomicI32::as_ptr": true,
  "sync::atomic::AtomicI32::compare_and_swap": true,
  "sync::atomic::AtomicI32::compare_exchange": true,
  "sync::atomic::AtomicI32::compare_exchange_weak": true,
  "sync::atomic::AtomicI32::fetch_add": true,
  "sync::atomic::AtomicI32::fetch_and": true,
  "sync::atomic::AtomicI32::fetch_max": true,
  "sync::atomic::AtomicI32::fetch_min": true,
  "sync::atomic::AtomicI32::fetch_nand": true,
  "sync::atomic::AtomicI32::fetch_or": true,
  "sync::atomic::AtomicI32::fetch_sub": true,
  "sync::atomic::AtomicI32::fetch_xor": true,
  "sync::atomic::AtomicI32::from_mut": true,
  "sync::atomic::AtomicI32::get_mut": true,
  "sync::atomic::AtomicI32::into_inner": true,
  "sync::atomic::AtomicI32::load": true,
  "sync::atomic::AtomicI32::new": true,
  "sync::atomic::AtomicI32::store": true,
  "sync::atomic::AtomicI32::swap": true,
  "sync::atomic::AtomicI64::as_ptr": true,
  "sync::atomic::AtomicI64::compare_and_swap": true,
  "sync::atomic::AtomicI64::compare_exchange": true,
  "sync::atomic::AtomicI64::compare_exchange_weak": true,
  "sync::atomic::AtomicI64::fetch_add": true,
  "sync::atomic::AtomicI64::fetch_and": true,
  "sync::atomic::AtomicI64::fetch_max": true,
  "sync::atomic::AtomicI64::fetch_min": true,
  "sync::atomic::AtomicI64::fetch_nand": true,
  "sync::atomic::AtomicI64::fetch_or": true,
  "sync::atomic::AtomicI64::fetch_sub": true,
  "sync::atomic::AtomicI64::fetch_xor": true,
  "sync::atomic::AtomicI64::from_mut": true,
  "sync::atomic::AtomicI64::get_mut": true,
  "sync::atomic::AtomicI64::into_inner": true,
  "sync::atomic::AtomicI64::load": true,
  "sync::atomic::AtomicI64::new": true,
  "sync::atomic::AtomicI64::store": true,
  "sync::atomic::AtomicI64::swap": true,
  "sync::atomic::AtomicI8::as_ptr": true,
  "sync::atomic::AtomicI8::compare_and_swap": true,
  "sync::atomic::AtomicI8::compare_exchange": true,
  "sync::atomic::AtomicI8::compare_exchange_weak": true,
  "sync::atomic::AtomicI8::fetch_add": true,
  "sync::atomic::AtomicI8::fetch_and": true,
  "sync::atomic::AtomicI8::fetch_max": true,
  "sync::atomic::AtomicI8::fetch_min": true,
  "sync::atomic::AtomicI8::fetch_nand": true,
  "sync::atomic::AtomicI8::fetch_or": true,
  "sync::atomic::AtomicI8::fetch_sub": true,
  "sync::atomic::AtomicI8::fetch_xor": true,
  "sync::atomic::AtomicI8::from_mut": true,
  "sync::atomic::AtomicI8::get_mut": true,
  "sync::atomic::AtomicI8::into_inner": true,
  "sync::atomic::AtomicI8::load": true,
  "sync::atomic::AtomicI8::new": true,
  "sync::atomic::AtomicI8::store": true,
  "sync::atomic::AtomicI8::swap": true,
  "sync::atomic::AtomicIsize::as_ptr": true,
  "sync::atomic::AtomicIsize::compare_and_swap": true,
  "sync::atomic::AtomicIsize::compare_exchange": true,
  "sync::atomic::AtomicIsize::compare_exchange_weak": true,
  "sync::atomic::AtomicIsize::fetch_add": true,
  "sync::atomic::AtomicIsize::fetch_and": true,
  "sync::atomic::AtomicIsize::fetch_max": true,
  "sync::atomic::AtomicIsize::fetch_min": true,
  "sync::atomic::AtomicIsize::fetch_nand": true,
  "sync::atomic::AtomicIsize::fetch_or": true,
  "sync::atomic::AtomicIsize::fetch_sub": true,
  "sync::atomic::AtomicIsize::fetch_xor": true,
  "sync::atomic::AtomicIsize::from_mut": true,
  "sync::atomic::AtomicIsize::get_mut": true,
  "sync::atomic::AtomicIsize::into_inner": true,
  "sync::atomic::AtomicIsize::load": true,
  "sync::atomic::AtomicIsize::new": true,
  "sync::atomic::AtomicIsize::store": true,
  "sync::atomic::AtomicIsize::swap": true,
  "sync::atomic::AtomicU16::as_ptr": true,
  "sync::atomic::AtomicU16::compare_and_swap": true,
  "sync::atomic::AtomicU16::compare_exchange": true,
  "sync::atomic::AtomicU16::compare_exchange_weak": true,
  "sync::atomic::AtomicU16::fetch_add": true,
  "sync::atomic::AtomicU16::fetch_and": true,
  "sync::atomic::AtomicU16::fetch_max": true,
  "sync::atomic::AtomicU16::fetch_min": true,
  "sync::atomic::AtomicU16::fetch_nand": true,
  "sync::atomic::AtomicU16::fetch_or": true,
  "sync::atomic::AtomicU16::fetch_sub": true,
  "sync::atomic::AtomicU16::fetch_xor": true,
  "sync::atomic::AtomicU16::from_mut": true,
  "sync::atomic::AtomicU16::get_mut": true,
  "sync::atomic::AtomicU16::into_inner": true,
  "sync::atomic::AtomicU16::load": true,
  "sync::atomic::AtomicU16::new": true,
  "sync::atomic::AtomicU16::store": true,
  "sync::atomic::AtomicU16::swap": true,
  "sync::atomic::AtomicU32::as_ptr": true,
  "sync::atomic::AtomicU32::compare_and_swap": true,
  "sync::atomic::AtomicU32::compare_exchange": true,
  "sync::atomic::AtomicU32::compare_exchange_weak": true,
  "sync::atomic::AtomicU32::fetch_add": true,
  "sync::atomic::AtomicU32::fetch_and": true,
  "sync::atomic::AtomicU32::fetch_max": true,
  "sync::atomic::AtomicU32::fetch_min": true,
  "sync::atomic::AtomicU32::fetch_nand": true,
  "sync::atomic::AtomicU32::fetch_or": true,
  "sync::atomic::AtomicU32::fetch_sub": true,
  "sync::atomic::AtomicU32::fetch_xor": true,
  "sync::atomic::AtomicU32::from_mut": true,
  "sync::atomic::AtomicU32::get_mut": true,
  "sync::atomic::AtomicU32::into_inner": true,
  "sync::atomic::AtomicU32::load": true,
  "sync::atomic::AtomicU32::new": true,
  "sync::atomic::AtomicU32::store": true,
  "sync::atomic::AtomicU32::swap": true,
  "sync::atomic::AtomicU64::as_ptr": true,
  "sync::atomic::AtomicU64::compare_and_swap": true,
  "sync::atomic::AtomicU64::compare_exchange": true,
  "sync::atomic::AtomicU64::compare_exchange_weak": true,
  "sync::atomic::AtomicU64::fetch_add": true,
  "sync::atomic::AtomicU64::fetch_and": true,
  "sync::atomic::AtomicU64::fetch_max": true,
  "sync::atomic::AtomicU64::fetch_min": true,
  "sync::atomic::AtomicU64::fetch_nand": true,
  "sync::atomic::AtomicU64::fetch_or": true,
  "sync::atomic::AtomicU64::fetch_sub": true,
  "sync::atomic::AtomicU64::fetch_xor": true,
  "sync::atomic::AtomicU64::from_mut": true,
  "sync::atomic::AtomicU64::get_mut": true,
  "sync::atomic::AtomicU64::into_inner": true,
  "sync::atomic::AtomicU64::load": true,
  "sync::atomic::AtomicU64::new": true,
  "sync::atomic::AtomicU64::store": true,
  "sync::atomic::AtomicU64::swap": true,
  "sync::atomic::AtomicU8::as_ptr": true,
  "sync::atomic::AtomicU8::compare_and_swap": true,
  "sync::atomic::AtomicU8::compare_exchange": true,
  "sync::atomic::AtomicU8::compare_exchange_weak": true,
  "sync::atomic::AtomicU8::fetch_add": true,
  "sync::atomic::AtomicU8::fetch_and": true,
  "sync::atomic::AtomicU8::fetch_max": true,
  "sync::atomic::AtomicU8::fetch_min": true,
  "sync::atomic::AtomicU8::fetch_nand": true,
  "sync::atomic::AtomicU8::fetch_or": true,
  "sync::atomic::AtomicU8::fetch_sub": true,
  "sync::atomic::AtomicU8::fetch_xor": true,
  "sync::atomic::AtomicU8::from_mut": true,
  "sync::atomic::AtomicU8::get_mut": true,
  "sync::atomic::AtomicU8::into_inner": true,
  "sync::atomic::AtomicU8::load": true,
  "sync::atomic::AtomicU8::new": true,
  "sync::atomic::AtomicU8::store": true,
  "sync::atomic::AtomicU8::swap": true,
  "sync::atomic::AtomicUsize::as_ptr": true,
  "sync::atomic::AtomicUsize::compare_and_swap": true,
  "sync::atomic::AtomicUsize::compare_exchange": true,
  "sync::atomic::AtomicUsize::compare_exchange_weak": true,
  "sync::atomic::AtomicUsize::fetch_add": true,
  "sync::atomic::AtomicUsize::fetch_and": true,
  "sync::atomic::AtomicUsize::fetch_max": true,
  "sync::atomic::AtomicUsize::fetch_min": true,
  "sync::atomic::AtomicUsize::fetch_nand": true,
  "sync::atomic::AtomicUsize::fetch_or": true,
  "sync::atomic::AtomicUsize::fetch_sub": true,
  "sync::atomic::AtomicUsize::fetch_xor": true,
  "sync::atomic::AtomicUsize::from_mut": true,
  "sync::atomic::AtomicUsize::get_mut": true,
  "sync::atomic::AtomicUsize::into_inner": true,
  "sync::atomic::AtomicUsize::load": true,
  "sync::atomic::AtomicUsize::new": true,
  "sync::atomic::AtomicUsize::store": true,
  "sync::atomic::AtomicUsize::swap": true,
  "sync::atomic::compiler_fence": true,
  "sync::atomic::fence": true,
  "sync::atomic::spin_loop_hint": true,
  "sync::atomic::strongest_failure_ordering": true,
  "sync::barrier::Barrier::new": true,
  "sync::barrier::Barrier::wait": true,
  "sync::barrier::BarrierWaitResult::is_leader": true,
  "sync::data_offset_align": true,
  "sync::lazy_lock::panic_poisoned": true,
  "sync::mpmc::context::Context::new": true,
  "sync::mpmc::context::Context::with::CONTEXT::__init": true,
  "sync::mpmc::utils::Backoff::new": true,
  "sync::mpmc::utils::Backoff::spin_heavy": true,
  "sync::mpmc::utils::Backoff::spin_light": true,
  "sync::mpmc::waker::SyncWaker::new": true,
  "sync::mpmc::waker::Waker::new": true,
  "sync::mpmc::waker::current_thread_id": true,
  "sync::nonpoison::condvar::Condvar::new": true,
  "sync::nonpoison::condvar::Condvar::notify_all": true,
  "sync::nonpoison::condvar::Condvar::notify_one": true,
  "sync::poison::Flag::borrow": true,
  "sync::poison::Flag::clear": true,
  "sync::poison::Flag::done": true,
  "sync::poison::Flag::get": true,
  "sync::poison::Flag::guard": true,
  "sync::poison::Flag::new": true,
  "sync::poison::condvar::Condvar::new": true,
  "sync::poison::condvar::Condvar::notify_all": true,
  "sync::poison::condvar::Condvar::notify_one": true,
  "sync::poison::once::Once::is_completed": true,
  "sync::poison::once::Once::new": true,
  "sync::poison::once::Once::set_state": true,
  "sync::poison::once::Once::state": true,
  "sync::poison::once::Once::wait": true,
  "sync::poison::once::Once::wait_force": true,
  "sync::poison::once::OnceState::is_poisoned": true,
  "sync::poison::once::OnceState::poison": true,
  "sync::reentrant_lock::Tid::contains": true,
  "sync::reentrant_lock::Tid::new": true,
  "sync::reentrant_lock::Tid::set": true,
  "sys::alloc::unix::<impl core::alloc::GlobalAlloc for alloc::System>::alloc": true,
  "sys::alloc::unix::<impl core::alloc::GlobalAlloc for alloc::System>::alloc_zeroed": true,
  "sys::alloc::unix::aligned_malloc": true,
  "sys::anonymous_pipe::unix::pipe": true,
  "sys::args::unix::args": true,
  "sys::args::unix::imp::argc_argv": true,
  "sys::backtrace::lock::<'_>": true,
  "sys::backtrace::set_image_base": true,
  "sys::env::unix::env": true,
  "sys::env::unix::env_read_lock": true,
  "sys::env::unix::environ": true,
  "sys::exit_guard::unique_thread_exit": true,
  "sys::fd::unix::FileDesc::duplicate": true,
  "sys::fd::unix::FileDesc::is_read_vectored": true,
  "sys::fd::unix::FileDesc::is_write_vectored": true,
  "sys::fd::unix::FileDesc::set_cloexec": true,
  "sys::fd::unix::FileDesc::set_nonblocking": true,
  "sys::fd::unix::FileDesc::try_clone": true,
  "sys::fd::unix::max_iov": true,
  "sys::fs::unix::DirBuilder::new": true,
  "sys::fs::unix::DirBuilder::set_mode": true,
  "sys::fs::unix::File::datasync": true,
  "sys::fs::unix::File::datasync::os_datasync": true,
  "sys::fs::unix::File::duplicate": true,
  "sys::fs::unix::File::file_attr": true,
  "sys::fs::unix::File::flush": true,
  "sys::fs::unix::File::fsync": true,
  "sys::fs::unix::File::fsync::os_fsync": true,
  "sys::fs::unix::File::is_read_vectored": true,
  "sys::fs::unix::File::is_write_vectored": true,
  "sys::fs::unix::File::lock": true,
  "sys::fs::unix::File::lock_shared": true,
  "sys::fs::unix::File::seek": true,
  "sys::fs::unix::File::set_permissions": true,
  "sys::fs::unix::File::set_times": true,
  "sys::fs::unix::File::size": true,
  "sys::fs::unix::File::tell": true,
  "sys::fs::unix::File::truncate": true,
  "sys::fs::unix::File::try_lock": true,
  "sys::fs::unix::File::try_lock_shared": true,
  "sys::fs::unix::File::unlock": true,
  "sys::fs::unix::FileAttr::accessed": true,
  "sys::fs::unix::FileAttr::created": true,
  "sys::fs::unix::FileAttr::file_type": true,
  "sys::fs::unix::FileAttr::from_stat64": true,
  "sys::fs::unix::FileAttr::modified": true,
  "sys::fs::unix::FileAttr::perm": true,
  "sys::fs::unix::FileAttr::size": true,
  "sys::fs::unix::FilePermissions::mode": true,
  "sys::fs::unix::FilePermissions::readonly": true,
  "sys::fs::unix::FilePermissions::set_readonly": true,
  "sys::fs::unix::FileTimes::set_accessed": true,
  "sys::fs::unix::FileTimes::set_modified": true,
  "sys::fs::unix::FileType::is": true,
  "sys::fs::unix::FileType::is_dir": true,
  "sys::fs::unix::FileType::is_file": true,
  "sys::fs::unix::FileType::is_symlink": true,
  "sys::fs::unix::FileType::masked": true,
  "sys::fs::unix::OpenOptions::append": true,
  "sys::fs::unix::OpenOptions::create": true,
  "sys::fs::unix::OpenOptions::create_new": true,
  "sys::fs::unix::OpenOptions::custom_flags": true,
  "sys::fs::unix::OpenOptions::get_access_mode": true,
  "sys::fs::unix::OpenOptions::get_creation_mode": true,
  "sys::fs::unix::OpenOptions::mode": true,
  "sys::fs::unix::OpenOptions::new": true,
  "sys::fs::unix::OpenOptions::read": true,
  "sys::fs::unix::OpenOptions::truncate": true,
  "sys::fs::unix::OpenOptions::write": true,
  "sys::fs::unix::debug_assert_fd_is_open": true,
  "sys::fs::unix::fchown": true,
  "sys::fs::unix::remove_dir_impl::fdreaddir": true,
  "sys::net::connection::socket::TcpListener::accept": true,
  "sys::net::connection::socket::TcpListener::duplicate": true,
  "sys::net::connection::socket::TcpListener::into_socket": true,
  "sys::net::connection::socket::TcpListener::only_v6": true,
  "sys::net::connection::socket::TcpListener::set_nonblocking": true,
  "sys::net::connection::socket::TcpListener::set_only_v6": true,
  "sys::net::connection::socket::TcpListener::set_ttl": true,
  "sys::net::connection::socket::TcpListener::socket": true,
  "sys::net::connection::socket::TcpListener::socket_addr": true,
  "sys::net::connection::socket::TcpListener::take_error": true,
  "sys::net::connection::socket::TcpListener::ttl": true,
  "sys::net::connection::socket::TcpStream::connect_timeout": true,
  "sys::net::connection::socket::TcpStream::duplicate": true,
  "sys::net::connection::socket::TcpStream::into_socket": true,
  "sys::net::connection::socket::TcpStream::is_read_vectored": true,
  "sys::net::connection::socket::TcpStream::is_write_vectored": true,
  "sys::net::connection::socket::TcpStream::linger": true,
  "sys::net::connection::socket::TcpStream::nodelay": true,
  "sys::net::connection::socket::TcpStream::peer_addr": true,
  "sys::net::connection::socket::TcpStream::read_timeout": true,
  "sys::net::connection::socket::TcpStream::set_linger": true,
  "sys::net::connection::socket::TcpStream::set_nodelay": true,
  "sys::net::connection::socket::TcpStream::set_nonblocking": true,
  "sys::net::connection::socket::TcpStream::set_read_timeout": true,
  "sys::net::connection::socket::TcpStream::set_ttl": true,
  "sys::net::connection::socket::TcpStream::set_write_timeout": true,
  "sys::net::connection::socket::TcpStream::shutdown": true,
  "sys::net::connection::socket::TcpStream::socket": true,
  "sys::net::connection::socket::TcpStream::socket_addr": true,
  "sys::net::connection::socket::TcpStream::take_error": true,
  "sys::net::connection::socket::TcpStream::ttl": true,
  "sys::net::connection::socket::TcpStream::write_timeout": true,
  "sys::net::connection::socket::UdpSocket::broadcast": true,
  "sys::net::connection::socket::UdpSocket::duplicate": true,
  "sys::net::connection::socket::UdpSocket::into_socket": true,
  "sys::net::connection::socket::UdpSocket::join_multicast_v4": true,
  "sys::net::connection::socket::UdpSocket::join_multicast_v6": true,
  "sys::net::connection::socket::UdpSocket::leave_multicast_v4": true,
  "sys::net::connection::socket::UdpSocket::leave_multicast_v6": true,
  "sys::net::connection::socket::UdpSocket::multicast_loop_v4": true,
  "sys::net::connection::socket::UdpSocket::multicast_loop_v6": true,
  "sys::net::connection::socket::UdpSocket::multicast_ttl_v4": true,
  "sys::net::connection::socket::UdpSocket::peer_addr": true,
  "sys::net::connection::socket::UdpSocket::read_timeout": true,
  "sys::net::connection::socket::UdpSocket::set_broadcast": true,
  "sys::net::connection::socket::UdpSocket::set_multicast_loop_v4": true,
  "sys::net::connection::socket::UdpSocket::set_multicast_loop_v6": true,
  "sys::net::connection::socket::UdpSocket::set_multicast_ttl_v4": true,
  "sys::net::connection::socket::UdpSocket::set_nonblocking": true,
  "sys::net::connection::socket::UdpSocket::set_read_timeout": true,
  "sys::net::connection::socket::UdpSocket::set_ttl": true,
  "sys::net::connection::socket::UdpSocket::set_write_timeout": true,
  "sys::net::connection::socket::UdpSocket::socket": true,
  "sys::net::connection::socket::UdpSocket::socket_addr": true,
  "sys::net::connection::socket::UdpSocket::take_error": true,
  "sys::net::connection::socket::UdpSocket::ttl": true,
  "sys::net::connection::socket::UdpSocket::write_timeout": true,
  "sys::net::connection::socket::ip_v4_addr_from_c": true,
  "sys::net::connection::socket::ip_v4_addr_to_c": true,
  "sys::net::connection::socket::ip_v6_addr_from_c": true,
  "sys::net::connection::socket::ip_v6_addr_to_c": true,
  "sys::net::connection::socket::socket_addr_to_c": true,
  "sys::net::connection::socket::socket_addr_v4_from_c": true,
  "sys::net::connection::socket::socket_addr_v4_to_c": true,
  "sys::net::connection::socket::socket_addr_v6_from_c": true,
  "sys::net::connection::socket::socket_addr_v6_to_c": true,
  "sys::net::connection::socket::to_ipv6mr_interface": true,
  "sys::net::connection::socket::unix::Socket::as_raw": true,
  "sys::net::connection::socket::unix::Socket::connect": true,
  "sys::net::connection::socket::unix::Socket::connect_timeout": true,
  "sys::net::connection::socket::unix::Socket::deferaccept": true,
  "sys::net::connection::socket::unix::Socket::duplicate": true,
  "sys::net::connection::socket::unix::Socket::is_read_vectored": true,
  "sys::net::connection::socket::unix::Socket::is_write_vectored": true,
  "sys::net::connection::socket::unix::Socket::linger": true,
  "sys::net::connection::socket::unix::Socket::new": true,
  "sys::net::connection::socket::unix::Socket::new_pair": true,
  "sys::net::connection::socket::unix::Socket::new_raw": true,
  "sys::net::connection::socket::unix::Socket::nodelay": true,
  "sys::net::connection::socket::unix::Socket::passcred": true,
  "sys::net::connection::socket::unix::Socket::quickack": true,
  "sys::net::connection::socket::unix::Socket::set_deferaccept": true,
  "sys::net::connection::socket::unix::Socket::set_linger": true,
  "sys::net::connection::socket::unix::Socket::set_mark": true,
  "sys::net::connection::socket::unix::Socket::set_nodelay": true,
  "sys::net::connection::socket::unix::Socket::set_nonblocking": true,
  "sys::net::connection::socket::unix::Socket::set_passcred": true,
  "sys::net::connection::socket::unix::Socket::set_quickack": true,
  "sys::net::connection::socket::unix::Socket::set_timeout": true,
  "sys::net::connection::socket::unix::Socket::shutdown": true,
  "sys::net::connection::socket::unix::Socket::take_error": true,
  "sys::net::connection::socket::unix::Socket::timeout": true,
  "sys::net::connection::socket::unix::cvt_gai": true,
  "sys::net::connection::socket::unix::init": true,
  "sys::net::connection::socket::unix::on_resolver_failure": true,
  "sys::os_str::bytes::Buf::with_capacity": true,
  "sys::os_str::bytes::Slice::empty_box": true,
  "sys::pal::unix::abort_internal": true,
  "sys::pal::unix::cleanup": true,
  "sys::pal::unix::cvt_nz": true,
  "sys::pal::unix::decode_error_kind": true,
  "sys::pal::unix::futex::futex_wait": true,
  "sys::pal::unix::futex::futex_wake": true,
  "sys::pal::unix::futex::futex_wake_all": true,
  "sys::pal::unix::init::reset_sigpipe": true,
  "sys::pal::unix::init::sanitize_standard_fds": true,
  "sys::pal::unix::is_interrupted": true,
  "sys::pal::unix::kernel_copy::FdMeta::copy_file_range_candidate": true,
  "sys::pal::unix::kernel_copy::FdMeta::maybe_fifo": true,
  "sys::pal::unix::kernel_copy::FdMeta::potential_sendfile_source": true,
  "sys::pal::unix::kernel_copy::copy_regular_files": true,
  "sys::pal::unix::kernel_copy::copy_regular_files::probe_copy_file_range_support": true,
  "sys::pal::unix::kernel_copy::safe_kernel_copy": true,
  "sys::pal::unix::kernel_copy::sendfile_splice": true,
  "sys::pal::unix::linux::pidfd::PidFd::kill": true,
  "sys::pal::unix::linux::pidfd::PidFd::send_signal": true,
  "sys::pal::unix::linux::pidfd::PidFd::try_wait": true,
  "sys::pal::unix::linux::pidfd::PidFd::wait": true,
  "sys::pal::unix::on_broken_pipe_flag_used": true,
  "sys::pal::unix::os::current_exe": true,
  "sys::pal::unix::os::errno": true,
  "sys::pal::unix::os::error_string": true,
  "sys::pal::unix::os::exit": true,
  "sys::pal::unix::os::getcwd": true,
  "sys::pal::unix::os::getpid": true,
  "sys::pal::unix::os::getppid": true,
  "sys::pal::unix::os::glibc_version": true,
  "sys::pal::unix::os::home_dir": true,
  "sys::pal::unix::os::home_dir::fallback": true,
  "sys::pal::unix::os::page_size": true,
  "sys::pal::unix::os::set_errno": true,
  "sys::pal::unix::os::split_paths::is_separator": true,
  "sys::pal::unix::os::temp_dir": true,
  "sys::pal::unix::pipe::AnonPipe::as_file_desc": true,
  "sys::pal::unix::pipe::AnonPipe::is_read_vectored": true,
  "sys::pal::unix::pipe::AnonPipe::is_write_vectored": true,
  "sys::pal::unix::pipe::AnonPipe::try_clone": true,
  "sys::pal::unix::pipe::anon_pipe": true,
  "sys::pal::unix::stack_overflow::Handler::null": true,
  "sys::pal::unix::stack_overflow::imp::cleanup": true,
  "sys::pal::unix::stack_overflow::imp::current_guard": true,
  "sys::pal::unix::stack_overflow::imp::get_stack": true,
  "sys::pal::unix::stack_overflow::imp::get_stack_start": true,
  "sys::pal::unix::stack_overflow::imp::init": true,
  "sys::pal::unix::stack_overflow::imp::install_main_guard": true,
  "sys::pal::unix::stack_overflow::imp::install_main_guard_bsds": true,
  "sys::pal::unix::stack_overflow::imp::install_main_guard_default": true,
  "sys::pal::unix::stack_overflow::imp::install_main_guard_freebsd": true,
  "sys::pal::unix::stack_overflow::imp::install_main_guard_linux": true,
  "sys::pal::unix::stack_overflow::imp::install_main_guard_linux_musl": true,
  "sys::pal::unix::stack_overflow::imp::sigstack_size": true,
  "sys::pal::unix::stack_overflow::imp::stack_start_aligned": true,
  "sys::pal::unix::stack_overflow::thread_info::delete_current_info": true,
  "sys::pal::unix::stack_overflow::thread_info::spin_lock_in_setup": true,
  "sys::pal::unix::thread::Thread::id": true,
  "sys::pal::unix::thread::Thread::into_id": true,
  "sys::pal::unix::thread::Thread::join": true,
  "sys::pal::unix::thread::Thread::sleep": true,
  "sys::pal::unix::thread::Thread::sleep_until": true,
  "sys::pal::unix::thread::Thread::yield_now": true,
  "sys::pal::unix::thread::available_parallelism": true,
  "sys::pal::unix::thread::cgroups::quota": true,
  "sys::pal::unix::thread::current_os_id": true,
  "sys::pal::unix::thread::current_os_id::gettid": true,
  "sys::pal::unix::time::Instant::checked_add_duration": true,
  "sys::pal::unix::time::Instant::checked_sub_duration": true,
  "sys::pal::unix::time::Instant::checked_sub_instant": true,
  "sys::pal::unix::time::Instant::into_timespec": true,
  "sys::pal::unix::time::Instant::now": true,
  "sys::pal::unix::time::SystemTime::checked_add_duration": true,
  "sys::pal::unix::time::SystemTime::checked_sub_duration": true,
  "sys::pal::unix::time::SystemTime::new": true,
  "sys::pal::unix::time::SystemTime::now": true,
  "sys::pal::unix::time::SystemTime::sub_time": true,
  "sys::pal::unix::time::Timespec::checked_add_duration": true,
  "sys::pal::unix::time::Timespec::checked_sub_duration": true,
  "sys::pal::unix::time::Timespec::new": true,
  "sys::pal::unix::time::Timespec::new_unchecked": true,
  "sys::pal::unix::time::Timespec::now": true,
  "sys::pal::unix::time::Timespec::sub_timespec": true,
  "sys::pal::unix::time::Timespec::to_timespec": true,
  "sys::pal::unix::time::Timespec::zero": true,
  "sys::path::unix::is_sep_byte": true,
  "sys::path::unix::is_verbatim_sep": true,
  "sys::personality::dwarf::eh::round_up": true,
  "sys::process::unix::common::ChildStdio::fd": true,
  "sys::process::unix::common::ExitCode::as_i32": true,
  "sys::process::unix::common::cstring_array::CStringArray::with_capacity": true,
  "sys::process::unix::unix::<impl sys::process::unix::common::Command>::posix_spawn::get_posix_spawn_addchdir": true,
  "sys::process::unix::unix::ExitStatus::code": true,
  "sys::process::unix::unix::ExitStatus::continued": true,
  "sys::process::unix::unix::ExitStatus::core_dumped": true,
  "sys::process::unix::unix::ExitStatus::exit_ok": true,
  "sys::process::unix::unix::ExitStatus::exited": true,
  "sys::process::unix::unix::ExitStatus::from_waitid_siginfo": true,
  "sys::process::unix::unix::ExitStatus::into_raw": true,
  "sys::process::unix::unix::ExitStatus::new": true,
  "sys::process::unix::unix::ExitStatus::signal": true,
  "sys::process::unix::unix::ExitStatus::stopped_signal": true,
  "sys::process::unix::unix::ExitStatusError::code": true,
  "sys::process::unix::unix::Process::id": true,
  "sys::process::unix::unix::Process::kill": true,
  "sys::process::unix::unix::Process::new": true,
  "sys::process::unix::unix::Process::send_signal": true,
  "sys::process::unix::unix::Process::try_wait": true,
  "sys::process::unix::unix::Process::wait": true,
  "sys::process::unix::unix::linux_child_ext::<impl os::linux::process::ChildExt for process::Child>::into_pidfd": true,
  "sys::process::unix::unix::linux_child_ext::<impl os::linux::process::ChildExt for process::Child>::pidfd": true,
  "sys::process::unix::unix::signal_string": true,
  "sys::random::linux::hashmap_random_keys": true,
  "sys::stdio::unix::Stderr::new": true,
  "sys::stdio::unix::Stdin::new": true,
  "sys::stdio::unix::Stdout::new": true,
  "sys::stdio::unix::panic_output": true,
  "sys::sync::condvar::futex::Condvar::new": true,
  "sys::sync::condvar::futex::Condvar::notify_all": true,
  "sys::sync::condvar::futex::Condvar::notify_one": true,
  "sys::sync::condvar::futex::Condvar::wait": true,
  "sys::sync::condvar::futex::Condvar::wait_optional_timeout": true,
  "sys::sync::condvar::futex::Condvar::wait_timeout": true,
  "sys::sync::mutex::futex::Mutex::lock": true,
  "sys::sync::mutex::futex::Mutex::lock_contended": true,
  "sys::sync::mutex::futex::Mutex::new": true,
  "sys::sync::mutex::futex::Mutex::spin": true,
  "sys::sync::mutex::futex::Mutex::try_lock": true,
  "sys::sync::mutex::futex::Mutex::unlock": true,
  "sys::sync::mutex::futex::Mutex::wake": true,
  "sys::sync::once::futex::Once::is_completed": true,
  "sys::sync::once::futex::Once::new": true,
  "sys::sync::once::futex::Once::set_state": true,
  "sys::sync::once::futex::Once::state": true,
  "sys::sync::once::futex::Once::wait": true,
  "sys::sync::once::futex::OnceState::is_poisoned": true,
  "sys::sync::once::futex::OnceState::poison": true,
  "sys::sync::rwlock::futex::RwLock::downgrade": true,
  "sys::sync::rwlock::futex::RwLock::new": true,
  "sys::sync::rwlock::futex::RwLock::read": true,
  "sys::sync::rwlock::futex::RwLock::read_contended": true,
  "sys::sync::rwlock::futex::RwLock::read_unlock": true,
  "sys::sync::rwlock::futex::RwLock::spin_read": true,
  "sys::sync::rwlock::futex::RwLock::spin_write": true,
  "sys::sync::rwlock::futex::RwLock::try_read": true,
  "sys::sync::rwlock::futex::RwLock::try_write": true,
  "sys::sync::rwlock::futex::RwLock::wake_writer": true,
  "sys::sync::rwlock::futex::RwLock::wake_writer_or_readers": true,
  "sys::sync::rwlock::futex::RwLock::write": true,
  "sys::sync::rwlock::futex::RwLock::write_contended": true,
  "sys::sync::rwlock::futex::RwLock::write_unlock": true,
  "sys::sync::rwlock::futex::has_reached_max_readers": true,
  "sys::sync::rwlock::futex::has_readers_waiting": true,
  "sys::sync::rwlock::futex::has_writers_waiting": true,
  "sys::sync::rwlock::futex::is_read_lockable": true,
  "sys::sync::rwlock::futex::is_read_lockable_after_wakeup": true,
  "sys::sync::rwlock::futex::is_unlocked": true,
  "sys::sync::rwlock::futex::is_write_locked": true,
  "sys::sync::thread_parking::futex::Parker::park": true,
  "sys::sync::thread_parking::futex::Parker::park_timeout": true,
  "sys::sync::thread_parking::futex::Parker::unpark": true,
  "sys::thread_local::destructors::list::run": true,
  "sys::thread_local::guard::key::enable": true,
  "sys::thread_local::key::unix::destroy": true,
  "sys::thread_local::native::LocalPointer::__new": true,
  "sys_common::mul_div_u64": true,
  "task::wake::LocalWaker::noop": true,
  "task::wake::Waker::noop": true,
  "thread::Builder::new": true,
  "thread::ThreadId::as_u64": true,
  "thread::ThreadId::from_u64": true,
  "thread::ThreadId::new": true,
  "thread::ThreadId::new::exhausted": true,
  "thread::_assert_sync_and_send": true,
  "thread::available_parallelism": true,
  "thread::current::current": true,
  "thread::current::current_id": true,
  "thread::current::current_or_unnamed": true,
  "thread::current::current_os_id": true,
  "thread::current::drop_current": true,
  "thread::current::id::get": true,
  "thread::current::id::get_or_init": true,
  "thread::current::id::set": true,
  "thread::local::panic_access_error": true,
  "thread::main_thread::get": true,
  "thread::main_thread::set": true,
  "thread::panicking": true,
  "thread::park": true,
  "thread::park_timeout": true,
  "thread::park_timeout_ms": true,
  "thread::sleep": true,
  "thread::sleep_ms": true,
  "thread::sleep_until": true,
  "thread::yield_now": true,
  "time::<impl ops::arith::Mul<time::Duration> for u32>::mul": true,
  "time::<impl ub_checks::Invariant for num::niche_types::Nanoseconds>::is_safe": true,
  "time::Duration::abs_diff": true,
  "time::Duration::as_millis_f32": true,
  "time::Duration::as_millis_f64": true,
  "time::Duration::as_nanos": true,
  "time::Duration::as_secs_f32": true,
  "time::Duration::as_secs_f64": true,
  "time::Duration::div_duration_f32": true,
  "time::Duration::div_duration_f64": true,
  "time::Duration::div_f32": true,
  "time::Duration::div_f64": true,
  "time::Duration::from_days": true,
  "time::Duration::from_hours": true,
  "time::Duration::from_mins": true,
  "time::Duration::from_nanos_u128": true,
  "time::Duration::from_secs_f32": true,
  "time::Duration::from_secs_f64": true,
  "time::Duration::from_weeks": true,
  "time::Duration::is_zero": true,
  "time::Duration::mul_f32": true,
  "time::Duration::mul_f64": true,
  "time::Duration::saturating_add": true,
  "time::Duration::saturating_mul": true,
  "time::Duration::saturating_sub": true,
  "time::Duration::try_from_secs_f32": true,
  "time::Duration::try_from_secs_f64": true,
  "time::Instant::checked_add": true,
  "time::Instant::checked_duration_since": true,
  "time::Instant::checked_sub": true,
  "time::Instant::duration_since": true,
  "time::Instant::elapsed": true,
  "time::Instant::into_inner": true,
  "time::Instant::now": true,
  "time::Instant::saturating_duration_since": true,
  "time::SystemTime::checked_add": true,
  "time::SystemTime::checked_sub": true,
  "time::SystemTime::duration_since": true,
  "time::SystemTime::elapsed": true,
  "time::SystemTime::now": true,
  "time::SystemTimeError::duration": true,
  "time::duration_verify::safe_duration": true,
  "token_stream::<impl std::iter::IntoIterator for TokenStream>::into_iter": true,
  "tree_to_bridge_tree": true,
  "ub_checks::check_language_ub": true,
  "ub_checks::check_language_ub::compiletime": true,
  "ub_checks::check_language_ub::runtime": true,
  "ub_checks::is_valid_allocation_size": true,
  "unicode::printable::is_printable": true,
  "unicode::unicode_data::ShortOffsetRunHeader::new": true,
  "unicode::unicode_data::ShortOffsetRunHeader::prefix_sum": true,
  "unicode::unicode_data::ShortOffsetRunHeader::start_index": true,
  "unicode::unicode_data::alphabetic::lookup": true,
  "unicode::unicode_data::alphabetic::lookup_slow": true,
  "unicode::unicode_data::case_ignorable::lookup": true,
  "unicode::unicode_data::case_ignorable::lookup_slow": true,
  "unicode::unicode_data::cased::lookup": true,
  "unicode::unicode_data::cased::lookup_slow": true,
  "unicode::unicode_data::conversions::to_lower": true,
  "unicode::unicode_data::conversions::to_upper": true,
  "unicode::unicode_data::grapheme_extend::lookup": true,
  "unicode::unicode_data::grapheme_extend::lookup_slow": true,
  "unicode::unicode_data::lowercase::lookup": true,
  "unicode::unicode_data::n::lookup": true,
  "unicode::unicode_data::n::lookup_slow": true,
  "unicode::unicode_data::uppercase::lookup": true,
  "unicode::unicode_data::white_space::lookup": true,
  "unix::htonl": true,
  "unix::htons": true,
  "unix::linux_like::CMSG_ALIGN": true,
  "unix::linux_like::CMSG_LEN": true,
  "unix::linux_like::CMSG_SPACE": true,
  "unix::linux_like::IPOPT_CLASS": true,
  "unix::linux_like::IPOPT_COPIED": true,
  "unix::linux_like::IPOPT_NUMBER": true,
  "unix::linux_like::IPTOS_ECN": true,
  "unix::linux_like::KERNEL_VERSION": true,
  "unix::linux_like::QCMD": true,
  "unix::linux_like::SIGRTMAX": true,
  "unix::linux_like::SIGRTMIN": true,
  "unix::linux_like::WCOREDUMP": true,
  "unix::linux_like::WEXITSTATUS": true,
  "unix::linux_like::WIFCONTINUED": true,
  "unix::linux_like::WIFEXITED": true,
  "unix::linux_like::WIFSIGNALED": true,
  "unix::linux_like::WIFSTOPPED": true,
  "unix::linux_like::WSTOPSIG": true,
  "unix::linux_like::WTERMSIG": true,
  "unix::linux_like::W_EXITCODE": true,
  "unix::linux_like::W_STOPCODE": true,
  "unix::linux_like::_IO": true,
  "unix::linux_like::_IOC": true,
  "unix::linux_like::linux::BPF_CLASS": true,
  "unix::linux_like::linux::BPF_JUMP": true,
  "unix::linux_like::linux::BPF_MISCOP": true,
  "unix::linux_like::linux::BPF_MODE": true,
  "unix::linux_like::linux::BPF_OP": true,
  "unix::linux_like::linux::BPF_RVAL": true,
  "unix::linux_like::linux::BPF_SIZE": true,
  "unix::linux_like::linux::BPF_SRC": true,
  "unix::linux_like::linux::BPF_STMT": true,
  "unix::linux_like::linux::CPU_ALLOC_SIZE": true,
  "unix::linux_like::linux::CPU_CLR": true,
  "unix::linux_like::linux::CPU_COUNT": true,
  "unix::linux_like::linux::CPU_COUNT_S": true,
  "unix::linux_like::linux::CPU_EQUAL": true,
  "unix::linux_like::linux::CPU_ISSET": true,
  "unix::linux_like::linux::CPU_SET": true,
  "unix::linux_like::linux::CPU_ZERO": true,
  "unix::linux_like::linux::ELF32_R_INFO": true,
  "unix::linux_like::linux::ELF32_R_SYM": true,
  "unix::linux_like::linux::ELF32_R_TYPE": true,
  "unix::linux_like::linux::ELF64_R_INFO": true,
  "unix::linux_like::linux::ELF64_R_SYM": true,
  "unix::linux_like::linux::ELF64_R_TYPE": true,
  "unix::linux_like::linux::FUTEX_OP": true,
  "unix::linux_like::linux::IPTOS_PREC": true,
  "unix::linux_like::linux::IPTOS_TOS": true,
  "unix::linux_like::linux::NLA_ALIGN": true,
  "unix::linux_like::linux::RT_ADDRCLASS": true,
  "unix::linux_like::linux::RT_LOCALADDR": true,
  "unix::linux_like::linux::RT_TOS": true,
  "unix::linux_like::linux::SCTP_PR_INDEX": true,
  "unix::linux_like::linux::SCTP_PR_POLICY": true,
  "unix::linux_like::linux::SCTP_PR_PRIO_ENABLED": true,
  "unix::linux_like::linux::SCTP_PR_RTX_ENABLED": true,
  "unix::linux_like::linux::SCTP_PR_SET_POLICY": true,
  "unix::linux_like::linux::SCTP_PR_TTL_ENABLED": true,
  "unix::linux_like::linux::TPACKET_ALIGN": true,
  "unix::linux_like::linux::gnu::<impl unix::linux_like::linux::gnu::b64::x86_64::siginfo_t>::si_addr": true,
  "unix::linux_like::linux::gnu::<impl unix::linux_like::linux::gnu::b64::x86_64::siginfo_t>::si_pid": true,
  "unix::linux_like::linux::gnu::<impl unix::linux_like::linux::gnu::b64::x86_64::siginfo_t>::si_status": true,
  "unix::linux_like::linux::gnu::<impl unix::linux_like::linux::gnu::b64::x86_64::siginfo_t>::si_stime": true,
  "unix::linux_like::linux::gnu::<impl unix::linux_like::linux::gnu::b64::x86_64::siginfo_t>::si_uid": true,
  "unix::linux_like::linux::gnu::<impl unix::linux_like::linux::gnu::b64::x86_64::siginfo_t>::si_utime": true,
  "unix::linux_like::linux::gnu::<impl unix::linux_like::linux::gnu::b64::x86_64::siginfo_t>::si_value": true,
  "unix::linux_like::linux::gnu::<impl unix::linux_like::linux::gnu::b64::x86_64::siginfo_t>::sifields": true,
  "unix::linux_like::linux::issecure_mask": true,
  "unix::linux_like::linux::major": true,
  "unix::linux_like::linux::makedev": true,
  "unix::linux_like::linux::minor": true,
  "unix::ntohl": true,
  "unix::ntohs": true,
  "v0::HexNibbles::<'s>::try_parse_str_chars::{closure#2}::{closure#0}::utf8_len_from_first_byte": true,
  "v0::ParseError::message": true,
  "v0::basic_type": true,
  "vec::Vec::<T, A>::insert_mut::assert_failed": true,
  "vec::Vec::<T, A>::remove::assert_failed": true,
  "vec::Vec::<T, A>::split_off::assert_failed": true,
  "vec::Vec::<T, A>::swap_remove::assert_failed": true,
  "vec::set_len_on_drop::SetLenOnDrop::<'_>::new": true,
  "vector::SensibleMoveMask::get_for_offset": true,
  "vector::x86avx2::<impl vector::Vector for rustc_std_workspace_core::arch::x86_64::__m256i>::and": true,
  "vector::x86avx2::<impl vector::Vector for rustc_std_workspace_core::arch::x86_64::__m256i>::cmpeq": true,
  "vector::x86avx2::<impl vector::Vector for rustc_std_workspace_core::arch::x86_64::__m256i>::movemask": true,
  "vector::x86avx2::<impl vector::Vector for rustc_std_workspace_core::arch::x86_64::__m256i>::or": true,
  "vector::x86avx2::<impl vector::Vector for rustc_std_workspace_core::arch::x86_64::__m256i>::splat": true,
  "vector::x86sse2::<impl vector::Vector for rustc_std_workspace_core::arch::x86_64::__m128i>::and": true,
  "vector::x86sse2::<impl vector::Vector for rustc_std_workspace_core::arch::x86_64::__m128i>::cmpeq": true,
  "vector::x86sse2::<impl vector::Vector for rustc_std_workspace_core::arch::x86_64::__m128i>::movemask": true,
  "vector::x86sse2::<impl vector::Vector for rustc_std_workspace_core::arch::x86_64::__m128i>::or": true,
  "vector::x86sse2::<impl vector::Vector for rustc_std_workspace_core::arch::x86_64::__m128i>::splat": true,
  "wtf8::<impl core::wtf8::Wtf8>::empty_box": true,
  "wtf8::CodePoint::from_char": true,
  "wtf8::CodePoint::from_u32": true,
  "wtf8::CodePoint::from_u32_unchecked": true,
  "wtf8::CodePoint::to_char": true,
  "wtf8::CodePoint::to_char_lossy": true,
  "wtf8::CodePoint::to_lead_surrogate": true,
  "wtf8::CodePoint::to_trail_surrogate": true,
  "wtf8::CodePoint::to_u32": true,
  "wtf8::Wtf8Buf::new": true,
  "wtf8::Wtf8Buf::with_capacity": true,
  "wtf8::decode_surrogate": true,
  "wtf8::decode_surrogate_pair": true
}
