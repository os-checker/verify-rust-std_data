{
  "<ascii::ascii_char::AsciiChar as iter::range::Step>::backward_unchecked": true,
  "<ascii::ascii_char::AsciiChar as iter::range::Step>::forward_unchecked": true,
  "<bool as intrinsics::fallback::DisjointBitOr>::disjoint_bitor": true,
  "<char as iter::range::Step>::backward_unchecked": true,
  "<char as iter::range::Step>::forward_unchecked": true,
  "<char::CaseMappingIter as iter::traits::iterator::Iterator>::__iterator_get_unchecked": true,
  "<char::ToLowercase as iter::traits::iterator::Iterator>::__iterator_get_unchecked": true,
  "<char::ToUppercase as iter::traits::iterator::Iterator>::__iterator_get_unchecked": true,
  "<f128 as convert::num::FloatToInt<i128>>::to_int_unchecked": true,
  "<f128 as convert::num::FloatToInt<i16>>::to_int_unchecked": true,
  "<f128 as convert::num::FloatToInt<i32>>::to_int_unchecked": true,
  "<f128 as convert::num::FloatToInt<i64>>::to_int_unchecked": true,
  "<f128 as convert::num::FloatToInt<i8>>::to_int_unchecked": true,
  "<f128 as convert::num::FloatToInt<isize>>::to_int_unchecked": true,
  "<f128 as convert::num::FloatToInt<u128>>::to_int_unchecked": true,
  "<f128 as convert::num::FloatToInt<u16>>::to_int_unchecked": true,
  "<f128 as convert::num::FloatToInt<u32>>::to_int_unchecked": true,
  "<f128 as convert::num::FloatToInt<u64>>::to_int_unchecked": true,
  "<f128 as convert::num::FloatToInt<u8>>::to_int_unchecked": true,
  "<f128 as convert::num::FloatToInt<usize>>::to_int_unchecked": true,
  "<f16 as convert::num::FloatToInt<i128>>::to_int_unchecked": true,
  "<f16 as convert::num::FloatToInt<i16>>::to_int_unchecked": true,
  "<f16 as convert::num::FloatToInt<i32>>::to_int_unchecked": true,
  "<f16 as convert::num::FloatToInt<i64>>::to_int_unchecked": true,
  "<f16 as convert::num::FloatToInt<i8>>::to_int_unchecked": true,
  "<f16 as convert::num::FloatToInt<isize>>::to_int_unchecked": true,
  "<f16 as convert::num::FloatToInt<u128>>::to_int_unchecked": true,
  "<f16 as convert::num::FloatToInt<u16>>::to_int_unchecked": true,
  "<f16 as convert::num::FloatToInt<u32>>::to_int_unchecked": true,
  "<f16 as convert::num::FloatToInt<u64>>::to_int_unchecked": true,
  "<f16 as convert::num::FloatToInt<u8>>::to_int_unchecked": true,
  "<f16 as convert::num::FloatToInt<usize>>::to_int_unchecked": true,
  "<f32 as convert::num::FloatToInt<i128>>::to_int_unchecked": true,
  "<f32 as convert::num::FloatToInt<i16>>::to_int_unchecked": true,
  "<f32 as convert::num::FloatToInt<i32>>::to_int_unchecked": true,
  "<f32 as convert::num::FloatToInt<i64>>::to_int_unchecked": true,
  "<f32 as convert::num::FloatToInt<i8>>::to_int_unchecked": true,
  "<f32 as convert::num::FloatToInt<isize>>::to_int_unchecked": true,
  "<f32 as convert::num::FloatToInt<u128>>::to_int_unchecked": true,
  "<f32 as convert::num::FloatToInt<u16>>::to_int_unchecked": true,
  "<f32 as convert::num::FloatToInt<u32>>::to_int_unchecked": true,
  "<f32 as convert::num::FloatToInt<u64>>::to_int_unchecked": true,
  "<f32 as convert::num::FloatToInt<u8>>::to_int_unchecked": true,
  "<f32 as convert::num::FloatToInt<usize>>::to_int_unchecked": true,
  "<f64 as convert::num::FloatToInt<i128>>::to_int_unchecked": true,
  "<f64 as convert::num::FloatToInt<i16>>::to_int_unchecked": true,
  "<f64 as convert::num::FloatToInt<i32>>::to_int_unchecked": true,
  "<f64 as convert::num::FloatToInt<i64>>::to_int_unchecked": true,
  "<f64 as convert::num::FloatToInt<i8>>::to_int_unchecked": true,
  "<f64 as convert::num::FloatToInt<isize>>::to_int_unchecked": true,
  "<f64 as convert::num::FloatToInt<u128>>::to_int_unchecked": true,
  "<f64 as convert::num::FloatToInt<u16>>::to_int_unchecked": true,
  "<f64 as convert::num::FloatToInt<u32>>::to_int_unchecked": true,
  "<f64 as convert::num::FloatToInt<u64>>::to_int_unchecked": true,
  "<f64 as convert::num::FloatToInt<u8>>::to_int_unchecked": true,
  "<f64 as convert::num::FloatToInt<usize>>::to_int_unchecked": true,
  "<i128 as intrinsics::fallback::DisjointBitOr>::disjoint_bitor": true,
  "<i128 as iter::range::Step>::backward_unchecked": true,
  "<i128 as iter::range::Step>::forward_unchecked": true,
  "<i16 as intrinsics::fallback::DisjointBitOr>::disjoint_bitor": true,
  "<i16 as iter::range::Step>::backward_unchecked": true,
  "<i16 as iter::range::Step>::forward_unchecked": true,
  "<i32 as intrinsics::fallback::DisjointBitOr>::disjoint_bitor": true,
  "<i32 as iter::range::Step>::backward_unchecked": true,
  "<i32 as iter::range::Step>::forward_unchecked": true,
  "<i64 as intrinsics::fallback::DisjointBitOr>::disjoint_bitor": true,
  "<i64 as iter::range::Step>::backward_unchecked": true,
  "<i64 as iter::range::Step>::forward_unchecked": true,
  "<i8 as intrinsics::fallback::DisjointBitOr>::disjoint_bitor": true,
  "<i8 as iter::range::Step>::backward_unchecked": true,
  "<i8 as iter::range::Step>::forward_unchecked": true,
  "<isize as intrinsics::fallback::DisjointBitOr>::disjoint_bitor": true,
  "<isize as iter::range::Step>::backward_unchecked": true,
  "<isize as iter::range::Step>::forward_unchecked": true,
  "<net::ip_addr::Ipv4Addr as iter::range::Step>::backward_unchecked": true,
  "<net::ip_addr::Ipv4Addr as iter::range::Step>::forward_unchecked": true,
  "<net::ip_addr::Ipv6Addr as iter::range::Step>::backward_unchecked": true,
  "<net::ip_addr::Ipv6Addr as iter::range::Step>::forward_unchecked": true,
  "<u128 as intrinsics::fallback::DisjointBitOr>::disjoint_bitor": true,
  "<u128 as iter::range::Step>::backward_unchecked": true,
  "<u128 as iter::range::Step>::forward_unchecked": true,
  "<u16 as intrinsics::fallback::DisjointBitOr>::disjoint_bitor": true,
  "<u16 as iter::range::Step>::backward_unchecked": true,
  "<u16 as iter::range::Step>::forward_unchecked": true,
  "<u32 as intrinsics::fallback::DisjointBitOr>::disjoint_bitor": true,
  "<u32 as iter::range::Step>::backward_unchecked": true,
  "<u32 as iter::range::Step>::forward_unchecked": true,
  "<u64 as intrinsics::fallback::DisjointBitOr>::disjoint_bitor": true,
  "<u64 as iter::range::Step>::backward_unchecked": true,
  "<u64 as iter::range::Step>::forward_unchecked": true,
  "<u8 as intrinsics::fallback::DisjointBitOr>::disjoint_bitor": true,
  "<u8 as iter::range::Step>::backward_unchecked": true,
  "<u8 as iter::range::Step>::forward_unchecked": true,
  "<usize as intrinsics::fallback::DisjointBitOr>::disjoint_bitor": true,
  "<usize as iter::range::Step>::backward_unchecked": true,
  "<usize as iter::range::Step>::forward_unchecked": true,
  "alloc::layout::Layout::from_size_align": true,
  "alloc::layout::Layout::from_size_align_unchecked": true,
  "ascii::ascii_char::AsciiChar::from_u8": true,
  "ascii::ascii_char::AsciiChar::from_u8_unchecked": true,
  "char::convert::from_u32_unchecked": true,
  "char::from_u32_unchecked": true,
  "hint::assert_unchecked": true,
  "hint::unreachable_unchecked": true,
  "num::<impl i128>::unchecked_add": true,
  "num::<impl i128>::unchecked_neg": true,
  "num::<impl i128>::unchecked_shl": true,
  "num::<impl i128>::unchecked_shr": true,
  "num::<impl i128>::unchecked_sub": true,
  "num::<impl i128>::wrapping_shl": true,
  "num::<impl i128>::wrapping_shr": true,
  "num::<impl i16>::unchecked_add": true,
  "num::<impl i16>::unchecked_neg": true,
  "num::<impl i16>::unchecked_shl": true,
  "num::<impl i16>::unchecked_shr": true,
  "num::<impl i16>::unchecked_sub": true,
  "num::<impl i16>::wrapping_shl": true,
  "num::<impl i16>::wrapping_shr": true,
  "num::<impl i32>::unchecked_add": true,
  "num::<impl i32>::unchecked_neg": true,
  "num::<impl i32>::unchecked_shl": true,
  "num::<impl i32>::unchecked_shr": true,
  "num::<impl i32>::unchecked_sub": true,
  "num::<impl i32>::wrapping_shl": true,
  "num::<impl i32>::wrapping_shr": true,
  "num::<impl i64>::unchecked_add": true,
  "num::<impl i64>::unchecked_neg": true,
  "num::<impl i64>::unchecked_shl": true,
  "num::<impl i64>::unchecked_shr": true,
  "num::<impl i64>::unchecked_sub": true,
  "num::<impl i64>::wrapping_shl": true,
  "num::<impl i64>::wrapping_shr": true,
  "num::<impl i8>::unchecked_add": true,
  "num::<impl i8>::unchecked_neg": true,
  "num::<impl i8>::unchecked_shl": true,
  "num::<impl i8>::unchecked_shr": true,
  "num::<impl i8>::unchecked_sub": true,
  "num::<impl i8>::wrapping_shl": true,
  "num::<impl i8>::wrapping_shr": true,
  "num::<impl isize>::unchecked_add": true,
  "num::<impl isize>::unchecked_neg": true,
  "num::<impl isize>::unchecked_shl": true,
  "num::<impl isize>::unchecked_shr": true,
  "num::<impl isize>::unchecked_sub": true,
  "num::<impl isize>::wrapping_shl": true,
  "num::<impl isize>::wrapping_shr": true,
  "num::<impl u128>::unchecked_add": true,
  "num::<impl u128>::unchecked_disjoint_bitor": true,
  "num::<impl u128>::unchecked_shl": true,
  "num::<impl u128>::unchecked_shr": true,
  "num::<impl u128>::unchecked_sub": true,
  "num::<impl u128>::wrapping_shl": true,
  "num::<impl u128>::wrapping_shr": true,
  "num::<impl u16>::unchecked_add": true,
  "num::<impl u16>::unchecked_disjoint_bitor": true,
  "num::<impl u16>::unchecked_shl": true,
  "num::<impl u16>::unchecked_shr": true,
  "num::<impl u16>::unchecked_sub": true,
  "num::<impl u16>::wrapping_shl": true,
  "num::<impl u16>::wrapping_shr": true,
  "num::<impl u32>::unchecked_add": true,
  "num::<impl u32>::unchecked_disjoint_bitor": true,
  "num::<impl u32>::unchecked_shl": true,
  "num::<impl u32>::unchecked_shr": true,
  "num::<impl u32>::unchecked_sub": true,
  "num::<impl u32>::wrapping_shl": true,
  "num::<impl u32>::wrapping_shr": true,
  "num::<impl u64>::unchecked_add": true,
  "num::<impl u64>::unchecked_disjoint_bitor": true,
  "num::<impl u64>::unchecked_shl": true,
  "num::<impl u64>::unchecked_shr": true,
  "num::<impl u64>::unchecked_sub": true,
  "num::<impl u64>::wrapping_shl": true,
  "num::<impl u64>::wrapping_shr": true,
  "num::<impl u8>::unchecked_add": true,
  "num::<impl u8>::unchecked_disjoint_bitor": true,
  "num::<impl u8>::unchecked_shl": true,
  "num::<impl u8>::unchecked_shr": true,
  "num::<impl u8>::unchecked_sub": true,
  "num::<impl u8>::wrapping_shl": true,
  "num::<impl u8>::wrapping_shr": true,
  "num::<impl usize>::unchecked_add": true,
  "num::<impl usize>::unchecked_disjoint_bitor": true,
  "num::<impl usize>::unchecked_shl": true,
  "num::<impl usize>::unchecked_shr": true,
  "num::<impl usize>::unchecked_sub": true,
  "num::<impl usize>::wrapping_shl": true,
  "num::<impl usize>::wrapping_shr": true,
  "num::dec2flt::decimal_seq::number_of_digits_decimal_left_shift": true,
  "num::nonzero::NonZero::<i128>::count_ones": true,
  "num::nonzero::NonZero::<i128>::rotate_left": true,
  "num::nonzero::NonZero::<i128>::rotate_right": true,
  "num::nonzero::NonZero::<i16>::count_ones": true,
  "num::nonzero::NonZero::<i16>::rotate_left": true,
  "num::nonzero::NonZero::<i16>::rotate_right": true,
  "num::nonzero::NonZero::<i32>::count_ones": true,
  "num::nonzero::NonZero::<i32>::rotate_left": true,
  "num::nonzero::NonZero::<i32>::rotate_right": true,
  "num::nonzero::NonZero::<i64>::count_ones": true,
  "num::nonzero::NonZero::<i64>::rotate_left": true,
  "num::nonzero::NonZero::<i64>::rotate_right": true,
  "num::nonzero::NonZero::<i8>::count_ones": true,
  "num::nonzero::NonZero::<i8>::rotate_left": true,
  "num::nonzero::NonZero::<i8>::rotate_right": true,
  "num::nonzero::NonZero::<isize>::count_ones": true,
  "num::nonzero::NonZero::<isize>::rotate_left": true,
  "num::nonzero::NonZero::<isize>::rotate_right": true,
  "num::nonzero::NonZero::<u128>::count_ones": true,
  "num::nonzero::NonZero::<u128>::rotate_left": true,
  "num::nonzero::NonZero::<u128>::rotate_right": true,
  "num::nonzero::NonZero::<u16>::count_ones": true,
  "num::nonzero::NonZero::<u16>::rotate_left": true,
  "num::nonzero::NonZero::<u16>::rotate_right": true,
  "num::nonzero::NonZero::<u32>::count_ones": true,
  "num::nonzero::NonZero::<u32>::rotate_left": true,
  "num::nonzero::NonZero::<u32>::rotate_right": true,
  "num::nonzero::NonZero::<u64>::count_ones": true,
  "num::nonzero::NonZero::<u64>::rotate_left": true,
  "num::nonzero::NonZero::<u64>::rotate_right": true,
  "num::nonzero::NonZero::<u8>::count_ones": true,
  "num::nonzero::NonZero::<u8>::rotate_left": true,
  "num::nonzero::NonZero::<u8>::rotate_right": true,
  "num::nonzero::NonZero::<usize>::count_ones": true,
  "num::nonzero::NonZero::<usize>::rotate_left": true,
  "num::nonzero::NonZero::<usize>::rotate_right": true,
  "ptr::align_offset::mod_inv": true,
  "ptr::align_offset::{closure#0}::{closure#1}::{closure#1}::mod_inv": true,
  "ptr::align_offset::{closure#2}::{closure#1}::mod_inv": true,
  "ptr::align_offset::{closure#3}::{closure#0}::mod_inv": true,
  "ptr::alignment::Alignment::as_nonzero": true,
  "ptr::alignment::Alignment::as_usize": true,
  "ptr::alignment::Alignment::log2": true,
  "ptr::alignment::Alignment::mask": true,
  "ptr::alignment::Alignment::new": true,
  "ptr::alignment::Alignment::new_unchecked": true,
  "time::Duration::from_micros": true,
  "time::Duration::from_millis": true,
  "time::Duration::from_nanos": true,
  "time::Duration::from_secs": true
}
