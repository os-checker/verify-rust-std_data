{
  "file": "core/src/../../stdarch/crates/core_arch/src/arm_shared/neon/mod.rs",
  "name": "<core_arch::arm_shared::neon::int32x4x3_t as core_arch::arm_shared::neon::AsUnsigned>::as_unsigned",
  "hash": "1247872298786075582413611562960821266224",
  "hash_direct": "17425521480936542174504026123045571909",
  "src": "fn as_unsigned(self) -> $unsigned {\n                unsafe { transmute(self) }\n            }",
  "macro_backtrace": [
    {
      "callsite": "impl_sign_conversions_neon! {\n    (i8, u8)\n    (i16, u16)\n    (i32, u32)\n    (i64, u64)\n    (*const i8, *const u8)\n    (*const i16, *const u16)\n    (*const i32, *const u32)\n    (*const i64, *const u64)\n    (*mut i8, *mut u8)\n    (*mut i16, *mut u16)\n    (*mut i32, *mut u32)\n    (*mut i64, *mut u64)\n    (int16x4_t, uint16x4_t)\n    (int16x8_t, uint16x8_t)\n    (int32x2_t, uint32x2_t)\n    (int32x4_t, uint32x4_t)\n    (int64x1_t, uint64x1_t)\n    (int64x2_t, uint64x2_t)\n    (int8x16_t, uint8x16_t)\n    (int8x8_t, uint8x8_t)\n    (uint16x4_t, int16x4_t)\n    (uint16x8_t, int16x8_t)\n    (uint32x2_t, int32x2_t)\n    (uint32x4_t, int32x4_t)\n    (uint64x1_t, int64x1_t)\n    (uint64x2_t, int64x2_t)\n    (uint8x16_t, int8x16_t)\n    (uint8x8_t, int8x8_t)\n    (int16x4x2_t, uint16x4x2_t)\n    (int16x4x3_t, uint16x4x3_t)\n    (int16x4x4_t, uint16x4x4_t)\n    (int16x8x2_t, uint16x8x2_t)\n    (int16x8x3_t, uint16x8x3_t)\n    (int16x8x4_t, uint16x8x4_t)\n    (int32x2x2_t, uint32x2x2_t)\n    (int32x2x3_t, uint32x2x3_t)\n    (int32x2x4_t, uint32x2x4_t)\n    (int32x4x2_t, uint32x4x2_t)\n    (int32x4x3_t, uint32x4x3_t)\n    (int32x4x4_t, uint32x4x4_t)\n    (int64x1x2_t, uint64x1x2_t)\n    (int64x1x3_t, uint64x1x3_t)\n    (int64x1x4_t, uint64x1x4_t)\n    (int64x2x2_t, uint64x2x2_t)\n    (int64x2x3_t, uint64x2x3_t)\n    (int64x2x4_t, uint64x2x4_t)\n    (int8x16x2_t, uint8x16x2_t)\n    (int8x16x3_t, uint8x16x3_t)\n    (int8x16x4_t, uint8x16x4_t)\n    (int8x8x2_t, uint8x8x2_t)\n    (int8x8x3_t, uint8x8x3_t)\n    (int8x8x4_t, uint8x8x4_t)\n    (uint16x4x2_t, int16x4x2_t)\n    (uint16x4x3_t, int16x4x3_t)\n    (uint16x4x4_t, int16x4x4_t)\n    (uint16x8x2_t, int16x8x2_t)\n    (uint16x8x3_t, int16x8x3_t)\n    (uint16x8x4_t, int16x8x4_t)\n    (uint32x2x2_t, int32x2x2_t)\n    (uint32x2x3_t, int32x2x3_t)\n    (uint32x2x4_t, int32x2x4_t)\n    (uint32x4x2_t, int32x4x2_t)\n    (uint32x4x3_t, int32x4x3_t)\n    (uint32x4x4_t, int32x4x4_t)\n    (uint64x1x2_t, int64x1x2_t)\n    (uint64x1x3_t, int64x1x3_t)\n    (uint64x1x4_t, int64x1x4_t)\n    (uint64x2x2_t, int64x2x2_t)\n    (uint64x2x3_t, int64x2x3_t)\n    (uint64x2x4_t, int64x2x4_t)\n    (uint8x16x2_t, int8x16x2_t)\n    (uint8x16x3_t, int8x16x3_t)\n    (uint8x16x4_t, int8x16x4_t)\n    (uint8x8x2_t, int8x8x2_t)\n    (uint8x8x3_t, int8x8x3_t)\n    (uint8x8x4_t, int8x8x4_t)\n}",
      "defsite": "macro_rules! impl_sign_conversions_neon {\n    ($(($signed:ty, $unsigned:ty))*) => ($(\n        impl AsUnsigned for $signed {\n            type Unsigned = $unsigned;\n\n            #[inline(always)]\n            fn as_unsigned(self) -> $unsigned {\n                unsafe { transmute(self) }\n            }\n        }\n\n        impl AsSigned for $unsigned {\n            type Signed = $signed;\n\n            #[inline(always)]\n            fn as_signed(self) -> $signed {\n                unsafe { transmute(self) }\n            }\n        }\n    )*)\n}"
    }
  ]
}
