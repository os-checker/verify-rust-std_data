{
  "file": "alloc/src/raw_vec/mod.rs",
  "name": "raw_vec::RawVec::<u8>::from_raw_parts_in",
  "hash": "297994680725544717712963616159856246440",
  "hash_direct": "148537764968364182221766699387057763266",
  "src": "pub(crate) unsafe fn from_raw_parts_in(ptr: *mut T, capacity: usize, alloc: A) -> Self {\n        // SAFETY: Precondition passed to the caller\n        unsafe {\n            let ptr = ptr.cast();\n            let capacity = new_cap::<T>(capacity);\n            Self {\n                inner: RawVecInner::from_raw_parts_in(ptr, capacity, alloc),\n                _marker: PhantomData,\n            }\n        }\n    }",
  "callees": [
    "157994002680687499199604882404754303722",
    "1711214648546878229516166388959941140765",
    "12281449246394340237926324936375242532",
    "181267529910573756716102767087485333561",
    "79817071675776388295206212610749591701",
    "1824545319189397521315695847785602896178",
    "116120406547640733017584320872607374165",
    "986792852990965178117440249555081278778",
    "90818112465881722349174357944217011292",
    "63085389524472853348886374617170044294",
    "181953690662554297912505335505865467275",
    "1793681111599931821712213635413918902143",
    "55408212128999564608147158566316072753",
    "62253773538177642182582821607134525533",
    "1028188214438922348315249270568765406459",
    "8661624221696451066954178811996173533",
    "159823931581541125634780307111242749117",
    "3511511025668649981121064674225687626",
    "110578059630913604067207515488861005594",
    "112989397975222255532054380452996322405"
  ]
}
