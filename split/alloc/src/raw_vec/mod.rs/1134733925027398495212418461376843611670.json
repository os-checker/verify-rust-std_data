{
  "file": "alloc/src/raw_vec/mod.rs",
  "name": "raw_vec::RawVecInner::current_memory",
  "hash": "1134733925027398495212418461376843611670",
  "hash_direct": "95463647090511316004237580115655655591",
  "src": "fn current_memory(&self, elem_layout: Layout) -> Option<(NonNull<u8>, Layout)> {\n        if elem_layout.size() == 0 || self.cap.as_inner() == 0 {\n            None\n        } else {\n            // We could use Layout::array here which ensures the absence of isize and usize overflows\n            // and could hypothetically handle differences between stride and size, but this memory\n            // has already been allocated so we know it can't overflow and currently Rust does not\n            // support such types. So we can do better by skipping some checks and avoid an unwrap.\n            unsafe {\n                let alloc_size = elem_layout.size().unchecked_mul(self.cap.as_inner());\n                let layout = Layout::from_size_align_unchecked(alloc_size, elem_layout.align());\n                Some((self.ptr.into(), layout))\n            }\n        }\n    }",
  "callees": [
    "12355321507198182179923507819259328874",
    "551718781299925181210024318657463093093",
    "137853700287551670782226478589806471967",
    "116988710396478150633330979827831642523",
    "1099899350342654162615874749245636043676",
    "226231406656220449317375090408588049354",
    "12281449246394340237926324936375242532",
    "181267529910573756716102767087485333561",
    "1824545319189397521315695847785602896178",
    "127326289725169637608193061289084434233",
    "51372523453683089364244340980133861262",
    "169382045895387326079929663684999712557",
    "8896238559920380735332622633484699245",
    "1458726197254824558216065392702185625706",
    "986792852990965178117440249555081278778",
    "90818112465881722349174357944217011292",
    "63085389524472853348886374617170044294",
    "41567241620038406215851091758143153711",
    "208567149182403132717134308235452563135",
    "107268837585413814953424804409381581391",
    "60935954792971328376900345179432816371",
    "1482905829916877089011245213746887628087",
    "59519543515179750412262355502277067147",
    "1418318020475359732510742947563716789523",
    "138781795485423979244701404398922630519",
    "112989397975222255532054380452996322405"
  ]
}
