{
  "file": "alloc/src/raw_vec/mod.rs",
  "name": "raw_vec::RawVecInner::current_memory",
  "hash": "12243330225917730232888975240710280267",
  "hash_direct": "95463647090511316004237580115655655591",
  "src": "fn current_memory(&self, elem_layout: Layout) -> Option<(NonNull<u8>, Layout)> {\n        if elem_layout.size() == 0 || self.cap.as_inner() == 0 {\n            None\n        } else {\n            // We could use Layout::array here which ensures the absence of isize and usize overflows\n            // and could hypothetically handle differences between stride and size, but this memory\n            // has already been allocated so we know it can't overflow and currently Rust does not\n            // support such types. So we can do better by skipping some checks and avoid an unwrap.\n            unsafe {\n                let alloc_size = elem_layout.size().unchecked_mul(self.cap.as_inner());\n                let layout = Layout::from_size_align_unchecked(alloc_size, elem_layout.align());\n                Some((self.ptr.into(), layout))\n            }\n        }\n    }",
  "callees": [
    "12355321507198182179923507819259328874",
    "1803329896288060234818324505062680243524",
    "74582435882304541756907371447791300562",
    "116988710396478150633330979827831642523",
    "1099899350342654162615874749245636043676",
    "226231406656220449317375090408588049354",
    "12281449246394340237926324936375242532",
    "181267529910573756716102767087485333561",
    "1824545319189397521315695847785602896178",
    "433890548510973964412005170244666884332",
    "897265533945643607115272871669854221703",
    "89502211078669479795623704974378882516",
    "8010637041282557608011263416999007001",
    "10807156967046331235155840709750757490",
    "986792852990965178117440249555081278778",
    "90818112465881722349174357944217011292",
    "63085389524472853348886374617170044294",
    "41567241620038406215851091758143153711",
    "219219865313711050111759755233398488515",
    "117471816198702018754540855755299259662",
    "60935954792971328376900345179432816371",
    "1482905829916877089011245213746887628087",
    "102689691599348045787776542664671783227",
    "1125405893673821863813596791513973728090",
    "166733430212842246099444193348241345083",
    "112989397975222255532054380452996322405"
  ]
}
