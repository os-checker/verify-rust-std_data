{
  "file": "alloc/src/rc.rs",
  "name": "rc::data_offset::<[u8]>",
  "hash": "103136042322717309592708406093439398375",
  "hash_direct": "51406372344196120553608867628043964003",
  "src": "unsafe fn data_offset<T: ?Sized>(ptr: *const T) -> usize {\n    // Align the unsized value to the end of the RcInner.\n    // Because RcInner is repr(C), it will always be the last field in memory.\n    // SAFETY: since the only unsized types possible are slices, trait objects,\n    // and extern types, the input safety requirement is currently enough to\n    // satisfy the requirements of align_of_val_raw; this is an implementation\n    // detail of the language that must not be relied upon outside of std.\n    unsafe { data_offset_align(align_of_val_raw(ptr)) }\n}",
  "callees": [
    "484411735138548681313387816401471475653",
    "1803329896288060234818324505062680243524",
    "74582435882304541756907371447791300562",
    "116988710396478150633330979827831642523",
    "1040308631271182854917194700025315006665",
    "1160350164201651479411530476629168645904",
    "1099899350342654162615874749245636043676",
    "1492460362374206871012573143365903954040",
    "42494860125193605572185859439048278702",
    "12281449246394340237926324936375242532",
    "181267529910573756716102767087485333561",
    "1824545319189397521315695847785602896178",
    "1755590597489080956017164030563725218772",
    "1249349045145634924810123909988310927923",
    "211500331809620092346474575105593072",
    "897265533945643607115272871669854221703",
    "89502211078669479795623704974378882516",
    "986792852990965178117440249555081278778",
    "90818112465881722349174357944217011292",
    "63085389524472853348886374617170044294",
    "41567241620038406215851091758143153711",
    "219219865313711050111759755233398488515",
    "117471816198702018754540855755299259662",
    "102689691599348045787776542664671783227",
    "166733430212842246099444193348241345083",
    "112989397975222255532054380452996322405"
  ]
}
