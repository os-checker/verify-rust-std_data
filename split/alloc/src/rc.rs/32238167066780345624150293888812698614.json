{
  "file": "alloc/src/rc.rs",
  "name": "rc::data_offset::<core::bstr::ByteStr>",
  "hash": "32238167066780345624150293888812698614",
  "hash_direct": "1773816639725980422218356504082905505829",
  "src": "unsafe fn data_offset<T: ?Sized>(ptr: *const T) -> usize {\n    // Align the unsized value to the end of the RcInner.\n    // Because RcInner is repr(C), it will always be the last field in memory.\n    // SAFETY: since the only unsized types possible are slices, trait objects,\n    // and extern types, the input safety requirement is currently enough to\n    // satisfy the requirements of align_of_val_raw; this is an implementation\n    // detail of the language that must not be relied upon outside of std.\n    unsafe { data_offset_align(align_of_val_raw(ptr)) }\n}",
  "callees": [
    "65137094886431951939666500093529085346",
    "551718781299925181210024318657463093093",
    "137853700287551670782226478589806471967",
    "116988710396478150633330979827831642523",
    "105077992394519587810503540624228244031",
    "110923253394046751312134879776862074753",
    "1099899350342654162615874749245636043676",
    "1492460362374206871012573143365903954040",
    "42494860125193605572185859439048278702",
    "12281449246394340237926324936375242532",
    "181267529910573756716102767087485333561",
    "1824545319189397521315695847785602896178",
    "1755590597489080956017164030563725218772",
    "894302746982865835611765641203288903407",
    "211500331809620092346474575105593072",
    "51372523453683089364244340980133861262",
    "169382045895387326079929663684999712557",
    "986792852990965178117440249555081278778",
    "90818112465881722349174357944217011292",
    "63085389524472853348886374617170044294",
    "41567241620038406215851091758143153711",
    "208567149182403132717134308235452563135",
    "107268837585413814953424804409381581391",
    "59519543515179750412262355502277067147",
    "138781795485423979244701404398922630519",
    "112989397975222255532054380452996322405"
  ]
}
