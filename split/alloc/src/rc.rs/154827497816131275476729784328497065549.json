{
  "file": "alloc/src/rc.rs",
  "name": "rc::Rc::<core::bstr::ByteStr>::as_ptr",
  "hash": "154827497816131275476729784328497065549",
  "hash_direct": "7037698257244845714642046416065888982",
  "src": "pub fn as_ptr(this: &Self) -> *const T {\n        let ptr: *mut RcInner<T> = NonNull::as_ptr(this.ptr);\n\n        // SAFETY: This cannot go through Deref::deref or Rc::inner because\n        // this is required to retain raw/mut provenance such that e.g. `get_mut` can\n        // write through the pointer after the Rc is recovered through `from_raw`.\n        unsafe { &raw mut (*ptr).value }\n    }",
  "callees": [
    "1511430677432579010115836098069910329156"
  ]
}
