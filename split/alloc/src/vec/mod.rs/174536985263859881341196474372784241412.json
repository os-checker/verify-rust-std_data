{
  "file": "alloc/src/vec/mod.rs",
  "name": "vec::Vec::<i32>::as_slice",
  "hash": "174536985263859881341196474372784241412",
  "hash_direct": "1599080899763190162113104626645625154427",
  "src": "pub const fn as_slice(&self) -> &[T] {\n        // SAFETY: `slice::from_raw_parts` requires pointee is a contiguous, aligned buffer of size\n        // `len` containing properly-initialized `T`s. Data must not be mutated for the returned\n        // lifetime. Further, `len * size_of::<T>` <= `isize::MAX`, and allocation does not\n        // \"wrap\" through overflowing memory addresses.\n        //\n        // * Vec API guarantees that self.buf:\n        //      * contains only properly-initialized items within 0..len\n        //      * is aligned, contiguous, and valid for `len` reads\n        //      * obeys size and address-wrapping constraints\n        //\n        // * We only construct `&mut` references to `self.buf` through `&mut self` methods; borrow-\n        //   check ensures that it is not possible to mutably alias `self.buf` within the\n        //   returned lifetime.\n        unsafe { slice::from_raw_parts(self.as_ptr(), self.len) }\n    }",
  "callees": [
    "118740786837910828505927649940917778713",
    "172288206378113106694093258704307809249",
    "59822611277018790557252577121976555289",
    "1123123395768275702014292004935371123623",
    "12281449246394340237926324936375242532",
    "181267529910573756716102767087485333561",
    "79817071675776388295206212610749591701",
    "1824545319189397521315695847785602896178",
    "1022803319099694746713266409355997953681",
    "41874569531604093678887498573591730498",
    "580766001368771634911874717748338967984",
    "897265533945643607115272871669854221703",
    "89502211078669479795623704974378882516",
    "986792852990965178117440249555081278778",
    "90818112465881722349174357944217011292",
    "146612017564224181584303574960223420416",
    "63085389524472853348886374617170044294",
    "175623961004431005849298709567805707658",
    "33067340742295788584221598515845050786",
    "20743252454400330067347997888777335224",
    "181953690662554297912505335505865467275",
    "1793681111599931821712213635413918902143",
    "55408212128999564608147158566316072753",
    "62624292896029060114475915260451991011",
    "160484647882554767378550221749894092269",
    "551208430217776025011333838315392309641",
    "181717373102152254895109628399379607332",
    "1400916696144447910810330642996712936878",
    "515904029832906508012906309200345154801",
    "1632659914380948417216020462741106233447",
    "18549244806253997918905014123161729451",
    "916552609649539653110630350571106092626",
    "112989397975222255532054380452996322405",
    "734748700356449319315300238482033757944",
    "597683522621928614711119364722938279780",
    "17341452779707394601695269753709495351"
  ]
}
