{
  "file": "alloc/src/vec/mod.rs",
  "name": "vec::Vec::<u8>::from_parts_in",
  "hash": "35829908133178178549806718062414407845",
  "hash_direct": "877952105339987831315786457836350824548",
  "src": "pub unsafe fn from_parts_in(ptr: NonNull<T>, length: usize, capacity: usize, alloc: A) -> Self {\n        ub_checks::assert_unsafe_precondition!(\n            check_library_ub,\n            \"Vec::from_parts_in requires that length <= capacity\",\n            (length: usize = length, capacity: usize = capacity) => length <= capacity\n        );\n        unsafe { Vec { buf: RawVec::from_nonnull_in(ptr, capacity, alloc), len: length } }\n    }",
  "callees": [
    "711634056529404308717619098102147147161",
    "122168519072133789272627379792947331823",
    "1711214648546878229516166388959941140765",
    "12281449246394340237926324936375242532",
    "181267529910573756716102767087485333561",
    "116120406547640733017584320872607374165",
    "986792852990965178117440249555081278778",
    "90818112465881722349174357944217011292",
    "63085389524472853348886374617170044294",
    "181717373102152254895109628399379607332",
    "1451197840112163405012358816355909731614",
    "29456426015549113827640020827732703416",
    "735147566348915391518387477037509563238",
    "60727803040645593639205160657278351193"
  ]
}
