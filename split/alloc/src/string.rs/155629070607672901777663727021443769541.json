{
  "file": "alloc/src/string.rs",
  "name": "<i16 as string::SpecToString>::spec_to_string::SIZE",
  "hash": "155629070607672901777663727021443769541",
  "hash_direct": "776079808589436614518344942747641177706",
  "src": "const SIZE: usize = $signed::MAX.ilog10() as usize + 1;",
  "macro_backtrace": [
    {
      "callsite": "impl_to_string! {\n    i8, u8,\n    i16, u16,\n    i32, u32,\n    i64, u64,\n    isize, usize,\n    i128, u128,\n}",
      "defsite": "macro_rules! impl_to_string {\n    ($($signed:ident, $unsigned:ident,)*) => {\n        $(\n        #[cfg(not(no_global_oom_handling))]\n        #[cfg(not(feature = \"optimize_for_size\"))]\n        impl SpecToString for $signed {\n            #[inline]\n            fn spec_to_string(&self) -> String {\n                const SIZE: usize = $signed::MAX.ilog10() as usize + 1;\n                let mut buf = [core::mem::MaybeUninit::<u8>::uninit(); SIZE];\n                // Only difference between signed and unsigned are these 8 lines.\n                let mut out;\n                if *self < 0 {\n                    out = String::with_capacity(SIZE + 1);\n                    out.push('-');\n                } else {\n                    out = String::with_capacity(SIZE);\n                }\n\n                // SAFETY: `buf` is always big enough to contain all the digits.\n                unsafe { out.push_str(self.unsigned_abs()._fmt(&mut buf)); }\n                out\n            }\n        }\n        #[cfg(not(no_global_oom_handling))]\n        #[cfg(not(feature = \"optimize_for_size\"))]\n        impl SpecToString for $unsigned {\n            #[inline]\n            fn spec_to_string(&self) -> String {\n                const SIZE: usize = $unsigned::MAX.ilog10() as usize + 1;\n                let mut buf = [core::mem::MaybeUninit::<u8>::uninit(); SIZE];\n\n                // SAFETY: `buf` is always big enough to contain all the digits.\n                unsafe { self._fmt(&mut buf).to_string() }\n            }\n        }\n        )*\n    }\n}"
    }
  ],
  "callees": [
    "12281449246394340237926324936375242532",
    "25969539252634967499364535297237841896",
    "134878469402037594989912241929912062374",
    "135402666045927133155591393675055464663",
    "182549652860918458542040129327286707930",
    "124352358465014344933442410173068558836",
    "1777338874172141424712493205655103890049",
    "986792852990965178117440249555081278778",
    "90818112465881722349174357944217011292",
    "146612017564224181584303574960223420416"
  ]
}
