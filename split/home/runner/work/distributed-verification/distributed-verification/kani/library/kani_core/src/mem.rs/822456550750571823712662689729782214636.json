{
  "file": "/home/runner/work/distributed-verification/distributed-verification/kani/library/kani_core/src/mem.rs",
  "name": "kani::mem::can_dereference::<(i8, i8)>",
  "hash": "822456550750571823712662689729782214636",
  "hash_direct": "100753565691477462717417965220488294002",
  "attrs": [
    "#[kanitool::unstable(feature = \"mem-predicates\", issue = 2690, reason =\n\"experimental memory predicate API\")]\n"
  ],
  "src": "pub fn can_dereference<T: MetaSized>(ptr: *const T) -> bool {\n            // Need to assert `is_initialized` because non-determinism is used under the hood, so it\n            // does not make sense to use it inside assumption context.\n            is_ptr_aligned(ptr)\n                && is_inbounds(ptr)\n                && assert_is_initialized(ptr)\n                && unsafe { has_valid_value(ptr) }\n        }",
  "macro_backtrace": [
    {
      "callsite": "kani_core::kani_mem!(core)",
      "defsite": "macro_rules! kani_mem"
    },
    {
      "callsite": "kani_core::kani_lib!(core)",
      "defsite": "macro_rules! kani_lib"
    }
  ],
  "callees": [
    "938248124271107744012249479729763505168",
    "80989463918046823203044749903697808714",
    "1295499066349112484912490938496969975321",
    "808690604947597133713899618615583714737",
    "177504877725561479516307868202288769850",
    "64024631711052441686903935823534043907",
    "17808007270477472372110232992836829834",
    "367186486438498314716640006727229808508",
    "1100679463137591142110103841784016862272",
    "247863734272995071816029882222598095082",
    "51907809233202620785480993120258100747",
    "67771933581823944512217974141656043188",
    "715214264213803123316551867726522371300",
    "27480086118489678191003877857780025576",
    "880691909010648452512688803393863319621",
    "187482952606822645712460029589708661523",
    "126818845945534382313624863669169238336"
  ]
}
