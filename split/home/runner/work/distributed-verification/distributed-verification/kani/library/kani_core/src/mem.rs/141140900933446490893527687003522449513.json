{
  "file": "/home/runner/work/distributed-verification/distributed-verification/kani/library/kani_core/src/mem.rs",
  "name": "kani::mem::can_dereference::<[i32; 2]>",
  "hash": "141140900933446490893527687003522449513",
  "hash_direct": "135325369520144818238625245481426529815",
  "attrs": [
    "#[kanitool::unstable(feature = \"mem-predicates\", issue = 2690, reason =\n\"experimental memory predicate API\")]\n"
  ],
  "src": "pub fn can_dereference<T: MetaSized>(ptr: *const T) -> bool {\n            // Need to assert `is_initialized` because non-determinism is used under the hood, so it\n            // does not make sense to use it inside assumption context.\n            is_ptr_aligned(ptr)\n                && is_inbounds(ptr)\n                && assert_is_initialized(ptr)\n                && unsafe { has_valid_value(ptr) }\n        }",
  "macro_backtrace": [
    {
      "callsite": "kani_core::kani_mem!(core)",
      "defsite": "macro_rules! kani_mem"
    },
    {
      "callsite": "kani_core::kani_lib!(core)",
      "defsite": "macro_rules! kani_lib"
    }
  ],
  "callees": [
    "1481625861283808858614014583013705247864",
    "55198556141731503835375909318612911906",
    "22359847832734915742325702083995179865",
    "24611647080965273959983533232723557439",
    "48354165617588990549448172553336931019",
    "1091404513913012815526570657335071501",
    "1270975018661230293117718909053953196785",
    "77214107065045465939764991005747970104",
    "87213955381600296072087120956440658947",
    "131448732132345852092743020617208534612",
    "1349300727739007638717407536070848774568",
    "346527942827459053315167505168856849197",
    "94873185176961024211037859707531501636",
    "109763229663154342343123224747831634619",
    "222681782879624896411773322695519081251",
    "703663108277374327010040438608357482834",
    "1100495660517602822510660091708953776518"
  ]
}
