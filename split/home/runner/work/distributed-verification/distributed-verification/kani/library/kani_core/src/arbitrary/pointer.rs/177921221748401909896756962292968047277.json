{
  "file": "/home/runner/work/distributed-verification/distributed-verification/kani/library/kani_core/src/arbitrary/pointer.rs",
  "name": "kani::arbitrary_ptr::PointerGenerator::<100>::any_alloc_status::<char>",
  "hash": "177921221748401909896756962292968047277",
  "hash_direct": "1148772591766163381212741195107953802572",
  "attrs": [
    "#[kanitool::unstable(feature = \"mem-predicates\", issue = 2690, reason =\n\"experimental memory predicates and manipulation feature\")]\n"
  ],
  "src": "pub fn any_alloc_status<'a, T>(&'a mut self) -> ArbitraryPointer<'a, T>\n             where T: kani::Arbitrary\n            {\n                assert!(core::mem::size_of::<T>() <= Self::BUF_LEN,\n                    \"Cannot generate in-bounds object of the requested type. Buffer is not big enough.\"\n                );\n\n                let status = kani::any();\n                let ptr = match status {\n                    AllocationStatus::Dangling => {\n                        // Generate potentially unaligned pointer.\n                        let offset = kani::any_where(|b: &usize| *b < core::mem::size_of::<T>());\n                        crate::ptr::NonNull::<T>::dangling().as_ptr().wrapping_add(offset)\n                    }\n                    AllocationStatus::DeadObject => {\n                        let mut obj: T = kani::any();\n                        &mut obj as *mut _\n                    }\n                    AllocationStatus::Null => crate::ptr::null_mut::<T>(),\n                    AllocationStatus::InBounds => {\n                        return self.create_in_bounds_ptr();\n                    }\n                    AllocationStatus::OutOfBounds => {\n                        // Generate potentially unaligned pointer.\n                        let buf_ptr = addr_of_mut!(self.buf) as *mut u8;\n                        let offset = kani::any_where(|b: &usize| *b < core::mem::size_of::<T>());\n                        unsafe { buf_ptr.add(Self::BUF_LEN - offset) as *mut T }\n                    }\n                };\n\n                ArbitraryPointer {\n                    ptr,\n                    is_initialized: false,\n                    status,\n                    phantom: PhantomData,\n                }\n            }",
  "macro_backtrace": [
    {
      "callsite": "kani_core::ptr_generator!()",
      "defsite": "macro_rules! ptr_generator"
    },
    {
      "callsite": "kani_core::generate_arbitrary!()",
      "defsite": "macro_rules! generate_arbitrary"
    },
    {
      "callsite": "kani_core::kani_lib!(core)",
      "defsite": "macro_rules! kani_lib"
    }
  ],
  "callees": [
    "39029338530780942852875415034457908204",
    "1738027839436380234313544682882666466863",
    "110286732951253459166416707375649721039",
    "182646802468273491666682311146773467481",
    "162491259761257566482601707483467907610",
    "306459423763459115515352307666540674473",
    "1072407133286824212215056299035613318842",
    "80411145170095388594391703538187444234",
    "256787937887289779114930235254124660498",
    "992073762675733926212647349968983321807",
    "649717146082912364510025535721611198543",
    "136621478802095730972375589055034460573",
    "580114028761993988011626295583708971499",
    "1050757777987272307317753801956772021235",
    "549764276642186339010013043347128614685",
    "28733051149244335398155852330546270084",
    "76571812754372020558398594276099164034",
    "1662070016694227139911860440277225290916",
    "12523065385450334584774763099255662860",
    "42990063052958904976718600653175958912",
    "6126120050059266389618947044252600723",
    "868708452713984376310801203349667993765",
    "940250525962090252914117803890597989072",
    "1398447210033614551510165781002300291600",
    "41106012113905765414008008799568239387",
    "4942335363515125730885980217423860841",
    "162562988142812920362309614379838072419",
    "769871191376860825616640549555308478966",
    "176570557961947031613467122056263026383",
    "147326571724930681683605250526187624864",
    "22860541058604836916644685381819606237",
    "1096154568935207292118411765173724766739",
    "1615780015787215128316594883786605832883",
    "40063093336585792095766602796070126518",
    "115671913322884761716817010932509633814",
    "946466411968311523711785700563111534214",
    "1400700966637783537377421359389119848",
    "519478665170207159314235095145570757294",
    "47323665595455568617290020941376774286",
    "111425599901702694743874629435682172347",
    "714811817540972740211524868124730226803",
    "1329845230409163288212548289525672875535",
    "109763229663154342343123224747831634619",
    "84909938954906103112758184730426842057",
    "16824420916691935049705640393259467449",
    "561445107989240208511361370086377379752",
    "161225022469363908823200354701136905531",
    "168545836479171427075036933182194130275",
    "1156543629781806943613236490158137181630",
    "1712898201300478840215074793236064467963",
    "1067675883129992420314174327751912045205",
    "79307503347131170578315604022567527135",
    "1160150031813070275716801291559951969968",
    "45465200458951020712268855471874148461",
    "10276831356989197177291225683156882265",
    "145583995108105043133401862026582368143",
    "161003650625398914518944455314788757627",
    "164769300933020566656262923669273525158",
    "8850644696306119287964523545649044939",
    "841346702487865802717731804342903065853",
    "1617054938297627622011998382328717871744",
    "1196638383615410162910723134175805433641",
    "1182371843420022111010336901757313084440",
    "26064680123257945312537992217601395168",
    "147465130328255915597764214201908579268",
    "31247418776957791969248822181415540956",
    "167770153702066478424411263638880757007",
    "70163907493707941738383057412430879359",
    "841904668883726495316837415609641023349",
    "1258931108755458209614962827106116332072",
    "1243847030362955698517207199029174369810",
    "380262551218047276514654482281297551654",
    "105125143701458073564296455695110349394",
    "117289807451759479686051841781914570332",
    "1334583364183485558310857240654623213048",
    "25930241974724637292994171257021210872",
    "617554482545947003412104686554524783687",
    "1445917162577882149418297081791436471284",
    "849628185942532211610194183090257053256",
    "703663108277374327010040438608357482834",
    "1100495660517602822510660091708953776518",
    "42307837834062914055922584478958522462",
    "94774452442185535288317545443977520870",
    "697488451907353464218220883413625489200",
    "1213284614836043029689476325289155571",
    "79864552017977064554718232825118263405",
    "965561441075058674214372158914955250568",
    "35533776158220467232372629384472754561",
    "113269527698646920895440779244213347363",
    "169017152061146820209827866672499117723",
    "60021685625212781037363831098516953025",
    "115231789505881434705925300967917418293",
    "68014159190345911611308214227850977031",
    "1365351597739011160412231277592213691479",
    "542107969656591403611120475955569064682",
    "1462872780835765420315033599362897369079",
    "652391190648325619017845657189195809715",
    "182972684513709302288440602073677891408",
    "158338167874674576194838212405987326951",
    "153999075255816246604435272140943255557",
    "393974833682574441515290398983271504453",
    "399232661239117480517401994520839366833",
    "165260604638305226342101042842060873588",
    "34478597508049401479557782585707843723",
    "15859584444614920947579563356650829639"
  ]
}
