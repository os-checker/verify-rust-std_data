{
  "file": "/home/runner/work/distributed-verification/distributed-verification/kani/library/kani_core/src/iter.rs",
  "name": "<ops::range::Range<i8> as kani::KaniIter>::len",
  "hash": "117501932674452380016619708945110927837",
  "hash_direct": "93997508284054229917779040113048087517",
  "src": "fn len(&self) -> usize {\n                        (self.end - self.start) as usize\n                    }",
  "macro_backtrace": [
    {
      "callsite": "generate_impl_range!(i8)",
      "defsite": "macro_rules! generate_impl_range {\n            ($t:ty) => {\n                impl KaniIter for Range<$t> {\n                    type Item = $t;\n                    fn nth(&self, i: usize) -> Self::Item {\n                        self.start + i as $t\n                    }\n                    fn first(&self) -> Self::Item {\n                        self.start\n                    }\n                    fn assumption(&self) -> bool {\n                        true\n                    }\n                    fn len(&self) -> usize {\n                        (self.end - self.start) as usize\n                    }\n                }\n            };\n        }"
    },
    {
      "callsite": "kani_core::generate_iter!()",
      "defsite": "macro_rules! generate_iter"
    },
    {
      "callsite": "kani_core::kani_lib!(core)",
      "defsite": "macro_rules! kani_lib"
    }
  ]
}
