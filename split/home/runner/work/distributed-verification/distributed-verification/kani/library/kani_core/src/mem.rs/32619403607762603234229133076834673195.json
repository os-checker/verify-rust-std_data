{
  "file": "/home/runner/work/distributed-verification/distributed-verification/kani/library/kani_core/src/mem.rs",
  "name": "kani::mem::can_dereference::<[u8]>",
  "hash": "32619403607762603234229133076834673195",
  "hash_direct": "1599685128795843984012259917277906904045",
  "attrs": [
    "#[kanitool::unstable(feature = \"mem-predicates\", issue = 2690, reason =\n\"experimental memory predicate API\")]\n"
  ],
  "src": "pub fn can_dereference<T: MetaSized>(ptr: *const T) -> bool {\n            // Need to assert `is_initialized` because non-determinism is used under the hood, so it\n            // does not make sense to use it inside assumption context.\n            is_ptr_aligned(ptr)\n                && is_inbounds(ptr)\n                && assert_is_initialized(ptr)\n                && unsafe { has_valid_value(ptr) }\n        }",
  "macro_backtrace": [
    {
      "callsite": "kani_core::kani_mem!(core)",
      "defsite": "macro_rules! kani_mem"
    },
    {
      "callsite": "kani_core::kani_lib!(core)",
      "defsite": "macro_rules! kani_lib"
    }
  ],
  "callees": [
    "938248124271107744012249479729763505168",
    "80989463918046823203044749903697808714",
    "1295499066349112484912490938496969975321",
    "808690604947597133713899618615583714737",
    "177504877725561479516307868202288769850",
    "953664026000592867816623045880525271050",
    "749875127400919225515793623085577852821",
    "72728373814413019567746786385341726958",
    "973832289352672847217669538374232096939",
    "247863734272995071816029882222598095082",
    "1573752509598498257115316073563865781934",
    "46800747998221850263301943765363945900",
    "1304652612843883028514275179475219126769",
    "27480086118489678191003877857780025576",
    "169125711060468070064157179216472325400",
    "187482952606822645712460029589708661523",
    "126818845945534382313624863669169238336"
  ]
}
