{
  "file": "core/src/convert/num.rs",
  "name": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<u16>> for num::nonzero::NonZero<i8>>::try_from",
  "hash": "76129794724908303049664026375168379349",
  "hash_direct": "5439979708836628217756014587947872650",
  "src": "fn try_from(value: NonZero<$source>) -> Result<Self, Self::Error> {\n                // SAFETY: Input is guaranteed to be non-zero.\n                Ok(unsafe { Self::new_unchecked(<$target>::try_from(value.get())?) })\n            }",
  "macro_backtrace": [
    {
      "callsite": "impl_nonzero_int_try_from_nonzero_int!(u16 => i8, i16, isize)",
      "defsite": "macro_rules! impl_nonzero_int_try_from_nonzero_int {\n    ($source:ty => $($target:ty),+) => {$(\n        #[stable(feature = \"nzint_try_from_nzint_conv\", since = \"1.49.0\")]\n        #[rustc_const_unstable(feature = \"const_try\", issue = \"74935\")]\n        impl const TryFrom<NonZero<$source>> for NonZero<$target> {\n            type Error = TryFromIntError;\n\n            // Rustdocs on the impl block show a \"[+] show undocumented items\" toggle.\n            // Rustdocs on functions do not.\n            #[doc = concat!(\"Attempts to convert <code>[NonZero]\\\\<[\", stringify!($source), \"]></code> \")]\n            #[doc = concat!(\"to <code>[NonZero]\\\\<[\", stringify!($target), \"]></code>.\")]\n            #[inline]\n            fn try_from(value: NonZero<$source>) -> Result<Self, Self::Error> {\n                // SAFETY: Input is guaranteed to be non-zero.\n                Ok(unsafe { Self::new_unchecked(<$target>::try_from(value.get())?) })\n            }\n        }\n    )*};\n}"
    }
  ],
  "callees": [
    "1473552132596932755917887878319894637468",
    "15733787489259700817844341718509400400",
    "47323665595455568617290020941376774286",
    "1329845230409163288212548289525672875535",
    "16824420916691935049705640393259467449",
    "1461745429986084010034901226572810240",
    "104775257362428322342672070488304598211",
    "1612591251136920609610072700709280580342",
    "841904668883726495316837415609641023349",
    "1258931108755458209614962827106116332072",
    "105125143701458073564296455695110349394",
    "514087963426507117816934215376297001234",
    "1583127208141066340315804673260757206921",
    "1218790289670026660418434748374709001141",
    "399232661239117480517401994520839366833"
  ]
}
