{
  "file": "core/src/convert/num.rs",
  "name": "convert::num::<impl convert::From<num::nonzero::NonZero<u64>> for num::nonzero::NonZero<u128>>::from",
  "hash": "1336840453889327497111246176267694428673",
  "hash_direct": "1752888408789809689212576904710207994173",
  "src": "fn from(small: NonZero<$Small>) -> Self {\n                // SAFETY: input type guarantees the value is non-zero\n                unsafe { Self::new_unchecked(From::from(small.get())) }\n            }",
  "macro_backtrace": [
    {
      "callsite": "impl_nonzero_int_from_nonzero_int!(u64 => u128)",
      "defsite": "macro_rules! impl_nonzero_int_from_nonzero_int {\n    ($Small:ty => $Large:ty) => {\n        #[stable(feature = \"nz_int_conv\", since = \"1.41.0\")]\n        #[rustc_const_unstable(feature = \"const_convert\", issue = \"143773\")]\n        impl const From<NonZero<$Small>> for NonZero<$Large> {\n            // Rustdocs on the impl block show a \"[+] show undocumented items\" toggle.\n            // Rustdocs on functions do not.\n            #[doc = concat!(\"Converts <code>[NonZero]\\\\<[\", stringify!($Small), \"]></code> \")]\n            #[doc = concat!(\"to <code>[NonZero]\\\\<[\", stringify!($Large), \"]></code> losslessly.\")]\n            #[inline]\n            fn from(small: NonZero<$Small>) -> Self {\n                // SAFETY: input type guarantees the value is non-zero\n                unsafe { Self::new_unchecked(From::from(small.get())) }\n            }\n        }\n    };\n}"
    }
  ],
  "callees": [
    "54002317748711237553487300900479183799",
    "258820287469578611817448591488600041899",
    "17421822894816687532325615181214565887",
    "23815256893174302637797703719499456373",
    "174948389658366639395461437428986350606",
    "1249603277186598150516891840811753966518",
    "746724656701179976464738604287732679",
    "1113032932815665948217565294476098756403",
    "41505289739977656509611396154325757795",
    "478753423337745817613297159272845606672",
    "887235042902537721816254572592014930578",
    "739520556846959085018120036998133255835"
  ]
}
