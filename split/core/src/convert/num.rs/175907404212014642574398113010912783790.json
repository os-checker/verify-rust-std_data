{
  "file": "core/src/convert/num.rs",
  "name": "convert::num::<impl convert::From<num::nonzero::NonZero<i16>> for num::nonzero::NonZero<i64>>::from",
  "hash": "175907404212014642574398113010912783790",
  "hash_direct": "11224775070314513391902497937702232978",
  "src": "fn from(small: NonZero<$Small>) -> Self {\n                // SAFETY: input type guarantees the value is non-zero\n                unsafe { Self::new_unchecked(From::from(small.get())) }\n            }",
  "macro_backtrace": [
    {
      "callsite": "impl_nonzero_int_from_nonzero_int!(i16 => i64)",
      "defsite": "macro_rules! impl_nonzero_int_from_nonzero_int {\n    ($Small:ty => $Large:ty) => {\n        #[stable(feature = \"nz_int_conv\", since = \"1.41.0\")]\n        #[rustc_const_unstable(feature = \"const_convert\", issue = \"143773\")]\n        impl const From<NonZero<$Small>> for NonZero<$Large> {\n            // Rustdocs on the impl block show a \"[+] show undocumented items\" toggle.\n            // Rustdocs on functions do not.\n            #[doc = concat!(\"Converts <code>[NonZero]\\\\<[\", stringify!($Small), \"]></code> \")]\n            #[doc = concat!(\"to <code>[NonZero]\\\\<[\", stringify!($Large), \"]></code> losslessly.\")]\n            #[inline]\n            fn from(small: NonZero<$Small>) -> Self {\n                // SAFETY: input type guarantees the value is non-zero\n                unsafe { Self::new_unchecked(From::from(small.get())) }\n            }\n        }\n    };\n}"
    }
  ],
  "callees": [
    "148445133478272514866189385002934463197",
    "258820287469578611817448591488600041899",
    "17421822894816687532325615181214565887",
    "23815256893174302637797703719499456373",
    "77514143034165398699345067897234210631",
    "1147979670399206758315286428992360231052",
    "3758406900067267902770104292894595937",
    "1113032932815665948217565294476098756403",
    "41505289739977656509611396154325757795",
    "478753423337745817613297159272845606672",
    "887235042902537721816254572592014930578",
    "739520556846959085018120036998133255835"
  ]
}
