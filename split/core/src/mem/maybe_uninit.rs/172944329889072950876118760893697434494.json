{
  "file": "core/src/mem/maybe_uninit.rs",
  "name": "<[mem::maybe_uninit::MaybeUninit<(f64, bool)>]>::assume_init_drop",
  "hash": "172944329889072950876118760893697434494",
  "hash_direct": "105359735116003009294411069597313170078",
  "src": "pub unsafe fn assume_init_drop(&mut self) {\n        if !self.is_empty() {\n            // SAFETY: the caller must guarantee that every element of `self`\n            // is initialized and satisfies all invariants of `T`.\n            // Dropping the value in place is safe if that is the case.\n            unsafe { ptr::drop_in_place(self as *mut [MaybeUninit<T>] as *mut [T]) }\n        }\n    }",
  "callees": [
    "4408641945747652936237298610512272159",
    "81878703433336695502862248627648123311"
  ]
}
