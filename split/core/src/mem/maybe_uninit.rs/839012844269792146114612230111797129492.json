{
  "file": "core/src/mem/maybe_uninit.rs",
  "name": "<[mem::maybe_uninit::MaybeUninit<(i8, u16, i32, u64, isize)>]>::assume_init_drop",
  "hash": "839012844269792146114612230111797129492",
  "hash_direct": "1448834286024675775973823021710456684",
  "src": "pub unsafe fn assume_init_drop(&mut self) {\n        if !self.is_empty() {\n            // SAFETY: the caller must guarantee that every element of `self`\n            // is initialized and satisfies all invariants of `T`.\n            // Dropping the value in place is safe if that is the case.\n            unsafe { ptr::drop_in_place(self as *mut [MaybeUninit<T>] as *mut [T]) }\n        }\n    }",
  "callees": [
    "897264942375947545914699406511685471013",
    "129178668224809579616829397638583805766"
  ]
}
