{
  "file": "core/src/mem/maybe_uninit.rs",
  "name": "mem::maybe_uninit::MaybeUninit::<bool>::array_assume_init::<2>",
  "hash": "823454628465682918686335109557686442",
  "hash_direct": "1431977569977242229112684567290216022262",
  "src": "pub const unsafe fn array_assume_init<const N: usize>(array: [Self; N]) -> [T; N] {\n        // SAFETY:\n        // * The caller guarantees that all elements of the array are initialized\n        // * `MaybeUninit<T>` and T are guaranteed to have the same layout\n        // * `MaybeUninit` does not drop, so there are no double-frees\n        // And thus the conversion is safe\n        unsafe {\n            intrinsics::assert_inhabited::<[T; N]>();\n            intrinsics::transmute_unchecked(array)\n        }\n    }"
}
