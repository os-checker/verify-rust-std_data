{
  "file": "core/src/mem/maybe_uninit.rs",
  "name": "mem::maybe_uninit::MaybeUninit::<char>::assume_init_mut",
  "hash": "144260954700182354451975829893886203342",
  "hash_direct": "707142226028088195816755484155705957472",
  "src": "pub const unsafe fn assume_init_mut(&mut self) -> &mut T {\n        // SAFETY: the caller must guarantee that `self` is initialized.\n        // This also means that `self` must be a `value` variant.\n        unsafe {\n            intrinsics::assert_inhabited::<T>();\n            &mut *self.as_mut_ptr()\n        }\n    }",
  "callees": [
    "18005776077133353205463338911377290952"
  ]
}
