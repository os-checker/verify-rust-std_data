{
  "file": "core/src/mem/maybe_uninit.rs",
  "name": "<[mem::maybe_uninit::MaybeUninit<usize>]>::assume_init_drop",
  "hash": "356636083118075050918271329993592092635",
  "hash_direct": "182803529328401041494355410631575998733",
  "src": "pub unsafe fn assume_init_drop(&mut self) {\n        if !self.is_empty() {\n            // SAFETY: the caller must guarantee that every element of `self`\n            // is initialized and satisfies all invariants of `T`.\n            // Dropping the value in place is safe if that is the case.\n            unsafe { ptr::drop_in_place(self as *mut [MaybeUninit<T>] as *mut [T]) }\n        }\n    }",
  "callees": [
    "1215750571358011315113065372379323455527",
    "174349714222411239493513601347901781887"
  ]
}
