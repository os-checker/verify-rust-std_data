{
  "file": "core/src/mem/maybe_uninit.rs",
  "name": "<[mem::maybe_uninit::MaybeUninit<(i8, i8)>]>::assume_init_drop",
  "hash": "4542774074279017907461508023299652945",
  "hash_direct": "36417617484182223227322386104396974704",
  "src": "pub unsafe fn assume_init_drop(&mut self) {\n        if !self.is_empty() {\n            // SAFETY: the caller must guarantee that every element of `self`\n            // is initialized and satisfies all invariants of `T`.\n            // Dropping the value in place is safe if that is the case.\n            unsafe { ptr::drop_in_place(self as *mut [MaybeUninit<T>] as *mut [T]) }\n        }\n    }",
  "callees": [
    "19163043579231260526183897358246842924",
    "61571774077465995403307743747275448394"
  ]
}
