{
  "file": "core/src/mem/mod.rs",
  "name": "mem::transmute_copy::<core_simd::vector::Simd<u64, 8>, core_simd::vector::Simd<f64, 8>>",
  "hash": "120801985254328023243370467174185910560",
  "hash_direct": "41678129523482744961032479878841491522",
  "src": "pub const unsafe fn transmute_copy<Src, Dst>(src: &Src) -> Dst {\n    assert!(\n        size_of::<Src>() >= size_of::<Dst>(),\n        \"cannot transmute_copy if Dst is larger than Src\"\n    );\n\n    // If Dst has a higher alignment requirement, src might not be suitably aligned.\n    if align_of::<Dst>() > align_of::<Src>() {\n        // SAFETY: `src` is a reference which is guaranteed to be valid for reads.\n        // The caller must guarantee that the actual transmutation is safe.\n        unsafe { ptr::read_unaligned(src as *const Src as *const Dst) }\n    } else {\n        // SAFETY: `src` is a reference which is guaranteed to be valid for reads.\n        // We just checked that `src as *const Dst` was properly aligned.\n        // The caller must guarantee that the actual transmutation is safe.\n        unsafe { ptr::read(src as *const Src as *const Dst) }\n    }\n}",
  "callees": [
    "258820287469578611817448591488600041899",
    "588974892899239543415856878986124229421",
    "690438059002452523915046149102377829082",
    "17421822894816687532325615181214565887",
    "27480086118489678191003877857780025576",
    "23815256893174302637797703719499456373",
    "47704708250653028710044748737554169683",
    "3348037517594157114729719856894976905",
    "157100921308317336881743199498204326464",
    "164044462332326320155425152908825637381",
    "1578456280116687540514649323702396813665",
    "1379668933110452340316725730240231506316",
    "156938733131989986955941562661890559378",
    "38217196742947992835679479997123307043",
    "215595754775874267416882798567810782053",
    "128149981390755280096023120402060636069",
    "121097281700569241807917519510076722724",
    "1749362715435459353511933873995340031229",
    "152957573567666139458051071799244237150",
    "1440311084109427911411767598402928151278",
    "110553296291267690486764538235023897629",
    "1095980910905451195915776472035072742717",
    "462846610869204213514639900340099405177",
    "83296026332579416941842209678709993328",
    "97892229237199250718782565098232937194",
    "37868078735602925891573318122962819320",
    "1578703703635175719018067387082881800385",
    "632379827537218859118037651046044448068",
    "1113032932815665948217565294476098756403",
    "41505289739977656509611396154325757795",
    "1752989996936949203916036071159051010960",
    "760723331888050409213108094994821248586",
    "478753423337745817613297159272845606672",
    "3658730781980743391697756456907208995",
    "176386771705132260856587306647620489942",
    "625849434625814717716494369484959093162",
    "1566168013061370513711054548557151263674",
    "154583461905668248944876278395830616582",
    "149964471831078862786196516401843877415",
    "187482952606822645712460029589708661523",
    "126818845945534382313624863669169238336",
    "39667799822193410508007861328948464447",
    "21880904860600655701360616962203668944",
    "39478966065170903616234064419678204084",
    "92293406756414262231157972400238103749",
    "76610361547970390014041401956375253519",
    "739520556846959085018120036998133255835",
    "5533079644241704014802052529604371844",
    "101520258712339119345830936586852421312",
    "179112378572194142739537177584691521062"
  ]
}
