{
  "file": "core/src/ffi/c_str.rs",
  "name": "<ffi::c_str::Bytes<'_> as iter::traits::iterator::Iterator>::next",
  "hash": "14221255294919677296910641957381436304",
  "hash_direct": "9745562089233681084116038843840799213",
  "src": "fn next(&mut self) -> Option<u8> {\n        // SAFETY: We only choose a pointer from a valid C string, which must\n        // be non-null and contain at least one value. Since we always stop at\n        // the nul terminator, which is guaranteed to exist, we can assume that\n        // the pointer is non-null and valid. This lets us safely dereference\n        // it and assume that adding 1 will create a new, non-null, valid\n        // pointer.\n        unsafe {\n            let ret = self.ptr.read();\n            if ret == 0 {\n                None\n            } else {\n                self.ptr = self.ptr.add(1);\n                Some(ret)\n            }\n        }\n    }",
  "callees": [
    "258820287469578611817448591488600041899",
    "17421822894816687532325615181214565887",
    "27480086118489678191003877857780025576",
    "23815256893174302637797703719499456373",
    "47704708250653028710044748737554169683",
    "38217196742947992835679479997123307043",
    "37868078735602925891573318122962819320",
    "1578703703635175719018067387082881800385",
    "1113032932815665948217565294476098756403",
    "41505289739977656509611396154325757795",
    "1752989996936949203916036071159051010960",
    "478753423337745817613297159272845606672",
    "3658730781980743391697756456907208995",
    "176386771705132260856587306647620489942",
    "625849434625814717716494369484959093162",
    "1566168013061370513711054548557151263674",
    "187482952606822645712460029589708661523",
    "126818845945534382313624863669169238336",
    "1432307366412089460311890356574584663538",
    "103695068283875105018623992302427237269",
    "53569486981529370344752868158650318763",
    "1787433594462433185511146681413040636968",
    "76610361547970390014041401956375253519",
    "739520556846959085018120036998133255835",
    "5533079644241704014802052529604371844",
    "101520258712339119345830936586852421312"
  ]
}
