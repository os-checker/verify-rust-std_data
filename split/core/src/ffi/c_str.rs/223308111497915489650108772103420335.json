{
  "file": "core/src/ffi/c_str.rs",
  "name": "core::ffi::c_str::strlen",
  "hash": "223308111497915489650108772103420335",
  "hash_direct": "626373581642436027215232247591225693622",
  "src": "const unsafe fn strlen(ptr: *const c_char) -> usize {\n    const_eval_select!(\n        @capture { s: *const c_char = ptr } -> usize:\n        if const {\n            let mut len = 0;\n\n            // SAFETY: Outer caller has provided a pointer to a valid C string.\n            while unsafe { *s.add(len) } != 0 {\n                len += 1;\n            }\n\n            len\n        } else {\n            unsafe extern \"C\" {\n                /// Provided by libc or compiler_builtins.\n                fn strlen(s: *const c_char) -> usize;\n            }\n\n            // SAFETY: Outer caller has provided a pointer to a valid C string.\n            unsafe { strlen(s) }\n        }\n    )\n}",
  "callees": [
    "47163232528417134087249122550135535252"
  ]
}
