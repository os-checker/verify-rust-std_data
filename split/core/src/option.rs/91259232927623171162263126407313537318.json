{
  "file": "core/src/option.rs",
  "name": "option::Option::<&mut [u8]>::map::<&mut bstr::ByteStr, for<'a> fn(&'a mut [u8]) -> &'a mut bstr::ByteStr {bstr::ByteStr::from_bytes_mut}>",
  "hash": "91259232927623171162263126407313537318",
  "hash_direct": "15204012909463791136638342880361487929",
  "src": "pub const fn map<U, F>(self, f: F) -> Option<U>\n    where\n        F: [const] FnOnce(T) -> U + [const] Destruct,\n    {\n        match self {\n            Some(x) => Some(f(x)),\n            None => None,\n        }\n    }",
  "callees": [
    "655644704543625357914499273589454619946",
    "1833099800729826288815633692934262716120",
    "732374513817134745817071711119891796662"
  ]
}
