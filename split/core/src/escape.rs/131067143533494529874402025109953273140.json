{
  "file": "core/src/escape.rs",
  "name": "escape::EscapeIterInner::<10, escape::MaybeEscaped>::next",
  "hash": "131067143533494529874402025109953273140",
  "hash_direct": "255372433566590180814620428643933072030",
  "src": "pub(crate) fn next(&mut self) -> Option<char> {\n        let i = self.alive.next()?;\n\n        if let Some(c) = self.to_char() {\n            return Some(c);\n        }\n\n        // SAFETY: At this point, `self.data` must contain printable ASCII\n        //         characters in its `escape_seq` variant, and `i` is\n        //         guaranteed to be a valid index for `self.data.escape_seq`.\n        Some(char::from(unsafe { self.data.escape_seq.get_unchecked(usize::from(i)).to_u8() }))\n    }",
  "callees": [
    "211389067699639933614636457746408448112",
    "511962504776047044912646038885098500692",
    "26005865984918626858637243729294095122",
    "9122690305665940051388962439719640221",
    "1758912313049800270217802676586818662126",
    "258820287469578611817448591488600041899",
    "17421822894816687532325615181214565887",
    "23815256893174302637797703719499456373",
    "97427450881639148063972597105991735454",
    "66558832420252384767352894655095642857",
    "115364234840821242271430801959642615165",
    "26195867178919098137740125012797303465",
    "18305200539080999937692536706112892813",
    "4105489478158635609088823744055955963",
    "33605783209889310876275651287772169825",
    "1113032932815665948217565294476098756403",
    "41505289739977656509611396154325757795",
    "478753423337745817613297159272845606672",
    "171703085011510184787883206899877368211",
    "101628934354328292516881712249699787306",
    "1803188962461980699617879434368201065587",
    "111002727729737487855910752441805729044",
    "154911443990380340341563367924870465980",
    "1655209669618753209114659502170458211993",
    "739520556846959085018120036998133255835"
  ]
}
