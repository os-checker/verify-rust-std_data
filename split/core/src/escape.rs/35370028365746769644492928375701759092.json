{
  "file": "core/src/escape.rs",
  "name": "escape::EscapeIterInner::<10, escape::AlwaysEscaped>::ascii",
  "hash": "35370028365746769644492928375701759092",
  "hash_direct": "324362711783810549016331613847896999151",
  "src": "pub(crate) const fn ascii(c: u8) -> Self {\n        let (escape_seq, alive) = escape_ascii(c);\n        // SAFETY: `escape_seq` contains an escape sequence in the range given by `alive`.\n        unsafe { Self::new(MaybeEscapedCharacter { escape_seq }, alive) }\n    }",
  "callees": [
    "15551977551413036531158252289522839939",
    "924792046670332786817944240588622075467",
    "2153815559673747084871476722621538969",
    "34033821343796496721583911312683496924",
    "443997961579727925018215293937479203837",
    "94867568266683552417585213232011858888",
    "258820287469578611817448591488600041899",
    "1113032932815665948217565294476098756403",
    "41505289739977656509611396154325757795",
    "243931809744896974812513529918607549579",
    "1752989996936949203916036071159051010960"
  ]
}
