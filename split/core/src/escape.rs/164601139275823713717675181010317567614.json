{
  "file": "core/src/escape.rs",
  "name": "escape::EscapeIterInner::<10, escape::AlwaysEscaped>::ascii",
  "hash": "164601139275823713717675181010317567614",
  "hash_direct": "324362711783810549016331613847896999151",
  "src": "pub(crate) const fn ascii(c: u8) -> Self {\n        let (escape_seq, alive) = escape_ascii(c);\n        // SAFETY: `escape_seq` contains an escape sequence in the range given by `alive`.\n        unsafe { Self::new(MaybeEscapedCharacter { escape_seq }, alive) }\n    }",
  "callees": [
    "652182000514958061713215128671564018150",
    "1049269644659338826513279302519967805708",
    "39437333748502814549799659117940154402",
    "90560719827645173863973025411534139639",
    "14416948434991562229105356152318384944",
    "1040339599326832618111461915909975396456",
    "47323665595455568617290020941376774286",
    "841904668883726495316837415609641023349",
    "1258931108755458209614962827106116332072",
    "53589810041120365110998933211304468616",
    "1243847030362955698517207199029174369810"
  ]
}
