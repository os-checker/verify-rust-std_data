{
  "file": "core/src/escape.rs",
  "name": "escape::EscapeIterInner::<10, escape::MaybeEscaped>::unicode",
  "hash": "1746030322298731102015322605034593963216",
  "hash_direct": "82333617146003122329537624225011308001",
  "src": "pub(crate) const fn unicode(c: char) -> Self {\n        let (escape_seq, alive) = escape_unicode(c);\n        // SAFETY: `escape_seq` contains an escape sequence in the range given by `alive`.\n        unsafe { Self::new(MaybeEscapedCharacter { escape_seq }, alive) }\n    }",
  "callees": [
    "566737276310115629513798456193914181499",
    "802059967958499159511222978781090659237",
    "47323665595455568617290020941376774286",
    "14336217352403889789696607974386324455",
    "841904668883726495316837415609641023349",
    "1258931108755458209614962827106116332072",
    "53589810041120365110998933211304468616",
    "1243847030362955698517207199029174369810"
  ]
}
