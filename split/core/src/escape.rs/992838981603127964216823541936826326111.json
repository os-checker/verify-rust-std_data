{
  "file": "core/src/escape.rs",
  "name": "core::escape::EscapeIterInner::<10, core::escape::MaybeEscaped>::next",
  "hash": "992838981603127964216823541936826326111",
  "hash_direct": "55297148118394810289967212575949011682",
  "src": "pub(crate) fn next(&mut self) -> Option<char> {\n        let i = self.alive.next()?;\n\n        if let Some(c) = self.to_char() {\n            return Some(c);\n        }\n\n        // SAFETY: At this point, `self.data` must contain printable ASCII\n        //         characters in its `escape_seq` variant, and `i` is\n        //         guaranteed to be a valid index for `self.data.escape_seq`.\n        Some(char::from(unsafe { self.data.escape_seq.get_unchecked(usize::from(i)).to_u8() }))\n    }",
  "callees": [
    "94092291067066871594599361884041748607",
    "91624703618721544069925098022659901114",
    "270934226779201151614364090706475945841",
    "21494050064510967155859247947068579189",
    "1289553201292555694815953991057551329113",
    "12281449246394340237926324936375242532",
    "181267529910573756716102767087485333561",
    "1824545319189397521315695847785602896178",
    "3301598247186630191864129770164799890",
    "684873234480876495015040532394631799406",
    "86470083236975055951180593538394746034",
    "1749740712739861242815270672824244822703",
    "156854427303737369107916853709007325513",
    "86333854867433762946194013299948086304",
    "1390829773196172208418222264088800085321",
    "986792852990965178117440249555081278778",
    "90818112465881722349174357944217011292",
    "63085389524472853348886374617170044294",
    "42861206474373751358934611056379678773",
    "159462333623052954725636250839646662502",
    "1730890350369128349912199599699896099834",
    "146019217726092624598595551257521950461",
    "42640861811413251621458178080920148489",
    "10879337220162465227046014198604799365",
    "112989397975222255532054380452996322405"
  ]
}
