{
  "file": "core/src/escape.rs",
  "name": "escape::EscapeIterInner::<10, escape::MaybeEscaped>::backslash",
  "hash": "213991889486383849717740240309125470732",
  "hash_direct": "1771146613530058078912666376919155440063",
  "src": "pub(crate) const fn backslash(c: ascii::Char) -> Self {\n        let (escape_seq, alive) = backslash(c);\n        // SAFETY: `escape_seq` contains an escape sequence in the range given by `alive`.\n        unsafe { Self::new(MaybeEscapedCharacter { escape_seq }, alive) }\n    }",
  "callees": [
    "75491363377095789909047969239098493854",
    "2153815559673747084871476722621538969",
    "258820287469578611817448591488600041899",
    "1113032932815665948217565294476098756403",
    "41505289739977656509611396154325757795",
    "243931809744896974812513529918607549579",
    "1752989996936949203916036071159051010960"
  ]
}
