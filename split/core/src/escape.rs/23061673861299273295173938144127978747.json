{
  "file": "core/src/escape.rs",
  "name": "core::escape::hex_escape::<4>",
  "hash": "23061673861299273295173938144127978747",
  "hash_direct": "109496291644307461677141601649486031516",
  "src": "const fn hex_escape<const N: usize>(byte: u8) -> ([ascii::Char; N], Range<u8>) {\n    const { assert!(N >= 4) };\n\n    let mut output = [ascii::Char::Null; N];\n\n    let hi = HEX_DIGITS[(byte >> 4) as usize];\n    let lo = HEX_DIGITS[(byte & 0xf) as usize];\n\n    output[0] = ascii::Char::ReverseSolidus;\n    output[1] = ascii::Char::SmallX;\n    output[2] = hi;\n    output[3] = lo;\n\n    (output, 0..4)\n}"
}
