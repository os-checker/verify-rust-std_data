{
  "file": "core/src/escape.rs",
  "name": "escape::EscapeIterInner::<10, escape::AlwaysEscaped>::backslash",
  "hash": "517261743190333049012701057630885148272",
  "hash_direct": "1365018770195794367214131594940649389763",
  "src": "pub(crate) const fn backslash(c: ascii::Char) -> Self {\n        let (escape_seq, alive) = backslash(c);\n        // SAFETY: `escape_seq` contains an escape sequence in the range given by `alive`.\n        unsafe { Self::new(MaybeEscapedCharacter { escape_seq }, alive) }\n    }",
  "callees": [
    "1049269644659338826513279302519967805708",
    "39437333748502814549799659117940154402",
    "47323665595455568617290020941376774286",
    "841904668883726495316837415609641023349",
    "1258931108755458209614962827106116332072",
    "53589810041120365110998933211304468616",
    "1243847030362955698517207199029174369810"
  ]
}
