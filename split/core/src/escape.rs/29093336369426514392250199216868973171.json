{
  "file": "core/src/escape.rs",
  "name": "core::escape::EscapeIterInner::<4, core::escape::AlwaysEscaped>::ascii",
  "hash": "29093336369426514392250199216868973171",
  "hash_direct": "61240274953436703159746033831617110139",
  "src": "pub(crate) const fn ascii(c: u8) -> Self {\n        let (escape_seq, alive) = escape_ascii(c);\n        // SAFETY: `escape_seq` contains an escape sequence in the range given by `alive`.\n        unsafe { Self::new(MaybeEscapedCharacter { escape_seq }, alive) }\n    }",
  "callees": [
    "1137360290842708568511641788074045911478",
    "120471743081847028758514164766986468459",
    "1308507295215272965311553982859876698692",
    "1147539698267820130713203716833199326955",
    "23061673861299273295173938144127978747",
    "136995696917498386247256010396700018089",
    "12281449246394340237926324936375242532",
    "986792852990965178117440249555081278778",
    "90818112465881722349174357944217011292",
    "170281423934441608902372914597711355436",
    "146612017564224181584303574960223420416"
  ]
}
