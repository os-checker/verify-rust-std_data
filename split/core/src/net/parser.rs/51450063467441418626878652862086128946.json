{
  "file": "core/src/net/parser.rs",
  "name": "net::parser::Parser::<'_>::read_number::<u8>",
  "hash": "51450063467441418626878652862086128946",
  "hash_direct": "4734027995724134316548520277101887934",
  "src": "fn read_number<T: ReadNumberHelper + TryFrom<u32>>(\n        &mut self,\n        radix: u32,\n        max_digits: Option<usize>,\n        allow_zero_prefix: bool,\n    ) -> Option<T> {\n        self.read_atomically(move |p| {\n            let mut digit_count = 0;\n            let has_leading_zero = p.peek_char() == Some('0');\n\n            // If max_digits.is_some(), then we are parsing a `u8` or `u16` and\n            // don't need to use checked arithmetic since it fits within a `u32`.\n            let result = if let Some(max_digits) = max_digits {\n                // u32::MAX = 4_294_967_295u32, which is 10 digits long.\n                // `max_digits` must be less than 10 to not overflow a `u32`.\n                debug_assert!(max_digits < 10);\n\n                let mut result = 0_u32;\n                while let Some(digit) = p.read_atomically(|p| p.read_char()?.to_digit(radix)) {\n                    result *= radix;\n                    result += digit;\n                    digit_count += 1;\n\n                    if digit_count > max_digits {\n                        return None;\n                    }\n                }\n\n                result.try_into().ok()\n            } else {\n                let mut result = T::ZERO;\n\n                while let Some(digit) = p.read_atomically(|p| p.read_char()?.to_digit(radix)) {\n                    result = result.checked_mul(radix)?;\n                    result = result.checked_add(digit)?;\n                    digit_count += 1;\n                }\n\n                Some(result)\n            };\n\n            if digit_count == 0 {\n                None\n            } else if !allow_zero_prefix && has_leading_zero && digit_count > 1 {\n                None\n            } else {\n                result\n            }\n        })\n    }",
  "callees": [
    "511962504776047044912646038885098500692",
    "85573708867003773503727706164971877350",
    "15518699560175228058918609018343356989",
    "137435347749645983146123195988225653902",
    "153464131300973601641642416030510450301",
    "258820287469578611817448591488600041899",
    "588974892899239543415856878986124229421",
    "690438059002452523915046149102377829082",
    "105694717423925436031685063675772687404",
    "630581024435565232213550134371990029149",
    "44421782838203085223217897581467993698",
    "1496059028021580695016992067514637295596",
    "174961006599602651112774110823044036001",
    "90583712393589625843971384805339798106",
    "1542629424392757507318192153181296275498",
    "1090802516613202497515360573503366486326",
    "1593816907297385618710307221619963429327",
    "180516585353448021395455336369491195366",
    "911822861811899355530098007190751594",
    "35564981125855940646375285213868755582",
    "303127917241666984113380325134893912788",
    "89287954886468619252760919414808496479",
    "1417200282281422413016632271311610318517",
    "15765558242646906914608850915749449758",
    "60869249937273539602008894281350951915",
    "11394109588989514066836781073732518434",
    "1424839172046310268011085042199237354602",
    "1801628256432380068815922960579698928313",
    "33605783209889310876275651287772169825",
    "533978393061650897214741362182416016139",
    "90434442550312736906949358693105215038",
    "1507457419509717148718386372359226764513",
    "107750154537374038185532791974515303762",
    "1525763869345687189211674463053960493799",
    "157530429328033125795449084189498893538",
    "1113032932815665948217565294476098756403",
    "41505289739977656509611396154325757795",
    "243931809744896974812513529918607549579",
    "1752989996936949203916036071159051010960",
    "59024304505974781454965304121530894781",
    "168768354270357176386468568927186672650",
    "88732405038833504516786169729211538271",
    "1817215089507823436616338053904223106794",
    "132216090387111466077274355354934980437",
    "1831069623491777935412170923567998719211",
    "21617172818475739555230285502389437314",
    "78204921097721474912957416123615891283"
  ]
}
