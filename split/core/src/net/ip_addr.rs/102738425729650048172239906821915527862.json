{
  "file": "core/src/net/ip_addr.rs",
  "name": "<&net::ip_addr::Ipv4Addr as ops::bit::BitOr<net::ip_addr::Ipv4Addr>>::bitor",
  "hash": "102738425729650048172239906821915527862",
  "hash_direct": "464510957399678924116759433582906606342",
  "src": "fn $bitop(self, rhs: $ty) -> $ty {\n                    let mut lhs = *self;\n                    lhs.$bitop_assign(rhs);\n                    lhs\n                }",
  "macro_backtrace": [
    {
      "callsite": "bitop_impls! {\n    #[stable(feature = \"ip_bitops\", since = \"1.75.0\")]\n    impl (BitAnd, BitAndAssign) for Ipv4Addr = (bitand, bitand_assign);\n    #[stable(feature = \"ip_bitops\", since = \"1.75.0\")]\n    impl (BitOr, BitOrAssign) for Ipv4Addr = (bitor, bitor_assign);\n\n    #[stable(feature = \"ip_bitops\", since = \"1.75.0\")]\n    impl (BitAnd, BitAndAssign) for Ipv6Addr = (bitand, bitand_assign);\n    #[stable(feature = \"ip_bitops\", since = \"1.75.0\")]\n    impl (BitOr, BitOrAssign) for Ipv6Addr = (bitor, bitor_assign);\n}",
      "defsite": "macro_rules! bitop_impls {\n    ($(\n        $(#[$attr:meta])*\n        impl ($BitOp:ident, $BitOpAssign:ident) for $ty:ty = ($bitop:ident, $bitop_assign:ident);\n    )*) => {\n        $(\n            $(#[$attr])*\n            impl $BitOpAssign for $ty {\n                fn $bitop_assign(&mut self, rhs: $ty) {\n                    for (lhs, rhs) in iter::zip(&mut self.octets, rhs.octets) {\n                        lhs.$bitop_assign(rhs);\n                    }\n                }\n            }\n\n            $(#[$attr])*\n            impl $BitOpAssign<&'_ $ty> for $ty {\n                fn $bitop_assign(&mut self, rhs: &'_ $ty) {\n                    self.$bitop_assign(*rhs);\n                }\n            }\n\n            $(#[$attr])*\n            impl $BitOp for $ty {\n                type Output = $ty;\n\n                #[inline]\n                fn $bitop(mut self, rhs: $ty) -> $ty {\n                    self.$bitop_assign(rhs);\n                    self\n                }\n            }\n\n            $(#[$attr])*\n            impl $BitOp<&'_ $ty> for $ty {\n                type Output = $ty;\n\n                #[inline]\n                fn $bitop(mut self, rhs: &'_ $ty) -> $ty {\n                    self.$bitop_assign(*rhs);\n                    self\n                }\n            }\n\n            $(#[$attr])*\n            impl $BitOp<$ty> for &'_ $ty {\n                type Output = $ty;\n\n                #[inline]\n                fn $bitop(self, rhs: $ty) -> $ty {\n                    let mut lhs = *self;\n                    lhs.$bitop_assign(rhs);\n                    lhs\n                }\n            }\n\n            $(#[$attr])*\n            impl $BitOp<&'_ $ty> for &'_ $ty {\n                type Output = $ty;\n\n                #[inline]\n                fn $bitop(self, rhs: &'_ $ty) -> $ty {\n                    let mut lhs = *self;\n                    lhs.$bitop_assign(*rhs);\n                    lhs\n                }\n            }\n        )*\n    };\n}"
    }
  ],
  "callees": [
    "1541852180343576566017773583755531587978",
    "11248228407295972475165380457408732293",
    "1154086735814154609110105903705238549374",
    "178083720114752446924702624557916963531",
    "167546922300958161902299692975056914596",
    "1095457653197993959712467502844794955730",
    "1538192831303341452715506051181549746381",
    "1210571303234143943512591195746036278104",
    "1790974678632589591714154350834779385843",
    "955730977096315671710151978719026202579",
    "129130507631207276117913231329060336415",
    "47323665595455568617290020941376774286",
    "111425599901702694743874629435682172347",
    "714811817540972740211524868124730226803",
    "1329845230409163288212548289525672875535",
    "109763229663154342343123224747831634619",
    "84909938954906103112758184730426842057",
    "16824420916691935049705640393259467449",
    "561445107989240208511361370086377379752",
    "88299685648512484518048963155611607444",
    "306345570549488302518077297160670102574",
    "662034621793568205813518047848906657651",
    "1809033639724408648216684277239704221877",
    "148390354676415266571055377464854847215",
    "1016151615303375525414352124901147872489",
    "2296358208985370125861509532719424494",
    "276997584677330685411206701604938851383",
    "166261810634793036513661332065270981761",
    "168545836479171427075036933182194130275",
    "1712898201300478840215074793236064467963",
    "123700700157688485513029091377147106229",
    "841346702487865802717731804342903065853",
    "1617054938297627622011998382328717871744",
    "1196638383615410162910723134175805433641",
    "1182371843420022111010336901757313084440",
    "26064680123257945312537992217601395168",
    "1801932849287312231112662193894546046488",
    "13796074939706337624507826801091410480",
    "844957821118050201712037424530049556280",
    "7287842794477457825444594829967059660",
    "18400546828195575794503699709479215337",
    "190326012008036553110818298591983434539",
    "170806846739926472268804847631945794209",
    "426660444221673690915890253082845174214",
    "305374531381368603518383057774771282949",
    "182866091610822053407238202135802860299",
    "312782805013495487013101185366708248332",
    "807459588385208510417001782946551009910",
    "129480380531112021538423106797390499649",
    "117014681791795483412008065584678472415",
    "111156803972027146385637029886445708524",
    "1082821691186947990213770102170711998065",
    "841904668883726495316837415609641023349",
    "1258931108755458209614962827106116332072",
    "53589810041120365110998933211304468616",
    "1243847030362955698517207199029174369810",
    "105125143701458073564296455695110349394",
    "25930241974724637292994171257021210872",
    "617554482545947003412104686554524783687",
    "1445917162577882149418297081791436471284",
    "849628185942532211610194183090257053256",
    "55767955768979135724569809046456107380",
    "703663108277374327010040438608357482834",
    "1100495660517602822510660091708953776518",
    "1324419806491351785414963800243091739685",
    "11646453575295718315251820797250120902",
    "121517560885951642988111556238025044242",
    "100997873198983912962755709631336094020",
    "176874511686723591117718097352009947115",
    "106153353282581515761440162646918660958",
    "120434390612880441743997131147997765162",
    "83283859024495082283720292893741409092",
    "136958357274389130334291848505288919310",
    "843102896095261732816452208300794916411",
    "169017152061146820209827866672499117723",
    "1048762906056744828014486690019684131237",
    "1365351597739011160412231277592213691479",
    "96938268585662610632095129526323472062",
    "1065899137889618750313994535315221966910",
    "934375696446284627516563118665690549226",
    "151694591507088409946921766244030956793",
    "199204638009217392510037902431469110881",
    "84778723771253399612701136067425341362",
    "1302514623760732210917631482165556335973",
    "50824866008468108414977877049644057765",
    "1028023859496283824714006082102994000183",
    "158163692502529074221991687329386189229",
    "916764738822665326311922320545270708758",
    "254980726983347633512203575532483066364",
    "15270023205217578333049352204880089381",
    "13099194159144109028351753407828076782",
    "6070393581172273467219589755300865373",
    "562312496236819150813866201726838112374",
    "134630569674812166108190301509193162762",
    "115856108157746351228331922333992335396",
    "949577173055195931617693703270529612693",
    "138774632689772549819578629668035245923",
    "156558724737321886766153526308848840146",
    "478505109661826463711850093418602871650",
    "393974833682574441515290398983271504453",
    "48548664629730829953422984265893277498",
    "399232661239117480517401994520839366833",
    "165260604638305226342101042842060873588",
    "34478597508049401479557782585707843723"
  ]
}
