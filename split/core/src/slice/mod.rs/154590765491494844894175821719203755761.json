{
  "file": "core/src/slice/mod.rs",
  "name": "core::slice::<impl [u8]>::as_chunks::<2>",
  "hash": "154590765491494844894175821719203755761",
  "hash_direct": "1118020027858119229612142827184121133495",
  "src": "pub const fn as_chunks<const N: usize>(&self) -> (&[[T; N]], &[T]) {\n        assert!(N != 0, \"chunk size must be non-zero\");\n        let len_rounded_down = self.len() / N * N;\n        // SAFETY: The rounded-down value is always the same or smaller than the\n        // original length, and thus must be in-bounds of the slice.\n        let (multiple_of_n, remainder) = unsafe { self.split_at_unchecked(len_rounded_down) };\n        // SAFETY: We already panicked for zero, and ensured by construction\n        // that the length of the subslice is a multiple of N.\n        let array_slice = unsafe { multiple_of_n.as_chunks_unchecked() };\n        (array_slice, remainder)\n    }",
  "callees": [
    "12281449246394340237926324936375242532",
    "99835071136844477394667148890151411684",
    "73694171442177138896992135977130617471",
    "181267529910573756716102767087485333561",
    "1362727304153836450215186853291845605124",
    "79817071675776388295206212610749591701",
    "1824545319189397521315695847785602896178",
    "1022803319099694746713266409355997953681",
    "18250717416972068006602817601958256464",
    "97566299569839892074656028861613377837",
    "63445776558743760357306790643934962414",
    "1055043272310861592713228670863657256034",
    "17976542625295060605041426324269334020",
    "897265533945643607115272871669854221703",
    "1605274151986183575712752596768333119248",
    "89502211078669479795623704974378882516",
    "170846580729842163074659927269266210653",
    "8010637041282557608011263416999007001",
    "986792852990965178117440249555081278778",
    "90818112465881722349174357944217011292",
    "146612017564224181584303574960223420416",
    "63085389524472853348886374617170044294",
    "175623961004431005849298709567805707658",
    "33067340742295788584221598515845050786",
    "20743252454400330067347997888777335224",
    "181953690662554297912505335505865467275",
    "927601772743169303216908637897944691801",
    "1574198065840570931715496922327374750806",
    "1793681111599931821712213635413918902143",
    "55408212128999564608147158566316072753",
    "10226158557590059632536436443197494751",
    "107706069853240824095549314308736190629",
    "121866230926415018332270093276707107239",
    "34065612884250944518452741434132275565",
    "1427536526616347568511859223439081842037",
    "117840446247572071834300460689997949046",
    "47672539441842164771342608976601968881",
    "26513880466180391136266502522707955176",
    "135658685123040705227309712198979945928",
    "471059197914006352117967940518452112349",
    "356896403557560017460350669106551612",
    "3579436837082673467436251911074803007",
    "116003191352895236935716644142521429105",
    "916552609649539653110630350571106092626",
    "112989397975222255532054380452996322405",
    "734748700356449319315300238482033757944",
    "597683522621928614711119364722938279780",
    "17341452779707394601695269753709495351"
  ]
}
