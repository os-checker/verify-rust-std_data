{
  "file": "core/src/slice/mod.rs",
  "name": "slice::<impl [mem::maybe_uninit::MaybeUninit<char>]>::get_unchecked::<ops::index_range::IndexRange>",
  "hash": "4489626532091630616863209749579112362",
  "hash_direct": "151044606517503356874285749593956243744",
  "src": "pub const unsafe fn get_unchecked<I>(&self, index: I) -> &I::Output\n    where\n        I: ~const SliceIndex<Self>,\n    {\n        // SAFETY: the caller must uphold most of the safety requirements for `get_unchecked`;\n        // the slice is dereferenceable because `self` is a safe reference.\n        // The returned pointer is safe because impls of `SliceIndex` have to guarantee that it is.\n        unsafe { &*index.get_unchecked(self) }\n    }",
  "callees": [
    "47323665595455568617290020941376774286",
    "1329845230409163288212548289525672875535",
    "426660444221673690915890253082845174214",
    "305374531381368603518383057774771282949",
    "312782805013495487013101185366708248332",
    "841904668883726495316837415609641023349",
    "1258931108755458209614962827106116332072",
    "105125143701458073564296455695110349394",
    "458772757546716953716903379393680122094",
    "146310777876303217386736888105300639452",
    "513296827392420605515770864250650246827",
    "113435353397430141395214826138088664817",
    "87905215503079520955941831883612079868"
  ]
}
