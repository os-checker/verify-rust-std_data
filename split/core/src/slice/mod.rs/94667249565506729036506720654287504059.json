{
  "file": "core/src/slice/mod.rs",
  "name": "slice::<impl [u8]>::subslice_range",
  "hash": "94667249565506729036506720654287504059",
  "hash_direct": "76884350432439734939108629291035400765",
  "src": "pub fn subslice_range(&self, subslice: &[T]) -> Option<Range<usize>> {\n        if T::IS_ZST {\n            panic!(\"elements are zero-sized\");\n        }\n\n        let self_start = self.as_ptr().addr();\n        let subslice_start = subslice.as_ptr().addr();\n\n        let byte_start = subslice_start.wrapping_sub(self_start);\n\n        if !byte_start.is_multiple_of(size_of::<T>()) {\n            return None;\n        }\n\n        let start = byte_start / size_of::<T>();\n        let end = start.wrapping_add(subslice.len());\n\n        if start <= self.len() && end <= self.len() { Some(start..end) } else { None }\n    }",
  "callees": [
    "47323665595455568617290020941376774286",
    "1712898201300478840215074793236064467963",
    "643349473068727846115780678007450923004",
    "74766200938378807122169159327788828495",
    "1290129509806421189411347835193128335421",
    "841904668883726495316837415609641023349",
    "1258931108755458209614962827106116332072",
    "1243847030362955698517207199029174369810",
    "703663108277374327010040438608357482834",
    "1100495660517602822510660091708953776518",
    "156130332443363785142369276941490088427"
  ]
}
