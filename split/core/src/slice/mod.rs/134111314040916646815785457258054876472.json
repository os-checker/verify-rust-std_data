{
  "file": "core/src/slice/mod.rs",
  "name": "slice::verify::align_to_from_u64::align_to_u32::ARR_SIZE",
  "hash": "134111314040916646815785457258054876472",
  "hash_direct": "744350326342629572711378865484390431186",
  "src": "const ARR_SIZE: usize = 100;",
  "macro_backtrace": [
    {
      "callsite": "proof_of_contract_for_align_to!(align_to_u32, $src_type, u32)",
      "defsite": "macro_rules! proof_of_contract_for_align_to {\n        ($harness:ident, $src:ty, $dst:ty) => {\n            #[kani::proof_for_contract(<[$src]>::align_to)]\n            fn $harness() {\n                const ARR_SIZE: usize = 100;\n                let src_arr: [$src; ARR_SIZE] = kani::any();\n                let src_slice = kani::slice::any_slice_of_array(&src_arr);\n                let dst_slice = unsafe { src_slice.align_to::<$dst>() };\n            }\n        };\n    }"
    },
    {
      "callsite": "gen_align_to_harnesses!(align_to_from_u64, u64)",
      "defsite": "macro_rules! gen_align_to_harnesses {\n        ($mod_name:ident, $src_type:ty) => {\n            mod $mod_name {\n                use super::*;\n\n                proof_of_contract_for_align_to!(align_to_u8, $src_type, u8);\n                proof_of_contract_for_align_to!(align_to_u16, $src_type, u16);\n                proof_of_contract_for_align_to!(align_to_u32, $src_type, u32);\n                proof_of_contract_for_align_to!(align_to_u64, $src_type, u64);\n                proof_of_contract_for_align_to!(align_to_u128, $src_type, u128);\n                proof_of_contract_for_align_to!(align_to_bool, $src_type, bool);\n                proof_of_contract_for_align_to!(align_to_char, $src_type, char);\n                proof_of_contract_for_align_to!(align_to_unit, $src_type, ());\n            }\n        };\n    }"
    }
  ]
}
