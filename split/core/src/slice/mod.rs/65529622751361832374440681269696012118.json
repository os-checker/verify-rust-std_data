{
  "file": "core/src/slice/mod.rs",
  "name": "slice::<impl [mem::maybe_uninit::MaybeUninit<char>]>::get_unchecked_mut::<ops::index_range::IndexRange>",
  "hash": "65529622751361832374440681269696012118",
  "hash_direct": "123630812749526688365214198570087246047",
  "src": "pub const unsafe fn get_unchecked_mut<I>(&mut self, index: I) -> &mut I::Output\n    where\n        I: [const] SliceIndex<Self>,\n    {\n        // SAFETY: the caller must uphold the safety requirements for `get_unchecked_mut`;\n        // the slice is dereferenceable because `self` is a safe reference.\n        // The returned pointer is safe because impls of `SliceIndex` have to guarantee that it is.\n        unsafe { &mut *index.get_unchecked_mut(self) }\n    }",
  "callees": [
    "258820287469578611817448591488600041899",
    "17421822894816687532325615181214565887",
    "884246074448727927914595282961940941192",
    "975615807404907599012293873143289411403",
    "27547235193633795771352944920978011050",
    "1113032932815665948217565294476098756403",
    "41505289739977656509611396154325757795",
    "478753423337745817613297159272845606672",
    "17885338024940159556008007307872397104",
    "73605271436615433592782990893848785911",
    "643776580154816945711014088420858857492",
    "32193535572390591639577511843833454884",
    "98672616218528724113768882390038008401"
  ]
}
