{
  "file": "core/src/slice/mod.rs",
  "name": "slice::<impl [usize]>::as_chunks::<4>",
  "hash": "690191742356000119711662071594594489591",
  "hash_direct": "1633225465735213991017402845425993758417",
  "src": "pub const fn as_chunks<const N: usize>(&self) -> (&[[T; N]], &[T]) {\n        assert!(N != 0, \"chunk size must be non-zero\");\n        let len_rounded_down = self.len() / N * N;\n        // SAFETY: The rounded-down value is always the same or smaller than the\n        // original length, and thus must be in-bounds of the slice.\n        let (multiple_of_n, remainder) = unsafe { self.split_at_unchecked(len_rounded_down) };\n        // SAFETY: We already panicked for zero, and ensured by construction\n        // that the length of the subslice is a multiple of N.\n        let array_slice = unsafe { multiple_of_n.as_chunks_unchecked() };\n        (array_slice, remainder)\n    }",
  "callees": [
    "47323665595455568617290020941376774286",
    "111425599901702694743874629435682172347",
    "714811817540972740211524868124730226803",
    "1329845230409163288212548289525672875535",
    "80772345035046942210372022594843481570",
    "109763229663154342343123224747831634619",
    "16824420916691935049705640393259467449",
    "561445107989240208511361370086377379752",
    "164222581612569613775862371766786294469",
    "1245138925531671967011772485621443291799",
    "84531025305994381986874028925223812083",
    "1067675883129992420314174327751912045205",
    "841346702487865802717731804342903065853",
    "1617054938297627622011998382328717871744",
    "643349473068727846115780678007450923004",
    "1196638383615410162910723134175805433641",
    "1182371843420022111010336901757313084440",
    "26064680123257945312537992217601395168",
    "841904668883726495316837415609641023349",
    "1258931108755458209614962827106116332072",
    "1243847030362955698517207199029174369810",
    "105125143701458073564296455695110349394",
    "25930241974724637292994171257021210872",
    "617554482545947003412104686554524783687",
    "1445917162577882149418297081791436471284",
    "849628185942532211610194183090257053256",
    "152018209062913109616942758022114057971",
    "703663108277374327010040438608357482834",
    "1100495660517602822510660091708953776518",
    "104831405656903467145249333363974848645",
    "45778466392467191607407869613497036936",
    "928576257219350686410540489380463230637",
    "699677282037119441912902108102153124040",
    "1301552843662473815815562437677364454669",
    "705720955307329014517734924079983333105",
    "2359618996072093344825228041002286558",
    "1809343474275607681211888501461793289939",
    "1281491428722655105812293039240564558174",
    "1003330821210552932912035065246129125121",
    "81865490382594657408046274180724905068",
    "7839859953712079114640771271960005865",
    "182908810388331326478630133303460182053",
    "180126912453652104473132457509626900161",
    "1149265318701628438811160570489210589004",
    "399232661239117480517401994520839366833",
    "1366691609966069760614771012231218686545",
    "165260604638305226342101042842060873588",
    "34478597508049401479557782585707843723"
  ]
}
