{
  "file": "core/src/slice/mod.rs",
  "name": "slice::<impl [mem::maybe_uninit::MaybeUninit<[u8; 2]>]>::get_unchecked_mut::<ops::range::RangeTo<usize>>",
  "hash": "121919945401579524304353705582596372062",
  "hash_direct": "1196130794765323692211677236787911428573",
  "src": "pub const unsafe fn get_unchecked_mut<I>(&mut self, index: I) -> &mut I::Output\n    where\n        I: ~const SliceIndex<Self>,\n    {\n        // SAFETY: the caller must uphold the safety requirements for `get_unchecked_mut`;\n        // the slice is dereferenceable because `self` is a safe reference.\n        // The returned pointer is safe because impls of `SliceIndex` have to guarantee that it is.\n        unsafe { &mut *index.get_unchecked_mut(self) }\n    }",
  "callees": [
    "47323665595455568617290020941376774286",
    "1329845230409163288212548289525672875535",
    "841904668883726495316837415609641023349",
    "1258931108755458209614962827106116332072",
    "105125143701458073564296455695110349394",
    "792400755021950223013766735596168553326",
    "75343062991428601283879190834543461578",
    "837138268038700546413518507348270427391",
    "388323439664003488712421160736089267962",
    "108841858544459361698497772521525097937",
    "109562649191060178038182565159088266799"
  ]
}
