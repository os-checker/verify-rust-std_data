{
  "file": "core/src/slice/mod.rs",
  "name": "slice::<impl [f32]>::swap",
  "hash": "116952744706781829487313157997313367844",
  "hash_direct": "169725889484019408156263639913125067561",
  "src": "pub const fn swap(&mut self, a: usize, b: usize) {\n        // FIXME: use swap_unchecked here (https://github.com/rust-lang/rust/pull/88540#issuecomment-944344343)\n        // Can't take two mutable loans from one vector, so instead use raw pointers.\n        let pa = &raw mut self[a];\n        let pb = &raw mut self[b];\n        // SAFETY: `pa` and `pb` have been created from safe mutable references and refer\n        // to elements in the slice and therefore are guaranteed to be valid and aligned.\n        // Note that accessing the elements behind `a` and `b` is checked and will\n        // panic when out of bounds.\n        unsafe {\n            ptr::swap(pa, pb);\n        }\n    }",
  "callees": [
    "258820287469578611817448591488600041899",
    "588974892899239543415856878986124229421",
    "690438059002452523915046149102377829082",
    "17421822894816687532325615181214565887",
    "27480086118489678191003877857780025576",
    "23815256893174302637797703719499456373",
    "47704708250653028710044748737554169683",
    "3348037517594157114729719856894976905",
    "1726194437602966340016757301249689204343",
    "1243884323998816418613498969745733613209",
    "468393518768745234312254314427889265270",
    "1554592054844705604815491083685925038228",
    "31244240180128544175272526361568808560",
    "1749362715435459353511933873995340031229",
    "152957573567666139458051071799244237150",
    "1440311084109427911411767598402928151278",
    "110553296291267690486764538235023897629",
    "1095980910905451195915776472035072742717",
    "462846610869204213514639900340099405177",
    "83296026332579416941842209678709993328",
    "97892229237199250718782565098232937194",
    "37868078735602925891573318122962819320",
    "1578703703635175719018067387082881800385",
    "632379827537218859118037651046044448068",
    "1113032932815665948217565294476098756403",
    "41505289739977656509611396154325757795",
    "1752989996936949203916036071159051010960",
    "760723331888050409213108094994821248586",
    "478753423337745817613297159272845606672",
    "3658730781980743391697756456907208995",
    "176386771705132260856587306647620489942",
    "625849434625814717716494369484959093162",
    "1566168013061370513711054548557151263674",
    "187482952606822645712460029589708661523",
    "126818845945534382313624863669169238336",
    "797634491229914867614080535361717737146",
    "463148830072667891214453452474049709022",
    "15720099998103460418870323427935895143",
    "166776697050612785113883264850514388619",
    "92293406756414262231157972400238103749",
    "739520556846959085018120036998133255835",
    "5533079644241704014802052529604371844",
    "101520258712339119345830936586852421312",
    "179112378572194142739537177584691521062"
  ]
}
