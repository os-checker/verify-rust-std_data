{
  "file": "core/src/slice/mod.rs",
  "name": "core::slice::<impl [core::mem::MaybeUninit<u8>]>::get_unchecked_mut::<core::ops::RangeFrom<usize>>",
  "hash": "109197800898408184449907079007924007746",
  "hash_direct": "129609320654228577843867707774348237740",
  "src": "pub const unsafe fn get_unchecked_mut<I>(&mut self, index: I) -> &mut I::Output\n    where\n        I: [const] SliceIndex<Self>,\n    {\n        // SAFETY: the caller must uphold the safety requirements for `get_unchecked_mut`;\n        // the slice is dereferenceable because `self` is a safe reference.\n        // The returned pointer is safe because impls of `SliceIndex` have to guarantee that it is.\n        unsafe { &mut *index.get_unchecked_mut(self) }\n    }",
  "callees": [
    "12281449246394340237926324936375242532",
    "181267529910573756716102767087485333561",
    "986792852990965178117440249555081278778",
    "90818112465881722349174357944217011292",
    "63085389524472853348886374617170044294",
    "30660665300176827444815792715306828317",
    "106074666638552195754659597836863061870",
    "16014988108024488849731774355881465899",
    "1722098407866980298415926726100976777683",
    "30275820378103632192968208177745875071",
    "71802804150214475725465162712763548345"
  ]
}
