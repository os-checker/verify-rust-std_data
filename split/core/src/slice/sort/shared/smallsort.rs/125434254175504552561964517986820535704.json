{
  "file": "core/src/slice/sort/shared/smallsort.rs",
  "name": "slice::sort::shared::smallsort::swap_if_less::<f32, {closure@/home/runner/work/distributed-verification/distributed-verification/verify-rust-std/library/core/src/slice/mod.rs:3165:41: 3165:47}>",
  "hash": "125434254175504552561964517986820535704",
  "hash_direct": "3801654659984388247630979937003334374",
  "src": "unsafe fn swap_if_less<T, F>(v_base: *mut T, a_pos: usize, b_pos: usize, is_less: &mut F)\nwhere\n    F: FnMut(&T, &T) -> bool,\n{\n    // SAFETY: the caller must guarantee that `a_pos` and `b_pos` each added to `v_base` yield valid\n    // pointers into `v_base`, and are properly aligned, and part of the same allocation.\n    unsafe {\n        let v_a = v_base.add(a_pos);\n        let v_b = v_base.add(b_pos);\n\n        // PANIC SAFETY: if is_less panics, no scratch memory was created and the slice should still be\n        // in a well defined state, without duplicates.\n\n        // Important to only swap if it is more and not if it is equal. is_less should return false for\n        // equal, so we don't swap.\n        let should_swap = is_less(&*v_b, &*v_a);\n\n        // This is a branchless version of swap if.\n        // The equivalent code with a branch would be:\n        //\n        // if should_swap {\n        //     ptr::swap(v_a, v_b, 1);\n        // }\n\n        // The goal is to generate cmov instructions here.\n        let v_a_swap = hint::select_unpredictable(should_swap, v_b, v_a);\n        let v_b_swap = hint::select_unpredictable(should_swap, v_a, v_b);\n\n        let v_b_swap_tmp = ManuallyDrop::new(ptr::read(v_b_swap));\n        ptr::copy(v_a_swap, v_a, 1);\n        ptr::copy_nonoverlapping(&*v_b_swap_tmp, v_b, 1);\n    }\n}",
  "callees": [
    "25315992229481465352451865580694346951",
    "842267059997019422815333829425931124000",
    "258820287469578611817448591488600041899",
    "1749896470962094197513721574537271080664",
    "588974892899239543415856878986124229421",
    "95145360150927316508712636882109290953",
    "195906651498126693711873346609041151231",
    "690438059002452523915046149102377829082",
    "17421822894816687532325615181214565887",
    "27480086118489678191003877857780025576",
    "1547564489779508118311471276601353146868",
    "23815256893174302637797703719499456373",
    "1639190511405576016712069487289226138136",
    "154868915780749051023790251584872206921",
    "98948247701979796981383318440935444036",
    "1181047503821259640715862953390532475195",
    "685837618491054085418214840674583290794",
    "516949490060059682910749834855084636853",
    "1203941343652735381418091052915140268463",
    "1007486007083768665013590249423603789078",
    "105358205211415583910007752475065903432",
    "171478660599761938823798238921074606660",
    "1554592054844705604815491083685925038228",
    "9077079987565736857968315209525048774",
    "31244240180128544175272526361568808560",
    "1749362715435459353511933873995340031229",
    "1280257502160233765816408910554470634604",
    "1157832635988226544312579101964623411278",
    "824698057860634039216667043292814384158",
    "145260583857546744352679364306705014963",
    "141489593237085181002614656531811257408",
    "1173385422516551927711311891490318803699",
    "62587016874313131693329047355057219344",
    "124679516092357812428249133337169351543",
    "143572956432032064744447501745832117320",
    "137368381448604167703416046205455599816",
    "156396365605833484958181337486344432065",
    "13303575705867660165971022725037666878",
    "761861023504359043615820998596748928032",
    "1239687241192450573815900328634536806436",
    "1113032932815665948217565294476098756403",
    "41505289739977656509611396154325757795",
    "1752989996936949203916036071159051010960",
    "760723331888050409213108094994821248586",
    "478753423337745817613297159272845606672",
    "3658730781980743391697756456907208995",
    "176386771705132260856587306647620489942",
    "24720139230274117689328858551755358968",
    "1566168013061370513711054548557151263674",
    "126299841668548339956842962787614012875",
    "196947132396865061710647143094248738344",
    "187482952606822645712460029589708661523",
    "126818845945534382313624863669169238336",
    "21053746991689950572086053362961811452",
    "96215875939356596816347523621977200521",
    "45483721650608319215891144303956371443",
    "50434367259982919184243988459294877425",
    "1814024728092996720912341531616753304217",
    "1836821856671223999714514043280971284941",
    "121183940754470095572383989014897197632",
    "1818408236388629076212678547730061000564",
    "293645540748671545017999185713660079650",
    "104462103040602924085297176652652961077",
    "124656679884072299719740859888952081738",
    "684705619041318229017965376202785420997",
    "48269828393251912102754553129094534608",
    "982812517398244847818134688650878457542",
    "74111286315405054421392461884745781298",
    "739520556846959085018120036998133255835",
    "71112245793085408723525187754979718597",
    "1217330957027791981411010835694243116934",
    "430944441469681173516867222861439884233"
  ]
}
