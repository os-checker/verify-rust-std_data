{
  "file": "core/src/slice/sort/shared/smallsort.rs",
  "name": "slice::sort::shared::smallsort::swap_if_less::<f64, {closure@/home/runner/work/distributed-verification/distributed-verification/verify-rust-std/library/core/src/slice/mod.rs:3158:41: 3158:47}>",
  "hash": "445564360041168516913487848433621611908",
  "hash_direct": "1314540166311985530711618923799506489466",
  "src": "unsafe fn swap_if_less<T, F>(v_base: *mut T, a_pos: usize, b_pos: usize, is_less: &mut F)\nwhere\n    F: FnMut(&T, &T) -> bool,\n{\n    // SAFETY: the caller must guarantee that `a_pos` and `b_pos` each added to `v_base` yield valid\n    // pointers into `v_base`, and are properly aligned, and part of the same allocation.\n    unsafe {\n        let v_a = v_base.add(a_pos);\n        let v_b = v_base.add(b_pos);\n\n        // PANIC SAFETY: if is_less panics, no scratch memory was created and the slice should still be\n        // in a well defined state, without duplicates.\n\n        // Important to only swap if it is more and not if it is equal. is_less should return false for\n        // equal, so we don't swap.\n        let should_swap = is_less(&*v_b, &*v_a);\n\n        // This is a branchless version of swap if.\n        // The equivalent code with a branch would be:\n        //\n        // if should_swap {\n        //     ptr::swap(v_a, v_b, 1);\n        // }\n\n        // The goal is to generate cmov instructions here.\n        let v_a_swap = hint::select_unpredictable(should_swap, v_b, v_a);\n        let v_b_swap = hint::select_unpredictable(should_swap, v_a, v_b);\n\n        let v_b_swap_tmp = ManuallyDrop::new(ptr::read(v_b_swap));\n        ptr::copy(v_a_swap, v_a, 1);\n        ptr::copy_nonoverlapping(&*v_b_swap_tmp, v_b, 1);\n    }\n}",
  "callees": [
    "25315992229481465352451865580694346951",
    "131203065817488211067140136749599673893",
    "258820287469578611817448591488600041899",
    "17952490876904025491179797362731547419",
    "588974892899239543415856878986124229421",
    "16731847445636760016886686763268945276",
    "453211650212179521216982411325342330736",
    "690438059002452523915046149102377829082",
    "17421822894816687532325615181214565887",
    "27480086118489678191003877857780025576",
    "1293607388739574242111226698004271448354",
    "23815256893174302637797703719499456373",
    "47704708250653028710044748737554169683",
    "3348037517594157114729719856894976905",
    "1773433010229001091613907777891715491506",
    "1716443215232136769817525172431023982267",
    "177198898458980010943989196887491139632",
    "1781690009562880789613805605064966989",
    "67830932826870317167811597850670844860",
    "177175712007621356012478631590678446814",
    "288019430802205018595144664109986139",
    "266080518554646339012946240505549165565",
    "27143329980388801218198615083747125661",
    "872205114925099333011215560138034927031",
    "1749362715435459353511933873995340031229",
    "1033976944350554769714411313899354111723",
    "935865976961147776913102301421189848381",
    "152957573567666139458051071799244237150",
    "1440311084109427911411767598402928151278",
    "110553296291267690486764538235023897629",
    "1095980910905451195915776472035072742717",
    "462846610869204213514639900340099405177",
    "83296026332579416941842209678709993328",
    "97892229237199250718782565098232937194",
    "37868078735602925891573318122962819320",
    "1578703703635175719018067387082881800385",
    "125312877505429677902664359715729802479",
    "632379827537218859118037651046044448068",
    "29910668401302440137796026586948212988",
    "1113032932815665948217565294476098756403",
    "41505289739977656509611396154325757795",
    "1752989996936949203916036071159051010960",
    "760723331888050409213108094994821248586",
    "478753423337745817613297159272845606672",
    "3658730781980743391697756456907208995",
    "176386771705132260856587306647620489942",
    "625849434625814717716494369484959093162",
    "1566168013061370513711054548557151263674",
    "1797631000324623339713612420305020920283",
    "97594018308861176561694743857133180298",
    "187482952606822645712460029589708661523",
    "126818845945534382313624863669169238336",
    "140037284170250879412165657698016564751",
    "33667224288951003956713148699857240956",
    "96124213409740596604317153356339968403",
    "178315078884488900363857138358026485986",
    "101626236615345659495105267688567427260",
    "106173986076596950018431688857119920681",
    "140397597977264513897043940497651763735",
    "449637264080571459055009589071427003",
    "33494271737232998493322355908395718749",
    "294184564209653742213128939253919937053",
    "166776697050612785113883264850514388619",
    "92293406756414262231157972400238103749",
    "606608081756831098117273329568996374994",
    "76610361547970390014041401956375253519",
    "739520556846959085018120036998133255835",
    "5533079644241704014802052529604371844",
    "101520258712339119345830936586852421312",
    "179112378572194142739537177584691521062"
  ]
}
