{
  "file": "core/src/slice/sort/shared/mod.rs",
  "name": "slice::sort::shared::find_existing_run::<f32, {closure@/home/runner/work/distributed-verification/distributed-verification/verify-rust-std/library/core/src/slice/mod.rs:3158:41: 3158:47}>",
  "hash": "4588734799199179847434191694884711509",
  "hash_direct": "77477925545847355113352004379167997234",
  "src": "pub(crate) fn find_existing_run<T, F: FnMut(&T, &T) -> bool>(\n    v: &[T],\n    is_less: &mut F,\n) -> (usize, bool) {\n    let len = v.len();\n    if len < 2 {\n        return (len, false);\n    }\n\n    // SAFETY: We checked that len >= 2, so 0 and 1 are valid indices.\n    // This also means that run_len < len implies run_len and run_len - 1\n    // are valid indices as well.\n    unsafe {\n        let mut run_len = 2;\n        let strictly_descending = is_less(v.get_unchecked(1), v.get_unchecked(0));\n        if strictly_descending {\n            while run_len < len && is_less(v.get_unchecked(run_len), v.get_unchecked(run_len - 1)) {\n                run_len += 1;\n            }\n        } else {\n            while run_len < len && !is_less(v.get_unchecked(run_len), v.get_unchecked(run_len - 1))\n            {\n                run_len += 1;\n            }\n        }\n        (run_len, strictly_descending)\n    }\n}",
  "callees": [
    "81385294222362714685518950164453635767",
    "46489561819967951214045237103392664622",
    "47323665595455568617290020941376774286",
    "1329845230409163288212548289525672875535",
    "16824420916691935049705640393259467449",
    "162361112433299032238584891523845488474",
    "93773215297586442255071597017053773700",
    "1509749051880564672214139607973048202552",
    "841904668883726495316837415609641023349",
    "1258931108755458209614962827106116332072",
    "105125143701458073564296455695110349394",
    "552241013859072525810442137084444649546",
    "112305483046022636439864392342967919160",
    "1112481810625186898913141743831696043067",
    "173072100996431402341266137359384834456",
    "118042308767439437138395977050205460629",
    "138774632689772549819578629668035245923",
    "399232661239117480517401994520839366833"
  ]
}
