{
  "file": "core/src/slice/sort/unstable/quicksort.rs",
  "name": "slice::sort::unstable::quicksort::partition::<f64, {closure@/home/runner/work/distributed-verification/distributed-verification/verify-rust-std/library/core/src/slice/sort/unstable/quicksort.rs:52:59: 52:65}>",
  "hash": "248044882012025897216176071132836227545",
  "hash_direct": "22391019054928598972824349589380438046",
  "src": "pub(crate) fn partition<T, F>(v: &mut [T], pivot: usize, is_less: &mut F) -> usize\nwhere\n    F: FnMut(&T, &T) -> bool,\n{\n    let len = v.len();\n\n    // Allows for panic-free code-gen by proving this property to the compiler.\n    if len == 0 {\n        return 0;\n    }\n\n    if pivot >= len {\n        intrinsics::abort();\n    }\n\n    // SAFETY: We checked that `pivot` is in-bounds.\n    unsafe {\n        // Place the pivot at the beginning of slice.\n        v.swap_unchecked(0, pivot);\n    }\n    let (pivot, v_without_pivot) = v.split_at_mut(1);\n\n    // Assuming that Rust generates noalias LLVM IR we can be sure that a partition function\n    // signature of the form `(v: &mut [T], pivot: &T)` guarantees that pivot and v can't alias.\n    // Having this guarantee is crucial for optimizations. It's possible to copy the pivot value\n    // into a stack value, but this creates issues for types with interior mutability mandating\n    // a drop guard.\n    let pivot = &mut pivot[0];\n\n    // This construct is used to limit the LLVM IR generated, which saves large amounts of\n    // compile-time by only instantiating the code that is needed. Idea by Frank Steffahn.\n    let num_lt = (const { inst_partition::<T, F>() })(v_without_pivot, pivot, is_less);\n\n    if num_lt >= len {\n        intrinsics::abort();\n    }\n\n    // SAFETY: We checked that `num_lt` is in-bounds.\n    unsafe {\n        // Place the pivot between the two partitions.\n        v.swap_unchecked(0, num_lt);\n    }\n\n    num_lt\n}",
  "callees": [
    "81385294222362714685518950164453635767",
    "10436405171744302504267274923569342957",
    "47323665595455568617290020941376774286",
    "111425599901702694743874629435682172347",
    "714811817540972740211524868124730226803",
    "1329845230409163288212548289525672875535",
    "109763229663154342343123224747831634619",
    "84909938954906103112758184730426842057",
    "16824420916691935049705640393259467449",
    "561445107989240208511361370086377379752",
    "161225022469363908823200354701136905531",
    "562818839467751460316546149069965421669",
    "127373222190113940911382518085484404284",
    "110613820748642232941932700974860351018",
    "371433689117485476912141671040494842160",
    "359918396737346278411511598368622208428",
    "144716145328591080066782464374773781304",
    "35416910900921381748552437083050086013",
    "1263014077506324103410609066782713912702",
    "267397640077708419917774511588833123757",
    "1067675883129992420314174327751912045205",
    "85253214614932633916524759824229868238",
    "1342255621888147885315125004424529991795",
    "79307503347131170578315604022567527135",
    "1160150031813070275716801291559951969968",
    "45465200458951020712268855471874148461",
    "10276831356989197177291225683156882265",
    "145583995108105043133401862026582368143",
    "8850644696306119287964523545649044939",
    "841346702487865802717731804342903065853",
    "1617054938297627622011998382328717871744",
    "1196638383615410162910723134175805433641",
    "1182371843420022111010336901757313084440",
    "26064680123257945312537992217601395168",
    "1783659889351469353310279621573179415628",
    "841904668883726495316837415609641023349",
    "1258931108755458209614962827106116332072",
    "1243847030362955698517207199029174369810",
    "380262551218047276514654482281297551654",
    "105125143701458073564296455695110349394",
    "25930241974724637292994171257021210872",
    "617554482545947003412104686554524783687",
    "1445917162577882149418297081791436471284",
    "849628185942532211610194183090257053256",
    "703663108277374327010040438608357482834",
    "1100495660517602822510660091708953776518",
    "1472221441905198229316361628601040100701",
    "27655842266785146994666362440773715747",
    "132875940520269593265470766514320119664",
    "85431504423290297139523741126676433890",
    "15530226500034424031374734222713951844",
    "11467400074458332921403764527095704319",
    "169017152061146820209827866672499117723",
    "4714829824583885766745164475970492146",
    "1589696344118059098717663854829197973274",
    "52088871005951181071266739164392301923",
    "123489549685290467610327161783048033461",
    "20690429186106139682278416705265556085",
    "1666565661656428821614810648271191058574",
    "112152005516264736842176765864884778660",
    "108029504355013329044782823410646742203",
    "108337199499679023544009228598687320692",
    "930145443709271392516956919114417897381",
    "823577016593312014917774008257025117253",
    "1833648891477721821513278565533866774739",
    "153999075255816246604435272140943255557",
    "393974833682574441515290398983271504453",
    "48548664629730829953422984265893277498",
    "188477357021356532517716614779858660745",
    "814630926930692395113620400226148314716",
    "1624379938933529147317881339677401093926",
    "399232661239117480517401994520839366833",
    "1366691609966069760614771012231218686545",
    "165260604638305226342101042842060873588",
    "34478597508049401479557782585707843723",
    "15859584444614920947579563356650829639"
  ]
}
