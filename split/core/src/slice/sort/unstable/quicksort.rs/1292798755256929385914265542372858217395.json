{
  "file": "core/src/slice/sort/unstable/quicksort.rs",
  "name": "slice::sort::unstable::quicksort::partition::<f64, {closure@/home/runner/work/distributed-verification/distributed-verification/verify-rust-std/library/core/src/slice/mod.rs:3165:41: 3165:47}>",
  "hash": "1292798755256929385914265542372858217395",
  "hash_direct": "13770910309501758926678814324190223137",
  "src": "pub(crate) fn partition<T, F>(v: &mut [T], pivot: usize, is_less: &mut F) -> usize\nwhere\n    F: FnMut(&T, &T) -> bool,\n{\n    let len = v.len();\n\n    // Allows for panic-free code-gen by proving this property to the compiler.\n    if len == 0 {\n        return 0;\n    }\n\n    if pivot >= len {\n        intrinsics::abort();\n    }\n\n    // SAFETY: We checked that `pivot` is in-bounds.\n    unsafe {\n        // Place the pivot at the beginning of slice.\n        v.swap_unchecked(0, pivot);\n    }\n    let (pivot, v_without_pivot) = v.split_at_mut(1);\n\n    // Assuming that Rust generates noalias LLVM IR we can be sure that a partition function\n    // signature of the form `(v: &mut [T], pivot: &T)` guarantees that pivot and v can't alias.\n    // Having this guarantee is crucial for optimizations. It's possible to copy the pivot value\n    // into a stack value, but this creates issues for types with interior mutability mandating\n    // a drop guard.\n    let pivot = &mut pivot[0];\n\n    // This construct is used to limit the LLVM IR generated, which saves large amounts of\n    // compile-time by only instantiating the code that is needed. Idea by Frank Steffahn.\n    let num_lt = (const { inst_partition::<T, F>() })(v_without_pivot, pivot, is_less);\n\n    if num_lt >= len {\n        intrinsics::abort();\n    }\n\n    // SAFETY: We checked that `num_lt` is in-bounds.\n    unsafe {\n        // Place the pivot between the two partitions.\n        v.swap_unchecked(0, num_lt);\n    }\n\n    num_lt\n}",
  "callees": [
    "25315992229481465352451865580694346951",
    "131203065817488211067140136749599673893",
    "258820287469578611817448591488600041899",
    "588974892899239543415856878986124229421",
    "690438059002452523915046149102377829082",
    "17421822894816687532325615181214565887",
    "27480086118489678191003877857780025576",
    "1547564489779508118311471276601353146868",
    "23815256893174302637797703719499456373",
    "1639190511405576016712069487289226138136",
    "154868915780749051023790251584872206921",
    "66033579580843115639216122945030028401",
    "177198898458980010943989196887491139632",
    "412668679751514760211927490316490023937",
    "1442920482326666428518321051032822836575",
    "804598402694933531918117665828161454644",
    "176165298401429238401796992272150342130",
    "27143329980388801218198615083747125661",
    "24957256455678140611948673534700671105",
    "872205114925099333011215560138034927031",
    "1749362715435459353511933873995340031229",
    "1033976944350554769714411313899354111723",
    "935865976961147776913102301421189848381",
    "824698057860634039216667043292814384158",
    "145260583857546744352679364306705014963",
    "141489593237085181002614656531811257408",
    "1173385422516551927711311891490318803699",
    "62587016874313131693329047355057219344",
    "124679516092357812428249133337169351543",
    "143572956432032064744447501745832117320",
    "137368381448604167703416046205455599816",
    "156396365605833484958181337486344432065",
    "13303575705867660165971022725037666878",
    "761861023504359043615820998596748928032",
    "29910668401302440137796026586948212988",
    "1113032932815665948217565294476098756403",
    "41505289739977656509611396154325757795",
    "1752989996936949203916036071159051010960",
    "760723331888050409213108094994821248586",
    "478753423337745817613297159272845606672",
    "3658730781980743391697756456907208995",
    "176386771705132260856587306647620489942",
    "24720139230274117689328858551755358968",
    "1566168013061370513711054548557151263674",
    "187482952606822645712460029589708661523",
    "126818845945534382313624863669169238336",
    "383941379499944612415686561901705214345",
    "76087680206635820056667644559109535396",
    "371192579773467124910131766380195795041",
    "95361434355292140996541898939168217904",
    "129204178816377018123994311592856603771",
    "177423444340263407612147732972552133483",
    "293645540748671545017999185713660079650",
    "16945391567286791139892170040202505549",
    "1731824179572293139318170269715532491601",
    "294184564209653742213128939253919937053",
    "1282554233167343235715811567393758614642",
    "1363459876185690302813951091398100354941",
    "155785928227605702998413572268996731440",
    "151675503048130580377290801939297115118",
    "48022188179749031841483883707908129945",
    "1548969379722570048713664308679899127836",
    "180222540055607842394270083248253722713",
    "684705619041318229017965376202785420997",
    "48269828393251912102754553129094534608",
    "982812517398244847818134688650878457542",
    "74111286315405054421392461884745781298",
    "1262268302406396300513565250820649213634",
    "74402658018052786310281099043124569565",
    "1320801548407176755117757300189063729311",
    "739520556846959085018120036998133255835",
    "154579918799348646172273891119983850679",
    "71112245793085408723525187754979718597",
    "1217330957027791981411010835694243116934",
    "430944441469681173516867222861439884233"
  ]
}
