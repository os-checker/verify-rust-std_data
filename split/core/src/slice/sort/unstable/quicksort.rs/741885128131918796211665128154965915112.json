{
  "file": "core/src/slice/sort/unstable/quicksort.rs",
  "name": "slice::sort::unstable::quicksort::partition::<f64, {closure@/home/runner/work/distributed-verification/distributed-verification/verify-rust-std/library/core/src/slice/mod.rs:3158:41: 3158:47}>",
  "hash": "741885128131918796211665128154965915112",
  "hash_direct": "21830287565297416152534181940950050763",
  "src": "pub(crate) fn partition<T, F>(v: &mut [T], pivot: usize, is_less: &mut F) -> usize\nwhere\n    F: FnMut(&T, &T) -> bool,\n{\n    let len = v.len();\n\n    // Allows for panic-free code-gen by proving this property to the compiler.\n    if len == 0 {\n        return 0;\n    }\n\n    if pivot >= len {\n        intrinsics::abort();\n    }\n\n    // SAFETY: We checked that `pivot` is in-bounds.\n    unsafe {\n        // Place the pivot at the beginning of slice.\n        v.swap_unchecked(0, pivot);\n    }\n    let (pivot, v_without_pivot) = v.split_at_mut(1);\n\n    // Assuming that Rust generates noalias LLVM IR we can be sure that a partition function\n    // signature of the form `(v: &mut [T], pivot: &T)` guarantees that pivot and v can't alias.\n    // Having this guarantee is crucial for optimizations. It's possible to copy the pivot value\n    // into a stack value, but this creates issues for types with interior mutability mandating\n    // a drop guard.\n    let pivot = &mut pivot[0];\n\n    // This construct is used to limit the LLVM IR generated, which saves large amounts of\n    // compile-time by only instantiating the code that is needed. Idea by Frank Steffahn.\n    let num_lt = (const { inst_partition::<T, F>() })(v_without_pivot, pivot, is_less);\n\n    if num_lt >= len {\n        intrinsics::abort();\n    }\n\n    // SAFETY: We checked that `num_lt` is in-bounds.\n    unsafe {\n        // Place the pivot between the two partitions.\n        v.swap_unchecked(0, num_lt);\n    }\n\n    num_lt\n}",
  "callees": [
    "25315992229481465352451865580694346951",
    "131203065817488211067140136749599673893",
    "258820287469578611817448591488600041899",
    "588974892899239543415856878986124229421",
    "690438059002452523915046149102377829082",
    "17421822894816687532325615181214565887",
    "27480086118489678191003877857780025576",
    "1293607388739574242111226698004271448354",
    "23815256893174302637797703719499456373",
    "47704708250653028710044748737554169683",
    "3348037517594157114729719856894976905",
    "66033579580843115639216122945030028401",
    "177198898458980010943989196887491139632",
    "412668679751514760211927490316490023937",
    "1442920482326666428518321051032822836575",
    "804598402694933531918117665828161454644",
    "176165298401429238401796992272150342130",
    "27143329980388801218198615083747125661",
    "24957256455678140611948673534700671105",
    "872205114925099333011215560138034927031",
    "1749362715435459353511933873995340031229",
    "1033976944350554769714411313899354111723",
    "935865976961147776913102301421189848381",
    "152957573567666139458051071799244237150",
    "1440311084109427911411767598402928151278",
    "110553296291267690486764538235023897629",
    "1095980910905451195915776472035072742717",
    "462846610869204213514639900340099405177",
    "83296026332579416941842209678709993328",
    "97892229237199250718782565098232937194",
    "37868078735602925891573318122962819320",
    "1578703703635175719018067387082881800385",
    "125312877505429677902664359715729802479",
    "632379827537218859118037651046044448068",
    "29910668401302440137796026586948212988",
    "1113032932815665948217565294476098756403",
    "41505289739977656509611396154325757795",
    "1752989996936949203916036071159051010960",
    "760723331888050409213108094994821248586",
    "478753423337745817613297159272845606672",
    "3658730781980743391697756456907208995",
    "176386771705132260856587306647620489942",
    "625849434625814717716494369484959093162",
    "1566168013061370513711054548557151263674",
    "187482952606822645712460029589708661523",
    "126818845945534382313624863669169238336",
    "383941379499944612415686561901705214345",
    "140037284170250879412165657698016564751",
    "33667224288951003956713148699857240956",
    "140397597977264513897043940497651763735",
    "129204178816377018123994311592856603771",
    "104266011134410315695605741760968034877",
    "449637264080571459055009589071427003",
    "33494271737232998493322355908395718749",
    "1731824179572293139318170269715532491601",
    "294184564209653742213128939253919937053",
    "1800602493208566216610448483646097517858",
    "7845306863929523959922088489625511969",
    "134485075654930192797318258446145331219",
    "1388665359981237763716145993010501223970",
    "46892610911550522224421482915585724939",
    "11627113255006151136696550321153614236",
    "68749963629867556464108405008891792850",
    "166776697050612785113883264850514388619",
    "92293406756414262231157972400238103749",
    "606608081756831098117273329568996374994",
    "76610361547970390014041401956375253519",
    "1262268302406396300513565250820649213634",
    "74402658018052786310281099043124569565",
    "1027590512138995399024066666285567387",
    "739520556846959085018120036998133255835",
    "154579918799348646172273891119983850679",
    "5533079644241704014802052529604371844",
    "101520258712339119345830936586852421312",
    "179112378572194142739537177584691521062"
  ]
}
