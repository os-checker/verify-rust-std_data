{
  "file": "core/src/slice/index.rs",
  "name": "<ops::index_range::IndexRange as slice::index::SliceIndex<[mem::maybe_uninit::MaybeUninit<char>]>>::get_unchecked_mut",
  "hash": "56835273449349560221636717489589691169",
  "hash_direct": "1051375325492494880210735663396507080091",
  "src": "unsafe fn get_unchecked_mut(self, slice: *mut [T]) -> *mut [T] {\n        assert_unsafe_precondition!(\n            check_library_ub,\n            \"slice::get_unchecked_mut requires that the index is within the slice\",\n            (end: usize = self.end(), len: usize = slice.len()) => end <= len\n        );\n\n        // SAFETY: see comments for `get_unchecked` above.\n        unsafe { get_offset_len_mut_noubcheck(slice, self.start(), self.len()) }\n    }",
  "callees": [
    "47323665595455568617290020941376774286",
    "1329845230409163288212548289525672875535",
    "426660444221673690915890253082845174214",
    "305374531381368603518383057774771282949",
    "312782805013495487013101185366708248332",
    "841904668883726495316837415609641023349",
    "1258931108755458209614962827106116332072",
    "105125143701458073564296455695110349394",
    "146310777876303217386736888105300639452",
    "177478443247045809459991316947153830226",
    "202138944626815357413799005241025326766",
    "949577173055195931617693703270529612693"
  ]
}
