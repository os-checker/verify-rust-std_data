{
  "file": "core/src/slice/index.rs",
  "name": "slice::index::get_offset_len_mut_noubcheck::<u8>",
  "hash": "25047678897068037619032084817793238854",
  "hash_direct": "59867565373662183092725395731989210346",
  "src": "const unsafe fn get_offset_len_mut_noubcheck<T>(\n    ptr: *mut [T],\n    offset: usize,\n    len: usize,\n) -> *mut [T] {\n    let ptr = ptr as *mut T;\n    // SAFETY: The caller already checked these preconditions\n    let ptr = unsafe { crate::intrinsics::offset(ptr, offset) };\n    crate::intrinsics::aggregate_raw_ptr(ptr, len)\n}"
}
