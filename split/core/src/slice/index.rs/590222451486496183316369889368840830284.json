{
  "file": "core/src/slice/index.rs",
  "name": "<usize as slice::index::SliceIndex<[mem::maybe_uninit::MaybeUninit<(i32, f64, bool)>]>>::get_unchecked_mut",
  "hash": "590222451486496183316369889368840830284",
  "hash_direct": "33890110847280367164274408542826832836",
  "src": "unsafe fn get_unchecked_mut(self, slice: *mut [T]) -> *mut T {\n        assert_unsafe_precondition!(\n            check_library_ub,\n            \"slice::get_unchecked_mut requires that the index is within the slice\",\n            (this: usize = self, len: usize = slice.len()) => this < len\n        );\n        // SAFETY: see comments for `get_unchecked` above.\n        unsafe { slice_get_unchecked(slice, self) }\n    }",
  "callees": [
    "258820287469578611817448591488600041899",
    "17421822894816687532325615181214565887",
    "1113032932815665948217565294476098756403",
    "41505289739977656509611396154325757795",
    "478753423337745817613297159272845606672",
    "1503429857823663474110713828637088629369",
    "123823675141141090274420728057997234226",
    "1504286091581735299715570781132246701377"
  ]
}
