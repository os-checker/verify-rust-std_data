{
  "file": "core/src/slice/index.rs",
  "name": "<ops::index_range::IndexRange as slice::index::SliceIndex<[mem::maybe_uninit::MaybeUninit<char>]>>::get_unchecked_mut",
  "hash": "643776580154816945711014088420858857492",
  "hash_direct": "1051375325492494880210735663396507080091",
  "src": "unsafe fn get_unchecked_mut(self, slice: *mut [T]) -> *mut [T] {\n        assert_unsafe_precondition!(\n            check_library_ub,\n            \"slice::get_unchecked_mut requires that the index is within the slice\",\n            (end: usize = self.end(), len: usize = slice.len()) => end <= len\n        );\n\n        // SAFETY: see comments for `get_unchecked` above.\n        unsafe { get_offset_len_mut_noubcheck(slice, self.start(), self.len()) }\n    }",
  "callees": [
    "258820287469578611817448591488600041899",
    "17421822894816687532325615181214565887",
    "884246074448727927914595282961940941192",
    "975615807404907599012293873143289411403",
    "27547235193633795771352944920978011050",
    "1113032932815665948217565294476098756403",
    "41505289739977656509611396154325757795",
    "478753423337745817613297159272845606672",
    "17885338024940159556008007307872397104",
    "73605271436615433592782990893848785911",
    "32193535572390591639577511843833454884",
    "98672616218528724113768882390038008401"
  ]
}
