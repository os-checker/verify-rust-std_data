{
  "file": "core/src/slice/cmp.rs",
  "name": "<i64 as slice::cmp::SliceContains>::slice_contains",
  "hash": "853873764108339998715148832323450404606",
  "hash_direct": "1475636798079732335814339674203800760907",
  "src": "fn slice_contains(&self, arr: &[$t]) -> bool {\n                    // Make our LANE_COUNT 4x the normal lane count (aiming for 128 bit vectors).\n                    // The compiler will nicely unroll it.\n                    const LANE_COUNT: usize = 4 * (128 / (size_of::<$t>() * 8));\n                    // SIMD\n                    let mut chunks = arr.chunks_exact(LANE_COUNT);\n                    for chunk in &mut chunks {\n                        if chunk.iter().fold(false, |acc, x| acc | (*x == *self)) {\n                            return true;\n                        }\n                    }\n                    // Scalar remainder\n                    return chunks.remainder().iter().any(|x| *x == *self);\n                }",
  "macro_backtrace": [
    {
      "callsite": "impl_slice_contains!(u16, u32, u64, i16, i32, i64, f32, f64, usize, isize, char)",
      "defsite": "macro_rules! impl_slice_contains {\n    ($($t:ty),*) => {\n        $(\n            impl SliceContains for $t {\n                #[inline]\n                fn slice_contains(&self, arr: &[$t]) -> bool {\n                    // Make our LANE_COUNT 4x the normal lane count (aiming for 128 bit vectors).\n                    // The compiler will nicely unroll it.\n                    const LANE_COUNT: usize = 4 * (128 / (size_of::<$t>() * 8));\n                    // SIMD\n                    let mut chunks = arr.chunks_exact(LANE_COUNT);\n                    for chunk in &mut chunks {\n                        if chunk.iter().fold(false, |acc, x| acc | (*x == *self)) {\n                            return true;\n                        }\n                    }\n                    // Scalar remainder\n                    return chunks.remainder().iter().any(|x| *x == *self);\n                }\n            }\n        )*\n    };\n}"
    }
  ],
  "callees": [
    "258820287469578611817448591488600041899",
    "588974892899239543415856878986124229421",
    "690438059002452523915046149102377829082",
    "17421822894816687532325615181214565887",
    "344205184641161321414779255303253264915",
    "27480086118489678191003877857780025576",
    "1529875730411415803517587657844377161231",
    "1293607388739574242111226698004271448354",
    "23815256893174302637797703719499456373",
    "47704708250653028710044748737554169683",
    "74417372440636343316225424270113426399",
    "67700227654085191106429673457623792324",
    "1182015270437117693710034979354745602205",
    "7294383037529148129694068087461345583",
    "97892229237199250718782565098232937194",
    "37868078735602925891573318122962819320",
    "1578703703635175719018067387082881800385",
    "125312877505429677902664359715729802479",
    "632379827537218859118037651046044448068",
    "1204668293620499224013336883119093261459",
    "5667765796385169624800112337147502292",
    "171593739300022194915526452191835401234",
    "1113032932815665948217565294476098756403",
    "41505289739977656509611396154325757795",
    "243931809744896974812513529918607549579",
    "1752989996936949203916036071159051010960",
    "478753423337745817613297159272845606672",
    "3658730781980743391697756456907208995",
    "176386771705132260856587306647620489942",
    "625849434625814717716494369484959093162",
    "1566168013061370513711054548557151263674",
    "8161291837423649642305263678029669375",
    "1214574077763705187516383491048990527345",
    "99240197464179824992859067321432013944",
    "601689626651229494214998586744948637227",
    "12701467911441684089470617471353343047",
    "14560721898568267631990576878055796531",
    "187482952606822645712460029589708661523",
    "126818845945534382313624863669169238336",
    "16730977548137824048911875704576283669",
    "116493993968203631779782501274936096641",
    "1262076319586358531712252901929338923022",
    "1415812637824419025617411133288449540795",
    "599120885609691624310534648287277436227",
    "151047629242057232943425166912898676867",
    "449637264080571459055009589071427003",
    "151427997269345294615205631033473950285",
    "46085804060150752363088444349042879706",
    "337967017188864588216644411916584241564",
    "447399253130752149514535466883067125424",
    "67107595776572277308228662616231432186",
    "863434042337576520413743515849989374855",
    "909066504283472687311211022489362656096",
    "113631040590481626245421048856174009375",
    "1805799030285775268310633464516686030076",
    "20627388938875235198707057769052350304",
    "839295055152999000218073005702306108163",
    "105324983876714714047280719938156802392",
    "69038386206572023512707758434359310124",
    "138124677087598606809810874103073662147",
    "1619025790968654987114079892125601715597",
    "1060185239778386177014259659617801186490",
    "3744871331174005989735414565288173595",
    "54529190965765624722584687888040122652",
    "32313626920890935805585545150481378867",
    "893281668687466449310165905053466224581",
    "121069008826513481769959924250516256994",
    "979648817444139278517106149778286975168",
    "782128681630981944411037954064815237032",
    "23513902208999324472870093124809341649",
    "128234595469711524101337852227011580187",
    "89237780427052340833537744367867940918",
    "1804796009257617618215788613371365641939",
    "1737046666080539081914974966237099365643",
    "621698472431332816417792581602959129152",
    "1703660345011483495218041991169194027213",
    "92658835324565758495130762072978604201",
    "606608081756831098117273329568996374994",
    "56448737519681294968960799914289695112",
    "2270854481895276807307011598962175177",
    "739520556846959085018120036998133255835",
    "154579918799348646172273891119983850679",
    "5533079644241704014802052529604371844",
    "101520258712339119345830936586852421312"
  ]
}
