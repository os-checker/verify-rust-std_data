{
  "file": "core/src/slice/iter.rs",
  "name": "<slice::iter::Split<'_, u8, str::IsAsciiWhitespace> as iter::traits::iterator::Iterator>::next",
  "hash": "68918934609521628187536793186784291332",
  "hash_direct": "1382470172607640917213687137824874716327",
  "src": "fn next(&mut self) -> Option<&'a [T]> {\n        if self.finished {\n            return None;\n        }\n\n        match self.v.iter().position(|x| (self.pred)(x)) {\n            None => self.finish(),\n            Some(idx) => {\n                let (left, right) =\n                    // SAFETY: if v.iter().position returns Some(idx), that\n                    // idx is definitely a valid index for v\n                    unsafe { (self.v.get_unchecked(..idx), self.v.get_unchecked(idx + 1..)) };\n                let ret = Some(left);\n                self.v = right;\n                ret\n            }\n        }\n    }",
  "callees": [
    "47323665595455568617290020941376774286",
    "11139495935450220752286966752445431093",
    "1831274993744714315116365579584160373615",
    "644939148407168060611876873249029508950",
    "111425599901702694743874629435682172347",
    "714811817540972740211524868124730226803",
    "1329845230409163288212548289525672875535",
    "47278574192031232971799194590021398469",
    "84909938954906103112758184730426842057",
    "16824420916691935049705640393259467449",
    "1712898201300478840215074793236064467963",
    "82152198621563519385273738632868570109",
    "841346702487865802717731804342903065853",
    "1182371843420022111010336901757313084440",
    "26064680123257945312537992217601395168",
    "1801932849287312231112662193894546046488",
    "844957821118050201712037424530049556280",
    "841904668883726495316837415609641023349",
    "1258931108755458209614962827106116332072",
    "53589810041120365110998933211304468616",
    "1243847030362955698517207199029174369810",
    "105125143701458073564296455695110349394",
    "25930241974724637292994171257021210872",
    "617554482545947003412104686554524783687",
    "14289085791843058303972699274315536239",
    "602553655434272852810568520159081802816",
    "703663108277374327010040438608357482834",
    "1100495660517602822510660091708953776518",
    "261114641164087560416314538374841383619",
    "180824515799235861855048294605620195261",
    "7256915149069428799370446001792848915",
    "781603672758780177711142029625885084089",
    "843102896095261732816452208300794916411",
    "169017152061146820209827866672499117723",
    "1365351597739011160412231277592213691479",
    "62964906474134410292844024784991518817",
    "591163883570913488917341250007887670228",
    "934375696446284627516563118665690549226",
    "151694591507088409946921766244030956793",
    "199204638009217392510037902431469110881",
    "145447226859878511083700582225257315850",
    "1302514623760732210917631482165556335973",
    "1028023859496283824714006082102994000183",
    "1375602339865304183616456573312626826122",
    "13445532662779670761228880372488293329",
    "1168250850099297564614674330731516573335",
    "511478505957911151817582639665615596786",
    "55508872929604675552866358771864539154",
    "56280834011826648107990160430231866711",
    "80443346785102280762133956070185451512",
    "792921104381110793315129124213771983777",
    "1713539753654745329215868145254478021527",
    "182534260348495718753381397354609581701",
    "139344262948751632904601250933998242154",
    "218661225975020204312656016119237201410",
    "736437061668508895514270568945449741919",
    "27923647172126753103299190047630517613",
    "113814366055626271438047374284421353461",
    "90175179397242369455372712796954544135",
    "478505109661826463711850093418602871650",
    "1137271765924114987514947403158445640283",
    "393974833682574441515290398983271504453",
    "399232661239117480517401994520839366833"
  ]
}
