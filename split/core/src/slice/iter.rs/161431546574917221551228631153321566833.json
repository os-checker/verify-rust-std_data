{
  "file": "core/src/slice/iter.rs",
  "name": "<slice::iter::Split<'_, u8, str::IsAsciiWhitespace> as iter::traits::iterator::Iterator>::next",
  "hash": "161431546574917221551228631153321566833",
  "hash_direct": "1382470172607640917213687137824874716327",
  "src": "fn next(&mut self) -> Option<&'a [T]> {\n        if self.finished {\n            return None;\n        }\n\n        match self.v.iter().position(|x| (self.pred)(x)) {\n            None => self.finish(),\n            Some(idx) => {\n                let (left, right) =\n                    // SAFETY: if v.iter().position returns Some(idx), that\n                    // idx is definitely a valid index for v\n                    unsafe { (self.v.get_unchecked(..idx), self.v.get_unchecked(idx + 1..)) };\n                let ret = Some(left);\n                self.v = right;\n                ret\n            }\n        }\n    }",
  "callees": [
    "258820287469578611817448591488600041899",
    "6962362284417680556415378392413733050",
    "1260153291403255879717294360443817562967",
    "50522099574342032286192511063567845144",
    "588974892899239543415856878986124229421",
    "690438059002452523915046149102377829082",
    "17421822894816687532325615181214565887",
    "1529875730411415803517587657844377161231",
    "1293607388739574242111226698004271448354",
    "23815256893174302637797703719499456373",
    "121097281700569241807917519510076722724",
    "840557237266216613515959608352403941460",
    "97892229237199250718782565098232937194",
    "125312877505429677902664359715729802479",
    "632379827537218859118037651046044448068",
    "1204668293620499224013336883119093261459",
    "171593739300022194915526452191835401234",
    "1113032932815665948217565294476098756403",
    "41505289739977656509611396154325757795",
    "243931809744896974812513529918607549579",
    "1752989996936949203916036071159051010960",
    "478753423337745817613297159272845606672",
    "3658730781980743391697756456907208995",
    "176386771705132260856587306647620489942",
    "1214574077763705187516383491048990527345",
    "157452307909752828034879955455996353017",
    "187482952606822645712460029589708661523",
    "126818845945534382313624863669169238336",
    "144119928408074986676617008060073758280",
    "100566549119408744214400768677206684395",
    "180722218497893737283051854392225352438",
    "136250958068228316938199731614362970959",
    "139997011880036619526085207717010799176",
    "449637264080571459055009589071427003",
    "58480844886996188714196265131261175939",
    "671334365265236941113753063318744059957",
    "1762126293480126793916319187708925702531",
    "115305965424151250157684815253829770404",
    "613513255856977139911489735802844904928",
    "322749754952635112812467217236515710998",
    "97310642151613347726349452651452877766",
    "103695068283875105018623992302427237269",
    "53569486981529370344752868158650318763",
    "33020214437710035965402411197660679021",
    "3297309995462571210361513208440932689",
    "87610347679382204374849514063484826969",
    "171204665790647804337468407324534125555",
    "122023559873890187856213083182996998439",
    "1574076206413902276617103312132801420117",
    "25913175156932332726691769328117705716",
    "36063339571794410663821935619899876968",
    "95842351741559959003916650465478545869",
    "756154173690443859818404881616867249436",
    "115295973871908558904895287041268452077",
    "867078616751225080417909096098149169846",
    "1059973443883475582910935310547956734596",
    "172965107350741823789971049511714888457",
    "87977286206191110206643684053945734595",
    "36990817497430174858508344623774643994",
    "621698472431332816417792581602959129152",
    "92658835324565758495130762072978604201",
    "606608081756831098117273329568996374994",
    "739520556846959085018120036998133255835"
  ]
}
