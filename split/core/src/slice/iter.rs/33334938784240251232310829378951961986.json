{
  "file": "core/src/slice/iter.rs",
  "name": "<slice::iter::Iter<'_, (char, u8)> as ub_checks::Invariant>::is_safe",
  "hash": "33334938784240251232310829378951961986",
  "hash_direct": "1285881470867366789711871432538708238901",
  "src": "fn is_safe(&self) -> bool {\n        let ty_size = crate::mem::size_of::<T>();\n        // Use `abs_diff` since `end_or_len` may be smaller than `ptr` if `T` is a ZST.\n        let distance = self.ptr.addr().get().abs_diff(self.end_or_len as usize);\n        if ty_size == 0 || distance == 0 {\n            self.ptr.is_aligned()\n        } else {\n            let slice_ptr: *const [T] =\n                crate::ptr::from_raw_parts(self.ptr.as_ptr(), distance / ty_size);\n            crate::ub_checks::same_allocation(self.ptr.as_ptr(), self.end_or_len)\n                && self.ptr.addr().get() <= self.end_or_len as usize\n                && distance % ty_size == 0\n                && crate::ub_checks::can_dereference(slice_ptr)\n        }\n    }",
  "callees": [
    "938248124271107744012249479729763505168",
    "80989463918046823203044749903697808714",
    "1295499066349112484912490938496969975321",
    "808690604947597133713899618615583714737",
    "108393381985250317406898676759665844160",
    "177504877725561479516307868202288769850",
    "30045367355715999169594564136086036541",
    "181086649581165031178171591518175447550",
    "67202008249250073035419006078308699005",
    "289671106212139821911541211630919692796",
    "166856188763976225565795950411525405630",
    "1769635765532257451911986051852889773882",
    "247863734272995071816029882222598095082",
    "1781059024662626888014534669231413671023",
    "1534626612498321684714396064035226642407",
    "175059148501234920615695024018406584683",
    "896888444305093759317012834705524625919",
    "1748644045050747726610202280959142183796",
    "578852153529431154313268128445192934707",
    "258820287469578611817448591488600041899",
    "17421822894816687532325615181214565887",
    "27480086118489678191003877857780025576",
    "23815256893174302637797703719499456373",
    "7602438606779048989898402776595262926",
    "17360208289351134406940465553705335284",
    "1749362715435459353511933873995340031229",
    "152957573567666139458051071799244237150",
    "1440311084109427911411767598402928151278",
    "110553296291267690486764538235023897629",
    "1095980910905451195915776472035072742717",
    "462846610869204213514639900340099405177",
    "34410515695185066949979771014252260096",
    "1676806814539779643518083197252466559589",
    "137727233253125029217674386074482569004",
    "83296026332579416941842209678709993328",
    "37868078735602925891573318122962819320",
    "1578703703635175719018067387082881800385",
    "1113032932815665948217565294476098756403",
    "41505289739977656509611396154325757795",
    "1752989996936949203916036071159051010960",
    "478753423337745817613297159272845606672",
    "878421830618701031513655699169137715274",
    "187482952606822645712460029589708661523",
    "126818845945534382313624863669169238336",
    "54897316287137490095531547770638573442",
    "198569201550149961010120249127509736371",
    "716378168436744459215062807310114211185",
    "12004671557839587307613408108265333937",
    "42151442965898011796151442589833443627",
    "65147809718878398548076729766909886410",
    "416840175099677302012350366025939820227",
    "1388340972535146049714170632111627477288",
    "887235042902537721816254572592014930578",
    "739520556846959085018120036998133255835"
  ]
}
