{
  "file": "core/src/bstr/traits.rs",
  "name": "bstr::traits::<impl slice::index::SliceIndex<bstr::ByteStr> for usize>::get_unchecked",
  "hash": "11277005633647688456250171035359996516",
  "hash_direct": "32461781184057837821410824949697371595",
  "src": "unsafe fn get_unchecked(self, slice: *const ByteStr) -> *const Self::Output {\n        // SAFETY: the caller has to uphold the safety contract for `get_unchecked`.\n        unsafe { self.get_unchecked(slice as *const [u8]) }\n    }",
  "callees": [
    "258820287469578611817448591488600041899",
    "17421822894816687532325615181214565887",
    "23815256893174302637797703719499456373",
    "1113032932815665948217565294476098756403",
    "41505289739977656509611396154325757795",
    "478753423337745817613297159272845606672",
    "157452307909752828034879955455996353017",
    "100566549119408744214400768677206684395",
    "138902882366249903201239198490399945031",
    "154911443990380340341563367924870465980",
    "739520556846959085018120036998133255835"
  ]
}
