{
  "file": "core/src/bstr/traits.rs",
  "name": "bstr::traits::<impl slice::index::SliceIndex<bstr::ByteStr> for usize>::get_unchecked_mut",
  "hash": "42543338223353998168839805292329873929",
  "hash_direct": "5905487686754030943980200467761033807",
  "src": "unsafe fn get_unchecked_mut(self, slice: *mut ByteStr) -> *mut Self::Output {\n        // SAFETY: the caller has to uphold the safety contract for `get_unchecked_mut`.\n        unsafe { self.get_unchecked_mut(slice as *mut [u8]) }\n    }",
  "callees": [
    "258820287469578611817448591488600041899",
    "17421822894816687532325615181214565887",
    "1113032932815665948217565294476098756403",
    "41505289739977656509611396154325757795",
    "478753423337745817613297159272845606672",
    "100566549119408744214400768677206684395",
    "917279401074956565588613541540900389",
    "320976213924444963111287108204711016382",
    "1504286091581735299715570781132246701377"
  ]
}
