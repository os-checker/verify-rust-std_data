{
  "file": "core/src/bstr/traits.rs",
  "name": "bstr::traits::<impl slice::index::SliceIndex<bstr::ByteStr> for usize>::get_unchecked_mut",
  "hash": "290177356683681944217807231889841263414",
  "hash_direct": "5905487686754030943980200467761033807",
  "src": "unsafe fn get_unchecked_mut(self, slice: *mut ByteStr) -> *mut Self::Output {\n        // SAFETY: the caller has to uphold the safety contract for `get_unchecked_mut`.\n        unsafe { self.get_unchecked_mut(slice as *mut [u8]) }\n    }",
  "callees": [
    "47323665595455568617290020941376774286",
    "1329845230409163288212548289525672875535",
    "841904668883726495316837415609641023349",
    "1258931108755458209614962827106116332072",
    "105125143701458073564296455695110349394",
    "180824515799235861855048294605620195261",
    "176175348416071052808448244681033673599",
    "7523449092536236033187995458452368550",
    "331526003538137488213486206162083846398"
  ]
}
