{
  "file": "core/src/bstr/traits.rs",
  "name": "bstr::traits::<impl slice::index::SliceIndex<bstr::ByteStr> for ops::range::RangeInclusive<usize>>::get",
  "hash": "174330156840466142417138780216950434963",
  "hash_direct": "36464647585397782132748115247618179026",
  "src": "fn get(self, slice: &ByteStr) -> Option<&Self::Output> {\n                self.get(slice.as_bytes()).map(ByteStr::from_bytes)\n            }",
  "macro_backtrace": [
    {
      "callsite": "impl_slice_index!(ops::RangeInclusive<usize>)",
      "defsite": "macro_rules! impl_slice_index {\n    ($index:ty) => {\n        #[unstable(feature = \"bstr\", issue = \"134915\")]\n        unsafe impl SliceIndex<ByteStr> for $index {\n            type Output = ByteStr;\n            #[inline]\n            fn get(self, slice: &ByteStr) -> Option<&Self::Output> {\n                self.get(slice.as_bytes()).map(ByteStr::from_bytes)\n            }\n            #[inline]\n            fn get_mut(self, slice: &mut ByteStr) -> Option<&mut Self::Output> {\n                self.get_mut(slice.as_bytes_mut()).map(ByteStr::from_bytes_mut)\n            }\n            #[inline]\n            unsafe fn get_unchecked(self, slice: *const ByteStr) -> *const Self::Output {\n                // SAFETY: the caller has to uphold the safety contract for `get_unchecked`.\n                unsafe { self.get_unchecked(slice as *const [u8]) as *const ByteStr }\n            }\n            #[inline]\n            unsafe fn get_unchecked_mut(self, slice: *mut ByteStr) -> *mut Self::Output {\n                // SAFETY: the caller has to uphold the safety contract for `get_unchecked_mut`.\n                unsafe { self.get_unchecked_mut(slice as *mut [u8]) as *mut ByteStr }\n            }\n            #[inline]\n            fn index(self, slice: &ByteStr) -> &Self::Output {\n                ByteStr::from_bytes(self.index(slice.as_bytes()))\n            }\n            #[inline]\n            fn index_mut(self, slice: &mut ByteStr) -> &mut Self::Output {\n                ByteStr::from_bytes_mut(self.index_mut(slice.as_bytes_mut()))\n            }\n        }\n    };\n}"
    }
  ],
  "callees": [
    "109876452559006158611413615147675014073",
    "158580378555991015477562488294933864913",
    "290360310864386898714327273451929980463",
    "124853843043214582583541683999989837126",
    "108822871448754951514176066467098963537",
    "99389162391440909506066512703736887266",
    "175469696083468572601362001082877617893",
    "22011892924825229485026849335216069237",
    "1309835973007280609915569531429584049128",
    "89598827755940228645556153357905992385",
    "56280834011826648107990160430231866711"
  ]
}
