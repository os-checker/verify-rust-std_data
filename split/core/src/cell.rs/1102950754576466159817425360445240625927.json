{
  "file": "core/src/cell.rs",
  "name": "cell::UnsafeCell::<u16>::get",
  "hash": "1102950754576466159817425360445240625927",
  "hash_direct": "370625722725601107013088908825024259584",
  "src": "pub const fn get(&self) -> *mut T {\n        // We can just cast the pointer from `UnsafeCell<T>` to `T` because of\n        // #[repr(transparent)]. This exploits std's special status, there is\n        // no guarantee for user code that this will work in future versions of the compiler!\n        self as *const UnsafeCell<T> as *const T as *mut T\n    }"
}
