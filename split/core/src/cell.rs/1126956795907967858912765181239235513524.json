{
  "file": "core/src/cell.rs",
  "name": "cell::UnsafeCell::<isize>::get",
  "hash": "1126956795907967858912765181239235513524",
  "hash_direct": "1291335533652146973110481739231320816135",
  "src": "pub const fn get(&self) -> *mut T {\n        // We can just cast the pointer from `UnsafeCell<T>` to `T` because of\n        // #[repr(transparent)]. This exploits std's special status, there is\n        // no guarantee for user code that this will work in future versions of the compiler!\n        self as *const UnsafeCell<T> as *const T as *mut T\n    }"
}
