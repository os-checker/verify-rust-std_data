{
  "file": "core/src/cell.rs",
  "name": "core::cell::UnsafeCell::<usize>::get",
  "hash": "158747230981247343143494172806960768280",
  "hash_direct": "1549586707986699357016334027620347595127",
  "src": "pub const fn get(&self) -> *mut T {\n        // We can just cast the pointer from `UnsafeCell<T>` to `T` because of\n        // #[repr(transparent)]. This exploits std's special status, there is\n        // no guarantee for user code that this will work in future versions of the compiler!\n        self as *const UnsafeCell<T> as *const T as *mut T\n    }"
}
