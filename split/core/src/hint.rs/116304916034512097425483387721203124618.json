{
  "file": "core/src/hint.rs",
  "name": "hint::select_unpredictable::<*mut f64>",
  "hash": "116304916034512097425483387721203124618",
  "hash_direct": "1074665285928391535814203584094525080794",
  "src": "pub fn select_unpredictable<T>(condition: bool, true_val: T, false_val: T) -> T {\n    // FIXME(https://github.com/rust-lang/unsafe-code-guidelines/issues/245):\n    // Change this to use ManuallyDrop instead.\n    let mut true_val = MaybeUninit::new(true_val);\n    let mut false_val = MaybeUninit::new(false_val);\n\n    struct DropOnPanic<T> {\n        // Invariant: valid pointer and points to an initialized value that is not further used,\n        // i.e. it can be dropped by this guard.\n        inner: *mut T,\n    }\n\n    impl<T> Drop for DropOnPanic<T> {\n        fn drop(&mut self) {\n            // SAFETY: Must be guaranteed on construction of local type `DropOnPanic`.\n            unsafe { self.inner.drop_in_place() }\n        }\n    }\n\n    let true_ptr = true_val.as_mut_ptr();\n    let false_ptr = false_val.as_mut_ptr();\n\n    // SAFETY: The value that is not selected is dropped, and the selected one\n    // is returned. This is necessary because the intrinsic doesn't drop the\n    // value that is  not selected.\n    unsafe {\n        // Extract the selected value first, ensure it is dropped as well if dropping the unselected\n        // value panics. We construct a temporary by-pointer guard around the selected value while\n        // dropping the unselected value. Arguments overlap here, so we can not use mutable\n        // reference for these arguments.\n        let guard = crate::intrinsics::select_unpredictable(condition, true_ptr, false_ptr);\n        let drop = crate::intrinsics::select_unpredictable(condition, false_ptr, true_ptr);\n\n        // SAFETY: both pointers are well-aligned and point to initialized values inside a\n        // `MaybeUninit` each. In both possible values for `condition` the pointer `guard` and\n        // `drop` do not alias (even though the two argument pairs we have selected from did alias\n        // each other).\n        let guard = DropOnPanic { inner: guard };\n        drop.drop_in_place();\n        crate::mem::forget(guard);\n\n        // Note that it is important to use the values here. Reading from the pointer we got makes\n        // LLVM forget the !unpredictable annotation sometimes (in tests, integer sized values in\n        // particular seemed to confuse it, also observed in llvm/llvm-project #82340).\n        crate::intrinsics::select_unpredictable(condition, true_val, false_val).assume_init()\n    }\n}",
  "callees": [
    "258820287469578611817448591488600041899",
    "1604627830876215615115087685615869343494",
    "453211650212179521216982411325342330736",
    "17421822894816687532325615181214565887",
    "27480086118489678191003877857780025576",
    "23815256893174302637797703719499456373",
    "1639190511405576016712069487289226138136",
    "1716443215232136769817525172431023982267",
    "561630264488052752814874265660932536905",
    "1781690009562880789613805605064966989",
    "65529338401743991971348499925853541721",
    "288019430802205018595144664109986139",
    "266080518554646339012946240505549165565",
    "55088709743009439210713825457170869827",
    "137368381448604167703416046205455599816",
    "156396365605833484958181337486344432065",
    "1113032932815665948217565294476098756403",
    "41505289739977656509611396154325757795",
    "1752989996936949203916036071159051010960",
    "478753423337745817613297159272845606672",
    "3658730781980743391697756456907208995",
    "176386771705132260856587306647620489942",
    "24720139230274117689328858551755358968",
    "1566168013061370513711054548557151263674",
    "1091386818374001927410149984079160722279",
    "97594018308861176561694743857133180298",
    "187482952606822645712460029589708661523",
    "126818845945534382313624863669169238336",
    "88584634134516743865765855768986953291",
    "178315078884488900363857138358026485986",
    "101626236615345659495105267688567427260",
    "68082955985422682445392449306428223181",
    "175501891140104149459627757130570617075",
    "74111286315405054421392461884745781298",
    "739520556846959085018120036998133255835",
    "71112245793085408723525187754979718597",
    "1217330957027791981411010835694243116934"
  ]
}
