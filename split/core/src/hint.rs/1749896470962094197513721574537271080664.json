{
  "file": "core/src/hint.rs",
  "name": "hint::select_unpredictable::<*mut f32>",
  "hash": "1749896470962094197513721574537271080664",
  "hash_direct": "15381636786536172463750595742108381468",
  "src": "pub fn select_unpredictable<T>(condition: bool, true_val: T, false_val: T) -> T {\n    // FIXME(https://github.com/rust-lang/unsafe-code-guidelines/issues/245):\n    // Change this to use ManuallyDrop instead.\n    let mut true_val = MaybeUninit::new(true_val);\n    let mut false_val = MaybeUninit::new(false_val);\n\n    struct DropOnPanic<T> {\n        // Invariant: valid pointer and points to an initialized value that is not further used,\n        // i.e. it can be dropped by this guard.\n        inner: *mut T,\n    }\n\n    impl<T> Drop for DropOnPanic<T> {\n        fn drop(&mut self) {\n            // SAFETY: Must be guaranteed on construction of local type `DropOnPanic`.\n            unsafe { self.inner.drop_in_place() }\n        }\n    }\n\n    let true_ptr = true_val.as_mut_ptr();\n    let false_ptr = false_val.as_mut_ptr();\n\n    // SAFETY: The value that is not selected is dropped, and the selected one\n    // is returned. This is necessary because the intrinsic doesn't drop the\n    // value that is  not selected.\n    unsafe {\n        // Extract the selected value first, ensure it is dropped as well if dropping the unselected\n        // value panics. We construct a temporary by-pointer guard around the selected value while\n        // dropping the unselected value. Arguments overlap here, so we can not use mutable\n        // reference for these arguments.\n        let guard = crate::intrinsics::select_unpredictable(condition, true_ptr, false_ptr);\n        let drop = crate::intrinsics::select_unpredictable(condition, false_ptr, true_ptr);\n\n        // SAFETY: both pointers are well-aligned and point to initialized values inside a\n        // `MaybeUninit` each. In both possible values for `condition` the pointer `guard` and\n        // `drop` do not alias (even though the two argument pairs we have selected from did alias\n        // each other).\n        let guard = DropOnPanic { inner: guard };\n        drop.drop_in_place();\n        crate::mem::forget(guard);\n\n        // Note that it is important to use the values here. Reading from the pointer we got makes\n        // LLVM forget the !unpredictable annotation sometimes (in tests, integer sized values in\n        // particular seemed to confuse it, also observed in llvm/llvm-project #82340).\n        crate::intrinsics::select_unpredictable(condition, true_val, false_val).assume_init()\n    }\n}",
  "callees": [
    "258820287469578611817448591488600041899",
    "95145360150927316508712636882109290953",
    "195906651498126693711873346609041151231",
    "17421822894816687532325615181214565887",
    "27480086118489678191003877857780025576",
    "23815256893174302637797703719499456373",
    "1639190511405576016712069487289226138136",
    "1181047503821259640715862953390532475195",
    "516949490060059682910749834855084636853",
    "1203941343652735381418091052915140268463",
    "1007486007083768665013590249423603789078",
    "105358205211415583910007752475065903432",
    "171478660599761938823798238921074606660",
    "9077079987565736857968315209525048774",
    "137368381448604167703416046205455599816",
    "156396365605833484958181337486344432065",
    "1113032932815665948217565294476098756403",
    "41505289739977656509611396154325757795",
    "1752989996936949203916036071159051010960",
    "478753423337745817613297159272845606672",
    "3658730781980743391697756456907208995",
    "176386771705132260856587306647620489942",
    "24720139230274117689328858551755358968",
    "1566168013061370513711054548557151263674",
    "126299841668548339956842962787614012875",
    "196947132396865061710647143094248738344",
    "187482952606822645712460029589708661523",
    "126818845945534382313624863669169238336",
    "45483721650608319215891144303956371443",
    "50434367259982919184243988459294877425",
    "1814024728092996720912341531616753304217",
    "1836821856671223999714514043280971284941",
    "1818408236388629076212678547730061000564",
    "74111286315405054421392461884745781298",
    "739520556846959085018120036998133255835",
    "71112245793085408723525187754979718597",
    "1217330957027791981411010835694243116934"
  ]
}
