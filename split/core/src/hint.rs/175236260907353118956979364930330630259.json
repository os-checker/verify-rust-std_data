{
  "file": "core/src/hint.rs",
  "name": "hint::spin_loop",
  "hash": "175236260907353118956979364930330630259",
  "hash_direct": "35410629049956314810075712235028985783",
  "src": "pub fn spin_loop() {\n    #[cfg(target_arch = \"x86\")]\n    {\n        // SAFETY: the `cfg` attr ensures that we only execute this on x86 targets.\n        unsafe { crate::arch::x86::_mm_pause() };\n    }\n\n    #[cfg(target_arch = \"x86_64\")]\n    {\n        // SAFETY: the `cfg` attr ensures that we only execute this on x86_64 targets.\n        unsafe { crate::arch::x86_64::_mm_pause() };\n    }\n\n    #[cfg(target_arch = \"riscv32\")]\n    {\n        crate::arch::riscv32::pause();\n    }\n\n    #[cfg(target_arch = \"riscv64\")]\n    {\n        crate::arch::riscv64::pause();\n    }\n\n    #[cfg(any(target_arch = \"aarch64\", target_arch = \"arm64ec\"))]\n    {\n        // SAFETY: the `cfg` attr ensures that we only execute this on aarch64 targets.\n        unsafe { crate::arch::aarch64::__isb(crate::arch::aarch64::SY) };\n    }\n\n    #[cfg(all(target_arch = \"arm\", target_feature = \"v6\"))]\n    {\n        // SAFETY: the `cfg` attr ensures that we only execute this on arm targets\n        // with support for the v6 feature.\n        unsafe { crate::arch::arm::__yield() };\n    }\n}",
  "callees": [
    "13846925087180981303035990539932075806",
    "1106767033740742078512949697947954141369",
    "1446081966469926424712809056754751983114"
  ]
}
