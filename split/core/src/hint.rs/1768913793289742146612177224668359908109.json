{
  "file": "core/src/hint.rs",
  "name": "core::hint::select_unpredictable::<usize>",
  "hash": "1768913793289742146612177224668359908109",
  "hash_direct": "187277414979410328921321333824280823",
  "src": "pub fn select_unpredictable<T>(condition: bool, true_val: T, false_val: T) -> T {\n    // FIXME(https://github.com/rust-lang/unsafe-code-guidelines/issues/245):\n    // Change this to use ManuallyDrop instead.\n    let mut true_val = MaybeUninit::new(true_val);\n    let mut false_val = MaybeUninit::new(false_val);\n\n    struct DropOnPanic<T> {\n        // Invariant: valid pointer and points to an initialized value that is not further used,\n        // i.e. it can be dropped by this guard.\n        inner: *mut T,\n    }\n\n    impl<T> Drop for DropOnPanic<T> {\n        fn drop(&mut self) {\n            // SAFETY: Must be guaranteed on construction of local type `DropOnPanic`.\n            unsafe { self.inner.drop_in_place() }\n        }\n    }\n\n    let true_ptr = true_val.as_mut_ptr();\n    let false_ptr = false_val.as_mut_ptr();\n\n    // SAFETY: The value that is not selected is dropped, and the selected one\n    // is returned. This is necessary because the intrinsic doesn't drop the\n    // value that is  not selected.\n    unsafe {\n        // Extract the selected value first, ensure it is dropped as well if dropping the unselected\n        // value panics. We construct a temporary by-pointer guard around the selected value while\n        // dropping the unselected value. Arguments overlap here, so we can not use mutable\n        // reference for these arguments.\n        let guard = crate::intrinsics::select_unpredictable(condition, true_ptr, false_ptr);\n        let drop = crate::intrinsics::select_unpredictable(condition, false_ptr, true_ptr);\n\n        // SAFETY: both pointers are well-aligned and point to initialized values inside a\n        // `MaybeUninit` each. In both possible values for `condition` the pointer `guard` and\n        // `drop` do not alias (even though the two argument pairs we have selected from did alias\n        // each other).\n        let guard = DropOnPanic { inner: guard };\n        drop.drop_in_place();\n        crate::mem::forget(guard);\n\n        // Note that it is important to use the values here. Reading from the pointer we got makes\n        // LLVM forget the !unpredictable annotation sometimes (in tests, integer sized values in\n        // particular seemed to confuse it, also observed in llvm/llvm-project #82340).\n        crate::intrinsics::select_unpredictable(condition, true_val, false_val).assume_init()\n    }\n}",
  "callees": [
    "12281449246394340237926324936375242532",
    "94205340984548205403161824858415082908",
    "1263945855766849354510334944065532128780",
    "181267529910573756716102767087485333561",
    "79817071675776388295206212610749591701",
    "1824545319189397521315695847785602896178",
    "141051090481435808783715316343782561731",
    "11976266579713756835272321175156879554",
    "700121798421844638112954362982616513440",
    "3426408591059629602792909874372843773",
    "114741638161998136903549224640438971859",
    "139483837448589163674758035261080447269",
    "439022777647632696517945103495108037392",
    "4076984766143030440815189235784749564",
    "51372523453683089364244340980133861262",
    "169382045895387326079929663684999712557",
    "986792852990965178117440249555081278778",
    "90818112465881722349174357944217011292",
    "146612017564224181584303574960223420416",
    "63085389524472853348886374617170044294",
    "175623961004431005849298709567805707658",
    "33067340742295788584221598515845050786",
    "139907086782363519768211215911218405340",
    "181953690662554297912505335505865467275",
    "10435104334233940885347855730897394048",
    "1793681111599931821712213635413918902143",
    "55408212128999564608147158566316072753",
    "453447829425605175013828912841818007745",
    "401184682645594039513185690909655823909",
    "1102707990469809545812015399289882219301",
    "19058764743854314419670517218317949449",
    "1321571500445129312813707138744963876450",
    "35090294169429653114888470028367354460",
    "34168428747107921917921965588564672058",
    "112989397975222255532054380452996322405",
    "56586361413793673417653620039252553370",
    "192903257417349624310389255189038584608"
  ]
}
