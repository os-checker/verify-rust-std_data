{
  "file": "core/src/intrinsics/fallback.rs",
  "name": "intrinsics::fallback::wide_mul_u128",
  "hash": "2730413463489077682871299968750410950",
  "hash_direct": "69809437106272095619871981899084126892",
  "src": "const fn wide_mul_u128(a: u128, b: u128) -> (u128, u128) {\n    #[inline]\n    const fn to_low_high(x: u128) -> [u128; 2] {\n        const MASK: u128 = u64::MAX as _;\n        [x & MASK, x >> 64]\n    }\n    #[inline]\n    const fn from_low_high(x: [u128; 2]) -> u128 {\n        x[0] | (x[1] << 64)\n    }\n    #[inline]\n    const fn scalar_mul(low_high: [u128; 2], k: u128) -> [u128; 3] {\n        let [x, c] = to_low_high(k * low_high[0]);\n        let [y, z] = to_low_high(k * low_high[1] + c);\n        [x, y, z]\n    }\n    let a = to_low_high(a);\n    let b = to_low_high(b);\n    let low = scalar_mul(a, b[0]);\n    let high = scalar_mul(a, b[1]);\n    let r0 = low[0];\n    let [r1, c] = to_low_high(low[1] + high[0]);\n    let [r2, c] = to_low_high(low[2] + high[1] + c);\n    let r3 = high[2] + c;\n    (from_low_high([r0, r1]), from_low_high([r2, r3]))\n}",
  "callees": [
    "149177879054194305854706121912784527721",
    "1401790216334955327214351023031146810699",
    "169564152499839983839646051342040887309"
  ]
}
