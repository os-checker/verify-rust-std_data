{
  "file": "core/src/intrinsics/mod.rs",
  "name": "<intrinsics::verify::struct_mod::generated_struct as kani::Arbitrary>::any",
  "hash": "455047021176107795318328272754975027440",
  "hash_direct": "480604464821403543012366516862874425434",
  "src": "kani::Arbitrary",
  "macro_backtrace": [
    {
      "callsite": "kani::Arbitrary",
      "defsite": "#[proc_macro_error]"
    },
    {
      "callsite": "gen_compound_harnesses!(struct_mod, u8_struct)",
      "defsite": "macro_rules! gen_compound_harnesses {\n        ($mod_name:ident, $base_type:ty) => {\n            mod $mod_name {\n                use super::*;\n\n                #[cfg_attr(kani, derive(kani::Arbitrary))]\n                #[derive(Debug, PartialEq, Clone, Copy)]\n                #[repr(packed)]\n                struct generated_struct {\n                    f1: $base_type,\n                    f2: $base_type,\n                }\n\n                //transmute harnesses\n                transmute_two_ways!(\n                    transmute_2ways_struct_to_arr,\n                    generated_struct,\n                    [$base_type; 2]\n                );\n                transmute_two_ways!(\n                    transmute_2ways_struct_to_tuple,\n                    generated_struct,\n                    ($base_type, $base_type)\n                );\n                transmute_two_ways!(\n                    transmute_2ways_arr_to_struct,\n                    [$base_type; 2],\n                    generated_struct\n                );\n                transmute_two_ways!(\n                    transmute_2ways_arr_to_tuple,\n                    [$base_type; 2],\n                    ($base_type, $base_type)\n                );\n                transmute_two_ways!(\n                    transmute_2ways_tuple_to_struct,\n                    ($base_type, $base_type),\n                    generated_struct\n                );\n                transmute_two_ways!(\n                    transmute_2ways_tuple_to_arr,\n                    ($base_type, $base_type),\n                    [$base_type; 2]\n                );\n                //transmute_unchecked harnesses\n                transmute_unchecked_two_ways!(\n                    transmute_unchecked_2ways_struct_to_arr,\n                    generated_struct,\n                    [$base_type; 2]\n                );\n                transmute_unchecked_two_ways!(\n                    transmute_unchecked_2ways_struct_to_tuple,\n                    generated_struct,\n                    ($base_type, $base_type)\n                );\n                transmute_unchecked_two_ways!(\n                    transmute_unchecked_2ways_arr_to_struct,\n                    [$base_type; 2],\n                    generated_struct\n                );\n                transmute_unchecked_two_ways!(\n                    transmute_unchecked_2ways_arr_to_tuple,\n                    [$base_type; 2],\n                    ($base_type, $base_type)\n                );\n                transmute_unchecked_two_ways!(\n                    transmute_unchecked_2ways_tuple_to_struct,\n                    ($base_type, $base_type),\n                    generated_struct\n                );\n                transmute_unchecked_two_ways!(\n                    transmute_unchecked_2ways_tuple_to_arr,\n                    ($base_type, $base_type),\n                    [$base_type; 2]\n                );\n            }\n        };\n    }"
    }
  ],
  "callees": [
    "175920677112080751315464247289376690681",
    "150213701733516426933095994161676057410",
    "42938380487287233808576660475073668669",
    "223423045988591996014060300689406774665",
    "129384448114184712212615089461891361189",
    "134563002825040056909315119755976987940",
    "1507674788918709364614100167306765986786"
  ]
}
