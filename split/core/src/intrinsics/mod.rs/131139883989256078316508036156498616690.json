{
  "file": "core/src/intrinsics/mod.rs",
  "name": "cell::panic_already_borrowed::do_panic::runtime",
  "hash": "131139883989256078316508036156498616690",
  "hash_direct": "108053404955837298717205844690823440674",
  "src": "fn runtime$(<$($binders)*>)?($($arg: $ty),*) $( -> $ret )? {\n            $runtime\n        }",
  "macro_backtrace": [
    {
      "callsite": "$crate::intrinsics::const_eval_select!(\n                @capture { $($arg: $ty = $arg),* } -> !:\n                #[noinline]\n                if const #[track_caller] #[inline] { // Inline this, to prevent codegen\n                    $crate::panic!($const_msg)\n                } else #[track_caller] { // Do not inline this, it makes perf worse\n                    $crate::panic!($runtime_msg)\n                }\n            )",
      "defsite": "pub(crate) macro const_eval_select {\n    (\n        @capture$([$($binders:tt)*])? { $($arg:ident : $ty:ty = $val:expr),* $(,)? } $( -> $ret:ty )? :\n        if const\n            $(#[$compiletime_attr:meta])* $compiletime:block\n        else\n            $(#[$runtime_attr:meta])* $runtime:block\n    ) => {\n        // Use the `noinline` arm, after adding explicit `inline` attributes\n        $crate::intrinsics::const_eval_select!(\n            @capture$([$($binders)*])? { $($arg : $ty = $val),* } $(-> $ret)? :\n            #[noinline]\n            if const\n                #[inline] // prevent codegen on this function\n                $(#[$compiletime_attr])*\n                $compiletime\n            else\n                #[inline] // avoid the overhead of an extra fn call\n                $(#[$runtime_attr])*\n                $runtime\n        )\n    },\n    // With a leading #[noinline], we don't add inline attributes\n    (\n        @capture$([$($binders:tt)*])? { $($arg:ident : $ty:ty = $val:expr),* $(,)? } $( -> $ret:ty )? :\n        #[noinline]\n        if const\n            $(#[$compiletime_attr:meta])* $compiletime:block\n        else\n            $(#[$runtime_attr:meta])* $runtime:block\n    ) => {{\n        $(#[$runtime_attr])*\n        fn runtime$(<$($binders)*>)?($($arg: $ty),*) $( -> $ret )? {\n            $runtime\n        }\n\n        $(#[$compiletime_attr])*\n        const fn compiletime$(<$($binders)*>)?($($arg: $ty),*) $( -> $ret )? {\n            // Don't warn if one of the arguments is unused.\n            $(let _ = $arg;)*\n\n            $compiletime\n        }\n\n        const_eval_select(($($val,)*), compiletime, runtime)\n    }},\n    // We support leaving away the `val` expressions for *all* arguments\n    // (but not for *some* arguments, that's too tricky).\n    (\n        @capture$([$($binders:tt)*])? { $($arg:ident : $ty:ty),* $(,)? } $( -> $ret:ty )? :\n        if const\n            $(#[$compiletime_attr:meta])* $compiletime:block\n        else\n            $(#[$runtime_attr:meta])* $runtime:block\n    ) => {\n        $crate::intrinsics::const_eval_select!(\n            @capture$([$($binders)*])? { $($arg : $ty = $arg),* } $(-> $ret)? :\n            if const\n                $(#[$compiletime_attr])* $compiletime\n            else\n                $(#[$runtime_attr])* $runtime\n        )\n    },\n}"
    },
    {
      "callsite": "const_panic!(\n        \"RefCell already borrowed\",\n        \"{err}\",\n        err: BorrowMutError = err,\n    )",
      "defsite": "pub macro const_panic {\n    ($const_msg:literal, $runtime_msg:literal, $($arg:ident : $ty:ty = $val:expr),* $(,)?) => {{\n        // Wrap call to `const_eval_select` in a function so that we can\n        // add the `rustc_allow_const_fn_unstable`. This is okay to do\n        // because both variants will panic, just with different messages.\n        #[rustc_allow_const_fn_unstable(const_eval_select)]\n        #[inline(always)] // inline the wrapper\n        #[track_caller]\n        const fn do_panic($($arg: $ty),*) -> ! {\n            $crate::intrinsics::const_eval_select!(\n                @capture { $($arg: $ty = $arg),* } -> !:\n                #[noinline]\n                if const #[track_caller] #[inline] { // Inline this, to prevent codegen\n                    $crate::panic!($const_msg)\n                } else #[track_caller] { // Do not inline this, it makes perf worse\n                    $crate::panic!($runtime_msg)\n                }\n            )\n        }\n\n        do_panic($($val),*)\n    }},\n    // We support leaving away the `val` expressions for *all* arguments\n    // (but not for *some* arguments, that's too tricky).\n    ($const_msg:literal, $runtime_msg:literal, $($arg:ident : $ty:ty),* $(,)?) => {\n        $crate::panic::const_panic!(\n            $const_msg,\n            $runtime_msg,\n            $($arg: $ty = $arg),*\n        )\n    },\n}"
    }
  ],
  "callees": [
    "80887250879108148015413891736608607220",
    "11032453865679427511690221841234080835",
    "125895754419976834712369234308535121418",
    "97974469250681533633362941246048906040",
    "56316359647357795184792913202425867352",
    "7482589000750884340327816351015335759",
    "82654341932789732147751919849221457004",
    "155146884437592745449279657258619050520",
    "111948483962809339883106353795926089322",
    "1449318134079626371011274072562212788848",
    "59819684876446801767075723074766688892",
    "190359819262014031015892687675081007498",
    "1257449939458569527717077158366407697777",
    "55398000924899280461156178934673388121",
    "9007521356456792533806907033713747580",
    "1130219753616140084010892038682713793809",
    "172140117843934269071100695499597161982",
    "398351056859449483913563186545567727466",
    "603228037714317177115336914651536545892",
    "258820287469578611817448591488600041899",
    "173274967666296717555745442266002200738",
    "1734732217599489969018024954652556207271",
    "1415106497522421883676194742336801697",
    "588974892899239543415856878986124229421",
    "690438059002452523915046149102377829082",
    "17421822894816687532325615181214565887",
    "313288670142853245916792507642081759284",
    "27480086118489678191003877857780025576",
    "1529875730411415803517587657844377161231",
    "1547564489779508118311471276601353146868",
    "23815256893174302637797703719499456373",
    "1639190511405576016712069487289226138136",
    "838579135528120850312965158638687856356",
    "8388353940802646364767634772864445262",
    "73108691610225733116596031659328766854",
    "822269050661504501817822006377694013491",
    "247634727651802426813530679984485687857",
    "72993026513347610222044009578620103685",
    "83277592815980822158438974019698900871",
    "53212576593787280828984978559612536749",
    "1266136833068978554216667149679620774580",
    "170263472120930945276863179915420040056",
    "11156965278025928998185987370340964956",
    "110422491957938577782318652431088408899",
    "138705491366165238634028278563846115067",
    "6781225442344569542394668875873020156",
    "457879323132651244210037964476759098996",
    "402612920088428423016977109980304822932",
    "12790910907938237822370326571745403935",
    "61539750939002654969594741517578054227",
    "121917327455978701744454773261590352887",
    "102272585106179812897836035233672297670",
    "69064157634746261873063654620308320827",
    "135928888564588691565994405694153794425",
    "1651044975265797863616721065106597564241",
    "38217196742947992835679479997123307043",
    "1342521228831833354715461413551686205925",
    "97895937838022620309026790508679003629",
    "121097281700569241807917519510076722724",
    "1749362715435459353511933873995340031229",
    "34410515695185066949979771014252260096",
    "1676806814539779643518083197252466559589",
    "73532313635074392944974785695838172453",
    "1530195770348625061718410767804951205478",
    "303127917241666984113380325134893912788",
    "143572956432032064744447501745832117320",
    "137368381448604167703416046205455599816",
    "80466408942777512049363027701449327301",
    "156396365605833484958181337486344432065",
    "13303575705867660165971022725037666878",
    "761861023504359043615820998596748928032",
    "157526224548632931644224402393760490185",
    "174107661030119018973646362480685393050",
    "366503061556370158810229951695642705038",
    "136731688598983939127472435238823692605",
    "180942759258101506955182199119065053589",
    "821053300062536159115601448644934990736",
    "68648213460155011086108492708709849999",
    "2922976863402117239063671147549004081",
    "1424839172046310268011085042199237354602",
    "79338743477724285898920606540258882171",
    "28815764710943890042111735716087760171",
    "171487306867941110771102297001636865950",
    "1113032932815665948217565294476098756403",
    "41505289739977656509611396154325757795",
    "243931809744896974812513529918607549579",
    "1752989996936949203916036071159051010960",
    "478753423337745817613297159272845606672",
    "3658730781980743391697756456907208995",
    "176386771705132260856587306647620489942",
    "24720139230274117689328858551755358968",
    "1566168013061370513711054548557151263674",
    "375960559020688079617955032586718986019",
    "1214574077763705187516383491048990527345",
    "53013231170464020982930967155682389250",
    "157452307909752828034879955455996353017",
    "130453669725098768871634540984100509610",
    "1264448150763745905618356639115650703943",
    "153492746833767641913665382585991399102",
    "187482952606822645712460029589708661523",
    "126818845945534382313624863669169238336",
    "144119928408074986676617008060073758280",
    "57678861643322857944194165102718529863",
    "594398967705273052918318531949127567864",
    "172590953658237452717460291587113135731",
    "974238557182874992112444884018478807048",
    "949723518165874883315854372086659764362",
    "94456838198084845861692920132229050794",
    "91930047381741681611917147084398403736",
    "100566549119408744214400768677206684395",
    "167934086960411180903985257275635548275",
    "108552149900633290919250115311635650035",
    "156761099224162496521554063647246510953",
    "93629764868847211533386885481792043",
    "87962768316051763542817110666100781851",
    "18924474281332607947427114014473837479",
    "2314453704286586957141741655351484658",
    "14202615834488052409859027248238516218",
    "1584226519763055173017297680793969390949",
    "30908084982265817655199528001939896756",
    "696031761158559988717156830525069362848",
    "1448899345559094949112654453072162878043",
    "1292203662441252026118372580930599634835",
    "136250958068228316938199731614362970959",
    "677493057230061463812906195098240769208",
    "146722828362882336003877423755490060119",
    "139997011880036619526085207717010799176",
    "805684210294475109813538994712986997895",
    "293645540748671545017999185713660079650",
    "618087864432337385915594869955572671241",
    "1705039637729676748415488890044718082160",
    "68961250522390204303039500197253848819",
    "671334365265236941113753063318744059957",
    "1762126293480126793916319187708925702531",
    "110982975251410379469752288802819811268",
    "700543147431208495615048645222424964691",
    "11172017460127122262247192747398001865",
    "115305965424151250157684815253829770404",
    "1255593489441337196411111792584951488284",
    "131951491516562017324429114881873478958",
    "147353619306145463894433932701739289836",
    "73934633302749851638600744339908206828",
    "613513255856977139911489735802844904928",
    "322749754952635112812467217236515710998",
    "97310642151613347726349452651452877766",
    "126337418415726794399520714079003318010",
    "173488751360057668935869030627777552292",
    "124798334296612191009914873740072641817",
    "4874888224965231630903852514116604247",
    "1113702662891479336314686028484409217895",
    "1014498806628630430116225554036073706840",
    "165732123130146287289687186686926185379",
    "585477939450160835616435217736163838325",
    "7092069755569018175786800258452805279",
    "103695068283875105018623992302427237269",
    "53569486981529370344752868158650318763",
    "33020214437710035965402411197660679021",
    "3297309995462571210361513208440932689",
    "99505528804453027457861451108826778638",
    "404530585981013310415620289049541730647",
    "719049603193869984913180724586595888983",
    "813368619794702869414005756234477751011",
    "1359933470730887149416155830775469624234",
    "133941792012963290912121566695757883799",
    "179782706227535055097755371789106436416",
    "1676603290518039711418379565247484306913",
    "85588869322922048345445133830972928954",
    "46392132837367044793605408606640691738",
    "1100378328373936882818045327951760769678",
    "1366933002792501403514034768478701870222",
    "57544741910791006372460750620625338790",
    "83221429070676654997276869294717336401",
    "15659711577820632603287999978545437062",
    "19470982920213640634975089122141652435",
    "471019930735214455010790195510470539657",
    "90550453206581869791970009265946291996",
    "553913370659958613617397748244320672206",
    "1681045938191596506412316969696714615302",
    "178193152802508385064568305969678402720",
    "42824507231917785589406404051488242365",
    "67912827598195659661304478068192403362",
    "827100470220406160910650394273344518714",
    "144160729758818962774870203617558065261",
    "47822370175813177448723454097252028703",
    "118573796773268922105256773661754746281",
    "1679207499139484451917512311688469788867",
    "40265862868123904401909777138035216629",
    "411805792864265543417403918021470104007",
    "33537404157592852811592413282780955689",
    "5646439217058838061875000808900958241",
    "358571424882708899413310170471965259775",
    "94991374756337164216687314359149512939",
    "183942889134990626643214750014121392010",
    "945408849728034117516202938996026270345",
    "75004213001905193955715579484657661560",
    "98114927019826253102817332717172441868",
    "979605271246805204117717884328990531057",
    "180168108041645642368736335759857072520",
    "119668517586734080878390935967434516036",
    "978973849962745378212641441183594156354",
    "1153959874226978119913857890632071810994",
    "39117030210078960345467688189971296476",
    "42675708704912587986905307549981316387",
    "133774208422544204712385208594916672852",
    "1076664590807474698013860243586089992698",
    "53744828640510478502430396508799097231",
    "58675320035953499899532680283682396280",
    "596564398432010081814808260562835248359",
    "296491127499601218917065895757213605938",
    "90933695478604663001573090783200358337",
    "20689955926650303163515534893265746746",
    "1743153353454633366017320764647572977881",
    "683289855890887679216359651262730033383",
    "137147026445318887422604340055542353314",
    "1443519380077829511910627264749460202598",
    "664501847647250298311149032319303144827",
    "106663972824342135956571018803816649195",
    "852298530973108873212161851321200820382",
    "19621519501541880893262169693639313799",
    "535312728641325414318433154446926392210",
    "79957517381934331374505463763239679871",
    "109849097723912452994088294171860151303",
    "486164287917427656918200146926298480057",
    "947833919457653120214810965083035955432",
    "611027897215340775410757839603478111815",
    "819756211280848030917202637728825520633",
    "112954101278082009685742498530365011169",
    "126048648882406442003602795325732745334",
    "60020754642282354823285669083003912494",
    "1006928117247909106515604664996585110540",
    "92658835324565758495130762072978604201",
    "982812517398244847818134688650878457542",
    "147417290197272725234607004164769047407",
    "56448737519681294968960799914289695112",
    "51920321377442756437204742573348251158",
    "151177604553563121726407199103432119959",
    "739520556846959085018120036998133255835",
    "154579918799348646172273891119983850679",
    "71112245793085408723525187754979718597",
    "1217330957027791981411010835694243116934"
  ]
}
