{
  "file": "core/src/intrinsics/mod.rs",
  "name": "<intrinsics::verify::bool_mod::generated_struct as kani::Arbitrary>::any",
  "hash": "497794180691936381817811702574930446189",
  "hash_direct": "50167862195401785462959019759201594959",
  "src": "kani::Arbitrary",
  "macro_backtrace": [
    {
      "callsite": "kani::Arbitrary",
      "defsite": "#[proc_macro_error]"
    },
    {
      "callsite": "gen_compound_harnesses!(bool_mod, bool)",
      "defsite": "macro_rules! gen_compound_harnesses {\n        ($mod_name:ident, $base_type:ty) => {\n            mod $mod_name {\n                use super::*;\n\n                #[cfg_attr(kani, derive(kani::Arbitrary))]\n                #[derive(Debug, PartialEq, Clone, Copy)]\n                #[repr(packed)]\n                struct generated_struct {\n                    f1: $base_type,\n                    f2: $base_type,\n                }\n\n                //transmute harnesses\n                transmute_two_ways!(\n                    transmute_2ways_struct_to_arr,\n                    generated_struct,\n                    [$base_type; 2]\n                );\n                transmute_two_ways!(\n                    transmute_2ways_struct_to_tuple,\n                    generated_struct,\n                    ($base_type, $base_type)\n                );\n                transmute_two_ways!(\n                    transmute_2ways_arr_to_struct,\n                    [$base_type; 2],\n                    generated_struct\n                );\n                transmute_two_ways!(\n                    transmute_2ways_arr_to_tuple,\n                    [$base_type; 2],\n                    ($base_type, $base_type)\n                );\n                transmute_two_ways!(\n                    transmute_2ways_tuple_to_struct,\n                    ($base_type, $base_type),\n                    generated_struct\n                );\n                transmute_two_ways!(\n                    transmute_2ways_tuple_to_arr,\n                    ($base_type, $base_type),\n                    [$base_type; 2]\n                );\n                //transmute_unchecked harnesses\n                transmute_unchecked_two_ways!(\n                    transmute_unchecked_2ways_struct_to_arr,\n                    generated_struct,\n                    [$base_type; 2]\n                );\n                transmute_unchecked_two_ways!(\n                    transmute_unchecked_2ways_struct_to_tuple,\n                    generated_struct,\n                    ($base_type, $base_type)\n                );\n                transmute_unchecked_two_ways!(\n                    transmute_unchecked_2ways_arr_to_struct,\n                    [$base_type; 2],\n                    generated_struct\n                );\n                transmute_unchecked_two_ways!(\n                    transmute_unchecked_2ways_arr_to_tuple,\n                    [$base_type; 2],\n                    ($base_type, $base_type)\n                );\n                transmute_unchecked_two_ways!(\n                    transmute_unchecked_2ways_tuple_to_struct,\n                    ($base_type, $base_type),\n                    generated_struct\n                );\n                transmute_unchecked_two_ways!(\n                    transmute_unchecked_2ways_tuple_to_arr,\n                    ($base_type, $base_type),\n                    [$base_type; 2]\n                );\n            }\n        };\n    }"
    }
  ],
  "callees": [
    "39029338530780942852875415034457908204",
    "162491259761257566482601707483467907610",
    "136621478802095730972375589055034460573",
    "1662070016694227139911860440277225290916",
    "868708452713984376310801203349667993765",
    "162562988142812920362309614379838072419",
    "147326571724930681683605250526187624864"
  ]
}
