{
  "file": "core/src/time.rs",
  "name": "time::Duration::from_nanos_u128",
  "hash": "11725528255258239541336149167943878445",
  "hash_direct": "1018229367728456703811696971623127020330",
  "src": "pub const fn from_nanos_u128(nanos: u128) -> Duration {\n        const NANOS_PER_SEC: u128 = self::NANOS_PER_SEC as u128;\n        let Ok(secs) = u64::try_from(nanos / NANOS_PER_SEC) else {\n            panic!(\"overflow in `Duration::from_nanos_u128`\");\n        };\n        let subsec_nanos = (nanos % NANOS_PER_SEC) as u32;\n        // SAFETY: x % 1_000_000_000 < 1_000_000_000 also, subsec_nanos >= 0 since u128 >=0 and u32 >=0\n        let subsec_nanos = unsafe { Nanoseconds::new_unchecked(subsec_nanos) };\n\n        Duration { secs: secs as u64, nanos: subsec_nanos }\n    }",
  "callees": [
    "887255786740299707710663539413259431157",
    "258820287469578611817448591488600041899",
    "950957549956578784317830715657615300922",
    "1113032932815665948217565294476098756403",
    "41505289739977656509611396154325757795",
    "1752989996936949203916036071159051010960"
  ]
}
