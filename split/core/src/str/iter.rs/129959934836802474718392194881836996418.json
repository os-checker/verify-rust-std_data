{
  "file": "core/src/str/iter.rs",
  "name": "<str::iter::SplitInternal<'_, str::IsWhitespace> as clone::Clone>::clone",
  "hash": "129959934836802474718392194881836996418",
  "hash_direct": "30473136145596102376977464871424143841",
  "src": "fn clone(&self) -> Self {\n                let $s = self;\n                $e\n            }",
  "macro_backtrace": [
    {
      "callsite": "derive_pattern_clone! {\n    clone SplitInternal\n    with |s| SplitInternal { matcher: s.matcher.clone(), ..*s }\n}",
      "defsite": "macro_rules! derive_pattern_clone {\n    (clone $t:ident with |$s:ident| $e:expr) => {\n        impl<'a, P> Clone for $t<'a, P>\n        where\n            P: Pattern<Searcher<'a>: Clone>,\n        {\n            fn clone(&self) -> Self {\n                let $s = self;\n                $e\n            }\n        }\n    };\n}"
    }
  ],
  "callees": [
    "58991123638000977218745583776963910489",
    "935156027293389956413486326084317613821",
    "179315618913317042017181936913882090799",
    "1005832972765124559215934342816328906084",
    "979757102221626952714241270002992215667",
    "134617229440104714803265261425376625826"
  ]
}
