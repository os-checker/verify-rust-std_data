{
  "file": "core/src/str/iter.rs",
  "name": "<str::iter::EscapeUnicode<'_> as iter::traits::iterator::Iterator>::next",
  "hash": "56458883949722212124158342408985032908",
  "hash_direct": "211472072119810024515796400465675605068",
  "src": "fn next(&mut self) -> Option<char> { self.inner.next() }",
  "macro_backtrace": [
    {
      "callsite": "escape_types_impls!(EscapeDebug, EscapeDefault, EscapeUnicode)",
      "defsite": "macro_rules! escape_types_impls {\n    ($( $Name: ident ),+) => {$(\n        #[stable(feature = \"str_escape\", since = \"1.34.0\")]\n        impl<'a> fmt::Display for $Name<'a> {\n            fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {\n                self.clone().try_for_each(|c| f.write_char(c))\n            }\n        }\n\n        #[stable(feature = \"str_escape\", since = \"1.34.0\")]\n        impl<'a> Iterator for $Name<'a> {\n            type Item = char;\n\n            #[inline]\n            fn next(&mut self) -> Option<char> { self.inner.next() }\n\n            #[inline]\n            fn size_hint(&self) -> (usize, Option<usize>) { self.inner.size_hint() }\n\n            #[inline]\n            fn try_fold<Acc, Fold, R>(&mut self, init: Acc, fold: Fold) -> R where\n                Self: Sized, Fold: FnMut(Acc, Self::Item) -> R, R: Try<Output = Acc>\n            {\n                self.inner.try_fold(init, fold)\n            }\n\n            #[inline]\n            fn fold<Acc, Fold>(self, init: Acc, fold: Fold) -> Acc\n                where Fold: FnMut(Acc, Self::Item) -> Acc,\n            {\n                self.inner.fold(init, fold)\n            }\n        }\n\n        #[stable(feature = \"str_escape\", since = \"1.34.0\")]\n        impl<'a> FusedIterator for $Name<'a> {}\n    )+}\n}"
    }
  ],
  "callees": [
    "211389067699639933614636457746408448112",
    "511962504776047044912646038885098500692",
    "1137504858812645032216016959492348926209",
    "1730104888752463612515843025505589269421",
    "118940744255943487826116974334072936571",
    "30477841482411972089439721196610634090",
    "1166738735195650614712576722651941975003",
    "1033874615445010319918363787932197942810",
    "26005865984918626858637243729294095122",
    "119539198841178170095714608677850051781",
    "924792046670332786817944240588622075467",
    "138698758618790377243438433981547172130",
    "552772993720005279317823012062203854572",
    "361986693223169263011576329911028692713",
    "258820287469578611817448591488600041899",
    "1415106497522421883676194742336801697",
    "1094762554971394509811632025389526296225",
    "1821133952317122444317708697819135563731",
    "17421822894816687532325615181214565887",
    "23815256893174302637797703719499456373",
    "1544781223556403174114575372199467597100",
    "177682786371477476544112293683295351149",
    "137305138821128514072367099364709749216",
    "249709513307190467615808996033084579943",
    "838114849683075543716515525171863320561",
    "103469405866130880672269278383561071753",
    "53141000305425134613999846020526628881",
    "985749188984138133118122592648924964185",
    "1287471278609187268310513776057364239965",
    "406036322121614025512961923238787988344",
    "27092927556514254576572567752250999125",
    "20170180267557332822120616943783807769",
    "846515002433725374617496672068942574495",
    "1538575406264905305610059445668415805054",
    "1204668293620499224013336883119093261459",
    "171593739300022194915526452191835401234",
    "46038740822384856925408093080908502431",
    "384244550672282849918349138546547783396",
    "62337539608362208278287091107667399353",
    "1201242597734657880710947142513264586623",
    "1153619527539370888613290998244294453775",
    "180942759258101506955182199119065053589",
    "130669982031646982491289999462174887372",
    "4105489478158635609088823744055955963",
    "1424839172046310268011085042199237354602",
    "1801628256432380068815922960579698928313",
    "33605783209889310876275651287772169825",
    "79338743477724285898920606540258882171",
    "784762140692408565413945818764173866555",
    "379370327573898044316633861515566889448",
    "681734761653390516017251020815506328030",
    "51440253627119903718507776241710833165",
    "784364170229931615218037329562017686188",
    "1283396526632787672314501611027886712886",
    "9385644879996580849882527551883616651",
    "1113032932815665948217565294476098756403",
    "41505289739977656509611396154325757795",
    "243931809744896974812513529918607549579",
    "1752989996936949203916036071159051010960",
    "478753423337745817613297159272845606672",
    "171703085011510184787883206899877368211",
    "187482952606822645712460029589708661523",
    "126818845945534382313624863669169238336",
    "101628934354328292516881712249699787306",
    "82957161178644350218980508943575382660",
    "1774135963744516985810357574682820112878",
    "96012205433138132534511204489529727922",
    "14127777151707030099071123881906565494",
    "131924771529176519358540971554218609343",
    "1584226519763055173017297680793969390949",
    "139997011880036619526085207717010799176",
    "671334365265236941113753063318744059957",
    "115305965424151250157684815253829770404",
    "103695068283875105018623992302427237269",
    "53569486981529370344752868158650318763",
    "33020214437710035965402411197660679021",
    "1676603290518039711418379565247484306913",
    "1803188962461980699617879434368201065587",
    "756154173690443859818404881616867249436",
    "111002727729737487855910752441805729044",
    "60170252654449672705107845647682893691",
    "612822114093593126210482166879781020957",
    "17139800739615364546948059766295360717",
    "109849097723912452994088294171860151303",
    "486164287917427656918200146926298480057",
    "154911443990380340341563367924870465980",
    "69521336164211208533737404575105193630",
    "819756211280848030917202637728825520633",
    "34565924575581399546956747772678869325",
    "621698472431332816417792581602959129152",
    "739520556846959085018120036998133255835"
  ]
}
