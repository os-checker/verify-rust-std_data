{
  "file": "core/src/str/iter.rs",
  "name": "<str::iter::EscapeUnicode<'_> as iter::traits::iterator::Iterator>::try_fold::<(), {closure@/home/runner/work/distributed-verification/distributed-verification/verify-rust-std/library/core/src/iter/traits/iterator.rs:2489:13: 2489:25}, result::Result<(), fmt::Error>>",
  "hash": "1672225524764852596916141951364432212086",
  "hash_direct": "1837102153270857759215900874692080549321",
  "src": "fn try_fold<Acc, Fold, R>(&mut self, init: Acc, fold: Fold) -> R where\n                Self: Sized, Fold: FnMut(Acc, Self::Item) -> R, R: Try<Output = Acc>\n            {\n                self.inner.try_fold(init, fold)\n            }",
  "macro_backtrace": [
    {
      "callsite": "escape_types_impls!(EscapeDebug, EscapeDefault, EscapeUnicode)",
      "defsite": "macro_rules! escape_types_impls {\n    ($( $Name: ident ),+) => {$(\n        #[stable(feature = \"str_escape\", since = \"1.34.0\")]\n        impl<'a> fmt::Display for $Name<'a> {\n            fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {\n                self.clone().try_for_each(|c| f.write_char(c))\n            }\n        }\n\n        #[stable(feature = \"str_escape\", since = \"1.34.0\")]\n        impl<'a> Iterator for $Name<'a> {\n            type Item = char;\n\n            #[inline]\n            fn next(&mut self) -> Option<char> { self.inner.next() }\n\n            #[inline]\n            fn size_hint(&self) -> (usize, Option<usize>) { self.inner.size_hint() }\n\n            #[inline]\n            fn try_fold<Acc, Fold, R>(&mut self, init: Acc, fold: Fold) -> R where\n                Self: Sized, Fold: FnMut(Acc, Self::Item) -> R, R: Try<Output = Acc>\n            {\n                self.inner.try_fold(init, fold)\n            }\n\n            #[inline]\n            fn fold<Acc, Fold>(self, init: Acc, fold: Fold) -> Acc\n                where Fold: FnMut(Acc, Self::Item) -> Acc,\n            {\n                self.inner.fold(init, fold)\n            }\n        }\n\n        #[stable(feature = \"str_escape\", since = \"1.34.0\")]\n        impl<'a> FusedIterator for $Name<'a> {}\n    )+}\n}"
    }
  ],
  "callees": [
    "69096650655933370018490819206330130737",
    "68581623244024013215145596633238016545",
    "1096154568935207292118411765173724766739",
    "1615780015787215128316594883786605832883",
    "256336037942266645110042284662531777506",
    "40063093336585792095766602796070126518",
    "134849789194622402551955575133469862111",
    "71442954758490355815817278309752170314",
    "163161463220985676922487198705762823548",
    "345779094652510990013028497657958621628",
    "117083133034458006019709376097028492273",
    "1049269644659338826513279302519967805708",
    "66725550244236182879605950261003407322",
    "135077949306041206191099932416552917349",
    "802059967958499159511222978781090659237",
    "42514022329330556029652802619584803476",
    "47323665595455568617290020941376774286",
    "25768524018977866517055903022448790318",
    "512689943550103824514379043064606059583",
    "171712640075376287375623358294371029091",
    "1329845230409163288212548289525672875535",
    "16824420916691935049705640393259467449",
    "17775626642730485901291408690205577352",
    "173001228520113880684228076017976614486",
    "420529095785936685210426091604485651843",
    "542321062076897046014924570185368362627",
    "320871781821139239311314262343622690470",
    "8565484847029217410200689921415930723",
    "145260478137991767663669202523446719765",
    "81693989697236589149550629791037858593",
    "45703783633151823599487232273796980295",
    "853916264665998722412219474929204062987",
    "104346617568127184618015245948939562275",
    "167503383902428323316495752035640685984",
    "514841579359108634016127906442994936201",
    "1559527691468457438712029334091199709783",
    "167909472558563220627762422690848581456",
    "1285359775254434544011199587888527989751",
    "326058803821565445013718108601493808904",
    "932326399695601086910843022877384237430",
    "103424914710788786046355941589156276951",
    "14336217352403889789696607974386324455",
    "164769300933020566656262923669273525158",
    "7418434326773042031826248058658687296",
    "82238255375868304519870604057524476826",
    "1801932849287312231112662193894546046488",
    "844957821118050201712037424530049556280",
    "72900543697507853812573092871834848798",
    "23034820410466608834629373371340500396",
    "315331140686166457616644577557668814534",
    "176742512093848468045239021356424772729",
    "110921148128003115891204885097103082374",
    "111156803972027146385637029886445708524",
    "508994223221737381315323921733323941762",
    "172988202723925134796567682468931265149",
    "24515634545664875710389427341031565847",
    "904657327853043146915704866992262556349",
    "18807870376557811914137072961455205803",
    "1162694293024091137010317740508727272799",
    "841904668883726495316837415609641023349",
    "1258931108755458209614962827106116332072",
    "53589810041120365110998933211304468616",
    "1243847030362955698517207199029174369810",
    "105125143701458073564296455695110349394",
    "174434980853599669988324850529807540275",
    "703663108277374327010040438608357482834",
    "1100495660517602822510660091708953776518",
    "1129159093616037571015539647390591854279",
    "360839492769718941314859059279215451199",
    "147805498262972405437090907625689719118",
    "428401469413672854211745066793881205201",
    "87796186528381136712046988368087103286",
    "57420999647302578647803495222402957763",
    "94868751523462022703782732101379277481",
    "39498763786986515562043840216548811868",
    "843102896095261732816452208300794916411",
    "62964906474134410292844024784991518817",
    "934375696446284627516563118665690549226",
    "1302514623760732210917631482165556335973",
    "1028023859496283824714006082102994000183",
    "1375602339865304183616456573312626826122",
    "22866183673949532009302817089247357249",
    "481760318323362098310716245514364463126",
    "1076076341466642714811489789957067234591",
    "182972684513709302288440602073677891408",
    "1005741685408874217215070182108479526418",
    "182534260348495718753381397354609581701",
    "151563095657155538581746672164109746314",
    "995177949111625568612353687436321299644",
    "5310558452957964718858737086270628046",
    "145463922249092111138710816174815011663",
    "135531080111925582411467416475571761960",
    "802603331907130014710293248879007229107",
    "1793199026846464691616255721034512928348",
    "138774632689772549819578629668035245923",
    "158338167874674576194838212405987326951",
    "550150895960312460312176584159342455723",
    "926431751072447714115290524535080564415",
    "478505109661826463711850093418602871650",
    "399232661239117480517401994520839366833"
  ]
}
