{
  "file": "core/src/str/converts.rs",
  "name": "core::str::from_utf8_unchecked_mut",
  "hash": "530109060582616865514916186554183663757",
  "hash_direct": "86146953810287717816916620480014291031",
  "src": "pub const unsafe fn from_utf8_unchecked_mut(v: &mut [u8]) -> &mut str {\n    // SAFETY: the caller must guarantee that the bytes `v`\n    // are valid UTF-8, thus the cast to `*mut str` is safe.\n    // Also, the pointer dereference is safe because that pointer\n    // comes from a reference which is guaranteed to be valid for writes.\n    unsafe { &mut *(v as *mut [u8] as *mut str) }\n}"
}
