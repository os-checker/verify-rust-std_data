{
  "file": "core/src/str/pattern.rs",
  "name": "<str::pattern::CharPredicateSearcher<'_, fn(char) -> bool {char::methods::<impl char>::is_whitespace}> as str::pattern::ReverseSearcher<'_>>::next_reject_back",
  "hash": "42509799324146557066216723408789052527",
  "hash_direct": "901365401215110679713051061503997764736",
  "src": "fn next_reject_back(&mut self) -> Option<(usize, usize)> {\n            self.0.next_reject_back()\n        }",
  "macro_backtrace": [
    {
      "callsite": "searcher_methods!(reverse)",
      "defsite": "macro_rules! searcher_methods {\n    (forward) => {\n        #[inline]\n        fn haystack(&self) -> &'a str {\n            self.0.haystack()\n        }\n        #[inline]\n        fn next(&mut self) -> SearchStep {\n            self.0.next()\n        }\n        #[inline]\n        fn next_match(&mut self) -> Option<(usize, usize)> {\n            self.0.next_match()\n        }\n        #[inline]\n        fn next_reject(&mut self) -> Option<(usize, usize)> {\n            self.0.next_reject()\n        }\n    };\n    (reverse) => {\n        #[inline]\n        fn next_back(&mut self) -> SearchStep {\n            self.0.next_back()\n        }\n        #[inline]\n        fn next_match_back(&mut self) -> Option<(usize, usize)> {\n            self.0.next_match_back()\n        }\n        #[inline]\n        fn next_reject_back(&mut self) -> Option<(usize, usize)> {\n            self.0.next_reject_back()\n        }\n    };\n}"
    }
  ],
  "callees": [
    "1096154568935207292118411765173724766739",
    "1615780015787215128316594883786605832883",
    "40063093336585792095766602796070126518",
    "29482343462038012121821388472690701117",
    "47323665595455568617290020941376774286",
    "25768524018977866517055903022448790318",
    "111425599901702694743874629435682172347",
    "714811817540972740211524868124730226803",
    "1329845230409163288212548289525672875535",
    "47278574192031232971799194590021398469",
    "16824420916691935049705640393259467449",
    "1712898201300478840215074793236064467963",
    "6221741227072437069508312353437850718",
    "841528230883583910260472553997390736",
    "164769300933020566656262923669273525158",
    "6627333586548251899612383564920847269",
    "315331140686166457616644577557668814534",
    "176742512093848468045239021356424772729",
    "172988202723925134796567682468931265149",
    "498900969255838977917734782171739433018",
    "127715206510390931515916539530006805664",
    "841904668883726495316837415609641023349",
    "1258931108755458209614962827106116332072",
    "53589810041120365110998933211304468616",
    "1243847030362955698517207199029174369810",
    "105125143701458073564296455695110349394",
    "14289085791843058303972699274315536239",
    "703663108277374327010040438608357482834",
    "1100495660517602822510660091708953776518",
    "261114641164087560416314538374841383619",
    "657836379058650203543789171703697059",
    "104899423806664903811937683742071441405",
    "1614903415506775741017981287843401206816",
    "1740741091750212443512988176670821833323",
    "62964906474134410292844024784991518817",
    "591163883570913488917341250007887670228",
    "934375696446284627516563118665690549226",
    "1028023859496283824714006082102994000183",
    "1375602339865304183616456573312626826122",
    "1038091007637423756616843932505132086543",
    "13445532662779670761228880372488293329",
    "1163068038768334523712968925068122539241",
    "182972684513709302288440602073677891408",
    "5815968703736580963562790859338858979",
    "911776701760282171617604846768629435744",
    "608729603554387759112665830559747788319",
    "17942302198640903099897416856451704995",
    "873553439411192054217928980363503086913",
    "1256571648311385372818048563868553671913",
    "1256571648311385372818048563868553671913",
    "1256571648311385372818048563868553671913",
    "1256571648311385372818048563868553671913",
    "99865840988228285693998358138491244126",
    "99865840988228285693998358138491244126",
    "99865840988228285693998358138491244126",
    "99865840988228285693998358138491244126",
    "30545534060300319003176930052732022160",
    "302067364229160357212378258499441578857",
    "302067364229160357212378258499441578857",
    "302067364229160357212378258499441578857",
    "302067364229160357212378258499441578857",
    "284555045731488463910941043858609989409",
    "284555045731488463910941043858609989409",
    "284555045731488463910941043858609989409",
    "284555045731488463910941043858609989409",
    "503186157809186348411465644779744965748",
    "839207492298540404017515023349213548168",
    "66790440109178028663981262142686271344",
    "967469753176569649813211808281431324105",
    "690688525473901201418348048180165092817",
    "162297282181113064185969381212466377275",
    "398665773415998636517054634396039528273",
    "128686589914158798533390336383350066437",
    "802603331907130014710293248879007229107",
    "1793199026846464691616255721034512928348",
    "121973516639670562835557836045994389718",
    "158338167874674576194838212405987326951",
    "550150895960312460312176584159342455723",
    "160761334367309494176444203284255754796",
    "1137271765924114987514947403158445640283",
    "399232661239117480517401994520839366833",
    "126826448514586998445582748734874648534"
  ]
}
