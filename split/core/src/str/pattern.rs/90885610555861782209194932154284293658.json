{
  "file": "core/src/str/pattern.rs",
  "name": "<str::IsWhitespace as str::pattern::Pattern>::into_searcher",
  "hash": "90885610555861782209194932154284293658",
  "hash_direct": "173538127722027521513565127660886036788",
  "src": "fn into_searcher<$a>(self, haystack: &$a str) -> $t {\n            ($smap)(($pmap)(self).into_searcher(haystack))\n        }",
  "macro_backtrace": [
    {
      "callsite": "pattern_methods!('a, CharPredicateSearcher<'a, F>, MultiCharEqPattern, CharPredicateSearcher)",
      "defsite": "macro_rules! pattern_methods {\n    ($a:lifetime, $t:ty, $pmap:expr, $smap:expr) => {\n        type Searcher<$a> = $t;\n\n        #[inline]\n        fn into_searcher<$a>(self, haystack: &$a str) -> $t {\n            ($smap)(($pmap)(self).into_searcher(haystack))\n        }\n\n        #[inline]\n        fn is_contained_in<$a>(self, haystack: &$a str) -> bool {\n            ($pmap)(self).is_contained_in(haystack)\n        }\n\n        #[inline]\n        fn is_prefix_of<$a>(self, haystack: &$a str) -> bool {\n            ($pmap)(self).is_prefix_of(haystack)\n        }\n\n        #[inline]\n        fn strip_prefix_of<$a>(self, haystack: &$a str) -> Option<&$a str> {\n            ($pmap)(self).strip_prefix_of(haystack)\n        }\n\n        #[inline]\n        fn is_suffix_of<$a>(self, haystack: &$a str) -> bool\n        where\n            $t: ReverseSearcher<$a>,\n        {\n            ($pmap)(self).is_suffix_of(haystack)\n        }\n\n        #[inline]\n        fn strip_suffix_of<$a>(self, haystack: &$a str) -> Option<&$a str>\n        where\n            $t: ReverseSearcher<$a>,\n        {\n            ($pmap)(self).strip_suffix_of(haystack)\n        }\n    };\n}"
    }
  ],
  "callees": [
    "258820287469578611817448591488600041899",
    "588974892899239543415856878986124229421",
    "690438059002452523915046149102377829082",
    "17421822894816687532325615181214565887",
    "1547564489779508118311471276601353146868",
    "23815256893174302637797703719499456373",
    "121097281700569241807917519510076722724",
    "143572956432032064744447501745832117320",
    "13303575705867660165971022725037666878",
    "761861023504359043615820998596748928032",
    "1113032932815665948217565294476098756403",
    "41505289739977656509611396154325757795",
    "478753423337745817613297159272845606672",
    "3658730781980743391697756456907208995",
    "176386771705132260856587306647620489942",
    "136250958068228316938199731614362970959",
    "139997011880036619526085207717010799176",
    "293645540748671545017999185713660079650",
    "68961250522390204303039500197253848819",
    "613513255856977139911489735802844904928",
    "322749754952635112812467217236515710998",
    "97310642151613347726349452651452877766",
    "53569486981529370344752868158650318763",
    "15659711577820632603287999978545437062",
    "118573796773268922105256773661754746281",
    "137147026445318887422604340055542353314",
    "1443519380077829511910627264749460202598",
    "664501847647250298311149032319303144827",
    "114496068077111902311006774827636923339",
    "982812517398244847818134688650878457542",
    "739520556846959085018120036998133255835"
  ]
}
