{
  "file": "core/src/str/pattern.rs",
  "name": "<str::pattern::MultiCharEqSearcher<'_, str::IsWhitespace> as str::pattern::Searcher<'_>>::next",
  "hash": "510061293700349474612593281868580054606",
  "hash_direct": "1585029119231427123116983247803898080733",
  "src": "fn next(&mut self) -> SearchStep {\n        let s = &mut self.char_indices;\n        // Compare lengths of the internal byte slice iterator\n        // to find length of current char\n        let pre_len = s.iter.iter.len();\n        if let Some((i, c)) = s.next() {\n            let len = s.iter.iter.len();\n            let char_len = pre_len - len;\n            if self.char_eq.matches(c) {\n                return SearchStep::Match(i, i + char_len);\n            } else {\n                return SearchStep::Reject(i, i + char_len);\n            }\n        }\n        SearchStep::Done\n    }",
  "callees": [
    "1137504858812645032216016959492348926209",
    "1730104888752463612515843025505589269421",
    "30477841482411972089439721196610634090",
    "79760301754771638958349888420647128122",
    "258820287469578611817448591488600041899",
    "1415106497522421883676194742336801697",
    "456928144197643502311518038980030024077",
    "1215892648375486674112698399065598750260",
    "17421822894816687532325615181214565887",
    "1529875730411415803517587657844377161231",
    "23815256893174302637797703719499456373",
    "121097281700569241807917519510076722724",
    "20170180267557332822120616943783807769",
    "1204668293620499224013336883119093261459",
    "171593739300022194915526452191835401234",
    "180942759258101506955182199119065053589",
    "1424839172046310268011085042199237354602",
    "79338743477724285898920606540258882171",
    "1283396526632787672314501611027886712886",
    "1113032932815665948217565294476098756403",
    "41505289739977656509611396154325757795",
    "243931809744896974812513529918607549579",
    "1752989996936949203916036071159051010960",
    "478753423337745817613297159272845606672",
    "1214574077763705187516383491048990527345",
    "187482952606822645712460029589708661523",
    "126818845945534382313624863669169238336",
    "144119928408074986676617008060073758280",
    "1584226519763055173017297680793969390949",
    "139997011880036619526085207717010799176",
    "671334365265236941113753063318744059957",
    "1762126293480126793916319187708925702531",
    "115305965424151250157684815253829770404",
    "103695068283875105018623992302427237269",
    "53569486981529370344752868158650318763",
    "33020214437710035965402411197660679021",
    "3297309995462571210361513208440932689",
    "1676603290518039711418379565247484306913",
    "90550453206581869791970009265946291996",
    "756154173690443859818404881616867249436",
    "155843328531890927210777505987330542723",
    "60170252654449672705107845647682893691",
    "612822114093593126210482166879781020957",
    "506887314262710615016628848432002706093",
    "17139800739615364546948059766295360717",
    "109849097723912452994088294171860151303",
    "486164287917427656918200146926298480057",
    "69521336164211208533737404575105193630",
    "819756211280848030917202637728825520633",
    "621698472431332816417792581602959129152",
    "92658835324565758495130762072978604201",
    "739520556846959085018120036998133255835",
    "89347776969484683885451283756595935835"
  ]
}
