{
  "file": "core/src/str/pattern.rs",
  "name": "<str::pattern::CharSearcher<'_> as str::pattern::Searcher<'_>>::next",
  "hash": "73432950742435754106872078151898455178",
  "hash_direct": "135519961264977338695200257148448718139",
  "src": "fn next(&mut self) -> SearchStep {\n        let old_finger = self.finger;\n        // SAFETY: 1-4 guarantee safety of `get_unchecked`\n        // 1. `self.finger` and `self.finger_back` are kept on unicode boundaries\n        //    (this is invariant)\n        // 2. `self.finger >= 0` since it starts at 0 and only increases\n        // 3. `self.finger < self.finger_back` because otherwise the char `iter`\n        //    would return `SearchStep::Done`\n        // 4. `self.finger` comes before the end of the haystack because `self.finger_back`\n        //    starts at the end and only decreases\n        let slice = unsafe { self.haystack.get_unchecked(old_finger..self.finger_back) };\n        let mut iter = slice.chars();\n        let old_len = iter.iter.len();\n        if let Some(ch) = iter.next() {\n            // add byte offset of current character\n            // without re-encoding as utf-8\n            self.finger += old_len - iter.iter.len();\n            if ch == self.needle {\n                SearchStep::Match(old_finger, self.finger)\n            } else {\n                SearchStep::Reject(old_finger, self.finger)\n            }\n        } else {\n            SearchStep::Done\n        }\n    }",
  "callees": [
    "1137504858812645032216016959492348926209",
    "1730104888752463612515843025505589269421",
    "30477841482411972089439721196610634090",
    "258820287469578611817448591488600041899",
    "1415106497522421883676194742336801697",
    "588974892899239543415856878986124229421",
    "690438059002452523915046149102377829082",
    "17421822894816687532325615181214565887",
    "344205184641161321414779255303253264915",
    "1529875730411415803517587657844377161231",
    "1293607388739574242111226698004271448354",
    "23815256893174302637797703719499456373",
    "121097281700569241807917519510076722724",
    "20170180267557332822120616943783807769",
    "97892229237199250718782565098232937194",
    "125312877505429677902664359715729802479",
    "632379827537218859118037651046044448068",
    "1204668293620499224013336883119093261459",
    "171593739300022194915526452191835401234",
    "180942759258101506955182199119065053589",
    "1424839172046310268011085042199237354602",
    "79338743477724285898920606540258882171",
    "1283396526632787672314501611027886712886",
    "1113032932815665948217565294476098756403",
    "41505289739977656509611396154325757795",
    "243931809744896974812513529918607549579",
    "1752989996936949203916036071159051010960",
    "478753423337745817613297159272845606672",
    "3658730781980743391697756456907208995",
    "176386771705132260856587306647620489942",
    "8161291837423649642305263678029669375",
    "1214574077763705187516383491048990527345",
    "53013231170464020982930967155682389250",
    "157452307909752828034879955455996353017",
    "698375928041891685218332199603984089953",
    "187482952606822645712460029589708661523",
    "126818845945534382313624863669169238336",
    "144119928408074986676617008060073758280",
    "94456838198084845861692920132229050794",
    "100566549119408744214400768677206684395",
    "1584226519763055173017297680793969390949",
    "696031761158559988717156830525069362848",
    "136250958068228316938199731614362970959",
    "139997011880036619526085207717010799176",
    "449637264080571459055009589071427003",
    "58480844886996188714196265131261175939",
    "671334365265236941113753063318744059957",
    "1762126293480126793916319187708925702531",
    "115305965424151250157684815253829770404",
    "613513255856977139911489735802844904928",
    "322749754952635112812467217236515710998",
    "97310642151613347726349452651452877766",
    "103695068283875105018623992302427237269",
    "53569486981529370344752868158650318763",
    "33020214437710035965402411197660679021",
    "3297309995462571210361513208440932689",
    "1676603290518039711418379565247484306913",
    "95842351741559959003916650465478545869",
    "90550453206581869791970009265946291996",
    "756154173690443859818404881616867249436",
    "172965107350741823789971049511714888457",
    "60170252654449672705107845647682893691",
    "612822114093593126210482166879781020957",
    "137147026445318887422604340055542353314",
    "1552550943189349917617694230360700488104",
    "1560000583486082542418261243128396125960",
    "134021551926054372363240583078166288040",
    "17139800739615364546948059766295360717",
    "109849097723912452994088294171860151303",
    "486164287917427656918200146926298480057",
    "69521336164211208533737404575105193630",
    "819756211280848030917202637728825520633",
    "621698472431332816417792581602959129152",
    "1703660345011483495218041991169194027213",
    "92658835324565758495130762072978604201",
    "606608081756831098117273329568996374994",
    "151177604553563121726407199103432119959",
    "739520556846959085018120036998133255835"
  ]
}
