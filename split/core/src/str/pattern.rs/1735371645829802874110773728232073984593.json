{
  "file": "core/src/str/pattern.rs",
  "name": "<str::pattern::CharSearcher<'_> as str::pattern::Searcher<'_>>::next",
  "hash": "1735371645829802874110773728232073984593",
  "hash_direct": "135519961264977338695200257148448718139",
  "src": "fn next(&mut self) -> SearchStep {\n        let old_finger = self.finger;\n        // SAFETY: 1-4 guarantee safety of `get_unchecked`\n        // 1. `self.finger` and `self.finger_back` are kept on unicode boundaries\n        //    (this is invariant)\n        // 2. `self.finger >= 0` since it starts at 0 and only increases\n        // 3. `self.finger < self.finger_back` because otherwise the char `iter`\n        //    would return `SearchStep::Done`\n        // 4. `self.finger` comes before the end of the haystack because `self.finger_back`\n        //    starts at the end and only decreases\n        let slice = unsafe { self.haystack.get_unchecked(old_finger..self.finger_back) };\n        let mut iter = slice.chars();\n        let old_len = iter.iter.len();\n        if let Some(ch) = iter.next() {\n            // add byte offset of current character\n            // without re-encoding as utf-8\n            self.finger += old_len - iter.iter.len();\n            if ch == self.needle {\n                SearchStep::Match(old_finger, self.finger)\n            } else {\n                SearchStep::Reject(old_finger, self.finger)\n            }\n        } else {\n            SearchStep::Done\n        }\n    }",
  "callees": [
    "1096154568935207292118411765173724766739",
    "1615780015787215128316594883786605832883",
    "40063093336585792095766602796070126518",
    "47323665595455568617290020941376774286",
    "25768524018977866517055903022448790318",
    "111425599901702694743874629435682172347",
    "714811817540972740211524868124730226803",
    "1329845230409163288212548289525672875535",
    "80772345035046942210372022594843481570",
    "47278574192031232971799194590021398469",
    "84909938954906103112758184730426842057",
    "16824420916691935049705640393259467449",
    "1712898201300478840215074793236064467963",
    "164769300933020566656262923669273525158",
    "841346702487865802717731804342903065853",
    "1182371843420022111010336901757313084440",
    "26064680123257945312537992217601395168",
    "1801932849287312231112662193894546046488",
    "844957821118050201712037424530049556280",
    "315331140686166457616644577557668814534",
    "176742512093848468045239021356424772729",
    "172988202723925134796567682468931265149",
    "18807870376557811914137072961455205803",
    "841904668883726495316837415609641023349",
    "1258931108755458209614962827106116332072",
    "53589810041120365110998933211304468616",
    "1243847030362955698517207199029174369810",
    "105125143701458073564296455695110349394",
    "25930241974724637292994171257021210872",
    "617554482545947003412104686554524783687",
    "152018209062913109616942758022114057971",
    "14289085791843058303972699274315536239",
    "138498210655847367337117318085891081738",
    "602553655434272852810568520159081802816",
    "102887121523905452179262747329207775596",
    "703663108277374327010040438608357482834",
    "1100495660517602822510660091708953776518",
    "261114641164087560416314538374841383619",
    "316650073974070898314677646691025099244",
    "180824515799235861855048294605620195261",
    "39498763786986515562043840216548811868",
    "25269069644916694782526525713115896132",
    "781603672758780177711142029625885084089",
    "843102896095261732816452208300794916411",
    "169017152061146820209827866672499117723",
    "1365351597739011160412231277592213691479",
    "62964906474134410292844024784991518817",
    "591163883570913488917341250007887670228",
    "934375696446284627516563118665690549226",
    "151694591507088409946921766244030956793",
    "199204638009217392510037902431469110881",
    "145447226859878511083700582225257315850",
    "1302514623760732210917631482165556335973",
    "1028023859496283824714006082102994000183",
    "1375602339865304183616456573312626826122",
    "13445532662779670761228880372488293329",
    "182972684513709302288440602073677891408",
    "1713539753654745329215868145254478021527",
    "911776701760282171617604846768629435744",
    "182534260348495718753381397354609581701",
    "27923647172126753103299190047630517613",
    "995177949111625568612353687436321299644",
    "5310558452957964718858737086270628046",
    "45819503778375231969038300244556098990",
    "1875738746069546053588724721861696954",
    "1425886142144039943111129160147777313265",
    "638878529771811441416671099064984594214",
    "135531080111925582411467416475571761960",
    "802603331907130014710293248879007229107",
    "1793199026846464691616255721034512928348",
    "158338167874674576194838212405987326951",
    "550150895960312460312176584159342455723",
    "478505109661826463711850093418602871650",
    "7839859953712079114640771271960005865",
    "1137271765924114987514947403158445640283",
    "393974833682574441515290398983271504453",
    "1473335491240830543017777776437787647078",
    "399232661239117480517401994520839366833"
  ]
}
