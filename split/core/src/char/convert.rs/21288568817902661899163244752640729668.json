{
  "file": "core/src/char/convert.rs",
  "name": "char::convert::from_digit",
  "hash": "21288568817902661899163244752640729668",
  "hash_direct": "28167253834709837593028732251948257537",
  "src": "pub(super) const fn from_digit(num: u32, radix: u32) -> Option<char> {\n    if radix > 36 {\n        panic!(\"from_digit: radix is too high (maximum 36)\");\n    }\n    if num < radix {\n        let num = num as u8;\n        if num < 10 { Some((b'0' + num) as char) } else { Some((b'a' + num - 10) as char) }\n    } else {\n        None\n    }\n}",
  "callees": [
    "258820287469578611817448591488600041899",
    "1113032932815665948217565294476098756403",
    "41505289739977656509611396154325757795",
    "1752989996936949203916036071159051010960"
  ]
}
