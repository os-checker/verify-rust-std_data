{
  "file": "core/src/char/methods.rs",
  "name": "char::methods::encode_utf8_raw_unchecked",
  "hash": "32379270059602019354235921731882813982",
  "hash_direct": "1146989749389168735241728763215140395",
  "src": "pub const unsafe fn encode_utf8_raw_unchecked(code: u32, dst: *mut u8) {\n    let len = len_utf8(code);\n    // SAFETY: The caller must guarantee that the buffer pointed to by `dst`\n    // is at least `len` bytes long.\n    unsafe {\n        match len {\n            1 => {\n                *dst = code as u8;\n            }\n            2 => {\n                *dst = (code >> 6 & 0x1F) as u8 | TAG_TWO_B;\n                *dst.add(1) = (code & 0x3F) as u8 | TAG_CONT;\n            }\n            3 => {\n                *dst = (code >> 12 & 0x0F) as u8 | TAG_THREE_B;\n                *dst.add(1) = (code >> 6 & 0x3F) as u8 | TAG_CONT;\n                *dst.add(2) = (code & 0x3F) as u8 | TAG_CONT;\n            }\n            4 => {\n                *dst = (code >> 18 & 0x07) as u8 | TAG_FOUR_B;\n                *dst.add(1) = (code >> 12 & 0x3F) as u8 | TAG_CONT;\n                *dst.add(2) = (code >> 6 & 0x3F) as u8 | TAG_CONT;\n                *dst.add(3) = (code & 0x3F) as u8 | TAG_CONT;\n            }\n            // SAFETY: `char` always takes between 1 and 4 bytes to encode in UTF-8.\n            _ => crate::hint::unreachable_unchecked(),\n        }\n    }\n}",
  "callees": [
    "56302926392345337717408510197239954979",
    "47323665595455568617290020941376774286",
    "25768524018977866517055903022448790318",
    "111425599901702694743874629435682172347",
    "714811817540972740211524868124730226803",
    "1329845230409163288212548289525672875535",
    "84909938954906103112758184730426842057",
    "16824420916691935049705640393259467449",
    "1712898201300478840215074793236064467963",
    "841346702487865802717731804342903065853",
    "1182371843420022111010336901757313084440",
    "26064680123257945312537992217601395168",
    "841904668883726495316837415609641023349",
    "1258931108755458209614962827106116332072",
    "105125143701458073564296455695110349394",
    "25930241974724637292994171257021210872",
    "617554482545947003412104686554524783687",
    "169017152061146820209827866672499117723",
    "1365351597739011160412231277592213691479",
    "550150895960312460312176584159342455723",
    "393974833682574441515290398983271504453",
    "399232661239117480517401994520839366833"
  ]
}
