{
  "file": "core/src/char/mod.rs",
  "name": "<char::ToUppercase as fmt::Display>::fmt",
  "hash": "31625700118769441871252728983725496108",
  "hash_direct": "172468532355455305244969331918303635451",
  "src": "fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {\n                fmt::Display::fmt(&self.0, f)\n            }",
  "macro_backtrace": [
    {
      "callsite": "casemappingiter_impls! {\n    /// Returns an iterator that yields the uppercase equivalent of a `char`.\n    ///\n    /// This `struct` is created by the [`to_uppercase`] method on [`char`]. See\n    /// its documentation for more.\n    ///\n    /// [`to_uppercase`]: char::to_uppercase\n    ToUppercase\n}",
      "defsite": "macro_rules! casemappingiter_impls {\n    ($(#[$attr:meta])* $ITER_NAME:ident) => {\n        $(#[$attr])*\n        #[stable(feature = \"rust1\", since = \"1.0.0\")]\n        #[derive(Debug, Clone)]\n        pub struct $ITER_NAME(CaseMappingIter);\n\n        #[stable(feature = \"rust1\", since = \"1.0.0\")]\n        impl Iterator for $ITER_NAME {\n            type Item = char;\n            fn next(&mut self) -> Option<char> {\n                self.0.next()\n            }\n\n            fn size_hint(&self) -> (usize, Option<usize>) {\n                self.0.size_hint()\n            }\n\n            fn fold<Acc, Fold>(self, init: Acc, fold: Fold) -> Acc\n            where\n                Fold: FnMut(Acc, Self::Item) -> Acc,\n            {\n                self.0.fold(init, fold)\n            }\n\n            fn count(self) -> usize {\n                self.0.count()\n            }\n\n            fn last(self) -> Option<Self::Item> {\n                self.0.last()\n            }\n\n            fn advance_by(&mut self, n: usize) -> Result<(), NonZero<usize>> {\n                self.0.advance_by(n)\n            }\n\n            #[requires(idx < self.0.len())]\n            unsafe fn __iterator_get_unchecked(&mut self, idx: usize) -> Self::Item {\n                // SAFETY: just forwarding requirements to caller\n                unsafe { self.0.__iterator_get_unchecked(idx) }\n            }\n        }\n\n        #[stable(feature = \"case_mapping_double_ended\", since = \"1.59.0\")]\n        impl DoubleEndedIterator for $ITER_NAME {\n            fn next_back(&mut self) -> Option<char> {\n                self.0.next_back()\n            }\n\n            fn rfold<Acc, Fold>(self, init: Acc, rfold: Fold) -> Acc\n            where\n                Fold: FnMut(Acc, Self::Item) -> Acc,\n            {\n                self.0.rfold(init, rfold)\n            }\n\n            fn advance_back_by(&mut self, n: usize) -> Result<(), NonZero<usize>> {\n                self.0.advance_back_by(n)\n            }\n        }\n\n        #[stable(feature = \"fused\", since = \"1.26.0\")]\n        impl FusedIterator for $ITER_NAME {}\n\n        #[stable(feature = \"exact_size_case_mapping_iter\", since = \"1.35.0\")]\n        impl ExactSizeIterator for $ITER_NAME {\n            fn len(&self) -> usize {\n                self.0.len()\n            }\n\n            fn is_empty(&self) -> bool {\n                self.0.is_empty()\n            }\n        }\n\n        // SAFETY: forwards to inner `array::IntoIter`\n        #[unstable(feature = \"trusted_len\", issue = \"37572\")]\n        unsafe impl TrustedLen for $ITER_NAME {}\n\n        // SAFETY: forwards to inner `array::IntoIter`\n        #[doc(hidden)]\n        #[unstable(feature = \"std_internals\", issue = \"none\")]\n        unsafe impl TrustedRandomAccessNoCoerce for $ITER_NAME {\n            const MAY_HAVE_SIDE_EFFECT: bool = false;\n        }\n\n        // SAFETY: this iter has no subtypes/supertypes\n        #[doc(hidden)]\n        #[unstable(feature = \"std_internals\", issue = \"none\")]\n        unsafe impl TrustedRandomAccess for $ITER_NAME {}\n\n        #[stable(feature = \"char_struct_display\", since = \"1.16.0\")]\n        impl fmt::Display for $ITER_NAME {\n            #[inline]\n            fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {\n                fmt::Display::fmt(&self.0, f)\n            }\n        }\n    }\n}"
    }
  ],
  "callees": [
    "1402951367609933264512033602583045868711",
    "128137197678078986516252847755705560460",
    "51025675943828755637037811994748094664",
    "1736785034867077145910956581112481142969",
    "1757865048021554780412516866743607567507",
    "432200847242283258317865507289680966202",
    "138017330380672476408502442245158051279",
    "1054446440166850819910276477596789004604",
    "104498957538905282611513430893787585158",
    "152740550737104242498553754008744285107",
    "993979605641676799910307529178719589132",
    "94800494449654490817152955686323822876",
    "1079373068255537748012888103408836211715",
    "1251010408899891223013640414815187087523",
    "1684636505577985912917866394062015379629",
    "7482589000750884340327816351015335759",
    "155146884437592745449279657258619050520",
    "111948483962809339883106353795926089322",
    "1449318134079626371011274072562212788848",
    "180885054484727158889233344781249141486",
    "258820287469578611817448591488600041899",
    "588974892899239543415856878986124229421",
    "690438059002452523915046149102377829082",
    "17421822894816687532325615181214565887",
    "27480086118489678191003877857780025576",
    "1529875730411415803517587657844377161231",
    "1293607388739574242111226698004271448354",
    "23815256893174302637797703719499456373",
    "47704708250653028710044748737554169683",
    "1012370453040183485110215368448241439151",
    "1735123539936757141614704697048634559862",
    "60356579532167869474374323264085707257",
    "108377100778352464195677218762682983121",
    "1213176769513188654316224747304915094501",
    "439787539504072647614300758502290540928",
    "136087872864118093707392711576087832805",
    "5906227524706963464979622817852316241",
    "1232630557319299762117464203181083790137",
    "46787687569333161603500278429144747534",
    "1693704404702877509412168993389266069802",
    "161126367639731598233871196432118911282",
    "18005776077133353205463338911377290952",
    "82198938820719635814731810508608755193",
    "144260954700182354451975829893886203342",
    "645265036815365122914294789311185308611",
    "4476668422759423175059472879592080690",
    "11871862499193808776481632744976382570",
    "154632036321720824021555629139300729764",
    "86133515756163850188547131179003511107",
    "99187325888965139953703604608646208691",
    "97892229237199250718782565098232937194",
    "37868078735602925891573318122962819320",
    "1578703703635175719018067387082881800385",
    "125312877505429677902664359715729802479",
    "632379827537218859118037651046044448068",
    "5667765796385169624800112337147502292",
    "366974912920839386515801963218903644372",
    "880099753416866301016817688796490528363",
    "893655551047304721011068898142380368208",
    "884246074448727927914595282961940941192",
    "975615807404907599012293873143289411403",
    "76512364011266228718507200393334295670",
    "465974363902275324511601404467167577535",
    "65680860371852405207943199749567864237",
    "65680860371852405207943199749567864237",
    "65680860371852405207943199749567864237",
    "65680860371852405207943199749567864237",
    "1479836840482223412412738961846764176164",
    "1479836840482223412412738961846764176164",
    "1479836840482223412412738961846764176164",
    "1479836840482223412412738961846764176164",
    "27547235193633795771352944920978011050",
    "97912592448095803783191936410021855138",
    "177777937819827061599787260682755551472",
    "1113032932815665948217565294476098756403",
    "41505289739977656509611396154325757795",
    "243931809744896974812513529918607549579",
    "1752989996936949203916036071159051010960",
    "478753423337745817613297159272845606672",
    "3658730781980743391697756456907208995",
    "176386771705132260856587306647620489942",
    "625849434625814717716494369484959093162",
    "1566168013061370513711054548557151263674",
    "1214574077763705187516383491048990527345",
    "132356016862926281278936911290964574083",
    "151465894222760985751884944789248963379",
    "123392787403333522114801427658681051416",
    "137638191651198256152934878091397323237",
    "135806336559256101731434353186885892188",
    "182556743662423241212881704630796135497",
    "187482952606822645712460029589708661523",
    "126818845945534382313624863669169238336",
    "17885338024940159556008007307872397104",
    "670549127685520545617164454934528456005",
    "1455939416681365858411630709201355813806",
    "1388218849702697856212194078385673197731",
    "18924474281332607947427114014473837479",
    "8856004213898147781592655248059949830",
    "52484146726792085015650297236694532260",
    "124710319586905057958318115364369969444",
    "148664112212318182776732958171872954842",
    "1750355678126651416552332776169498232",
    "449637264080571459055009589071427003",
    "73605271436615433592782990893848785911",
    "606068568314152626010609465835554653515",
    "198021199222547916510679953360118767895",
    "343543777264954666015176475421118852111",
    "118244003290815288914495201747486818093",
    "1113851568700768115714473351947246019071",
    "36551520253207181317413789877488899195",
    "157752022931090375414365432214032337958",
    "24082385461372069497351352971528272912",
    "7163171386125464284848219555395350090",
    "156990566658830322244938133405909457505",
    "152081625773734512188809835963169073905",
    "1665991053641465562917452155347167562743",
    "22541281049052359744737794208685719497",
    "483546792607859174915015273475929525259",
    "822913466203080985210091057110569120505",
    "127106506615149863615506906723828087755",
    "813368619794702869414005756234477751011",
    "1359933470730887149416155830775469624234",
    "6221193730529236286974262400784720417",
    "643776580154816945711014088420858857492",
    "3950425949359765709895334576670322983",
    "32193535572390591639577511843833454884",
    "117796122268892311417933652125854295320",
    "584251369828319344511576782102258559622",
    "95952545438214630049008831337488537058",
    "1255588593991484553510887419219121388458",
    "721454627489163086417151576011639811676",
    "352235677558234257217232571703558638049",
    "1154572394737250575415242991765632827266",
    "40947508042424112595929698982954618475",
    "118501765174283680933257604612445299020",
    "1176101146186992732014850296204176645847",
    "126588399837285095777894244485065348799",
    "8461645824146775363800011313758448934",
    "65529622751361832374440681269696012118",
    "710754756506940669613624793655219204199",
    "111248897496872265132132818070074848216",
    "527301041467884922111309565656307235599",
    "98672616218528724113768882390038008401",
    "154911443990380340341563367924870465980",
    "1737046666080539081914974966237099365643",
    "92658835324565758495130762072978604201",
    "606608081756831098117273329568996374994",
    "76610361547970390014041401956375253519",
    "739520556846959085018120036998133255835",
    "5533079644241704014802052529604371844",
    "101520258712339119345830936586852421312"
  ]
}
