{
  "file": "core/src/ptr/mod.rs",
  "name": "ptr::without_provenance_mut::<mem::maybe_uninit::MaybeUninit<char>>",
  "hash": "1557321461075645187711936516059816743993",
  "hash_direct": "611192463451927079813185698214464964405",
  "src": "pub const fn without_provenance_mut<T>(addr: usize) -> *mut T {\n    // An int-to-pointer transmute currently has exactly the intended semantics: it creates a\n    // pointer without provenance. Note that this is *not* a stable guarantee about transmute\n    // semantics, it relies on sysroot crates having special status.\n    // SAFETY: every valid integer is also a valid pointer (as long as you don't dereference that\n    // pointer).\n    unsafe { mem::transmute(addr) }\n}"
}
