{
  "file": "core/src/ptr/mod.rs",
  "name": "ptr::swap::<f64>",
  "hash": "104266011134410315695605741760968034877",
  "hash_direct": "112633293039728971019302314479058272804",
  "src": "pub const unsafe fn swap<T>(x: *mut T, y: *mut T) {\n    // Give ourselves some scratch space to work with.\n    // We do not have to worry about drops: `MaybeUninit` does nothing when dropped.\n    let mut tmp = MaybeUninit::<T>::uninit();\n\n    // Perform the swap\n    // SAFETY: the caller must guarantee that `x` and `y` are\n    // valid for writes and properly aligned. `tmp` cannot be\n    // overlapping either `x` or `y` because `tmp` was just allocated\n    // on the stack as a separate allocation.\n    unsafe {\n        copy_nonoverlapping(x, tmp.as_mut_ptr(), 1);\n        copy(y, x, 1); // `x` and `y` may overlap\n        copy_nonoverlapping(tmp.as_ptr(), y, 1);\n    }\n}",
  "callees": [
    "258820287469578611817448591488600041899",
    "588974892899239543415856878986124229421",
    "690438059002452523915046149102377829082",
    "17421822894816687532325615181214565887",
    "27480086118489678191003877857780025576",
    "23815256893174302637797703719499456373",
    "47704708250653028710044748737554169683",
    "3348037517594157114729719856894976905",
    "1442920482326666428518321051032822836575",
    "804598402694933531918117665828161454644",
    "176165298401429238401796992272150342130",
    "27143329980388801218198615083747125661",
    "872205114925099333011215560138034927031",
    "1749362715435459353511933873995340031229",
    "152957573567666139458051071799244237150",
    "1440311084109427911411767598402928151278",
    "110553296291267690486764538235023897629",
    "1095980910905451195915776472035072742717",
    "462846610869204213514639900340099405177",
    "83296026332579416941842209678709993328",
    "97892229237199250718782565098232937194",
    "37868078735602925891573318122962819320",
    "1578703703635175719018067387082881800385",
    "632379827537218859118037651046044448068",
    "1113032932815665948217565294476098756403",
    "41505289739977656509611396154325757795",
    "1752989996936949203916036071159051010960",
    "760723331888050409213108094994821248586",
    "478753423337745817613297159272845606672",
    "3658730781980743391697756456907208995",
    "176386771705132260856587306647620489942",
    "625849434625814717716494369484959093162",
    "1566168013061370513711054548557151263674",
    "187482952606822645712460029589708661523",
    "126818845945534382313624863669169238336",
    "140037284170250879412165657698016564751",
    "33667224288951003956713148699857240956",
    "166776697050612785113883264850514388619",
    "92293406756414262231157972400238103749",
    "739520556846959085018120036998133255835",
    "5533079644241704014802052529604371844",
    "101520258712339119345830936586852421312",
    "179112378572194142739537177584691521062"
  ]
}
