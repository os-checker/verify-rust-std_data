{
  "file": "core/src/ptr/mod.rs",
  "name": "ptr::read_unaligned::<core_simd::vector::Simd<u32, 4>>",
  "hash": "251689114754096559716336349558870245402",
  "hash_direct": "657668493057138370712282273103055366819",
  "src": "pub const unsafe fn read_unaligned<T>(src: *const T) -> T {\n    let mut tmp = MaybeUninit::<T>::uninit();\n    // SAFETY: the caller must guarantee that `src` is valid for reads.\n    // `src` cannot overlap `tmp` because `tmp` was just allocated on\n    // the stack as a separate allocation.\n    //\n    // Also, since we just wrote a valid value into `tmp`, it is guaranteed\n    // to be properly initialized.\n    unsafe {\n        copy_nonoverlapping(src as *const u8, tmp.as_mut_ptr() as *mut u8, size_of::<T>());\n        tmp.assume_init()\n    }\n}",
  "callees": [
    "258820287469578611817448591488600041899",
    "588974892899239543415856878986124229421",
    "690438059002452523915046149102377829082",
    "17421822894816687532325615181214565887",
    "27480086118489678191003877857780025576",
    "23815256893174302637797703719499456373",
    "1639190511405576016712069487289226138136",
    "154868915780749051023790251584872206921",
    "251859817082379636410784349375395446959",
    "62363903688588538981777844292134785785",
    "128359253902510359457031953806963668793",
    "5942213459910895889839086691014657659",
    "38217196742947992835679479997123307043",
    "110711658228240823719164193984150862591",
    "121097281700569241807917519510076722724",
    "1749362715435459353511933873995340031229",
    "824698057860634039216667043292814384158",
    "145260583857546744352679364306705014963",
    "141489593237085181002614656531811257408",
    "1173385422516551927711311891490318803699",
    "62587016874313131693329047355057219344",
    "124679516092357812428249133337169351543",
    "143572956432032064744447501745832117320",
    "137368381448604167703416046205455599816",
    "156396365605833484958181337486344432065",
    "761861023504359043615820998596748928032",
    "1113032932815665948217565294476098756403",
    "41505289739977656509611396154325757795",
    "1752989996936949203916036071159051010960",
    "760723331888050409213108094994821248586",
    "478753423337745817613297159272845606672",
    "3658730781980743391697756456907208995",
    "176386771705132260856587306647620489942",
    "24720139230274117689328858551755358968",
    "1566168013061370513711054548557151263674",
    "141433122914117816524202257424779410500",
    "873306393486058623313041519013619356135",
    "187482952606822645712460029589708661523",
    "126818845945534382313624863669169238336",
    "31656414362767519921773019768940498677",
    "309551626636328214318300020986955112360",
    "48269828393251912102754553129094534608",
    "74111286315405054421392461884745781298",
    "739520556846959085018120036998133255835",
    "71112245793085408723525187754979718597",
    "1217330957027791981411010835694243116934",
    "430944441469681173516867222861439884233"
  ]
}
