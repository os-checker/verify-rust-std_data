{
  "file": "core/src/ptr/mod.rs",
  "name": "ptr::read_volatile::<u128>",
  "hash": "143997647829786388204394581181057003998",
  "hash_direct": "1550795479227133431015808970839464126038",
  "src": "pub unsafe fn read_volatile<T>(src: *const T) -> T {\n    // SAFETY: the caller must uphold the safety contract for `volatile_load`.\n    unsafe {\n        ub_checks::assert_unsafe_precondition!(\n            check_language_ub,\n            \"ptr::read_volatile requires that the pointer argument is aligned\",\n            (\n                addr: *const () = src as *const (),\n                align: usize = align_of::<T>(),\n            ) => ub_checks::maybe_is_aligned(addr, align)\n        );\n        intrinsics::volatile_load(src)\n    }\n}",
  "callees": [
    "47323665595455568617290020941376774286",
    "1329845230409163288212548289525672875535",
    "16824420916691935049705640393259467449",
    "561445107989240208511361370086377379752",
    "1134967548078277990513150524236987299865",
    "1617054938297627622011998382328717871744",
    "1196638383615410162910723134175805433641",
    "841904668883726495316837415609641023349",
    "1258931108755458209614962827106116332072",
    "1243847030362955698517207199029174369810",
    "105125143701458073564296455695110349394",
    "25930241974724637292994171257021210872",
    "617554482545947003412104686554524783687",
    "1445917162577882149418297081791436471284",
    "9518583096418593288239042607314128600",
    "399232661239117480517401994520839366833",
    "165260604638305226342101042842060873588"
  ]
}
