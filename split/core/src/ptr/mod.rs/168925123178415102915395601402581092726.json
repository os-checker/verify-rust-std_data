{
  "file": "core/src/ptr/mod.rs",
  "name": "ptr::swap::<f32>",
  "hash": "168925123178415102915395601402581092726",
  "hash_direct": "783661011266346902711919412966951688678",
  "src": "pub const unsafe fn swap<T>(x: *mut T, y: *mut T) {\n    // Give ourselves some scratch space to work with.\n    // We do not have to worry about drops: `MaybeUninit` does nothing when dropped.\n    let mut tmp = MaybeUninit::<T>::uninit();\n\n    // Perform the swap\n    // SAFETY: the caller must guarantee that `x` and `y` are\n    // valid for writes and properly aligned. `tmp` cannot be\n    // overlapping either `x` or `y` because `tmp` was just allocated\n    // on the stack as a separate allocation.\n    unsafe {\n        copy_nonoverlapping(x, tmp.as_mut_ptr(), 1);\n        copy(y, x, 1); // `x` and `y` may overlap\n        copy_nonoverlapping(tmp.as_ptr(), y, 1);\n    }\n}",
  "callees": [
    "47323665595455568617290020941376774286",
    "111425599901702694743874629435682172347",
    "714811817540972740211524868124730226803",
    "1329845230409163288212548289525672875535",
    "109763229663154342343123224747831634619",
    "16824420916691935049705640393259467449",
    "561445107989240208511361370086377379752",
    "161225022469363908823200354701136905531",
    "15595476217829626159748088499522012443",
    "187657906768529568910110303863315573622",
    "1414506200255836806515357035093549744748",
    "42378138817949430056736156431645255910",
    "135598008489588662314776882657014310925",
    "1067675883129992420314174327751912045205",
    "79307503347131170578315604022567527135",
    "1160150031813070275716801291559951969968",
    "45465200458951020712268855471874148461",
    "10276831356989197177291225683156882265",
    "145583995108105043133401862026582368143",
    "8850644696306119287964523545649044939",
    "841346702487865802717731804342903065853",
    "1617054938297627622011998382328717871744",
    "1196638383615410162910723134175805433641",
    "26064680123257945312537992217601395168",
    "841904668883726495316837415609641023349",
    "1258931108755458209614962827106116332072",
    "1243847030362955698517207199029174369810",
    "380262551218047276514654482281297551654",
    "105125143701458073564296455695110349394",
    "25930241974724637292994171257021210872",
    "617554482545947003412104686554524783687",
    "1445917162577882149418297081791436471284",
    "849628185942532211610194183090257053256",
    "703663108277374327010040438608357482834",
    "1100495660517602822510660091708953776518",
    "15079626449537338615768363195140101085",
    "127996716050881673667025817820463335062",
    "1833648891477721821513278565533866774739",
    "153999075255816246604435272140943255557",
    "399232661239117480517401994520839366833",
    "165260604638305226342101042842060873588",
    "34478597508049401479557782585707843723",
    "15859584444614920947579563356650829639"
  ]
}
