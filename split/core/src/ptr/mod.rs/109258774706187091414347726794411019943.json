{
  "file": "core/src/ptr/mod.rs",
  "name": "core::ptr::swap::<u32>",
  "hash": "109258774706187091414347726794411019943",
  "hash_direct": "62876743427772714769325090409335787524",
  "src": "pub const unsafe fn swap<T>(x: *mut T, y: *mut T) {\n    // Give ourselves some scratch space to work with.\n    // We do not have to worry about drops: `MaybeUninit` does nothing when dropped.\n    let mut tmp = MaybeUninit::<T>::uninit();\n\n    // Perform the swap\n    // SAFETY: the caller must guarantee that `x` and `y` are\n    // valid for writes and properly aligned. `tmp` cannot be\n    // overlapping either `x` or `y` because `tmp` was just allocated\n    // on the stack as a separate allocation.\n    unsafe {\n        copy_nonoverlapping(x, tmp.as_mut_ptr(), 1);\n        copy(y, x, 1); // `x` and `y` may overlap\n        copy_nonoverlapping(tmp.as_ptr(), y, 1);\n    }\n}",
  "callees": [
    "12281449246394340237926324936375242532",
    "99835071136844477394667148890151411684",
    "73694171442177138896992135977130617471",
    "181267529910573756716102767087485333561",
    "79817071675776388295206212610749591701",
    "1824545319189397521315695847785602896178",
    "1022803319099694746713266409355997953681",
    "489523557192025460313854164093687544855",
    "158840011435539475233121972523613184115",
    "41523493512793722639005276392315139089",
    "564160948613505472115081632567701989419",
    "857703537816248763415594287269520218893",
    "55761216241652814815946828153974500326",
    "149201007125728463455320865149411692001",
    "50732326018270804158617132727999669219",
    "280432584315771372815037115035770855991",
    "112886468787774265616636362149708028018",
    "62127822181510782405608732116999447182",
    "1578257332020894271617658554056373986878",
    "896899668436043458214649410678042895693",
    "17976542625295060605041426324269334020",
    "897265533945643607115272871669854221703",
    "89502211078669479795623704974378882516",
    "8010637041282557608011263416999007001",
    "986792852990965178117440249555081278778",
    "90818112465881722349174357944217011292",
    "146612017564224181584303574960223420416",
    "1357412281760869556115161719233556173642",
    "63085389524472853348886374617170044294",
    "175623961004431005849298709567805707658",
    "33067340742295788584221598515845050786",
    "20743252454400330067347997888777335224",
    "181953690662554297912505335505865467275",
    "1793681111599931821712213635413918902143",
    "55408212128999564608147158566316072753",
    "1736245659555731717411912282067178059119",
    "15221828462408900694853588223232628931",
    "18333082938164057630130824807004532935",
    "1541244257719416772015809458540672325775",
    "112989397975222255532054380452996322405",
    "597683522621928614711119364722938279780",
    "17341452779707394601695269753709495351",
    "3350507075784427095714977029030110780"
  ]
}
