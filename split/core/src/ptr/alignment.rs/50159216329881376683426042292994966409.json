{
  "file": "core/src/ptr/alignment.rs",
  "name": "core::ptr::Alignment::as_nonzero",
  "hash": "50159216329881376683426042292994966409",
  "hash_direct": "86191379006840572654265384708980133348",
  "src": "pub const fn as_nonzero(self) -> NonZero<usize> {\n        // This transmutes directly to avoid the UbCheck in `NonZero::new_unchecked`\n        // since there's no way for the user to trip that check anyway -- the\n        // validity invariant of the type would have to have been broken earlier --\n        // and emitting it in an otherwise simple method is bad for compile time.\n\n        // SAFETY: All the discriminants are non-zero.\n        unsafe { mem::transmute::<Alignment, NonZero<usize>>(self) }\n    }"
}
