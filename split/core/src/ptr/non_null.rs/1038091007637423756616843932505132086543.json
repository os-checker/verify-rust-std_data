{
  "file": "core/src/ptr/non_null.rs",
  "name": "ptr::non_null::NonNull::<u8>::offset",
  "hash": "1038091007637423756616843932505132086543",
  "hash_direct": "14450026005716839157857612354776023936",
  "src": "pub const unsafe fn offset(self, count: isize) -> Self\n    where\n        T: Sized,\n    {\n        // SAFETY: the caller must uphold the safety contract for `offset`.\n        // Additionally safety contract of `offset` guarantees that the resulting pointer is\n        // pointing to an allocation, there can't be an allocation at null, thus it's safe to\n        // construct `NonNull`.\n        unsafe { NonNull { pointer: intrinsics::offset(self.as_ptr(), count) } }\n    }",
  "callees": [
    "1028023859496283824714006082102994000183"
  ]
}
