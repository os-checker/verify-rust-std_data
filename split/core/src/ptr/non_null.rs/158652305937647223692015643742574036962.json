{
  "file": "core/src/ptr/non_null.rs",
  "name": "core::ptr::NonNull::<(u8, u8)>::add",
  "hash": "158652305937647223692015643742574036962",
  "hash_direct": "39972026319404306777788252509422185786",
  "src": "pub const unsafe fn add(self, count: usize) -> Self\n    where\n        T: Sized,\n    {\n        // SAFETY: the caller must uphold the safety contract for `offset`.\n        // Additionally safety contract of `offset` guarantees that the resulting pointer is\n        // pointing to an allocation, there can't be an allocation at null, thus it's safe to\n        // construct `NonNull`.\n        unsafe { NonNull { pointer: intrinsics::offset(self.as_ptr(), count) } }\n    }",
  "callees": [
    "89872809335688134095050063870807539737"
  ]
}
