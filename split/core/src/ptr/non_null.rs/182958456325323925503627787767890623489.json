{
  "file": "core/src/ptr/non_null.rs",
  "name": "ptr::non_null::verify::non_null_check_get_unchecked_mut",
  "hash": "182958456325323925503627787767890623489",
  "hash_direct": "1344706054922490137516629667999625650913",
  "proof_kind": "Contract",
  "attrs": [
    "#[kanitool::proof_for_contract = \"NonNull::get_unchecked_mut\"]\n"
  ],
  "src": "pub fn non_null_check_get_unchecked_mut() {\n        const ARR_SIZE: usize = 100000;\n        let mut arr: [i32; ARR_SIZE] = kani::any();\n        let raw_ptr = arr.as_mut_ptr();\n        let ptr = NonNull::slice_from_raw_parts(NonNull::new(raw_ptr).unwrap(), ARR_SIZE);\n        let lower = kani::any_where(|x| *x < ARR_SIZE);\n        let upper = kani::any_where(|x| *x < ARR_SIZE && *x >= lower);\n        unsafe {\n            // NOTE: The `index` parameter cannot be used in the function contracts without being moved.\n            // Since the `SliceIndex` trait does not guarantee that `index` implements `Clone` or `Copy`,\n            // it cannot be reused after being consumed in the precondition. To comply with Rust's ownership\n            // rules and ensure `index` is only used once, the in-bounds check is moved to the proof harness\n            // as a workaround.\n            kani::assume(ptr.as_ref().get(lower..upper).is_some());\n            let _ = ptr.get_unchecked_mut(lower..upper);\n        }\n    }",
  "callees": [
    "720924419241648690510727361160811401375",
    "1710170998584156492017283641867472392767",
    "76761090215908344506703874042953626591",
    "1547323977954885404910752239896415591974",
    "676594893167750029674675994873601668",
    "113491588365793266817891648718126780380",
    "58967029464039823341681724273568168015",
    "826776783017468101310579743103719137160",
    "922769847879289423412024339738364071122",
    "124948020053369664419366067805007145341",
    "139704976908753389291209564980972955015",
    "7526082995824335814466973137466280467",
    "31225490295094512264932949626563972559",
    "108393381985250317406898676759665844160",
    "258820287469578611817448591488600041899",
    "17421822894816687532325615181214565887",
    "27480086118489678191003877857780025576",
    "23815256893174302637797703719499456373",
    "979090888644938360611991061608854301815",
    "139237526776079732255690110796954221569",
    "897287110021663592612538707908788163482",
    "1262555611173615611410428101371636009066",
    "1113032932815665948217565294476098756403",
    "41505289739977656509611396154325757795",
    "243931809744896974812513529918607549579",
    "1752989996936949203916036071159051010960",
    "478753423337745817613297159272845606672",
    "1566168013061370513711054548557151263674",
    "1516454876270409912713376855283921391543",
    "187482952606822645712460029589708661523",
    "126818845945534382313624863669169238336",
    "183970204838252865662700506683004535478",
    "121309481160553260308674449689374703163",
    "458532129538008506116048098503759376237",
    "930685400600698255811455844132428815046",
    "743780844851774567415985775291262958279",
    "482056402648782205412812088055068680374",
    "1414489663169601431817078230667480122351",
    "929185057311037620917811927065815442430",
    "273415576575767061110563276965785236574",
    "1175633200170788755716696341971384813795",
    "76622831520453128806684417801178317003",
    "232043338475100759011763509409464221783",
    "14239221793302780732923063677275680805",
    "66160335692342219277993125043173195413",
    "1461629957886705831014516675676431993580",
    "1248523668675078374717473437136873169174",
    "1232927562725058291918355216958965360189",
    "124209645346002752833354852998142691349",
    "514317363501358731013549272609945930476",
    "3664062476470074255513508799377495245",
    "814227270238681550510675145963683268654",
    "196852559528373082612644120115197915929",
    "119771574122182499334037490426891107222",
    "121060820610680035284559507951674585741",
    "35459883143199083147287879953238509768",
    "470885329410868176212887968287041249685",
    "84580457401506839910573102725714505987",
    "167939604866748006313525850626472801917",
    "739520556846959085018120036998133255835"
  ]
}
