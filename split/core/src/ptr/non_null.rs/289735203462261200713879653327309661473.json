{
  "file": "core/src/ptr/non_null.rs",
  "name": "ptr::non_null::verify::non_null_check_get_unchecked_mut",
  "hash": "289735203462261200713879653327309661473",
  "hash_direct": "1344706054922490137516629667999625650913",
  "proof_kind": "\"Contract\"",
  "attrs": [
    "#[kanitool::proof_for_contract = \"NonNull::get_unchecked_mut\"]\n"
  ],
  "src": "pub fn non_null_check_get_unchecked_mut() {\n        const ARR_SIZE: usize = 100000;\n        let mut arr: [i32; ARR_SIZE] = kani::any();\n        let raw_ptr = arr.as_mut_ptr();\n        let ptr = NonNull::slice_from_raw_parts(NonNull::new(raw_ptr).unwrap(), ARR_SIZE);\n        let lower = kani::any_where(|x| *x < ARR_SIZE);\n        let upper = kani::any_where(|x| *x < ARR_SIZE && *x >= lower);\n        unsafe {\n            // NOTE: The `index` parameter cannot be used in the function contracts without being moved.\n            // Since the `SliceIndex` trait does not guarantee that `index` implements `Clone` or `Copy`,\n            // it cannot be reused after being consumed in the precondition. To comply with Rust's ownership\n            // rules and ensure `index` is only used once, the in-bounds check is moved to the proof harness\n            // as a workaround.\n            kani::assume(ptr.as_ref().get(lower..upper).is_some());\n            let _ = ptr.get_unchecked_mut(lower..upper);\n        }\n    }",
  "callees": [
    "608123659477873841214510716925270316648",
    "1316425106296755474714897791093944402596",
    "306459423763459115515352307666540674473",
    "55747166287866619138894082608150645651",
    "99179980972696366624728020086317396270",
    "12523065385450334584774763099255662860",
    "2633999102354846543247381210715053491",
    "940250525962090252914117803890597989072",
    "657269988137284078113242298802163812913",
    "1375839429946150505416226028939929469990",
    "162562988142812920362309614379838072419",
    "55268624181377464941500382738073713012",
    "106864382714117244315547705687195110752",
    "22860541058604836916644685381819606237",
    "47323665595455568617290020941376774286",
    "1329845230409163288212548289525672875535",
    "109763229663154342343123224747831634619",
    "16824420916691935049705640393259467449",
    "290360310864386898714327273451929980463",
    "124293052188956903633339690279902770333",
    "136832906299179496051827901554308510371",
    "90154399545981751929034700539601653658",
    "841904668883726495316837415609641023349",
    "1258931108755458209614962827106116332072",
    "53589810041120365110998933211304468616",
    "1243847030362955698517207199029174369810",
    "105125143701458073564296455695110349394",
    "849628185942532211610194183090257053256",
    "117408581369700248685142802538449566866",
    "703663108277374327010040438608357482834",
    "1100495660517602822510660091708953776518",
    "163321727604325922103765360741091696810",
    "997556463317872821012132728204291489343",
    "157684185225475350715463725181517238033",
    "107084634605751337355226681115384506900",
    "163590473908140416509402266632539412951",
    "901871611068822256914529678435336177549",
    "1789419011479859220613238014320421113773",
    "737723069134448307749868551663447127",
    "149627099328129153403599654871524767046",
    "1687896361739009485616076219097888819004",
    "180839006106486390683485086636636812572",
    "64400829026308396644117977647298017775",
    "81144060164326886979991108516858151867",
    "654722581537979033218234454845655207535",
    "1055363879325365064315508618429452442026",
    "66641183364798998117636454762623096696",
    "498837923976437912810175133536107162504",
    "1527994364942282963213070421734265722694",
    "592194300080675732513164142911559233171",
    "1296880612299326941913754852500693279172",
    "1455859936737112518915880496046776808964",
    "111962832435854742579009247181190571267",
    "877420362055784337516535657882544278807",
    "16978760133932629495917889003694240106",
    "94092557784230646527712182769177119610",
    "117397458394368263313311747381154694649",
    "109562649191060178038182565159088266799",
    "1203205301171982234518130695831495293328",
    "399232661239117480517401994520839366833"
  ]
}
