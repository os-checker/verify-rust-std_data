{
  "file": "core/src/ptr/non_null.rs",
  "name": "ptr::non_null::NonNull::<u32>::add",
  "hash": "286293591795113710217346735846798360237",
  "hash_direct": "61836856970236004641810502337223174198",
  "src": "pub const unsafe fn add(self, count: usize) -> Self\n    where\n        T: Sized,\n    {\n        // SAFETY: the caller must uphold the safety contract for `offset`.\n        // Additionally safety contract of `offset` guarantees that the resulting pointer is\n        // pointing to an allocation, there can't be an allocation at null, thus it's safe to\n        // construct `NonNull`.\n        unsafe { NonNull { pointer: intrinsics::offset(self.as_ptr(), count) } }\n    }",
  "callees": [
    "1060448573230263915014803683681339895296"
  ]
}
