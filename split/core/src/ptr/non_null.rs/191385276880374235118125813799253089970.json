{
  "file": "core/src/ptr/non_null.rs",
  "name": "core::ptr::NonNull::<bool>::add",
  "hash": "191385276880374235118125813799253089970",
  "hash_direct": "56674059286258835416285546119285156262",
  "src": "pub const unsafe fn add(self, count: usize) -> Self\n    where\n        T: Sized,\n    {\n        // SAFETY: the caller must uphold the safety contract for `offset`.\n        // Additionally safety contract of `offset` guarantees that the resulting pointer is\n        // pointing to an allocation, there can't be an allocation at null, thus it's safe to\n        // construct `NonNull`.\n        unsafe { NonNull { pointer: intrinsics::offset(self.as_ptr(), count) } }\n    }",
  "callees": [
    "1667682298606969734812723438031418873420"
  ]
}
