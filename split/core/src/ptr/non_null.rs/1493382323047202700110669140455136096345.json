{
  "file": "core/src/ptr/non_null.rs",
  "name": "ptr::non_null::NonNull::<(char, u8)>::sub",
  "hash": "1493382323047202700110669140455136096345",
  "hash_direct": "1235142658174042126917151540363172023039",
  "src": "pub const unsafe fn sub(self, count: usize) -> Self\n    where\n        T: Sized,\n    {\n        if T::IS_ZST {\n            // Pointer arithmetic does nothing when the pointee is a ZST.\n            self\n        } else {\n            // SAFETY: the caller must uphold the safety contract for `offset`.\n            // Because the pointee is *not* a ZST, that means that `count` is\n            // at most `isize::MAX`, and thus the negation cannot overflow.\n            unsafe { self.offset((count as isize).unchecked_neg()) }\n        }\n    }",
  "callees": [
    "258820287469578611817448591488600041899",
    "588974892899239543415856878986124229421",
    "690438059002452523915046149102377829082",
    "17421822894816687532325615181214565887",
    "23815256893174302637797703719499456373",
    "153380105951445071398010207846457168641",
    "34406283556650756559915574730829163350",
    "1113032932815665948217565294476098756403",
    "41505289739977656509611396154325757795",
    "478753423337745817613297159272845606672",
    "416840175099677302012350366025939820227",
    "163495454126198687108006090946207494756",
    "168503001671177803527283064745478359906",
    "739520556846959085018120036998133255835"
  ]
}
