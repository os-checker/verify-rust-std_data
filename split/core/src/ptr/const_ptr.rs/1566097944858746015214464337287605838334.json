{
  "file": "core/src/ptr/const_ptr.rs",
  "name": "ptr::const_ptr::verify::check_const_add_slice_usize",
  "hash": "1566097944858746015214464337287605838334",
  "hash_direct": "883661777502389851616207602871310266023",
  "proof_kind": "\"Contract\"",
  "attrs": [
    "#[kanitool::proof_for_contract = \"< * const usize > :: add\"]\n"
  ],
  "src": "fn $proof_name() {\n                let arr: [$ty; ARRAY_SIZE] = kani::Arbitrary::any_array();\n                let test_ptr: *const $ty = arr.as_ptr();\n                let offset: usize = kani::any();\n                kani::assume(offset <= ARRAY_SIZE * mem::size_of::<$ty>());\n                let ptr_with_offset: *const $ty = test_ptr.wrapping_byte_add(offset);\n\n                let count: $count_ty = kani::any();\n                unsafe {\n                    ptr_with_offset.$fn_name(count);\n                }\n            }",
  "macro_backtrace": [
    {
      "callsite": "generate_single_slice_harness!($ty, $add_fn_name, add, usize)",
      "defsite": "macro_rules! generate_single_slice_harness {\n        ($ty:ty, $proof_name:ident, $fn_name:ident, $count_ty:ty) => {\n            #[kani::proof_for_contract(<*const $ty>::$fn_name)]\n            fn $proof_name() {\n                let arr: [$ty; ARRAY_SIZE] = kani::Arbitrary::any_array();\n                let test_ptr: *const $ty = arr.as_ptr();\n                let offset: usize = kani::any();\n                kani::assume(offset <= ARRAY_SIZE * mem::size_of::<$ty>());\n                let ptr_with_offset: *const $ty = test_ptr.wrapping_byte_add(offset);\n\n                let count: $count_ty = kani::any();\n                unsafe {\n                    ptr_with_offset.$fn_name(count);\n                }\n            }\n        };\n    }"
    },
    {
      "callsite": "generate_slice_harnesses!(\n        usize,\n        check_const_add_slice_usize,\n        check_const_sub_slice_usize,\n        check_const_offset_slice_usize\n    )",
      "defsite": "macro_rules! generate_slice_harnesses {\n        ($ty:ty, $add_fn_name:ident, $sub_fn_name:ident, $offset_fn_name:ident) => {\n            generate_single_slice_harness!($ty, $add_fn_name, add, usize);\n            generate_single_slice_harness!($ty, $sub_fn_name, sub, usize);\n            generate_single_slice_harness!($ty, $offset_fn_name, offset, isize);\n        };\n    }"
    }
  ],
  "callees": [
    "306459423763459115515352307666540674473",
    "115875024902560781845283418619545004433",
    "1221265949630586294716386477749978237909",
    "125668371251998407573525970671331798348",
    "12523065385450334584774763099255662860",
    "17153754857054939517470825019637308992",
    "940250525962090252914117803890597989072",
    "162562988142812920362309614379838072419",
    "55268624181377464941500382738073713012",
    "1367540701080028155715813334226639914382",
    "22860541058604836916644685381819606237",
    "47323665595455568617290020941376774286",
    "111425599901702694743874629435682172347",
    "714811817540972740211524868124730226803",
    "1329845230409163288212548289525672875535",
    "80772345035046942210372022594843481570",
    "16824420916691935049705640393259467449",
    "1067675883129992420314174327751912045205",
    "841346702487865802717731804342903065853",
    "1182371843420022111010336901757313084440",
    "26064680123257945312537992217601395168",
    "841904668883726495316837415609641023349",
    "1258931108755458209614962827106116332072",
    "105125143701458073564296455695110349394",
    "25930241974724637292994171257021210872",
    "617554482545947003412104686554524783687",
    "152018209062913109616942758022114057971",
    "87889898950220389731790959289565225050",
    "135504866322984926684773548751465922974",
    "9967240457479057389968263901254034335",
    "104831405656903467145249333363974848645",
    "1788767429805974375811922794362527318527",
    "167406278199840729834050298708340482124",
    "43073041154037685343514965167676033757",
    "143494476354928505847543722068638974639",
    "1809343474275607681211888501461793289939",
    "7839859953712079114640771271960005865",
    "399232661239117480517401994520839366833"
  ]
}
