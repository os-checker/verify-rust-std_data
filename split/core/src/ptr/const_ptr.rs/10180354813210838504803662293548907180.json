{
  "file": "core/src/ptr/const_ptr.rs",
  "name": "ptr::const_ptr::verify::check_const_add_slice_u64",
  "hash": "10180354813210838504803662293548907180",
  "hash_direct": "1403970102696327577913948416254091381452",
  "proof_kind": "Contract",
  "attrs": [
    "#[kanitool::proof_for_contract = \"< * const u64 > :: add\"]\n"
  ],
  "src": "fn $proof_name() {\n                let arr: [$ty; ARRAY_SIZE] = kani::Arbitrary::any_array();\n                let test_ptr: *const $ty = arr.as_ptr();\n                let offset: usize = kani::any();\n                kani::assume(offset <= ARRAY_SIZE * mem::size_of::<$ty>());\n                let ptr_with_offset: *const $ty = test_ptr.wrapping_byte_add(offset);\n\n                let count: $count_ty = kani::any();\n                unsafe {\n                    ptr_with_offset.$fn_name(count);\n                }\n            }",
  "macro_backtrace": [
    {
      "callsite": "generate_single_slice_harness!($ty, $add_fn_name, add, usize)",
      "defsite": "macro_rules! generate_single_slice_harness {\n        ($ty:ty, $proof_name:ident, $fn_name:ident, $count_ty:ty) => {\n            #[kani::proof_for_contract(<*const $ty>::$fn_name)]\n            fn $proof_name() {\n                let arr: [$ty; ARRAY_SIZE] = kani::Arbitrary::any_array();\n                let test_ptr: *const $ty = arr.as_ptr();\n                let offset: usize = kani::any();\n                kani::assume(offset <= ARRAY_SIZE * mem::size_of::<$ty>());\n                let ptr_with_offset: *const $ty = test_ptr.wrapping_byte_add(offset);\n\n                let count: $count_ty = kani::any();\n                unsafe {\n                    ptr_with_offset.$fn_name(count);\n                }\n            }\n        };\n    }"
    },
    {
      "callsite": "generate_slice_harnesses!(\n        u64,\n        check_const_add_slice_u64,\n        check_const_sub_slice_u64,\n        check_const_offset_slice_u64\n    )",
      "defsite": "macro_rules! generate_slice_harnesses {\n        ($ty:ty, $add_fn_name:ident, $sub_fn_name:ident, $offset_fn_name:ident) => {\n            generate_single_slice_harness!($ty, $add_fn_name, add, usize);\n            generate_single_slice_harness!($ty, $sub_fn_name, sub, usize);\n            generate_single_slice_harness!($ty, $offset_fn_name, offset, isize);\n        };\n    }"
    }
  ],
  "callees": [
    "69295075737609566061108776665545376791",
    "76761090215908344506703874042953626591",
    "1194204153753465304412874113805257013333",
    "95629802441098677209893367669876337666",
    "113491588365793266817891648718126780380",
    "58868017904587438857431689539175255469",
    "826776783017468101310579743103719137160",
    "139704976908753389291209564980972955015",
    "7526082995824335814466973137466280467",
    "41258662346982657166624146552985353254",
    "108393381985250317406898676759665844160",
    "258820287469578611817448591488600041899",
    "588974892899239543415856878986124229421",
    "690438059002452523915046149102377829082",
    "17421822894816687532325615181214565887",
    "313288670142853245916792507642081759284",
    "23815256893174302637797703719499456373",
    "97524482424029537145306757146156791937",
    "143572956432032064744447501745832117320",
    "13303575705867660165971022725037666878",
    "761861023504359043615820998596748928032",
    "1113032932815665948217565294476098756403",
    "41505289739977656509611396154325757795",
    "478753423337745817613297159272845606672",
    "3658730781980743391697756456907208995",
    "176386771705132260856587306647620489942",
    "375960559020688079617955032586718986019",
    "1565202473984474961712867631319207512279",
    "1400620347012318184910317531196808658935",
    "108264458219115549511968758361550458673",
    "175733873161562144416033424303648683142",
    "813578382545998277312366744418950688761",
    "3158087186225067104207623212949621094",
    "183796488381196601042956848547947543743",
    "1541249736944875618911621379220443407967",
    "264680247558426853713849815515070475645",
    "1006928117247909106515604664996585110540",
    "739520556846959085018120036998133255835"
  ]
}
