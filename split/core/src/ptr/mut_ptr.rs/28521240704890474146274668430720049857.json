{
  "file": "core/src/ptr/mut_ptr.rs",
  "name": "ptr::mut_ptr::<impl *mut i32>::with_addr",
  "hash": "28521240704890474146274668430720049857",
  "hash_direct": "13158084919576618853296586859524617906",
  "src": "pub fn with_addr(self, addr: usize) -> Self {\n        // This should probably be an intrinsic to avoid doing any sort of arithmetic, but\n        // meanwhile, we can implement it with `wrapping_offset`, which preserves the pointer's\n        // provenance.\n        let self_addr = self.addr() as isize;\n        let dest_addr = addr as isize;\n        let offset = dest_addr.wrapping_sub(self_addr);\n        self.wrapping_byte_offset(offset)\n    }",
  "callees": [
    "1660513410314982984011153915826543479765",
    "163829404338105344486852535059978827066",
    "186350813707381785911655087444793148868",
    "761788202660879729815065994718066294702",
    "139336577551586367132829990743408454519",
    "1681451264658735685216665921596276152616",
    "92420249682706109048063353767724464477",
    "6703456383706382083439123557535166585",
    "55877309556757442307404205786412250797"
  ]
}
