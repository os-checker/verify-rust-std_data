{
  "file": "core/src/ptr/mut_ptr.rs",
  "name": "ptr::mut_ptr::<impl *mut ()>::addr",
  "hash": "114094904968422577324113150898770820303",
  "hash_direct": "78099258764429411395020288091501105996",
  "src": "pub fn addr(self) -> usize {\n        // A pointer-to-integer transmute currently has exactly the right semantics: it returns the\n        // address without exposing the provenance. Note that this is *not* a stable guarantee about\n        // transmute semantics, it relies on sysroot crates having special status.\n        // SAFETY: Pointer-to-integer transmutes are valid (if you are okay with losing the\n        // provenance).\n        unsafe { mem::transmute(self.cast::<()>()) }\n    }",
  "callees": [
    "1362358863161692250215592468137871508810"
  ]
}
