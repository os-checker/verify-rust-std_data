{
  "file": "core/src/ops/range.rs",
  "name": "<ops::range::RangeInclusive<u32> as ops::range::RangeBounds<u32>>::end_bound",
  "hash": "791415920025272788117931004762162603775",
  "hash_direct": "471874146125439641117539680722348976357",
  "src": "fn end_bound(&self) -> Bound<&T> {\n        if self.exhausted {\n            // When the iterator is exhausted, we usually have start == end,\n            // but we want the range to appear empty, containing nothing.\n            Excluded(&self.end)\n        } else {\n            Included(&self.end)\n        }\n    }"
}
