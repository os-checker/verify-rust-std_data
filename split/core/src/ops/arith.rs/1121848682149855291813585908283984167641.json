{
  "file": "core/src/ops/arith.rs",
  "name": "<u8 as ops::arith::DivAssign>::div_assign",
  "hash": "1121848682149855291813585908283984167641",
  "hash_direct": "1441523238903899927814363689963621865003",
  "src": "fn div_assign(&mut self, other: $t) { *self /= other }",
  "macro_backtrace": [
    {
      "callsite": "div_assign_impl! { usize u8 u16 u32 u64 u128 isize i8 i16 i32 i64 i128 f16 f32 f64 f128 }",
      "defsite": "macro_rules! div_assign_impl {\n    ($($t:ty)+) => ($(\n        #[stable(feature = \"op_assign_traits\", since = \"1.8.0\")]\n        #[rustc_const_unstable(feature = \"const_ops\", issue = \"143802\")]\n        impl const DivAssign for $t {\n            #[inline]\n            #[track_caller]\n            fn div_assign(&mut self, other: $t) { *self /= other }\n        }\n\n        forward_ref_op_assign! { impl DivAssign, div_assign for $t, $t,\n        #[stable(feature = \"op_assign_builtins_by_ref\", since = \"1.22.0\")]\n        #[rustc_const_unstable(feature = \"const_ops\", issue = \"143802\")] }\n    )+)\n}"
    }
  ]
}
