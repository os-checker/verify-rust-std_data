{
  "file": "core/src/ops/bit.rs",
  "name": "<i64 as ops::bit::BitAnd>::bitand",
  "hash": "177610250858394772603635470958035239033",
  "hash_direct": "84975962282956876548887440046961731758",
  "src": "fn bitand(self, rhs: $t) -> $t { self & rhs }",
  "macro_backtrace": [
    {
      "callsite": "bitand_impl! { bool usize u8 u16 u32 u64 u128 isize i8 i16 i32 i64 i128 }",
      "defsite": "macro_rules! bitand_impl {\n    ($($t:ty)*) => ($(\n        #[stable(feature = \"rust1\", since = \"1.0.0\")]\n        impl BitAnd for $t {\n            type Output = $t;\n\n            #[inline]\n            fn bitand(self, rhs: $t) -> $t { self & rhs }\n        }\n\n        forward_ref_binop! { impl BitAnd, bitand for $t, $t }\n    )*)\n}"
    }
  ]
}
