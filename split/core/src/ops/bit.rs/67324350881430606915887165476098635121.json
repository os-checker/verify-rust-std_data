{
  "file": "core/src/ops/bit.rs",
  "name": "<u64 as ops::bit::ShlAssign>::shl_assign",
  "hash": "67324350881430606915887165476098635121",
  "hash_direct": "152389357775867300659799201933754620507",
  "src": "fn shl_assign(&mut self, other: $f) {\n                *self <<= other\n            }",
  "macro_backtrace": [
    {
      "callsite": "shl_assign_impl! { $t, u64 }",
      "defsite": "macro_rules! shl_assign_impl {\n    ($t:ty, $f:ty) => {\n        #[stable(feature = \"op_assign_traits\", since = \"1.8.0\")]\n        impl ShlAssign<$f> for $t {\n            #[inline]\n            #[rustc_inherit_overflow_checks]\n            fn shl_assign(&mut self, other: $f) {\n                *self <<= other\n            }\n        }\n\n        forward_ref_op_assign! { impl ShlAssign, shl_assign for $t, $f }\n    };\n}"
    },
    {
      "callsite": "shl_assign_impl_all! { u8 u16 u32 u64 u128 usize i8 i16 i32 i64 i128 isize }",
      "defsite": "macro_rules! shl_assign_impl_all {\n    ($($t:ty)*) => ($(\n        shl_assign_impl! { $t, u8 }\n        shl_assign_impl! { $t, u16 }\n        shl_assign_impl! { $t, u32 }\n        shl_assign_impl! { $t, u64 }\n        shl_assign_impl! { $t, u128 }\n        shl_assign_impl! { $t, usize }\n\n        shl_assign_impl! { $t, i8 }\n        shl_assign_impl! { $t, i16 }\n        shl_assign_impl! { $t, i32 }\n        shl_assign_impl! { $t, i64 }\n        shl_assign_impl! { $t, i128 }\n        shl_assign_impl! { $t, isize }\n    )*)\n}"
    }
  ]
}
