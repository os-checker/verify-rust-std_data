{
  "file": "core/src/ops/bit.rs",
  "name": "<u16 as ops::bit::BitAndAssign>::bitand_assign",
  "hash": "18072895319680139826890098397848867663",
  "hash_direct": "1586149497538977259916198348308292721367",
  "src": "fn bitand_assign(&mut self, other: $t) { *self &= other }",
  "macro_backtrace": [
    {
      "callsite": "bitand_assign_impl! { bool usize u8 u16 u32 u64 u128 isize i8 i16 i32 i64 i128 }",
      "defsite": "macro_rules! bitand_assign_impl {\n    ($($t:ty)+) => ($(\n        #[stable(feature = \"op_assign_traits\", since = \"1.8.0\")]\n        impl BitAndAssign for $t {\n            #[inline]\n            fn bitand_assign(&mut self, other: $t) { *self &= other }\n        }\n\n        forward_ref_op_assign! { impl BitAndAssign, bitand_assign for $t, $t }\n    )+)\n}"
    }
  ]
}
