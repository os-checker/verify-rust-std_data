{
  "file": "core/src/ops/bit.rs",
  "name": "<i64 as ops::bit::BitOrAssign>::bitor_assign",
  "hash": "152021507572025898891965891497268639569",
  "hash_direct": "48215508088372634049010610084664195459",
  "src": "fn bitor_assign(&mut self, other: $t) { *self |= other }",
  "macro_backtrace": [
    {
      "callsite": "bitor_assign_impl! { bool usize u8 u16 u32 u64 u128 isize i8 i16 i32 i64 i128 }",
      "defsite": "macro_rules! bitor_assign_impl {\n    ($($t:ty)+) => ($(\n        #[stable(feature = \"op_assign_traits\", since = \"1.8.0\")]\n        #[rustc_const_unstable(feature = \"const_ops\", issue = \"143802\")]\n        impl const BitOrAssign for $t {\n            #[inline]\n            fn bitor_assign(&mut self, other: $t) { *self |= other }\n        }\n\n        forward_ref_op_assign! { impl BitOrAssign, bitor_assign for $t, $t,\n        #[stable(feature = \"op_assign_builtins_by_ref\", since = \"1.22.0\")]\n        #[rustc_const_unstable(feature = \"const_ops\", issue = \"143802\")] }\n    )+)\n}"
    }
  ]
}
