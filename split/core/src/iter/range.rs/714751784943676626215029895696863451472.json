{
  "file": "core/src/iter/range.rs",
  "name": "<ops::range::Range<u8> as iter::range::RangeIteratorImpl>::spec_advance_back_by",
  "hash": "714751784943676626215029895696863451472",
  "hash_direct": "1625230904508961415816236054084754599947",
  "src": "fn spec_advance_back_by(&mut self, n: usize) -> Result<(), NonZero<usize>> {\n        let steps = Step::steps_between(&self.start, &self.end);\n        let available = steps.1.unwrap_or(steps.0);\n\n        let taken = available.min(n);\n\n        // SAFETY: same as the spec_advance_by() implementation\n        self.end = unsafe { Step::backward_unchecked(self.end, taken) };\n\n        NonZero::new(n - taken).map_or(Ok(()), Err)\n    }",
  "callees": [
    "7482589000750884340327816351015335759",
    "155146884437592745449279657258619050520",
    "258820287469578611817448591488600041899",
    "17421822894816687532325615181214565887",
    "23815256893174302637797703719499456373",
    "764810948457541511713207497644013999971",
    "1358246712086198366614107958808171399286",
    "1676806814539779643518083197252466559589",
    "474370991983164181813023260355992609744",
    "1532066451777410930217202448181742040419",
    "173406377095566863748465400786477540721",
    "680034622814316217712937714106633543020",
    "1072447301577107643817352323900751606380",
    "1113032932815665948217565294476098756403",
    "41505289739977656509611396154325757795",
    "478753423337745817613297159272845606672",
    "40545036438152791145615465344483147281",
    "16554284367650193786337801210329994104",
    "18924474281332607947427114014473837479",
    "1301995755790878605811491736323759974386",
    "162420490716835998378776944854920882988",
    "739520556846959085018120036998133255835"
  ]
}
