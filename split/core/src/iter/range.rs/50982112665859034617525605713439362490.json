{
  "file": "core/src/iter/range.rs",
  "name": "<ascii::ascii_char::AsciiChar as iter::range::Step>::forward_unchecked",
  "hash": "50982112665859034617525605713439362490",
  "hash_direct": "176071744301726949554575043494132201027",
  "src": "unsafe fn forward_unchecked(start: AsciiChar, count: usize) -> AsciiChar {\n        // SAFETY: Caller asserts that result is a valid ASCII character,\n        // and therefore it is a valid u8.\n        let end = unsafe { Step::forward_unchecked(start.to_u8(), count) };\n\n        // SAFETY: Caller asserts that result is a valid ASCII character.\n        unsafe { AsciiChar::from_u8_unchecked(end) }\n    }",
  "callees": [
    "652182000514958061713215128671564018150",
    "69096650655933370018490819206330130737",
    "47323665595455568617290020941376774286",
    "1329845230409163288212548289525672875535",
    "16824420916691935049705640393259467449",
    "1559527691468457438712029334091199709783",
    "7418434326773042031826248058658687296",
    "82238255375868304519870604057524476826",
    "841904668883726495316837415609641023349",
    "1258931108755458209614962827106116332072",
    "105125143701458073564296455695110349394",
    "926431751072447714115290524535080564415",
    "399232661239117480517401994520839366833"
  ]
}
