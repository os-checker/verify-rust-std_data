{
  "file": "core/src/iter/range.rs",
  "name": "<char as iter::range::Step>::forward_unchecked",
  "hash": "37455746414827064617330487479210774511",
  "hash_direct": "1414764073480365313516615015078480625403",
  "src": "unsafe fn forward_unchecked(start: char, count: usize) -> char {\n        let start = start as u32;\n        // SAFETY: the caller must guarantee that this doesn't overflow\n        // the range of values for a char.\n        let mut res = unsafe { Step::forward_unchecked(start, count) };\n        if start < 0xD800 && 0xD800 <= res {\n            // SAFETY: the caller must guarantee that this doesn't overflow\n            // the range of values for a char.\n            res = unsafe { Step::forward_unchecked(res, 0x800) };\n        }\n        // SAFETY: because of the previous contract, this is guaranteed\n        // by the caller to be a valid char.\n        unsafe { char::from_u32_unchecked(res) }\n    }",
  "callees": [
    "1137504858812645032216016959492348926209",
    "1730104888752463612515843025505589269421",
    "30477841482411972089439721196610634090",
    "258820287469578611817448591488600041899",
    "17421822894816687532325615181214565887",
    "23815256893174302637797703719499456373",
    "117617402579329450391520196936047326337",
    "1785104021152755429213148219117196558263",
    "165102279875006570313790493262841011238",
    "20170180267557332822120616943783807769",
    "1113032932815665948217565294476098756403",
    "41505289739977656509611396154325757795",
    "478753423337745817613297159272845606672",
    "1676603290518039711418379565247484306913",
    "69521336164211208533737404575105193630",
    "457325283005374701813963460777269380260",
    "739520556846959085018120036998133255835"
  ]
}
