{
  "file": "core/src/iter/range.rs",
  "name": "<ascii::ascii_char::AsciiChar as iter::range::Step>::backward_unchecked",
  "hash": "115361175269263563214856908257903369446",
  "hash_direct": "107072119546112306776635595748083228937",
  "src": "unsafe fn backward_unchecked(start: AsciiChar, count: usize) -> AsciiChar {\n        // SAFETY: Caller asserts that result is a valid ASCII character,\n        // and therefore it is a valid u8.\n        let end = unsafe { Step::backward_unchecked(start.to_u8(), count) };\n\n        // SAFETY: Caller asserts that result is a valid ASCII character.\n        unsafe { AsciiChar::from_u8_unchecked(end) }\n    }",
  "callees": [
    "15551977551413036531158252289522839939",
    "211389067699639933614636457746408448112",
    "258820287469578611817448591488600041899",
    "17421822894816687532325615181214565887",
    "23815256893174302637797703719499456373",
    "764810948457541511713207497644013999971",
    "474370991983164181813023260355992609744",
    "1532066451777410930217202448181742040419",
    "1113032932815665948217565294476098756403",
    "41505289739977656509611396154325757795",
    "478753423337745817613297159272845606672",
    "162420490716835998378776944854920882988",
    "739520556846959085018120036998133255835"
  ]
}
