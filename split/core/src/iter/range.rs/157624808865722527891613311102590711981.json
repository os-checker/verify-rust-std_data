{
  "file": "core/src/iter/range.rs",
  "name": "<ascii::ascii_char::AsciiChar as iter::range::Step>::backward_unchecked",
  "hash": "157624808865722527891613311102590711981",
  "hash_direct": "107072119546112306776635595748083228937",
  "src": "unsafe fn backward_unchecked(start: AsciiChar, count: usize) -> AsciiChar {\n        // SAFETY: Caller asserts that result is a valid ASCII character,\n        // and therefore it is a valid u8.\n        let end = unsafe { Step::backward_unchecked(start.to_u8(), count) };\n\n        // SAFETY: Caller asserts that result is a valid ASCII character.\n        unsafe { AsciiChar::from_u8_unchecked(end) }\n    }",
  "callees": [
    "652182000514958061713215128671564018150",
    "69096650655933370018490819206330130737",
    "47323665595455568617290020941376774286",
    "1329845230409163288212548289525672875535",
    "16824420916691935049705640393259467449",
    "37181374801445285733435824030423290366",
    "533104622059205284817837877983580115998",
    "22307701812938062312436758415940620347",
    "841904668883726495316837415609641023349",
    "1258931108755458209614962827106116332072",
    "105125143701458073564296455695110349394",
    "785428393837772882311613268351172098828",
    "399232661239117480517401994520839366833"
  ]
}
