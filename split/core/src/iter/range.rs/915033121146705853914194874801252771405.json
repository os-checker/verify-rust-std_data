{
  "file": "core/src/iter/range.rs",
  "name": "<ascii::ascii_char::AsciiChar as iter::range::Step>::forward_unchecked",
  "hash": "915033121146705853914194874801252771405",
  "hash_direct": "176071744301726949554575043494132201027",
  "src": "unsafe fn forward_unchecked(start: AsciiChar, count: usize) -> AsciiChar {\n        // SAFETY: Caller asserts that result is a valid ASCII character,\n        // and therefore it is a valid u8.\n        let end = unsafe { Step::forward_unchecked(start.to_u8(), count) };\n\n        // SAFETY: Caller asserts that result is a valid ASCII character.\n        unsafe { AsciiChar::from_u8_unchecked(end) }\n    }",
  "callees": [
    "15551977551413036531158252289522839939",
    "211389067699639933614636457746408448112",
    "258820287469578611817448591488600041899",
    "17421822894816687532325615181214565887",
    "23815256893174302637797703719499456373",
    "985749188984138133118122592648924964185",
    "846515002433725374617496672068942574495",
    "1538575406264905305610059445668415805054",
    "1113032932815665948217565294476098756403",
    "41505289739977656509611396154325757795",
    "478753423337745817613297159272845606672",
    "34565924575581399546956747772678869325",
    "739520556846959085018120036998133255835"
  ]
}
