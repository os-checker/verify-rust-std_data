{
  "file": "core/src/iter/adapters/flatten.rs",
  "name": "<iter::adapters::flatten::FlattenCompat<iter::adapters::map::Map<str::iter::Chars<'_>, str::CharEscapeDebugContinue>, char::EscapeDebug> as iter::traits::iterator::Iterator>::size_hint",
  "hash": "42980508398958516939033234360740387878",
  "hash_direct": "182464003063613685757126860767310196973",
  "src": "default fn size_hint(&self) -> (usize, Option<usize>) {\n        let (flo, fhi) = self.frontiter.as_ref().map_or((0, Some(0)), U::size_hint);\n        let (blo, bhi) = self.backiter.as_ref().map_or((0, Some(0)), U::size_hint);\n        let lo = flo.saturating_add(blo);\n\n        if let Some(fixed_size) = <<I as Iterator>::Item as ConstSizeIntoIterator>::size() {\n            let (lower, upper) = self.iter.size_hint();\n\n            let lower = lower.saturating_mul(fixed_size).saturating_add(lo);\n            let upper =\n                try { fhi?.checked_add(bhi?)?.checked_add(fixed_size.checked_mul(upper?)?)? };\n\n            return (lower, upper);\n        }\n\n        match (self.iter.size_hint(), fhi, bhi) {\n            ((0, Some(0)), Some(a), Some(b)) => (lo, a.checked_add(b)),\n            _ => (lo, None),\n        }\n    }",
  "callees": [
    "141232631085634144581455427783437903111",
    "75328591623096787827877074291818888632",
    "119539198841178170095714608677850051781",
    "1054359425812398629415438404882291537966",
    "258820287469578611817448591488600041899",
    "588974892899239543415856878986124229421",
    "690438059002452523915046149102377829082",
    "17421822894816687532325615181214565887",
    "1529875730411415803517587657844377161231",
    "23815256893174302637797703719499456373",
    "78218468122450608946834132910070473865",
    "61904346926671211328867343054738396745",
    "1148478860049936098517848989844684086393",
    "121097281700569241807917519510076722724",
    "38173889201636315922757092210776486888",
    "97892229237199250718782565098232937194",
    "76217497761975253402336742341930803263",
    "632379827537218859118037651046044448068",
    "159822079557008185828209445829366525941",
    "530329434428699031818396369573342280682",
    "119925498028853727189218668192324708635",
    "8912198003459420415317352584525771235",
    "935327613547407926313303453668085555306",
    "1415508711647638229511912595862604596327",
    "303529987439250935711380511177693305160",
    "3146941474667876217278248361469421016",
    "1113032932815665948217565294476098756403",
    "41505289739977656509611396154325757795",
    "243931809744896974812513529918607549579",
    "1752989996936949203916036071159051010960",
    "478753423337745817613297159272845606672",
    "1214574077763705187516383491048990527345",
    "187482952606822645712460029589708661523",
    "126818845945534382313624863669169238336",
    "144119928408074986676617008060073758280",
    "66631883600104442883671173806470690647",
    "162249355548134443272627281487101785401",
    "1762126293480126793916319187708925702531",
    "53569486981529370344752868158650318763",
    "3297309995462571210361513208440932689",
    "90550453206581869791970009265946291996",
    "92629160347041616169292893266155646330",
    "92658835324565758495130762072978604201",
    "739520556846959085018120036998133255835"
  ]
}
