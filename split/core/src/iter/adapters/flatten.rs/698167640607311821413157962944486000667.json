{
  "file": "core/src/iter/adapters/flatten.rs",
  "name": "<iter::adapters::flatten::FlattenCompat<iter::adapters::map::Map<str::iter::Chars<'_>, str::CharEscapeUnicode>, char::EscapeUnicode> as iter::traits::iterator::Iterator>::size_hint",
  "hash": "698167640607311821413157962944486000667",
  "hash_direct": "75341733545325160407686317178265270257",
  "src": "default fn size_hint(&self) -> (usize, Option<usize>) {\n        let (flo, fhi) = self.frontiter.as_ref().map_or((0, Some(0)), U::size_hint);\n        let (blo, bhi) = self.backiter.as_ref().map_or((0, Some(0)), U::size_hint);\n        let lo = flo.saturating_add(blo);\n\n        if let Some(fixed_size) = <<I as Iterator>::Item as ConstSizeIntoIterator>::size() {\n            let (lower, upper) = self.iter.size_hint();\n\n            let lower = lower.saturating_mul(fixed_size).saturating_add(lo);\n            let upper =\n                try { fhi?.checked_add(bhi?)?.checked_add(fixed_size.checked_mul(upper?)?)? };\n\n            return (lower, upper);\n        }\n\n        match (self.iter.size_hint(), fhi, bhi) {\n            ((0, Some(0)), Some(a), Some(b)) => (lo, a.checked_add(b)),\n            _ => (lo, None),\n        }\n    }",
  "callees": [
    "6370990263349066052206982571681990041",
    "119539198841178170095714608677850051781",
    "46075653645567694729719230208124120820",
    "258820287469578611817448591488600041899",
    "588974892899239543415856878986124229421",
    "690438059002452523915046149102377829082",
    "17421822894816687532325615181214565887",
    "1529875730411415803517587657844377161231",
    "23815256893174302637797703719499456373",
    "16302334392257479488019020963094697472",
    "1241899071849128712414835570197427738822",
    "16953207682018878368593104796373271931",
    "121097281700569241807917519510076722724",
    "38173889201636315922757092210776486888",
    "97892229237199250718782565098232937194",
    "76217497761975253402336742341930803263",
    "632379827537218859118037651046044448068",
    "159822079557008185828209445829366525941",
    "530329434428699031818396369573342280682",
    "179667182174775281337545665581803217931",
    "8912198003459420415317352584525771235",
    "935327613547407926313303453668085555306",
    "1415508711647638229511912595862604596327",
    "82595140650498595439808212579845212398",
    "88822435589931470504094706956089828792",
    "1113032932815665948217565294476098756403",
    "41505289739977656509611396154325757795",
    "243931809744896974812513529918607549579",
    "1752989996936949203916036071159051010960",
    "478753423337745817613297159272845606672",
    "1214574077763705187516383491048990527345",
    "187482952606822645712460029589708661523",
    "126818845945534382313624863669169238336",
    "144119928408074986676617008060073758280",
    "66631883600104442883671173806470690647",
    "580249689936400260514404781608174812569",
    "1762126293480126793916319187708925702531",
    "53569486981529370344752868158650318763",
    "3297309995462571210361513208440932689",
    "90550453206581869791970009265946291996",
    "92629160347041616169292893266155646330",
    "92658835324565758495130762072978604201",
    "739520556846959085018120036998133255835"
  ]
}
