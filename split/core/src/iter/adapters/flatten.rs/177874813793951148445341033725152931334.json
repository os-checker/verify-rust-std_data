{
  "file": "core/src/iter/adapters/flatten.rs",
  "name": "iter::adapters::flatten::FlattenCompat::<I, U>::iter_try_fold::flatten::<char::EscapeDefault, (), result::Result<(), fmt::Error>, {closure@/home/runner/work/distributed-verification/distributed-verification/verify-rust-std/library/core/src/iter/adapters/flatten.rs:563:13: 563:29}>",
  "hash": "177874813793951148445341033725152931334",
  "hash_direct": "14188535648955390554839515872802457556",
  "src": "fn flatten<'a, T: IntoIterator, Acc, R: Try<Output = Acc>>(\n            frontiter: &'a mut Option<T::IntoIter>,\n            fold: &'a mut impl FnMut(Acc, &mut T::IntoIter) -> R,\n        ) -> impl FnMut(Acc, T) -> R + 'a {\n            move |acc, iter| fold(acc, frontiter.insert(iter.into_iter()))\n        }"
}
