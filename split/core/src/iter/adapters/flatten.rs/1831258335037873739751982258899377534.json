{
  "file": "core/src/iter/adapters/flatten.rs",
  "name": "<iter::adapters::flatten::FlattenCompat<I, U> as iter::traits::iterator::Iterator>::try_fold::flatten::<char::EscapeDefault, (), result::Result<(), fmt::Error>, {closure@/home/runner/work/distributed-verification/distributed-verification/verify-rust-std/library/core/src/iter/traits/iterator.rs:2489:13: 2489:25}>",
  "hash": "1831258335037873739751982258899377534",
  "hash_direct": "7140542214994358312564464246302967849",
  "src": "fn flatten<U: Iterator, Acc, R: Try<Output = Acc>>(\n            mut fold: impl FnMut(Acc, U::Item) -> R,\n        ) -> impl FnMut(Acc, &mut U) -> R {\n            move |acc, iter| iter.try_fold(acc, &mut fold)\n        }"
}
