{
  "file": "core/src/iter/adapters/chain.rs",
  "name": "<iter::adapters::chain::Chain<iter::adapters::flatten::Flatten<option::IntoIter<char::EscapeDebug>>, iter::adapters::flatten::FlatMap<str::iter::Chars<'_>, char::EscapeDebug, str::CharEscapeDebugContinue>> as iter::traits::iterator::Iterator>::size_hint",
  "hash": "296832736367903512311227908780945619496",
  "hash_direct": "59478680620627355361879552162358753407",
  "src": "fn size_hint(&self) -> (usize, Option<usize>) {\n        match self {\n            Chain { a: Some(a), b: Some(b) } => {\n                let (a_lower, a_upper) = a.size_hint();\n                let (b_lower, b_upper) = b.size_hint();\n\n                let lower = a_lower.saturating_add(b_lower);\n\n                let upper = match (a_upper, b_upper) {\n                    (Some(x), Some(y)) => x.checked_add(y),\n                    _ => None,\n                };\n\n                (lower, upper)\n            }\n            Chain { a: Some(a), b: None } => a.size_hint(),\n            Chain { a: None, b: Some(b) } => b.size_hint(),\n            Chain { a: None, b: None } => (0, Some(0)),\n        }\n    }",
  "callees": [
    "106726561740174065288083703776090095863",
    "1177793451448240943264134372733044320",
    "117083133034458006019709376097028492273",
    "1716460902311557784514218128632988891446",
    "47323665595455568617290020941376774286",
    "111425599901702694743874629435682172347",
    "714811817540972740211524868124730226803",
    "1329845230409163288212548289525672875535",
    "47278574192031232971799194590021398469",
    "16824420916691935049705640393259467449",
    "1216267627420057901611754992510596609864",
    "86592760803899315445710181163285794189",
    "172668558711544059804110570136508888285",
    "472570740218672121912414007605080218946",
    "29624071855401785508092875636366381410",
    "86256941528258470799183432022308390130",
    "78383334793858770118591077261854202",
    "1706342608225180171413321260188361118612",
    "1712898201300478840215074793236064467963",
    "1107975224131503237910671528805011402335",
    "841346702487865802717731804342903065853",
    "173436302369990875494614516656820640897",
    "26064680123257945312537992217601395168",
    "145328382030422815493757027328280748575",
    "2709519979364785706084495437256819137",
    "600069391829922519813981122490086755085",
    "2947276155848069201435012473948255765",
    "109309382241892590941522813339041451375",
    "31011351988809774928421693103015440650",
    "1726121996870761916716292068000481283571",
    "176798529630690243612127863686044752719",
    "1713915275219277491215949288476463055087",
    "42523253189355314164484348599926004811",
    "758134548779018513511064516190942601637",
    "68866666773163028433826909591480067324",
    "841904668883726495316837415609641023349",
    "1258931108755458209614962827106116332072",
    "53589810041120365110998933211304468616",
    "1243847030362955698517207199029174369810",
    "105125143701458073564296455695110349394",
    "14289085791843058303972699274315536239",
    "703663108277374327010040438608357482834",
    "1100495660517602822510660091708953776518",
    "261114641164087560416314538374841383619",
    "72467560964661004181658302583155500260",
    "108602431076763355397849575214602926480",
    "591163883570913488917341250007887670228",
    "1028023859496283824714006082102994000183",
    "13445532662779670761228880372488293329",
    "911776701760282171617604846768629435744",
    "394733993418929416713814544518539864378",
    "1137271765924114987514947403158445640283",
    "399232661239117480517401994520839366833"
  ]
}
