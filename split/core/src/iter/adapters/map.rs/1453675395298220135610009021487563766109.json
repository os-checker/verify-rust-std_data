{
  "file": "core/src/iter/adapters/map.rs",
  "name": "<iter::adapters::map::Map<array::drain::Drain<'_, ()>, {closure@/home/runner/work/distributed-verification/distributed-verification/verify-rust-std/library/core/src/ops/try_trait.rs:396:9: 396:17}> as iter::traits::unchecked_iterator::UncheckedIterator>::next_unchecked",
  "hash": "1453675395298220135610009021487563766109",
  "hash_direct": "15195665316653847864843253590767394188",
  "src": "unsafe fn next_unchecked(&mut self) -> B {\n        // SAFETY: `Map` is 1:1 with the inner iterator, so if the caller promised\n        // that there's an element left, the inner iterator has one too.\n        let item = unsafe { self.iter.next_unchecked() };\n        (self.f)(item)\n    }",
  "callees": [
    "225791831386031568015613100129243460713",
    "1588630868091817408413316910952138820001",
    "110286732951253459166416707375649721039",
    "1599736108041680571510526482488088127337",
    "1531009987700713627114841153360395264198",
    "85558331498578965385294782197452218966",
    "55732587752735335945356669824614635762",
    "1050757777987272307317753801956772021235",
    "114405249536123085316062504014727686111",
    "1230748672991072180016692955695644415710",
    "1749518355869090207810375997065416916128",
    "1648886390739730508816615733445262410614",
    "28733051149244335398155852330546270084",
    "1235036534278514540017751902318322713018",
    "64428221957133332357265093654334493",
    "160733284196106906017611696995803004551",
    "778713662165510584811932027160146289674",
    "42990063052958904976718600653175958912",
    "42734778002331341807624758152869269079",
    "24614872288685298643967355800714012655",
    "13020070729243610314357241403528724392",
    "155903546558043130181109834204848741707",
    "769871191376860825616640549555308478966",
    "53322627541715772574233943644716633945",
    "128103941581933882561095523931319593650",
    "130604729698685538817431701159687560784",
    "110627676895616442107840116311482708557",
    "724403978649374886214993750900280315422",
    "47323665595455568617290020941376774286",
    "1329845230409163288212548289525672875535",
    "109763229663154342343123224747831634619",
    "16824420916691935049705640393259467449",
    "561445107989240208511361370086377379752",
    "151691830488044589682052448246913349802",
    "1617054938297627622011998382328717871744",
    "1196638383615410162910723134175805433641",
    "100592769769813495999655096933945639172",
    "841904668883726495316837415609641023349",
    "1258931108755458209614962827106116332072",
    "53589810041120365110998933211304468616",
    "1243847030362955698517207199029174369810",
    "105125143701458073564296455695110349394",
    "25930241974724637292994171257021210872",
    "617554482545947003412104686554524783687",
    "1445917162577882149418297081791436471284",
    "849628185942532211610194183090257053256",
    "126854488001657655538446159971578587757",
    "703663108277374327010040438608357482834",
    "1100495660517602822510660091708953776518",
    "204714098762186137311014280053456572621",
    "73173290477094507971055912376469402083",
    "8202461399065745658321653296010507384",
    "1428506557137396591513805755013512430188",
    "755061883603080669114427390824755000960",
    "124586139718338474718261279442774237855",
    "31073150932269762025122705836618871014",
    "798720389727133689812000857276298373488",
    "95808182016343610016851379233009008862",
    "120057280412088965537230603165709361907",
    "120057280412088965537230603165709361907",
    "120057280412088965537230603165709361907",
    "120057280412088965537230603165709361907",
    "1044208189598389270316467631378866314269",
    "1044208189598389270316467631378866314269",
    "1044208189598389270316467631378866314269",
    "1044208189598389270316467631378866314269",
    "48548664629730829953422984265893277498",
    "399232661239117480517401994520839366833",
    "165260604638305226342101042842060873588",
    "34478597508049401479557782585707843723"
  ]
}
