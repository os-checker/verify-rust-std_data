{
  "file": "core/src/iter/adapters/map.rs",
  "name": "<iter::adapters::map::Map<array::drain::Drain<'_, ()>, {closure@/home/runner/work/distributed-verification/distributed-verification/verify-rust-std/library/core/src/ops/try_trait.rs:393:9: 393:17}> as iter::traits::unchecked_iterator::UncheckedIterator>::next_unchecked",
  "hash": "327984518998449723512343126302312573872",
  "hash_direct": "99667313281353237604266944168545500426",
  "src": "unsafe fn next_unchecked(&mut self) -> B {\n        // SAFETY: `Map` is 1:1 with the inner iterator, so if the caller promised\n        // that there's an element left, the inner iterator has one too.\n        let item = unsafe { self.iter.next_unchecked() };\n        (self.f)(item)\n    }",
  "callees": [
    "53220264313946587288014774631573051688",
    "45242504593324229448060363916521987366",
    "155147252462344397972186713557771794079",
    "10057127580410476606272092343920277620",
    "178053629462286824685283611690204389326",
    "139704976908753389291209564980972955015",
    "1245364030286753365515911599133870323814",
    "731875191689097938616761267144402532533",
    "125895754419976834712369234308535121418",
    "97974469250681533633362941246048906040",
    "56316359647357795184792913202425867352",
    "101028881738991100326600871830208692356",
    "13111708733129164591523166674197912604",
    "73823948922687090493490572363404488201",
    "153871104070145767316778160342330240743",
    "258820287469578611817448591488600041899",
    "17421822894816687532325615181214565887",
    "27480086118489678191003877857780025576",
    "23815256893174302637797703719499456373",
    "1639190511405576016712069487289226138136",
    "24899707394772763509340058915194816546",
    "303127917241666984113380325134893912788",
    "137368381448604167703416046205455599816",
    "156396365605833484958181337486344432065",
    "1587366428648548286811765465065819649603",
    "791415920025272788117931004762162603775",
    "138504551118205857878219328162876662569",
    "160598338456962531404539761999765821549",
    "169150491457270673212368331310670333681",
    "1113032932815665948217565294476098756403",
    "41505289739977656509611396154325757795",
    "243931809744896974812513529918607549579",
    "1752989996936949203916036071159051010960",
    "478753423337745817613297159272845606672",
    "3658730781980743391697756456907208995",
    "176386771705132260856587306647620489942",
    "24720139230274117689328858551755358968",
    "1566168013061370513711054548557151263674",
    "27220930173139293333302767151865578302",
    "187482952606822645712460029589708661523",
    "126818845945534382313624863669169238336",
    "1341162451589621722216880993414058827303",
    "125599637809925325675898678329148875519",
    "1594869258728528077316435999691807076767",
    "1689758656780893450612927286731637776121",
    "69931667253225704078235178816623571492",
    "229928786779365060416476958219270538056",
    "1676603290518039711418379565247484306913",
    "65026218320782548845002856279781279739",
    "1495701129487408651514277580197650628885",
    "66520754724298150944214515948412224662",
    "1807614537591614931913117028374176856069",
    "1807614537591614931913117028374176856069",
    "1807614537591614931913117028374176856069",
    "1807614537591614931913117028374176856069",
    "1334590502719901441316840689806733182875",
    "1334590502719901441316840689806733182875",
    "1334590502719901441316840689806733182875",
    "1334590502719901441316840689806733182875",
    "611027897215340775410757839603478111815",
    "74111286315405054421392461884745781298",
    "739520556846959085018120036998133255835",
    "71112245793085408723525187754979718597",
    "1217330957027791981411010835694243116934"
  ]
}
