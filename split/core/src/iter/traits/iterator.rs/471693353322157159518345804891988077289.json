{
  "file": "core/src/iter/traits/iterator.rs",
  "name": "<core::str::CharIndices<'_> as core::iter::Iterator>::try_fold::<core::num::NonZero<usize>, {closure@<core::str::CharIndices<'_> as core::iter::Iterator::advance_by::SpecAdvanceBy>::spec_advance_by::{closure#0}}, core::option::Option<core::num::NonZero<usize>>>",
  "hash": "471693353322157159518345804891988077289",
  "hash_direct": "577036810966956250214367594324081567840",
  "src": "fn try_fold<B, F, R>(&mut self, init: B, mut f: F) -> R\n    where\n        Self: Sized,\n        F: FnMut(B, Self::Item) -> R,\n        R: Try<Output = B>,\n    {\n        let mut accum = init;\n        while let Some(x) = self.next() {\n            accum = f(accum, x)?;\n        }\n        try { accum }\n    }",
  "callees": [
    "104550528282774795524117016372908034501",
    "146994998949606397634275197795948319731",
    "1664835611994150133815177247542444862856",
    "12281449246394340237926324936375242532",
    "1552988011012146591114896816323571303973",
    "181267529910573756716102767087485333561",
    "310476737258981539215905981644988688429",
    "1824545319189397521315695847785602896178",
    "14268669863155567392225996604727596946",
    "1055043272310861592713228670863657256034",
    "1077627557077316994111291229578800109768",
    "16644132501155057358839560967377423539",
    "596717226459156418513221677816795970108",
    "167720725353303677441984078993999087147",
    "349732893336648829317640041454262824981",
    "16907477943652998274434215545923907743",
    "1915790073254377701704652915003245103",
    "1787044375133666098215374367269718920754",
    "7449359019970892242341732849004291552",
    "1070701508596510069314634318856054217121",
    "182056224738756981514078113564136896850",
    "55473319084586866772386747162740321165",
    "986792852990965178117440249555081278778",
    "90818112465881722349174357944217011292",
    "170281423934441608902372914597711355436",
    "146612017564224181584303574960223420416",
    "63085389524472853348886374617170044294",
    "262831349882779883815480941076479924039",
    "1793681111599931821712213635413918902143",
    "55408212128999564608147158566316072753",
    "124048927270173258543682139801948377007",
    "85411758778306792710675626340180885641",
    "1211361737600395344714258488668022433383",
    "121229084792859591615820885121582269199",
    "717317897984632901316617723476110950437",
    "1121825575012330479117046270460961910099",
    "298884710962780778440604835530166814",
    "1213241336815109722310271468032047462595",
    "92005998086269722606437028357039395831",
    "181717373102152254895109628399379607332",
    "129298276867850405466757356839549852569",
    "131565587963228383647279312131403441535",
    "841344188694266590295617675180068548",
    "21891345916512513124557685890206627",
    "154327830598997567395471374153948145795",
    "759923386215714039414119547861695907508",
    "905474208061366869810244544887224380880",
    "14195144508793688466185832910352488459",
    "161667326443480455811512968587695288034",
    "115481664012670090729456290692676191535",
    "414067426002036798312624266174828264739",
    "879543598591726583811363902326698267760",
    "1349879990858633985615465432111373267034",
    "1396369027985523187512983890317312644464",
    "747156457449598790816736684951635660145",
    "112989397975222255532054380452996322405"
  ]
}
