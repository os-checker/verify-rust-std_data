{
  "file": "core/src/iter/traits/iterator.rs",
  "name": "<iter::adapters::step_by::StepBy<ops::range::Range<usize>> as iter::traits::iterator::Iterator::advance_by::SpecAdvanceBy>::spec_advance_by",
  "hash": "174406629629374941526968164381637709168",
  "hash_direct": "108571794755320686712276423360983677998",
  "src": "fn spec_advance_by(&mut self, n: usize) -> Result<(), NonZero<usize>> {\n                let Some(n) = NonZero::new(n) else {\n                    return Ok(());\n                };\n\n                let res = self.try_fold(n, |n, _| NonZero::new(n.get() - 1));\n\n                match res {\n                    None => Ok(()),\n                    Some(n) => Err(n),\n                }\n            }",
  "callees": [
    "495840091692981840217316891978944991283",
    "19358392490599783565128542782842056511",
    "1501402301671435158817987979659221061395",
    "258820287469578611817448591488600041899",
    "17421822894816687532325615181214565887",
    "23815256893174302637797703719499456373",
    "71245514187754322954731267000763581889",
    "134106515627465527062382343134716699019",
    "146365319431250656075031859039553904738",
    "141473430395395475191516396923852373141",
    "774801482868954746710726910629396968497",
    "133218611331613415297858935993022251952",
    "34410515695185066949979771014252260096",
    "1676806814539779643518083197252466559589",
    "137727233253125029217674386074482569004",
    "34879117884290460776842531453279835025",
    "821053300062536159115601448644934990736",
    "68648213460155011086108492708709849999",
    "2922976863402117239063671147549004081",
    "1113032932815665948217565294476098756403",
    "41505289739977656509611396154325757795",
    "478753423337745817613297159272845606672",
    "182127435791264553173088353210817538140",
    "18924474281332607947427114014473837479",
    "14202615834488052409859027248238516218",
    "8905260419885105348363219793770989390",
    "887235042902537721816254572592014930578",
    "739520556846959085018120036998133255835"
  ]
}
