{
  "file": "core/src/iter/traits/iterator.rs",
  "name": "<option::IntoIter<char::EscapeDebug> as iter::traits::iterator::Iterator>::try_fold::<(), {closure@/home/runner/work/distributed-verification/distributed-verification/verify-rust-std/library/core/src/iter/adapters/flatten.rs:420:13: 420:29}, result::Result<(), fmt::Error>>",
  "hash": "640999319898891725911686314091015459355",
  "hash_direct": "183810002896237014631263506606466390904",
  "src": "fn try_fold<B, F, R>(&mut self, init: B, mut f: F) -> R\n    where\n        Self: Sized,\n        F: FnMut(B, Self::Item) -> R,\n        R: Try<Output = B>,\n    {\n        let mut accum = init;\n        while let Some(x) = self.next() {\n            accum = f(accum, x)?;\n        }\n        try { accum }\n    }",
  "callees": [
    "211389067699639933614636457746408448112",
    "511962504776047044912646038885098500692",
    "1104712656672668228811290341184894287772",
    "26005865984918626858637243729294095122",
    "1449318134079626371011274072562212788848",
    "119539198841178170095714608677850051781",
    "77039346684563868964109636441228802112",
    "1758912313049800270217802676586818662126",
    "180885054484727158889233344781249141486",
    "258820287469578611817448591488600041899",
    "1415106497522421883676194742336801697",
    "17421822894816687532325615181214565887",
    "23815256893174302637797703719499456373",
    "369788764006658473415896219864883812927",
    "50323593782180597267039797783237167697",
    "53141000305425134613999846020526628881",
    "985749188984138133118122592648924964185",
    "1287471278609187268310513776057364239965",
    "1546928869429147993813849152044821737403",
    "151420483484005084038577715525328260346",
    "134194435109068273167810069453983566810",
    "300652783215287787118122424895675090929",
    "846515002433725374617496672068942574495",
    "1538575406264905305610059445668415805054",
    "68302868158826803394514111658852980059",
    "1807504791919470013616234087163610504901",
    "15453723374769780352859320631569235268",
    "159961173032588260372106360215013055795",
    "4105489478158635609088823744055955963",
    "33605783209889310876275651287772169825",
    "1233103059403689525111354468025712379074",
    "73551026705103387962308800416941721857",
    "91815080945703294522598821311786079446",
    "833829771046316811218026346220384534200",
    "1113032932815665948217565294476098756403",
    "41505289739977656509611396154325757795",
    "478753423337745817613297159272845606672",
    "171703085011510184787883206899877368211",
    "101628934354328292516881712249699787306",
    "1390383865848976439915787352297803591204",
    "59846993065603841084585486369667331362",
    "126682616887199395959427055990233716748",
    "813368619794702869414005756234477751011",
    "1359933470730887149416155830775469624234",
    "954928083127498526214259157089139216224",
    "1803188962461980699617879434368201065587",
    "111002727729737487855910752441805729044",
    "325630020552471361814377154221519157974",
    "154911443990380340341563367924870465980",
    "819756211280848030917202637728825520633",
    "34565924575581399546956747772678869325",
    "739520556846959085018120036998133255835"
  ]
}
