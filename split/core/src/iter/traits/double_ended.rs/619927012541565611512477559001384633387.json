{
  "file": "core/src/iter/traits/double_ended.rs",
  "name": "core::iter::DoubleEndedIterator::rfind::check::<char, {closure@<core::iter::SkipWhile<I, P> as core::iter::Iterator>::next::check<char, {closure@/home/runner/work/distributed-verification/distributed-verification/verify-rust-std/library/alloc/src/str.rs:421:35: 421:39}>::{closure#0}}>",
  "hash": "619927012541565611512477559001384633387",
  "hash_direct": "8071019174798147729315012496866238536",
  "src": "fn check<T>(mut predicate: impl FnMut(&T) -> bool) -> impl FnMut((), T) -> ControlFlow<T> {\n            move |(), x| {\n                if predicate(&x) { ControlFlow::Break(x) } else { ControlFlow::Continue(()) }\n            }\n        }"
}
