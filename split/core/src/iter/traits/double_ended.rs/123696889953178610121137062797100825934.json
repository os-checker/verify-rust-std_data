{
  "file": "core/src/iter/traits/double_ended.rs",
  "name": "<slice::iter::Iter<'_, u32> as iter::traits::double_ended::DoubleEndedIterator>::try_rfold::<(), {closure@/home/runner/work/distributed-verification/distributed-verification/verify-rust-std/library/core/src/iter/adapters/cloned.rs:33:5: 33:20}, ops::control_flow::ControlFlow<ops::control_flow::ControlFlow<cmp::Ordering, cmp::Ordering>>>",
  "hash": "123696889953178610121137062797100825934",
  "hash_direct": "780299442435421974311195001405832413763",
  "src": "fn try_rfold<B, F, R>(&mut self, init: B, mut f: F) -> R\n    where\n        Self: Sized,\n        F: FnMut(B, Self::Item) -> R,\n        R: Try<Output = B>,\n    {\n        let mut accum = init;\n        while let Some(x) = self.next_back() {\n            accum = f(accum, x)?;\n        }\n        try { accum }\n    }",
  "callees": [
    "10603719114885247727214992470050664594",
    "131804240691040385559237509421631119204",
    "258820287469578611817448591488600041899",
    "588974892899239543415856878986124229421",
    "690438059002452523915046149102377829082",
    "17421822894816687532325615181214565887",
    "23815256893174302637797703719499456373",
    "106218985081224309251788900714859220455",
    "31131441629303120586534570246951384916",
    "178073803934344908772227834068453959264",
    "6471011342489470065671250638044264707",
    "268609994953603453817058973523592484220",
    "59125680210606302577934297432234591194",
    "114145505477335079129878761091207882084",
    "64998410348949013165534729523823375850",
    "101445464642493846677061784532715524123",
    "79928093417813389671008001961354549468",
    "25245669868667836524270736366418365813",
    "98825003596630730661950896480270233459",
    "102517973830009543381480318350821537303",
    "24480911602824689964334182183791757301",
    "54715342662778911473244799235189690191",
    "90390894752775125493942880926964066259",
    "1113032932815665948217565294476098756403",
    "41505289739977656509611396154325757795",
    "243931809744896974812513529918607549579",
    "1752989996936949203916036071159051010960",
    "478753423337745817613297159272845606672",
    "124136043214748897212366978666582003224",
    "46403460040447917584474138551510745026",
    "73563695999853273521444140283253875813",
    "12583040371049054649997982659979050806",
    "99953159891513391294033566922780542055",
    "1139694531532457387315266791604027348206",
    "64494649325624075067926298093129009693",
    "1137478830075394179710321564206986343125",
    "1727553854790856278011052472099747994665",
    "33331637534491476913440505814675408305",
    "1512091111473861295010674915588079355189",
    "125700026936981565915595512472711521472",
    "96525101279524185041479064529078161766",
    "113730046543618521871398730518877807929",
    "1746874140526031250810154978985975748619",
    "136726814943322160857908111799408521674",
    "132977040173719154057256981446941835376",
    "164643665969303161784589187279160706768",
    "164643665969303161784589187279160706768",
    "164643665969303161784589187279160706768",
    "164643665969303161784589187279160706768",
    "75024443840977746512279587011776429810",
    "75024443840977746512279587011776429810",
    "75024443840977746512279587011776429810",
    "75024443840977746512279587011776429810",
    "67422619050628989531877668274484584789",
    "124946062864253098859824032834605834653",
    "124946062864253098859824032834605834653",
    "124946062864253098859824032834605834653",
    "124946062864253098859824032834605834653",
    "1382484063922912829917745756449869514900",
    "1382484063922912829917745756449869514900",
    "1382484063922912829917745756449869514900",
    "1382484063922912829917745756449869514900",
    "1283868160390231989212228490164833471738",
    "739520556846959085018120036998133255835"
  ]
}
