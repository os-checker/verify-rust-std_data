{
  "file": "core/src/fmt/num.rs",
  "name": "fmt::num::<impl i128>::format_into",
  "hash": "693354438674421733216345759215965390683",
  "hash_direct": "571304553671030314012975682441529387202",
  "src": "pub fn format_into(self, buf: &mut NumBuffer<Self>) -> &str {\n        let diff = buf.capacity() - U128_MAX_DEC_N;\n        // FIXME: Once const generics are better, use `NumberBufferTrait::BUF_SIZE` as generic const\n        // for `fmt_u128_inner`.\n        //\n        // In the meantime, we have to use a slice starting at index 1 and add 1 to the returned\n        // offset to ensure the number is correctly generated at the end of the buffer.\n        let mut offset =\n            // SAFETY: `buf` will always be big enough to contain all digits.\n            unsafe { self.unsigned_abs()._fmt_inner(buf.buf.get_unchecked_mut(diff..)) };\n        // We put back the offset at the right position.\n        offset += diff;\n        // Only difference between signed and unsigned are these 4 lines.\n        if self < 0 {\n            offset -= 1;\n            // SAFETY: `buf` will always be big enough to contain all digits plus the minus sign.\n            unsafe {\n                buf.buf.get_unchecked_mut(offset).write(b'-');\n            }\n        }\n        // SAFETY: Starting from `offset`, all elements of the slice have been set.\n        unsafe { slice_buffer_to_str(&buf.buf, offset) }\n    }",
  "callees": [
    "589599466487462365011430963401962118509",
    "45318395101956594461130386568624732176",
    "166559392000045706437744874539733037061",
    "35932598991748325118093873731991502302",
    "568724557284913860013372778298136416306",
    "1316970106710505483515384541553369764410",
    "130280251735745806872867496244553518153",
    "47323665595455568617290020941376774286",
    "11139495935450220752286966752445431093",
    "819922674618487244413043350901048949292",
    "2730413463489077682871299968750410950",
    "149177879054194305854706121912784527721",
    "1401790216334955327214351023031146810699",
    "169564152499839983839646051342040887309",
    "39071722518750711716217025197493296495",
    "1329845230409163288212548289525672875535",
    "16824420916691935049705640393259467449",
    "84041372649682785889844836039084079894",
    "1728531953254762460916325834585472426982",
    "164499247419474032715135467342069728508",
    "103649489784811006526625132462472248149",
    "1194365697027496133111619491071087150844",
    "1342849835466405409710461719769802605500",
    "97728446667492592338346092068331699738",
    "55549683683119533987529308576431567352",
    "353836335514715551415901371272464802770",
    "1259853796123792531010116020849677170944",
    "11663475863125548442297136621169599847",
    "694680042487375838617016048567631445241",
    "772065526016577495817057948738175729677",
    "1205544471173095605113042850009418104186",
    "817913680894507283113673961558395048225",
    "1599449521071225084216236682214985058771",
    "1702892612091635261916638210761761658573",
    "769357639066994004214575624122454346574",
    "133509031473879608767378732747493739553",
    "150485570763328741959529276593682551099",
    "380409271697733753615604025175457031719",
    "1801932849287312231112662193894546046488",
    "844957821118050201712037424530049556280",
    "841904668883726495316837415609641023349",
    "1258931108755458209614962827106116332072",
    "105125143701458073564296455695110349394",
    "55767955768979135724569809046456107380",
    "11646453575295718315251820797250120902",
    "1048762906056744828014486690019684131237",
    "3070792398821344367711524405851230424",
    "95104459069509864491753404179195301856",
    "258015149311769650815595893692783623165",
    "1119146525007982910516490445168111430048",
    "158478675894919988111089209807767995926",
    "254980726983347633512203575532483066364",
    "66706820410345849277836174571153878427",
    "1043753670404697738110369474677413471996",
    "208762211725022542617316471144915526997",
    "1836568988987571891017301649757431770268",
    "121719316555113793862003739913395039268",
    "113814366055626271438047374284421353461",
    "109562649191060178038182565159088266799",
    "331526003538137488213486206162083846398",
    "90175179397242369455372712796954544135",
    "478505109661826463711850093418602871650",
    "399232661239117480517401994520839366833"
  ]
}
