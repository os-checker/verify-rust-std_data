{
  "file": "core/src/fmt/num.rs",
  "name": "<fmt::num::Binary as fmt::num::GenericRadix>::BASE",
  "hash": "837850645266323620118096957759191292684",
  "hash_direct": "10976937663937162538947578494643180368",
  "src": "const BASE: u8 = $base;",
  "macro_backtrace": [
    {
      "callsite": "radix! { Binary,    2, \"0b\", x @  0 ..=  1 => b'0' + x }",
      "defsite": "macro_rules! radix {\n    ($T:ident, $base:expr, $prefix:expr, $($x:pat => $conv:expr),+) => {\n        unsafe impl GenericRadix for $T {\n            const BASE: u8 = $base;\n            const PREFIX: &'static str = $prefix;\n            fn digit(x: u8) -> u8 {\n                match x {\n                    $($x => $conv,)+\n                    x => panic!(\"number not in the range 0..={}: {}\", Self::BASE - 1, x),\n                }\n            }\n        }\n    }\n}"
    }
  ]
}
