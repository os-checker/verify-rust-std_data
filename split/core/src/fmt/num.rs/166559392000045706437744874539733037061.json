{
  "file": "core/src/fmt/num.rs",
  "name": "fmt::num::div_rem_1e16",
  "hash": "166559392000045706437744874539733037061",
  "hash_direct": "110844276951143460382804816396186920916",
  "src": "fn div_rem_1e16(n: u128) -> (u128, u64) {\n    const D: u128 = 1_0000_0000_0000_0000;\n    // The check inlines well with the caller flow.\n    if n < D {\n        return (0, n as u64);\n    }\n\n    // These constant values are computed with the CHOOSE_MULTIPLIER procedure\n    // from the Granlund & Montgomery paper, using N=128, prec=128 and d=1E16.\n    const M_HIGH: u128 = 76624777043294442917917351357515459181;\n    const SH_POST: u8 = 51;\n\n    let quot = n.widening_mul(M_HIGH).1 >> SH_POST;\n    let rem = n - quot * D;\n    (quot, rem as u64)\n}",
  "callees": [
    "819922674618487244413043350901048949292",
    "2730413463489077682871299968750410950",
    "149177879054194305854706121912784527721",
    "1401790216334955327214351023031146810699",
    "169564152499839983839646051342040887309",
    "39071722518750711716217025197493296495",
    "133509031473879608767378732747493739553",
    "150485570763328741959529276593682551099",
    "380409271697733753615604025175457031719"
  ]
}
