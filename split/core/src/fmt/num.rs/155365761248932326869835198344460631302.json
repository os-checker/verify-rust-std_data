{
  "file": "core/src/fmt/num.rs",
  "name": "fmt::num::<impl i128>::format_into",
  "hash": "155365761248932326869835198344460631302",
  "hash_direct": "571304553671030314012975682441529387202",
  "src": "pub fn format_into(self, buf: &mut NumBuffer<Self>) -> &str {\n        let diff = buf.capacity() - U128_MAX_DEC_N;\n        // FIXME: Once const generics are better, use `NumberBufferTrait::BUF_SIZE` as generic const\n        // for `fmt_u128_inner`.\n        //\n        // In the meantime, we have to use a slice starting at index 1 and add 1 to the returned\n        // offset to ensure the number is correctly generated at the end of the buffer.\n        let mut offset =\n            // SAFETY: `buf` will always be big enough to contain all digits.\n            unsafe { self.unsigned_abs()._fmt_inner(buf.buf.get_unchecked_mut(diff..)) };\n        // We put back the offset at the right position.\n        offset += diff;\n        // Only difference between signed and unsigned are these 4 lines.\n        if self < 0 {\n            offset -= 1;\n            // SAFETY: `buf` will always be big enough to contain all digits plus the minus sign.\n            unsafe {\n                buf.buf.get_unchecked_mut(offset).write(b'-');\n            }\n        }\n        // SAFETY: Starting from `offset`, all elements of the slice have been set.\n        unsafe { slice_buffer_to_str(&buf.buf, offset) }\n    }",
  "callees": [
    "155146884437592745449279657258619050520",
    "149028898773389889316671473901339999257",
    "174302085048697978214413762393835295720",
    "26628196080497732386784756501221452934",
    "1282137949575380123615915439870569752282",
    "1122845743808954568315839891299563834211",
    "1747009873591158945616621860944311863860",
    "258820287469578611817448591488600041899",
    "6962362284417680556415378392413733050",
    "1049863653024822663415096848776233585763",
    "56064935532181582357217772644767711324",
    "1215867595331634964412092261842216784704",
    "96480950455274538863936471544432656148",
    "1424635015723676172711879731863681352571",
    "241158160377170312612713914729750498491",
    "17421822894816687532325615181214565887",
    "23815256893174302637797703719499456373",
    "167165721111217593893743718785627578467",
    "111893148674317480745590608994062193214",
    "2266474927748722104589482484269181849",
    "106331898439077953744539516180016762298",
    "117885714964136718011412517610531756244",
    "24502394795559680767584204508227377419",
    "90771261734924938883465308637020449641",
    "507116607738930391111587036035165972673",
    "540564128152414607516220637571452425273",
    "1605633131122579720611961448336401474874",
    "899089149104620122910782754756910095497",
    "564177479688813429716564910718645657356",
    "126601631307930206616972114137702790273",
    "1192891654661433313514346530799180209624",
    "1686957514670974888615491355656458010664",
    "18988614176753652737157668673594616957",
    "968993476027806531612255900359829014631",
    "111806900311181588865698898335110272570",
    "17848087583919573713734014073660267158",
    "137225128760155526151671631170232111377",
    "25753467031478257716949736687562054564",
    "1204668293620499224013336883119093261459",
    "171593739300022194915526452191835401234",
    "1113032932815665948217565294476098756403",
    "41505289739977656509611396154325757795",
    "478753423337745817613297159272845606672",
    "429511501966379024610548772418614005336",
    "18036140156580546806629269073307822465",
    "155057288402083389555553266758858464823",
    "11119406790923360834756731176691512413",
    "1422107853223743167214810862639095078481",
    "794694008638894565610503689879218203131",
    "61711664538219620431974670811893739375",
    "1527158914029930459411238883137967287102",
    "98253406515198135092164211014980363661",
    "343942489170785946313945651402980657563",
    "21639280041443497202806099100564393988",
    "1589848299034012140817795713052852460003",
    "104830830393010755967596892336759119228",
    "1153959874226978119913857890632071810994",
    "87977286206191110206643684053945734595",
    "84580457401506839910573102725714505987",
    "1504286091581735299715570781132246701377",
    "36990817497430174858508344623774643994",
    "621698472431332816417792581602959129152",
    "739520556846959085018120036998133255835"
  ]
}
