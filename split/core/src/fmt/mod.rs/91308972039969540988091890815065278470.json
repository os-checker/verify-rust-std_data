{
  "file": "core/src/fmt/mod.rs",
  "name": "fmt::run",
  "hash": "91308972039969540988091890815065278470",
  "hash_direct": "142619795922692411015586832636355178352",
  "src": "unsafe fn run(fmt: &mut Formatter<'_>, arg: &rt::Placeholder, args: &[rt::Argument<'_>]) -> Result {\n    let (width, precision) =\n        // SAFETY: arg and args come from the same Arguments,\n        // which guarantees the indexes are always within bounds.\n        unsafe { (getcount(args, &arg.width), getcount(args, &arg.precision)) };\n\n    let options = FormattingOptions { flags: arg.flags, width, precision };\n\n    // Extract the correct argument\n    debug_assert!(arg.position < args.len());\n    // SAFETY: arg and args come from the same Arguments,\n    // which guarantees its index is always within bounds.\n    let value = unsafe { args.get_unchecked(arg.position) };\n\n    // Set all the formatting options.\n    fmt.options = options;\n\n    // Then actually do some printing\n    // SAFETY: this is a placeholder argument.\n    unsafe { value.fmt(fmt) }\n}",
  "callees": [
    "880399244184648853615132446538621153208",
    "258820287469578611817448591488600041899",
    "4954363668049433906791255335906210806",
    "462518227198375540612885370480640396222",
    "1415106497522421883676194742336801697",
    "17421822894816687532325615181214565887",
    "23815256893174302637797703719499456373",
    "61762885803371722481695307475049719440",
    "1113032932815665948217565294476098756403",
    "41505289739977656509611396154325757795",
    "243931809744896974812513529918607549579",
    "1752989996936949203916036071159051010960",
    "478753423337745817613297159272845606672",
    "960898925801407232312924333468692865726",
    "1606202552653889608810199512646967422438",
    "115883727412415935571812162924229901730",
    "1094842765693892546910520378412041552806",
    "154911443990380340341563367924870465980",
    "819756211280848030917202637728825520633",
    "739520556846959085018120036998133255835"
  ]
}
