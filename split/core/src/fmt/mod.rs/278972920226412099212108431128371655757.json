{
  "file": "core/src/fmt/mod.rs",
  "name": "core::fmt::run",
  "hash": "278972920226412099212108431128371655757",
  "hash_direct": "36654976162950893092065888111796973474",
  "src": "unsafe fn run(fmt: &mut Formatter<'_>, arg: &rt::Placeholder, args: &[rt::Argument<'_>]) -> Result {\n    let (width, precision) =\n        // SAFETY: arg and args come from the same Arguments,\n        // which guarantees the indexes are always within bounds.\n        unsafe { (getcount(args, &arg.width), getcount(args, &arg.precision)) };\n\n    let options = FormattingOptions { flags: arg.flags, width, precision };\n\n    // Extract the correct argument\n    debug_assert!(arg.position < args.len());\n    // SAFETY: arg and args come from the same Arguments,\n    // which guarantees its index is always within bounds.\n    let value = unsafe { args.get_unchecked(arg.position) };\n\n    // Set all the formatting options.\n    fmt.options = options;\n\n    // Then actually do some printing\n    // SAFETY: this is a placeholder argument.\n    unsafe { value.fmt(fmt) }\n}",
  "callees": [
    "99685923203798828568507307700071545704",
    "12281449246394340237926324936375242532",
    "94330584173886271165317658949806332710",
    "41170807463746850551037921664673907002",
    "1552988011012146591114896816323571303973",
    "181267529910573756716102767087485333561",
    "1824545319189397521315695847785602896178",
    "114529832601439266838806626296541088748",
    "986792852990965178117440249555081278778",
    "90818112465881722349174357944217011292",
    "170281423934441608902372914597711355436",
    "146612017564224181584303574960223420416",
    "63085389524472853348886374617170044294",
    "147407057956426381345748518860972672100",
    "34530158894513154624078829990540672618",
    "1175676955048129378315532673185959319014",
    "1194473680854491575216265225452978582672",
    "42640861811413251621458178080920148489",
    "1349879990858633985615465432111373267034",
    "112989397975222255532054380452996322405"
  ]
}
