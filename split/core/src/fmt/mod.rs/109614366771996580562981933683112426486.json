{
  "file": "core/src/fmt/mod.rs",
  "name": "fmt::Arguments::<'_>::estimated_capacity",
  "hash": "109614366771996580562981933683112426486",
  "hash_direct": "1834800825800702762712015344298180455647",
  "src": "pub fn estimated_capacity(&self) -> usize {\n        let pieces_length: usize = self.pieces.iter().map(|x| x.len()).sum();\n\n        if self.args.is_empty() {\n            pieces_length\n        } else if !self.pieces.is_empty() && self.pieces[0].is_empty() && pieces_length < 16 {\n            // If the format string starts with an argument,\n            // don't preallocate anything, unless length\n            // of pieces is significant.\n            0\n        } else {\n            // There are some arguments, so any additional push\n            // will reallocate the string. To avoid that,\n            // we're \"pre-doubling\" the capacity here.\n            pieces_length.checked_mul(2).unwrap_or(0)\n        }\n    }",
  "callees": [
    "268834647020186218414332304826955896013",
    "47323665595455568617290020941376774286",
    "111425599901702694743874629435682172347",
    "714811817540972740211524868124730226803",
    "1329845230409163288212548289525672875535",
    "47278574192031232971799194590021398469",
    "84909938954906103112758184730426842057",
    "16824420916691935049705640393259467449",
    "1566855684526460099116008226134288367006",
    "6408502959692395671648112450209036142",
    "655717253601381070117187491310540869254",
    "1154617355573645543010543593517869102914",
    "7616003489515880511091242843836337745",
    "166113427796775778655104748609380824573",
    "142553356775870750666169063104343714461",
    "1151425642565769459716359411295254550043",
    "6610578287057202572391600236619840046",
    "841346702487865802717731804342903065853",
    "1182371843420022111010336901757313084440",
    "26064680123257945312537992217601395168",
    "13796074939706337624507826801091410480",
    "60746280367815763754650341937712504214",
    "841904668883726495316837415609641023349",
    "1258931108755458209614962827106116332072",
    "53589810041120365110998933211304468616",
    "1243847030362955698517207199029174369810",
    "105125143701458073564296455695110349394",
    "13654897219200689858235053536742411410",
    "36775658661735214098997080196077083985",
    "701572182998640933615295374769329539466",
    "25930241974724637292994171257021210872",
    "617554482545947003412104686554524783687",
    "14289085791843058303972699274315536239",
    "136032794974893814259994759472454752644",
    "120554772527146371477803731781472626688",
    "691402600644474627814624731082580929915",
    "897722140673646193617475540404458346629",
    "36367157497287366512431393327544291585",
    "483761815587102458610089280080839836658",
    "169017152061146820209827866672499117723",
    "1060233950437352204716225077069268863553",
    "1149777590162680490312342394955198247335",
    "164270848150013505114031889181489753537",
    "134182694887231806652300599166807697346",
    "132155652073306269253281003001512404719",
    "35977944798899641916010050417857595712",
    "176364776419939497975314683987493267286",
    "68004779650039915749794551423890291664",
    "102380848348467470226943499917362512346",
    "743531895437972340716573117064324516520",
    "179150738284979720946687765586257374684",
    "158382999748410254006289405466019709925",
    "45819503778375231969038300244556098990",
    "103529232425067372948580977297303381856",
    "500039049531792023414807911624995133090",
    "156558724737321886766153526308848840146",
    "1137271765924114987514947403158445640283",
    "393974833682574441515290398983271504453",
    "399232661239117480517401994520839366833"
  ]
}
