{
  "file": "core/src/fmt/mod.rs",
  "name": "core::fmt::Arguments::<'_>::estimated_capacity",
  "hash": "963708792316318683715803912156334953621",
  "hash_direct": "1644094721957281262912322112794265340347",
  "src": "pub fn estimated_capacity(&self) -> usize {\n        let pieces_length: usize = self.pieces.iter().map(|x| x.len()).sum();\n\n        if self.args.is_empty() {\n            pieces_length\n        } else if !self.pieces.is_empty() && self.pieces[0].is_empty() && pieces_length < 16 {\n            // If the format string starts with an argument,\n            // don't preallocate anything, unless length\n            // of pieces is significant.\n            0\n        } else {\n            // There are some arguments, so any additional push\n            // will reallocate the string. To avoid that,\n            // we're \"pre-doubling\" the capacity here.\n            pieces_length.checked_mul(2).unwrap_or(0)\n        }\n    }",
  "callees": [
    "67346831302206127672772486614674656505",
    "12281449246394340237926324936375242532",
    "99835071136844477394667148890151411684",
    "73694171442177138896992135977130617471",
    "181267529910573756716102767087485333561",
    "310476737258981539215905981644988688429",
    "1317496639393946813212918050983619520041",
    "1824545319189397521315695847785602896178",
    "525394489459816580313234609142547092704",
    "675122505800363520012259284407973816466",
    "992935740149262460910551522544723125750",
    "71577729608259758934620112863904281714",
    "174748630461781596437082374845001339230",
    "1727523272440419069416062698507021507560",
    "1258320852315384438517979226404751820200",
    "812085359570770192918155400204891524118",
    "289295181730504607410073447607513240977",
    "5731834383683152134719350346688847365",
    "105784042461548404615622384875082564775",
    "8896238559920380735332622633484699245",
    "104367634591107546717821077127163354051",
    "93969677573326797567504699174036214619",
    "986792852990965178117440249555081278778",
    "90818112465881722349174357944217011292",
    "170281423934441608902372914597711355436",
    "146612017564224181584303574960223420416",
    "63085389524472853348886374617170044294",
    "105571687036398595519000522953658296718",
    "136077330950408570159849722816589137885",
    "117358993470614949417284944822417039511",
    "175623961004431005849298709567805707658",
    "33067340742295788584221598515845050786",
    "262831349882779883815480941076479924039",
    "19058764743854314419670517218317949449",
    "108203541775623350812674778394528978645",
    "89288558456251125401844121250587548126",
    "759036253264203452012567249983570061795",
    "1613905484206013749415497772055524433112",
    "514470223088494942750640088946259873",
    "78265179659726465801678498072513002580",
    "3396882223938095717956852003819016845",
    "95422183373530718549786508691059761736",
    "1650484605548906660513298368902957080523",
    "1157738137527420003016478144437434875402",
    "48072633549935049757801108556949381008",
    "1755836681329683206210836025968412671059",
    "100728032143316276442780829115004706955",
    "6937285834544869292563777751206033350",
    "17715121612901790954960379921454027172",
    "14837813393108278775573282091719986243",
    "1514501572207779984714037084897110524877",
    "63563875296081398606766669924753913582",
    "280133775636475637812335811211808216208",
    "168803374556095914217018758851690782784",
    "1508773653512704694540919786852289740",
    "1751182092721409607066971085433427634",
    "747156457449598790816736684951635660145",
    "177033107771472364374293399575552552454",
    "112989397975222255532054380452996322405"
  ]
}
