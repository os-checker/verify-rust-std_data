{
  "file": "core/src/fmt/mod.rs",
  "name": "fmt::write",
  "hash": "174967394945862090364279848592208296953",
  "hash_direct": "13696109384612070732818836540632389959",
  "src": "pub fn write(output: &mut dyn Write, args: Arguments<'_>) -> Result {\n    let mut formatter = Formatter::new(output, FormattingOptions::new());\n    let mut idx = 0;\n\n    match args.fmt {\n        None => {\n            // We can use default formatting parameters for all arguments.\n            for (i, arg) in args.args.iter().enumerate() {\n                // SAFETY: args.args and args.pieces come from the same Arguments,\n                // which guarantees the indexes are always within bounds.\n                let piece = unsafe { args.pieces.get_unchecked(i) };\n                if !piece.is_empty() {\n                    formatter.buf.write_str(*piece)?;\n                }\n\n                // SAFETY: There are no formatting parameters and hence no\n                // count arguments.\n                unsafe {\n                    arg.fmt(&mut formatter)?;\n                }\n                idx += 1;\n            }\n        }\n        Some(fmt) => {\n            // Every spec has a corresponding argument that is preceded by\n            // a string piece.\n            for (i, arg) in fmt.iter().enumerate() {\n                // SAFETY: fmt and args.pieces come from the same Arguments,\n                // which guarantees the indexes are always within bounds.\n                let piece = unsafe { args.pieces.get_unchecked(i) };\n                if !piece.is_empty() {\n                    formatter.buf.write_str(*piece)?;\n                }\n                // SAFETY: arg and args.args come from the same Arguments,\n                // which guarantees the indexes are always within bounds.\n                unsafe { run(&mut formatter, arg, args.args) }?;\n                idx += 1;\n            }\n        }\n    }\n\n    // There can be only one trailing string piece left.\n    if let Some(piece) = args.pieces.get(idx) {\n        formatter.buf.write_str(*piece)?;\n    }\n\n    Ok(())\n}",
  "callees": [
    "1449318134079626371011274072562212788848",
    "158834747702222751563622469325806071500",
    "4960461046229976118108876182482238045",
    "880399244184648853615132446538621153208",
    "91308972039969540988091890815065278470",
    "258820287469578611817448591488600041899",
    "4954363668049433906791255335906210806",
    "462518227198375540612885370480640396222",
    "1415106497522421883676194742336801697",
    "588974892899239543415856878986124229421",
    "690438059002452523915046149102377829082",
    "17421822894816687532325615181214565887",
    "1547564489779508118311471276601353146868",
    "23815256893174302637797703719499456373",
    "573750095347314675218420517967106720291",
    "19127809293168330713198522102322069120",
    "146302972784592707345017558525924565358",
    "110489938845591258695432360905480776739",
    "65069040306676020898444859464496431715",
    "1823645488622937895012673111274870809755",
    "1820316365630756497411082775870133134724",
    "713596427418837315916034622167448792635",
    "749080744560555709814769272248719962971",
    "146686842676245753349689708687358184876",
    "143572956432032064744447501745832117320",
    "13303575705867660165971022725037666878",
    "761861023504359043615820998596748928032",
    "157526224548632931644224402393760490185",
    "366503061556370158810229951695642705038",
    "1706241664392483122616630414095325426767",
    "1336395986670888604714795400021301436124",
    "1779425227385014865413763254225852997980",
    "949119772679999304913254775119628944156",
    "61762885803371722481695307475049719440",
    "1113032932815665948217565294476098756403",
    "41505289739977656509611396154325757795",
    "243931809744896974812513529918607549579",
    "1752989996936949203916036071159051010960",
    "478753423337745817613297159272845606672",
    "3658730781980743391697756456907208995",
    "176386771705132260856587306647620489942",
    "58556264066334599336424357434445237777",
    "960898925801407232312924333468692865726",
    "141110666132885552924669202659075536526",
    "56252927251435970978636410777602608721",
    "70189786848693324615028118901413603891",
    "1758079100556217157185991271441314538",
    "1585972590187889070117028601346813813214",
    "1606202552653889608810199512646967422438",
    "137858457737126721339050743717226009000",
    "1094251261101801847513288225556855042079",
    "133190003003759925793667076679125824144",
    "119410572960049574203441365705573330364",
    "293645540748671545017999185713660079650",
    "5607578020819944315970194945020012681",
    "510531638386111881910053340190058988939",
    "40886540288475765763037402450466686093",
    "118320558337677119769123625739060418786",
    "999894065589869448612231539797228218231",
    "86952898111294821451658113502791201350",
    "141296000771128581945497538145890845343",
    "124743396873944380901919017967253874067",
    "150243093200272651816225092713556841110",
    "777454966023882485213336970821447203461",
    "798871996884082421610081782312663349463",
    "13863098581405631524288807864350146405",
    "105155837525522083449912883665304934776",
    "1404731032427000255717859115232501530921",
    "1513333453617937806712878309090792611957",
    "63824875704704228052884797545106788461",
    "37611015082660603716849267229566955360",
    "1006965550971568470513339634703718564510",
    "813368619794702869414005756234477751011",
    "1359933470730887149416155830775469624234",
    "180175623099158380248987811409809941831",
    "123489981763517494699775008546456061720",
    "115883727412415935571812162924229901730",
    "93823778961912885171861814854836367565",
    "321688735089620358916457935724896313889",
    "943048867924649835013779616421314460758",
    "208257619197928444113832208997346155109",
    "1637911438640321783717995568863978104742",
    "6070603776637052609765524141950388493",
    "1094842765693892546910520378412041552806",
    "1246549294390316174211520358684701550573",
    "1528987468365251607818125127476060370393",
    "137147026445318887422604340055542353314",
    "30819441612753718577366232250007643490",
    "852298530973108873212161851321200820382",
    "154911443990380340341563367924870465980",
    "819756211280848030917202637728825520633",
    "60020754642282354823285669083003912494",
    "982812517398244847818134688650878457542",
    "739520556846959085018120036998133255835"
  ]
}
