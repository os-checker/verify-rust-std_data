{
  "file": "core/src/fmt/mod.rs",
  "name": "fmt::run",
  "hash": "1179015178765463762414234671921766134145",
  "hash_direct": "142619795922692411015586832636355178352",
  "src": "unsafe fn run(fmt: &mut Formatter<'_>, arg: &rt::Placeholder, args: &[rt::Argument<'_>]) -> Result {\n    let (width, precision) =\n        // SAFETY: arg and args come from the same Arguments,\n        // which guarantees the indexes are always within bounds.\n        unsafe { (getcount(args, &arg.width), getcount(args, &arg.precision)) };\n\n    let options = FormattingOptions { flags: arg.flags, width, precision };\n\n    // Extract the correct argument\n    debug_assert!(arg.position < args.len());\n    // SAFETY: arg and args come from the same Arguments,\n    // which guarantees its index is always within bounds.\n    let value = unsafe { args.get_unchecked(arg.position) };\n\n    // Set all the formatting options.\n    fmt.options = options;\n\n    // Then actually do some printing\n    // SAFETY: this is a placeholder argument.\n    unsafe { value.fmt(fmt) }\n}",
  "callees": [
    "35398161789749681612681774609204698030",
    "47323665595455568617290020941376774286",
    "33648701090774792381476499826703911309",
    "17059090463224209834835470382370244130",
    "25768524018977866517055903022448790318",
    "1329845230409163288212548289525672875535",
    "16824420916691935049705640393259467449",
    "862746525473562901814208597568406058076",
    "841904668883726495316837415609641023349",
    "1258931108755458209614962827106116332072",
    "53589810041120365110998933211304468616",
    "1243847030362955698517207199029174369810",
    "105125143701458073564296455695110349394",
    "172651811582921907362991207281968133556",
    "58610947851065178096877308904752748129",
    "159756182951594195141958974558316251741",
    "15983849791221256564812498585385603744",
    "138774632689772549819578629668035245923",
    "550150895960312460312176584159342455723",
    "399232661239117480517401994520839366833"
  ]
}
