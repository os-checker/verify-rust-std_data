{
  "file": "core/src/alloc/layout.rs",
  "name": "core::alloc::Layout::from_size_align_unchecked",
  "hash": "1803329896288060234818324505062680243524",
  "hash_direct": "15143232440277400361556564492212481922",
  "src": "pub const unsafe fn from_size_align_unchecked(size: usize, align: usize) -> Self {\n        assert_unsafe_precondition!(\n            check_library_ub,\n            \"Layout::from_size_align_unchecked requires that align is a power of 2 \\\n            and the rounded-up allocation size does not exceed isize::MAX\",\n            (\n                size: usize = size,\n                align: usize = align,\n            ) => Layout::is_size_align_valid(size, align)\n        );\n        // SAFETY: the caller is required to uphold the preconditions.\n        unsafe { Layout { size, align: mem::transmute(align) } }\n    }",
  "callees": [
    "74582435882304541756907371447791300562",
    "116988710396478150633330979827831642523",
    "12281449246394340237926324936375242532",
    "181267529910573756716102767087485333561",
    "1824545319189397521315695847785602896178",
    "897265533945643607115272871669854221703",
    "89502211078669479795623704974378882516",
    "986792852990965178117440249555081278778",
    "90818112465881722349174357944217011292",
    "63085389524472853348886374617170044294",
    "41567241620038406215851091758143153711",
    "219219865313711050111759755233398488515",
    "117471816198702018754540855755299259662",
    "102689691599348045787776542664671783227",
    "166733430212842246099444193348241345083",
    "112989397975222255532054380452996322405"
  ]
}
