{
  "file": "core/src/alloc/layout.rs",
  "name": "alloc::layout::Layout::from_size_align_unchecked",
  "hash": "162350892733688192722165107322765566320",
  "hash_direct": "14296664214873663563259762418240540381",
  "src": "pub const unsafe fn from_size_align_unchecked(size: usize, align: usize) -> Self {\n        assert_unsafe_precondition!(\n            check_library_ub,\n            \"Layout::from_size_align_unchecked requires that align is a power of 2 \\\n            and the rounded-up allocation size does not exceed isize::MAX\",\n            (\n                size: usize = size,\n                align: usize = align,\n            ) => Layout::is_size_align_valid(size, align)\n        );\n        // SAFETY: the caller is required to uphold the preconditions.\n        unsafe { Layout { size, align: mem::transmute(align) } }\n    }",
  "callees": [
    "1799843820648816373112280196179081243546",
    "113777446734612017643296714849006136962",
    "258820287469578611817448591488600041899",
    "17421822894816687532325615181214565887",
    "23815256893174302637797703719499456373",
    "37868078735602925891573318122962819320",
    "1578703703635175719018067387082881800385",
    "1113032932815665948217565294476098756403",
    "41505289739977656509611396154325757795",
    "478753423337745817613297159272845606672",
    "112152844438854238887994758767167519478",
    "1041060259516224786015110088074935534548",
    "891910345372795036811427148890481758190",
    "1760813677608613135410547518143088093737",
    "44273188019629847143382182489279089772",
    "739520556846959085018120036998133255835"
  ]
}
