{
  "file": "core/src/sync/atomic.rs",
  "name": "sync::atomic::atomic_and::<u64, u64>",
  "hash": "58259225258913043672608774321083570792",
  "hash_direct": "1163453114624505977713133831950070654377",
  "src": "unsafe fn atomic_and<T: Copy, U: Copy>(dst: *mut T, val: U, order: Ordering) -> T {\n    // SAFETY: the caller must uphold the safety contract for `atomic_and`\n    unsafe {\n        match order {\n            Relaxed => intrinsics::atomic_and::<T, U, { AO::Relaxed }>(dst, val),\n            Acquire => intrinsics::atomic_and::<T, U, { AO::Acquire }>(dst, val),\n            Release => intrinsics::atomic_and::<T, U, { AO::Release }>(dst, val),\n            AcqRel => intrinsics::atomic_and::<T, U, { AO::AcqRel }>(dst, val),\n            SeqCst => intrinsics::atomic_and::<T, U, { AO::SeqCst }>(dst, val),\n        }\n    }\n}"
}
