{
  "file": "core/src/sync/atomic.rs",
  "name": "sync::atomic::atomic_load::<u64>",
  "hash": "44624737591568607475621954621864870909",
  "hash_direct": "139664983128006355832468611822452894826",
  "src": "unsafe fn atomic_load<T: Copy>(dst: *const T, order: Ordering) -> T {\n    // SAFETY: the caller must uphold the safety contract for `atomic_load`.\n    unsafe {\n        match order {\n            Relaxed => intrinsics::atomic_load::<T, { AO::Relaxed }>(dst),\n            Acquire => intrinsics::atomic_load::<T, { AO::Acquire }>(dst),\n            SeqCst => intrinsics::atomic_load::<T, { AO::SeqCst }>(dst),\n            Release => panic!(\"there is no such thing as a release load\"),\n            AcqRel => panic!(\"there is no such thing as an acquire-release load\"),\n        }\n    }\n}",
  "callees": [
    "258820287469578611817448591488600041899",
    "1113032932815665948217565294476098756403",
    "41505289739977656509611396154325757795",
    "1752989996936949203916036071159051010960"
  ]
}
