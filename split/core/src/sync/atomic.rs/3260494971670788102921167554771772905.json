{
  "file": "core/src/sync/atomic.rs",
  "name": "sync::atomic::ATOMIC_USIZE_INIT",
  "hash": "3260494971670788102921167554771772905",
  "hash_direct": "126161504268813839668215229559522376461",
  "src": "pub const ATOMIC_USIZE_INIT: AtomicUsize = AtomicUsize::new(0);",
  "macro_backtrace": [
    {
      "callsite": "atomic_int_ptr_sized! {\n    \"16\" 2\n    \"32\" 4\n    \"64\" 8\n}",
      "defsite": "macro_rules! atomic_int_ptr_sized {\n    ( $($target_pointer_width:literal $align:literal)* ) => { $(\n        #[cfg(target_pointer_width = $target_pointer_width)]\n        atomic_int! {\n            cfg(target_has_atomic = \"ptr\"),\n            cfg(target_has_atomic_equal_alignment = \"ptr\"),\n            stable(feature = \"rust1\", since = \"1.0.0\"),\n            stable(feature = \"extended_compare_and_swap\", since = \"1.10.0\"),\n            stable(feature = \"atomic_debug\", since = \"1.3.0\"),\n            stable(feature = \"atomic_access\", since = \"1.15.0\"),\n            stable(feature = \"atomic_from\", since = \"1.23.0\"),\n            stable(feature = \"atomic_nand\", since = \"1.27.0\"),\n            rustc_const_stable(feature = \"const_ptr_sized_atomics\", since = \"1.24.0\"),\n            rustc_const_stable(feature = \"const_atomic_into_inner\", since = \"1.79.0\"),\n            rustc_diagnostic_item = \"AtomicIsize\",\n            \"isize\",\n            \"\",\n            atomic_min, atomic_max,\n            $align,\n            isize AtomicIsize\n        }\n        #[cfg(target_pointer_width = $target_pointer_width)]\n        atomic_int! {\n            cfg(target_has_atomic = \"ptr\"),\n            cfg(target_has_atomic_equal_alignment = \"ptr\"),\n            stable(feature = \"rust1\", since = \"1.0.0\"),\n            stable(feature = \"extended_compare_and_swap\", since = \"1.10.0\"),\n            stable(feature = \"atomic_debug\", since = \"1.3.0\"),\n            stable(feature = \"atomic_access\", since = \"1.15.0\"),\n            stable(feature = \"atomic_from\", since = \"1.23.0\"),\n            stable(feature = \"atomic_nand\", since = \"1.27.0\"),\n            rustc_const_stable(feature = \"const_ptr_sized_atomics\", since = \"1.24.0\"),\n            rustc_const_stable(feature = \"const_atomic_into_inner\", since = \"1.79.0\"),\n            rustc_diagnostic_item = \"AtomicUsize\",\n            \"usize\",\n            \"\",\n            atomic_umin, atomic_umax,\n            $align,\n            usize AtomicUsize\n        }\n\n        /// An [`AtomicIsize`] initialized to `0`.\n        #[cfg(target_pointer_width = $target_pointer_width)]\n        #[stable(feature = \"rust1\", since = \"1.0.0\")]\n        #[deprecated(\n            since = \"1.34.0\",\n            note = \"the `new` function is now preferred\",\n            suggestion = \"AtomicIsize::new(0)\",\n        )]\n        pub const ATOMIC_ISIZE_INIT: AtomicIsize = AtomicIsize::new(0);\n\n        /// An [`AtomicUsize`] initialized to `0`.\n        #[cfg(target_pointer_width = $target_pointer_width)]\n        #[stable(feature = \"rust1\", since = \"1.0.0\")]\n        #[deprecated(\n            since = \"1.34.0\",\n            note = \"the `new` function is now preferred\",\n            suggestion = \"AtomicUsize::new(0)\",\n        )]\n        pub const ATOMIC_USIZE_INIT: AtomicUsize = AtomicUsize::new(0);\n    )* };\n}"
    }
  ],
  "callees": [
    "75381752157389804399749658747389496753",
    "1118806953883867199917543866095473041638"
  ]
}
