{
  "file": "core/src/sync/atomic.rs",
  "name": "sync::atomic::atomic_load::<i32>",
  "hash": "168176923846465541544704820697341048679",
  "hash_direct": "108115188073539006578042112379459423157",
  "src": "unsafe fn atomic_load<T: Copy>(dst: *const T, order: Ordering) -> T {\n    // SAFETY: the caller must uphold the safety contract for `atomic_load`.\n    unsafe {\n        match order {\n            Relaxed => intrinsics::atomic_load::<T, { AO::Relaxed }>(dst),\n            Acquire => intrinsics::atomic_load::<T, { AO::Acquire }>(dst),\n            SeqCst => intrinsics::atomic_load::<T, { AO::SeqCst }>(dst),\n            Release => panic!(\"there is no such thing as a release load\"),\n            AcqRel => panic!(\"there is no such thing as an acquire-release load\"),\n        }\n    }\n}",
  "callees": [
    "47323665595455568617290020941376774286",
    "841904668883726495316837415609641023349",
    "1258931108755458209614962827106116332072",
    "1243847030362955698517207199029174369810"
  ]
}
