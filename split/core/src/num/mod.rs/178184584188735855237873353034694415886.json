{
  "file": "core/src/num/mod.rs",
  "name": "num::verify::unchecked_mul_i64_large_pos",
  "hash": "178184584188735855237873353034694415886",
  "hash_direct": "1334742368111558172212170975756476367146",
  "proof_kind": "\"Contract\"",
  "attrs": [
    "#[kanitool::proof_for_contract = \"i64 :: unchecked_mul\"]\n"
  ],
  "src": "pub fn $harness_name() {\n                    let num1: $type = kani::any::<$type>();\n                    let num2: $type = kani::any::<$type>();\n\n                    kani::assume(num1 >= $min && num1 <= $max);\n                    kani::assume(num2 >= $min && num2 <= $max);\n\n                    // Ensure that multiplication does not overflow\n                    kani::assume(!num1.overflowing_mul(num2).1);\n\n                    unsafe {\n                        num1.$method(num2);\n                    }\n                }",
  "macro_backtrace": [
    {
      "callsite": "generate_unchecked_mul_intervals!(\n        i64,\n        unchecked_mul,\n        unchecked_mul_i64_small,\n        -10i64,\n        10i64,\n        unchecked_mul_i64_large_pos,\n        i64::MAX - 1000i64,\n        i64::MAX,\n        unchecked_mul_i64_large_neg,\n        i64::MIN,\n        i64::MIN + 1000i64,\n        unchecked_mul_i64_edge_pos,\n        i64::MAX / 2,\n        i64::MAX,\n        unchecked_mul_i64_edge_neg,\n        i64::MIN,\n        i64::MIN / 2\n    )",
      "defsite": "macro_rules! generate_unchecked_mul_intervals {\n        ($type:ty, $method:ident, $($harness_name:ident, $min:expr, $max:expr),+) => {\n            $(\n                #[kani::proof_for_contract($type::$method)]\n                pub fn $harness_name() {\n                    let num1: $type = kani::any::<$type>();\n                    let num2: $type = kani::any::<$type>();\n\n                    kani::assume(num1 >= $min && num1 <= $max);\n                    kani::assume(num2 >= $min && num2 <= $max);\n\n                    // Ensure that multiplication does not overflow\n                    kani::assume(!num1.overflowing_mul(num2).1);\n\n                    unsafe {\n                        num1.$method(num2);\n                    }\n                }\n            )+\n        }\n    }"
    }
  ],
  "callees": [
    "20764881003415525917678483578325949255",
    "147679260057690976339023598564057646442",
    "91135116531165958908997621750933815702",
    "1707350114664415705912018169157381460741",
    "162562988142812920362309614379838072419",
    "55268624181377464941500382738073713012",
    "9745278047109817941957780214339587305",
    "47323665595455568617290020941376774286",
    "1329845230409163288212548289525672875535",
    "16824420916691935049705640393259467449",
    "102984800573408065696498308131616940199",
    "148764254203496306545262693095245362709",
    "841904668883726495316837415609641023349",
    "1258931108755458209614962827106116332072",
    "105125143701458073564296455695110349394",
    "175183777671625048937270889743795407526",
    "399232661239117480517401994520839366833"
  ]
}
