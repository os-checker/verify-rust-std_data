{
  "file": "core/src/num/mod.rs",
  "name": "num::verify::unchecked_mul_i128_large_pos",
  "hash": "14102294481266943014282313349972975409",
  "hash_direct": "133799517991379402836854298404461913670",
  "proof_kind": "\"Contract\"",
  "attrs": [
    "#[kanitool::proof_for_contract = \"i128 :: unchecked_mul\"]\n"
  ],
  "src": "pub fn $harness_name() {\n                    let num1: $type = kani::any::<$type>();\n                    let num2: $type = kani::any::<$type>();\n\n                    kani::assume(num1 >= $min && num1 <= $max);\n                    kani::assume(num2 >= $min && num2 <= $max);\n\n                    // Ensure that multiplication does not overflow\n                    kani::assume(!num1.overflowing_mul(num2).1);\n\n                    unsafe {\n                        num1.$method(num2);\n                    }\n                }",
  "macro_backtrace": [
    {
      "callsite": "generate_unchecked_mul_intervals!(\n        i128,\n        unchecked_mul,\n        unchecked_mul_i128_small,\n        -10i128,\n        10i128,\n        unchecked_mul_i128_large_pos,\n        i128::MAX - 1000i128,\n        i128::MAX,\n        unchecked_mul_i128_large_neg,\n        i128::MIN,\n        i128::MIN + 1000i128,\n        unchecked_mul_i128_edge_pos,\n        i128::MAX / 2,\n        i128::MAX,\n        unchecked_mul_i128_edge_neg,\n        i128::MIN,\n        i128::MIN / 2\n    )",
      "defsite": "macro_rules! generate_unchecked_mul_intervals {\n        ($type:ty, $method:ident, $($harness_name:ident, $min:expr, $max:expr),+) => {\n            $(\n                #[kani::proof_for_contract($type::$method)]\n                pub fn $harness_name() {\n                    let num1: $type = kani::any::<$type>();\n                    let num2: $type = kani::any::<$type>();\n\n                    kani::assume(num1 >= $min && num1 <= $max);\n                    kani::assume(num2 >= $min && num2 <= $max);\n\n                    // Ensure that multiplication does not overflow\n                    kani::assume(!num1.overflowing_mul(num2).1);\n\n                    unsafe {\n                        num1.$method(num2);\n                    }\n                }\n            )+\n        }\n    }"
    }
  ],
  "callees": [
    "121436409644345670985560530364476132244",
    "26886143464234633910637095875831486656",
    "146932710099350851495411580356925047368",
    "1672600323313042077816905580920938331182",
    "162562988142812920362309614379838072419",
    "55268624181377464941500382738073713012",
    "129134249345460051228985591432565859699",
    "47323665595455568617290020941376774286",
    "1329845230409163288212548289525672875535",
    "16824420916691935049705640393259467449",
    "12532135786135712147398952337799135400",
    "140027106366962773442377555510627950162",
    "841904668883726495316837415609641023349",
    "1258931108755458209614962827106116332072",
    "105125143701458073564296455695110349394",
    "136310523251969237051855580205978271966",
    "399232661239117480517401994520839366833"
  ]
}
