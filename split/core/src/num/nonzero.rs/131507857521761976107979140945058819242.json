{
  "file": "core/src/num/nonzero.rs",
  "name": "num::nonzero::verify::check_mul_u64_edge",
  "hash": "131507857521761976107979140945058819242",
  "hash_direct": "178013762103963954659623353550179928418",
  "proof_kind": "\"Contract\"",
  "attrs": [
    "#[kanitool::proof_for_contract = \"NonZero :: < u64 > :: unchecked_mul\"]\n"
  ],
  "src": "pub fn $nonzero_check_mul_for() {\n                let x = kani::any::<$t>();\n                let y = kani::any::<$t>();\n\n                kani::assume(x != 0 && x >= $min && x <= $max);\n                kani::assume(y != 0 && y >= $min && y <= $max);\n\n                let x = <$nonzero_type>::new(x).unwrap();\n                let y = <$nonzero_type>::new(y).unwrap();\n\n                unsafe {\n                    x.unchecked_mul(y);\n                }\n            }",
  "macro_backtrace": [
    {
      "callsite": "check_mul_unchecked_intervals!(\n        u64,\n        NonZeroU64,\n        check_mul_u64_edge,\n        NonZeroU64::new(u64::MAX / 2).unwrap().into(),\n        NonZeroU64::new(u64::MAX).unwrap().into()\n    )",
      "defsite": "macro_rules! check_mul_unchecked_intervals {\n        ($t:ty, $nonzero_type:ty, $nonzero_check_mul_for:ident, $min:expr, $max:expr) => {\n            #[kani::proof_for_contract(NonZero::<$t>::unchecked_mul)]\n            pub fn $nonzero_check_mul_for() {\n                let x = kani::any::<$t>();\n                let y = kani::any::<$t>();\n\n                kani::assume(x != 0 && x >= $min && x <= $max);\n                kani::assume(y != 0 && y >= $min && y <= $max);\n\n                let x = <$nonzero_type>::new(x).unwrap();\n                let y = <$nonzero_type>::new(y).unwrap();\n\n                unsafe {\n                    x.unchecked_mul(y);\n                }\n            }\n        };\n    }"
    }
  ],
  "callees": [
    "55732587752735335945356669824614635762",
    "1648886390739730508816615733445262410614",
    "778713662165510584811932027160146289674",
    "155903546558043130181109834204848741707",
    "162562988142812920362309614379838072419",
    "55268624181377464941500382738073713012",
    "110627676895616442107840116311482708557",
    "1282632302844013801918056890185804294179",
    "47323665595455568617290020941376774286",
    "1329845230409163288212548289525672875535",
    "16824420916691935049705640393259467449",
    "137295492247474906704815706771344881363",
    "1783210845261203538713498935807640544288",
    "86149906497652422709198706302615219549",
    "181188309777117069329883468812680038631",
    "104712934378736980918347933833765585963",
    "89253289676802301796257942207888358960",
    "1375454256588215471914022369183935991358",
    "42378895068790166253879670066486793098",
    "90154399545981751929034700539601653658",
    "841904668883726495316837415609641023349",
    "1258931108755458209614962827106116332072",
    "53589810041120365110998933211304468616",
    "1243847030362955698517207199029174369810",
    "105125143701458073564296455695110349394",
    "77300666745689100864524444058407549670",
    "1218790289670026660418434748374709001141",
    "399232661239117480517401994520839366833"
  ]
}
