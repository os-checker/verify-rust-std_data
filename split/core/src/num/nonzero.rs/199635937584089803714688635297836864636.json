{
  "file": "core/src/num/nonzero.rs",
  "name": "num::nonzero::verify::check_mul_i128_edge_neg",
  "hash": "199635937584089803714688635297836864636",
  "hash_direct": "722137608554123211812423625820426896587",
  "proof_kind": "\"Contract\"",
  "attrs": [
    "#[kanitool::proof_for_contract = \"NonZero :: < i128 > :: unchecked_mul\"]\n"
  ],
  "src": "pub fn $nonzero_check_mul_for() {\n                let x = kani::any::<$t>();\n                let y = kani::any::<$t>();\n\n                kani::assume(x != 0 && x >= $min && x <= $max);\n                kani::assume(y != 0 && y >= $min && y <= $max);\n\n                let x = <$nonzero_type>::new(x).unwrap();\n                let y = <$nonzero_type>::new(y).unwrap();\n\n                unsafe {\n                    x.unchecked_mul(y);\n                }\n            }",
  "macro_backtrace": [
    {
      "callsite": "check_mul_unchecked_intervals!(\n        i128,\n        NonZeroI128,\n        check_mul_i128_edge_neg,\n        NonZeroI128::new(i128::MIN / 2).unwrap().into(),\n        NonZeroI128::new(i128::MIN + 1).unwrap().into()\n    )",
      "defsite": "macro_rules! check_mul_unchecked_intervals {\n        ($t:ty, $nonzero_type:ty, $nonzero_check_mul_for:ident, $min:expr, $max:expr) => {\n            #[kani::proof_for_contract(NonZero::<$t>::unchecked_mul)]\n            pub fn $nonzero_check_mul_for() {\n                let x = kani::any::<$t>();\n                let y = kani::any::<$t>();\n\n                kani::assume(x != 0 && x >= $min && x <= $max);\n                kani::assume(y != 0 && y >= $min && y <= $max);\n\n                let x = <$nonzero_type>::new(x).unwrap();\n                let y = <$nonzero_type>::new(y).unwrap();\n\n                unsafe {\n                    x.unchecked_mul(y);\n                }\n            }\n        };\n    }"
    }
  ],
  "callees": [
    "121436409644345670985560530364476132244",
    "26886143464234633910637095875831486656",
    "146932710099350851495411580356925047368",
    "1672600323313042077816905580920938331182",
    "162562988142812920362309614379838072419",
    "55268624181377464941500382738073713012",
    "129134249345460051228985591432565859699",
    "152565854762187315769041670774396813388",
    "47323665595455568617290020941376774286",
    "1329845230409163288212548289525672875535",
    "16824420916691935049705640393259467449",
    "12532135786135712147398952337799135400",
    "140027106366962773442377555510627950162",
    "11791902908307714279691290826407580057",
    "20778950541755162657702323764137217103",
    "422227233868703869115214172499681347219",
    "1655846349029393744513904233317344962913",
    "1684745987966888040617088638394893451326",
    "653129450579935922313881187698633245730",
    "90154399545981751929034700539601653658",
    "841904668883726495316837415609641023349",
    "1258931108755458209614962827106116332072",
    "53589810041120365110998933211304468616",
    "1243847030362955698517207199029174369810",
    "105125143701458073564296455695110349394",
    "136310523251969237051855580205978271966",
    "1218790289670026660418434748374709001141",
    "399232661239117480517401994520839366833"
  ]
}
