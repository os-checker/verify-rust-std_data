{
  "file": "core/src/num/nonzero.rs",
  "name": "num::nonzero::verify::check_mul_i64_small",
  "hash": "1192290069672049831317638538506818778825",
  "hash_direct": "122802217571881356125304137723168295249",
  "proof_kind": "\"Contract\"",
  "attrs": [
    "#[kanitool::proof_for_contract = \"NonZero :: < i64 > :: unchecked_mul\"]\n"
  ],
  "src": "pub fn $nonzero_check_mul_for() {\n                let x = kani::any::<$t>();\n                let y = kani::any::<$t>();\n\n                kani::assume(x != 0 && x >= $min && x <= $max);\n                kani::assume(y != 0 && y >= $min && y <= $max);\n\n                let x = <$nonzero_type>::new(x).unwrap();\n                let y = <$nonzero_type>::new(y).unwrap();\n\n                unsafe {\n                    x.unchecked_mul(y);\n                }\n            }",
  "macro_backtrace": [
    {
      "callsite": "check_mul_unchecked_intervals!(\n        i64,\n        NonZeroI64,\n        check_mul_i64_small,\n        NonZeroI64::new(-10i64).unwrap().into(),\n        NonZeroI64::new(10i64).unwrap().into()\n    )",
      "defsite": "macro_rules! check_mul_unchecked_intervals {\n        ($t:ty, $nonzero_type:ty, $nonzero_check_mul_for:ident, $min:expr, $max:expr) => {\n            #[kani::proof_for_contract(NonZero::<$t>::unchecked_mul)]\n            pub fn $nonzero_check_mul_for() {\n                let x = kani::any::<$t>();\n                let y = kani::any::<$t>();\n\n                kani::assume(x != 0 && x >= $min && x <= $max);\n                kani::assume(y != 0 && y >= $min && y <= $max);\n\n                let x = <$nonzero_type>::new(x).unwrap();\n                let y = <$nonzero_type>::new(y).unwrap();\n\n                unsafe {\n                    x.unchecked_mul(y);\n                }\n            }\n        };\n    }"
    }
  ],
  "callees": [
    "146908235034638159208859868167946843838",
    "35050014685987376637211669421649221857",
    "455266664225907363718433531888791329661",
    "809857513675347729512830832735828419618",
    "139704976908753389291209564980972955015",
    "7526082995824335814466973137466280467",
    "630599663716183336214125635728089623874",
    "148177766137538877978361585741050588206",
    "258820287469578611817448591488600041899",
    "17421822894816687532325615181214565887",
    "23815256893174302637797703719499456373",
    "365393941684361168210589959722636987943",
    "119533104578191162656716614232294740395",
    "1746410277795798857117066954115990745294",
    "639913184821088481813231898079805332633",
    "1147979670399206758315286428992360231052",
    "3758406900067267902770104292894595937",
    "174796969124794043872832944450978486794",
    "1255496842081843611811899011701234890462",
    "1262555611173615611410428101371636009066",
    "1113032932815665948217565294476098756403",
    "41505289739977656509611396154325757795",
    "243931809744896974812513529918607549579",
    "1752989996936949203916036071159051010960",
    "478753423337745817613297159272845606672",
    "118348320477469522036768987964670653432",
    "887235042902537721816254572592014930578",
    "739520556846959085018120036998133255835"
  ]
}
