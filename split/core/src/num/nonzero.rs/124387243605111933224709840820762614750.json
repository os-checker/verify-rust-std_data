{
  "file": "core/src/num/nonzero.rs",
  "name": "num::nonzero::verify::check_mul_u32_large",
  "hash": "124387243605111933224709840820762614750",
  "hash_direct": "85297702152476735754675502738257303993",
  "proof_kind": "\"Contract\"",
  "attrs": [
    "#[kanitool::proof_for_contract = \"NonZero :: < u32 > :: unchecked_mul\"]\n"
  ],
  "src": "pub fn $nonzero_check_mul_for() {\n                let x = kani::any::<$t>();\n                let y = kani::any::<$t>();\n\n                kani::assume(x != 0 && x >= $min && x <= $max);\n                kani::assume(y != 0 && y >= $min && y <= $max);\n\n                let x = <$nonzero_type>::new(x).unwrap();\n                let y = <$nonzero_type>::new(y).unwrap();\n\n                unsafe {\n                    x.unchecked_mul(y);\n                }\n            }",
  "macro_backtrace": [
    {
      "callsite": "check_mul_unchecked_intervals!(\n        u32,\n        NonZeroU32,\n        check_mul_u32_large,\n        NonZeroU32::new(u32::MAX - 1000u32).unwrap().into(),\n        NonZeroU32::new(u32::MAX).unwrap().into()\n    )",
      "defsite": "macro_rules! check_mul_unchecked_intervals {\n        ($t:ty, $nonzero_type:ty, $nonzero_check_mul_for:ident, $min:expr, $max:expr) => {\n            #[kani::proof_for_contract(NonZero::<$t>::unchecked_mul)]\n            pub fn $nonzero_check_mul_for() {\n                let x = kani::any::<$t>();\n                let y = kani::any::<$t>();\n\n                kani::assume(x != 0 && x >= $min && x <= $max);\n                kani::assume(y != 0 && y >= $min && y <= $max);\n\n                let x = <$nonzero_type>::new(x).unwrap();\n                let y = <$nonzero_type>::new(y).unwrap();\n\n                unsafe {\n                    x.unchecked_mul(y);\n                }\n            }\n        };\n    }"
    }
  ],
  "callees": [
    "182646802468273491666682311146773467481",
    "515681955558462618214343941312455628281",
    "76571812754372020558398594276099164034",
    "6126120050059266389618947044252600723",
    "162562988142812920362309614379838072419",
    "55268624181377464941500382738073713012",
    "176570557961947031613467122056263026383",
    "83933952839462271778344531303223920115",
    "47323665595455568617290020941376774286",
    "1329845230409163288212548289525672875535",
    "16824420916691935049705640393259467449",
    "794181161993920971818357104680985741716",
    "153953568740411547842071076677083183613",
    "207828264965125410315185562957693045353",
    "1499576288540281468517614998790894875295",
    "797558808289580913717017474169762791025",
    "66449392659434954285407600121191159076",
    "36925981072196870414735383290927130321",
    "139807897524739543915126834736436130116",
    "90154399545981751929034700539601653658",
    "841904668883726495316837415609641023349",
    "1258931108755458209614962827106116332072",
    "53589810041120365110998933211304468616",
    "1243847030362955698517207199029174369810",
    "105125143701458073564296455695110349394",
    "1186819976966343539816541912890252054082",
    "1218790289670026660418434748374709001141",
    "399232661239117480517401994520839366833"
  ]
}
