{
  "file": "core/src/num/nonzero.rs",
  "name": "num::nonzero::verify::check_mul_u128_large",
  "hash": "319668556698783057113125820597777568260",
  "hash_direct": "343803702097656933012328117157467619589",
  "proof_kind": "\"Contract\"",
  "attrs": [
    "#[kanitool::proof_for_contract = \"NonZero :: < u128 > :: unchecked_mul\"]\n"
  ],
  "src": "pub fn $nonzero_check_mul_for() {\n                let x = kani::any::<$t>();\n                let y = kani::any::<$t>();\n\n                kani::assume(x != 0 && x >= $min && x <= $max);\n                kani::assume(y != 0 && y >= $min && y <= $max);\n\n                let x = <$nonzero_type>::new(x).unwrap();\n                let y = <$nonzero_type>::new(y).unwrap();\n\n                unsafe {\n                    x.unchecked_mul(y);\n                }\n            }",
  "macro_backtrace": [
    {
      "callsite": "check_mul_unchecked_intervals!(\n        u128,\n        NonZeroU128,\n        check_mul_u128_large,\n        NonZeroU128::new(u128::MAX - 1000u128).unwrap().into(),\n        NonZeroU128::new(u128::MAX).unwrap().into()\n    )",
      "defsite": "macro_rules! check_mul_unchecked_intervals {\n        ($t:ty, $nonzero_type:ty, $nonzero_check_mul_for:ident, $min:expr, $max:expr) => {\n            #[kani::proof_for_contract(NonZero::<$t>::unchecked_mul)]\n            pub fn $nonzero_check_mul_for() {\n                let x = kani::any::<$t>();\n                let y = kani::any::<$t>();\n\n                kani::assume(x != 0 && x >= $min && x <= $max);\n                kani::assume(y != 0 && y >= $min && y <= $max);\n\n                let x = <$nonzero_type>::new(x).unwrap();\n                let y = <$nonzero_type>::new(y).unwrap();\n\n                unsafe {\n                    x.unchecked_mul(y);\n                }\n            }\n        };\n    }"
    }
  ],
  "callees": [
    "173673302196166900717044359131846438027",
    "7015455043303103714655410524672507185",
    "1382229687897501587812815939443160357278",
    "39138259659936546524089057886974322895",
    "162562988142812920362309614379838072419",
    "55268624181377464941500382738073713012",
    "17831102584020389159134592920178181088",
    "151302402687211429667203275713557137215",
    "47323665595455568617290020941376774286",
    "1329845230409163288212548289525672875535",
    "16824420916691935049705640393259467449",
    "34263335176801296735755474736008519071",
    "1048662776749122856216106589010375971614",
    "363430980081064933618117764801923073731",
    "79563661471576159077415419664014549419",
    "138680970806589563549512885048147569938",
    "46627814547474503915347039038214745260",
    "111353009521252685052411115323084132412",
    "72014835905605504667276612047942317909",
    "90154399545981751929034700539601653658",
    "841904668883726495316837415609641023349",
    "1258931108755458209614962827106116332072",
    "53589810041120365110998933211304468616",
    "1243847030362955698517207199029174369810",
    "105125143701458073564296455695110349394",
    "154674952997120722828259244416791237754",
    "1218790289670026660418434748374709001141",
    "399232661239117480517401994520839366833"
  ]
}
