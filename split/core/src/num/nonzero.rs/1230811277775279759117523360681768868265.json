{
  "file": "core/src/num/nonzero.rs",
  "name": "num::nonzero::verify::check_mul_i128_large_neg",
  "hash": "1230811277775279759117523360681768868265",
  "hash_direct": "140912018743003185633589047363329118169",
  "proof_kind": "Contract",
  "attrs": [
    "#[kanitool::proof_for_contract = \"NonZero :: < i128 > :: unchecked_mul\"]\n"
  ],
  "src": "pub fn $nonzero_check_mul_for() {\n                let x = kani::any::<$t>();\n                let y = kani::any::<$t>();\n\n                kani::assume(x != 0 && x >= $min && x <= $max);\n                kani::assume(y != 0 && y >= $min && y <= $max);\n\n                let x = <$nonzero_type>::new(x).unwrap();\n                let y = <$nonzero_type>::new(y).unwrap();\n\n                unsafe {\n                    x.unchecked_mul(y);\n                }\n            }",
  "macro_backtrace": [
    {
      "callsite": "check_mul_unchecked_intervals!(\n        i128,\n        NonZeroI128,\n        check_mul_i128_large_neg,\n        NonZeroI128::new(i128::MIN + 1000i128).unwrap().into(),\n        NonZeroI128::new(i128::MIN + 1).unwrap().into()\n    )",
      "defsite": "macro_rules! check_mul_unchecked_intervals {\n        ($t:ty, $nonzero_type:ty, $nonzero_check_mul_for:ident, $min:expr, $max:expr) => {\n            #[kani::proof_for_contract(NonZero::<$t>::unchecked_mul)]\n            pub fn $nonzero_check_mul_for() {\n                let x = kani::any::<$t>();\n                let y = kani::any::<$t>();\n\n                kani::assume(x != 0 && x >= $min && x <= $max);\n                kani::assume(y != 0 && y >= $min && y <= $max);\n\n                let x = <$nonzero_type>::new(x).unwrap();\n                let y = <$nonzero_type>::new(y).unwrap();\n\n                unsafe {\n                    x.unchecked_mul(y);\n                }\n            }\n        };\n    }"
    }
  ],
  "callees": [
    "594919401536571522615480450466187035121",
    "1774577850103686295213747642312224614939",
    "11974439592418411337991488073329648630",
    "1509178577580225630314952032068341177156",
    "139704976908753389291209564980972955015",
    "7526082995824335814466973137466280467",
    "1074642887290195615815410518986611750061",
    "10149410389183713467925466215631629022",
    "258820287469578611817448591488600041899",
    "17421822894816687532325615181214565887",
    "23815256893174302637797703719499456373",
    "1333991354301368522512196064899493880564",
    "645347229108740203611675561155142889909",
    "4447064117641744934952319759011022541",
    "1164015097757445323212577204771180569069",
    "932845973401736304917643144105724113264",
    "1355978393681950392614499740682770409695",
    "135121737093955928849796717657293501035",
    "80597033526231839498072399845429198188",
    "1262555611173615611410428101371636009066",
    "1113032932815665948217565294476098756403",
    "41505289739977656509611396154325757795",
    "243931809744896974812513529918607549579",
    "1752989996936949203916036071159051010960",
    "478753423337745817613297159272845606672",
    "94876663206214506511788127831422996110",
    "887235042902537721816254572592014930578",
    "739520556846959085018120036998133255835"
  ]
}
