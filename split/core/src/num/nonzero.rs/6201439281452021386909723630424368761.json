{
  "file": "core/src/num/nonzero.rs",
  "name": "num::nonzero::verify::check_mul_i32_edge_neg",
  "hash": "6201439281452021386909723630424368761",
  "hash_direct": "1521450919975746973513788914992411804646",
  "proof_kind": "\"Contract\"",
  "attrs": [
    "#[kanitool::proof_for_contract = \"NonZero :: < i32 > :: unchecked_mul\"]\n"
  ],
  "src": "pub fn $nonzero_check_mul_for() {\n                let x = kani::any::<$t>();\n                let y = kani::any::<$t>();\n\n                kani::assume(x != 0 && x >= $min && x <= $max);\n                kani::assume(y != 0 && y >= $min && y <= $max);\n\n                let x = <$nonzero_type>::new(x).unwrap();\n                let y = <$nonzero_type>::new(y).unwrap();\n\n                unsafe {\n                    x.unchecked_mul(y);\n                }\n            }",
  "macro_backtrace": [
    {
      "callsite": "check_mul_unchecked_intervals!(\n        i32,\n        NonZeroI32,\n        check_mul_i32_edge_neg,\n        NonZeroI32::new(i32::MIN / 2).unwrap().into(),\n        NonZeroI32::new(i32::MIN + 1).unwrap().into()\n    )",
      "defsite": "macro_rules! check_mul_unchecked_intervals {\n        ($t:ty, $nonzero_type:ty, $nonzero_check_mul_for:ident, $min:expr, $max:expr) => {\n            #[kani::proof_for_contract(NonZero::<$t>::unchecked_mul)]\n            pub fn $nonzero_check_mul_for() {\n                let x = kani::any::<$t>();\n                let y = kani::any::<$t>();\n\n                kani::assume(x != 0 && x >= $min && x <= $max);\n                kani::assume(y != 0 && y >= $min && y <= $max);\n\n                let x = <$nonzero_type>::new(x).unwrap();\n                let y = <$nonzero_type>::new(y).unwrap();\n\n                unsafe {\n                    x.unchecked_mul(y);\n                }\n            }\n        };\n    }"
    }
  ],
  "callees": [
    "110286732951253459166416707375649721039",
    "1050757777987272307317753801956772021235",
    "28733051149244335398155852330546270084",
    "42990063052958904976718600653175958912",
    "162562988142812920362309614379838072419",
    "55268624181377464941500382738073713012",
    "769871191376860825616640549555308478966",
    "128626986352331369363141419461216666681",
    "47323665595455568617290020941376774286",
    "1329845230409163288212548289525672875535",
    "16824420916691935049705640393259467449",
    "163374915331993221108660418279293812005",
    "309503779764807906093776826837172793",
    "545941697956197435416863663693524668537",
    "1167598062746341909115379266965834806332",
    "1049883898637507642310329773294598188904",
    "159334758770196416718850430056465063807",
    "132523823356753799532474124519488108024",
    "101739917911861704414395072992281311318",
    "90154399545981751929034700539601653658",
    "841904668883726495316837415609641023349",
    "1258931108755458209614962827106116332072",
    "53589810041120365110998933211304468616",
    "1243847030362955698517207199029174369810",
    "105125143701458073564296455695110349394",
    "1643834760177245923011422247162593200502",
    "1218790289670026660418434748374709001141",
    "399232661239117480517401994520839366833"
  ]
}
