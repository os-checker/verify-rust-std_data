{
  "file": "core/src/num/flt2dec/decoder.rs",
  "name": "num::flt2dec::decoder::decode::<f32>",
  "hash": "145969046530515512413812662788522855033",
  "hash_direct": "83532077476599703717591559847344183240",
  "src": "pub fn decode<T: DecodableFloat>(v: T) -> (/*negative?*/ bool, FullDecoded) {\n    let (mant, exp, sign) = v.integer_decode();\n    let even = (mant & 1) == 0;\n    let decoded = match v.classify() {\n        FpCategory::Nan => FullDecoded::Nan,\n        FpCategory::Infinite => FullDecoded::Infinite,\n        FpCategory::Zero => FullDecoded::Zero,\n        FpCategory::Subnormal => {\n            // neighbors: (mant - 2, exp) -- (mant, exp) -- (mant + 2, exp)\n            // Float::integer_decode always preserves the exponent,\n            // so the mantissa is scaled for subnormals.\n            FullDecoded::Finite(Decoded { mant, minus: 1, plus: 1, exp, inclusive: even })\n        }\n        FpCategory::Normal => {\n            let minnorm = <T as DecodableFloat>::min_pos_norm_value().integer_decode();\n            if mant == minnorm.0 {\n                // neighbors: (maxmant, exp - 1) -- (minnormmant, exp) -- (minnormmant + 1, exp)\n                // where maxmant = minnormmant * 2 - 1\n                FullDecoded::Finite(Decoded {\n                    mant: mant << 2,\n                    minus: 1,\n                    plus: 2,\n                    exp: exp - 2,\n                    inclusive: even,\n                })\n            } else {\n                // neighbors: (mant - 1, exp) -- (mant, exp) -- (mant + 1, exp)\n                FullDecoded::Finite(Decoded {\n                    mant: mant << 1,\n                    minus: 1,\n                    plus: 1,\n                    exp: exp - 1,\n                    inclusive: even,\n                })\n            }\n        }\n    };\n    (sign < 0, decoded)\n}",
  "callees": [
    "14788582008995232797761326074092651079",
    "912150301777031994815412476790753368430",
    "159849905535178171994512809728570541703",
    "707171467712266834113402276266494278110",
    "145499520478623562184612020729482385200",
    "643749885405830349618174171670233457290",
    "149559975351884185919646369653297958751",
    "182543060698366627214161300569806267932",
    "1280257502160233765816408910554470634604",
    "70639346671593076312505980927961085607",
    "1673863980281935094918086807947924435950",
    "1362525230579241954911680216599631237669",
    "885492306666178193413077054527521590248",
    "364690327770845926311867381198481136970"
  ]
}
