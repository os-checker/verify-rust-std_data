{
  "file": "core/src/num/int_log10.rs",
  "name": "num::int_log10::less_than_5",
  "hash": "177450053108937244256024058949791559633",
  "hash_direct": "1126189906972780852013984104138836900197",
  "src": "const fn less_than_5(val: u32) -> u32 {\n    // Similar to u8, when adding one of these constants to val,\n    // we get two possible bit patterns above the low 17 bits,\n    // depending on whether val is below or above the threshold.\n    const C1: u32 = 0b011_00000000000000000 - 10; // 393206\n    const C2: u32 = 0b100_00000000000000000 - 100; // 524188\n    const C3: u32 = 0b111_00000000000000000 - 1000; // 916504\n    const C4: u32 = 0b100_00000000000000000 - 10000; // 514288\n\n    // Value of top bits:\n    //                +c1  +c2  1&2  +c3  +c4  3&4   ^\n    //         0..=9  010  011  010  110  011  010  000 = 0\n    //       10..=99  011  011  011  110  011  010  001 = 1\n    //     100..=999  011  100  000  110  011  010  010 = 2\n    //   1000..=9999  011  100  000  111  011  011  011 = 3\n    // 10000..=99999  011  100  000  111  100  100  100 = 4\n    (((val + C1) & (val + C2)) ^ ((val + C3) & (val + C4))) >> 17\n}"
}
