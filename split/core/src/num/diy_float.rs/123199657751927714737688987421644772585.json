{
  "file": "core/src/num/diy_float.rs",
  "name": "num::diy_float::Fp::mul",
  "hash": "123199657751927714737688987421644772585",
  "hash_direct": "35871891678792857072618465784184451892",
  "src": "pub fn mul(self, other: Self) -> Self {\n        let (lo, hi) = self.f.widening_mul(other.f);\n        let f = hi + (lo >> 63) /* round */;\n        let e = self.e + other.e + 64;\n        Self { f, e }\n    }",
  "callees": [
    "161564724136622141702746708115603924802",
    "152285539358858202906893558643461357037",
    "823919606921056216412405359771911898343",
    "42236118570899595848210039267000800337"
  ]
}
