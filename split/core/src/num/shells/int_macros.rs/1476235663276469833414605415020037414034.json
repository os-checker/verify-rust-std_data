{
  "file": "core/src/num/shells/int_macros.rs",
  "name": "usize::MIN",
  "hash": "1476235663276469833414605415020037414034",
  "hash_direct": "1464682725345556239913310222108606411337",
  "src": "pub const MIN: $T = $T::MIN;",
  "macro_backtrace": [
    {
      "callsite": "int_module!($T, #[stable(feature = \"rust1\", since = \"1.0.0\")])",
      "defsite": "macro_rules! int_module {\n    ($T:ident) => (int_module!($T, #[stable(feature = \"rust1\", since = \"1.0.0\")]););\n    ($T:ident, #[$attr:meta]) => (\n        #[doc = concat!(\n            \"The smallest value that can be represented by this integer type. Use \",\n            \"[`\", stringify!($T), \"::MIN\", \"`] instead.\"\n        )]\n        ///\n        /// # Examples\n        ///\n        /// ```rust\n        /// // deprecated way\n        #[doc = concat!(\"let min = std::\", stringify!($T), \"::MIN;\")]\n        ///\n        /// // intended way\n        #[doc = concat!(\"let min = \", stringify!($T), \"::MIN;\")]\n        /// ```\n        ///\n        #[$attr]\n        #[deprecated(since = \"TBD\", note = \"replaced by the `MIN` associated constant on this type\")]\n        #[rustc_diagnostic_item = concat!(stringify!($T), \"_legacy_const_min\")]\n        pub const MIN: $T = $T::MIN;\n\n        #[doc = concat!(\n            \"The largest value that can be represented by this integer type. Use \",\n            \"[`\", stringify!($T), \"::MAX\", \"`] instead.\"\n        )]\n        ///\n        /// # Examples\n        ///\n        /// ```rust\n        /// // deprecated way\n        #[doc = concat!(\"let max = std::\", stringify!($T), \"::MAX;\")]\n        ///\n        /// // intended way\n        #[doc = concat!(\"let max = \", stringify!($T), \"::MAX;\")]\n        /// ```\n        ///\n        #[$attr]\n        #[deprecated(since = \"TBD\", note = \"replaced by the `MAX` associated constant on this type\")]\n        #[rustc_diagnostic_item = concat!(stringify!($T), \"_legacy_const_max\")]\n        pub const MAX: $T = $T::MAX;\n    )\n}"
    },
    {
      "callsite": "int_module! { usize }",
      "defsite": "macro_rules! int_module {\n    ($T:ident) => (int_module!($T, #[stable(feature = \"rust1\", since = \"1.0.0\")]););\n    ($T:ident, #[$attr:meta]) => (\n        #[doc = concat!(\n            \"The smallest value that can be represented by this integer type. Use \",\n            \"[`\", stringify!($T), \"::MIN\", \"`] instead.\"\n        )]\n        ///\n        /// # Examples\n        ///\n        /// ```rust\n        /// // deprecated way\n        #[doc = concat!(\"let min = std::\", stringify!($T), \"::MIN;\")]\n        ///\n        /// // intended way\n        #[doc = concat!(\"let min = \", stringify!($T), \"::MIN;\")]\n        /// ```\n        ///\n        #[$attr]\n        #[deprecated(since = \"TBD\", note = \"replaced by the `MIN` associated constant on this type\")]\n        #[rustc_diagnostic_item = concat!(stringify!($T), \"_legacy_const_min\")]\n        pub const MIN: $T = $T::MIN;\n\n        #[doc = concat!(\n            \"The largest value that can be represented by this integer type. Use \",\n            \"[`\", stringify!($T), \"::MAX\", \"`] instead.\"\n        )]\n        ///\n        /// # Examples\n        ///\n        /// ```rust\n        /// // deprecated way\n        #[doc = concat!(\"let max = std::\", stringify!($T), \"::MAX;\")]\n        ///\n        /// // intended way\n        #[doc = concat!(\"let max = \", stringify!($T), \"::MAX;\")]\n        /// ```\n        ///\n        #[$attr]\n        #[deprecated(since = \"TBD\", note = \"replaced by the `MAX` associated constant on this type\")]\n        #[rustc_diagnostic_item = concat!(stringify!($T), \"_legacy_const_max\")]\n        pub const MAX: $T = $T::MAX;\n    )\n}"
    }
  ]
}
