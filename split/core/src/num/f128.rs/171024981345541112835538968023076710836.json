{
  "file": "core/src/num/f128.rs",
  "name": "f128::<impl f128>::midpoint",
  "hash": "171024981345541112835538968023076710836",
  "hash_direct": "180052860970634952007913471397170290539",
  "src": "pub const fn midpoint(self, other: f128) -> f128 {\n        const LO: f128 = f128::MIN_POSITIVE * 2.;\n        const HI: f128 = f128::MAX / 2.;\n\n        let (a, b) = (self, other);\n        let abs_a = a.abs();\n        let abs_b = b.abs();\n\n        if abs_a <= HI && abs_b <= HI {\n            // Overflow is impossible\n            (a + b) / 2.\n        } else if abs_a < LO {\n            // Not safe to halve `a` (would underflow)\n            a + (b / 2.)\n        } else if abs_b < LO {\n            // Not safe to halve `b` (would underflow)\n            (a / 2.) + b\n        } else {\n            // Safe to halve `a` and `b`\n            (a / 2.) + (b / 2.)\n        }\n    }",
  "callees": [
    "138593577866151870709257876221659179848",
    "513066894812535900215710623547755226647",
    "165775386293870703954395633549113159997"
  ]
}
