[
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/addr2line-0.25.0/src/lib.rs",
    "func": "<DebugFile as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/addr2line-0.25.0/src/lib.rs",
    "func": "<DebugFile as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/addr2line-0.25.0/src/lib.rs",
    "func": "<DebugFile as rustc_std_workspace_core::cmp::PartialEq>::eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/addr2line-0.25.0/src/line.rs",
    "func": "line::LazyLines::new"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/adler2-2.0.1/src/algo.rs",
    "func": "<algo::U32X4 as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/adler2-2.0.1/src/algo.rs",
    "func": "<algo::U32X4 as rustc_std_workspace_core::ops::AddAssign>::add_assign"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/adler2-2.0.1/src/algo.rs",
    "func": "<algo::U32X4 as rustc_std_workspace_core::ops::MulAssign<u32>>::mul_assign"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/adler2-2.0.1/src/algo.rs",
    "func": "<algo::U32X4 as rustc_std_workspace_core::ops::RemAssign<u32>>::rem_assign"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/adler2-2.0.1/src/lib.rs",
    "func": "<Adler32 as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/adler2-2.0.1/src/lib.rs",
    "func": "<Adler32 as rustc_std_workspace_core::default::Default>::default"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/adler2-2.0.1/src/lib.rs",
    "func": "<Adler32 as rustc_std_workspace_core::hash::Hasher>::finish"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/adler2-2.0.1/src/lib.rs",
    "func": "Adler32::checksum"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/adler2-2.0.1/src/lib.rs",
    "func": "Adler32::from_checksum"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/adler2-2.0.1/src/lib.rs",
    "func": "Adler32::new"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/arch.rs",
    "func": "<arch::AArch64 as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/arch.rs",
    "func": "<arch::Arm as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/arch.rs",
    "func": "<arch::LoongArch as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/arch.rs",
    "func": "<arch::MIPS as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/arch.rs",
    "func": "<arch::PowerPc64 as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/arch.rs",
    "func": "<arch::RiscV as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/arch.rs",
    "func": "<arch::X86 as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/arch.rs",
    "func": "<arch::X86_64 as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/arch.rs",
    "func": "arch::AArch64::register_name"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/arch.rs",
    "func": "arch::Arm::register_name"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/arch.rs",
    "func": "arch::LoongArch::register_name"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/arch.rs",
    "func": "arch::MIPS::register_name"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/arch.rs",
    "func": "arch::PowerPc64::register_name"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/arch.rs",
    "func": "arch::RiscV::register_name"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/arch.rs",
    "func": "arch::X86::register_name"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/arch.rs",
    "func": "arch::X86_64::register_name"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/common.rs",
    "func": "<common::DebugTypeSignature as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/common.rs",
    "func": "<common::DebugTypeSignature as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/common.rs",
    "func": "<common::DebugTypeSignature as rustc_std_workspace_core::cmp::PartialEq>::eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/common.rs",
    "func": "<common::DwarfFileType as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/common.rs",
    "func": "<common::DwarfFileType as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/common.rs",
    "func": "<common::DwarfFileType as rustc_std_workspace_core::cmp::PartialEq>::eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/common.rs",
    "func": "<common::DwarfFileType as rustc_std_workspace_core::default::Default>::default"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/common.rs",
    "func": "<common::DwoId as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/common.rs",
    "func": "<common::DwoId as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/common.rs",
    "func": "<common::DwoId as rustc_std_workspace_core::cmp::PartialEq>::eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/common.rs",
    "func": "<common::Encoding as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/common.rs",
    "func": "<common::Encoding as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/common.rs",
    "func": "<common::Encoding as rustc_std_workspace_core::cmp::PartialEq>::eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/common.rs",
    "func": "<common::Format as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/common.rs",
    "func": "<common::Format as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/common.rs",
    "func": "<common::Format as rustc_std_workspace_core::cmp::PartialEq>::eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/common.rs",
    "func": "<common::LineEncoding as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/common.rs",
    "func": "<common::LineEncoding as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/common.rs",
    "func": "<common::LineEncoding as rustc_std_workspace_core::cmp::PartialEq>::eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/common.rs",
    "func": "<common::LineEncoding as rustc_std_workspace_core::default::Default>::default"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/common.rs",
    "func": "<common::Register as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/common.rs",
    "func": "<common::Register as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/common.rs",
    "func": "<common::Register as rustc_std_workspace_core::cmp::Ord>::cmp"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/common.rs",
    "func": "<common::Register as rustc_std_workspace_core::cmp::PartialEq>::eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/common.rs",
    "func": "<common::Register as rustc_std_workspace_core::cmp::PartialOrd>::partial_cmp"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/common.rs",
    "func": "<common::SectionId as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/common.rs",
    "func": "<common::SectionId as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/common.rs",
    "func": "<common::SectionId as rustc_std_workspace_core::cmp::Ord>::cmp"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/common.rs",
    "func": "<common::SectionId as rustc_std_workspace_core::cmp::PartialEq>::eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/common.rs",
    "func": "<common::SectionId as rustc_std_workspace_core::cmp::PartialOrd>::partial_cmp"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/common.rs",
    "func": "<common::Vendor as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/common.rs",
    "func": "<common::Vendor as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/common.rs",
    "func": "<common::Vendor as rustc_std_workspace_core::cmp::PartialEq>::eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/common.rs",
    "func": "common::Format::initial_length_size"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/common.rs",
    "func": "common::Format::word_size"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/common.rs",
    "func": "common::SectionId::dwo_name"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/common.rs",
    "func": "common::SectionId::is_string"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/common.rs",
    "func": "common::SectionId::name"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/common.rs",
    "func": "common::SectionId::xcoff_name"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwAccess as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwAccess as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwAccess as rustc_std_workspace_core::cmp::Ord>::cmp"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwAccess as rustc_std_workspace_core::cmp::PartialEq>::eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwAccess as rustc_std_workspace_core::cmp::PartialOrd>::partial_cmp"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwAddr as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwAddr as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwAddr as rustc_std_workspace_core::cmp::Ord>::cmp"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwAddr as rustc_std_workspace_core::cmp::PartialEq>::eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwAddr as rustc_std_workspace_core::cmp::PartialOrd>::partial_cmp"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwAt as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwAt as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwAt as rustc_std_workspace_core::cmp::Ord>::cmp"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwAt as rustc_std_workspace_core::cmp::PartialEq>::eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwAt as rustc_std_workspace_core::cmp::PartialOrd>::partial_cmp"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwAte as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwAte as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwAte as rustc_std_workspace_core::cmp::Ord>::cmp"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwAte as rustc_std_workspace_core::cmp::PartialEq>::eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwAte as rustc_std_workspace_core::cmp::PartialOrd>::partial_cmp"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwCc as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwCc as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwCc as rustc_std_workspace_core::cmp::Ord>::cmp"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwCc as rustc_std_workspace_core::cmp::PartialEq>::eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwCc as rustc_std_workspace_core::cmp::PartialOrd>::partial_cmp"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwCfa as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwCfa as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwCfa as rustc_std_workspace_core::cmp::Ord>::cmp"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwCfa as rustc_std_workspace_core::cmp::PartialEq>::eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwCfa as rustc_std_workspace_core::cmp::PartialOrd>::partial_cmp"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwChildren as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwChildren as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwChildren as rustc_std_workspace_core::cmp::Ord>::cmp"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwChildren as rustc_std_workspace_core::cmp::PartialEq>::eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwChildren as rustc_std_workspace_core::cmp::PartialOrd>::partial_cmp"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwDefaulted as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwDefaulted as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwDefaulted as rustc_std_workspace_core::cmp::Ord>::cmp"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwDefaulted as rustc_std_workspace_core::cmp::PartialEq>::eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwDefaulted as rustc_std_workspace_core::cmp::PartialOrd>::partial_cmp"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwDs as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwDs as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwDs as rustc_std_workspace_core::cmp::Ord>::cmp"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwDs as rustc_std_workspace_core::cmp::PartialEq>::eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwDs as rustc_std_workspace_core::cmp::PartialOrd>::partial_cmp"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwDsc as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwDsc as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwDsc as rustc_std_workspace_core::cmp::Ord>::cmp"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwDsc as rustc_std_workspace_core::cmp::PartialEq>::eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwDsc as rustc_std_workspace_core::cmp::PartialOrd>::partial_cmp"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwEhPe as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwEhPe as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwEhPe as rustc_std_workspace_core::cmp::Ord>::cmp"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwEhPe as rustc_std_workspace_core::cmp::PartialEq>::eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwEhPe as rustc_std_workspace_core::cmp::PartialOrd>::partial_cmp"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwEhPe as rustc_std_workspace_core::ops::BitOr>::bitor"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwEnd as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwEnd as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwEnd as rustc_std_workspace_core::cmp::Ord>::cmp"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwEnd as rustc_std_workspace_core::cmp::PartialEq>::eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwEnd as rustc_std_workspace_core::cmp::PartialOrd>::partial_cmp"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwForm as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwForm as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwForm as rustc_std_workspace_core::cmp::Ord>::cmp"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwForm as rustc_std_workspace_core::cmp::PartialEq>::eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwForm as rustc_std_workspace_core::cmp::PartialOrd>::partial_cmp"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwId as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwId as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwId as rustc_std_workspace_core::cmp::Ord>::cmp"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwId as rustc_std_workspace_core::cmp::PartialEq>::eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwId as rustc_std_workspace_core::cmp::PartialOrd>::partial_cmp"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwIdx as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwIdx as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwIdx as rustc_std_workspace_core::cmp::Ord>::cmp"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwIdx as rustc_std_workspace_core::cmp::PartialEq>::eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwIdx as rustc_std_workspace_core::cmp::PartialOrd>::partial_cmp"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwInl as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwInl as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwInl as rustc_std_workspace_core::cmp::Ord>::cmp"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwInl as rustc_std_workspace_core::cmp::PartialEq>::eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwInl as rustc_std_workspace_core::cmp::PartialOrd>::partial_cmp"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwLang as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwLang as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwLang as rustc_std_workspace_core::cmp::Ord>::cmp"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwLang as rustc_std_workspace_core::cmp::PartialEq>::eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwLang as rustc_std_workspace_core::cmp::PartialOrd>::partial_cmp"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwLle as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwLle as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwLle as rustc_std_workspace_core::cmp::Ord>::cmp"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwLle as rustc_std_workspace_core::cmp::PartialEq>::eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwLle as rustc_std_workspace_core::cmp::PartialOrd>::partial_cmp"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwLnct as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwLnct as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwLnct as rustc_std_workspace_core::cmp::Ord>::cmp"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwLnct as rustc_std_workspace_core::cmp::PartialEq>::eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwLnct as rustc_std_workspace_core::cmp::PartialOrd>::partial_cmp"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwLne as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwLne as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwLne as rustc_std_workspace_core::cmp::Ord>::cmp"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwLne as rustc_std_workspace_core::cmp::PartialEq>::eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwLne as rustc_std_workspace_core::cmp::PartialOrd>::partial_cmp"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwLns as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwLns as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwLns as rustc_std_workspace_core::cmp::Ord>::cmp"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwLns as rustc_std_workspace_core::cmp::PartialEq>::eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwLns as rustc_std_workspace_core::cmp::PartialOrd>::partial_cmp"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwMacinfo as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwMacinfo as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwMacinfo as rustc_std_workspace_core::cmp::Ord>::cmp"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwMacinfo as rustc_std_workspace_core::cmp::PartialEq>::eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwMacinfo as rustc_std_workspace_core::cmp::PartialOrd>::partial_cmp"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwMacro as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwMacro as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwMacro as rustc_std_workspace_core::cmp::Ord>::cmp"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwMacro as rustc_std_workspace_core::cmp::PartialEq>::eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwMacro as rustc_std_workspace_core::cmp::PartialOrd>::partial_cmp"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwOp as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwOp as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwOp as rustc_std_workspace_core::cmp::Ord>::cmp"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwOp as rustc_std_workspace_core::cmp::PartialEq>::eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwOp as rustc_std_workspace_core::cmp::PartialOrd>::partial_cmp"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwOrd as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwOrd as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwOrd as rustc_std_workspace_core::cmp::Ord>::cmp"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwOrd as rustc_std_workspace_core::cmp::PartialEq>::eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwOrd as rustc_std_workspace_core::cmp::PartialOrd>::partial_cmp"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwRle as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwRle as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwRle as rustc_std_workspace_core::cmp::Ord>::cmp"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwRle as rustc_std_workspace_core::cmp::PartialEq>::eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwRle as rustc_std_workspace_core::cmp::PartialOrd>::partial_cmp"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwSect as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwSect as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwSect as rustc_std_workspace_core::cmp::Ord>::cmp"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwSect as rustc_std_workspace_core::cmp::PartialEq>::eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwSect as rustc_std_workspace_core::cmp::PartialOrd>::partial_cmp"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwSectV2 as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwSectV2 as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwSectV2 as rustc_std_workspace_core::cmp::Ord>::cmp"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwSectV2 as rustc_std_workspace_core::cmp::PartialEq>::eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwSectV2 as rustc_std_workspace_core::cmp::PartialOrd>::partial_cmp"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwTag as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwTag as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwTag as rustc_std_workspace_core::cmp::Ord>::cmp"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwTag as rustc_std_workspace_core::cmp::PartialEq>::eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwTag as rustc_std_workspace_core::cmp::PartialOrd>::partial_cmp"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwUt as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwUt as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwUt as rustc_std_workspace_core::cmp::Ord>::cmp"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwUt as rustc_std_workspace_core::cmp::PartialEq>::eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwUt as rustc_std_workspace_core::cmp::PartialOrd>::partial_cmp"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwVirtuality as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwVirtuality as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwVirtuality as rustc_std_workspace_core::cmp::Ord>::cmp"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwVirtuality as rustc_std_workspace_core::cmp::PartialEq>::eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwVirtuality as rustc_std_workspace_core::cmp::PartialOrd>::partial_cmp"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwVis as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwVis as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwVis as rustc_std_workspace_core::cmp::Ord>::cmp"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwVis as rustc_std_workspace_core::cmp::PartialEq>::eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwVis as rustc_std_workspace_core::cmp::PartialOrd>::partial_cmp"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "constants::DwAccess::static_string"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "constants::DwAddr::static_string"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "constants::DwAt::static_string"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "constants::DwAte::static_string"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "constants::DwCc::static_string"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "constants::DwCfa::static_string"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "constants::DwChildren::static_string"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "constants::DwDefaulted::static_string"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "constants::DwDs::static_string"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "constants::DwDsc::static_string"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "constants::DwEhPe::application"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "constants::DwEhPe::format"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "constants::DwEhPe::is_absent"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "constants::DwEhPe::is_indirect"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "constants::DwEhPe::is_valid_encoding"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "constants::DwEhPe::static_string"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "constants::DwEnd::static_string"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "constants::DwForm::static_string"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "constants::DwId::static_string"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "constants::DwIdx::static_string"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "constants::DwInl::static_string"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "constants::DwLang::default_lower_bound"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "constants::DwLang::static_string"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "constants::DwLle::static_string"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "constants::DwLnct::static_string"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "constants::DwLne::static_string"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "constants::DwLns::static_string"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "constants::DwMacinfo::static_string"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "constants::DwMacro::static_string"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "constants::DwOp::static_string"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "constants::DwOrd::static_string"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "constants::DwRle::static_string"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "constants::DwSect::static_string"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "constants::DwSectV2::static_string"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "constants::DwTag::static_string"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "constants::DwUt::static_string"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "constants::DwVirtuality::static_string"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "constants::DwVis::static_string"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/endianity.rs",
    "func": "<endianity::BigEndian as endianity::Endianity>::is_big_endian"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/endianity.rs",
    "func": "<endianity::BigEndian as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/endianity.rs",
    "func": "<endianity::BigEndian as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/endianity.rs",
    "func": "<endianity::BigEndian as rustc_std_workspace_core::cmp::PartialEq>::eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/endianity.rs",
    "func": "<endianity::BigEndian as rustc_std_workspace_core::default::Default>::default"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/endianity.rs",
    "func": "<endianity::LittleEndian as endianity::Endianity>::is_big_endian"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/endianity.rs",
    "func": "<endianity::LittleEndian as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/endianity.rs",
    "func": "<endianity::LittleEndian as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/endianity.rs",
    "func": "<endianity::LittleEndian as rustc_std_workspace_core::cmp::PartialEq>::eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/endianity.rs",
    "func": "<endianity::LittleEndian as rustc_std_workspace_core::default::Default>::default"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/endianity.rs",
    "func": "<endianity::RunTimeEndian as endianity::Endianity>::is_big_endian"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/endianity.rs",
    "func": "<endianity::RunTimeEndian as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/endianity.rs",
    "func": "<endianity::RunTimeEndian as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/endianity.rs",
    "func": "<endianity::RunTimeEndian as rustc_std_workspace_core::cmp::PartialEq>::eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/endianity.rs",
    "func": "<endianity::RunTimeEndian as rustc_std_workspace_core::default::Default>::default"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/leb128.rs",
    "func": "leb128::low_bits_of_byte"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/leb128.rs",
    "func": "leb128::low_bits_of_u64"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/abbrev.rs",
    "func": "<read::abbrev::Abbreviations as rustc_std_workspace_core::default::Default>::default"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/abbrev.rs",
    "func": "<read::abbrev::AbbreviationsCache as rustc_std_workspace_core::default::Default>::default"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/abbrev.rs",
    "func": "<read::abbrev::AbbreviationsCacheStrategy as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/abbrev.rs",
    "func": "<read::abbrev::AbbreviationsCacheStrategy as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/abbrev.rs",
    "func": "<read::abbrev::AbbreviationsCacheStrategy as rustc_std_workspace_core::cmp::PartialEq>::eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/abbrev.rs",
    "func": "<read::abbrev::AttributeSpecification as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/abbrev.rs",
    "func": "<read::abbrev::AttributeSpecification as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/abbrev.rs",
    "func": "<read::abbrev::AttributeSpecification as rustc_std_workspace_core::cmp::PartialEq>::eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/abbrev.rs",
    "func": "read::abbrev::Abbreviations::empty"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/abbrev.rs",
    "func": "read::abbrev::AbbreviationsCache::new"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/abbrev.rs",
    "func": "read::abbrev::AttributeSpecification::form"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/abbrev.rs",
    "func": "read::abbrev::AttributeSpecification::implicit_const_value"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/abbrev.rs",
    "func": "read::abbrev::AttributeSpecification::name"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/abbrev.rs",
    "func": "read::abbrev::AttributeSpecification::new"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/abbrev.rs",
    "func": "read::abbrev::Attributes::new"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/abbrev.rs",
    "func": "read::abbrev::get_attribute_size"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/aranges.rs",
    "func": "<read::aranges::ArangeEntry as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/aranges.rs",
    "func": "<read::aranges::ArangeEntry as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/aranges.rs",
    "func": "<read::aranges::ArangeEntry as rustc_std_workspace_core::cmp::Ord>::cmp"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/aranges.rs",
    "func": "<read::aranges::ArangeEntry as rustc_std_workspace_core::cmp::PartialEq>::eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/aranges.rs",
    "func": "<read::aranges::ArangeEntry as rustc_std_workspace_core::cmp::PartialOrd>::partial_cmp"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/aranges.rs",
    "func": "read::aranges::ArangeEntry::address"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/aranges.rs",
    "func": "read::aranges::ArangeEntry::length"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/aranges.rs",
    "func": "read::aranges::ArangeEntry::range"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/cfi.rs",
    "func": "<read::cfi::Augmentation as rustc_std_workspace_core::default::Default>::default"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/cfi.rs",
    "func": "<read::cfi::AugmentationData as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/cfi.rs",
    "func": "<read::cfi::AugmentationData as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/cfi.rs",
    "func": "<read::cfi::AugmentationData as rustc_std_workspace_core::cmp::PartialEq>::eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/cfi.rs",
    "func": "<read::cfi::AugmentationData as rustc_std_workspace_core::default::Default>::default"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/cfi.rs",
    "func": "<read::cfi::BaseAddresses as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/cfi.rs",
    "func": "<read::cfi::BaseAddresses as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/cfi.rs",
    "func": "<read::cfi::BaseAddresses as rustc_std_workspace_core::cmp::PartialEq>::eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/cfi.rs",
    "func": "<read::cfi::BaseAddresses as rustc_std_workspace_core::default::Default>::default"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/cfi.rs",
    "func": "<read::cfi::CieOffsetEncoding as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/cfi.rs",
    "func": "<read::cfi::CieOffsetEncoding as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/cfi.rs",
    "func": "<read::cfi::CieOffsetEncoding as rustc_std_workspace_core::cmp::PartialEq>::eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/cfi.rs",
    "func": "<read::cfi::Pointer as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/cfi.rs",
    "func": "<read::cfi::Pointer as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/cfi.rs",
    "func": "<read::cfi::Pointer as rustc_std_workspace_core::cmp::PartialEq>::eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/cfi.rs",
    "func": "<read::cfi::Pointer as rustc_std_workspace_core::default::Default>::default"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/cfi.rs",
    "func": "<read::cfi::SectionBaseAddresses as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/cfi.rs",
    "func": "<read::cfi::SectionBaseAddresses as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/cfi.rs",
    "func": "<read::cfi::SectionBaseAddresses as rustc_std_workspace_core::cmp::PartialEq>::eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/cfi.rs",
    "func": "<read::cfi::SectionBaseAddresses as rustc_std_workspace_core::default::Default>::default"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/cfi.rs",
    "func": "read::cfi::BaseAddresses::set_eh_frame"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/cfi.rs",
    "func": "read::cfi::BaseAddresses::set_eh_frame_hdr"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/cfi.rs",
    "func": "read::cfi::BaseAddresses::set_got"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/cfi.rs",
    "func": "read::cfi::BaseAddresses::set_text"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/cfi.rs",
    "func": "read::cfi::Pointer::direct"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/cfi.rs",
    "func": "read::cfi::Pointer::new"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/cfi.rs",
    "func": "read::cfi::Pointer::pointer"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/index.rs",
    "func": "<read::index::IndexSectionId as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/index.rs",
    "func": "<read::index::IndexSectionId as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/index.rs",
    "func": "<read::index::IndexSectionId as rustc_std_workspace_core::cmp::PartialEq>::eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/index.rs",
    "func": "<read::index::UnitIndexSection as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/index.rs",
    "func": "<read::index::UnitIndexSection as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/index.rs",
    "func": "<read::index::UnitIndexSection as rustc_std_workspace_core::cmp::PartialEq>::eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/index.rs",
    "func": "read::index::IndexSectionId::dwo_name"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/index.rs",
    "func": "read::index::IndexSectionId::section_id"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/line.rs",
    "func": "<read::line::ColumnType as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/line.rs",
    "func": "<read::line::ColumnType as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/line.rs",
    "func": "<read::line::ColumnType as rustc_std_workspace_core::cmp::Ord>::cmp"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/line.rs",
    "func": "<read::line::ColumnType as rustc_std_workspace_core::cmp::PartialEq>::eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/line.rs",
    "func": "<read::line::ColumnType as rustc_std_workspace_core::cmp::PartialOrd>::partial_cmp"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/line.rs",
    "func": "<read::line::FileEntryFormat as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/line.rs",
    "func": "<read::line::FileEntryFormat as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/line.rs",
    "func": "<read::line::FileEntryFormat as rustc_std_workspace_core::cmp::PartialEq>::eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/line.rs",
    "func": "<read::line::LineRow as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/line.rs",
    "func": "<read::line::LineRow as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/line.rs",
    "func": "<read::line::LineRow as rustc_std_workspace_core::cmp::PartialEq>::eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/line.rs",
    "func": "read::line::LineRow::address"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/line.rs",
    "func": "read::line::LineRow::apply_line_advance"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/line.rs",
    "func": "read::line::LineRow::basic_block"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/line.rs",
    "func": "read::line::LineRow::column"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/line.rs",
    "func": "read::line::LineRow::discriminator"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/line.rs",
    "func": "read::line::LineRow::end_sequence"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/line.rs",
    "func": "read::line::LineRow::epilogue_begin"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/line.rs",
    "func": "read::line::LineRow::file_index"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/line.rs",
    "func": "read::line::LineRow::is_stmt"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/line.rs",
    "func": "read::line::LineRow::isa"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/line.rs",
    "func": "read::line::LineRow::line"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/line.rs",
    "func": "read::line::LineRow::op_index"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/line.rs",
    "func": "read::line::LineRow::prologue_end"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/lists.rs",
    "func": "<read::lists::ListsHeader as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/lists.rs",
    "func": "<read::lists::ListsHeader as rustc_std_workspace_core::default::Default>::default"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/lists.rs",
    "func": "read::lists::ListsHeader::size"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/lists.rs",
    "func": "read::lists::ListsHeader::size_for_encoding"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/loclists.rs",
    "func": "<read::loclists::LocListsFormat as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/loclists.rs",
    "func": "<read::loclists::LocListsFormat as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/loclists.rs",
    "func": "<read::loclists::LocListsFormat as rustc_std_workspace_core::cmp::PartialEq>::eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/mod.rs",
    "func": "<read::Error as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/mod.rs",
    "func": "<read::Error as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/mod.rs",
    "func": "<read::Error as rustc_std_workspace_core::cmp::PartialEq>::eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/mod.rs",
    "func": "<read::StoreOnHeap as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/mod.rs",
    "func": "<read::StoreOnHeap as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/mod.rs",
    "func": "<read::StoreOnHeap as rustc_std_workspace_core::cmp::PartialEq>::eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/mod.rs",
    "func": "read::<impl common::Register>::from_u64"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/mod.rs",
    "func": "read::Error::description"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/reader.rs",
    "func": "<read::reader::ReaderOffsetId as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/reader.rs",
    "func": "<read::reader::ReaderOffsetId as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/reader.rs",
    "func": "<read::reader::ReaderOffsetId as rustc_std_workspace_core::cmp::PartialEq>::eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/reader.rs",
    "func": "<u32 as read::reader::ReaderOffset>::checked_sub"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/reader.rs",
    "func": "<u32 as read::reader::ReaderOffset>::from_i16"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/reader.rs",
    "func": "<u32 as read::reader::ReaderOffset>::from_u16"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/reader.rs",
    "func": "<u32 as read::reader::ReaderOffset>::from_u32"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/reader.rs",
    "func": "<u32 as read::reader::ReaderOffset>::from_u64"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/reader.rs",
    "func": "<u32 as read::reader::ReaderOffset>::from_u8"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/reader.rs",
    "func": "<u32 as read::reader::ReaderOffset>::into_u64"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/reader.rs",
    "func": "<u32 as read::reader::ReaderOffset>::wrapping_add"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/reader.rs",
    "func": "<u64 as read::reader::ReaderAddress>::add_sized"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/reader.rs",
    "func": "<u64 as read::reader::ReaderAddress>::ones_sized"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/reader.rs",
    "func": "<u64 as read::reader::ReaderAddress>::wrapping_add_sized"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/reader.rs",
    "func": "<u64 as read::reader::ReaderOffset>::checked_sub"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/reader.rs",
    "func": "<u64 as read::reader::ReaderOffset>::from_i16"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/reader.rs",
    "func": "<u64 as read::reader::ReaderOffset>::from_u16"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/reader.rs",
    "func": "<u64 as read::reader::ReaderOffset>::from_u32"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/reader.rs",
    "func": "<u64 as read::reader::ReaderOffset>::from_u64"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/reader.rs",
    "func": "<u64 as read::reader::ReaderOffset>::from_u8"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/reader.rs",
    "func": "<u64 as read::reader::ReaderOffset>::into_u64"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/reader.rs",
    "func": "<u64 as read::reader::ReaderOffset>::wrapping_add"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/reader.rs",
    "func": "<usize as read::reader::ReaderOffset>::checked_sub"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/reader.rs",
    "func": "<usize as read::reader::ReaderOffset>::from_i16"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/reader.rs",
    "func": "<usize as read::reader::ReaderOffset>::from_u16"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/reader.rs",
    "func": "<usize as read::reader::ReaderOffset>::from_u32"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/reader.rs",
    "func": "<usize as read::reader::ReaderOffset>::from_u64"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/reader.rs",
    "func": "<usize as read::reader::ReaderOffset>::from_u8"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/reader.rs",
    "func": "<usize as read::reader::ReaderOffset>::into_u64"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/reader.rs",
    "func": "<usize as read::reader::ReaderOffset>::wrapping_add"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/rnglists.rs",
    "func": "<read::rnglists::Range as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/rnglists.rs",
    "func": "<read::rnglists::Range as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/rnglists.rs",
    "func": "<read::rnglists::Range as rustc_std_workspace_core::cmp::Ord>::cmp"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/rnglists.rs",
    "func": "<read::rnglists::Range as rustc_std_workspace_core::cmp::PartialEq>::eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/rnglists.rs",
    "func": "<read::rnglists::Range as rustc_std_workspace_core::cmp::PartialOrd>::partial_cmp"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/rnglists.rs",
    "func": "<read::rnglists::RangeListsFormat as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/rnglists.rs",
    "func": "<read::rnglists::RangeListsFormat as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/rnglists.rs",
    "func": "<read::rnglists::RangeListsFormat as rustc_std_workspace_core::cmp::PartialEq>::eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/rnglists.rs",
    "func": "<read::rnglists::RawRange as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/rnglists.rs",
    "func": "<read::rnglists::RawRange as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/rnglists.rs",
    "func": "<read::rnglists::RawRange as rustc_std_workspace_core::cmp::PartialEq>::eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/rnglists.rs",
    "func": "read::rnglists::Range::add_base_address"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/rnglists.rs",
    "func": "read::rnglists::RawRange::is_base_address"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/rnglists.rs",
    "func": "read::rnglists::RawRange::is_end"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/unit.rs",
    "func": "read::unit::allow_section_offset"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/util.rs",
    "func": "<read::util::sealed::CapacityFull as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/value.rs",
    "func": "<read::value::Value as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/value.rs",
    "func": "<read::value::Value as rustc_std_workspace_core::cmp::PartialEq>::eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/value.rs",
    "func": "<read::value::ValueType as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/value.rs",
    "func": "<read::value::ValueType as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/value.rs",
    "func": "<read::value::ValueType as rustc_std_workspace_core::cmp::PartialEq>::eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/value.rs",
    "func": "read::value::Value::abs"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/value.rs",
    "func": "read::value::Value::add"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/value.rs",
    "func": "read::value::Value::and"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/value.rs",
    "func": "read::value::Value::convert"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/value.rs",
    "func": "read::value::Value::div"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/value.rs",
    "func": "read::value::Value::eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/value.rs",
    "func": "read::value::Value::from_f32"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/value.rs",
    "func": "read::value::Value::from_f64"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/value.rs",
    "func": "read::value::Value::from_u64"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/value.rs",
    "func": "read::value::Value::ge"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/value.rs",
    "func": "read::value::Value::gt"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/value.rs",
    "func": "read::value::Value::le"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/value.rs",
    "func": "read::value::Value::lt"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/value.rs",
    "func": "read::value::Value::mul"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/value.rs",
    "func": "read::value::Value::ne"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/value.rs",
    "func": "read::value::Value::neg"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/value.rs",
    "func": "read::value::Value::not"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/value.rs",
    "func": "read::value::Value::or"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/value.rs",
    "func": "read::value::Value::reinterpret"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/value.rs",
    "func": "read::value::Value::rem"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/value.rs",
    "func": "read::value::Value::shift_length"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/value.rs",
    "func": "read::value::Value::shl"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/value.rs",
    "func": "read::value::Value::shr"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/value.rs",
    "func": "read::value::Value::shra"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/value.rs",
    "func": "read::value::Value::sub"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/value.rs",
    "func": "read::value::Value::to_u64"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/value.rs",
    "func": "read::value::Value::value_type"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/value.rs",
    "func": "read::value::Value::xor"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/value.rs",
    "func": "read::value::ValueType::bit_size"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/value.rs",
    "func": "read::value::ValueType::from_encoding"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/value.rs",
    "func": "read::value::mask_bit_size"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/value.rs",
    "func": "read::value::sign_extend"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/hashbrown-0.15.5/src/control/bitmask.rs",
    "func": "<control::bitmask::BitMask as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/hashbrown-0.15.5/src/control/bitmask.rs",
    "func": "<control::bitmask::BitMask as rustc_std_workspace_core::iter::IntoIterator>::into_iter"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/hashbrown-0.15.5/src/control/bitmask.rs",
    "func": "<control::bitmask::BitMaskIter as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/hashbrown-0.15.5/src/control/bitmask.rs",
    "func": "<control::bitmask::BitMaskIter as rustc_std_workspace_core::iter::Iterator>::next"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/hashbrown-0.15.5/src/control/bitmask.rs",
    "func": "control::bitmask::BitMask::any_bit_set"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/hashbrown-0.15.5/src/control/bitmask.rs",
    "func": "control::bitmask::BitMask::invert"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/hashbrown-0.15.5/src/control/bitmask.rs",
    "func": "control::bitmask::BitMask::leading_zeros"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/hashbrown-0.15.5/src/control/bitmask.rs",
    "func": "control::bitmask::BitMask::lowest_set_bit"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/hashbrown-0.15.5/src/control/bitmask.rs",
    "func": "control::bitmask::BitMask::nonzero_trailing_zeros"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/hashbrown-0.15.5/src/control/bitmask.rs",
    "func": "control::bitmask::BitMask::remove_lowest_bit"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/hashbrown-0.15.5/src/control/bitmask.rs",
    "func": "control::bitmask::BitMask::trailing_zeros"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/hashbrown-0.15.5/src/control/group/sse2.rs",
    "func": "<control::group::sse2::Group as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/hashbrown-0.15.5/src/control/group/sse2.rs",
    "func": "control::group::sse2::Group::convert_special_to_empty_and_full_to_deleted"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/hashbrown-0.15.5/src/control/group/sse2.rs",
    "func": "control::group::sse2::Group::match_empty"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/hashbrown-0.15.5/src/control/group/sse2.rs",
    "func": "control::group::sse2::Group::match_empty_or_deleted"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/hashbrown-0.15.5/src/control/group/sse2.rs",
    "func": "control::group::sse2::Group::match_full"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/hashbrown-0.15.5/src/control/group/sse2.rs",
    "func": "control::group::sse2::Group::match_tag"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/hashbrown-0.15.5/src/control/group/sse2.rs",
    "func": "control::group::sse2::Group::static_empty"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/hashbrown-0.15.5/src/control/tag.rs",
    "func": "<control::tag::Tag as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/hashbrown-0.15.5/src/control/tag.rs",
    "func": "<control::tag::Tag as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/hashbrown-0.15.5/src/control/tag.rs",
    "func": "<control::tag::Tag as rustc_std_workspace_core::cmp::PartialEq>::eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/hashbrown-0.15.5/src/control/tag.rs",
    "func": "control::tag::Tag::full"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/hashbrown-0.15.5/src/control/tag.rs",
    "func": "control::tag::Tag::is_full"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/hashbrown-0.15.5/src/control/tag.rs",
    "func": "control::tag::Tag::is_special"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/hashbrown-0.15.5/src/control/tag.rs",
    "func": "control::tag::Tag::special_is_empty"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/hashbrown-0.15.5/src/lib.rs",
    "func": "<TryReserveError as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/hashbrown-0.15.5/src/lib.rs",
    "func": "<TryReserveError as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/hashbrown-0.15.5/src/lib.rs",
    "func": "<TryReserveError as rustc_std_workspace_core::cmp::PartialEq>::eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/hashbrown-0.15.5/src/map.rs",
    "func": "map::assert_covariance"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/hashbrown-0.15.5/src/raw/mod.rs",
    "func": "<raw::Fallibility as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/hashbrown-0.15.5/src/raw/mod.rs",
    "func": "<raw::ProbeSeq as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/hashbrown-0.15.5/src/raw/mod.rs",
    "func": "<raw::TableLayout as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/hashbrown-0.15.5/src/raw/mod.rs",
    "func": "raw::Fallibility::alloc_err"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/hashbrown-0.15.5/src/raw/mod.rs",
    "func": "raw::Fallibility::capacity_overflow"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/hashbrown-0.15.5/src/raw/mod.rs",
    "func": "raw::ProbeSeq::move_next"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/hashbrown-0.15.5/src/raw/mod.rs",
    "func": "raw::RawTableInner::new"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/hashbrown-0.15.5/src/raw/mod.rs",
    "func": "raw::TableLayout::calculate_layout_for"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/hashbrown-0.15.5/src/raw/mod.rs",
    "func": "raw::bucket_mask_to_capacity"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/hashbrown-0.15.5/src/raw/mod.rs",
    "func": "raw::capacity_to_buckets"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/hashbrown-0.15.5/src/raw/mod.rs",
    "func": "raw::h1"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/hashbrown-0.15.5/src/set.rs",
    "func": "set::assert_covariance"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::in6_addr as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::ipv6_mreq as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::itimerval as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linger as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::arphdr as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::arpreq as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::arpreq_old as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::epoll_event as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::fd_set as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::file_clone_range as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::in6_rtmsg as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::in_addr as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::in_pktinfo as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::ip_mreq as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::ip_mreq_source as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::ip_mreqn as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::Elf32_Ehdr as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::Elf32_Phdr as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::Elf32_Shdr as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::Elf32_Sym as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::Elf64_Ehdr as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::Elf64_Phdr as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::Elf64_Shdr as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::Elf64_Sym as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::__c_anonymous__kernel_fsid_t as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::__c_anonymous_elf32_rel as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::__c_anonymous_elf32_rela as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::__c_anonymous_elf64_rel as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::__c_anonymous_elf64_rela as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::__c_anonymous_ifru_map as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::__c_anonymous_sockaddr_can_j1939 as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::__c_anonymous_sockaddr_can_tp as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::af_alg_iv as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::arch::generic::termios2 as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::arpd_request as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::can_filter as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::can_frame as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::canfd_frame as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::canxl_frame as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::cpu_set_t as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::dirent as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::dirent64 as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::dmabuf_cmsg as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::dmabuf_token as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::dqblk as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::epoll_params as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::fanotify_event_info_fid as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::fanotify_event_info_header as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::fanotify_event_metadata as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::fanotify_response as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::fanout_args as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::ff_condition_effect as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::ff_constant_effect as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::ff_effect as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::ff_envelope as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::ff_ramp_effect as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::ff_replay as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::ff_rumble_effect as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::ff_trigger as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::fsid_t as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::genlmsghdr as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::gnu::Elf32_Chdr as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::gnu::Elf64_Chdr as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::gnu::__c_anonymous_ptrace_syscall_info_entry as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::gnu::__c_anonymous_ptrace_syscall_info_exit as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::gnu::__c_anonymous_ptrace_syscall_info_seccomp as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::gnu::__exit_status as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::gnu::__timeval as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::gnu::b64::msqid_ds as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::gnu::b64::semid_ds as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::gnu::b64::sigset_t as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::gnu::b64::sysinfo as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::gnu::b64::timex as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::gnu::b64::x86_64::_libc_fpxreg as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::gnu::b64::x86_64::_libc_xmmreg as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::gnu::b64::x86_64::clone_args as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::gnu::b64::x86_64::flock as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::gnu::b64::x86_64::flock64 as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::gnu::b64::x86_64::ipc_perm as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::gnu::b64::x86_64::max_align_t as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::gnu::b64::x86_64::not_x32::statvfs as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::gnu::b64::x86_64::pthread_attr_t as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::gnu::b64::x86_64::ptrace_rseq_configuration as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::gnu::b64::x86_64::shmid_ds as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::gnu::b64::x86_64::siginfo_t as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::gnu::b64::x86_64::stat as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::gnu::b64::x86_64::stat64 as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::gnu::b64::x86_64::statfs as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::gnu::b64::x86_64::statfs64 as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::gnu::b64::x86_64::statvfs64 as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::gnu::b64::x86_64::user_fpregs_struct as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::gnu::b64::x86_64::user_regs_struct as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::gnu::cmsghdr as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::gnu::fanotify_event_info_error as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::gnu::fanotify_event_info_pidfd as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::gnu::fpos64_t as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::gnu::fpos_t as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::gnu::iocb as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::gnu::mallinfo as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::gnu::mallinfo2 as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::gnu::mbstate_t as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::gnu::nl_mmap_hdr as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::gnu::nl_mmap_req as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::gnu::nl_pktinfo as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::gnu::ntptimeval as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::gnu::ptrace_peeksiginfo_args as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::gnu::ptrace_sud_config as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::gnu::sem_t as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::gnu::seminfo as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::gnu::tcp_info as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::gnu::termios as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::gnu::timespec as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::gnu::utmpx as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::hwtstamp_config as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::in6_ifreq as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::in6_pktinfo as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::inotify_event as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::input_absinfo as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::input_event as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::input_id as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::input_keymap_entry as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::input_mask as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::itimerspec as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::iw_discarded as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::iw_encode_ext as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::iw_freq as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::iw_michaelmicfailure as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::iw_missed as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::iw_mlme as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::iw_param as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::iw_pmkid_cand as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::iw_pmksa as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::iw_priv_args as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::iw_quality as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::iw_statistics as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::iw_thrspy as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::j1939_filter as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::mnt_ns_info as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::mount_attr as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::mq_attr as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::msginfo as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::nlattr as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::nlmsgerr as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::nlmsghdr as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::open_how as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::packet_mreq as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::pidfd_info as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::posix_spawnattr_t as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::pthread_barrier_t as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::pthread_barrierattr_t as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::pthread_cond_t as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::pthread_condattr_t as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::pthread_mutex_t as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::pthread_mutexattr_t as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::pthread_rwlock_t as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::pthread_rwlockattr_t as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::ptp_clock_caps as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::ptp_clock_time as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::ptp_extts_event as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::ptp_extts_request as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::ptp_pin_desc as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::ptp_sys_offset_precise as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::regmatch_t as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::rlimit64 as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::sched_attr as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::sctp_authinfo as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::sctp_initmsg as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::sctp_nxtinfo as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::sctp_prinfo as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::sctp_rcvinfo as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::sctp_sndinfo as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::sctp_sndrcvinfo as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::seccomp_data as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::seccomp_notif as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::seccomp_notif_addfd as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::seccomp_notif_resp as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::seccomp_notif_sizes as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::sembuf as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::signalfd_siginfo as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::sock_extended_err as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::sock_txtime as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::sockaddr_alg as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::sockaddr_nl as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::sockaddr_pkt as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::sockaddr_vm as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::sockaddr_xdp as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::tls12_crypto_info_aes_ccm_128 as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::tls12_crypto_info_aes_gcm_128 as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::tls12_crypto_info_aes_gcm_256 as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::tls12_crypto_info_aria_gcm_128 as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::tls12_crypto_info_aria_gcm_256 as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::tls12_crypto_info_chacha20_poly1305 as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::tls12_crypto_info_sm4_ccm as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::tls12_crypto_info_sm4_gcm as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::tls_crypto_info as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::tpacket2_hdr as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::tpacket3_hdr as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::tpacket_auxdata as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::tpacket_bd_ts as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::tpacket_hdr as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::tpacket_hdr_v1 as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::tpacket_hdr_variant1 as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::tpacket_req as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::tpacket_req3 as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::tpacket_rollover_stats as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::tpacket_stats as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::tpacket_stats_v3 as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::tpacket_versions as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::ucred as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::uinput_abs_setup as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::uinput_ff_erase as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::uinput_ff_upload as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::uinput_setup as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::uinput_user_dev as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::xdp_desc as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::xdp_mmap_offsets as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::xdp_mmap_offsets_v1 as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::xdp_options as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::xdp_ring_offset as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::xdp_ring_offset_v1 as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::xdp_statistics as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::xdp_statistics_v1 as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::xdp_umem_reg as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::xdp_umem_reg_v1 as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::xsk_tx_metadata_completion as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::xsk_tx_metadata_request as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::sched_param as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::sock_filter as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::sockaddr as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::sockaddr_in as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::sockaddr_in6 as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::sockaddr_ll as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::sockaddr_storage as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::sockaddr_un as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::statx as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::statx_timestamp as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::utsname as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::pollfd as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::rlimit as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::rusage as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::timeval as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::tms as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::utimbuf as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::winsize as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "unix::htonl"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "unix::htons"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "unix::linux_like::CMSG_ALIGN"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "unix::linux_like::CMSG_LEN"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "unix::linux_like::CMSG_SPACE"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "unix::linux_like::IPOPT_CLASS"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "unix::linux_like::IPOPT_COPIED"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "unix::linux_like::IPOPT_NUMBER"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "unix::linux_like::IPTOS_ECN"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "unix::linux_like::KERNEL_VERSION"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "unix::linux_like::QCMD"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "unix::linux_like::SIGRTMAX"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "unix::linux_like::SIGRTMIN"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "unix::linux_like::WCOREDUMP"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "unix::linux_like::WEXITSTATUS"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "unix::linux_like::WIFCONTINUED"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "unix::linux_like::WIFEXITED"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "unix::linux_like::WIFSIGNALED"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "unix::linux_like::WIFSTOPPED"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "unix::linux_like::WSTOPSIG"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "unix::linux_like::WTERMSIG"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "unix::linux_like::W_EXITCODE"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "unix::linux_like::W_STOPCODE"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "unix::linux_like::linux::BPF_CLASS"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "unix::linux_like::linux::BPF_JUMP"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "unix::linux_like::linux::BPF_MISCOP"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "unix::linux_like::linux::BPF_MODE"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "unix::linux_like::linux::BPF_OP"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "unix::linux_like::linux::BPF_RVAL"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "unix::linux_like::linux::BPF_SIZE"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "unix::linux_like::linux::BPF_SRC"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "unix::linux_like::linux::BPF_STMT"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "unix::linux_like::linux::CPU_ALLOC_SIZE"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "unix::linux_like::linux::CPU_CLR"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "unix::linux_like::linux::CPU_COUNT"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "unix::linux_like::linux::CPU_COUNT_S"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "unix::linux_like::linux::CPU_EQUAL"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "unix::linux_like::linux::CPU_ISSET"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "unix::linux_like::linux::CPU_SET"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "unix::linux_like::linux::CPU_ZERO"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "unix::linux_like::linux::ELF32_R_INFO"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "unix::linux_like::linux::ELF32_R_SYM"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "unix::linux_like::linux::ELF32_R_TYPE"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "unix::linux_like::linux::ELF64_R_INFO"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "unix::linux_like::linux::ELF64_R_SYM"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "unix::linux_like::linux::ELF64_R_TYPE"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "unix::linux_like::linux::IPTOS_PREC"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "unix::linux_like::linux::IPTOS_TOS"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "unix::linux_like::linux::NLA_ALIGN"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "unix::linux_like::linux::RT_ADDRCLASS"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "unix::linux_like::linux::RT_LOCALADDR"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "unix::linux_like::linux::RT_TOS"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "unix::linux_like::linux::SCTP_PR_INDEX"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "unix::linux_like::linux::SCTP_PR_POLICY"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "unix::linux_like::linux::SCTP_PR_PRIO_ENABLED"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "unix::linux_like::linux::SCTP_PR_RTX_ENABLED"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "unix::linux_like::linux::SCTP_PR_SET_POLICY"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "unix::linux_like::linux::SCTP_PR_TTL_ENABLED"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "unix::linux_like::linux::TPACKET_ALIGN"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "unix::linux_like::linux::major"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "unix::linux_like::linux::makedev"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "unix::linux_like::linux::minor"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "unix::ntohl"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "unix::ntohs"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/unix/linux_like/linux/gnu/mod.rs",
    "func": "<unix::linux_like::linux::gnu::sifields_sigchld as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/unix/linux_like/linux/gnu/mod.rs",
    "func": "unix::linux_like::linux::gnu::<impl unix::linux_like::linux::gnu::b64::x86_64::siginfo_t>::si_addr"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/unix/linux_like/linux/gnu/mod.rs",
    "func": "unix::linux_like::linux::gnu::<impl unix::linux_like::linux::gnu::b64::x86_64::siginfo_t>::si_pid"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/unix/linux_like/linux/gnu/mod.rs",
    "func": "unix::linux_like::linux::gnu::<impl unix::linux_like::linux::gnu::b64::x86_64::siginfo_t>::si_status"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/unix/linux_like/linux/gnu/mod.rs",
    "func": "unix::linux_like::linux::gnu::<impl unix::linux_like::linux::gnu::b64::x86_64::siginfo_t>::si_stime"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/unix/linux_like/linux/gnu/mod.rs",
    "func": "unix::linux_like::linux::gnu::<impl unix::linux_like::linux::gnu::b64::x86_64::siginfo_t>::si_uid"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/unix/linux_like/linux/gnu/mod.rs",
    "func": "unix::linux_like::linux::gnu::<impl unix::linux_like::linux::gnu::b64::x86_64::siginfo_t>::si_utime"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/unix/linux_like/linux/gnu/mod.rs",
    "func": "unix::linux_like::linux::gnu::<impl unix::linux_like::linux::gnu::b64::x86_64::siginfo_t>::si_value"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/unix/linux_like/linux/gnu/mod.rs",
    "func": "unix::linux_like::linux::gnu::<impl unix::linux_like::linux::gnu::b64::x86_64::siginfo_t>::sifields"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/unix/linux_like/linux/mod.rs",
    "func": "unix::linux_like::linux::FUTEX_OP"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/unix/linux_like/mod.rs",
    "func": "unix::linux_like::_IO"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/unix/linux_like/mod.rs",
    "func": "unix::linux_like::_IOC"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/arch/all/memchr.rs",
    "func": "<arch::all::memchr::One as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/arch/all/memchr.rs",
    "func": "<arch::all::memchr::Three as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/arch/all/memchr.rs",
    "func": "<arch::all::memchr::Two as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/arch/all/memchr.rs",
    "func": "arch::all::memchr::One::confirm"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/arch/all/memchr.rs",
    "func": "arch::all::memchr::One::has_needle"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/arch/all/memchr.rs",
    "func": "arch::all::memchr::One::new"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/arch/all/memchr.rs",
    "func": "arch::all::memchr::Three::confirm"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/arch/all/memchr.rs",
    "func": "arch::all::memchr::Three::has_needle"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/arch/all/memchr.rs",
    "func": "arch::all::memchr::Three::new"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/arch/all/memchr.rs",
    "func": "arch::all::memchr::Two::confirm"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/arch/all/memchr.rs",
    "func": "arch::all::memchr::Two::has_needle"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/arch/all/memchr.rs",
    "func": "arch::all::memchr::Two::new"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/arch/all/memchr.rs",
    "func": "arch::all::memchr::has_zero_byte"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/arch/all/memchr.rs",
    "func": "arch::all::memchr::splat"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/arch/all/packedpair/mod.rs",
    "func": "<arch::all::packedpair::DefaultFrequencyRank as arch::all::packedpair::HeuristicFrequencyRank>::rank"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/arch/all/packedpair/mod.rs",
    "func": "<arch::all::packedpair::Finder as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/arch/all/packedpair/mod.rs",
    "func": "<arch::all::packedpair::Pair as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/arch/all/packedpair/mod.rs",
    "func": "arch::all::packedpair::Finder::pair"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/arch/all/packedpair/mod.rs",
    "func": "arch::all::packedpair::Pair::index1"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/arch/all/packedpair/mod.rs",
    "func": "arch::all::packedpair::Pair::index2"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/arch/all/rabinkarp.rs",
    "func": "<arch::all::rabinkarp::Finder as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/arch/all/rabinkarp.rs",
    "func": "<arch::all::rabinkarp::FinderRev as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/arch/all/rabinkarp.rs",
    "func": "<arch::all::rabinkarp::Hash as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/arch/all/rabinkarp.rs",
    "func": "<arch::all::rabinkarp::Hash as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/arch/all/rabinkarp.rs",
    "func": "<arch::all::rabinkarp::Hash as rustc_std_workspace_core::cmp::PartialEq>::eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/arch/all/rabinkarp.rs",
    "func": "<arch::all::rabinkarp::Hash as rustc_std_workspace_core::default::Default>::default"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/arch/all/rabinkarp.rs",
    "func": "arch::all::rabinkarp::Hash::add"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/arch/all/rabinkarp.rs",
    "func": "arch::all::rabinkarp::Hash::del"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/arch/all/rabinkarp.rs",
    "func": "arch::all::rabinkarp::Hash::new"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/arch/all/rabinkarp.rs",
    "func": "arch::all::rabinkarp::Hash::roll"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/arch/all/twoway.rs",
    "func": "<arch::all::twoway::ApproximateByteSet as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/arch/all/twoway.rs",
    "func": "<arch::all::twoway::Finder as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/arch/all/twoway.rs",
    "func": "<arch::all::twoway::FinderRev as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/arch/all/twoway.rs",
    "func": "<arch::all::twoway::Shift as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/arch/all/twoway.rs",
    "func": "<arch::all::twoway::SuffixKind as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/arch/all/twoway.rs",
    "func": "<arch::all::twoway::SuffixOrdering as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/arch/all/twoway.rs",
    "func": "<arch::all::twoway::TwoWay as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/arch/all/twoway.rs",
    "func": "arch::all::twoway::ApproximateByteSet::contains"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/arch/all/twoway.rs",
    "func": "arch::all::twoway::SuffixKind::cmp"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/arch/x86_64/avx2/memchr.rs",
    "func": "<arch::x86_64::avx2::memchr::One as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/arch/x86_64/avx2/memchr.rs",
    "func": "<arch::x86_64::avx2::memchr::Three as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/arch/x86_64/avx2/memchr.rs",
    "func": "<arch::x86_64::avx2::memchr::Two as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/arch/x86_64/avx2/memchr.rs",
    "func": "arch::x86_64::avx2::memchr::One::is_available"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/arch/x86_64/avx2/memchr.rs",
    "func": "arch::x86_64::avx2::memchr::One::new"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/arch/x86_64/avx2/memchr.rs",
    "func": "arch::x86_64::avx2::memchr::One::new_unchecked"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/arch/x86_64/avx2/memchr.rs",
    "func": "arch::x86_64::avx2::memchr::Three::is_available"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/arch/x86_64/avx2/memchr.rs",
    "func": "arch::x86_64::avx2::memchr::Three::new"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/arch/x86_64/avx2/memchr.rs",
    "func": "arch::x86_64::avx2::memchr::Three::new_unchecked"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/arch/x86_64/avx2/memchr.rs",
    "func": "arch::x86_64::avx2::memchr::Two::is_available"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/arch/x86_64/avx2/memchr.rs",
    "func": "arch::x86_64::avx2::memchr::Two::new"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/arch/x86_64/avx2/memchr.rs",
    "func": "arch::x86_64::avx2::memchr::Two::new_unchecked"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/arch/x86_64/avx2/packedpair.rs",
    "func": "<arch::x86_64::avx2::packedpair::Finder as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/arch/x86_64/avx2/packedpair.rs",
    "func": "arch::x86_64::avx2::packedpair::Finder::is_available"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/arch/x86_64/avx2/packedpair.rs",
    "func": "arch::x86_64::avx2::packedpair::Finder::min_haystack_len"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/arch/x86_64/avx2/packedpair.rs",
    "func": "arch::x86_64::avx2::packedpair::Finder::pair"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/arch/x86_64/sse2/memchr.rs",
    "func": "<arch::x86_64::sse2::memchr::One as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/arch/x86_64/sse2/memchr.rs",
    "func": "<arch::x86_64::sse2::memchr::Three as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/arch/x86_64/sse2/memchr.rs",
    "func": "<arch::x86_64::sse2::memchr::Two as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/arch/x86_64/sse2/memchr.rs",
    "func": "arch::x86_64::sse2::memchr::One::is_available"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/arch/x86_64/sse2/memchr.rs",
    "func": "arch::x86_64::sse2::memchr::One::new"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/arch/x86_64/sse2/memchr.rs",
    "func": "arch::x86_64::sse2::memchr::One::new_unchecked"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/arch/x86_64/sse2/memchr.rs",
    "func": "arch::x86_64::sse2::memchr::Three::is_available"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/arch/x86_64/sse2/memchr.rs",
    "func": "arch::x86_64::sse2::memchr::Three::new"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/arch/x86_64/sse2/memchr.rs",
    "func": "arch::x86_64::sse2::memchr::Three::new_unchecked"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/arch/x86_64/sse2/memchr.rs",
    "func": "arch::x86_64::sse2::memchr::Two::is_available"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/arch/x86_64/sse2/memchr.rs",
    "func": "arch::x86_64::sse2::memchr::Two::new"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/arch/x86_64/sse2/memchr.rs",
    "func": "arch::x86_64::sse2::memchr::Two::new_unchecked"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/arch/x86_64/sse2/packedpair.rs",
    "func": "<arch::x86_64::sse2::packedpair::Finder as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/arch/x86_64/sse2/packedpair.rs",
    "func": "arch::x86_64::sse2::packedpair::Finder::is_available"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/arch/x86_64/sse2/packedpair.rs",
    "func": "arch::x86_64::sse2::packedpair::Finder::min_haystack_len"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/arch/x86_64/sse2/packedpair.rs",
    "func": "arch::x86_64::sse2::packedpair::Finder::pair"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/memmem/mod.rs",
    "func": "<memmem::FinderBuilder as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/memmem/mod.rs",
    "func": "<memmem::FinderBuilder as rustc_std_workspace_core::default::Default>::default"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/memmem/mod.rs",
    "func": "memmem::FinderBuilder::new"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/memmem/mod.rs",
    "func": "memmem::FinderBuilder::prefilter"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/memmem/searcher.rs",
    "func": "<memmem::searcher::PrefilterConfig as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/memmem/searcher.rs",
    "func": "<memmem::searcher::PrefilterConfig as rustc_std_workspace_core::default::Default>::default"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/memmem/searcher.rs",
    "func": "<memmem::searcher::PrefilterState as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/memmem/searcher.rs",
    "func": "<memmem::searcher::SearcherRev as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/memmem/searcher.rs",
    "func": "<memmem::searcher::SearcherRevKind as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/memmem/searcher.rs",
    "func": "memmem::searcher::PrefilterConfig::is_none"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/memmem/searcher.rs",
    "func": "memmem::searcher::PrefilterState::is_effective"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/memmem/searcher.rs",
    "func": "memmem::searcher::PrefilterState::is_inert"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/memmem/searcher.rs",
    "func": "memmem::searcher::PrefilterState::new"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/memmem/searcher.rs",
    "func": "memmem::searcher::PrefilterState::skips"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/memmem/searcher.rs",
    "func": "memmem::searcher::PrefilterState::update"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/vector.rs",
    "func": "<vector::SensibleMoveMask as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/vector.rs",
    "func": "<vector::SensibleMoveMask as vector::MoveMask>::all_zeros_except_least_significant"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/vector.rs",
    "func": "<vector::SensibleMoveMask as vector::MoveMask>::and"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/vector.rs",
    "func": "<vector::SensibleMoveMask as vector::MoveMask>::clear_least_significant_bit"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/vector.rs",
    "func": "<vector::SensibleMoveMask as vector::MoveMask>::count_ones"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/vector.rs",
    "func": "<vector::SensibleMoveMask as vector::MoveMask>::first_offset"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/vector.rs",
    "func": "<vector::SensibleMoveMask as vector::MoveMask>::has_non_zero"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/vector.rs",
    "func": "<vector::SensibleMoveMask as vector::MoveMask>::last_offset"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/vector.rs",
    "func": "<vector::SensibleMoveMask as vector::MoveMask>::or"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/vector.rs",
    "func": "vector::SensibleMoveMask::get_for_offset"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/vector.rs",
    "func": "vector::x86avx2::<impl vector::Vector for rustc_std_workspace_core::arch::x86_64::__m256i>::and"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/vector.rs",
    "func": "vector::x86avx2::<impl vector::Vector for rustc_std_workspace_core::arch::x86_64::__m256i>::cmpeq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/vector.rs",
    "func": "vector::x86avx2::<impl vector::Vector for rustc_std_workspace_core::arch::x86_64::__m256i>::movemask"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/vector.rs",
    "func": "vector::x86avx2::<impl vector::Vector for rustc_std_workspace_core::arch::x86_64::__m256i>::or"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/vector.rs",
    "func": "vector::x86avx2::<impl vector::Vector for rustc_std_workspace_core::arch::x86_64::__m256i>::splat"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/vector.rs",
    "func": "vector::x86sse2::<impl vector::Vector for rustc_std_workspace_core::arch::x86_64::__m128i>::and"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/vector.rs",
    "func": "vector::x86sse2::<impl vector::Vector for rustc_std_workspace_core::arch::x86_64::__m128i>::cmpeq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/vector.rs",
    "func": "vector::x86sse2::<impl vector::Vector for rustc_std_workspace_core::arch::x86_64::__m128i>::movemask"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/vector.rs",
    "func": "vector::x86sse2::<impl vector::Vector for rustc_std_workspace_core::arch::x86_64::__m128i>::or"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/vector.rs",
    "func": "vector::x86sse2::<impl vector::Vector for rustc_std_workspace_core::arch::x86_64::__m128i>::splat"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/miniz_oxide-0.8.9/src/inflate/core.rs",
    "func": "<inflate::core::DecompressorOxide as rustc_std_workspace_core::default::Default>::default"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/miniz_oxide-0.8.9/src/inflate/core.rs",
    "func": "<inflate::core::LocalVars as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/miniz_oxide-0.8.9/src/inflate/core.rs",
    "func": "<inflate::core::State as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/miniz_oxide-0.8.9/src/inflate/core.rs",
    "func": "<inflate::core::State as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/miniz_oxide-0.8.9/src/inflate/core.rs",
    "func": "<inflate::core::State as rustc_std_workspace_core::cmp::PartialEq>::eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/miniz_oxide-0.8.9/src/inflate/core.rs",
    "func": "inflate::core::DecompressorOxide::new"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/miniz_oxide-0.8.9/src/inflate/core.rs",
    "func": "inflate::core::HuffmanTable::fast_lookup"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/miniz_oxide-0.8.9/src/inflate/core.rs",
    "func": "inflate::core::HuffmanTable::lookup"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/miniz_oxide-0.8.9/src/inflate/core.rs",
    "func": "inflate::core::HuffmanTable::new"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/miniz_oxide-0.8.9/src/inflate/core.rs",
    "func": "inflate::core::HuffmanTable::tree_lookup"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/miniz_oxide-0.8.9/src/inflate/core.rs",
    "func": "inflate::core::State::begin"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/miniz_oxide-0.8.9/src/inflate/core.rs",
    "func": "inflate::core::end_of_input"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/miniz_oxide-0.8.9/src/inflate/core.rs",
    "func": "inflate::core::num_extra_bits_for_distance_code"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/miniz_oxide-0.8.9/src/inflate/core.rs",
    "func": "inflate::core::reverse_bits"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/miniz_oxide-0.8.9/src/inflate/core.rs",
    "func": "inflate::core::undo_bytes"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/miniz_oxide-0.8.9/src/inflate/core.rs",
    "func": "inflate::core::validate_zlib_header"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/miniz_oxide-0.8.9/src/inflate/mod.rs",
    "func": "<inflate::TINFLStatus as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/miniz_oxide-0.8.9/src/inflate/mod.rs",
    "func": "<inflate::TINFLStatus as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/miniz_oxide-0.8.9/src/inflate/mod.rs",
    "func": "<inflate::TINFLStatus as rustc_std_workspace_core::cmp::PartialEq>::eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/miniz_oxide-0.8.9/src/inflate/mod.rs",
    "func": "inflate::TINFLStatus::from_i32"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/miniz_oxide-0.8.9/src/lib.rs",
    "func": "<DataFormat as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/miniz_oxide-0.8.9/src/lib.rs",
    "func": "<DataFormat as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/miniz_oxide-0.8.9/src/lib.rs",
    "func": "<DataFormat as rustc_std_workspace_core::cmp::PartialEq>::eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/miniz_oxide-0.8.9/src/lib.rs",
    "func": "<MZError as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/miniz_oxide-0.8.9/src/lib.rs",
    "func": "<MZError as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/miniz_oxide-0.8.9/src/lib.rs",
    "func": "<MZError as rustc_std_workspace_core::cmp::PartialEq>::eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/miniz_oxide-0.8.9/src/lib.rs",
    "func": "<MZFlush as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/miniz_oxide-0.8.9/src/lib.rs",
    "func": "<MZFlush as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/miniz_oxide-0.8.9/src/lib.rs",
    "func": "<MZFlush as rustc_std_workspace_core::cmp::PartialEq>::eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/miniz_oxide-0.8.9/src/lib.rs",
    "func": "<MZStatus as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/miniz_oxide-0.8.9/src/lib.rs",
    "func": "<MZStatus as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/miniz_oxide-0.8.9/src/lib.rs",
    "func": "<MZStatus as rustc_std_workspace_core::cmp::PartialEq>::eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/miniz_oxide-0.8.9/src/lib.rs",
    "func": "MZFlush::new"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/archive.rs",
    "func": "<archive::AixFileHeader as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/archive.rs",
    "func": "<archive::AixHeader as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/archive.rs",
    "func": "<archive::AixMemberOffset as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/archive.rs",
    "func": "<archive::Header as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/common.rs",
    "func": "<common::AddressSize as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/common.rs",
    "func": "<common::AddressSize as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/common.rs",
    "func": "<common::AddressSize as rustc_std_workspace_core::cmp::PartialEq>::eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/common.rs",
    "func": "<common::Architecture as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/common.rs",
    "func": "<common::Architecture as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/common.rs",
    "func": "<common::Architecture as rustc_std_workspace_core::cmp::PartialEq>::eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/common.rs",
    "func": "<common::BinaryFormat as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/common.rs",
    "func": "<common::BinaryFormat as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/common.rs",
    "func": "<common::BinaryFormat as rustc_std_workspace_core::cmp::PartialEq>::eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/common.rs",
    "func": "<common::ComdatKind as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/common.rs",
    "func": "<common::ComdatKind as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/common.rs",
    "func": "<common::ComdatKind as rustc_std_workspace_core::cmp::PartialEq>::eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/common.rs",
    "func": "<common::FileFlags as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/common.rs",
    "func": "<common::FileFlags as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/common.rs",
    "func": "<common::FileFlags as rustc_std_workspace_core::cmp::PartialEq>::eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/common.rs",
    "func": "<common::RelocationEncoding as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/common.rs",
    "func": "<common::RelocationEncoding as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/common.rs",
    "func": "<common::RelocationEncoding as rustc_std_workspace_core::cmp::PartialEq>::eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/common.rs",
    "func": "<common::RelocationFlags as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/common.rs",
    "func": "<common::RelocationFlags as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/common.rs",
    "func": "<common::RelocationFlags as rustc_std_workspace_core::cmp::PartialEq>::eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/common.rs",
    "func": "<common::RelocationKind as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/common.rs",
    "func": "<common::RelocationKind as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/common.rs",
    "func": "<common::RelocationKind as rustc_std_workspace_core::cmp::PartialEq>::eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/common.rs",
    "func": "<common::SectionFlags as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/common.rs",
    "func": "<common::SectionFlags as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/common.rs",
    "func": "<common::SectionFlags as rustc_std_workspace_core::cmp::PartialEq>::eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/common.rs",
    "func": "<common::SectionKind as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/common.rs",
    "func": "<common::SectionKind as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/common.rs",
    "func": "<common::SectionKind as rustc_std_workspace_core::cmp::PartialEq>::eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/common.rs",
    "func": "<common::SegmentFlags as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/common.rs",
    "func": "<common::SegmentFlags as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/common.rs",
    "func": "<common::SegmentFlags as rustc_std_workspace_core::cmp::PartialEq>::eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/common.rs",
    "func": "<common::SubArchitecture as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/common.rs",
    "func": "<common::SubArchitecture as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/common.rs",
    "func": "<common::SubArchitecture as rustc_std_workspace_core::cmp::PartialEq>::eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/common.rs",
    "func": "<common::SymbolKind as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/common.rs",
    "func": "<common::SymbolKind as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/common.rs",
    "func": "<common::SymbolKind as rustc_std_workspace_core::cmp::PartialEq>::eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/common.rs",
    "func": "<common::SymbolScope as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/common.rs",
    "func": "<common::SymbolScope as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/common.rs",
    "func": "<common::SymbolScope as rustc_std_workspace_core::cmp::PartialEq>::eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/common.rs",
    "func": "common::AddressSize::bytes"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/common.rs",
    "func": "common::Architecture::address_size"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/common.rs",
    "func": "common::BinaryFormat::native_object"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/common.rs",
    "func": "common::SectionKind::is_bss"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/elf.rs",
    "func": "<elf::Ident as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/elf.rs",
    "func": "elf::ef_e2k_flag_to_mach"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/elf.rs",
    "func": "elf::ef_e2k_mach_to_flag"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/endian.rs",
    "func": "<endian::BigEndian as endian::Endian>::from_big_endian"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/endian.rs",
    "func": "<endian::BigEndian as endian::Endian>::is_big_endian"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/endian.rs",
    "func": "<endian::BigEndian as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/endian.rs",
    "func": "<endian::BigEndian as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/endian.rs",
    "func": "<endian::BigEndian as rustc_std_workspace_core::cmp::PartialEq>::eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/endian.rs",
    "func": "<endian::BigEndian as rustc_std_workspace_core::default::Default>::default"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/endian.rs",
    "func": "<endian::Endianness as endian::Endian>::from_big_endian"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/endian.rs",
    "func": "<endian::Endianness as endian::Endian>::is_big_endian"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/endian.rs",
    "func": "<endian::Endianness as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/endian.rs",
    "func": "<endian::Endianness as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/endian.rs",
    "func": "<endian::Endianness as rustc_std_workspace_core::cmp::PartialEq>::eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/endian.rs",
    "func": "<endian::Endianness as rustc_std_workspace_core::default::Default>::default"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/endian.rs",
    "func": "<endian::LittleEndian as endian::Endian>::from_big_endian"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/endian.rs",
    "func": "<endian::LittleEndian as endian::Endian>::is_big_endian"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/endian.rs",
    "func": "<endian::LittleEndian as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/endian.rs",
    "func": "<endian::LittleEndian as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/endian.rs",
    "func": "<endian::LittleEndian as rustc_std_workspace_core::cmp::PartialEq>::eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/endian.rs",
    "func": "<endian::LittleEndian as rustc_std_workspace_core::default::Default>::default"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/macho.rs",
    "func": "<macho::DyldCacheSlidePointer3 as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/macho.rs",
    "func": "<macho::DyldCacheSlidePointer5 as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/macho.rs",
    "func": "<macho::FatArch32 as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/macho.rs",
    "func": "<macho::FatArch64 as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/macho.rs",
    "func": "<macho::FatHeader as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/macho.rs",
    "func": "<macho::PtrauthKey as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/macho.rs",
    "func": "<macho::PtrauthKey as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/macho.rs",
    "func": "<macho::PtrauthKey as rustc_std_workspace_core::cmp::PartialEq>::eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/macho.rs",
    "func": "<macho::RelocationInfo as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/macho.rs",
    "func": "<macho::ScatteredRelocationInfo as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/macho.rs",
    "func": "macho::DyldCacheSlidePointer3::addr_div"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/macho.rs",
    "func": "macho::DyldCacheSlidePointer3::diversity"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/macho.rs",
    "func": "macho::DyldCacheSlidePointer3::high8"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/macho.rs",
    "func": "macho::DyldCacheSlidePointer3::is_auth"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/macho.rs",
    "func": "macho::DyldCacheSlidePointer3::key"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/macho.rs",
    "func": "macho::DyldCacheSlidePointer3::next"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/macho.rs",
    "func": "macho::DyldCacheSlidePointer3::runtime_offset"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/macho.rs",
    "func": "macho::DyldCacheSlidePointer3::target"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/macho.rs",
    "func": "macho::DyldCacheSlidePointer5::addr_div"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/macho.rs",
    "func": "macho::DyldCacheSlidePointer5::diversity"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/macho.rs",
    "func": "macho::DyldCacheSlidePointer5::high8"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/macho.rs",
    "func": "macho::DyldCacheSlidePointer5::is_auth"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/macho.rs",
    "func": "macho::DyldCacheSlidePointer5::key_is_data"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/macho.rs",
    "func": "macho::DyldCacheSlidePointer5::next"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/macho.rs",
    "func": "macho::DyldCacheSlidePointer5::runtime_offset"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/macho.rs",
    "func": "macho::cpu_subtype_intel"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/macho.rs",
    "func": "macho::cpu_subtype_intel_family"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/macho.rs",
    "func": "macho::cpu_subtype_intel_model"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/pe.rs",
    "func": "<pe::AnonObjectHeader as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/pe.rs",
    "func": "<pe::AnonObjectHeaderBigobj as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/pe.rs",
    "func": "<pe::AnonObjectHeaderV2 as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/pe.rs",
    "func": "<pe::Guid as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/pe.rs",
    "func": "<pe::Guid as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/pe.rs",
    "func": "<pe::Guid as rustc_std_workspace_core::cmp::PartialEq>::eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/pe.rs",
    "func": "<pe::ImageAlpha64RuntimeFunctionEntry as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/pe.rs",
    "func": "<pe::ImageAlphaRuntimeFunctionEntry as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/pe.rs",
    "func": "<pe::ImageArchitectureEntry as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/pe.rs",
    "func": "<pe::ImageArchiveMemberHeader as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/pe.rs",
    "func": "<pe::ImageArm64RuntimeFunctionEntry as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/pe.rs",
    "func": "<pe::ImageArmRuntimeFunctionEntry as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/pe.rs",
    "func": "<pe::ImageAuxSymbolCrc as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/pe.rs",
    "func": "<pe::ImageAuxSymbolFunction as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/pe.rs",
    "func": "<pe::ImageAuxSymbolFunctionBeginEnd as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/pe.rs",
    "func": "<pe::ImageAuxSymbolSection as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/pe.rs",
    "func": "<pe::ImageAuxSymbolTokenDef as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/pe.rs",
    "func": "<pe::ImageAuxSymbolWeak as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/pe.rs",
    "func": "<pe::ImageBaseRelocation as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/pe.rs",
    "func": "<pe::ImageBoundForwarderRef as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/pe.rs",
    "func": "<pe::ImageBoundImportDescriptor as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/pe.rs",
    "func": "<pe::ImageCoffSymbolsHeader as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/pe.rs",
    "func": "<pe::ImageCor20Header as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/pe.rs",
    "func": "<pe::ImageDataDirectory as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/pe.rs",
    "func": "<pe::ImageDebugDirectory as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/pe.rs",
    "func": "<pe::ImageDebugMisc as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/pe.rs",
    "func": "<pe::ImageDelayloadDescriptor as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/pe.rs",
    "func": "<pe::ImageDynamicRelocation32 as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/pe.rs",
    "func": "<pe::ImageDynamicRelocation32V2 as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/pe.rs",
    "func": "<pe::ImageDynamicRelocation64 as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/pe.rs",
    "func": "<pe::ImageDynamicRelocation64V2 as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/pe.rs",
    "func": "<pe::ImageDynamicRelocationTable as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/pe.rs",
    "func": "<pe::ImageEnclaveConfig32 as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/pe.rs",
    "func": "<pe::ImageEnclaveConfig64 as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/pe.rs",
    "func": "<pe::ImageEnclaveImport as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/pe.rs",
    "func": "<pe::ImageEpilogueDynamicRelocationHeader as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/pe.rs",
    "func": "<pe::ImageExportDirectory as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/pe.rs",
    "func": "<pe::ImageFileHeader as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/pe.rs",
    "func": "<pe::ImageFunctionEntry as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/pe.rs",
    "func": "<pe::ImageFunctionEntry64 as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/pe.rs",
    "func": "<pe::ImageHotPatchBase as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/pe.rs",
    "func": "<pe::ImageHotPatchHashes as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/pe.rs",
    "func": "<pe::ImageHotPatchInfo as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/pe.rs",
    "func": "<pe::ImageImportByName as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/pe.rs",
    "func": "<pe::ImageImportDescriptor as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/pe.rs",
    "func": "<pe::ImageLinenumber as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/pe.rs",
    "func": "<pe::ImageLoadConfigCodeIntegrity as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/pe.rs",
    "func": "<pe::ImageLoadConfigDirectory32 as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/pe.rs",
    "func": "<pe::ImageLoadConfigDirectory64 as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/pe.rs",
    "func": "<pe::ImageNtHeaders32 as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/pe.rs",
    "func": "<pe::ImageNtHeaders64 as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/pe.rs",
    "func": "<pe::ImageOptionalHeader32 as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/pe.rs",
    "func": "<pe::ImageOptionalHeader64 as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/pe.rs",
    "func": "<pe::ImageOs2Header as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/pe.rs",
    "func": "<pe::ImagePrologueDynamicRelocationHeader as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/pe.rs",
    "func": "<pe::ImageRelocation as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/pe.rs",
    "func": "<pe::ImageResourceDataEntry as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/pe.rs",
    "func": "<pe::ImageResourceDirStringU as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/pe.rs",
    "func": "<pe::ImageResourceDirectory as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/pe.rs",
    "func": "<pe::ImageResourceDirectoryEntry as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/pe.rs",
    "func": "<pe::ImageResourceDirectoryString as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/pe.rs",
    "func": "<pe::ImageRuntimeFunctionEntry as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/pe.rs",
    "func": "<pe::ImageSectionHeader as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/pe.rs",
    "func": "<pe::ImageSectionHeader as rustc_std_workspace_core::default::Default>::default"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/pe.rs",
    "func": "<pe::ImageSymbol as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/pe.rs",
    "func": "<pe::ImageSymbolBytes as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/pe.rs",
    "func": "<pe::ImageSymbolEx as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/pe.rs",
    "func": "<pe::ImageSymbolExBytes as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/pe.rs",
    "func": "<pe::ImageThunkData32 as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/pe.rs",
    "func": "<pe::ImageThunkData64 as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/pe.rs",
    "func": "<pe::ImageTlsDirectory32 as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/pe.rs",
    "func": "<pe::ImageTlsDirectory64 as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/pe.rs",
    "func": "<pe::ImageVxdHeader as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/pe.rs",
    "func": "<pe::ImportObjectHeader as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/pe.rs",
    "func": "<pe::MaskedRichHeaderEntry as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/pe.rs",
    "func": "<pe::NonPagedDebugInfo as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/pe.rs",
    "func": "pe::Guid::data1"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/pe.rs",
    "func": "pe::Guid::data2"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/pe.rs",
    "func": "pe::Guid::data3"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/pe.rs",
    "func": "pe::Guid::data4"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/pe.rs",
    "func": "pe::ImageDelayloadDescriptor::is_null"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/pe.rs",
    "func": "pe::ImageImportDescriptor::is_null"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/archive.rs",
    "func": "<read::archive::ArchiveKind as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/archive.rs",
    "func": "<read::archive::ArchiveKind as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/archive.rs",
    "func": "<read::archive::ArchiveKind as rustc_std_workspace_core::cmp::PartialEq>::eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/archive.rs",
    "func": "<read::archive::ArchiveOffset as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/coff/file.rs",
    "func": "<pe::AnonObjectHeaderBigobj as read::coff::file::CoffHeader>::characteristics"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/coff/file.rs",
    "func": "<pe::AnonObjectHeaderBigobj as read::coff::file::CoffHeader>::is_type_bigobj"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/coff/file.rs",
    "func": "<pe::AnonObjectHeaderBigobj as read::coff::file::CoffHeader>::machine"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/coff/file.rs",
    "func": "<pe::AnonObjectHeaderBigobj as read::coff::file::CoffHeader>::number_of_sections"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/coff/file.rs",
    "func": "<pe::AnonObjectHeaderBigobj as read::coff::file::CoffHeader>::number_of_symbols"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/coff/file.rs",
    "func": "<pe::AnonObjectHeaderBigobj as read::coff::file::CoffHeader>::pointer_to_symbol_table"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/coff/file.rs",
    "func": "<pe::ImageFileHeader as read::coff::file::CoffHeader>::characteristics"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/coff/file.rs",
    "func": "<pe::ImageFileHeader as read::coff::file::CoffHeader>::is_type_bigobj"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/coff/file.rs",
    "func": "<pe::ImageFileHeader as read::coff::file::CoffHeader>::machine"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/coff/file.rs",
    "func": "<pe::ImageFileHeader as read::coff::file::CoffHeader>::number_of_sections"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/coff/file.rs",
    "func": "<pe::ImageFileHeader as read::coff::file::CoffHeader>::number_of_symbols"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/coff/file.rs",
    "func": "<pe::ImageFileHeader as read::coff::file::CoffHeader>::pointer_to_symbol_table"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/coff/import.rs",
    "func": "<read::coff::import::ImportType as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/coff/import.rs",
    "func": "<read::coff::import::ImportType as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/coff/import.rs",
    "func": "<read::coff::import::ImportType as rustc_std_workspace_core::cmp::PartialEq>::eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/coff/import.rs",
    "func": "read::coff::import::<impl pe::ImportObjectHeader>::import_type"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/coff/import.rs",
    "func": "read::coff::import::<impl pe::ImportObjectHeader>::name_type"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/coff/relocation.rs",
    "func": "read::coff::relocation::<impl pe::ImageRelocation>::symbol"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/coff/section.rs",
    "func": "<read::coff::section::SectionTable<'_> as rustc_std_workspace_core::default::Default>::default"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/coff/section.rs",
    "func": "read::coff::section::<impl pe::ImageSectionHeader>::coff_alignment"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/coff/section.rs",
    "func": "read::coff::section::<impl pe::ImageSectionHeader>::coff_file_range"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/coff/section.rs",
    "func": "read::coff::section::<impl pe::ImageSectionHeader>::kind"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/coff/section.rs",
    "func": "read::coff::section::<impl pe::ImageSectionHeader>::name_offset"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/coff/section.rs",
    "func": "read::coff::section::<impl pe::ImageSectionHeader>::raw_name"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/coff/symbol.rs",
    "func": "<pe::ImageSymbol as read::coff::symbol::ImageSymbol>::number_of_aux_symbols"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/coff/symbol.rs",
    "func": "<pe::ImageSymbol as read::coff::symbol::ImageSymbol>::raw_name"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/coff/symbol.rs",
    "func": "<pe::ImageSymbol as read::coff::symbol::ImageSymbol>::section_number"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/coff/symbol.rs",
    "func": "<pe::ImageSymbol as read::coff::symbol::ImageSymbol>::storage_class"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/coff/symbol.rs",
    "func": "<pe::ImageSymbol as read::coff::symbol::ImageSymbol>::typ"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/coff/symbol.rs",
    "func": "<pe::ImageSymbol as read::coff::symbol::ImageSymbol>::value"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/coff/symbol.rs",
    "func": "<pe::ImageSymbolEx as read::coff::symbol::ImageSymbol>::number_of_aux_symbols"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/coff/symbol.rs",
    "func": "<pe::ImageSymbolEx as read::coff::symbol::ImageSymbol>::raw_name"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/coff/symbol.rs",
    "func": "<pe::ImageSymbolEx as read::coff::symbol::ImageSymbol>::section_number"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/coff/symbol.rs",
    "func": "<pe::ImageSymbolEx as read::coff::symbol::ImageSymbol>::storage_class"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/coff/symbol.rs",
    "func": "<pe::ImageSymbolEx as read::coff::symbol::ImageSymbol>::typ"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/coff/symbol.rs",
    "func": "<pe::ImageSymbolEx as read::coff::symbol::ImageSymbol>::value"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/coff/symbol.rs",
    "func": "read::coff::symbol::<impl pe::ImageAuxSymbolWeak>::default_symbol"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/elf/relocation.rs",
    "func": "<read::elf::relocation::Crel as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/elf/relocation.rs",
    "func": "<read::elf::relocation::CrelIteratorHeader as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/elf/relocation.rs",
    "func": "<read::elf::relocation::CrelIteratorState as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/elf/relocation.rs",
    "func": "<read::elf::relocation::CrelIteratorState as rustc_std_workspace_core::default::Default>::default"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/elf/relocation.rs",
    "func": "<read::elf::relocation::RelocationSections as rustc_std_workspace_core::default::Default>::default"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/elf/relocation.rs",
    "func": "read::elf::relocation::Crel::symbol"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/elf/version.rs",
    "func": "<read::elf::version::Version<'_> as rustc_std_workspace_core::default::Default>::default"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/elf/version.rs",
    "func": "<read::elf::version::VersionIndex as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/elf/version.rs",
    "func": "<read::elf::version::VersionIndex as rustc_std_workspace_core::default::Default>::default"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/elf/version.rs",
    "func": "read::elf::version::VersionIndex::index"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/elf/version.rs",
    "func": "read::elf::version::VersionIndex::is_global"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/elf/version.rs",
    "func": "read::elf::version::VersionIndex::is_hidden"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/elf/version.rs",
    "func": "read::elf::version::VersionIndex::is_local"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/macho/dyld_cache.rs",
    "func": "<read::macho::dyld_cache::RelocationStateV2 as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/macho/dyld_cache.rs",
    "func": "<read::macho::dyld_cache::RelocationStateV2 as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/macho/dyld_cache.rs",
    "func": "<read::macho::dyld_cache::RelocationStateV2 as rustc_std_workspace_core::cmp::PartialEq>::eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/macho/dyld_cache.rs",
    "func": "<read::macho::dyld_cache::RelocationStateV3 as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/macho/dyld_cache.rs",
    "func": "<read::macho::dyld_cache::RelocationStateV3 as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/macho/dyld_cache.rs",
    "func": "<read::macho::dyld_cache::RelocationStateV3 as rustc_std_workspace_core::cmp::PartialEq>::eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/macho/dyld_cache.rs",
    "func": "<read::macho::dyld_cache::RelocationStateV5 as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/macho/dyld_cache.rs",
    "func": "<read::macho::dyld_cache::RelocationStateV5 as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/macho/dyld_cache.rs",
    "func": "<read::macho::dyld_cache::RelocationStateV5 as rustc_std_workspace_core::cmp::PartialEq>::eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/macho/fat.rs",
    "func": "<macho::FatArch32 as read::macho::fat::FatArch>::align"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/macho/fat.rs",
    "func": "<macho::FatArch32 as read::macho::fat::FatArch>::cpusubtype"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/macho/fat.rs",
    "func": "<macho::FatArch32 as read::macho::fat::FatArch>::cputype"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/macho/fat.rs",
    "func": "<macho::FatArch32 as read::macho::fat::FatArch>::offset"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/macho/fat.rs",
    "func": "<macho::FatArch32 as read::macho::fat::FatArch>::size"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/macho/fat.rs",
    "func": "<macho::FatArch64 as read::macho::fat::FatArch>::align"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/macho/fat.rs",
    "func": "<macho::FatArch64 as read::macho::fat::FatArch>::cpusubtype"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/macho/fat.rs",
    "func": "<macho::FatArch64 as read::macho::fat::FatArch>::cputype"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/macho/fat.rs",
    "func": "<macho::FatArch64 as read::macho::fat::FatArch>::offset"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/macho/fat.rs",
    "func": "<macho::FatArch64 as read::macho::fat::FatArch>::size"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/mod.rs",
    "func": "<read::CompressedFileRange as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/mod.rs",
    "func": "<read::CompressedFileRange as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/mod.rs",
    "func": "<read::CompressedFileRange as rustc_std_workspace_core::cmp::PartialEq>::eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/mod.rs",
    "func": "<read::CompressionFormat as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/mod.rs",
    "func": "<read::CompressionFormat as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/mod.rs",
    "func": "<read::CompressionFormat as rustc_std_workspace_core::cmp::PartialEq>::eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/mod.rs",
    "func": "<read::FileKind as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/mod.rs",
    "func": "<read::FileKind as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/mod.rs",
    "func": "<read::FileKind as rustc_std_workspace_core::cmp::PartialEq>::eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/mod.rs",
    "func": "<read::ObjectKind as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/mod.rs",
    "func": "<read::ObjectKind as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/mod.rs",
    "func": "<read::ObjectKind as rustc_std_workspace_core::cmp::PartialEq>::eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/mod.rs",
    "func": "<read::ObjectMap<'_> as rustc_std_workspace_core::default::Default>::default"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/mod.rs",
    "func": "<read::ObjectMapEntry<'_> as rustc_std_workspace_core::default::Default>::default"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/mod.rs",
    "func": "<read::RelocationMap as rustc_std_workspace_core::default::Default>::default"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/mod.rs",
    "func": "<read::RelocationMapEntry as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/mod.rs",
    "func": "<read::RelocationMapEntry as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/mod.rs",
    "func": "<read::RelocationMapEntry as rustc_std_workspace_core::cmp::PartialEq>::eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/mod.rs",
    "func": "<read::RelocationTarget as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/mod.rs",
    "func": "<read::RelocationTarget as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/mod.rs",
    "func": "<read::RelocationTarget as rustc_std_workspace_core::cmp::PartialEq>::eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/mod.rs",
    "func": "<read::SectionIndex as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/mod.rs",
    "func": "<read::SectionIndex as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/mod.rs",
    "func": "<read::SectionIndex as rustc_std_workspace_core::cmp::PartialEq>::eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/mod.rs",
    "func": "<read::SymbolIndex as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/mod.rs",
    "func": "<read::SymbolIndex as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/mod.rs",
    "func": "<read::SymbolIndex as rustc_std_workspace_core::cmp::PartialEq>::eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/mod.rs",
    "func": "<read::SymbolSection as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/mod.rs",
    "func": "<read::SymbolSection as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/mod.rs",
    "func": "<read::SymbolSection as rustc_std_workspace_core::cmp::PartialEq>::eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/mod.rs",
    "func": "read::CompressedFileRange::none"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/mod.rs",
    "func": "read::Relocation::addend"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/mod.rs",
    "func": "read::Relocation::encoding"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/mod.rs",
    "func": "read::Relocation::flags"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/mod.rs",
    "func": "read::Relocation::has_implicit_addend"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/mod.rs",
    "func": "read::Relocation::kind"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/mod.rs",
    "func": "read::Relocation::set_addend"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/mod.rs",
    "func": "read::Relocation::size"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/mod.rs",
    "func": "read::Relocation::target"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/mod.rs",
    "func": "read::SymbolSection::index"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/pe/data_directory.rs",
    "func": "read::pe::data_directory::<impl pe::ImageDataDirectory>::address_range"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/pe/file.rs",
    "func": "<pe::ImageNtHeaders32 as read::pe::file::ImageNtHeaders>::file_header"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/pe/file.rs",
    "func": "<pe::ImageNtHeaders32 as read::pe::file::ImageNtHeaders>::is_type_64"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/pe/file.rs",
    "func": "<pe::ImageNtHeaders32 as read::pe::file::ImageNtHeaders>::is_valid_optional_magic"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/pe/file.rs",
    "func": "<pe::ImageNtHeaders32 as read::pe::file::ImageNtHeaders>::optional_header"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/pe/file.rs",
    "func": "<pe::ImageNtHeaders32 as read::pe::file::ImageNtHeaders>::signature"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/pe/file.rs",
    "func": "<pe::ImageNtHeaders64 as read::pe::file::ImageNtHeaders>::file_header"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/pe/file.rs",
    "func": "<pe::ImageNtHeaders64 as read::pe::file::ImageNtHeaders>::is_type_64"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/pe/file.rs",
    "func": "<pe::ImageNtHeaders64 as read::pe::file::ImageNtHeaders>::is_valid_optional_magic"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/pe/file.rs",
    "func": "<pe::ImageNtHeaders64 as read::pe::file::ImageNtHeaders>::optional_header"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/pe/file.rs",
    "func": "<pe::ImageNtHeaders64 as read::pe::file::ImageNtHeaders>::signature"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/pe/file.rs",
    "func": "<pe::ImageOptionalHeader32 as read::pe::file::ImageOptionalHeader>::address_of_entry_point"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/pe/file.rs",
    "func": "<pe::ImageOptionalHeader32 as read::pe::file::ImageOptionalHeader>::base_of_code"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/pe/file.rs",
    "func": "<pe::ImageOptionalHeader32 as read::pe::file::ImageOptionalHeader>::base_of_data"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/pe/file.rs",
    "func": "<pe::ImageOptionalHeader32 as read::pe::file::ImageOptionalHeader>::check_sum"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/pe/file.rs",
    "func": "<pe::ImageOptionalHeader32 as read::pe::file::ImageOptionalHeader>::dll_characteristics"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/pe/file.rs",
    "func": "<pe::ImageOptionalHeader32 as read::pe::file::ImageOptionalHeader>::file_alignment"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/pe/file.rs",
    "func": "<pe::ImageOptionalHeader32 as read::pe::file::ImageOptionalHeader>::image_base"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/pe/file.rs",
    "func": "<pe::ImageOptionalHeader32 as read::pe::file::ImageOptionalHeader>::loader_flags"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/pe/file.rs",
    "func": "<pe::ImageOptionalHeader32 as read::pe::file::ImageOptionalHeader>::magic"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/pe/file.rs",
    "func": "<pe::ImageOptionalHeader32 as read::pe::file::ImageOptionalHeader>::major_image_version"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/pe/file.rs",
    "func": "<pe::ImageOptionalHeader32 as read::pe::file::ImageOptionalHeader>::major_linker_version"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/pe/file.rs",
    "func": "<pe::ImageOptionalHeader32 as read::pe::file::ImageOptionalHeader>::major_operating_system_version"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/pe/file.rs",
    "func": "<pe::ImageOptionalHeader32 as read::pe::file::ImageOptionalHeader>::major_subsystem_version"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/pe/file.rs",
    "func": "<pe::ImageOptionalHeader32 as read::pe::file::ImageOptionalHeader>::minor_image_version"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/pe/file.rs",
    "func": "<pe::ImageOptionalHeader32 as read::pe::file::ImageOptionalHeader>::minor_linker_version"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/pe/file.rs",
    "func": "<pe::ImageOptionalHeader32 as read::pe::file::ImageOptionalHeader>::minor_operating_system_version"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/pe/file.rs",
    "func": "<pe::ImageOptionalHeader32 as read::pe::file::ImageOptionalHeader>::minor_subsystem_version"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/pe/file.rs",
    "func": "<pe::ImageOptionalHeader32 as read::pe::file::ImageOptionalHeader>::number_of_rva_and_sizes"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/pe/file.rs",
    "func": "<pe::ImageOptionalHeader32 as read::pe::file::ImageOptionalHeader>::section_alignment"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/pe/file.rs",
    "func": "<pe::ImageOptionalHeader32 as read::pe::file::ImageOptionalHeader>::size_of_code"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/pe/file.rs",
    "func": "<pe::ImageOptionalHeader32 as read::pe::file::ImageOptionalHeader>::size_of_headers"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/pe/file.rs",
    "func": "<pe::ImageOptionalHeader32 as read::pe::file::ImageOptionalHeader>::size_of_heap_commit"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/pe/file.rs",
    "func": "<pe::ImageOptionalHeader32 as read::pe::file::ImageOptionalHeader>::size_of_heap_reserve"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/pe/file.rs",
    "func": "<pe::ImageOptionalHeader32 as read::pe::file::ImageOptionalHeader>::size_of_image"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/pe/file.rs",
    "func": "<pe::ImageOptionalHeader32 as read::pe::file::ImageOptionalHeader>::size_of_initialized_data"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/pe/file.rs",
    "func": "<pe::ImageOptionalHeader32 as read::pe::file::ImageOptionalHeader>::size_of_stack_commit"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/pe/file.rs",
    "func": "<pe::ImageOptionalHeader32 as read::pe::file::ImageOptionalHeader>::size_of_stack_reserve"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/pe/file.rs",
    "func": "<pe::ImageOptionalHeader32 as read::pe::file::ImageOptionalHeader>::size_of_uninitialized_data"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/pe/file.rs",
    "func": "<pe::ImageOptionalHeader32 as read::pe::file::ImageOptionalHeader>::subsystem"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/pe/file.rs",
    "func": "<pe::ImageOptionalHeader32 as read::pe::file::ImageOptionalHeader>::win32_version_value"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/pe/file.rs",
    "func": "<pe::ImageOptionalHeader64 as read::pe::file::ImageOptionalHeader>::address_of_entry_point"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/pe/file.rs",
    "func": "<pe::ImageOptionalHeader64 as read::pe::file::ImageOptionalHeader>::base_of_code"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/pe/file.rs",
    "func": "<pe::ImageOptionalHeader64 as read::pe::file::ImageOptionalHeader>::base_of_data"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/pe/file.rs",
    "func": "<pe::ImageOptionalHeader64 as read::pe::file::ImageOptionalHeader>::check_sum"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/pe/file.rs",
    "func": "<pe::ImageOptionalHeader64 as read::pe::file::ImageOptionalHeader>::dll_characteristics"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/pe/file.rs",
    "func": "<pe::ImageOptionalHeader64 as read::pe::file::ImageOptionalHeader>::file_alignment"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/pe/file.rs",
    "func": "<pe::ImageOptionalHeader64 as read::pe::file::ImageOptionalHeader>::image_base"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/pe/file.rs",
    "func": "<pe::ImageOptionalHeader64 as read::pe::file::ImageOptionalHeader>::loader_flags"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/pe/file.rs",
    "func": "<pe::ImageOptionalHeader64 as read::pe::file::ImageOptionalHeader>::magic"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/pe/file.rs",
    "func": "<pe::ImageOptionalHeader64 as read::pe::file::ImageOptionalHeader>::major_image_version"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/pe/file.rs",
    "func": "<pe::ImageOptionalHeader64 as read::pe::file::ImageOptionalHeader>::major_linker_version"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/pe/file.rs",
    "func": "<pe::ImageOptionalHeader64 as read::pe::file::ImageOptionalHeader>::major_operating_system_version"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/pe/file.rs",
    "func": "<pe::ImageOptionalHeader64 as read::pe::file::ImageOptionalHeader>::major_subsystem_version"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/pe/file.rs",
    "func": "<pe::ImageOptionalHeader64 as read::pe::file::ImageOptionalHeader>::minor_image_version"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/pe/file.rs",
    "func": "<pe::ImageOptionalHeader64 as read::pe::file::ImageOptionalHeader>::minor_linker_version"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/pe/file.rs",
    "func": "<pe::ImageOptionalHeader64 as read::pe::file::ImageOptionalHeader>::minor_operating_system_version"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/pe/file.rs",
    "func": "<pe::ImageOptionalHeader64 as read::pe::file::ImageOptionalHeader>::minor_subsystem_version"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/pe/file.rs",
    "func": "<pe::ImageOptionalHeader64 as read::pe::file::ImageOptionalHeader>::number_of_rva_and_sizes"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/pe/file.rs",
    "func": "<pe::ImageOptionalHeader64 as read::pe::file::ImageOptionalHeader>::section_alignment"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/pe/file.rs",
    "func": "<pe::ImageOptionalHeader64 as read::pe::file::ImageOptionalHeader>::size_of_code"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/pe/file.rs",
    "func": "<pe::ImageOptionalHeader64 as read::pe::file::ImageOptionalHeader>::size_of_headers"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/pe/file.rs",
    "func": "<pe::ImageOptionalHeader64 as read::pe::file::ImageOptionalHeader>::size_of_heap_commit"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/pe/file.rs",
    "func": "<pe::ImageOptionalHeader64 as read::pe::file::ImageOptionalHeader>::size_of_heap_reserve"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/pe/file.rs",
    "func": "<pe::ImageOptionalHeader64 as read::pe::file::ImageOptionalHeader>::size_of_image"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/pe/file.rs",
    "func": "<pe::ImageOptionalHeader64 as read::pe::file::ImageOptionalHeader>::size_of_initialized_data"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/pe/file.rs",
    "func": "<pe::ImageOptionalHeader64 as read::pe::file::ImageOptionalHeader>::size_of_stack_commit"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/pe/file.rs",
    "func": "<pe::ImageOptionalHeader64 as read::pe::file::ImageOptionalHeader>::size_of_stack_reserve"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/pe/file.rs",
    "func": "<pe::ImageOptionalHeader64 as read::pe::file::ImageOptionalHeader>::size_of_uninitialized_data"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/pe/file.rs",
    "func": "<pe::ImageOptionalHeader64 as read::pe::file::ImageOptionalHeader>::subsystem"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/pe/file.rs",
    "func": "<pe::ImageOptionalHeader64 as read::pe::file::ImageOptionalHeader>::win32_version_value"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/pe/import.rs",
    "func": "<pe::ImageThunkData32 as read::pe::import::ImageThunkData>::address"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/pe/import.rs",
    "func": "<pe::ImageThunkData32 as read::pe::import::ImageThunkData>::is_ordinal"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/pe/import.rs",
    "func": "<pe::ImageThunkData32 as read::pe::import::ImageThunkData>::ordinal"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/pe/import.rs",
    "func": "<pe::ImageThunkData32 as read::pe::import::ImageThunkData>::raw"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/pe/import.rs",
    "func": "<pe::ImageThunkData64 as read::pe::import::ImageThunkData>::address"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/pe/import.rs",
    "func": "<pe::ImageThunkData64 as read::pe::import::ImageThunkData>::is_ordinal"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/pe/import.rs",
    "func": "<pe::ImageThunkData64 as read::pe::import::ImageThunkData>::ordinal"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/pe/import.rs",
    "func": "<pe::ImageThunkData64 as read::pe::import::ImageThunkData>::raw"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/pe/relocation.rs",
    "func": "<read::pe::relocation::Relocation as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/pe/relocation.rs",
    "func": "<read::pe::relocation::Relocation as rustc_std_workspace_core::default::Default>::default"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/pe/relocation.rs",
    "func": "<read::pe::relocation::RelocationBlockIterator<'_> as rustc_std_workspace_core::default::Default>::default"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/pe/resource.rs",
    "func": "<read::pe::resource::ResourceName as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/pe/resource.rs",
    "func": "read::pe::resource::<impl pe::ImageResourceDirectoryEntry>::data_offset"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/pe/resource.rs",
    "func": "read::pe::resource::<impl pe::ImageResourceDirectoryEntry>::has_name"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/pe/resource.rs",
    "func": "read::pe::resource::<impl pe::ImageResourceDirectoryEntry>::id"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/pe/resource.rs",
    "func": "read::pe::resource::<impl pe::ImageResourceDirectoryEntry>::is_table"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/pe/resource.rs",
    "func": "read::pe::resource::<impl pe::ImageResourceDirectoryEntry>::name"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/pe/resource.rs",
    "func": "read::pe::resource::<impl pe::ImageResourceDirectoryEntry>::name_or_id"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/pe/resource.rs",
    "func": "read::pe::resource::ResourceNameOrId::id"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/pe/resource.rs",
    "func": "read::pe::resource::ResourceNameOrId::name"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/pe/rich.rs",
    "func": "<read::pe::rich::RichHeaderEntry as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/pe/section.rs",
    "func": "read::pe::section::<impl pe::ImageSectionHeader>::contains_rva"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/pe/section.rs",
    "func": "read::pe::section::<impl pe::ImageSectionHeader>::pe_address_range"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/pe/section.rs",
    "func": "read::pe::section::<impl pe::ImageSectionHeader>::pe_file_range"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/pe/section.rs",
    "func": "read::pe::section::<impl pe::ImageSectionHeader>::pe_file_range_at"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/traits.rs",
    "func": "<read::traits::NoDynamicRelocationIterator as rustc_std_workspace_core::iter::Iterator>::next"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/util.rs",
    "func": "<read::util::ByteString<'_> as rustc_std_workspace_core::default::Default>::default"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/util.rs",
    "func": "<read::util::Bytes<'_> as rustc_std_workspace_core::default::Default>::default"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/util.rs",
    "func": "read::util::align"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/xcoff/file.rs",
    "func": "<xcoff::AuxHeader32 as read::xcoff::file::AuxHeader>::o_algndata"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/xcoff/file.rs",
    "func": "<xcoff::AuxHeader32 as read::xcoff::file::AuxHeader>::o_algntext"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/xcoff/file.rs",
    "func": "<xcoff::AuxHeader32 as read::xcoff::file::AuxHeader>::o_bsize"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/xcoff/file.rs",
    "func": "<xcoff::AuxHeader32 as read::xcoff::file::AuxHeader>::o_cpuflag"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/xcoff/file.rs",
    "func": "<xcoff::AuxHeader32 as read::xcoff::file::AuxHeader>::o_cputype"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/xcoff/file.rs",
    "func": "<xcoff::AuxHeader32 as read::xcoff::file::AuxHeader>::o_data_start"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/xcoff/file.rs",
    "func": "<xcoff::AuxHeader32 as read::xcoff::file::AuxHeader>::o_datapsize"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/xcoff/file.rs",
    "func": "<xcoff::AuxHeader32 as read::xcoff::file::AuxHeader>::o_debugger"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/xcoff/file.rs",
    "func": "<xcoff::AuxHeader32 as read::xcoff::file::AuxHeader>::o_dsize"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/xcoff/file.rs",
    "func": "<xcoff::AuxHeader32 as read::xcoff::file::AuxHeader>::o_entry"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/xcoff/file.rs",
    "func": "<xcoff::AuxHeader32 as read::xcoff::file::AuxHeader>::o_flags"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/xcoff/file.rs",
    "func": "<xcoff::AuxHeader32 as read::xcoff::file::AuxHeader>::o_maxdata"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/xcoff/file.rs",
    "func": "<xcoff::AuxHeader32 as read::xcoff::file::AuxHeader>::o_maxstack"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/xcoff/file.rs",
    "func": "<xcoff::AuxHeader32 as read::xcoff::file::AuxHeader>::o_mflag"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/xcoff/file.rs",
    "func": "<xcoff::AuxHeader32 as read::xcoff::file::AuxHeader>::o_modtype"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/xcoff/file.rs",
    "func": "<xcoff::AuxHeader32 as read::xcoff::file::AuxHeader>::o_snbss"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/xcoff/file.rs",
    "func": "<xcoff::AuxHeader32 as read::xcoff::file::AuxHeader>::o_sndata"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/xcoff/file.rs",
    "func": "<xcoff::AuxHeader32 as read::xcoff::file::AuxHeader>::o_snentry"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/xcoff/file.rs",
    "func": "<xcoff::AuxHeader32 as read::xcoff::file::AuxHeader>::o_snloader"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/xcoff/file.rs",
    "func": "<xcoff::AuxHeader32 as read::xcoff::file::AuxHeader>::o_sntbss"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/xcoff/file.rs",
    "func": "<xcoff::AuxHeader32 as read::xcoff::file::AuxHeader>::o_sntdata"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/xcoff/file.rs",
    "func": "<xcoff::AuxHeader32 as read::xcoff::file::AuxHeader>::o_sntext"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/xcoff/file.rs",
    "func": "<xcoff::AuxHeader32 as read::xcoff::file::AuxHeader>::o_sntoc"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/xcoff/file.rs",
    "func": "<xcoff::AuxHeader32 as read::xcoff::file::AuxHeader>::o_stackpsize"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/xcoff/file.rs",
    "func": "<xcoff::AuxHeader32 as read::xcoff::file::AuxHeader>::o_text_start"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/xcoff/file.rs",
    "func": "<xcoff::AuxHeader32 as read::xcoff::file::AuxHeader>::o_textpsize"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/xcoff/file.rs",
    "func": "<xcoff::AuxHeader32 as read::xcoff::file::AuxHeader>::o_toc"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/xcoff/file.rs",
    "func": "<xcoff::AuxHeader32 as read::xcoff::file::AuxHeader>::o_tsize"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/xcoff/file.rs",
    "func": "<xcoff::AuxHeader32 as read::xcoff::file::AuxHeader>::o_vstamp"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/xcoff/file.rs",
    "func": "<xcoff::AuxHeader32 as read::xcoff::file::AuxHeader>::o_x64flags"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/xcoff/file.rs",
    "func": "<xcoff::FileHeader32 as read::xcoff::file::FileHeader>::f_flags"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/xcoff/file.rs",
    "func": "<xcoff::FileHeader32 as read::xcoff::file::FileHeader>::f_magic"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/xcoff/file.rs",
    "func": "<xcoff::FileHeader32 as read::xcoff::file::FileHeader>::f_nscns"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/xcoff/file.rs",
    "func": "<xcoff::FileHeader32 as read::xcoff::file::FileHeader>::f_nsyms"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/xcoff/file.rs",
    "func": "<xcoff::FileHeader32 as read::xcoff::file::FileHeader>::f_opthdr"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/xcoff/file.rs",
    "func": "<xcoff::FileHeader32 as read::xcoff::file::FileHeader>::f_symptr"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/xcoff/file.rs",
    "func": "<xcoff::FileHeader32 as read::xcoff::file::FileHeader>::f_timdat"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/xcoff/file.rs",
    "func": "<xcoff::FileHeader32 as read::xcoff::file::FileHeader>::is_type_64"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/xcoff/file.rs",
    "func": "<xcoff::FileHeader64 as read::xcoff::file::FileHeader>::f_flags"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/xcoff/file.rs",
    "func": "<xcoff::FileHeader64 as read::xcoff::file::FileHeader>::f_magic"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/xcoff/file.rs",
    "func": "<xcoff::FileHeader64 as read::xcoff::file::FileHeader>::f_nscns"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/xcoff/file.rs",
    "func": "<xcoff::FileHeader64 as read::xcoff::file::FileHeader>::f_nsyms"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/xcoff/file.rs",
    "func": "<xcoff::FileHeader64 as read::xcoff::file::FileHeader>::f_opthdr"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/xcoff/file.rs",
    "func": "<xcoff::FileHeader64 as read::xcoff::file::FileHeader>::f_symptr"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/xcoff/file.rs",
    "func": "<xcoff::FileHeader64 as read::xcoff::file::FileHeader>::f_timdat"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/xcoff/file.rs",
    "func": "<xcoff::FileHeader64 as read::xcoff::file::FileHeader>::is_type_64"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/xcoff/relocation.rs",
    "func": "<xcoff::Rel32 as read::xcoff::relocation::Rel>::r_rsize"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/xcoff/relocation.rs",
    "func": "<xcoff::Rel32 as read::xcoff::relocation::Rel>::r_rtype"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/xcoff/relocation.rs",
    "func": "<xcoff::Rel32 as read::xcoff::relocation::Rel>::r_symndx"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/xcoff/relocation.rs",
    "func": "<xcoff::Rel32 as read::xcoff::relocation::Rel>::r_vaddr"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/xcoff/relocation.rs",
    "func": "<xcoff::Rel64 as read::xcoff::relocation::Rel>::r_rsize"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/xcoff/relocation.rs",
    "func": "<xcoff::Rel64 as read::xcoff::relocation::Rel>::r_rtype"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/xcoff/relocation.rs",
    "func": "<xcoff::Rel64 as read::xcoff::relocation::Rel>::r_symndx"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/xcoff/relocation.rs",
    "func": "<xcoff::Rel64 as read::xcoff::relocation::Rel>::r_vaddr"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/xcoff/section.rs",
    "func": "<xcoff::SectionHeader32 as read::xcoff::section::SectionHeader>::s_flags"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/xcoff/section.rs",
    "func": "<xcoff::SectionHeader32 as read::xcoff::section::SectionHeader>::s_lnnoptr"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/xcoff/section.rs",
    "func": "<xcoff::SectionHeader32 as read::xcoff::section::SectionHeader>::s_name"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/xcoff/section.rs",
    "func": "<xcoff::SectionHeader32 as read::xcoff::section::SectionHeader>::s_nlnno"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/xcoff/section.rs",
    "func": "<xcoff::SectionHeader32 as read::xcoff::section::SectionHeader>::s_nreloc"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/xcoff/section.rs",
    "func": "<xcoff::SectionHeader32 as read::xcoff::section::SectionHeader>::s_paddr"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/xcoff/section.rs",
    "func": "<xcoff::SectionHeader32 as read::xcoff::section::SectionHeader>::s_relptr"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/xcoff/section.rs",
    "func": "<xcoff::SectionHeader32 as read::xcoff::section::SectionHeader>::s_scnptr"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/xcoff/section.rs",
    "func": "<xcoff::SectionHeader32 as read::xcoff::section::SectionHeader>::s_size"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/xcoff/section.rs",
    "func": "<xcoff::SectionHeader32 as read::xcoff::section::SectionHeader>::s_vaddr"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/xcoff/section.rs",
    "func": "<xcoff::SectionHeader64 as read::xcoff::section::SectionHeader>::s_flags"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/xcoff/section.rs",
    "func": "<xcoff::SectionHeader64 as read::xcoff::section::SectionHeader>::s_lnnoptr"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/xcoff/section.rs",
    "func": "<xcoff::SectionHeader64 as read::xcoff::section::SectionHeader>::s_name"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/xcoff/section.rs",
    "func": "<xcoff::SectionHeader64 as read::xcoff::section::SectionHeader>::s_nlnno"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/xcoff/section.rs",
    "func": "<xcoff::SectionHeader64 as read::xcoff::section::SectionHeader>::s_nreloc"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/xcoff/section.rs",
    "func": "<xcoff::SectionHeader64 as read::xcoff::section::SectionHeader>::s_paddr"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/xcoff/section.rs",
    "func": "<xcoff::SectionHeader64 as read::xcoff::section::SectionHeader>::s_relptr"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/xcoff/section.rs",
    "func": "<xcoff::SectionHeader64 as read::xcoff::section::SectionHeader>::s_scnptr"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/xcoff/section.rs",
    "func": "<xcoff::SectionHeader64 as read::xcoff::section::SectionHeader>::s_size"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/xcoff/section.rs",
    "func": "<xcoff::SectionHeader64 as read::xcoff::section::SectionHeader>::s_vaddr"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/xcoff/symbol.rs",
    "func": "<xcoff::CsectAux32 as read::xcoff::symbol::CsectAux>::x_auxtype"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/xcoff/symbol.rs",
    "func": "<xcoff::CsectAux32 as read::xcoff::symbol::CsectAux>::x_parmhash"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/xcoff/symbol.rs",
    "func": "<xcoff::CsectAux32 as read::xcoff::symbol::CsectAux>::x_scnlen"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/xcoff/symbol.rs",
    "func": "<xcoff::CsectAux32 as read::xcoff::symbol::CsectAux>::x_smclas"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/xcoff/symbol.rs",
    "func": "<xcoff::CsectAux32 as read::xcoff::symbol::CsectAux>::x_smtyp"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/xcoff/symbol.rs",
    "func": "<xcoff::CsectAux32 as read::xcoff::symbol::CsectAux>::x_snhash"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/xcoff/symbol.rs",
    "func": "<xcoff::CsectAux32 as read::xcoff::symbol::CsectAux>::x_snstab"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/xcoff/symbol.rs",
    "func": "<xcoff::CsectAux32 as read::xcoff::symbol::CsectAux>::x_stab"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/xcoff/symbol.rs",
    "func": "<xcoff::CsectAux64 as read::xcoff::symbol::CsectAux>::x_auxtype"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/xcoff/symbol.rs",
    "func": "<xcoff::CsectAux64 as read::xcoff::symbol::CsectAux>::x_parmhash"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/xcoff/symbol.rs",
    "func": "<xcoff::CsectAux64 as read::xcoff::symbol::CsectAux>::x_scnlen"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/xcoff/symbol.rs",
    "func": "<xcoff::CsectAux64 as read::xcoff::symbol::CsectAux>::x_smclas"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/xcoff/symbol.rs",
    "func": "<xcoff::CsectAux64 as read::xcoff::symbol::CsectAux>::x_smtyp"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/xcoff/symbol.rs",
    "func": "<xcoff::CsectAux64 as read::xcoff::symbol::CsectAux>::x_snhash"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/xcoff/symbol.rs",
    "func": "<xcoff::CsectAux64 as read::xcoff::symbol::CsectAux>::x_snstab"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/xcoff/symbol.rs",
    "func": "<xcoff::CsectAux64 as read::xcoff::symbol::CsectAux>::x_stab"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/xcoff/symbol.rs",
    "func": "<xcoff::FileAux32 as read::xcoff::symbol::FileAux>::x_auxtype"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/xcoff/symbol.rs",
    "func": "<xcoff::FileAux32 as read::xcoff::symbol::FileAux>::x_fname"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/xcoff/symbol.rs",
    "func": "<xcoff::FileAux32 as read::xcoff::symbol::FileAux>::x_ftype"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/xcoff/symbol.rs",
    "func": "<xcoff::FileAux64 as read::xcoff::symbol::FileAux>::x_auxtype"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/xcoff/symbol.rs",
    "func": "<xcoff::FileAux64 as read::xcoff::symbol::FileAux>::x_fname"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/xcoff/symbol.rs",
    "func": "<xcoff::FileAux64 as read::xcoff::symbol::FileAux>::x_ftype"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/xcoff/symbol.rs",
    "func": "<xcoff::Symbol32 as read::xcoff::symbol::Symbol>::n_numaux"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/xcoff/symbol.rs",
    "func": "<xcoff::Symbol32 as read::xcoff::symbol::Symbol>::n_sclass"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/xcoff/symbol.rs",
    "func": "<xcoff::Symbol32 as read::xcoff::symbol::Symbol>::n_scnum"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/xcoff/symbol.rs",
    "func": "<xcoff::Symbol32 as read::xcoff::symbol::Symbol>::n_type"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/xcoff/symbol.rs",
    "func": "<xcoff::Symbol32 as read::xcoff::symbol::Symbol>::n_value"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/xcoff/symbol.rs",
    "func": "<xcoff::Symbol32 as read::xcoff::symbol::Symbol>::name_offset"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/xcoff/symbol.rs",
    "func": "<xcoff::Symbol64 as read::xcoff::symbol::Symbol>::n_numaux"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/xcoff/symbol.rs",
    "func": "<xcoff::Symbol64 as read::xcoff::symbol::Symbol>::n_sclass"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/xcoff/symbol.rs",
    "func": "<xcoff::Symbol64 as read::xcoff::symbol::Symbol>::n_scnum"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/xcoff/symbol.rs",
    "func": "<xcoff::Symbol64 as read::xcoff::symbol::Symbol>::n_type"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/xcoff/symbol.rs",
    "func": "<xcoff::Symbol64 as read::xcoff::symbol::Symbol>::n_value"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/xcoff/symbol.rs",
    "func": "<xcoff::Symbol64 as read::xcoff::symbol::Symbol>::name_offset"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/xcoff.rs",
    "func": "<xcoff::AuxHeader32 as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/xcoff.rs",
    "func": "<xcoff::BlockAux32 as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/xcoff.rs",
    "func": "<xcoff::BlockAux64 as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/xcoff.rs",
    "func": "<xcoff::CsectAux32 as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/xcoff.rs",
    "func": "<xcoff::CsectAux64 as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/xcoff.rs",
    "func": "<xcoff::DwarfAux32 as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/xcoff.rs",
    "func": "<xcoff::DwarfAux64 as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/xcoff.rs",
    "func": "<xcoff::ExpAux as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/xcoff.rs",
    "func": "<xcoff::FileAux32 as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/xcoff.rs",
    "func": "<xcoff::FileAux64 as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/xcoff.rs",
    "func": "<xcoff::FileHeader32 as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/xcoff.rs",
    "func": "<xcoff::FileHeader64 as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/xcoff.rs",
    "func": "<xcoff::FunAux32 as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/xcoff.rs",
    "func": "<xcoff::FunAux64 as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/xcoff.rs",
    "func": "<xcoff::Rel32 as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/xcoff.rs",
    "func": "<xcoff::Rel64 as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/xcoff.rs",
    "func": "<xcoff::SectionHeader32 as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/xcoff.rs",
    "func": "<xcoff::SectionHeader64 as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/xcoff.rs",
    "func": "<xcoff::StatAux as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/xcoff.rs",
    "func": "<xcoff::Symbol32 as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/xcoff.rs",
    "func": "<xcoff::Symbol64 as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/xcoff.rs",
    "func": "<xcoff::SymbolBytes as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rustc-demangle-0.1.26/src/lib.rs",
    "func": "<SizeLimitExhausted as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rustc-demangle-0.1.26/src/lib.rs",
    "func": "<TryDemangleError as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rustc-demangle-0.1.26/src/lib.rs",
    "func": "is_ascii_alphanumeric"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rustc-demangle-0.1.26/src/lib.rs",
    "func": "is_ascii_punctuation"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rustc-demangle-0.1.26/src/v0.rs",
    "func": "<v0::ParseError as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rustc-demangle-0.1.26/src/v0.rs",
    "func": "<v0::ParseError as rustc_std_workspace_core::cmp::PartialEq>::eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rustc-demangle-0.1.26/src/v0.rs",
    "func": "v0::HexNibbles::<'s>::try_parse_str_chars::{closure#2}::{closure#0}::utf8_len_from_first_byte"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rustc-demangle-0.1.26/src/v0.rs",
    "func": "v0::ParseError::message"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rustc-demangle-0.1.26/src/v0.rs",
    "func": "v0::basic_type"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rustc-literal-escaper-0.0.5/src/lib.rs",
    "func": "<EscapeError as rustc_std_workspace_std::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rustc-literal-escaper-0.0.5/src/lib.rs",
    "func": "<EscapeError as rustc_std_workspace_std::cmp::PartialEq>::eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rustc-literal-escaper-0.0.5/src/lib.rs",
    "func": "<MixedUnit as rustc_std_workspace_std::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rustc-literal-escaper-0.0.5/src/lib.rs",
    "func": "<MixedUnit as rustc_std_workspace_std::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rustc-literal-escaper-0.0.5/src/lib.rs",
    "func": "<MixedUnit as rustc_std_workspace_std::cmp::PartialEq>::eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rustc-literal-escaper-0.0.5/src/lib.rs",
    "func": "<MixedUnit as rustc_std_workspace_std::convert::From<rustc_std_workspace_std::num::NonZero<char>>>::from"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rustc-literal-escaper-0.0.5/src/lib.rs",
    "func": "<MixedUnit as rustc_std_workspace_std::convert::From<rustc_std_workspace_std::num::NonZero<u8>>>::from"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rustc-literal-escaper-0.0.5/src/lib.rs",
    "func": "<MixedUnit as rustc_std_workspace_std::convert::TryFrom<char>>::try_from"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rustc-literal-escaper-0.0.5/src/lib.rs",
    "func": "<MixedUnit as rustc_std_workspace_std::convert::TryFrom<u8>>::try_from"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rustc-literal-escaper-0.0.5/src/lib.rs",
    "func": "<Mode as rustc_std_workspace_std::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rustc-literal-escaper-0.0.5/src/lib.rs",
    "func": "<Mode as rustc_std_workspace_std::cmp::PartialEq>::eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rustc-literal-escaper-0.0.5/src/lib.rs",
    "func": "<[u8] as CheckRaw>::char2raw_unit"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rustc-literal-escaper-0.0.5/src/lib.rs",
    "func": "<[u8] as Unescape>::char2unit"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rustc-literal-escaper-0.0.5/src/lib.rs",
    "func": "<[u8] as Unescape>::hex2unit"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rustc-literal-escaper-0.0.5/src/lib.rs",
    "func": "<[u8] as Unescape>::nonzero_byte2unit"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rustc-literal-escaper-0.0.5/src/lib.rs",
    "func": "<[u8] as Unescape>::unicode2unit"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rustc-literal-escaper-0.0.5/src/lib.rs",
    "func": "<rustc_std_workspace_std::ffi::CStr as CheckRaw>::char2raw_unit"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rustc-literal-escaper-0.0.5/src/lib.rs",
    "func": "<rustc_std_workspace_std::ffi::CStr as Unescape>::char2unit"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rustc-literal-escaper-0.0.5/src/lib.rs",
    "func": "<rustc_std_workspace_std::ffi::CStr as Unescape>::hex2unit"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rustc-literal-escaper-0.0.5/src/lib.rs",
    "func": "<rustc_std_workspace_std::ffi::CStr as Unescape>::nonzero_byte2unit"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rustc-literal-escaper-0.0.5/src/lib.rs",
    "func": "<rustc_std_workspace_std::ffi::CStr as Unescape>::unicode2unit"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rustc-literal-escaper-0.0.5/src/lib.rs",
    "func": "<str as CheckRaw>::char2raw_unit"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rustc-literal-escaper-0.0.5/src/lib.rs",
    "func": "<str as Unescape>::char2unit"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rustc-literal-escaper-0.0.5/src/lib.rs",
    "func": "<str as Unescape>::hex2unit"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rustc-literal-escaper-0.0.5/src/lib.rs",
    "func": "<str as Unescape>::nonzero_byte2unit"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rustc-literal-escaper-0.0.5/src/lib.rs",
    "func": "<str as Unescape>::unicode2unit"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rustc-literal-escaper-0.0.5/src/lib.rs",
    "func": "EscapeError::is_fatal"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rustc-literal-escaper-0.0.5/src/lib.rs",
    "func": "Mode::in_double_quotes"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rustc-literal-escaper-0.0.5/src/lib.rs",
    "func": "Mode::prefix_noraw"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rustc-literal-escaper-0.0.5/src/lib.rs",
    "func": "char2byte"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rustc-literal-escaper-0.0.5/src/lib.rs",
    "func": "simple_escape"
  },
  {
    "file": "/home/runner/work/verify-rust-std/verify-rust-std/kani_build/library/kani_core/src/arbitrary/pointer.rs",
    "func": "<kani::arbitrary_ptr::AllocationStatus as clone::Clone>::clone"
  },
  {
    "file": "/home/runner/work/verify-rust-std/verify-rust-std/kani_build/library/kani_core/src/arbitrary/pointer.rs",
    "func": "<kani::arbitrary_ptr::AllocationStatus as cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "/home/runner/work/verify-rust-std/verify-rust-std/kani_build/library/kani_core/src/arbitrary/pointer.rs",
    "func": "<kani::arbitrary_ptr::AllocationStatus as cmp::PartialEq>::eq"
  },
  {
    "file": "/home/runner/work/verify-rust-std/verify-rust-std/kani_build/library/kani_core/src/mem_init.rs",
    "func": "kani::mem_init::MemoryInitializationState::new"
  },
  {
    "file": "/home/runner/work/verify-rust-std/verify-rust-std/kani_build/library/kani_core/src/models.rs",
    "func": "<isize as kani::rustc_intrinsics::ToISize>::to_isize"
  },
  {
    "file": "/home/runner/work/verify-rust-std/verify-rust-std/kani_build/library/kani_core/src/models.rs",
    "func": "<usize as kani::rustc_intrinsics::ToISize>::to_isize"
  },
  {
    "file": "backtrace/src/backtrace/libunwind.rs",
    "func": "<backtrace_rs::backtrace::libunwind::Bomb as core::ops::Drop>::drop"
  },
  {
    "file": "backtrace/src/print.rs",
    "func": "<backtrace_rs::print::PrintFmt as core::clone::Clone>::clone"
  },
  {
    "file": "backtrace/src/print.rs",
    "func": "<backtrace_rs::print::PrintFmt as core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "backtrace/src/print.rs",
    "func": "<backtrace_rs::print::PrintFmt as core::cmp::PartialEq>::eq"
  },
  {
    "file": "backtrace/src/symbolize/gimli.rs",
    "func": "<backtrace_rs::symbolize::gimli::Cache as core::default::Default>::default"
  },
  {
    "file": "backtrace/src/symbolize/gimli.rs",
    "func": "backtrace_rs::symbolize::gimli::Cache::new"
  },
  {
    "file": "backtrace/src/symbolize/gimli.rs",
    "func": "backtrace_rs::symbolize::gimli::clear_symbol_cache"
  },
  {
    "file": "backtrace/src/symbolize/gimli/elf.rs",
    "func": "backtrace_rs::symbolize::gimli::elf::debug_path_exists"
  },
  {
    "file": "backtrace/src/symbolize/gimli/libs_dl_iterate_phdr.rs",
    "func": "backtrace_rs::symbolize::gimli::libs_dl_iterate_phdr::native_libraries"
  },
  {
    "file": "backtrace/src/symbolize/gimli/mmap_unix.rs",
    "func": "backtrace_rs::symbolize::gimli::mmap::Mmap::map"
  },
  {
    "file": "backtrace/src/symbolize/gimli/parse_running_mmaps_unix.rs",
    "func": "backtrace_rs::symbolize::gimli::parse_running_mmaps::parse_maps"
  },
  {
    "file": "backtrace/src/symbolize/gimli/stash.rs",
    "func": "backtrace_rs::symbolize::gimli::stash::Stash::new"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/float/cmp.rs",
    "func": "<float::cmp::Result as core::clone::Clone>::clone"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/float/cmp.rs",
    "func": "float::cmp::Result::to_ge_abi"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/float/cmp.rs",
    "func": "float::cmp::Result::to_le_abi"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/float/conv.rs",
    "func": "float::conv::int_to_float::u128_to_f128_bits"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/float/conv.rs",
    "func": "float::conv::int_to_float::u128_to_f32_bits"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/float/conv.rs",
    "func": "float::conv::int_to_float::u128_to_f64_bits"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/float/conv.rs",
    "func": "float::conv::int_to_float::u32_to_f128_bits"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/float/conv.rs",
    "func": "float::conv::int_to_float::u32_to_f32_bits"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/float/conv.rs",
    "func": "float::conv::int_to_float::u32_to_f64_bits"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/float/conv.rs",
    "func": "float::conv::int_to_float::u64_to_f128_bits"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/float/conv.rs",
    "func": "float::conv::int_to_float::u64_to_f32_bits"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/float/conv.rs",
    "func": "float::conv::int_to_float::u64_to_f64_bits"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/float/traits.rs",
    "func": "<f128 as float::traits::Float>::eq_repr"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/float/traits.rs",
    "func": "<f128 as float::traits::Float>::eq_repr::is_nan"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/float/traits.rs",
    "func": "<f128 as float::traits::Float>::exp"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/float/traits.rs",
    "func": "<f128 as float::traits::Float>::frac"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/float/traits.rs",
    "func": "<f128 as float::traits::Float>::from_bits"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/float/traits.rs",
    "func": "<f128 as float::traits::Float>::from_parts"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/float/traits.rs",
    "func": "<f128 as float::traits::Float>::imp_frac"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/float/traits.rs",
    "func": "<f128 as float::traits::Float>::is_sign_negative"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/float/traits.rs",
    "func": "<f128 as float::traits::Float>::is_subnormal"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/float/traits.rs",
    "func": "<f128 as float::traits::Float>::normalize"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/float/traits.rs",
    "func": "<f128 as float::traits::Float>::to_bits"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/float/traits.rs",
    "func": "<f128 as float::traits::Float>::to_bits_signed"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/float/traits.rs",
    "func": "<f16 as float::traits::Float>::eq_repr"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/float/traits.rs",
    "func": "<f16 as float::traits::Float>::eq_repr::is_nan"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/float/traits.rs",
    "func": "<f16 as float::traits::Float>::exp"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/float/traits.rs",
    "func": "<f16 as float::traits::Float>::frac"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/float/traits.rs",
    "func": "<f16 as float::traits::Float>::from_bits"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/float/traits.rs",
    "func": "<f16 as float::traits::Float>::from_parts"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/float/traits.rs",
    "func": "<f16 as float::traits::Float>::imp_frac"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/float/traits.rs",
    "func": "<f16 as float::traits::Float>::is_sign_negative"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/float/traits.rs",
    "func": "<f16 as float::traits::Float>::is_subnormal"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/float/traits.rs",
    "func": "<f16 as float::traits::Float>::normalize"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/float/traits.rs",
    "func": "<f16 as float::traits::Float>::to_bits"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/float/traits.rs",
    "func": "<f16 as float::traits::Float>::to_bits_signed"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/float/traits.rs",
    "func": "<f32 as float::traits::Float>::eq_repr"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/float/traits.rs",
    "func": "<f32 as float::traits::Float>::eq_repr::is_nan"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/float/traits.rs",
    "func": "<f32 as float::traits::Float>::exp"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/float/traits.rs",
    "func": "<f32 as float::traits::Float>::frac"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/float/traits.rs",
    "func": "<f32 as float::traits::Float>::from_bits"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/float/traits.rs",
    "func": "<f32 as float::traits::Float>::from_parts"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/float/traits.rs",
    "func": "<f32 as float::traits::Float>::imp_frac"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/float/traits.rs",
    "func": "<f32 as float::traits::Float>::is_sign_negative"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/float/traits.rs",
    "func": "<f32 as float::traits::Float>::is_subnormal"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/float/traits.rs",
    "func": "<f32 as float::traits::Float>::normalize"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/float/traits.rs",
    "func": "<f32 as float::traits::Float>::to_bits"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/float/traits.rs",
    "func": "<f32 as float::traits::Float>::to_bits_signed"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/float/traits.rs",
    "func": "<f64 as float::traits::Float>::eq_repr"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/float/traits.rs",
    "func": "<f64 as float::traits::Float>::eq_repr::is_nan"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/float/traits.rs",
    "func": "<f64 as float::traits::Float>::exp"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/float/traits.rs",
    "func": "<f64 as float::traits::Float>::frac"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/float/traits.rs",
    "func": "<f64 as float::traits::Float>::from_bits"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/float/traits.rs",
    "func": "<f64 as float::traits::Float>::from_parts"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/float/traits.rs",
    "func": "<f64 as float::traits::Float>::imp_frac"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/float/traits.rs",
    "func": "<f64 as float::traits::Float>::is_sign_negative"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/float/traits.rs",
    "func": "<f64 as float::traits::Float>::is_subnormal"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/float/traits.rs",
    "func": "<f64 as float::traits::Float>::normalize"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/float/traits.rs",
    "func": "<f64 as float::traits::Float>::to_bits"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/float/traits.rs",
    "func": "<f64 as float::traits::Float>::to_bits_signed"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/big.rs",
    "func": "<int::big::i256 as core::clone::Clone>::clone"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/big.rs",
    "func": "<int::big::i256 as core::cmp::PartialEq>::eq"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/big.rs",
    "func": "<int::big::i256 as core::cmp::PartialOrd>::partial_cmp"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/big.rs",
    "func": "<int::big::i256 as core::ops::BitOr>::bitor"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/big.rs",
    "func": "<int::big::i256 as core::ops::Not>::not"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/big.rs",
    "func": "<int::big::i256 as core::ops::Shl<u32>>::shl"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/big.rs",
    "func": "<int::big::i256 as int::traits::DInt>::hi"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/big.rs",
    "func": "<int::big::i256 as int::traits::DInt>::lo"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/big.rs",
    "func": "<int::big::u256 as core::clone::Clone>::clone"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/big.rs",
    "func": "<int::big::u256 as core::cmp::PartialEq>::eq"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/big.rs",
    "func": "<int::big::u256 as core::cmp::PartialOrd>::partial_cmp"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/big.rs",
    "func": "<int::big::u256 as core::ops::BitOr>::bitor"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/big.rs",
    "func": "<int::big::u256 as core::ops::Not>::not"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/big.rs",
    "func": "<int::big::u256 as core::ops::Shl<u32>>::shl"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/big.rs",
    "func": "<int::big::u256 as core::ops::Shr<u32>>::shr"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/big.rs",
    "func": "<int::big::u256 as int::traits::DInt>::hi"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/big.rs",
    "func": "<int::big::u256 as int::traits::DInt>::lo"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/big.rs",
    "func": "int::big::<impl int::traits::HInt for i128>::widen"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/big.rs",
    "func": "int::big::<impl int::traits::HInt for i128>::widen_hi"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/big.rs",
    "func": "int::big::<impl int::traits::HInt for i128>::widen_mul"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/big.rs",
    "func": "int::big::<impl int::traits::HInt for i128>::zero_widen"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/big.rs",
    "func": "int::big::<impl int::traits::HInt for i128>::zero_widen_mul"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/big.rs",
    "func": "int::big::<impl int::traits::HInt for u128>::widen"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/big.rs",
    "func": "int::big::<impl int::traits::HInt for u128>::widen_hi"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/big.rs",
    "func": "int::big::<impl int::traits::HInt for u128>::widen_mul"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/big.rs",
    "func": "int::big::<impl int::traits::HInt for u128>::zero_widen"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/big.rs",
    "func": "int::big::<impl int::traits::HInt for u128>::zero_widen_mul"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/big.rs",
    "func": "int::big::i256::unsigned"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/big.rs",
    "func": "int::big::u256::signed"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/mul.rs",
    "func": "int::mul::i128_overflowing_mul"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/mul.rs",
    "func": "int::mul::i32_overflowing_mul"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/mul.rs",
    "func": "int::mul::i64_overflowing_mul"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/specialized_div_rem/asymmetric.rs",
    "func": "int::specialized_div_rem::u128_div_rem"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/specialized_div_rem/binary_long.rs",
    "func": "int::specialized_div_rem::u32_div_rem"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/specialized_div_rem/binary_long.rs",
    "func": "int::specialized_div_rem::u64_div_rem"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/specialized_div_rem/delegate.rs",
    "func": "int::specialized_div_rem::delegate::u128_divide_sparc"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/specialized_div_rem/mod.rs",
    "func": "int::specialized_div_rem::u128_by_u64_div_rem"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/specialized_div_rem/mod.rs",
    "func": "int::specialized_div_rem::u32_by_u32_div_rem"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/specialized_div_rem/mod.rs",
    "func": "int::specialized_div_rem::u64_by_u64_div_rem"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/specialized_div_rem/mod.rs",
    "func": "int::specialized_div_rem::zero_div_fn"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/specialized_div_rem/norm_shift.rs",
    "func": "int::specialized_div_rem::u32_normalization_shift"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/specialized_div_rem/norm_shift.rs",
    "func": "int::specialized_div_rem::u64_normalization_shift"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/traits.rs",
    "func": "<i128 as int::traits::DInt>::hi"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/traits.rs",
    "func": "<i128 as int::traits::DInt>::lo"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/traits.rs",
    "func": "<i16 as int::traits::DInt>::hi"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/traits.rs",
    "func": "<i16 as int::traits::DInt>::lo"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/traits.rs",
    "func": "<i16 as int::traits::HInt>::widen"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/traits.rs",
    "func": "<i16 as int::traits::HInt>::widen_hi"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/traits.rs",
    "func": "<i16 as int::traits::HInt>::widen_mul"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/traits.rs",
    "func": "<i16 as int::traits::HInt>::zero_widen"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/traits.rs",
    "func": "<i16 as int::traits::HInt>::zero_widen_mul"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/traits.rs",
    "func": "<i32 as int::traits::DInt>::hi"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/traits.rs",
    "func": "<i32 as int::traits::DInt>::lo"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/traits.rs",
    "func": "<i32 as int::traits::HInt>::widen"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/traits.rs",
    "func": "<i32 as int::traits::HInt>::widen_hi"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/traits.rs",
    "func": "<i32 as int::traits::HInt>::widen_mul"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/traits.rs",
    "func": "<i32 as int::traits::HInt>::zero_widen"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/traits.rs",
    "func": "<i32 as int::traits::HInt>::zero_widen_mul"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/traits.rs",
    "func": "<i64 as int::traits::DInt>::hi"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/traits.rs",
    "func": "<i64 as int::traits::DInt>::lo"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/traits.rs",
    "func": "<i64 as int::traits::HInt>::widen"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/traits.rs",
    "func": "<i64 as int::traits::HInt>::widen_hi"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/traits.rs",
    "func": "<i64 as int::traits::HInt>::widen_mul"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/traits.rs",
    "func": "<i64 as int::traits::HInt>::zero_widen"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/traits.rs",
    "func": "<i64 as int::traits::HInt>::zero_widen_mul"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/traits.rs",
    "func": "<i8 as int::traits::HInt>::widen"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/traits.rs",
    "func": "<i8 as int::traits::HInt>::widen_hi"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/traits.rs",
    "func": "<i8 as int::traits::HInt>::widen_mul"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/traits.rs",
    "func": "<i8 as int::traits::HInt>::zero_widen"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/traits.rs",
    "func": "<i8 as int::traits::HInt>::zero_widen_mul"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/traits.rs",
    "func": "<u128 as int::traits::DInt>::hi"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/traits.rs",
    "func": "<u128 as int::traits::DInt>::lo"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/traits.rs",
    "func": "<u16 as int::traits::DInt>::hi"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/traits.rs",
    "func": "<u16 as int::traits::DInt>::lo"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/traits.rs",
    "func": "<u16 as int::traits::HInt>::widen"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/traits.rs",
    "func": "<u16 as int::traits::HInt>::widen_hi"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/traits.rs",
    "func": "<u16 as int::traits::HInt>::widen_mul"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/traits.rs",
    "func": "<u16 as int::traits::HInt>::zero_widen"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/traits.rs",
    "func": "<u16 as int::traits::HInt>::zero_widen_mul"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/traits.rs",
    "func": "<u32 as int::traits::DInt>::hi"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/traits.rs",
    "func": "<u32 as int::traits::DInt>::lo"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/traits.rs",
    "func": "<u32 as int::traits::HInt>::widen"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/traits.rs",
    "func": "<u32 as int::traits::HInt>::widen_hi"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/traits.rs",
    "func": "<u32 as int::traits::HInt>::widen_mul"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/traits.rs",
    "func": "<u32 as int::traits::HInt>::zero_widen"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/traits.rs",
    "func": "<u32 as int::traits::HInt>::zero_widen_mul"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/traits.rs",
    "func": "<u64 as int::traits::DInt>::hi"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/traits.rs",
    "func": "<u64 as int::traits::DInt>::lo"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/traits.rs",
    "func": "<u64 as int::traits::HInt>::widen"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/traits.rs",
    "func": "<u64 as int::traits::HInt>::widen_hi"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/traits.rs",
    "func": "<u64 as int::traits::HInt>::widen_mul"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/traits.rs",
    "func": "<u64 as int::traits::HInt>::zero_widen"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/traits.rs",
    "func": "<u64 as int::traits::HInt>::zero_widen_mul"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/traits.rs",
    "func": "<u8 as int::traits::HInt>::widen"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/traits.rs",
    "func": "<u8 as int::traits::HInt>::widen_hi"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/traits.rs",
    "func": "<u8 as int::traits::HInt>::widen_mul"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/traits.rs",
    "func": "<u8 as int::traits::HInt>::zero_widen"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/traits.rs",
    "func": "<u8 as int::traits::HInt>::zero_widen_mul"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::add::__adddf3"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::add::__adddf3::__adddf3"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::add::__addsf3"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::add::__addsf3::__addsf3"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::add::__addtf3"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::add::__addtf3::__addtf3"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::cmp::__eqdf2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::cmp::__eqdf2::__eqdf2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::cmp::__eqsf2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::cmp::__eqsf2::__eqsf2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::cmp::__eqtf2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::cmp::__eqtf2::__eqtf2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::cmp::__gedf2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::cmp::__gedf2::__gedf2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::cmp::__gesf2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::cmp::__gesf2::__gesf2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::cmp::__getf2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::cmp::__getf2::__getf2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::cmp::__gtdf2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::cmp::__gtdf2::__gtdf2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::cmp::__gtsf2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::cmp::__gtsf2::__gtsf2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::cmp::__gttf2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::cmp::__gttf2::__gttf2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::cmp::__ledf2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::cmp::__ledf2::__ledf2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::cmp::__lesf2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::cmp::__lesf2::__lesf2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::cmp::__letf2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::cmp::__letf2::__letf2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::cmp::__ltdf2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::cmp::__ltdf2::__ltdf2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::cmp::__ltsf2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::cmp::__ltsf2::__ltsf2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::cmp::__lttf2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::cmp::__lttf2::__lttf2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::cmp::__nedf2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::cmp::__nedf2::__nedf2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::cmp::__nesf2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::cmp::__nesf2::__nesf2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::cmp::__netf2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::cmp::__netf2::__netf2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::cmp::__unorddf2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::cmp::__unorddf2::__unorddf2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::cmp::__unordsf2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::cmp::__unordsf2::__unordsf2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::cmp::__unordtf2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::cmp::__unordtf2::__unordtf2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::conv::__fixdfdi"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::conv::__fixdfdi::__fixdfdi"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::conv::__fixdfsi"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::conv::__fixdfsi::__fixdfsi"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::conv::__fixdfti"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::conv::__fixdfti::__fixdfti"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::conv::__fixsfdi"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::conv::__fixsfdi::__fixsfdi"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::conv::__fixsfsi"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::conv::__fixsfsi::__fixsfsi"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::conv::__fixsfti"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::conv::__fixsfti::__fixsfti"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::conv::__fixtfdi"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::conv::__fixtfdi::__fixtfdi"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::conv::__fixtfsi"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::conv::__fixtfsi::__fixtfsi"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::conv::__fixtfti"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::conv::__fixtfti::__fixtfti"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::conv::__fixunsdfdi"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::conv::__fixunsdfdi::__fixunsdfdi"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::conv::__fixunsdfsi"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::conv::__fixunsdfsi::__fixunsdfsi"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::conv::__fixunsdfti"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::conv::__fixunsdfti::__fixunsdfti"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::conv::__fixunssfdi"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::conv::__fixunssfdi::__fixunssfdi"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::conv::__fixunssfsi"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::conv::__fixunssfsi::__fixunssfsi"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::conv::__fixunssfti"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::conv::__fixunssfti::__fixunssfti"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::conv::__fixunstfdi"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::conv::__fixunstfdi::__fixunstfdi"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::conv::__fixunstfsi"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::conv::__fixunstfsi::__fixunstfsi"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::conv::__fixunstfti"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::conv::__fixunstfti::__fixunstfti"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::conv::__floatdidf"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::conv::__floatdidf::__floatdidf"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::conv::__floatdisf"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::conv::__floatdisf::__floatdisf"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::conv::__floatditf"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::conv::__floatditf::__floatditf"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::conv::__floatsidf"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::conv::__floatsidf::__floatsidf"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::conv::__floatsisf"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::conv::__floatsisf::__floatsisf"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::conv::__floatsitf"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::conv::__floatsitf::__floatsitf"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::conv::__floattidf"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::conv::__floattidf::__floattidf"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::conv::__floattisf"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::conv::__floattisf::__floattisf"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::conv::__floattitf"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::conv::__floattitf::__floattitf"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::conv::__floatundidf"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::conv::__floatundidf::__floatundidf"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::conv::__floatundisf"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::conv::__floatundisf::__floatundisf"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::conv::__floatunditf"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::conv::__floatunditf::__floatunditf"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::conv::__floatunsidf"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::conv::__floatunsidf::__floatunsidf"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::conv::__floatunsisf"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::conv::__floatunsisf::__floatunsisf"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::conv::__floatunsitf"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::conv::__floatunsitf::__floatunsitf"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::conv::__floatuntidf"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::conv::__floatuntidf::__floatuntidf"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::conv::__floatuntisf"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::conv::__floatuntisf::__floatuntisf"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::conv::__floatuntitf"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::conv::__floatuntitf::__floatuntitf"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::div::__divdf3"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::div::__divdf3::__divdf3"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::div::__divsf3"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::div::__divsf3::__divsf3"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::div::__divtf3"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::div::__divtf3::__divtf3"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::extend::__extenddftf2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::extend::__extenddftf2::__extenddftf2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::extend::__extendhfdf2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::extend::__extendhfdf2::__extendhfdf2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::extend::__extendhfsf2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::extend::__extendhfsf2::__extendhfsf2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::extend::__extendhftf2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::extend::__extendhftf2::__extendhftf2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::extend::__extendsfdf2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::extend::__extendsfdf2::__extendsfdf2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::extend::__extendsftf2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::extend::__extendsftf2::__extendsftf2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::extend::__gnu_h2f_ieee"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::extend::__gnu_h2f_ieee::__gnu_h2f_ieee"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::mul::__muldf3"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::mul::__muldf3::__muldf3"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::mul::__mulsf3"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::mul::__mulsf3::__mulsf3"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::mul::__multf3"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::mul::__multf3::__multf3"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::pow::__powidf2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::pow::__powidf2::__powidf2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::pow::__powisf2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::pow::__powisf2::__powisf2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::pow::__powitf2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::pow::__powitf2::__powitf2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::sub::__subdf3"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::sub::__subdf3::__subdf3"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::sub::__subsf3"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::sub::__subsf3::__subsf3"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::sub::__subtf3"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::sub::__subtf3::__subtf3"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::trunc::__gnu_f2h_ieee"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::trunc::__gnu_f2h_ieee::__gnu_f2h_ieee"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::trunc::__truncdfhf2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::trunc::__truncdfhf2::__truncdfhf2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::trunc::__truncdfsf2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::trunc::__truncdfsf2::__truncdfsf2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::trunc::__truncsfhf2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::trunc::__truncsfhf2::__truncsfhf2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::trunc::__trunctfdf2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::trunc::__trunctfdf2::__trunctfdf2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::trunc::__trunctfhf2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::trunc::__trunctfhf2::__trunctfhf2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::trunc::__trunctfsf2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::trunc::__trunctfsf2::__trunctfsf2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::addsub::__rust_i128_add"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::addsub::__rust_i128_add::__rust_i128_add"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::addsub::__rust_i128_addo"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::addsub::__rust_i128_addo::__rust_i128_addo"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::addsub::__rust_i128_sub"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::addsub::__rust_i128_sub::__rust_i128_sub"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::addsub::__rust_i128_subo"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::addsub::__rust_i128_subo::__rust_i128_subo"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::addsub::__rust_u128_add"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::addsub::__rust_u128_add::__rust_u128_add"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::addsub::__rust_u128_addo"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::addsub::__rust_u128_addo::__rust_u128_addo"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::addsub::__rust_u128_sub"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::addsub::__rust_u128_sub::__rust_u128_sub"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::addsub::__rust_u128_subo"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::addsub::__rust_u128_subo::__rust_u128_subo"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::bswap::__bswapdi2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::bswap::__bswapdi2::__bswapdi2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::bswap::__bswapsi2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::bswap::__bswapsi2::__bswapsi2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::bswap::__bswapti2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::bswap::__bswapti2::__bswapti2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::leading_zeros::__clzdi2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::leading_zeros::__clzdi2::__clzdi2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::leading_zeros::__clzsi2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::leading_zeros::__clzsi2::__clzsi2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::leading_zeros::__clzti2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::leading_zeros::__clzti2::__clzti2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::mul::__muldi3"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::mul::__muldi3::__muldi3"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::mul::__mulodi4"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::mul::__mulodi4::__mulodi4"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::mul::__mulosi4"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::mul::__mulosi4::__mulosi4"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::mul::__muloti4"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::mul::__muloti4::__muloti4"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::mul::__multi3"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::mul::__multi3::__multi3"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::mul::__rust_i128_mulo"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::mul::__rust_i128_mulo::__rust_i128_mulo"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::mul::__rust_u128_mulo"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::mul::__rust_u128_mulo::__rust_u128_mulo"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::sdiv::__divdi3"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::sdiv::__divdi3::__divdi3"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::sdiv::__divmoddi4"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::sdiv::__divmoddi4::__divmoddi4"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::sdiv::__divmodsi4"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::sdiv::__divmodsi4::__divmodsi4"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::sdiv::__divmodti4"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::sdiv::__divmodti4::__divmodti4"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::sdiv::__divsi3"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::sdiv::__divsi3::__divsi3"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::sdiv::__divti3"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::sdiv::__divti3::__divti3"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::sdiv::__moddi3"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::sdiv::__moddi3::__moddi3"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::sdiv::__modsi3"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::sdiv::__modsi3::__modsi3"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::sdiv::__modti3"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::sdiv::__modti3::__modti3"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::shift::__ashldi3"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::shift::__ashldi3::__ashldi3"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::shift::__ashlsi3"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::shift::__ashlsi3::__ashlsi3"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::shift::__ashlti3"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::shift::__ashlti3::__ashlti3"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::shift::__ashrdi3"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::shift::__ashrdi3::__ashrdi3"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::shift::__ashrsi3"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::shift::__ashrsi3::__ashrsi3"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::shift::__ashrti3"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::shift::__ashrti3::__ashrti3"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::shift::__lshrdi3"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::shift::__lshrdi3::__lshrdi3"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::shift::__lshrsi3"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::shift::__lshrsi3::__lshrsi3"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::shift::__lshrti3"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::shift::__lshrti3::__lshrti3"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::trailing_zeros::__ctzdi2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::trailing_zeros::__ctzdi2::__ctzdi2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::trailing_zeros::__ctzsi2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::trailing_zeros::__ctzsi2::__ctzsi2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::trailing_zeros::__ctzti2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::trailing_zeros::__ctzti2::__ctzti2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::udiv::__udivdi3"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::udiv::__udivdi3::__udivdi3"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::udiv::__udivmoddi4"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::udiv::__udivmoddi4::__udivmoddi4"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::udiv::__udivmodsi4"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::udiv::__udivmodsi4::__udivmodsi4"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::udiv::__udivmodti4"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::udiv::__udivmodti4::__udivmodti4"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::udiv::__udivsi3"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::udiv::__udivsi3::__udivsi3"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::udiv::__udivti3"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::udiv::__udivti3::__udivti3"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::udiv::__umoddi3"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::udiv::__umoddi3::__umoddi3"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::udiv::__umodsi3"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::udiv::__umodsi3::__umodsi3"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::udiv::__umodti3"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::udiv::__umodti3::__umodti3"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::cbrt"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::cbrt::cbrt"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::cbrtf"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::cbrtf::cbrtf"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::ceil"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::ceil::ceil"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::ceilf"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::ceilf128"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::ceilf128::ceilf128"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::ceilf16"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::ceilf16::ceilf16"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::ceilf::ceilf"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::copysign"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::copysign::copysign"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::copysignf"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::copysignf128"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::copysignf128::copysignf128"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::copysignf16"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::copysignf16::copysignf16"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::copysignf::copysignf"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::fabs"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::fabs::fabs"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::fabsf"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::fabsf128"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::fabsf128::fabsf128"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::fabsf16"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::fabsf16::fabsf16"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::fabsf::fabsf"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::fdim"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::fdim::fdim"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::fdimf"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::fdimf128"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::fdimf128::fdimf128"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::fdimf16"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::fdimf16::fdimf16"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::fdimf::fdimf"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::floor"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::floor::floor"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::floorf"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::floorf128"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::floorf128::floorf128"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::floorf16"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::floorf16::floorf16"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::floorf::floorf"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::fma"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::fma::fma"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::fmaf"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::fmaf128"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::fmaf128::fmaf128"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::fmaf::fmaf"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::fmax"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::fmax::fmax"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::fmaxf"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::fmaxf128"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::fmaxf128::fmaxf128"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::fmaxf16"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::fmaxf16::fmaxf16"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::fmaxf::fmaxf"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::fmaximum"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::fmaximum::fmaximum"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::fmaximumf"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::fmaximumf128"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::fmaximumf128::fmaximumf128"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::fmaximumf16"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::fmaximumf16::fmaximumf16"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::fmaximumf::fmaximumf"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::fmin"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::fmin::fmin"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::fminf"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::fminf128"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::fminf128::fminf128"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::fminf16"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::fminf16::fminf16"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::fminf::fminf"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::fminimum"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::fminimum::fminimum"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::fminimumf"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::fminimumf128"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::fminimumf128::fminimumf128"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::fminimumf16"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::fminimumf16::fminimumf16"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::fminimumf::fminimumf"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::fmod"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::fmod::fmod"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::fmodf"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::fmodf128"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::fmodf128::fmodf128"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::fmodf16"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::fmodf16::fmodf16"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::fmodf::fmodf"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::rint"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::rint::rint"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::rintf"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::rintf128"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::rintf128::rintf128"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::rintf16"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::rintf16::rintf16"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::rintf::rintf"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::round"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::round::round"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::roundeven"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::roundeven::roundeven"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::roundevenf"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::roundevenf128"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::roundevenf128::roundevenf128"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::roundevenf16"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::roundevenf16::roundevenf16"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::roundevenf::roundevenf"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::roundf"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::roundf128"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::roundf128::roundf128"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::roundf16"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::roundf16::roundf16"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::roundf::roundf"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::sqrt"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::sqrt::sqrt"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::sqrtf"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::sqrtf128"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::sqrtf128::sqrtf128"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::sqrtf16"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::sqrtf16::sqrtf16"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::sqrtf::sqrtf"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::trunc"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::trunc::trunc"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::truncf"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::truncf128"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::truncf128::truncf128"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::truncf16"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::truncf16::truncf16"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::truncf::truncf"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/probestack.rs",
    "func": "probestack::__rust_probestack"
  },
  {
    "file": "compiler-builtins/libm/src/math/acos.rs",
    "func": "math::libm_math::acos::acos"
  },
  {
    "file": "compiler-builtins/libm/src/math/acos.rs",
    "func": "math::libm_math::acos::r"
  },
  {
    "file": "compiler-builtins/libm/src/math/acosf.rs",
    "func": "math::libm_math::acosf::acosf"
  },
  {
    "file": "compiler-builtins/libm/src/math/acosf.rs",
    "func": "math::libm_math::acosf::r"
  },
  {
    "file": "compiler-builtins/libm/src/math/acosh.rs",
    "func": "math::libm_math::acosh::acosh"
  },
  {
    "file": "compiler-builtins/libm/src/math/acoshf.rs",
    "func": "math::libm_math::acoshf::acoshf"
  },
  {
    "file": "compiler-builtins/libm/src/math/arch/x86.rs",
    "func": "math::libm_math::arch::x86::sqrt"
  },
  {
    "file": "compiler-builtins/libm/src/math/arch/x86.rs",
    "func": "math::libm_math::arch::x86::sqrtf"
  },
  {
    "file": "compiler-builtins/libm/src/math/arch/x86/detect.rs",
    "func": "math::libm_math::arch::x86::detect::get_cpu_features"
  },
  {
    "file": "compiler-builtins/libm/src/math/arch/x86/detect.rs",
    "func": "math::libm_math::arch::x86::detect::load_x86_features"
  },
  {
    "file": "compiler-builtins/libm/src/math/arch/x86/fma.rs",
    "func": "math::libm_math::arch::x86::fma::fma"
  },
  {
    "file": "compiler-builtins/libm/src/math/arch/x86/fma.rs",
    "func": "math::libm_math::arch::x86::fma::fma_fallback"
  },
  {
    "file": "compiler-builtins/libm/src/math/arch/x86/fma.rs",
    "func": "math::libm_math::arch::x86::fma::fma_with_fma"
  },
  {
    "file": "compiler-builtins/libm/src/math/arch/x86/fma.rs",
    "func": "math::libm_math::arch::x86::fma::fma_with_fma4"
  },
  {
    "file": "compiler-builtins/libm/src/math/arch/x86/fma.rs",
    "func": "math::libm_math::arch::x86::fma::fmaf"
  },
  {
    "file": "compiler-builtins/libm/src/math/arch/x86/fma.rs",
    "func": "math::libm_math::arch::x86::fma::fmaf_fallback"
  },
  {
    "file": "compiler-builtins/libm/src/math/arch/x86/fma.rs",
    "func": "math::libm_math::arch::x86::fma::fmaf_with_fma"
  },
  {
    "file": "compiler-builtins/libm/src/math/arch/x86/fma.rs",
    "func": "math::libm_math::arch::x86::fma::fmaf_with_fma4"
  },
  {
    "file": "compiler-builtins/libm/src/math/asin.rs",
    "func": "math::libm_math::asin::asin"
  },
  {
    "file": "compiler-builtins/libm/src/math/asin.rs",
    "func": "math::libm_math::asin::comp_r"
  },
  {
    "file": "compiler-builtins/libm/src/math/asinf.rs",
    "func": "math::libm_math::asinf::asinf"
  },
  {
    "file": "compiler-builtins/libm/src/math/asinf.rs",
    "func": "math::libm_math::asinf::r"
  },
  {
    "file": "compiler-builtins/libm/src/math/asinh.rs",
    "func": "math::libm_math::asinh::asinh"
  },
  {
    "file": "compiler-builtins/libm/src/math/asinhf.rs",
    "func": "math::libm_math::asinhf::asinhf"
  },
  {
    "file": "compiler-builtins/libm/src/math/atan.rs",
    "func": "math::libm_math::atan::atan"
  },
  {
    "file": "compiler-builtins/libm/src/math/atan2.rs",
    "func": "math::libm_math::atan2::atan2"
  },
  {
    "file": "compiler-builtins/libm/src/math/atan2f.rs",
    "func": "math::libm_math::atan2f::atan2f"
  },
  {
    "file": "compiler-builtins/libm/src/math/atanf.rs",
    "func": "math::libm_math::atanf::atanf"
  },
  {
    "file": "compiler-builtins/libm/src/math/atanh.rs",
    "func": "math::libm_math::atanh::atanh"
  },
  {
    "file": "compiler-builtins/libm/src/math/atanhf.rs",
    "func": "math::libm_math::atanhf::atanhf"
  },
  {
    "file": "compiler-builtins/libm/src/math/cbrt.rs",
    "func": "math::libm_math::cbrt::cbrt"
  },
  {
    "file": "compiler-builtins/libm/src/math/cbrt.rs",
    "func": "math::libm_math::cbrt::cbrt_round"
  },
  {
    "file": "compiler-builtins/libm/src/math/cbrtf.rs",
    "func": "math::libm_math::cbrtf::cbrtf"
  },
  {
    "file": "compiler-builtins/libm/src/math/ceil.rs",
    "func": "math::libm_math::ceil::ceil"
  },
  {
    "file": "compiler-builtins/libm/src/math/ceil.rs",
    "func": "math::libm_math::ceil::ceilf"
  },
  {
    "file": "compiler-builtins/libm/src/math/ceil.rs",
    "func": "math::libm_math::ceil::ceilf128"
  },
  {
    "file": "compiler-builtins/libm/src/math/ceil.rs",
    "func": "math::libm_math::ceil::ceilf16"
  },
  {
    "file": "compiler-builtins/libm/src/math/copysign.rs",
    "func": "math::libm_math::copysign::copysign"
  },
  {
    "file": "compiler-builtins/libm/src/math/copysign.rs",
    "func": "math::libm_math::copysign::copysignf"
  },
  {
    "file": "compiler-builtins/libm/src/math/copysign.rs",
    "func": "math::libm_math::copysign::copysignf128"
  },
  {
    "file": "compiler-builtins/libm/src/math/copysign.rs",
    "func": "math::libm_math::copysign::copysignf16"
  },
  {
    "file": "compiler-builtins/libm/src/math/cos.rs",
    "func": "math::libm_math::cos::cos"
  },
  {
    "file": "compiler-builtins/libm/src/math/cosf.rs",
    "func": "math::libm_math::cosf::cosf"
  },
  {
    "file": "compiler-builtins/libm/src/math/cosh.rs",
    "func": "math::libm_math::cosh::cosh"
  },
  {
    "file": "compiler-builtins/libm/src/math/coshf.rs",
    "func": "math::libm_math::coshf::coshf"
  },
  {
    "file": "compiler-builtins/libm/src/math/erf.rs",
    "func": "math::libm_math::erf::erf"
  },
  {
    "file": "compiler-builtins/libm/src/math/erf.rs",
    "func": "math::libm_math::erf::erfc"
  },
  {
    "file": "compiler-builtins/libm/src/math/erf.rs",
    "func": "math::libm_math::erf::erfc1"
  },
  {
    "file": "compiler-builtins/libm/src/math/erf.rs",
    "func": "math::libm_math::erf::erfc2"
  },
  {
    "file": "compiler-builtins/libm/src/math/erff.rs",
    "func": "math::libm_math::erff::erfc1"
  },
  {
    "file": "compiler-builtins/libm/src/math/erff.rs",
    "func": "math::libm_math::erff::erfc2"
  },
  {
    "file": "compiler-builtins/libm/src/math/erff.rs",
    "func": "math::libm_math::erff::erfcf"
  },
  {
    "file": "compiler-builtins/libm/src/math/erff.rs",
    "func": "math::libm_math::erff::erff"
  },
  {
    "file": "compiler-builtins/libm/src/math/exp.rs",
    "func": "math::libm_math::exp::exp"
  },
  {
    "file": "compiler-builtins/libm/src/math/exp10.rs",
    "func": "math::libm_math::exp10::exp10"
  },
  {
    "file": "compiler-builtins/libm/src/math/exp10f.rs",
    "func": "math::libm_math::exp10f::exp10f"
  },
  {
    "file": "compiler-builtins/libm/src/math/exp2.rs",
    "func": "math::libm_math::exp2::exp2"
  },
  {
    "file": "compiler-builtins/libm/src/math/exp2f.rs",
    "func": "math::libm_math::exp2f::exp2f"
  },
  {
    "file": "compiler-builtins/libm/src/math/expf.rs",
    "func": "math::libm_math::expf::expf"
  },
  {
    "file": "compiler-builtins/libm/src/math/expm1.rs",
    "func": "math::libm_math::expm1::expm1"
  },
  {
    "file": "compiler-builtins/libm/src/math/expm1f.rs",
    "func": "math::libm_math::expm1f::expm1f"
  },
  {
    "file": "compiler-builtins/libm/src/math/expo2.rs",
    "func": "math::libm_math::expo2::expo2"
  },
  {
    "file": "compiler-builtins/libm/src/math/fabs.rs",
    "func": "math::libm_math::fabs::fabs"
  },
  {
    "file": "compiler-builtins/libm/src/math/fabs.rs",
    "func": "math::libm_math::fabs::fabsf"
  },
  {
    "file": "compiler-builtins/libm/src/math/fabs.rs",
    "func": "math::libm_math::fabs::fabsf128"
  },
  {
    "file": "compiler-builtins/libm/src/math/fabs.rs",
    "func": "math::libm_math::fabs::fabsf16"
  },
  {
    "file": "compiler-builtins/libm/src/math/fdim.rs",
    "func": "math::libm_math::fdim::fdim"
  },
  {
    "file": "compiler-builtins/libm/src/math/fdim.rs",
    "func": "math::libm_math::fdim::fdimf"
  },
  {
    "file": "compiler-builtins/libm/src/math/fdim.rs",
    "func": "math::libm_math::fdim::fdimf128"
  },
  {
    "file": "compiler-builtins/libm/src/math/fdim.rs",
    "func": "math::libm_math::fdim::fdimf16"
  },
  {
    "file": "compiler-builtins/libm/src/math/floor.rs",
    "func": "math::libm_math::floor::floor"
  },
  {
    "file": "compiler-builtins/libm/src/math/floor.rs",
    "func": "math::libm_math::floor::floorf"
  },
  {
    "file": "compiler-builtins/libm/src/math/floor.rs",
    "func": "math::libm_math::floor::floorf128"
  },
  {
    "file": "compiler-builtins/libm/src/math/floor.rs",
    "func": "math::libm_math::floor::floorf16"
  },
  {
    "file": "compiler-builtins/libm/src/math/fma.rs",
    "func": "math::libm_math::fma::fma"
  },
  {
    "file": "compiler-builtins/libm/src/math/fma.rs",
    "func": "math::libm_math::fma::fmaf"
  },
  {
    "file": "compiler-builtins/libm/src/math/fma.rs",
    "func": "math::libm_math::fma::fmaf128"
  },
  {
    "file": "compiler-builtins/libm/src/math/fma.rs",
    "func": "math::libm_math::fma::fmaf16"
  },
  {
    "file": "compiler-builtins/libm/src/math/fmin_fmax.rs",
    "func": "math::libm_math::fmin_fmax::fmax"
  },
  {
    "file": "compiler-builtins/libm/src/math/fmin_fmax.rs",
    "func": "math::libm_math::fmin_fmax::fmaxf"
  },
  {
    "file": "compiler-builtins/libm/src/math/fmin_fmax.rs",
    "func": "math::libm_math::fmin_fmax::fmaxf128"
  },
  {
    "file": "compiler-builtins/libm/src/math/fmin_fmax.rs",
    "func": "math::libm_math::fmin_fmax::fmaxf16"
  },
  {
    "file": "compiler-builtins/libm/src/math/fmin_fmax.rs",
    "func": "math::libm_math::fmin_fmax::fmin"
  },
  {
    "file": "compiler-builtins/libm/src/math/fmin_fmax.rs",
    "func": "math::libm_math::fmin_fmax::fminf"
  },
  {
    "file": "compiler-builtins/libm/src/math/fmin_fmax.rs",
    "func": "math::libm_math::fmin_fmax::fminf128"
  },
  {
    "file": "compiler-builtins/libm/src/math/fmin_fmax.rs",
    "func": "math::libm_math::fmin_fmax::fminf16"
  },
  {
    "file": "compiler-builtins/libm/src/math/fminimum_fmaximum.rs",
    "func": "math::libm_math::fminimum_fmaximum::fmaximum"
  },
  {
    "file": "compiler-builtins/libm/src/math/fminimum_fmaximum.rs",
    "func": "math::libm_math::fminimum_fmaximum::fmaximumf"
  },
  {
    "file": "compiler-builtins/libm/src/math/fminimum_fmaximum.rs",
    "func": "math::libm_math::fminimum_fmaximum::fmaximumf128"
  },
  {
    "file": "compiler-builtins/libm/src/math/fminimum_fmaximum.rs",
    "func": "math::libm_math::fminimum_fmaximum::fmaximumf16"
  },
  {
    "file": "compiler-builtins/libm/src/math/fminimum_fmaximum.rs",
    "func": "math::libm_math::fminimum_fmaximum::fminimum"
  },
  {
    "file": "compiler-builtins/libm/src/math/fminimum_fmaximum.rs",
    "func": "math::libm_math::fminimum_fmaximum::fminimumf"
  },
  {
    "file": "compiler-builtins/libm/src/math/fminimum_fmaximum.rs",
    "func": "math::libm_math::fminimum_fmaximum::fminimumf128"
  },
  {
    "file": "compiler-builtins/libm/src/math/fminimum_fmaximum.rs",
    "func": "math::libm_math::fminimum_fmaximum::fminimumf16"
  },
  {
    "file": "compiler-builtins/libm/src/math/fminimum_fmaximum_num.rs",
    "func": "math::libm_math::fminimum_fmaximum_num::fmaximum_num"
  },
  {
    "file": "compiler-builtins/libm/src/math/fminimum_fmaximum_num.rs",
    "func": "math::libm_math::fminimum_fmaximum_num::fmaximum_numf"
  },
  {
    "file": "compiler-builtins/libm/src/math/fminimum_fmaximum_num.rs",
    "func": "math::libm_math::fminimum_fmaximum_num::fmaximum_numf128"
  },
  {
    "file": "compiler-builtins/libm/src/math/fminimum_fmaximum_num.rs",
    "func": "math::libm_math::fminimum_fmaximum_num::fmaximum_numf16"
  },
  {
    "file": "compiler-builtins/libm/src/math/fminimum_fmaximum_num.rs",
    "func": "math::libm_math::fminimum_fmaximum_num::fminimum_num"
  },
  {
    "file": "compiler-builtins/libm/src/math/fminimum_fmaximum_num.rs",
    "func": "math::libm_math::fminimum_fmaximum_num::fminimum_numf"
  },
  {
    "file": "compiler-builtins/libm/src/math/fminimum_fmaximum_num.rs",
    "func": "math::libm_math::fminimum_fmaximum_num::fminimum_numf128"
  },
  {
    "file": "compiler-builtins/libm/src/math/fminimum_fmaximum_num.rs",
    "func": "math::libm_math::fminimum_fmaximum_num::fminimum_numf16"
  },
  {
    "file": "compiler-builtins/libm/src/math/fmod.rs",
    "func": "math::libm_math::fmod::fmod"
  },
  {
    "file": "compiler-builtins/libm/src/math/fmod.rs",
    "func": "math::libm_math::fmod::fmodf"
  },
  {
    "file": "compiler-builtins/libm/src/math/fmod.rs",
    "func": "math::libm_math::fmod::fmodf128"
  },
  {
    "file": "compiler-builtins/libm/src/math/fmod.rs",
    "func": "math::libm_math::fmod::fmodf16"
  },
  {
    "file": "compiler-builtins/libm/src/math/frexp.rs",
    "func": "math::libm_math::frexp::frexp"
  },
  {
    "file": "compiler-builtins/libm/src/math/frexpf.rs",
    "func": "math::libm_math::frexpf::frexpf"
  },
  {
    "file": "compiler-builtins/libm/src/math/hypot.rs",
    "func": "math::libm_math::hypot::hypot"
  },
  {
    "file": "compiler-builtins/libm/src/math/hypot.rs",
    "func": "math::libm_math::hypot::sq"
  },
  {
    "file": "compiler-builtins/libm/src/math/hypotf.rs",
    "func": "math::libm_math::hypotf::hypotf"
  },
  {
    "file": "compiler-builtins/libm/src/math/ilogb.rs",
    "func": "math::libm_math::ilogb::ilogb"
  },
  {
    "file": "compiler-builtins/libm/src/math/ilogbf.rs",
    "func": "math::libm_math::ilogbf::ilogbf"
  },
  {
    "file": "compiler-builtins/libm/src/math/j0.rs",
    "func": "math::libm_math::j0::common"
  },
  {
    "file": "compiler-builtins/libm/src/math/j0.rs",
    "func": "math::libm_math::j0::j0"
  },
  {
    "file": "compiler-builtins/libm/src/math/j0.rs",
    "func": "math::libm_math::j0::pzero"
  },
  {
    "file": "compiler-builtins/libm/src/math/j0.rs",
    "func": "math::libm_math::j0::qzero"
  },
  {
    "file": "compiler-builtins/libm/src/math/j0.rs",
    "func": "math::libm_math::j0::y0"
  },
  {
    "file": "compiler-builtins/libm/src/math/j0f.rs",
    "func": "math::libm_math::j0f::common"
  },
  {
    "file": "compiler-builtins/libm/src/math/j0f.rs",
    "func": "math::libm_math::j0f::j0f"
  },
  {
    "file": "compiler-builtins/libm/src/math/j0f.rs",
    "func": "math::libm_math::j0f::pzerof"
  },
  {
    "file": "compiler-builtins/libm/src/math/j0f.rs",
    "func": "math::libm_math::j0f::qzerof"
  },
  {
    "file": "compiler-builtins/libm/src/math/j0f.rs",
    "func": "math::libm_math::j0f::y0f"
  },
  {
    "file": "compiler-builtins/libm/src/math/j1.rs",
    "func": "math::libm_math::j1::common"
  },
  {
    "file": "compiler-builtins/libm/src/math/j1.rs",
    "func": "math::libm_math::j1::j1"
  },
  {
    "file": "compiler-builtins/libm/src/math/j1.rs",
    "func": "math::libm_math::j1::pone"
  },
  {
    "file": "compiler-builtins/libm/src/math/j1.rs",
    "func": "math::libm_math::j1::qone"
  },
  {
    "file": "compiler-builtins/libm/src/math/j1.rs",
    "func": "math::libm_math::j1::y1"
  },
  {
    "file": "compiler-builtins/libm/src/math/j1f.rs",
    "func": "math::libm_math::j1f::common"
  },
  {
    "file": "compiler-builtins/libm/src/math/j1f.rs",
    "func": "math::libm_math::j1f::j1f"
  },
  {
    "file": "compiler-builtins/libm/src/math/j1f.rs",
    "func": "math::libm_math::j1f::ponef"
  },
  {
    "file": "compiler-builtins/libm/src/math/j1f.rs",
    "func": "math::libm_math::j1f::qonef"
  },
  {
    "file": "compiler-builtins/libm/src/math/j1f.rs",
    "func": "math::libm_math::j1f::y1f"
  },
  {
    "file": "compiler-builtins/libm/src/math/jn.rs",
    "func": "math::libm_math::jn::jn"
  },
  {
    "file": "compiler-builtins/libm/src/math/jn.rs",
    "func": "math::libm_math::jn::yn"
  },
  {
    "file": "compiler-builtins/libm/src/math/jnf.rs",
    "func": "math::libm_math::jnf::jnf"
  },
  {
    "file": "compiler-builtins/libm/src/math/jnf.rs",
    "func": "math::libm_math::jnf::ynf"
  },
  {
    "file": "compiler-builtins/libm/src/math/k_cos.rs",
    "func": "math::libm_math::k_cos::k_cos"
  },
  {
    "file": "compiler-builtins/libm/src/math/k_cosf.rs",
    "func": "math::libm_math::k_cosf::k_cosf"
  },
  {
    "file": "compiler-builtins/libm/src/math/k_expo2.rs",
    "func": "math::libm_math::k_expo2::k_expo2"
  },
  {
    "file": "compiler-builtins/libm/src/math/k_expo2f.rs",
    "func": "math::libm_math::k_expo2f::k_expo2f"
  },
  {
    "file": "compiler-builtins/libm/src/math/k_sin.rs",
    "func": "math::libm_math::k_sin::k_sin"
  },
  {
    "file": "compiler-builtins/libm/src/math/k_sinf.rs",
    "func": "math::libm_math::k_sinf::k_sinf"
  },
  {
    "file": "compiler-builtins/libm/src/math/k_tan.rs",
    "func": "math::libm_math::k_tan::k_tan"
  },
  {
    "file": "compiler-builtins/libm/src/math/k_tan.rs",
    "func": "math::libm_math::k_tan::zero_low_word"
  },
  {
    "file": "compiler-builtins/libm/src/math/k_tanf.rs",
    "func": "math::libm_math::k_tanf::k_tanf"
  },
  {
    "file": "compiler-builtins/libm/src/math/ldexp.rs",
    "func": "math::libm_math::ldexp::ldexp"
  },
  {
    "file": "compiler-builtins/libm/src/math/ldexp.rs",
    "func": "math::libm_math::ldexp::ldexpf"
  },
  {
    "file": "compiler-builtins/libm/src/math/ldexp.rs",
    "func": "math::libm_math::ldexp::ldexpf128"
  },
  {
    "file": "compiler-builtins/libm/src/math/ldexp.rs",
    "func": "math::libm_math::ldexp::ldexpf16"
  },
  {
    "file": "compiler-builtins/libm/src/math/lgamma.rs",
    "func": "math::libm_math::lgamma::lgamma"
  },
  {
    "file": "compiler-builtins/libm/src/math/lgamma_r.rs",
    "func": "math::libm_math::lgamma_r::lgamma_r"
  },
  {
    "file": "compiler-builtins/libm/src/math/lgamma_r.rs",
    "func": "math::libm_math::lgamma_r::sin_pi"
  },
  {
    "file": "compiler-builtins/libm/src/math/lgammaf.rs",
    "func": "math::libm_math::lgammaf::lgammaf"
  },
  {
    "file": "compiler-builtins/libm/src/math/lgammaf_r.rs",
    "func": "math::libm_math::lgammaf_r::lgammaf_r"
  },
  {
    "file": "compiler-builtins/libm/src/math/lgammaf_r.rs",
    "func": "math::libm_math::lgammaf_r::sin_pi"
  },
  {
    "file": "compiler-builtins/libm/src/math/log.rs",
    "func": "math::libm_math::log::log"
  },
  {
    "file": "compiler-builtins/libm/src/math/log10.rs",
    "func": "math::libm_math::log10::log10"
  },
  {
    "file": "compiler-builtins/libm/src/math/log10f.rs",
    "func": "math::libm_math::log10f::log10f"
  },
  {
    "file": "compiler-builtins/libm/src/math/log1p.rs",
    "func": "math::libm_math::log1p::log1p"
  },
  {
    "file": "compiler-builtins/libm/src/math/log1pf.rs",
    "func": "math::libm_math::log1pf::log1pf"
  },
  {
    "file": "compiler-builtins/libm/src/math/log2.rs",
    "func": "math::libm_math::log2::log2"
  },
  {
    "file": "compiler-builtins/libm/src/math/log2f.rs",
    "func": "math::libm_math::log2f::log2f"
  },
  {
    "file": "compiler-builtins/libm/src/math/logf.rs",
    "func": "math::libm_math::logf::logf"
  },
  {
    "file": "compiler-builtins/libm/src/math/mod.rs",
    "func": "math::libm_math::combine_words"
  },
  {
    "file": "compiler-builtins/libm/src/math/mod.rs",
    "func": "math::libm_math::get_high_word"
  },
  {
    "file": "compiler-builtins/libm/src/math/mod.rs",
    "func": "math::libm_math::get_low_word"
  },
  {
    "file": "compiler-builtins/libm/src/math/mod.rs",
    "func": "math::libm_math::with_set_high_word"
  },
  {
    "file": "compiler-builtins/libm/src/math/mod.rs",
    "func": "math::libm_math::with_set_low_word"
  },
  {
    "file": "compiler-builtins/libm/src/math/modf.rs",
    "func": "math::libm_math::modf::modf"
  },
  {
    "file": "compiler-builtins/libm/src/math/modff.rs",
    "func": "math::libm_math::modff::modff"
  },
  {
    "file": "compiler-builtins/libm/src/math/nextafter.rs",
    "func": "math::libm_math::nextafter::nextafter"
  },
  {
    "file": "compiler-builtins/libm/src/math/nextafterf.rs",
    "func": "math::libm_math::nextafterf::nextafterf"
  },
  {
    "file": "compiler-builtins/libm/src/math/pow.rs",
    "func": "math::libm_math::pow::pow"
  },
  {
    "file": "compiler-builtins/libm/src/math/powf.rs",
    "func": "math::libm_math::powf::powf"
  },
  {
    "file": "compiler-builtins/libm/src/math/rem_pio2.rs",
    "func": "math::libm_math::rem_pio2::rem_pio2"
  },
  {
    "file": "compiler-builtins/libm/src/math/rem_pio2.rs",
    "func": "math::libm_math::rem_pio2::rem_pio2::medium"
  },
  {
    "file": "compiler-builtins/libm/src/math/rem_pio2_large.rs",
    "func": "math::libm_math::rem_pio2_large::rem_pio2_large::floor"
  },
  {
    "file": "compiler-builtins/libm/src/math/rem_pio2f.rs",
    "func": "math::libm_math::rem_pio2f::rem_pio2f"
  },
  {
    "file": "compiler-builtins/libm/src/math/remainder.rs",
    "func": "math::libm_math::remainder::remainder"
  },
  {
    "file": "compiler-builtins/libm/src/math/remainderf.rs",
    "func": "math::libm_math::remainderf::remainderf"
  },
  {
    "file": "compiler-builtins/libm/src/math/remquo.rs",
    "func": "math::libm_math::remquo::remquo"
  },
  {
    "file": "compiler-builtins/libm/src/math/remquof.rs",
    "func": "math::libm_math::remquof::remquof"
  },
  {
    "file": "compiler-builtins/libm/src/math/rint.rs",
    "func": "math::libm_math::rint::rint"
  },
  {
    "file": "compiler-builtins/libm/src/math/rint.rs",
    "func": "math::libm_math::rint::rintf"
  },
  {
    "file": "compiler-builtins/libm/src/math/rint.rs",
    "func": "math::libm_math::rint::rintf128"
  },
  {
    "file": "compiler-builtins/libm/src/math/rint.rs",
    "func": "math::libm_math::rint::rintf16"
  },
  {
    "file": "compiler-builtins/libm/src/math/round.rs",
    "func": "math::libm_math::round::round"
  },
  {
    "file": "compiler-builtins/libm/src/math/round.rs",
    "func": "math::libm_math::round::roundf"
  },
  {
    "file": "compiler-builtins/libm/src/math/round.rs",
    "func": "math::libm_math::round::roundf128"
  },
  {
    "file": "compiler-builtins/libm/src/math/round.rs",
    "func": "math::libm_math::round::roundf16"
  },
  {
    "file": "compiler-builtins/libm/src/math/roundeven.rs",
    "func": "math::libm_math::roundeven::roundeven"
  },
  {
    "file": "compiler-builtins/libm/src/math/roundeven.rs",
    "func": "math::libm_math::roundeven::roundevenf"
  },
  {
    "file": "compiler-builtins/libm/src/math/roundeven.rs",
    "func": "math::libm_math::roundeven::roundevenf128"
  },
  {
    "file": "compiler-builtins/libm/src/math/roundeven.rs",
    "func": "math::libm_math::roundeven::roundevenf16"
  },
  {
    "file": "compiler-builtins/libm/src/math/scalbn.rs",
    "func": "math::libm_math::scalbn::scalbn"
  },
  {
    "file": "compiler-builtins/libm/src/math/scalbn.rs",
    "func": "math::libm_math::scalbn::scalbnf"
  },
  {
    "file": "compiler-builtins/libm/src/math/scalbn.rs",
    "func": "math::libm_math::scalbn::scalbnf128"
  },
  {
    "file": "compiler-builtins/libm/src/math/scalbn.rs",
    "func": "math::libm_math::scalbn::scalbnf16"
  },
  {
    "file": "compiler-builtins/libm/src/math/sin.rs",
    "func": "math::libm_math::sin::sin"
  },
  {
    "file": "compiler-builtins/libm/src/math/sincos.rs",
    "func": "math::libm_math::sincos::sincos"
  },
  {
    "file": "compiler-builtins/libm/src/math/sincosf.rs",
    "func": "math::libm_math::sincosf::sincosf"
  },
  {
    "file": "compiler-builtins/libm/src/math/sinf.rs",
    "func": "math::libm_math::sinf::sinf"
  },
  {
    "file": "compiler-builtins/libm/src/math/sinh.rs",
    "func": "math::libm_math::sinh::sinh"
  },
  {
    "file": "compiler-builtins/libm/src/math/sinhf.rs",
    "func": "math::libm_math::sinhf::sinhf"
  },
  {
    "file": "compiler-builtins/libm/src/math/sqrt.rs",
    "func": "math::libm_math::sqrt::sqrt"
  },
  {
    "file": "compiler-builtins/libm/src/math/sqrt.rs",
    "func": "math::libm_math::sqrt::sqrtf"
  },
  {
    "file": "compiler-builtins/libm/src/math/sqrt.rs",
    "func": "math::libm_math::sqrt::sqrtf128"
  },
  {
    "file": "compiler-builtins/libm/src/math/sqrt.rs",
    "func": "math::libm_math::sqrt::sqrtf16"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/big.rs",
    "func": "<math::libm_math::support::big::i256 as core::clone::Clone>::clone"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/big.rs",
    "func": "<math::libm_math::support::big::i256 as core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/big.rs",
    "func": "<math::libm_math::support::big::i256 as core::cmp::Ord>::cmp"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/big.rs",
    "func": "<math::libm_math::support::big::i256 as core::cmp::PartialEq>::eq"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/big.rs",
    "func": "<math::libm_math::support::big::i256 as core::cmp::PartialOrd>::partial_cmp"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/big.rs",
    "func": "<math::libm_math::support::big::i256 as core::ops::Add>::add"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/big.rs",
    "func": "<math::libm_math::support::big::i256 as core::ops::BitOr>::bitor"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/big.rs",
    "func": "<math::libm_math::support::big::i256 as core::ops::Not>::not"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/big.rs",
    "func": "<math::libm_math::support::big::i256 as core::ops::Shl<u32>>::shl"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/big.rs",
    "func": "<math::libm_math::support::big::i256 as core::ops::Shr<u32>>::shr"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/big.rs",
    "func": "<math::libm_math::support::big::i256 as core::ops::Sub>::sub"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/big.rs",
    "func": "<math::libm_math::support::big::i256 as math::libm_math::support::int_traits::DInt>::hi"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/big.rs",
    "func": "<math::libm_math::support::big::i256 as math::libm_math::support::int_traits::DInt>::lo"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/big.rs",
    "func": "<math::libm_math::support::big::u256 as core::clone::Clone>::clone"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/big.rs",
    "func": "<math::libm_math::support::big::u256 as core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/big.rs",
    "func": "<math::libm_math::support::big::u256 as core::cmp::Ord>::cmp"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/big.rs",
    "func": "<math::libm_math::support::big::u256 as core::cmp::PartialEq>::eq"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/big.rs",
    "func": "<math::libm_math::support::big::u256 as core::cmp::PartialOrd>::partial_cmp"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/big.rs",
    "func": "<math::libm_math::support::big::u256 as core::ops::Add>::add"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/big.rs",
    "func": "<math::libm_math::support::big::u256 as core::ops::BitOr>::bitor"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/big.rs",
    "func": "<math::libm_math::support::big::u256 as core::ops::Not>::not"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/big.rs",
    "func": "<math::libm_math::support::big::u256 as core::ops::Shl<u32>>::shl"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/big.rs",
    "func": "<math::libm_math::support::big::u256 as core::ops::Shr<u32>>::shr"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/big.rs",
    "func": "<math::libm_math::support::big::u256 as core::ops::Sub>::sub"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/big.rs",
    "func": "<math::libm_math::support::big::u256 as math::libm_math::support::int_traits::DInt>::hi"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/big.rs",
    "func": "<math::libm_math::support::big::u256 as math::libm_math::support::int_traits::DInt>::lo"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/big.rs",
    "func": "math::libm_math::support::big::<impl math::libm_math::support::int_traits::HInt for i128>::widen"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/big.rs",
    "func": "math::libm_math::support::big::<impl math::libm_math::support::int_traits::HInt for i128>::widen_hi"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/big.rs",
    "func": "math::libm_math::support::big::<impl math::libm_math::support::int_traits::HInt for i128>::widen_mul"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/big.rs",
    "func": "math::libm_math::support::big::<impl math::libm_math::support::int_traits::HInt for i128>::zero_widen"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/big.rs",
    "func": "math::libm_math::support::big::<impl math::libm_math::support::int_traits::HInt for i128>::zero_widen_mul"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/big.rs",
    "func": "math::libm_math::support::big::<impl math::libm_math::support::int_traits::HInt for u128>::widen"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/big.rs",
    "func": "math::libm_math::support::big::<impl math::libm_math::support::int_traits::HInt for u128>::widen_hi"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/big.rs",
    "func": "math::libm_math::support::big::<impl math::libm_math::support::int_traits::HInt for u128>::widen_mul"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/big.rs",
    "func": "math::libm_math::support::big::<impl math::libm_math::support::int_traits::HInt for u128>::zero_widen"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/big.rs",
    "func": "math::libm_math::support::big::<impl math::libm_math::support::int_traits::HInt for u128>::zero_widen_mul"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/big.rs",
    "func": "math::libm_math::support::big::u256::signed"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/env.rs",
    "func": "<math::libm_math::support::env::Round as core::clone::Clone>::clone"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/env.rs",
    "func": "<math::libm_math::support::env::Round as core::cmp::PartialEq>::eq"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/env.rs",
    "func": "<math::libm_math::support::env::Status as core::clone::Clone>::clone"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/env.rs",
    "func": "<math::libm_math::support::env::Status as core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/env.rs",
    "func": "<math::libm_math::support::env::Status as core::cmp::PartialEq>::eq"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/env.rs",
    "func": "math::libm_math::support::env::Status::inexact"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/env.rs",
    "func": "math::libm_math::support::env::Status::overflow"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/env.rs",
    "func": "math::libm_math::support::env::Status::set_flag"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/env.rs",
    "func": "math::libm_math::support::env::Status::set_inexact"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/env.rs",
    "func": "math::libm_math::support::env::Status::set_underflow"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/env.rs",
    "func": "math::libm_math::support::env::Status::underflow"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/env.rs",
    "func": "math::libm_math::support::env::Status::with"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/feature_detect.rs",
    "func": "<math::libm_math::support::feature_detect::Flags as core::clone::Clone>::clone"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/feature_detect.rs",
    "func": "<math::libm_math::support::feature_detect::Flags as core::cmp::PartialEq>::eq"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/feature_detect.rs",
    "func": "math::libm_math::arch::x86::fma::fma::initializer"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/feature_detect.rs",
    "func": "math::libm_math::arch::x86::fma::fmaf::initializer"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/feature_detect.rs",
    "func": "math::libm_math::support::feature_detect::Flags::bits"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/feature_detect.rs",
    "func": "math::libm_math::support::feature_detect::Flags::contains"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/feature_detect.rs",
    "func": "math::libm_math::support::feature_detect::Flags::empty"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/feature_detect.rs",
    "func": "math::libm_math::support::feature_detect::Flags::from_bits"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/feature_detect.rs",
    "func": "math::libm_math::support::feature_detect::Flags::insert"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/feature_detect.rs",
    "func": "math::libm_math::support::feature_detect::Flags::test_nth"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/float_traits.rs",
    "func": "<f128 as math::libm_math::support::float_traits::DFloat>::narrow"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/float_traits.rs",
    "func": "<f128 as math::libm_math::support::float_traits::Float>::abs"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/float_traits.rs",
    "func": "<f128 as math::libm_math::support::float_traits::Float>::copysign"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/float_traits.rs",
    "func": "<f128 as math::libm_math::support::float_traits::Float>::fma"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/float_traits.rs",
    "func": "<f128 as math::libm_math::support::float_traits::Float>::from_bits"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/float_traits.rs",
    "func": "<f128 as math::libm_math::support::float_traits::Float>::is_infinite"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/float_traits.rs",
    "func": "<f128 as math::libm_math::support::float_traits::Float>::is_nan"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/float_traits.rs",
    "func": "<f128 as math::libm_math::support::float_traits::Float>::is_sign_negative"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/float_traits.rs",
    "func": "<f128 as math::libm_math::support::float_traits::Float>::normalize"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/float_traits.rs",
    "func": "<f128 as math::libm_math::support::float_traits::Float>::to_bits"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/float_traits.rs",
    "func": "<f16 as math::libm_math::support::float_traits::Float>::abs"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/float_traits.rs",
    "func": "<f16 as math::libm_math::support::float_traits::Float>::copysign"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/float_traits.rs",
    "func": "<f16 as math::libm_math::support::float_traits::Float>::fma"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/float_traits.rs",
    "func": "<f16 as math::libm_math::support::float_traits::Float>::from_bits"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/float_traits.rs",
    "func": "<f16 as math::libm_math::support::float_traits::Float>::is_infinite"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/float_traits.rs",
    "func": "<f16 as math::libm_math::support::float_traits::Float>::is_nan"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/float_traits.rs",
    "func": "<f16 as math::libm_math::support::float_traits::Float>::is_sign_negative"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/float_traits.rs",
    "func": "<f16 as math::libm_math::support::float_traits::Float>::normalize"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/float_traits.rs",
    "func": "<f16 as math::libm_math::support::float_traits::Float>::to_bits"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/float_traits.rs",
    "func": "<f16 as math::libm_math::support::float_traits::HFloat>::widen"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/float_traits.rs",
    "func": "<f32 as math::libm_math::support::float_traits::DFloat>::narrow"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/float_traits.rs",
    "func": "<f32 as math::libm_math::support::float_traits::Float>::abs"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/float_traits.rs",
    "func": "<f32 as math::libm_math::support::float_traits::Float>::copysign"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/float_traits.rs",
    "func": "<f32 as math::libm_math::support::float_traits::Float>::fma"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/float_traits.rs",
    "func": "<f32 as math::libm_math::support::float_traits::Float>::from_bits"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/float_traits.rs",
    "func": "<f32 as math::libm_math::support::float_traits::Float>::is_infinite"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/float_traits.rs",
    "func": "<f32 as math::libm_math::support::float_traits::Float>::is_nan"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/float_traits.rs",
    "func": "<f32 as math::libm_math::support::float_traits::Float>::is_sign_negative"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/float_traits.rs",
    "func": "<f32 as math::libm_math::support::float_traits::Float>::normalize"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/float_traits.rs",
    "func": "<f32 as math::libm_math::support::float_traits::Float>::to_bits"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/float_traits.rs",
    "func": "<f32 as math::libm_math::support::float_traits::HFloat>::widen"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/float_traits.rs",
    "func": "<f64 as math::libm_math::support::float_traits::DFloat>::narrow"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/float_traits.rs",
    "func": "<f64 as math::libm_math::support::float_traits::Float>::abs"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/float_traits.rs",
    "func": "<f64 as math::libm_math::support::float_traits::Float>::copysign"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/float_traits.rs",
    "func": "<f64 as math::libm_math::support::float_traits::Float>::fma"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/float_traits.rs",
    "func": "<f64 as math::libm_math::support::float_traits::Float>::from_bits"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/float_traits.rs",
    "func": "<f64 as math::libm_math::support::float_traits::Float>::is_infinite"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/float_traits.rs",
    "func": "<f64 as math::libm_math::support::float_traits::Float>::is_nan"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/float_traits.rs",
    "func": "<f64 as math::libm_math::support::float_traits::Float>::is_sign_negative"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/float_traits.rs",
    "func": "<f64 as math::libm_math::support::float_traits::Float>::normalize"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/float_traits.rs",
    "func": "<f64 as math::libm_math::support::float_traits::Float>::to_bits"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/float_traits.rs",
    "func": "<f64 as math::libm_math::support::float_traits::HFloat>::widen"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/float_traits.rs",
    "func": "math::libm_math::support::float_traits::f32_from_bits"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/float_traits.rs",
    "func": "math::libm_math::support::float_traits::f32_to_bits"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/float_traits.rs",
    "func": "math::libm_math::support::float_traits::f64_from_bits"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/float_traits.rs",
    "func": "math::libm_math::support::float_traits::f64_to_bits"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/hex_float.rs",
    "func": "math::libm_math::support::hex_float::dec_digit"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/hex_float.rs",
    "func": "math::libm_math::support::hex_float::hex_digit"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/hex_float.rs",
    "func": "math::libm_math::support::hex_float::shr2_round"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/hex_float.rs",
    "func": "math::libm_math::support::hex_float::shr_odd_rounding"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/hex_float.rs",
    "func": "math::libm_math::support::hex_float::u128_ilog2"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i128 as math::libm_math::support::int_traits::CastInto<f128>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i128 as math::libm_math::support::int_traits::CastInto<f128>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i128 as math::libm_math::support::int_traits::CastInto<f16>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i128 as math::libm_math::support::int_traits::CastInto<f16>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i128 as math::libm_math::support::int_traits::CastInto<f32>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i128 as math::libm_math::support::int_traits::CastInto<f32>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i128 as math::libm_math::support::int_traits::CastInto<f64>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i128 as math::libm_math::support::int_traits::CastInto<f64>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i128 as math::libm_math::support::int_traits::CastInto<i128>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i128 as math::libm_math::support::int_traits::CastInto<i128>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i128 as math::libm_math::support::int_traits::CastInto<i16>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i128 as math::libm_math::support::int_traits::CastInto<i16>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i128 as math::libm_math::support::int_traits::CastInto<i32>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i128 as math::libm_math::support::int_traits::CastInto<i32>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i128 as math::libm_math::support::int_traits::CastInto<i64>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i128 as math::libm_math::support::int_traits::CastInto<i64>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i128 as math::libm_math::support::int_traits::CastInto<i8>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i128 as math::libm_math::support::int_traits::CastInto<i8>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i128 as math::libm_math::support::int_traits::CastInto<isize>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i128 as math::libm_math::support::int_traits::CastInto<isize>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i128 as math::libm_math::support::int_traits::CastInto<u128>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i128 as math::libm_math::support::int_traits::CastInto<u128>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i128 as math::libm_math::support::int_traits::CastInto<u16>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i128 as math::libm_math::support::int_traits::CastInto<u16>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i128 as math::libm_math::support::int_traits::CastInto<u32>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i128 as math::libm_math::support::int_traits::CastInto<u32>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i128 as math::libm_math::support::int_traits::CastInto<u64>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i128 as math::libm_math::support::int_traits::CastInto<u64>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i128 as math::libm_math::support::int_traits::CastInto<u8>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i128 as math::libm_math::support::int_traits::CastInto<u8>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i128 as math::libm_math::support::int_traits::CastInto<usize>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i128 as math::libm_math::support::int_traits::CastInto<usize>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i128 as math::libm_math::support::int_traits::DInt>::hi"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i128 as math::libm_math::support::int_traits::DInt>::lo"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i128 as math::libm_math::support::int_traits::Int>::abs"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i128 as math::libm_math::support::int_traits::Int>::abs_diff"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i128 as math::libm_math::support::int_traits::Int>::borrowing_sub"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i128 as math::libm_math::support::int_traits::Int>::carrying_add"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i128 as math::libm_math::support::int_traits::Int>::checked_add"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i128 as math::libm_math::support::int_traits::Int>::checked_sub"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i128 as math::libm_math::support::int_traits::Int>::from_bool"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i128 as math::libm_math::support::int_traits::Int>::from_unsigned"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i128 as math::libm_math::support::int_traits::Int>::ilog2"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i128 as math::libm_math::support::int_traits::Int>::is_zero"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i128 as math::libm_math::support::int_traits::Int>::leading_zeros"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i128 as math::libm_math::support::int_traits::Int>::logical_shr"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i128 as math::libm_math::support::int_traits::Int>::overflowing_add"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i128 as math::libm_math::support::int_traits::Int>::overflowing_sub"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i128 as math::libm_math::support::int_traits::Int>::rotate_left"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i128 as math::libm_math::support::int_traits::Int>::signed"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i128 as math::libm_math::support::int_traits::Int>::trailing_zeros"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i128 as math::libm_math::support::int_traits::Int>::unsigned"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i128 as math::libm_math::support::int_traits::Int>::unsigned_abs"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i128 as math::libm_math::support::int_traits::Int>::wrapping_add"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i128 as math::libm_math::support::int_traits::Int>::wrapping_mul"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i128 as math::libm_math::support::int_traits::Int>::wrapping_neg"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i128 as math::libm_math::support::int_traits::Int>::wrapping_shl"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i128 as math::libm_math::support::int_traits::Int>::wrapping_shr"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i128 as math::libm_math::support::int_traits::Int>::wrapping_sub"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i16 as math::libm_math::support::int_traits::CastInto<f128>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i16 as math::libm_math::support::int_traits::CastInto<f128>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i16 as math::libm_math::support::int_traits::CastInto<f16>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i16 as math::libm_math::support::int_traits::CastInto<f16>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i16 as math::libm_math::support::int_traits::CastInto<f32>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i16 as math::libm_math::support::int_traits::CastInto<f32>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i16 as math::libm_math::support::int_traits::CastInto<f64>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i16 as math::libm_math::support::int_traits::CastInto<f64>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i16 as math::libm_math::support::int_traits::CastInto<i128>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i16 as math::libm_math::support::int_traits::CastInto<i128>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i16 as math::libm_math::support::int_traits::CastInto<i16>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i16 as math::libm_math::support::int_traits::CastInto<i16>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i16 as math::libm_math::support::int_traits::CastInto<i32>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i16 as math::libm_math::support::int_traits::CastInto<i32>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i16 as math::libm_math::support::int_traits::CastInto<i64>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i16 as math::libm_math::support::int_traits::CastInto<i64>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i16 as math::libm_math::support::int_traits::CastInto<i8>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i16 as math::libm_math::support::int_traits::CastInto<i8>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i16 as math::libm_math::support::int_traits::CastInto<isize>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i16 as math::libm_math::support::int_traits::CastInto<isize>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i16 as math::libm_math::support::int_traits::CastInto<u128>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i16 as math::libm_math::support::int_traits::CastInto<u128>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i16 as math::libm_math::support::int_traits::CastInto<u16>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i16 as math::libm_math::support::int_traits::CastInto<u16>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i16 as math::libm_math::support::int_traits::CastInto<u32>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i16 as math::libm_math::support::int_traits::CastInto<u32>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i16 as math::libm_math::support::int_traits::CastInto<u64>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i16 as math::libm_math::support::int_traits::CastInto<u64>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i16 as math::libm_math::support::int_traits::CastInto<u8>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i16 as math::libm_math::support::int_traits::CastInto<u8>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i16 as math::libm_math::support::int_traits::CastInto<usize>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i16 as math::libm_math::support::int_traits::CastInto<usize>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i16 as math::libm_math::support::int_traits::DInt>::hi"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i16 as math::libm_math::support::int_traits::DInt>::lo"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i16 as math::libm_math::support::int_traits::HInt>::widen"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i16 as math::libm_math::support::int_traits::HInt>::widen_hi"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i16 as math::libm_math::support::int_traits::HInt>::widen_mul"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i16 as math::libm_math::support::int_traits::HInt>::zero_widen"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i16 as math::libm_math::support::int_traits::HInt>::zero_widen_mul"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i16 as math::libm_math::support::int_traits::Int>::abs"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i16 as math::libm_math::support::int_traits::Int>::abs_diff"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i16 as math::libm_math::support::int_traits::Int>::borrowing_sub"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i16 as math::libm_math::support::int_traits::Int>::carrying_add"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i16 as math::libm_math::support::int_traits::Int>::checked_add"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i16 as math::libm_math::support::int_traits::Int>::checked_sub"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i16 as math::libm_math::support::int_traits::Int>::from_bool"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i16 as math::libm_math::support::int_traits::Int>::from_unsigned"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i16 as math::libm_math::support::int_traits::Int>::ilog2"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i16 as math::libm_math::support::int_traits::Int>::is_zero"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i16 as math::libm_math::support::int_traits::Int>::leading_zeros"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i16 as math::libm_math::support::int_traits::Int>::logical_shr"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i16 as math::libm_math::support::int_traits::Int>::overflowing_add"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i16 as math::libm_math::support::int_traits::Int>::overflowing_sub"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i16 as math::libm_math::support::int_traits::Int>::rotate_left"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i16 as math::libm_math::support::int_traits::Int>::signed"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i16 as math::libm_math::support::int_traits::Int>::trailing_zeros"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i16 as math::libm_math::support::int_traits::Int>::unsigned"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i16 as math::libm_math::support::int_traits::Int>::unsigned_abs"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i16 as math::libm_math::support::int_traits::Int>::wrapping_add"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i16 as math::libm_math::support::int_traits::Int>::wrapping_mul"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i16 as math::libm_math::support::int_traits::Int>::wrapping_neg"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i16 as math::libm_math::support::int_traits::Int>::wrapping_shl"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i16 as math::libm_math::support::int_traits::Int>::wrapping_shr"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i16 as math::libm_math::support::int_traits::Int>::wrapping_sub"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i32 as math::libm_math::support::int_traits::CastInto<f128>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i32 as math::libm_math::support::int_traits::CastInto<f128>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i32 as math::libm_math::support::int_traits::CastInto<f16>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i32 as math::libm_math::support::int_traits::CastInto<f16>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i32 as math::libm_math::support::int_traits::CastInto<f32>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i32 as math::libm_math::support::int_traits::CastInto<f32>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i32 as math::libm_math::support::int_traits::CastInto<f64>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i32 as math::libm_math::support::int_traits::CastInto<f64>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i32 as math::libm_math::support::int_traits::CastInto<i128>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i32 as math::libm_math::support::int_traits::CastInto<i128>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i32 as math::libm_math::support::int_traits::CastInto<i16>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i32 as math::libm_math::support::int_traits::CastInto<i16>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i32 as math::libm_math::support::int_traits::CastInto<i32>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i32 as math::libm_math::support::int_traits::CastInto<i32>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i32 as math::libm_math::support::int_traits::CastInto<i64>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i32 as math::libm_math::support::int_traits::CastInto<i64>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i32 as math::libm_math::support::int_traits::CastInto<i8>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i32 as math::libm_math::support::int_traits::CastInto<i8>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i32 as math::libm_math::support::int_traits::CastInto<isize>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i32 as math::libm_math::support::int_traits::CastInto<isize>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i32 as math::libm_math::support::int_traits::CastInto<u128>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i32 as math::libm_math::support::int_traits::CastInto<u128>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i32 as math::libm_math::support::int_traits::CastInto<u16>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i32 as math::libm_math::support::int_traits::CastInto<u16>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i32 as math::libm_math::support::int_traits::CastInto<u32>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i32 as math::libm_math::support::int_traits::CastInto<u32>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i32 as math::libm_math::support::int_traits::CastInto<u64>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i32 as math::libm_math::support::int_traits::CastInto<u64>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i32 as math::libm_math::support::int_traits::CastInto<u8>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i32 as math::libm_math::support::int_traits::CastInto<u8>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i32 as math::libm_math::support::int_traits::CastInto<usize>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i32 as math::libm_math::support::int_traits::CastInto<usize>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i32 as math::libm_math::support::int_traits::DInt>::hi"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i32 as math::libm_math::support::int_traits::DInt>::lo"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i32 as math::libm_math::support::int_traits::HInt>::widen"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i32 as math::libm_math::support::int_traits::HInt>::widen_hi"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i32 as math::libm_math::support::int_traits::HInt>::widen_mul"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i32 as math::libm_math::support::int_traits::HInt>::zero_widen"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i32 as math::libm_math::support::int_traits::HInt>::zero_widen_mul"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i32 as math::libm_math::support::int_traits::Int>::abs"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i32 as math::libm_math::support::int_traits::Int>::abs_diff"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i32 as math::libm_math::support::int_traits::Int>::borrowing_sub"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i32 as math::libm_math::support::int_traits::Int>::carrying_add"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i32 as math::libm_math::support::int_traits::Int>::checked_add"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i32 as math::libm_math::support::int_traits::Int>::checked_sub"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i32 as math::libm_math::support::int_traits::Int>::from_bool"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i32 as math::libm_math::support::int_traits::Int>::from_unsigned"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i32 as math::libm_math::support::int_traits::Int>::ilog2"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i32 as math::libm_math::support::int_traits::Int>::is_zero"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i32 as math::libm_math::support::int_traits::Int>::leading_zeros"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i32 as math::libm_math::support::int_traits::Int>::logical_shr"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i32 as math::libm_math::support::int_traits::Int>::overflowing_add"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i32 as math::libm_math::support::int_traits::Int>::overflowing_sub"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i32 as math::libm_math::support::int_traits::Int>::rotate_left"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i32 as math::libm_math::support::int_traits::Int>::signed"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i32 as math::libm_math::support::int_traits::Int>::trailing_zeros"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i32 as math::libm_math::support::int_traits::Int>::unsigned"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i32 as math::libm_math::support::int_traits::Int>::unsigned_abs"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i32 as math::libm_math::support::int_traits::Int>::wrapping_add"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i32 as math::libm_math::support::int_traits::Int>::wrapping_mul"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i32 as math::libm_math::support::int_traits::Int>::wrapping_neg"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i32 as math::libm_math::support::int_traits::Int>::wrapping_shl"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i32 as math::libm_math::support::int_traits::Int>::wrapping_shr"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i32 as math::libm_math::support::int_traits::Int>::wrapping_sub"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i64 as math::libm_math::support::int_traits::CastInto<f128>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i64 as math::libm_math::support::int_traits::CastInto<f128>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i64 as math::libm_math::support::int_traits::CastInto<f16>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i64 as math::libm_math::support::int_traits::CastInto<f16>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i64 as math::libm_math::support::int_traits::CastInto<f32>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i64 as math::libm_math::support::int_traits::CastInto<f32>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i64 as math::libm_math::support::int_traits::CastInto<f64>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i64 as math::libm_math::support::int_traits::CastInto<f64>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i64 as math::libm_math::support::int_traits::CastInto<i128>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i64 as math::libm_math::support::int_traits::CastInto<i128>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i64 as math::libm_math::support::int_traits::CastInto<i16>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i64 as math::libm_math::support::int_traits::CastInto<i16>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i64 as math::libm_math::support::int_traits::CastInto<i32>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i64 as math::libm_math::support::int_traits::CastInto<i32>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i64 as math::libm_math::support::int_traits::CastInto<i64>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i64 as math::libm_math::support::int_traits::CastInto<i64>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i64 as math::libm_math::support::int_traits::CastInto<i8>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i64 as math::libm_math::support::int_traits::CastInto<i8>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i64 as math::libm_math::support::int_traits::CastInto<isize>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i64 as math::libm_math::support::int_traits::CastInto<isize>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i64 as math::libm_math::support::int_traits::CastInto<u128>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i64 as math::libm_math::support::int_traits::CastInto<u128>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i64 as math::libm_math::support::int_traits::CastInto<u16>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i64 as math::libm_math::support::int_traits::CastInto<u16>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i64 as math::libm_math::support::int_traits::CastInto<u32>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i64 as math::libm_math::support::int_traits::CastInto<u32>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i64 as math::libm_math::support::int_traits::CastInto<u64>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i64 as math::libm_math::support::int_traits::CastInto<u64>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i64 as math::libm_math::support::int_traits::CastInto<u8>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i64 as math::libm_math::support::int_traits::CastInto<u8>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i64 as math::libm_math::support::int_traits::CastInto<usize>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i64 as math::libm_math::support::int_traits::CastInto<usize>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i64 as math::libm_math::support::int_traits::DInt>::hi"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i64 as math::libm_math::support::int_traits::DInt>::lo"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i64 as math::libm_math::support::int_traits::HInt>::widen"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i64 as math::libm_math::support::int_traits::HInt>::widen_hi"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i64 as math::libm_math::support::int_traits::HInt>::widen_mul"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i64 as math::libm_math::support::int_traits::HInt>::zero_widen"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i64 as math::libm_math::support::int_traits::HInt>::zero_widen_mul"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i64 as math::libm_math::support::int_traits::Int>::abs"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i64 as math::libm_math::support::int_traits::Int>::abs_diff"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i64 as math::libm_math::support::int_traits::Int>::borrowing_sub"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i64 as math::libm_math::support::int_traits::Int>::carrying_add"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i64 as math::libm_math::support::int_traits::Int>::checked_add"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i64 as math::libm_math::support::int_traits::Int>::checked_sub"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i64 as math::libm_math::support::int_traits::Int>::from_bool"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i64 as math::libm_math::support::int_traits::Int>::from_unsigned"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i64 as math::libm_math::support::int_traits::Int>::ilog2"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i64 as math::libm_math::support::int_traits::Int>::is_zero"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i64 as math::libm_math::support::int_traits::Int>::leading_zeros"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i64 as math::libm_math::support::int_traits::Int>::logical_shr"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i64 as math::libm_math::support::int_traits::Int>::overflowing_add"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i64 as math::libm_math::support::int_traits::Int>::overflowing_sub"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i64 as math::libm_math::support::int_traits::Int>::rotate_left"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i64 as math::libm_math::support::int_traits::Int>::signed"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i64 as math::libm_math::support::int_traits::Int>::trailing_zeros"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i64 as math::libm_math::support::int_traits::Int>::unsigned"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i64 as math::libm_math::support::int_traits::Int>::unsigned_abs"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i64 as math::libm_math::support::int_traits::Int>::wrapping_add"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i64 as math::libm_math::support::int_traits::Int>::wrapping_mul"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i64 as math::libm_math::support::int_traits::Int>::wrapping_neg"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i64 as math::libm_math::support::int_traits::Int>::wrapping_shl"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i64 as math::libm_math::support::int_traits::Int>::wrapping_shr"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i64 as math::libm_math::support::int_traits::Int>::wrapping_sub"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i8 as math::libm_math::support::int_traits::CastInto<f128>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i8 as math::libm_math::support::int_traits::CastInto<f128>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i8 as math::libm_math::support::int_traits::CastInto<f16>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i8 as math::libm_math::support::int_traits::CastInto<f16>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i8 as math::libm_math::support::int_traits::CastInto<f32>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i8 as math::libm_math::support::int_traits::CastInto<f32>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i8 as math::libm_math::support::int_traits::CastInto<f64>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i8 as math::libm_math::support::int_traits::CastInto<f64>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i8 as math::libm_math::support::int_traits::CastInto<i128>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i8 as math::libm_math::support::int_traits::CastInto<i128>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i8 as math::libm_math::support::int_traits::CastInto<i16>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i8 as math::libm_math::support::int_traits::CastInto<i16>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i8 as math::libm_math::support::int_traits::CastInto<i32>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i8 as math::libm_math::support::int_traits::CastInto<i32>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i8 as math::libm_math::support::int_traits::CastInto<i64>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i8 as math::libm_math::support::int_traits::CastInto<i64>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i8 as math::libm_math::support::int_traits::CastInto<i8>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i8 as math::libm_math::support::int_traits::CastInto<i8>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i8 as math::libm_math::support::int_traits::CastInto<isize>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i8 as math::libm_math::support::int_traits::CastInto<isize>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i8 as math::libm_math::support::int_traits::CastInto<u128>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i8 as math::libm_math::support::int_traits::CastInto<u128>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i8 as math::libm_math::support::int_traits::CastInto<u16>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i8 as math::libm_math::support::int_traits::CastInto<u16>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i8 as math::libm_math::support::int_traits::CastInto<u32>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i8 as math::libm_math::support::int_traits::CastInto<u32>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i8 as math::libm_math::support::int_traits::CastInto<u64>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i8 as math::libm_math::support::int_traits::CastInto<u64>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i8 as math::libm_math::support::int_traits::CastInto<u8>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i8 as math::libm_math::support::int_traits::CastInto<u8>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i8 as math::libm_math::support::int_traits::CastInto<usize>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i8 as math::libm_math::support::int_traits::CastInto<usize>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i8 as math::libm_math::support::int_traits::HInt>::widen"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i8 as math::libm_math::support::int_traits::HInt>::widen_hi"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i8 as math::libm_math::support::int_traits::HInt>::widen_mul"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i8 as math::libm_math::support::int_traits::HInt>::zero_widen"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i8 as math::libm_math::support::int_traits::HInt>::zero_widen_mul"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i8 as math::libm_math::support::int_traits::Int>::abs"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i8 as math::libm_math::support::int_traits::Int>::abs_diff"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i8 as math::libm_math::support::int_traits::Int>::borrowing_sub"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i8 as math::libm_math::support::int_traits::Int>::carrying_add"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i8 as math::libm_math::support::int_traits::Int>::checked_add"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i8 as math::libm_math::support::int_traits::Int>::checked_sub"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i8 as math::libm_math::support::int_traits::Int>::from_bool"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i8 as math::libm_math::support::int_traits::Int>::from_unsigned"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i8 as math::libm_math::support::int_traits::Int>::ilog2"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i8 as math::libm_math::support::int_traits::Int>::is_zero"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i8 as math::libm_math::support::int_traits::Int>::leading_zeros"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i8 as math::libm_math::support::int_traits::Int>::logical_shr"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i8 as math::libm_math::support::int_traits::Int>::overflowing_add"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i8 as math::libm_math::support::int_traits::Int>::overflowing_sub"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i8 as math::libm_math::support::int_traits::Int>::rotate_left"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i8 as math::libm_math::support::int_traits::Int>::signed"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i8 as math::libm_math::support::int_traits::Int>::trailing_zeros"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i8 as math::libm_math::support::int_traits::Int>::unsigned"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i8 as math::libm_math::support::int_traits::Int>::unsigned_abs"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i8 as math::libm_math::support::int_traits::Int>::wrapping_add"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i8 as math::libm_math::support::int_traits::Int>::wrapping_mul"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i8 as math::libm_math::support::int_traits::Int>::wrapping_neg"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i8 as math::libm_math::support::int_traits::Int>::wrapping_shl"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i8 as math::libm_math::support::int_traits::Int>::wrapping_shr"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i8 as math::libm_math::support::int_traits::Int>::wrapping_sub"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<isize as math::libm_math::support::int_traits::CastInto<i128>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<isize as math::libm_math::support::int_traits::CastInto<i128>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<isize as math::libm_math::support::int_traits::CastInto<i16>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<isize as math::libm_math::support::int_traits::CastInto<i16>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<isize as math::libm_math::support::int_traits::CastInto<i32>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<isize as math::libm_math::support::int_traits::CastInto<i32>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<isize as math::libm_math::support::int_traits::CastInto<i64>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<isize as math::libm_math::support::int_traits::CastInto<i64>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<isize as math::libm_math::support::int_traits::CastInto<i8>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<isize as math::libm_math::support::int_traits::CastInto<i8>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<isize as math::libm_math::support::int_traits::CastInto<isize>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<isize as math::libm_math::support::int_traits::CastInto<isize>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<isize as math::libm_math::support::int_traits::CastInto<u128>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<isize as math::libm_math::support::int_traits::CastInto<u128>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<isize as math::libm_math::support::int_traits::CastInto<u16>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<isize as math::libm_math::support::int_traits::CastInto<u16>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<isize as math::libm_math::support::int_traits::CastInto<u32>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<isize as math::libm_math::support::int_traits::CastInto<u32>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<isize as math::libm_math::support::int_traits::CastInto<u64>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<isize as math::libm_math::support::int_traits::CastInto<u64>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<isize as math::libm_math::support::int_traits::CastInto<u8>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<isize as math::libm_math::support::int_traits::CastInto<u8>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<isize as math::libm_math::support::int_traits::CastInto<usize>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<isize as math::libm_math::support::int_traits::CastInto<usize>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<isize as math::libm_math::support::int_traits::Int>::abs"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<isize as math::libm_math::support::int_traits::Int>::abs_diff"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<isize as math::libm_math::support::int_traits::Int>::borrowing_sub"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<isize as math::libm_math::support::int_traits::Int>::carrying_add"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<isize as math::libm_math::support::int_traits::Int>::checked_add"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<isize as math::libm_math::support::int_traits::Int>::checked_sub"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<isize as math::libm_math::support::int_traits::Int>::from_bool"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<isize as math::libm_math::support::int_traits::Int>::from_unsigned"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<isize as math::libm_math::support::int_traits::Int>::ilog2"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<isize as math::libm_math::support::int_traits::Int>::is_zero"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<isize as math::libm_math::support::int_traits::Int>::leading_zeros"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<isize as math::libm_math::support::int_traits::Int>::logical_shr"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<isize as math::libm_math::support::int_traits::Int>::overflowing_add"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<isize as math::libm_math::support::int_traits::Int>::overflowing_sub"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<isize as math::libm_math::support::int_traits::Int>::rotate_left"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<isize as math::libm_math::support::int_traits::Int>::signed"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<isize as math::libm_math::support::int_traits::Int>::trailing_zeros"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<isize as math::libm_math::support::int_traits::Int>::unsigned"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<isize as math::libm_math::support::int_traits::Int>::unsigned_abs"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<isize as math::libm_math::support::int_traits::Int>::wrapping_add"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<isize as math::libm_math::support::int_traits::Int>::wrapping_mul"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<isize as math::libm_math::support::int_traits::Int>::wrapping_neg"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<isize as math::libm_math::support::int_traits::Int>::wrapping_shl"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<isize as math::libm_math::support::int_traits::Int>::wrapping_shr"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<isize as math::libm_math::support::int_traits::Int>::wrapping_sub"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u128 as math::libm_math::support::int_traits::CastInto<i128>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u128 as math::libm_math::support::int_traits::CastInto<i128>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u128 as math::libm_math::support::int_traits::CastInto<i16>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u128 as math::libm_math::support::int_traits::CastInto<i16>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u128 as math::libm_math::support::int_traits::CastInto<i32>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u128 as math::libm_math::support::int_traits::CastInto<i32>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u128 as math::libm_math::support::int_traits::CastInto<i64>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u128 as math::libm_math::support::int_traits::CastInto<i64>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u128 as math::libm_math::support::int_traits::CastInto<i8>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u128 as math::libm_math::support::int_traits::CastInto<i8>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u128 as math::libm_math::support::int_traits::CastInto<isize>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u128 as math::libm_math::support::int_traits::CastInto<isize>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u128 as math::libm_math::support::int_traits::CastInto<u128>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u128 as math::libm_math::support::int_traits::CastInto<u128>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u128 as math::libm_math::support::int_traits::CastInto<u16>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u128 as math::libm_math::support::int_traits::CastInto<u16>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u128 as math::libm_math::support::int_traits::CastInto<u32>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u128 as math::libm_math::support::int_traits::CastInto<u32>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u128 as math::libm_math::support::int_traits::CastInto<u64>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u128 as math::libm_math::support::int_traits::CastInto<u64>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u128 as math::libm_math::support::int_traits::CastInto<u8>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u128 as math::libm_math::support::int_traits::CastInto<u8>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u128 as math::libm_math::support::int_traits::CastInto<usize>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u128 as math::libm_math::support::int_traits::CastInto<usize>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u128 as math::libm_math::support::int_traits::DInt>::hi"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u128 as math::libm_math::support::int_traits::DInt>::lo"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u128 as math::libm_math::support::int_traits::Int>::abs"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u128 as math::libm_math::support::int_traits::Int>::abs_diff"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u128 as math::libm_math::support::int_traits::Int>::borrowing_sub"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u128 as math::libm_math::support::int_traits::Int>::carrying_add"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u128 as math::libm_math::support::int_traits::Int>::checked_add"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u128 as math::libm_math::support::int_traits::Int>::checked_sub"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u128 as math::libm_math::support::int_traits::Int>::from_bool"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u128 as math::libm_math::support::int_traits::Int>::from_unsigned"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u128 as math::libm_math::support::int_traits::Int>::ilog2"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u128 as math::libm_math::support::int_traits::Int>::is_zero"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u128 as math::libm_math::support::int_traits::Int>::leading_zeros"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u128 as math::libm_math::support::int_traits::Int>::logical_shr"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u128 as math::libm_math::support::int_traits::Int>::overflowing_add"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u128 as math::libm_math::support::int_traits::Int>::overflowing_sub"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u128 as math::libm_math::support::int_traits::Int>::rotate_left"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u128 as math::libm_math::support::int_traits::Int>::signed"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u128 as math::libm_math::support::int_traits::Int>::trailing_zeros"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u128 as math::libm_math::support::int_traits::Int>::unsigned"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u128 as math::libm_math::support::int_traits::Int>::unsigned_abs"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u128 as math::libm_math::support::int_traits::Int>::wrapping_add"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u128 as math::libm_math::support::int_traits::Int>::wrapping_mul"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u128 as math::libm_math::support::int_traits::Int>::wrapping_neg"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u128 as math::libm_math::support::int_traits::Int>::wrapping_shl"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u128 as math::libm_math::support::int_traits::Int>::wrapping_shr"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u128 as math::libm_math::support::int_traits::Int>::wrapping_sub"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u16 as math::libm_math::support::int_traits::CastInto<i128>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u16 as math::libm_math::support::int_traits::CastInto<i128>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u16 as math::libm_math::support::int_traits::CastInto<i16>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u16 as math::libm_math::support::int_traits::CastInto<i16>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u16 as math::libm_math::support::int_traits::CastInto<i32>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u16 as math::libm_math::support::int_traits::CastInto<i32>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u16 as math::libm_math::support::int_traits::CastInto<i64>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u16 as math::libm_math::support::int_traits::CastInto<i64>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u16 as math::libm_math::support::int_traits::CastInto<i8>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u16 as math::libm_math::support::int_traits::CastInto<i8>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u16 as math::libm_math::support::int_traits::CastInto<isize>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u16 as math::libm_math::support::int_traits::CastInto<isize>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u16 as math::libm_math::support::int_traits::CastInto<u128>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u16 as math::libm_math::support::int_traits::CastInto<u128>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u16 as math::libm_math::support::int_traits::CastInto<u16>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u16 as math::libm_math::support::int_traits::CastInto<u16>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u16 as math::libm_math::support::int_traits::CastInto<u32>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u16 as math::libm_math::support::int_traits::CastInto<u32>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u16 as math::libm_math::support::int_traits::CastInto<u64>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u16 as math::libm_math::support::int_traits::CastInto<u64>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u16 as math::libm_math::support::int_traits::CastInto<u8>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u16 as math::libm_math::support::int_traits::CastInto<u8>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u16 as math::libm_math::support::int_traits::CastInto<usize>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u16 as math::libm_math::support::int_traits::CastInto<usize>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u16 as math::libm_math::support::int_traits::DInt>::hi"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u16 as math::libm_math::support::int_traits::DInt>::lo"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u16 as math::libm_math::support::int_traits::HInt>::widen"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u16 as math::libm_math::support::int_traits::HInt>::widen_hi"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u16 as math::libm_math::support::int_traits::HInt>::widen_mul"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u16 as math::libm_math::support::int_traits::HInt>::zero_widen"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u16 as math::libm_math::support::int_traits::HInt>::zero_widen_mul"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u16 as math::libm_math::support::int_traits::Int>::abs"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u16 as math::libm_math::support::int_traits::Int>::abs_diff"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u16 as math::libm_math::support::int_traits::Int>::borrowing_sub"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u16 as math::libm_math::support::int_traits::Int>::carrying_add"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u16 as math::libm_math::support::int_traits::Int>::checked_add"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u16 as math::libm_math::support::int_traits::Int>::checked_sub"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u16 as math::libm_math::support::int_traits::Int>::from_bool"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u16 as math::libm_math::support::int_traits::Int>::from_unsigned"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u16 as math::libm_math::support::int_traits::Int>::ilog2"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u16 as math::libm_math::support::int_traits::Int>::is_zero"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u16 as math::libm_math::support::int_traits::Int>::leading_zeros"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u16 as math::libm_math::support::int_traits::Int>::logical_shr"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u16 as math::libm_math::support::int_traits::Int>::overflowing_add"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u16 as math::libm_math::support::int_traits::Int>::overflowing_sub"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u16 as math::libm_math::support::int_traits::Int>::rotate_left"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u16 as math::libm_math::support::int_traits::Int>::signed"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u16 as math::libm_math::support::int_traits::Int>::trailing_zeros"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u16 as math::libm_math::support::int_traits::Int>::unsigned"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u16 as math::libm_math::support::int_traits::Int>::unsigned_abs"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u16 as math::libm_math::support::int_traits::Int>::wrapping_add"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u16 as math::libm_math::support::int_traits::Int>::wrapping_mul"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u16 as math::libm_math::support::int_traits::Int>::wrapping_neg"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u16 as math::libm_math::support::int_traits::Int>::wrapping_shl"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u16 as math::libm_math::support::int_traits::Int>::wrapping_shr"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u16 as math::libm_math::support::int_traits::Int>::wrapping_sub"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u32 as math::libm_math::support::int_traits::CastInto<i128>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u32 as math::libm_math::support::int_traits::CastInto<i128>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u32 as math::libm_math::support::int_traits::CastInto<i16>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u32 as math::libm_math::support::int_traits::CastInto<i16>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u32 as math::libm_math::support::int_traits::CastInto<i32>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u32 as math::libm_math::support::int_traits::CastInto<i32>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u32 as math::libm_math::support::int_traits::CastInto<i64>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u32 as math::libm_math::support::int_traits::CastInto<i64>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u32 as math::libm_math::support::int_traits::CastInto<i8>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u32 as math::libm_math::support::int_traits::CastInto<i8>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u32 as math::libm_math::support::int_traits::CastInto<isize>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u32 as math::libm_math::support::int_traits::CastInto<isize>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u32 as math::libm_math::support::int_traits::CastInto<u128>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u32 as math::libm_math::support::int_traits::CastInto<u128>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u32 as math::libm_math::support::int_traits::CastInto<u16>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u32 as math::libm_math::support::int_traits::CastInto<u16>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u32 as math::libm_math::support::int_traits::CastInto<u32>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u32 as math::libm_math::support::int_traits::CastInto<u32>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u32 as math::libm_math::support::int_traits::CastInto<u64>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u32 as math::libm_math::support::int_traits::CastInto<u64>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u32 as math::libm_math::support::int_traits::CastInto<u8>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u32 as math::libm_math::support::int_traits::CastInto<u8>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u32 as math::libm_math::support::int_traits::CastInto<usize>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u32 as math::libm_math::support::int_traits::CastInto<usize>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u32 as math::libm_math::support::int_traits::DInt>::hi"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u32 as math::libm_math::support::int_traits::DInt>::lo"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u32 as math::libm_math::support::int_traits::HInt>::widen"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u32 as math::libm_math::support::int_traits::HInt>::widen_hi"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u32 as math::libm_math::support::int_traits::HInt>::widen_mul"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u32 as math::libm_math::support::int_traits::HInt>::zero_widen"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u32 as math::libm_math::support::int_traits::HInt>::zero_widen_mul"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u32 as math::libm_math::support::int_traits::Int>::abs"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u32 as math::libm_math::support::int_traits::Int>::abs_diff"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u32 as math::libm_math::support::int_traits::Int>::borrowing_sub"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u32 as math::libm_math::support::int_traits::Int>::carrying_add"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u32 as math::libm_math::support::int_traits::Int>::checked_add"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u32 as math::libm_math::support::int_traits::Int>::checked_sub"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u32 as math::libm_math::support::int_traits::Int>::from_bool"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u32 as math::libm_math::support::int_traits::Int>::from_unsigned"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u32 as math::libm_math::support::int_traits::Int>::ilog2"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u32 as math::libm_math::support::int_traits::Int>::is_zero"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u32 as math::libm_math::support::int_traits::Int>::leading_zeros"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u32 as math::libm_math::support::int_traits::Int>::logical_shr"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u32 as math::libm_math::support::int_traits::Int>::overflowing_add"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u32 as math::libm_math::support::int_traits::Int>::overflowing_sub"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u32 as math::libm_math::support::int_traits::Int>::rotate_left"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u32 as math::libm_math::support::int_traits::Int>::signed"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u32 as math::libm_math::support::int_traits::Int>::trailing_zeros"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u32 as math::libm_math::support::int_traits::Int>::unsigned"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u32 as math::libm_math::support::int_traits::Int>::unsigned_abs"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u32 as math::libm_math::support::int_traits::Int>::wrapping_add"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u32 as math::libm_math::support::int_traits::Int>::wrapping_mul"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u32 as math::libm_math::support::int_traits::Int>::wrapping_neg"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u32 as math::libm_math::support::int_traits::Int>::wrapping_shl"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u32 as math::libm_math::support::int_traits::Int>::wrapping_shr"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u32 as math::libm_math::support::int_traits::Int>::wrapping_sub"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u64 as math::libm_math::support::int_traits::CastInto<i128>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u64 as math::libm_math::support::int_traits::CastInto<i128>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u64 as math::libm_math::support::int_traits::CastInto<i16>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u64 as math::libm_math::support::int_traits::CastInto<i16>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u64 as math::libm_math::support::int_traits::CastInto<i32>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u64 as math::libm_math::support::int_traits::CastInto<i32>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u64 as math::libm_math::support::int_traits::CastInto<i64>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u64 as math::libm_math::support::int_traits::CastInto<i64>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u64 as math::libm_math::support::int_traits::CastInto<i8>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u64 as math::libm_math::support::int_traits::CastInto<i8>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u64 as math::libm_math::support::int_traits::CastInto<isize>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u64 as math::libm_math::support::int_traits::CastInto<isize>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u64 as math::libm_math::support::int_traits::CastInto<u128>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u64 as math::libm_math::support::int_traits::CastInto<u128>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u64 as math::libm_math::support::int_traits::CastInto<u16>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u64 as math::libm_math::support::int_traits::CastInto<u16>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u64 as math::libm_math::support::int_traits::CastInto<u32>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u64 as math::libm_math::support::int_traits::CastInto<u32>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u64 as math::libm_math::support::int_traits::CastInto<u64>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u64 as math::libm_math::support::int_traits::CastInto<u64>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u64 as math::libm_math::support::int_traits::CastInto<u8>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u64 as math::libm_math::support::int_traits::CastInto<u8>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u64 as math::libm_math::support::int_traits::CastInto<usize>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u64 as math::libm_math::support::int_traits::CastInto<usize>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u64 as math::libm_math::support::int_traits::DInt>::hi"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u64 as math::libm_math::support::int_traits::DInt>::lo"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u64 as math::libm_math::support::int_traits::HInt>::widen"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u64 as math::libm_math::support::int_traits::HInt>::widen_hi"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u64 as math::libm_math::support::int_traits::HInt>::widen_mul"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u64 as math::libm_math::support::int_traits::HInt>::zero_widen"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u64 as math::libm_math::support::int_traits::HInt>::zero_widen_mul"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u64 as math::libm_math::support::int_traits::Int>::abs"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u64 as math::libm_math::support::int_traits::Int>::abs_diff"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u64 as math::libm_math::support::int_traits::Int>::borrowing_sub"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u64 as math::libm_math::support::int_traits::Int>::carrying_add"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u64 as math::libm_math::support::int_traits::Int>::checked_add"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u64 as math::libm_math::support::int_traits::Int>::checked_sub"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u64 as math::libm_math::support::int_traits::Int>::from_bool"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u64 as math::libm_math::support::int_traits::Int>::from_unsigned"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u64 as math::libm_math::support::int_traits::Int>::ilog2"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u64 as math::libm_math::support::int_traits::Int>::is_zero"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u64 as math::libm_math::support::int_traits::Int>::leading_zeros"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u64 as math::libm_math::support::int_traits::Int>::logical_shr"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u64 as math::libm_math::support::int_traits::Int>::overflowing_add"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u64 as math::libm_math::support::int_traits::Int>::overflowing_sub"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u64 as math::libm_math::support::int_traits::Int>::rotate_left"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u64 as math::libm_math::support::int_traits::Int>::signed"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u64 as math::libm_math::support::int_traits::Int>::trailing_zeros"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u64 as math::libm_math::support::int_traits::Int>::unsigned"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u64 as math::libm_math::support::int_traits::Int>::unsigned_abs"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u64 as math::libm_math::support::int_traits::Int>::wrapping_add"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u64 as math::libm_math::support::int_traits::Int>::wrapping_mul"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u64 as math::libm_math::support::int_traits::Int>::wrapping_neg"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u64 as math::libm_math::support::int_traits::Int>::wrapping_shl"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u64 as math::libm_math::support::int_traits::Int>::wrapping_shr"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u64 as math::libm_math::support::int_traits::Int>::wrapping_sub"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u8 as math::libm_math::support::int_traits::CastInto<i128>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u8 as math::libm_math::support::int_traits::CastInto<i128>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u8 as math::libm_math::support::int_traits::CastInto<i16>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u8 as math::libm_math::support::int_traits::CastInto<i16>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u8 as math::libm_math::support::int_traits::CastInto<i32>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u8 as math::libm_math::support::int_traits::CastInto<i32>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u8 as math::libm_math::support::int_traits::CastInto<i64>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u8 as math::libm_math::support::int_traits::CastInto<i64>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u8 as math::libm_math::support::int_traits::CastInto<i8>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u8 as math::libm_math::support::int_traits::CastInto<i8>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u8 as math::libm_math::support::int_traits::CastInto<isize>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u8 as math::libm_math::support::int_traits::CastInto<isize>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u8 as math::libm_math::support::int_traits::CastInto<u128>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u8 as math::libm_math::support::int_traits::CastInto<u128>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u8 as math::libm_math::support::int_traits::CastInto<u16>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u8 as math::libm_math::support::int_traits::CastInto<u16>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u8 as math::libm_math::support::int_traits::CastInto<u32>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u8 as math::libm_math::support::int_traits::CastInto<u32>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u8 as math::libm_math::support::int_traits::CastInto<u64>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u8 as math::libm_math::support::int_traits::CastInto<u64>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u8 as math::libm_math::support::int_traits::CastInto<u8>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u8 as math::libm_math::support::int_traits::CastInto<u8>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u8 as math::libm_math::support::int_traits::CastInto<usize>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u8 as math::libm_math::support::int_traits::CastInto<usize>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u8 as math::libm_math::support::int_traits::HInt>::widen"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u8 as math::libm_math::support::int_traits::HInt>::widen_hi"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u8 as math::libm_math::support::int_traits::HInt>::widen_mul"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u8 as math::libm_math::support::int_traits::HInt>::zero_widen"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u8 as math::libm_math::support::int_traits::HInt>::zero_widen_mul"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u8 as math::libm_math::support::int_traits::Int>::abs"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u8 as math::libm_math::support::int_traits::Int>::abs_diff"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u8 as math::libm_math::support::int_traits::Int>::borrowing_sub"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u8 as math::libm_math::support::int_traits::Int>::carrying_add"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u8 as math::libm_math::support::int_traits::Int>::checked_add"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u8 as math::libm_math::support::int_traits::Int>::checked_sub"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u8 as math::libm_math::support::int_traits::Int>::from_bool"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u8 as math::libm_math::support::int_traits::Int>::from_unsigned"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u8 as math::libm_math::support::int_traits::Int>::ilog2"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u8 as math::libm_math::support::int_traits::Int>::is_zero"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u8 as math::libm_math::support::int_traits::Int>::leading_zeros"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u8 as math::libm_math::support::int_traits::Int>::logical_shr"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u8 as math::libm_math::support::int_traits::Int>::overflowing_add"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u8 as math::libm_math::support::int_traits::Int>::overflowing_sub"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u8 as math::libm_math::support::int_traits::Int>::rotate_left"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u8 as math::libm_math::support::int_traits::Int>::signed"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u8 as math::libm_math::support::int_traits::Int>::trailing_zeros"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u8 as math::libm_math::support::int_traits::Int>::unsigned"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u8 as math::libm_math::support::int_traits::Int>::unsigned_abs"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u8 as math::libm_math::support::int_traits::Int>::wrapping_add"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u8 as math::libm_math::support::int_traits::Int>::wrapping_mul"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u8 as math::libm_math::support::int_traits::Int>::wrapping_neg"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u8 as math::libm_math::support::int_traits::Int>::wrapping_shl"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u8 as math::libm_math::support::int_traits::Int>::wrapping_shr"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u8 as math::libm_math::support::int_traits::Int>::wrapping_sub"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<usize as math::libm_math::support::int_traits::CastInto<i128>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<usize as math::libm_math::support::int_traits::CastInto<i128>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<usize as math::libm_math::support::int_traits::CastInto<i16>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<usize as math::libm_math::support::int_traits::CastInto<i16>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<usize as math::libm_math::support::int_traits::CastInto<i32>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<usize as math::libm_math::support::int_traits::CastInto<i32>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<usize as math::libm_math::support::int_traits::CastInto<i64>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<usize as math::libm_math::support::int_traits::CastInto<i64>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<usize as math::libm_math::support::int_traits::CastInto<i8>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<usize as math::libm_math::support::int_traits::CastInto<i8>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<usize as math::libm_math::support::int_traits::CastInto<isize>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<usize as math::libm_math::support::int_traits::CastInto<isize>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<usize as math::libm_math::support::int_traits::CastInto<u128>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<usize as math::libm_math::support::int_traits::CastInto<u128>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<usize as math::libm_math::support::int_traits::CastInto<u16>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<usize as math::libm_math::support::int_traits::CastInto<u16>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<usize as math::libm_math::support::int_traits::CastInto<u32>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<usize as math::libm_math::support::int_traits::CastInto<u32>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<usize as math::libm_math::support::int_traits::CastInto<u64>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<usize as math::libm_math::support::int_traits::CastInto<u64>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<usize as math::libm_math::support::int_traits::CastInto<u8>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<usize as math::libm_math::support::int_traits::CastInto<u8>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<usize as math::libm_math::support::int_traits::CastInto<usize>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<usize as math::libm_math::support::int_traits::CastInto<usize>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<usize as math::libm_math::support::int_traits::Int>::abs"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<usize as math::libm_math::support::int_traits::Int>::abs_diff"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<usize as math::libm_math::support::int_traits::Int>::borrowing_sub"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<usize as math::libm_math::support::int_traits::Int>::carrying_add"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<usize as math::libm_math::support::int_traits::Int>::checked_add"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<usize as math::libm_math::support::int_traits::Int>::checked_sub"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<usize as math::libm_math::support::int_traits::Int>::from_bool"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<usize as math::libm_math::support::int_traits::Int>::from_unsigned"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<usize as math::libm_math::support::int_traits::Int>::ilog2"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<usize as math::libm_math::support::int_traits::Int>::is_zero"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<usize as math::libm_math::support::int_traits::Int>::leading_zeros"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<usize as math::libm_math::support::int_traits::Int>::logical_shr"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<usize as math::libm_math::support::int_traits::Int>::overflowing_add"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<usize as math::libm_math::support::int_traits::Int>::overflowing_sub"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<usize as math::libm_math::support::int_traits::Int>::rotate_left"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<usize as math::libm_math::support::int_traits::Int>::signed"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<usize as math::libm_math::support::int_traits::Int>::trailing_zeros"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<usize as math::libm_math::support::int_traits::Int>::unsigned"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<usize as math::libm_math::support::int_traits::Int>::unsigned_abs"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<usize as math::libm_math::support::int_traits::Int>::wrapping_add"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<usize as math::libm_math::support::int_traits::Int>::wrapping_mul"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<usize as math::libm_math::support::int_traits::Int>::wrapping_neg"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<usize as math::libm_math::support::int_traits::Int>::wrapping_shl"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<usize as math::libm_math::support::int_traits::Int>::wrapping_shr"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<usize as math::libm_math::support::int_traits::Int>::wrapping_sub"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/mod.rs",
    "func": "math::libm_math::support::cold_path"
  },
  {
    "file": "compiler-builtins/libm/src/math/tan.rs",
    "func": "math::libm_math::tan::tan"
  },
  {
    "file": "compiler-builtins/libm/src/math/tanf.rs",
    "func": "math::libm_math::tanf::tanf"
  },
  {
    "file": "compiler-builtins/libm/src/math/tanh.rs",
    "func": "math::libm_math::tanh::tanh"
  },
  {
    "file": "compiler-builtins/libm/src/math/tanhf.rs",
    "func": "math::libm_math::tanhf::tanhf"
  },
  {
    "file": "compiler-builtins/libm/src/math/tgamma.rs",
    "func": "math::libm_math::tgamma::s"
  },
  {
    "file": "compiler-builtins/libm/src/math/tgamma.rs",
    "func": "math::libm_math::tgamma::sinpi"
  },
  {
    "file": "compiler-builtins/libm/src/math/tgamma.rs",
    "func": "math::libm_math::tgamma::tgamma"
  },
  {
    "file": "compiler-builtins/libm/src/math/tgammaf.rs",
    "func": "math::libm_math::tgammaf::tgammaf"
  },
  {
    "file": "compiler-builtins/libm/src/math/trunc.rs",
    "func": "math::libm_math::trunc::trunc"
  },
  {
    "file": "compiler-builtins/libm/src/math/trunc.rs",
    "func": "math::libm_math::trunc::truncf"
  },
  {
    "file": "compiler-builtins/libm/src/math/trunc.rs",
    "func": "math::libm_math::trunc::truncf128"
  },
  {
    "file": "compiler-builtins/libm/src/math/trunc.rs",
    "func": "math::libm_math::trunc::truncf16"
  },
  {
    "file": "core/src/alloc/layout.rs",
    "func": "alloc::layout::Layout::array::{closure#0}::{closure#1}::{closure#2}::inner"
  },
  {
    "file": "core/src/alloc/layout.rs",
    "func": "alloc::layout::Layout::array::{closure#2}::{closure#2}::inner"
  },
  {
    "file": "core/src/alloc/layout.rs",
    "func": "alloc::layout::Layout::array::{closure#3}::{closure#0}::inner"
  },
  {
    "file": "core/src/ptr/mod.rs",
    "func": "ptr::align_offset::{closure#0}::{closure#1}::{closure#1}::mod_inv"
  },
  {
    "file": "core/src/ptr/mod.rs",
    "func": "ptr::align_offset::{closure#2}::{closure#1}::mod_inv"
  },
  {
    "file": "core/src/ptr/mod.rs",
    "func": "ptr::align_offset::{closure#3}::{closure#0}::mod_inv"
  },
  {
    "file": "core/src/str/pattern.rs",
    "func": "str::pattern::verify::check_small_slice_eq"
  },
  {
    "file": "core/src/str/pattern.rs",
    "func": "str::pattern::verify::check_small_slice_eq_empty"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "alloc::layout::Layout::from_size_align_unchecked::{closure#0}::{closure#1}::{closure#3}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "alloc::layout::Layout::from_size_align_unchecked::{closure#2}::{closure#3}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "alloc::layout::Layout::from_size_align_unchecked::{closure#3}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "char::convert::from_u32_unchecked::{closure#0}::{closure#1}::{closure#1}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "char::convert::from_u32_unchecked::{closure#2}::{closure#1}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "char::convert::from_u32_unchecked::{closure#3}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "hint::assert_unchecked::{closure#0}::{closure#1}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "hint::assert_unchecked::{closure#2}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "hint::assert_unchecked::{closure#3}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "hint::unreachable_unchecked::{closure#0}::{closure#1}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "hint::unreachable_unchecked::{closure#2}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "hint::unreachable_unchecked::{closure#3}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i128>::unchecked_add::{closure#0}::{closure#1}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i128>::unchecked_add::{closure#2}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i128>::unchecked_add::{closure#3}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i128>::unchecked_mul::{closure#0}::{closure#1}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i128>::unchecked_mul::{closure#2}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i128>::unchecked_mul::{closure#3}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i128>::unchecked_neg::{closure#0}::{closure#1}::{closure#1}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i128>::unchecked_neg::{closure#2}::{closure#1}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i128>::unchecked_neg::{closure#3}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i128>::unchecked_shl::{closure#0}::{closure#1}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i128>::unchecked_shl::{closure#2}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i128>::unchecked_shl::{closure#3}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i128>::unchecked_shr::{closure#0}::{closure#1}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i128>::unchecked_shr::{closure#2}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i128>::unchecked_shr::{closure#3}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i128>::unchecked_sub::{closure#0}::{closure#1}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i128>::unchecked_sub::{closure#2}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i128>::unchecked_sub::{closure#3}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i16>::unchecked_add::{closure#0}::{closure#1}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i16>::unchecked_add::{closure#2}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i16>::unchecked_add::{closure#3}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i16>::unchecked_mul::{closure#0}::{closure#1}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i16>::unchecked_mul::{closure#2}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i16>::unchecked_mul::{closure#3}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i16>::unchecked_neg::{closure#0}::{closure#1}::{closure#1}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i16>::unchecked_neg::{closure#2}::{closure#1}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i16>::unchecked_neg::{closure#3}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i16>::unchecked_shl::{closure#0}::{closure#1}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i16>::unchecked_shl::{closure#2}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i16>::unchecked_shl::{closure#3}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i16>::unchecked_shr::{closure#0}::{closure#1}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i16>::unchecked_shr::{closure#2}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i16>::unchecked_shr::{closure#3}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i16>::unchecked_sub::{closure#0}::{closure#1}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i16>::unchecked_sub::{closure#2}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i16>::unchecked_sub::{closure#3}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i32>::unchecked_add::{closure#0}::{closure#1}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i32>::unchecked_add::{closure#2}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i32>::unchecked_add::{closure#3}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i32>::unchecked_mul::{closure#0}::{closure#1}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i32>::unchecked_mul::{closure#2}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i32>::unchecked_mul::{closure#3}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i32>::unchecked_neg::{closure#0}::{closure#1}::{closure#1}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i32>::unchecked_neg::{closure#2}::{closure#1}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i32>::unchecked_neg::{closure#3}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i32>::unchecked_shl::{closure#0}::{closure#1}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i32>::unchecked_shl::{closure#2}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i32>::unchecked_shl::{closure#3}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i32>::unchecked_shr::{closure#0}::{closure#1}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i32>::unchecked_shr::{closure#2}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i32>::unchecked_shr::{closure#3}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i32>::unchecked_sub::{closure#0}::{closure#1}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i32>::unchecked_sub::{closure#2}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i32>::unchecked_sub::{closure#3}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i64>::unchecked_add::{closure#0}::{closure#1}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i64>::unchecked_add::{closure#2}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i64>::unchecked_add::{closure#3}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i64>::unchecked_mul::{closure#0}::{closure#1}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i64>::unchecked_mul::{closure#2}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i64>::unchecked_mul::{closure#3}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i64>::unchecked_neg::{closure#0}::{closure#1}::{closure#1}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i64>::unchecked_neg::{closure#2}::{closure#1}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i64>::unchecked_neg::{closure#3}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i64>::unchecked_shl::{closure#0}::{closure#1}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i64>::unchecked_shl::{closure#2}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i64>::unchecked_shl::{closure#3}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i64>::unchecked_shr::{closure#0}::{closure#1}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i64>::unchecked_shr::{closure#2}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i64>::unchecked_shr::{closure#3}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i64>::unchecked_sub::{closure#0}::{closure#1}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i64>::unchecked_sub::{closure#2}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i64>::unchecked_sub::{closure#3}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i8>::unchecked_add::{closure#0}::{closure#1}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i8>::unchecked_add::{closure#2}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i8>::unchecked_add::{closure#3}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i8>::unchecked_mul::{closure#0}::{closure#1}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i8>::unchecked_mul::{closure#2}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i8>::unchecked_mul::{closure#3}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i8>::unchecked_neg::{closure#0}::{closure#1}::{closure#1}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i8>::unchecked_neg::{closure#2}::{closure#1}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i8>::unchecked_neg::{closure#3}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i8>::unchecked_shl::{closure#0}::{closure#1}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i8>::unchecked_shl::{closure#2}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i8>::unchecked_shl::{closure#3}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i8>::unchecked_shr::{closure#0}::{closure#1}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i8>::unchecked_shr::{closure#2}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i8>::unchecked_shr::{closure#3}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i8>::unchecked_sub::{closure#0}::{closure#1}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i8>::unchecked_sub::{closure#2}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i8>::unchecked_sub::{closure#3}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl isize>::unchecked_add::{closure#0}::{closure#1}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl isize>::unchecked_add::{closure#2}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl isize>::unchecked_add::{closure#3}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl isize>::unchecked_mul::{closure#0}::{closure#1}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl isize>::unchecked_mul::{closure#2}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl isize>::unchecked_mul::{closure#3}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl isize>::unchecked_neg::{closure#0}::{closure#1}::{closure#1}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl isize>::unchecked_neg::{closure#2}::{closure#1}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl isize>::unchecked_neg::{closure#3}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl isize>::unchecked_shl::{closure#0}::{closure#1}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl isize>::unchecked_shl::{closure#2}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl isize>::unchecked_shl::{closure#3}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl isize>::unchecked_shr::{closure#0}::{closure#1}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl isize>::unchecked_shr::{closure#2}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl isize>::unchecked_shr::{closure#3}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl isize>::unchecked_sub::{closure#0}::{closure#1}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl isize>::unchecked_sub::{closure#2}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl isize>::unchecked_sub::{closure#3}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u128>::unchecked_add::{closure#0}::{closure#1}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u128>::unchecked_add::{closure#2}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u128>::unchecked_add::{closure#3}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u128>::unchecked_disjoint_bitor::{closure#0}::{closure#1}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u128>::unchecked_disjoint_bitor::{closure#2}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u128>::unchecked_disjoint_bitor::{closure#3}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u128>::unchecked_mul::{closure#0}::{closure#1}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u128>::unchecked_mul::{closure#2}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u128>::unchecked_mul::{closure#3}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u128>::unchecked_shl::{closure#0}::{closure#1}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u128>::unchecked_shl::{closure#2}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u128>::unchecked_shl::{closure#3}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u128>::unchecked_shr::{closure#0}::{closure#1}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u128>::unchecked_shr::{closure#2}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u128>::unchecked_shr::{closure#3}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u128>::unchecked_sub::{closure#0}::{closure#1}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u128>::unchecked_sub::{closure#2}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u128>::unchecked_sub::{closure#3}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u16>::unchecked_add::{closure#0}::{closure#1}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u16>::unchecked_add::{closure#2}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u16>::unchecked_add::{closure#3}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u16>::unchecked_disjoint_bitor::{closure#0}::{closure#1}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u16>::unchecked_disjoint_bitor::{closure#2}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u16>::unchecked_disjoint_bitor::{closure#3}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u16>::unchecked_mul::{closure#0}::{closure#1}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u16>::unchecked_mul::{closure#2}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u16>::unchecked_mul::{closure#3}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u16>::unchecked_shl::{closure#0}::{closure#1}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u16>::unchecked_shl::{closure#2}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u16>::unchecked_shl::{closure#3}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u16>::unchecked_shr::{closure#0}::{closure#1}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u16>::unchecked_shr::{closure#2}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u16>::unchecked_shr::{closure#3}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u16>::unchecked_sub::{closure#0}::{closure#1}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u16>::unchecked_sub::{closure#2}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u16>::unchecked_sub::{closure#3}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u32>::unchecked_add::{closure#0}::{closure#1}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u32>::unchecked_add::{closure#2}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u32>::unchecked_add::{closure#3}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u32>::unchecked_disjoint_bitor::{closure#0}::{closure#1}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u32>::unchecked_disjoint_bitor::{closure#2}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u32>::unchecked_disjoint_bitor::{closure#3}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u32>::unchecked_mul::{closure#0}::{closure#1}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u32>::unchecked_mul::{closure#2}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u32>::unchecked_mul::{closure#3}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u32>::unchecked_shl::{closure#0}::{closure#1}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u32>::unchecked_shl::{closure#2}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u32>::unchecked_shl::{closure#3}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u32>::unchecked_shr::{closure#0}::{closure#1}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u32>::unchecked_shr::{closure#2}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u32>::unchecked_shr::{closure#3}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u32>::unchecked_sub::{closure#0}::{closure#1}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u32>::unchecked_sub::{closure#2}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u32>::unchecked_sub::{closure#3}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u64>::unchecked_add::{closure#0}::{closure#1}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u64>::unchecked_add::{closure#2}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u64>::unchecked_add::{closure#3}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u64>::unchecked_disjoint_bitor::{closure#0}::{closure#1}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u64>::unchecked_disjoint_bitor::{closure#2}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u64>::unchecked_disjoint_bitor::{closure#3}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u64>::unchecked_mul::{closure#0}::{closure#1}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u64>::unchecked_mul::{closure#2}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u64>::unchecked_mul::{closure#3}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u64>::unchecked_shl::{closure#0}::{closure#1}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u64>::unchecked_shl::{closure#2}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u64>::unchecked_shl::{closure#3}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u64>::unchecked_shr::{closure#0}::{closure#1}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u64>::unchecked_shr::{closure#2}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u64>::unchecked_shr::{closure#3}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u64>::unchecked_sub::{closure#0}::{closure#1}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u64>::unchecked_sub::{closure#2}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u64>::unchecked_sub::{closure#3}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u8>::unchecked_add::{closure#0}::{closure#1}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u8>::unchecked_add::{closure#2}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u8>::unchecked_add::{closure#3}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u8>::unchecked_disjoint_bitor::{closure#0}::{closure#1}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u8>::unchecked_disjoint_bitor::{closure#2}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u8>::unchecked_disjoint_bitor::{closure#3}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u8>::unchecked_mul::{closure#0}::{closure#1}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u8>::unchecked_mul::{closure#2}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u8>::unchecked_mul::{closure#3}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u8>::unchecked_shl::{closure#0}::{closure#1}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u8>::unchecked_shl::{closure#2}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u8>::unchecked_shl::{closure#3}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u8>::unchecked_shr::{closure#0}::{closure#1}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u8>::unchecked_shr::{closure#2}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u8>::unchecked_shr::{closure#3}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u8>::unchecked_sub::{closure#0}::{closure#1}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u8>::unchecked_sub::{closure#2}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u8>::unchecked_sub::{closure#3}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl usize>::unchecked_add::{closure#0}::{closure#1}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl usize>::unchecked_add::{closure#2}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl usize>::unchecked_add::{closure#3}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl usize>::unchecked_disjoint_bitor::{closure#0}::{closure#1}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl usize>::unchecked_disjoint_bitor::{closure#2}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl usize>::unchecked_disjoint_bitor::{closure#3}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl usize>::unchecked_mul::{closure#0}::{closure#1}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl usize>::unchecked_mul::{closure#2}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl usize>::unchecked_mul::{closure#3}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl usize>::unchecked_shl::{closure#0}::{closure#1}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl usize>::unchecked_shl::{closure#2}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl usize>::unchecked_shl::{closure#3}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl usize>::unchecked_shr::{closure#0}::{closure#1}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl usize>::unchecked_shr::{closure#2}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl usize>::unchecked_shr::{closure#3}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl usize>::unchecked_sub::{closure#0}::{closure#1}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl usize>::unchecked_sub::{closure#2}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl usize>::unchecked_sub::{closure#3}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::nonzero::NonZero::<T>::from_mut_unchecked::{closure#0}::{closure#1}::{closure#1}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::nonzero::NonZero::<T>::from_mut_unchecked::{closure#2}::{closure#1}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::nonzero::NonZero::<T>::from_mut_unchecked::{closure#3}::{closure#1}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::nonzero::NonZero::<T>::new_unchecked::{closure#0}::{closure#1}::{closure#2}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::nonzero::NonZero::<T>::new_unchecked::{closure#2}::{closure#2}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::nonzero::NonZero::<T>::new_unchecked::{closure#3}::{closure#1}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "ops::index_range::IndexRange::new_unchecked::{closure#0}::{closure#1}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "ops::index_range::IndexRange::new_unchecked::{closure#2}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "ops::index_range::IndexRange::new_unchecked::{closure#3}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "ptr::alignment::Alignment::new_unchecked::{closure#0}::{closure#1}::{closure#2}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "ptr::alignment::Alignment::new_unchecked::{closure#2}::{closure#2}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "ptr::alignment::Alignment::new_unchecked::{closure#3}::{closure#0}::precondition_check"
  },
  {
    "file": "portable-simd/crates/core_simd/src/masks.rs",
    "func": "core_simd::masks::<impl core_simd::masks::sealed::Sealed for i16>::eq"
  },
  {
    "file": "portable-simd/crates/core_simd/src/masks.rs",
    "func": "core_simd::masks::<impl core_simd::masks::sealed::Sealed for i16>::max_unsigned"
  },
  {
    "file": "portable-simd/crates/core_simd/src/masks.rs",
    "func": "core_simd::masks::<impl core_simd::masks::sealed::Sealed for i16>::to_usize"
  },
  {
    "file": "portable-simd/crates/core_simd/src/masks.rs",
    "func": "core_simd::masks::<impl core_simd::masks::sealed::Sealed for i32>::eq"
  },
  {
    "file": "portable-simd/crates/core_simd/src/masks.rs",
    "func": "core_simd::masks::<impl core_simd::masks::sealed::Sealed for i32>::max_unsigned"
  },
  {
    "file": "portable-simd/crates/core_simd/src/masks.rs",
    "func": "core_simd::masks::<impl core_simd::masks::sealed::Sealed for i32>::to_usize"
  },
  {
    "file": "portable-simd/crates/core_simd/src/masks.rs",
    "func": "core_simd::masks::<impl core_simd::masks::sealed::Sealed for i64>::eq"
  },
  {
    "file": "portable-simd/crates/core_simd/src/masks.rs",
    "func": "core_simd::masks::<impl core_simd::masks::sealed::Sealed for i64>::max_unsigned"
  },
  {
    "file": "portable-simd/crates/core_simd/src/masks.rs",
    "func": "core_simd::masks::<impl core_simd::masks::sealed::Sealed for i64>::to_usize"
  },
  {
    "file": "portable-simd/crates/core_simd/src/masks.rs",
    "func": "core_simd::masks::<impl core_simd::masks::sealed::Sealed for i8>::eq"
  },
  {
    "file": "portable-simd/crates/core_simd/src/masks.rs",
    "func": "core_simd::masks::<impl core_simd::masks::sealed::Sealed for i8>::max_unsigned"
  },
  {
    "file": "portable-simd/crates/core_simd/src/masks.rs",
    "func": "core_simd::masks::<impl core_simd::masks::sealed::Sealed for i8>::to_usize"
  },
  {
    "file": "portable-simd/crates/core_simd/src/masks.rs",
    "func": "core_simd::masks::<impl core_simd::masks::sealed::Sealed for isize>::eq"
  },
  {
    "file": "portable-simd/crates/core_simd/src/masks.rs",
    "func": "core_simd::masks::<impl core_simd::masks::sealed::Sealed for isize>::max_unsigned"
  },
  {
    "file": "portable-simd/crates/core_simd/src/masks.rs",
    "func": "core_simd::masks::<impl core_simd::masks::sealed::Sealed for isize>::to_usize"
  },
  {
    "file": "portable-simd/crates/core_simd/src/masks/full_masks.rs",
    "func": "<u16 as core_simd::masks::mask_impl::ReverseBits>::reverse_bits"
  },
  {
    "file": "portable-simd/crates/core_simd/src/masks/full_masks.rs",
    "func": "<u32 as core_simd::masks::mask_impl::ReverseBits>::reverse_bits"
  },
  {
    "file": "portable-simd/crates/core_simd/src/masks/full_masks.rs",
    "func": "<u64 as core_simd::masks::mask_impl::ReverseBits>::reverse_bits"
  },
  {
    "file": "portable-simd/crates/core_simd/src/masks/full_masks.rs",
    "func": "<u8 as core_simd::masks::mask_impl::ReverseBits>::reverse_bits"
  },
  {
    "file": "portable-simd/crates/core_simd/src/swizzle_dyn.rs",
    "func": "core_simd::swizzle_dyn::avx2_pshufb"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<f32, 16> as core_simd::to_bytes::ToBytes>::from_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<f32, 16> as core_simd::to_bytes::ToBytes>::from_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<f32, 16> as core_simd::to_bytes::ToBytes>::from_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<f32, 16> as core_simd::to_bytes::ToBytes>::to_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<f32, 16> as core_simd::to_bytes::ToBytes>::to_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<f32, 16> as core_simd::to_bytes::ToBytes>::to_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<f32, 1> as core_simd::to_bytes::ToBytes>::from_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<f32, 1> as core_simd::to_bytes::ToBytes>::from_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<f32, 1> as core_simd::to_bytes::ToBytes>::from_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<f32, 1> as core_simd::to_bytes::ToBytes>::to_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<f32, 1> as core_simd::to_bytes::ToBytes>::to_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<f32, 1> as core_simd::to_bytes::ToBytes>::to_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<f32, 2> as core_simd::to_bytes::ToBytes>::from_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<f32, 2> as core_simd::to_bytes::ToBytes>::from_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<f32, 2> as core_simd::to_bytes::ToBytes>::from_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<f32, 2> as core_simd::to_bytes::ToBytes>::to_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<f32, 2> as core_simd::to_bytes::ToBytes>::to_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<f32, 2> as core_simd::to_bytes::ToBytes>::to_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<f32, 4> as core_simd::to_bytes::ToBytes>::from_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<f32, 4> as core_simd::to_bytes::ToBytes>::from_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<f32, 4> as core_simd::to_bytes::ToBytes>::from_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<f32, 4> as core_simd::to_bytes::ToBytes>::to_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<f32, 4> as core_simd::to_bytes::ToBytes>::to_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<f32, 4> as core_simd::to_bytes::ToBytes>::to_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<f32, 8> as core_simd::to_bytes::ToBytes>::from_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<f32, 8> as core_simd::to_bytes::ToBytes>::from_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<f32, 8> as core_simd::to_bytes::ToBytes>::from_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<f32, 8> as core_simd::to_bytes::ToBytes>::to_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<f32, 8> as core_simd::to_bytes::ToBytes>::to_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<f32, 8> as core_simd::to_bytes::ToBytes>::to_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<f64, 1> as core_simd::to_bytes::ToBytes>::from_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<f64, 1> as core_simd::to_bytes::ToBytes>::from_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<f64, 1> as core_simd::to_bytes::ToBytes>::from_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<f64, 1> as core_simd::to_bytes::ToBytes>::to_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<f64, 1> as core_simd::to_bytes::ToBytes>::to_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<f64, 1> as core_simd::to_bytes::ToBytes>::to_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<f64, 2> as core_simd::to_bytes::ToBytes>::from_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<f64, 2> as core_simd::to_bytes::ToBytes>::from_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<f64, 2> as core_simd::to_bytes::ToBytes>::from_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<f64, 2> as core_simd::to_bytes::ToBytes>::to_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<f64, 2> as core_simd::to_bytes::ToBytes>::to_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<f64, 2> as core_simd::to_bytes::ToBytes>::to_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<f64, 4> as core_simd::to_bytes::ToBytes>::from_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<f64, 4> as core_simd::to_bytes::ToBytes>::from_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<f64, 4> as core_simd::to_bytes::ToBytes>::from_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<f64, 4> as core_simd::to_bytes::ToBytes>::to_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<f64, 4> as core_simd::to_bytes::ToBytes>::to_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<f64, 4> as core_simd::to_bytes::ToBytes>::to_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<f64, 8> as core_simd::to_bytes::ToBytes>::from_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<f64, 8> as core_simd::to_bytes::ToBytes>::from_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<f64, 8> as core_simd::to_bytes::ToBytes>::from_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<f64, 8> as core_simd::to_bytes::ToBytes>::to_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<f64, 8> as core_simd::to_bytes::ToBytes>::to_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<f64, 8> as core_simd::to_bytes::ToBytes>::to_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i16, 16> as core_simd::to_bytes::ToBytes>::from_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i16, 16> as core_simd::to_bytes::ToBytes>::from_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i16, 16> as core_simd::to_bytes::ToBytes>::from_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i16, 16> as core_simd::to_bytes::ToBytes>::to_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i16, 16> as core_simd::to_bytes::ToBytes>::to_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i16, 16> as core_simd::to_bytes::ToBytes>::to_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i16, 1> as core_simd::to_bytes::ToBytes>::from_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i16, 1> as core_simd::to_bytes::ToBytes>::from_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i16, 1> as core_simd::to_bytes::ToBytes>::from_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i16, 1> as core_simd::to_bytes::ToBytes>::to_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i16, 1> as core_simd::to_bytes::ToBytes>::to_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i16, 1> as core_simd::to_bytes::ToBytes>::to_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i16, 2> as core_simd::to_bytes::ToBytes>::from_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i16, 2> as core_simd::to_bytes::ToBytes>::from_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i16, 2> as core_simd::to_bytes::ToBytes>::from_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i16, 2> as core_simd::to_bytes::ToBytes>::to_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i16, 2> as core_simd::to_bytes::ToBytes>::to_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i16, 2> as core_simd::to_bytes::ToBytes>::to_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i16, 32> as core_simd::to_bytes::ToBytes>::from_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i16, 32> as core_simd::to_bytes::ToBytes>::from_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i16, 32> as core_simd::to_bytes::ToBytes>::from_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i16, 32> as core_simd::to_bytes::ToBytes>::to_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i16, 32> as core_simd::to_bytes::ToBytes>::to_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i16, 32> as core_simd::to_bytes::ToBytes>::to_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i16, 4> as core_simd::to_bytes::ToBytes>::from_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i16, 4> as core_simd::to_bytes::ToBytes>::from_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i16, 4> as core_simd::to_bytes::ToBytes>::from_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i16, 4> as core_simd::to_bytes::ToBytes>::to_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i16, 4> as core_simd::to_bytes::ToBytes>::to_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i16, 4> as core_simd::to_bytes::ToBytes>::to_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i16, 8> as core_simd::to_bytes::ToBytes>::from_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i16, 8> as core_simd::to_bytes::ToBytes>::from_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i16, 8> as core_simd::to_bytes::ToBytes>::from_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i16, 8> as core_simd::to_bytes::ToBytes>::to_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i16, 8> as core_simd::to_bytes::ToBytes>::to_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i16, 8> as core_simd::to_bytes::ToBytes>::to_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i32, 16> as core_simd::to_bytes::ToBytes>::from_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i32, 16> as core_simd::to_bytes::ToBytes>::from_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i32, 16> as core_simd::to_bytes::ToBytes>::from_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i32, 16> as core_simd::to_bytes::ToBytes>::to_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i32, 16> as core_simd::to_bytes::ToBytes>::to_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i32, 16> as core_simd::to_bytes::ToBytes>::to_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i32, 1> as core_simd::to_bytes::ToBytes>::from_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i32, 1> as core_simd::to_bytes::ToBytes>::from_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i32, 1> as core_simd::to_bytes::ToBytes>::from_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i32, 1> as core_simd::to_bytes::ToBytes>::to_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i32, 1> as core_simd::to_bytes::ToBytes>::to_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i32, 1> as core_simd::to_bytes::ToBytes>::to_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i32, 2> as core_simd::to_bytes::ToBytes>::from_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i32, 2> as core_simd::to_bytes::ToBytes>::from_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i32, 2> as core_simd::to_bytes::ToBytes>::from_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i32, 2> as core_simd::to_bytes::ToBytes>::to_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i32, 2> as core_simd::to_bytes::ToBytes>::to_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i32, 2> as core_simd::to_bytes::ToBytes>::to_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i32, 4> as core_simd::to_bytes::ToBytes>::from_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i32, 4> as core_simd::to_bytes::ToBytes>::from_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i32, 4> as core_simd::to_bytes::ToBytes>::from_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i32, 4> as core_simd::to_bytes::ToBytes>::to_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i32, 4> as core_simd::to_bytes::ToBytes>::to_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i32, 4> as core_simd::to_bytes::ToBytes>::to_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i32, 8> as core_simd::to_bytes::ToBytes>::from_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i32, 8> as core_simd::to_bytes::ToBytes>::from_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i32, 8> as core_simd::to_bytes::ToBytes>::from_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i32, 8> as core_simd::to_bytes::ToBytes>::to_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i32, 8> as core_simd::to_bytes::ToBytes>::to_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i32, 8> as core_simd::to_bytes::ToBytes>::to_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i64, 1> as core_simd::to_bytes::ToBytes>::from_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i64, 1> as core_simd::to_bytes::ToBytes>::from_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i64, 1> as core_simd::to_bytes::ToBytes>::from_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i64, 1> as core_simd::to_bytes::ToBytes>::to_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i64, 1> as core_simd::to_bytes::ToBytes>::to_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i64, 1> as core_simd::to_bytes::ToBytes>::to_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i64, 2> as core_simd::to_bytes::ToBytes>::from_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i64, 2> as core_simd::to_bytes::ToBytes>::from_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i64, 2> as core_simd::to_bytes::ToBytes>::from_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i64, 2> as core_simd::to_bytes::ToBytes>::to_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i64, 2> as core_simd::to_bytes::ToBytes>::to_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i64, 2> as core_simd::to_bytes::ToBytes>::to_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i64, 4> as core_simd::to_bytes::ToBytes>::from_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i64, 4> as core_simd::to_bytes::ToBytes>::from_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i64, 4> as core_simd::to_bytes::ToBytes>::from_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i64, 4> as core_simd::to_bytes::ToBytes>::to_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i64, 4> as core_simd::to_bytes::ToBytes>::to_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i64, 4> as core_simd::to_bytes::ToBytes>::to_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i64, 8> as core_simd::to_bytes::ToBytes>::from_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i64, 8> as core_simd::to_bytes::ToBytes>::from_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i64, 8> as core_simd::to_bytes::ToBytes>::from_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i64, 8> as core_simd::to_bytes::ToBytes>::to_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i64, 8> as core_simd::to_bytes::ToBytes>::to_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i64, 8> as core_simd::to_bytes::ToBytes>::to_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i8, 16> as core_simd::to_bytes::ToBytes>::from_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i8, 16> as core_simd::to_bytes::ToBytes>::from_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i8, 16> as core_simd::to_bytes::ToBytes>::from_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i8, 16> as core_simd::to_bytes::ToBytes>::to_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i8, 16> as core_simd::to_bytes::ToBytes>::to_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i8, 16> as core_simd::to_bytes::ToBytes>::to_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i8, 1> as core_simd::to_bytes::ToBytes>::from_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i8, 1> as core_simd::to_bytes::ToBytes>::from_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i8, 1> as core_simd::to_bytes::ToBytes>::from_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i8, 1> as core_simd::to_bytes::ToBytes>::to_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i8, 1> as core_simd::to_bytes::ToBytes>::to_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i8, 1> as core_simd::to_bytes::ToBytes>::to_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i8, 2> as core_simd::to_bytes::ToBytes>::from_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i8, 2> as core_simd::to_bytes::ToBytes>::from_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i8, 2> as core_simd::to_bytes::ToBytes>::from_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i8, 2> as core_simd::to_bytes::ToBytes>::to_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i8, 2> as core_simd::to_bytes::ToBytes>::to_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i8, 2> as core_simd::to_bytes::ToBytes>::to_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i8, 32> as core_simd::to_bytes::ToBytes>::from_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i8, 32> as core_simd::to_bytes::ToBytes>::from_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i8, 32> as core_simd::to_bytes::ToBytes>::from_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i8, 32> as core_simd::to_bytes::ToBytes>::to_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i8, 32> as core_simd::to_bytes::ToBytes>::to_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i8, 32> as core_simd::to_bytes::ToBytes>::to_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i8, 4> as core_simd::to_bytes::ToBytes>::from_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i8, 4> as core_simd::to_bytes::ToBytes>::from_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i8, 4> as core_simd::to_bytes::ToBytes>::from_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i8, 4> as core_simd::to_bytes::ToBytes>::to_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i8, 4> as core_simd::to_bytes::ToBytes>::to_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i8, 4> as core_simd::to_bytes::ToBytes>::to_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i8, 64> as core_simd::to_bytes::ToBytes>::from_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i8, 64> as core_simd::to_bytes::ToBytes>::from_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i8, 64> as core_simd::to_bytes::ToBytes>::from_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i8, 64> as core_simd::to_bytes::ToBytes>::to_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i8, 64> as core_simd::to_bytes::ToBytes>::to_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i8, 64> as core_simd::to_bytes::ToBytes>::to_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i8, 8> as core_simd::to_bytes::ToBytes>::from_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i8, 8> as core_simd::to_bytes::ToBytes>::from_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i8, 8> as core_simd::to_bytes::ToBytes>::from_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i8, 8> as core_simd::to_bytes::ToBytes>::to_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i8, 8> as core_simd::to_bytes::ToBytes>::to_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i8, 8> as core_simd::to_bytes::ToBytes>::to_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<isize, 1> as core_simd::to_bytes::ToBytes>::from_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<isize, 1> as core_simd::to_bytes::ToBytes>::from_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<isize, 1> as core_simd::to_bytes::ToBytes>::from_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<isize, 1> as core_simd::to_bytes::ToBytes>::to_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<isize, 1> as core_simd::to_bytes::ToBytes>::to_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<isize, 1> as core_simd::to_bytes::ToBytes>::to_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<isize, 2> as core_simd::to_bytes::ToBytes>::from_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<isize, 2> as core_simd::to_bytes::ToBytes>::from_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<isize, 2> as core_simd::to_bytes::ToBytes>::from_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<isize, 2> as core_simd::to_bytes::ToBytes>::to_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<isize, 2> as core_simd::to_bytes::ToBytes>::to_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<isize, 2> as core_simd::to_bytes::ToBytes>::to_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<isize, 4> as core_simd::to_bytes::ToBytes>::from_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<isize, 4> as core_simd::to_bytes::ToBytes>::from_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<isize, 4> as core_simd::to_bytes::ToBytes>::from_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<isize, 4> as core_simd::to_bytes::ToBytes>::to_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<isize, 4> as core_simd::to_bytes::ToBytes>::to_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<isize, 4> as core_simd::to_bytes::ToBytes>::to_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<isize, 8> as core_simd::to_bytes::ToBytes>::from_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<isize, 8> as core_simd::to_bytes::ToBytes>::from_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<isize, 8> as core_simd::to_bytes::ToBytes>::from_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<isize, 8> as core_simd::to_bytes::ToBytes>::to_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<isize, 8> as core_simd::to_bytes::ToBytes>::to_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<isize, 8> as core_simd::to_bytes::ToBytes>::to_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u16, 16> as core_simd::to_bytes::ToBytes>::from_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u16, 16> as core_simd::to_bytes::ToBytes>::from_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u16, 16> as core_simd::to_bytes::ToBytes>::from_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u16, 16> as core_simd::to_bytes::ToBytes>::to_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u16, 16> as core_simd::to_bytes::ToBytes>::to_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u16, 16> as core_simd::to_bytes::ToBytes>::to_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u16, 1> as core_simd::to_bytes::ToBytes>::from_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u16, 1> as core_simd::to_bytes::ToBytes>::from_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u16, 1> as core_simd::to_bytes::ToBytes>::from_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u16, 1> as core_simd::to_bytes::ToBytes>::to_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u16, 1> as core_simd::to_bytes::ToBytes>::to_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u16, 1> as core_simd::to_bytes::ToBytes>::to_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u16, 2> as core_simd::to_bytes::ToBytes>::from_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u16, 2> as core_simd::to_bytes::ToBytes>::from_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u16, 2> as core_simd::to_bytes::ToBytes>::from_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u16, 2> as core_simd::to_bytes::ToBytes>::to_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u16, 2> as core_simd::to_bytes::ToBytes>::to_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u16, 2> as core_simd::to_bytes::ToBytes>::to_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u16, 32> as core_simd::to_bytes::ToBytes>::from_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u16, 32> as core_simd::to_bytes::ToBytes>::from_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u16, 32> as core_simd::to_bytes::ToBytes>::from_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u16, 32> as core_simd::to_bytes::ToBytes>::to_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u16, 32> as core_simd::to_bytes::ToBytes>::to_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u16, 32> as core_simd::to_bytes::ToBytes>::to_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u16, 4> as core_simd::to_bytes::ToBytes>::from_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u16, 4> as core_simd::to_bytes::ToBytes>::from_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u16, 4> as core_simd::to_bytes::ToBytes>::from_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u16, 4> as core_simd::to_bytes::ToBytes>::to_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u16, 4> as core_simd::to_bytes::ToBytes>::to_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u16, 4> as core_simd::to_bytes::ToBytes>::to_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u16, 8> as core_simd::to_bytes::ToBytes>::from_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u16, 8> as core_simd::to_bytes::ToBytes>::from_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u16, 8> as core_simd::to_bytes::ToBytes>::from_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u16, 8> as core_simd::to_bytes::ToBytes>::to_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u16, 8> as core_simd::to_bytes::ToBytes>::to_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u16, 8> as core_simd::to_bytes::ToBytes>::to_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u32, 16> as core_simd::to_bytes::ToBytes>::from_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u32, 16> as core_simd::to_bytes::ToBytes>::from_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u32, 16> as core_simd::to_bytes::ToBytes>::from_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u32, 16> as core_simd::to_bytes::ToBytes>::to_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u32, 16> as core_simd::to_bytes::ToBytes>::to_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u32, 16> as core_simd::to_bytes::ToBytes>::to_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u32, 1> as core_simd::to_bytes::ToBytes>::from_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u32, 1> as core_simd::to_bytes::ToBytes>::from_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u32, 1> as core_simd::to_bytes::ToBytes>::from_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u32, 1> as core_simd::to_bytes::ToBytes>::to_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u32, 1> as core_simd::to_bytes::ToBytes>::to_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u32, 1> as core_simd::to_bytes::ToBytes>::to_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u32, 2> as core_simd::to_bytes::ToBytes>::from_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u32, 2> as core_simd::to_bytes::ToBytes>::from_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u32, 2> as core_simd::to_bytes::ToBytes>::from_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u32, 2> as core_simd::to_bytes::ToBytes>::to_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u32, 2> as core_simd::to_bytes::ToBytes>::to_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u32, 2> as core_simd::to_bytes::ToBytes>::to_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u32, 4> as core_simd::to_bytes::ToBytes>::from_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u32, 4> as core_simd::to_bytes::ToBytes>::from_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u32, 4> as core_simd::to_bytes::ToBytes>::from_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u32, 4> as core_simd::to_bytes::ToBytes>::to_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u32, 4> as core_simd::to_bytes::ToBytes>::to_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u32, 4> as core_simd::to_bytes::ToBytes>::to_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u32, 8> as core_simd::to_bytes::ToBytes>::from_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u32, 8> as core_simd::to_bytes::ToBytes>::from_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u32, 8> as core_simd::to_bytes::ToBytes>::from_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u32, 8> as core_simd::to_bytes::ToBytes>::to_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u32, 8> as core_simd::to_bytes::ToBytes>::to_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u32, 8> as core_simd::to_bytes::ToBytes>::to_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u64, 1> as core_simd::to_bytes::ToBytes>::from_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u64, 1> as core_simd::to_bytes::ToBytes>::from_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u64, 1> as core_simd::to_bytes::ToBytes>::from_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u64, 1> as core_simd::to_bytes::ToBytes>::to_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u64, 1> as core_simd::to_bytes::ToBytes>::to_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u64, 1> as core_simd::to_bytes::ToBytes>::to_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u64, 2> as core_simd::to_bytes::ToBytes>::from_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u64, 2> as core_simd::to_bytes::ToBytes>::from_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u64, 2> as core_simd::to_bytes::ToBytes>::from_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u64, 2> as core_simd::to_bytes::ToBytes>::to_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u64, 2> as core_simd::to_bytes::ToBytes>::to_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u64, 2> as core_simd::to_bytes::ToBytes>::to_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u64, 4> as core_simd::to_bytes::ToBytes>::from_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u64, 4> as core_simd::to_bytes::ToBytes>::from_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u64, 4> as core_simd::to_bytes::ToBytes>::from_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u64, 4> as core_simd::to_bytes::ToBytes>::to_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u64, 4> as core_simd::to_bytes::ToBytes>::to_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u64, 4> as core_simd::to_bytes::ToBytes>::to_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u64, 8> as core_simd::to_bytes::ToBytes>::from_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u64, 8> as core_simd::to_bytes::ToBytes>::from_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u64, 8> as core_simd::to_bytes::ToBytes>::from_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u64, 8> as core_simd::to_bytes::ToBytes>::to_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u64, 8> as core_simd::to_bytes::ToBytes>::to_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u64, 8> as core_simd::to_bytes::ToBytes>::to_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u8, 16> as core_simd::to_bytes::ToBytes>::from_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u8, 16> as core_simd::to_bytes::ToBytes>::from_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u8, 16> as core_simd::to_bytes::ToBytes>::from_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u8, 16> as core_simd::to_bytes::ToBytes>::to_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u8, 16> as core_simd::to_bytes::ToBytes>::to_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u8, 16> as core_simd::to_bytes::ToBytes>::to_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u8, 1> as core_simd::to_bytes::ToBytes>::from_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u8, 1> as core_simd::to_bytes::ToBytes>::from_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u8, 1> as core_simd::to_bytes::ToBytes>::from_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u8, 1> as core_simd::to_bytes::ToBytes>::to_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u8, 1> as core_simd::to_bytes::ToBytes>::to_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u8, 1> as core_simd::to_bytes::ToBytes>::to_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u8, 2> as core_simd::to_bytes::ToBytes>::from_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u8, 2> as core_simd::to_bytes::ToBytes>::from_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u8, 2> as core_simd::to_bytes::ToBytes>::from_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u8, 2> as core_simd::to_bytes::ToBytes>::to_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u8, 2> as core_simd::to_bytes::ToBytes>::to_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u8, 2> as core_simd::to_bytes::ToBytes>::to_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u8, 32> as core_simd::to_bytes::ToBytes>::from_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u8, 32> as core_simd::to_bytes::ToBytes>::from_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u8, 32> as core_simd::to_bytes::ToBytes>::from_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u8, 32> as core_simd::to_bytes::ToBytes>::to_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u8, 32> as core_simd::to_bytes::ToBytes>::to_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u8, 32> as core_simd::to_bytes::ToBytes>::to_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u8, 4> as core_simd::to_bytes::ToBytes>::from_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u8, 4> as core_simd::to_bytes::ToBytes>::from_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u8, 4> as core_simd::to_bytes::ToBytes>::from_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u8, 4> as core_simd::to_bytes::ToBytes>::to_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u8, 4> as core_simd::to_bytes::ToBytes>::to_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u8, 4> as core_simd::to_bytes::ToBytes>::to_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u8, 64> as core_simd::to_bytes::ToBytes>::from_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u8, 64> as core_simd::to_bytes::ToBytes>::from_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u8, 64> as core_simd::to_bytes::ToBytes>::from_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u8, 64> as core_simd::to_bytes::ToBytes>::to_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u8, 64> as core_simd::to_bytes::ToBytes>::to_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u8, 64> as core_simd::to_bytes::ToBytes>::to_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u8, 8> as core_simd::to_bytes::ToBytes>::from_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u8, 8> as core_simd::to_bytes::ToBytes>::from_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u8, 8> as core_simd::to_bytes::ToBytes>::from_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u8, 8> as core_simd::to_bytes::ToBytes>::to_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u8, 8> as core_simd::to_bytes::ToBytes>::to_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u8, 8> as core_simd::to_bytes::ToBytes>::to_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<usize, 1> as core_simd::to_bytes::ToBytes>::from_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<usize, 1> as core_simd::to_bytes::ToBytes>::from_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<usize, 1> as core_simd::to_bytes::ToBytes>::from_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<usize, 1> as core_simd::to_bytes::ToBytes>::to_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<usize, 1> as core_simd::to_bytes::ToBytes>::to_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<usize, 1> as core_simd::to_bytes::ToBytes>::to_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<usize, 2> as core_simd::to_bytes::ToBytes>::from_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<usize, 2> as core_simd::to_bytes::ToBytes>::from_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<usize, 2> as core_simd::to_bytes::ToBytes>::from_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<usize, 2> as core_simd::to_bytes::ToBytes>::to_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<usize, 2> as core_simd::to_bytes::ToBytes>::to_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<usize, 2> as core_simd::to_bytes::ToBytes>::to_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<usize, 4> as core_simd::to_bytes::ToBytes>::from_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<usize, 4> as core_simd::to_bytes::ToBytes>::from_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<usize, 4> as core_simd::to_bytes::ToBytes>::from_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<usize, 4> as core_simd::to_bytes::ToBytes>::to_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<usize, 4> as core_simd::to_bytes::ToBytes>::to_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<usize, 4> as core_simd::to_bytes::ToBytes>::to_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<usize, 8> as core_simd::to_bytes::ToBytes>::from_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<usize, 8> as core_simd::to_bytes::ToBytes>::from_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<usize, 8> as core_simd::to_bytes::ToBytes>::from_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<usize, 8> as core_simd::to_bytes::ToBytes>::to_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<usize, 8> as core_simd::to_bytes::ToBytes>::to_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<usize, 8> as core_simd::to_bytes::ToBytes>::to_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/vendor.rs",
    "func": "core_simd::vendor::x86::<impl convert::From<core_arch::x86::__m128> for core_simd::vector::Simd<f32, 4>>::from"
  },
  {
    "file": "portable-simd/crates/core_simd/src/vendor.rs",
    "func": "core_simd::vendor::x86::<impl convert::From<core_arch::x86::__m128d> for core_simd::vector::Simd<f64, 2>>::from"
  },
  {
    "file": "portable-simd/crates/core_simd/src/vendor.rs",
    "func": "core_simd::vendor::x86::<impl convert::From<core_arch::x86::__m128i> for core_simd::vector::Simd<i16, 8>>::from"
  },
  {
    "file": "portable-simd/crates/core_simd/src/vendor.rs",
    "func": "core_simd::vendor::x86::<impl convert::From<core_arch::x86::__m128i> for core_simd::vector::Simd<i32, 4>>::from"
  },
  {
    "file": "portable-simd/crates/core_simd/src/vendor.rs",
    "func": "core_simd::vendor::x86::<impl convert::From<core_arch::x86::__m128i> for core_simd::vector::Simd<i64, 2>>::from"
  },
  {
    "file": "portable-simd/crates/core_simd/src/vendor.rs",
    "func": "core_simd::vendor::x86::<impl convert::From<core_arch::x86::__m128i> for core_simd::vector::Simd<i8, 16>>::from"
  },
  {
    "file": "portable-simd/crates/core_simd/src/vendor.rs",
    "func": "core_simd::vendor::x86::<impl convert::From<core_arch::x86::__m128i> for core_simd::vector::Simd<u16, 8>>::from"
  },
  {
    "file": "portable-simd/crates/core_simd/src/vendor.rs",
    "func": "core_simd::vendor::x86::<impl convert::From<core_arch::x86::__m128i> for core_simd::vector::Simd<u32, 4>>::from"
  },
  {
    "file": "portable-simd/crates/core_simd/src/vendor.rs",
    "func": "core_simd::vendor::x86::<impl convert::From<core_arch::x86::__m128i> for core_simd::vector::Simd<u64, 2>>::from"
  },
  {
    "file": "portable-simd/crates/core_simd/src/vendor.rs",
    "func": "core_simd::vendor::x86::<impl convert::From<core_arch::x86::__m128i> for core_simd::vector::Simd<u8, 16>>::from"
  },
  {
    "file": "portable-simd/crates/core_simd/src/vendor.rs",
    "func": "core_simd::vendor::x86::<impl convert::From<core_arch::x86::__m256> for core_simd::vector::Simd<f32, 8>>::from"
  },
  {
    "file": "portable-simd/crates/core_simd/src/vendor.rs",
    "func": "core_simd::vendor::x86::<impl convert::From<core_arch::x86::__m256d> for core_simd::vector::Simd<f64, 4>>::from"
  },
  {
    "file": "portable-simd/crates/core_simd/src/vendor.rs",
    "func": "core_simd::vendor::x86::<impl convert::From<core_arch::x86::__m256i> for core_simd::vector::Simd<i16, 16>>::from"
  },
  {
    "file": "portable-simd/crates/core_simd/src/vendor.rs",
    "func": "core_simd::vendor::x86::<impl convert::From<core_arch::x86::__m256i> for core_simd::vector::Simd<i32, 8>>::from"
  },
  {
    "file": "portable-simd/crates/core_simd/src/vendor.rs",
    "func": "core_simd::vendor::x86::<impl convert::From<core_arch::x86::__m256i> for core_simd::vector::Simd<i64, 4>>::from"
  },
  {
    "file": "portable-simd/crates/core_simd/src/vendor.rs",
    "func": "core_simd::vendor::x86::<impl convert::From<core_arch::x86::__m256i> for core_simd::vector::Simd<i8, 32>>::from"
  },
  {
    "file": "portable-simd/crates/core_simd/src/vendor.rs",
    "func": "core_simd::vendor::x86::<impl convert::From<core_arch::x86::__m256i> for core_simd::vector::Simd<u16, 16>>::from"
  },
  {
    "file": "portable-simd/crates/core_simd/src/vendor.rs",
    "func": "core_simd::vendor::x86::<impl convert::From<core_arch::x86::__m256i> for core_simd::vector::Simd<u32, 8>>::from"
  },
  {
    "file": "portable-simd/crates/core_simd/src/vendor.rs",
    "func": "core_simd::vendor::x86::<impl convert::From<core_arch::x86::__m256i> for core_simd::vector::Simd<u64, 4>>::from"
  },
  {
    "file": "portable-simd/crates/core_simd/src/vendor.rs",
    "func": "core_simd::vendor::x86::<impl convert::From<core_arch::x86::__m256i> for core_simd::vector::Simd<u8, 32>>::from"
  },
  {
    "file": "portable-simd/crates/core_simd/src/vendor.rs",
    "func": "core_simd::vendor::x86::<impl convert::From<core_arch::x86::__m512> for core_simd::vector::Simd<f32, 16>>::from"
  },
  {
    "file": "portable-simd/crates/core_simd/src/vendor.rs",
    "func": "core_simd::vendor::x86::<impl convert::From<core_arch::x86::__m512d> for core_simd::vector::Simd<f64, 8>>::from"
  },
  {
    "file": "portable-simd/crates/core_simd/src/vendor.rs",
    "func": "core_simd::vendor::x86::<impl convert::From<core_arch::x86::__m512i> for core_simd::vector::Simd<i16, 32>>::from"
  },
  {
    "file": "portable-simd/crates/core_simd/src/vendor.rs",
    "func": "core_simd::vendor::x86::<impl convert::From<core_arch::x86::__m512i> for core_simd::vector::Simd<i32, 16>>::from"
  },
  {
    "file": "portable-simd/crates/core_simd/src/vendor.rs",
    "func": "core_simd::vendor::x86::<impl convert::From<core_arch::x86::__m512i> for core_simd::vector::Simd<i64, 8>>::from"
  },
  {
    "file": "portable-simd/crates/core_simd/src/vendor.rs",
    "func": "core_simd::vendor::x86::<impl convert::From<core_arch::x86::__m512i> for core_simd::vector::Simd<i8, 64>>::from"
  },
  {
    "file": "portable-simd/crates/core_simd/src/vendor.rs",
    "func": "core_simd::vendor::x86::<impl convert::From<core_arch::x86::__m512i> for core_simd::vector::Simd<u16, 32>>::from"
  },
  {
    "file": "portable-simd/crates/core_simd/src/vendor.rs",
    "func": "core_simd::vendor::x86::<impl convert::From<core_arch::x86::__m512i> for core_simd::vector::Simd<u32, 16>>::from"
  },
  {
    "file": "portable-simd/crates/core_simd/src/vendor.rs",
    "func": "core_simd::vendor::x86::<impl convert::From<core_arch::x86::__m512i> for core_simd::vector::Simd<u64, 8>>::from"
  },
  {
    "file": "portable-simd/crates/core_simd/src/vendor.rs",
    "func": "core_simd::vendor::x86::<impl convert::From<core_arch::x86::__m512i> for core_simd::vector::Simd<u8, 64>>::from"
  },
  {
    "file": "portable-simd/crates/core_simd/src/vendor.rs",
    "func": "core_simd::vendor::x86::<impl convert::From<core_simd::vector::Simd<f32, 16>> for core_arch::x86::__m512>::from"
  },
  {
    "file": "portable-simd/crates/core_simd/src/vendor.rs",
    "func": "core_simd::vendor::x86::<impl convert::From<core_simd::vector::Simd<f32, 4>> for core_arch::x86::__m128>::from"
  },
  {
    "file": "portable-simd/crates/core_simd/src/vendor.rs",
    "func": "core_simd::vendor::x86::<impl convert::From<core_simd::vector::Simd<f32, 8>> for core_arch::x86::__m256>::from"
  },
  {
    "file": "portable-simd/crates/core_simd/src/vendor.rs",
    "func": "core_simd::vendor::x86::<impl convert::From<core_simd::vector::Simd<f64, 2>> for core_arch::x86::__m128d>::from"
  },
  {
    "file": "portable-simd/crates/core_simd/src/vendor.rs",
    "func": "core_simd::vendor::x86::<impl convert::From<core_simd::vector::Simd<f64, 4>> for core_arch::x86::__m256d>::from"
  },
  {
    "file": "portable-simd/crates/core_simd/src/vendor.rs",
    "func": "core_simd::vendor::x86::<impl convert::From<core_simd::vector::Simd<f64, 8>> for core_arch::x86::__m512d>::from"
  },
  {
    "file": "portable-simd/crates/core_simd/src/vendor.rs",
    "func": "core_simd::vendor::x86::<impl convert::From<core_simd::vector::Simd<i16, 16>> for core_arch::x86::__m256i>::from"
  },
  {
    "file": "portable-simd/crates/core_simd/src/vendor.rs",
    "func": "core_simd::vendor::x86::<impl convert::From<core_simd::vector::Simd<i16, 32>> for core_arch::x86::__m512i>::from"
  },
  {
    "file": "portable-simd/crates/core_simd/src/vendor.rs",
    "func": "core_simd::vendor::x86::<impl convert::From<core_simd::vector::Simd<i16, 8>> for core_arch::x86::__m128i>::from"
  },
  {
    "file": "portable-simd/crates/core_simd/src/vendor.rs",
    "func": "core_simd::vendor::x86::<impl convert::From<core_simd::vector::Simd<i32, 16>> for core_arch::x86::__m512i>::from"
  },
  {
    "file": "portable-simd/crates/core_simd/src/vendor.rs",
    "func": "core_simd::vendor::x86::<impl convert::From<core_simd::vector::Simd<i32, 4>> for core_arch::x86::__m128i>::from"
  },
  {
    "file": "portable-simd/crates/core_simd/src/vendor.rs",
    "func": "core_simd::vendor::x86::<impl convert::From<core_simd::vector::Simd<i32, 8>> for core_arch::x86::__m256i>::from"
  },
  {
    "file": "portable-simd/crates/core_simd/src/vendor.rs",
    "func": "core_simd::vendor::x86::<impl convert::From<core_simd::vector::Simd<i64, 2>> for core_arch::x86::__m128i>::from"
  },
  {
    "file": "portable-simd/crates/core_simd/src/vendor.rs",
    "func": "core_simd::vendor::x86::<impl convert::From<core_simd::vector::Simd<i64, 4>> for core_arch::x86::__m256i>::from"
  },
  {
    "file": "portable-simd/crates/core_simd/src/vendor.rs",
    "func": "core_simd::vendor::x86::<impl convert::From<core_simd::vector::Simd<i64, 8>> for core_arch::x86::__m512i>::from"
  },
  {
    "file": "portable-simd/crates/core_simd/src/vendor.rs",
    "func": "core_simd::vendor::x86::<impl convert::From<core_simd::vector::Simd<i8, 16>> for core_arch::x86::__m128i>::from"
  },
  {
    "file": "portable-simd/crates/core_simd/src/vendor.rs",
    "func": "core_simd::vendor::x86::<impl convert::From<core_simd::vector::Simd<i8, 32>> for core_arch::x86::__m256i>::from"
  },
  {
    "file": "portable-simd/crates/core_simd/src/vendor.rs",
    "func": "core_simd::vendor::x86::<impl convert::From<core_simd::vector::Simd<i8, 64>> for core_arch::x86::__m512i>::from"
  },
  {
    "file": "portable-simd/crates/core_simd/src/vendor.rs",
    "func": "core_simd::vendor::x86::<impl convert::From<core_simd::vector::Simd<u16, 16>> for core_arch::x86::__m256i>::from"
  },
  {
    "file": "portable-simd/crates/core_simd/src/vendor.rs",
    "func": "core_simd::vendor::x86::<impl convert::From<core_simd::vector::Simd<u16, 32>> for core_arch::x86::__m512i>::from"
  },
  {
    "file": "portable-simd/crates/core_simd/src/vendor.rs",
    "func": "core_simd::vendor::x86::<impl convert::From<core_simd::vector::Simd<u16, 8>> for core_arch::x86::__m128i>::from"
  },
  {
    "file": "portable-simd/crates/core_simd/src/vendor.rs",
    "func": "core_simd::vendor::x86::<impl convert::From<core_simd::vector::Simd<u32, 16>> for core_arch::x86::__m512i>::from"
  },
  {
    "file": "portable-simd/crates/core_simd/src/vendor.rs",
    "func": "core_simd::vendor::x86::<impl convert::From<core_simd::vector::Simd<u32, 4>> for core_arch::x86::__m128i>::from"
  },
  {
    "file": "portable-simd/crates/core_simd/src/vendor.rs",
    "func": "core_simd::vendor::x86::<impl convert::From<core_simd::vector::Simd<u32, 8>> for core_arch::x86::__m256i>::from"
  },
  {
    "file": "portable-simd/crates/core_simd/src/vendor.rs",
    "func": "core_simd::vendor::x86::<impl convert::From<core_simd::vector::Simd<u64, 2>> for core_arch::x86::__m128i>::from"
  },
  {
    "file": "portable-simd/crates/core_simd/src/vendor.rs",
    "func": "core_simd::vendor::x86::<impl convert::From<core_simd::vector::Simd<u64, 4>> for core_arch::x86::__m256i>::from"
  },
  {
    "file": "portable-simd/crates/core_simd/src/vendor.rs",
    "func": "core_simd::vendor::x86::<impl convert::From<core_simd::vector::Simd<u64, 8>> for core_arch::x86::__m512i>::from"
  },
  {
    "file": "portable-simd/crates/core_simd/src/vendor.rs",
    "func": "core_simd::vendor::x86::<impl convert::From<core_simd::vector::Simd<u8, 16>> for core_arch::x86::__m128i>::from"
  },
  {
    "file": "portable-simd/crates/core_simd/src/vendor.rs",
    "func": "core_simd::vendor::x86::<impl convert::From<core_simd::vector::Simd<u8, 32>> for core_arch::x86::__m256i>::from"
  },
  {
    "file": "portable-simd/crates/core_simd/src/vendor.rs",
    "func": "core_simd::vendor::x86::<impl convert::From<core_simd::vector::Simd<u8, 64>> for core_arch::x86::__m512i>::from"
  },
  {
    "file": "portable-simd/crates/core_simd/src/vendor.rs",
    "func": "core_simd::vendor::x86::p64::<impl convert::From<core_arch::x86::__m128i> for core_simd::vector::Simd<isize, 2>>::from"
  },
  {
    "file": "portable-simd/crates/core_simd/src/vendor.rs",
    "func": "core_simd::vendor::x86::p64::<impl convert::From<core_arch::x86::__m128i> for core_simd::vector::Simd<usize, 2>>::from"
  },
  {
    "file": "portable-simd/crates/core_simd/src/vendor.rs",
    "func": "core_simd::vendor::x86::p64::<impl convert::From<core_arch::x86::__m256i> for core_simd::vector::Simd<isize, 4>>::from"
  },
  {
    "file": "portable-simd/crates/core_simd/src/vendor.rs",
    "func": "core_simd::vendor::x86::p64::<impl convert::From<core_arch::x86::__m256i> for core_simd::vector::Simd<usize, 4>>::from"
  },
  {
    "file": "portable-simd/crates/core_simd/src/vendor.rs",
    "func": "core_simd::vendor::x86::p64::<impl convert::From<core_arch::x86::__m512i> for core_simd::vector::Simd<isize, 8>>::from"
  },
  {
    "file": "portable-simd/crates/core_simd/src/vendor.rs",
    "func": "core_simd::vendor::x86::p64::<impl convert::From<core_arch::x86::__m512i> for core_simd::vector::Simd<usize, 8>>::from"
  },
  {
    "file": "portable-simd/crates/core_simd/src/vendor.rs",
    "func": "core_simd::vendor::x86::p64::<impl convert::From<core_simd::vector::Simd<isize, 2>> for core_arch::x86::__m128i>::from"
  },
  {
    "file": "portable-simd/crates/core_simd/src/vendor.rs",
    "func": "core_simd::vendor::x86::p64::<impl convert::From<core_simd::vector::Simd<isize, 4>> for core_arch::x86::__m256i>::from"
  },
  {
    "file": "portable-simd/crates/core_simd/src/vendor.rs",
    "func": "core_simd::vendor::x86::p64::<impl convert::From<core_simd::vector::Simd<isize, 8>> for core_arch::x86::__m512i>::from"
  },
  {
    "file": "portable-simd/crates/core_simd/src/vendor.rs",
    "func": "core_simd::vendor::x86::p64::<impl convert::From<core_simd::vector::Simd<usize, 2>> for core_arch::x86::__m128i>::from"
  },
  {
    "file": "portable-simd/crates/core_simd/src/vendor.rs",
    "func": "core_simd::vendor::x86::p64::<impl convert::From<core_simd::vector::Simd<usize, 4>> for core_arch::x86::__m256i>::from"
  },
  {
    "file": "portable-simd/crates/core_simd/src/vendor.rs",
    "func": "core_simd::vendor::x86::p64::<impl convert::From<core_simd::vector::Simd<usize, 8>> for core_arch::x86::__m512i>::from"
  },
  {
    "file": "proc_macro/src/bridge/arena.rs",
    "func": "bridge::arena::Arena::new"
  },
  {
    "file": "proc_macro/src/bridge/buffer.rs",
    "func": "<bridge::buffer::Buffer as std::default::Default>::default"
  },
  {
    "file": "proc_macro/src/bridge/buffer.rs",
    "func": "bridge::buffer::Buffer::new"
  },
  {
    "file": "proc_macro/src/bridge/client.rs",
    "func": "<bridge::client::FreeFunctions as std::ops::Drop>::drop"
  },
  {
    "file": "proc_macro/src/bridge/client.rs",
    "func": "<bridge::client::Span as std::clone::Clone>::clone"
  },
  {
    "file": "proc_macro/src/bridge/client.rs",
    "func": "<bridge::client::Span as std::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "proc_macro/src/bridge/client.rs",
    "func": "<bridge::client::Span as std::cmp::PartialEq>::eq"
  },
  {
    "file": "proc_macro/src/bridge/client.rs",
    "func": "<bridge::client::TokenStream as std::clone::Clone>::clone"
  },
  {
    "file": "proc_macro/src/bridge/client.rs",
    "func": "<bridge::client::TokenStream as std::ops::Drop>::drop"
  },
  {
    "file": "proc_macro/src/bridge/client.rs",
    "func": "bridge::client::FreeFunctions::drop"
  },
  {
    "file": "proc_macro/src/bridge/client.rs",
    "func": "bridge::client::Span::byte_range"
  },
  {
    "file": "proc_macro/src/bridge/client.rs",
    "func": "bridge::client::Span::call_site"
  },
  {
    "file": "proc_macro/src/bridge/client.rs",
    "func": "bridge::client::Span::column"
  },
  {
    "file": "proc_macro/src/bridge/client.rs",
    "func": "bridge::client::Span::debug"
  },
  {
    "file": "proc_macro/src/bridge/client.rs",
    "func": "bridge::client::Span::def_site"
  },
  {
    "file": "proc_macro/src/bridge/client.rs",
    "func": "bridge::client::Span::end"
  },
  {
    "file": "proc_macro/src/bridge/client.rs",
    "func": "bridge::client::Span::file"
  },
  {
    "file": "proc_macro/src/bridge/client.rs",
    "func": "bridge::client::Span::join"
  },
  {
    "file": "proc_macro/src/bridge/client.rs",
    "func": "bridge::client::Span::line"
  },
  {
    "file": "proc_macro/src/bridge/client.rs",
    "func": "bridge::client::Span::local_file"
  },
  {
    "file": "proc_macro/src/bridge/client.rs",
    "func": "bridge::client::Span::mixed_site"
  },
  {
    "file": "proc_macro/src/bridge/client.rs",
    "func": "bridge::client::Span::parent"
  },
  {
    "file": "proc_macro/src/bridge/client.rs",
    "func": "bridge::client::Span::recover_proc_macro_span"
  },
  {
    "file": "proc_macro/src/bridge/client.rs",
    "func": "bridge::client::Span::resolved_at"
  },
  {
    "file": "proc_macro/src/bridge/client.rs",
    "func": "bridge::client::Span::save_span"
  },
  {
    "file": "proc_macro/src/bridge/client.rs",
    "func": "bridge::client::Span::source"
  },
  {
    "file": "proc_macro/src/bridge/client.rs",
    "func": "bridge::client::Span::source_text"
  },
  {
    "file": "proc_macro/src/bridge/client.rs",
    "func": "bridge::client::Span::start"
  },
  {
    "file": "proc_macro/src/bridge/client.rs",
    "func": "bridge::client::Span::subspan"
  },
  {
    "file": "proc_macro/src/bridge/client.rs",
    "func": "bridge::client::TokenStream::clone"
  },
  {
    "file": "proc_macro/src/bridge/client.rs",
    "func": "bridge::client::TokenStream::drop"
  },
  {
    "file": "proc_macro/src/bridge/client.rs",
    "func": "bridge::client::TokenStream::expand_expr"
  },
  {
    "file": "proc_macro/src/bridge/client.rs",
    "func": "bridge::client::TokenStream::from_token_tree"
  },
  {
    "file": "proc_macro/src/bridge/client.rs",
    "func": "bridge::client::TokenStream::into_trees"
  },
  {
    "file": "proc_macro/src/bridge/client.rs",
    "func": "bridge::client::TokenStream::is_empty"
  },
  {
    "file": "proc_macro/src/bridge/client.rs",
    "func": "bridge::client::TokenStream::to_string"
  },
  {
    "file": "proc_macro/src/bridge/client.rs",
    "func": "bridge::client::is_available"
  },
  {
    "file": "proc_macro/src/bridge/client.rs",
    "func": "bridge::client::maybe_install_panic_hook"
  },
  {
    "file": "proc_macro/src/bridge/fxhash.rs",
    "func": "<bridge::fxhash::FxHasher as std::default::Default>::default"
  },
  {
    "file": "proc_macro/src/bridge/fxhash.rs",
    "func": "<bridge::fxhash::FxHasher as std::hash::Hasher>::finish"
  },
  {
    "file": "proc_macro/src/bridge/fxhash.rs",
    "func": "<bridge::fxhash::FxHasher as std::hash::Hasher>::write_u16"
  },
  {
    "file": "proc_macro/src/bridge/fxhash.rs",
    "func": "<bridge::fxhash::FxHasher as std::hash::Hasher>::write_u32"
  },
  {
    "file": "proc_macro/src/bridge/fxhash.rs",
    "func": "<bridge::fxhash::FxHasher as std::hash::Hasher>::write_u64"
  },
  {
    "file": "proc_macro/src/bridge/fxhash.rs",
    "func": "<bridge::fxhash::FxHasher as std::hash::Hasher>::write_u8"
  },
  {
    "file": "proc_macro/src/bridge/fxhash.rs",
    "func": "<bridge::fxhash::FxHasher as std::hash::Hasher>::write_usize"
  },
  {
    "file": "proc_macro/src/bridge/fxhash.rs",
    "func": "bridge::fxhash::FxHasher::add_to_hash"
  },
  {
    "file": "proc_macro/src/bridge/mod.rs",
    "func": "<() as bridge::Mark>::mark"
  },
  {
    "file": "proc_macro/src/bridge/mod.rs",
    "func": "<() as bridge::Unmark>::unmark"
  },
  {
    "file": "proc_macro/src/bridge/mod.rs",
    "func": "<Delimiter as bridge::Mark>::mark"
  },
  {
    "file": "proc_macro/src/bridge/mod.rs",
    "func": "<Delimiter as bridge::Unmark>::unmark"
  },
  {
    "file": "proc_macro/src/bridge/mod.rs",
    "func": "<Spacing as bridge::Mark>::mark"
  },
  {
    "file": "proc_macro/src/bridge/mod.rs",
    "func": "<Spacing as bridge::Unmark>::unmark"
  },
  {
    "file": "proc_macro/src/bridge/mod.rs",
    "func": "<bool as bridge::Mark>::mark"
  },
  {
    "file": "proc_macro/src/bridge/mod.rs",
    "func": "<bool as bridge::Unmark>::unmark"
  },
  {
    "file": "proc_macro/src/bridge/mod.rs",
    "func": "<bridge::LitKind as bridge::Mark>::mark"
  },
  {
    "file": "proc_macro/src/bridge/mod.rs",
    "func": "<bridge::LitKind as bridge::Unmark>::unmark"
  },
  {
    "file": "proc_macro/src/bridge/mod.rs",
    "func": "<bridge::LitKind as std::clone::Clone>::clone"
  },
  {
    "file": "proc_macro/src/bridge/mod.rs",
    "func": "<bridge::LitKind as std::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "proc_macro/src/bridge/mod.rs",
    "func": "<bridge::LitKind as std::cmp::PartialEq>::eq"
  },
  {
    "file": "proc_macro/src/bridge/mod.rs",
    "func": "<char as bridge::Mark>::mark"
  },
  {
    "file": "proc_macro/src/bridge/mod.rs",
    "func": "<char as bridge::Unmark>::unmark"
  },
  {
    "file": "proc_macro/src/bridge/mod.rs",
    "func": "<diagnostic::Level as bridge::Mark>::mark"
  },
  {
    "file": "proc_macro/src/bridge/mod.rs",
    "func": "<diagnostic::Level as bridge::Unmark>::unmark"
  },
  {
    "file": "proc_macro/src/bridge/mod.rs",
    "func": "<u8 as bridge::Mark>::mark"
  },
  {
    "file": "proc_macro/src/bridge/mod.rs",
    "func": "<u8 as bridge::Unmark>::unmark"
  },
  {
    "file": "proc_macro/src/bridge/mod.rs",
    "func": "<usize as bridge::Mark>::mark"
  },
  {
    "file": "proc_macro/src/bridge/mod.rs",
    "func": "<usize as bridge::Unmark>::unmark"
  },
  {
    "file": "proc_macro/src/bridge/server.rs",
    "func": "<bridge::server::RunningSameThreadGuard as std::ops::Drop>::drop"
  },
  {
    "file": "proc_macro/src/bridge/server.rs",
    "func": "bridge::server::RunningSameThreadGuard::new"
  },
  {
    "file": "proc_macro/src/bridge/symbol.rs",
    "func": "<bridge::symbol::Symbol as std::clone::Clone>::clone"
  },
  {
    "file": "proc_macro/src/bridge/symbol.rs",
    "func": "<bridge::symbol::Symbol as std::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "proc_macro/src/bridge/symbol.rs",
    "func": "<bridge::symbol::Symbol as std::cmp::PartialEq>::eq"
  },
  {
    "file": "proc_macro/src/bridge/symbol.rs",
    "func": "bridge::symbol::Symbol::invalidate_all"
  },
  {
    "file": "proc_macro/src/diagnostic.rs",
    "func": "<Span as diagnostic::MultiSpan>::into_spans"
  },
  {
    "file": "proc_macro/src/diagnostic.rs",
    "func": "<diagnostic::Level as std::clone::Clone>::clone"
  },
  {
    "file": "proc_macro/src/escape.rs",
    "func": "<escape::EscapeOptions as std::clone::Clone>::clone"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "<ConversionErrorKind as std::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "<ConversionErrorKind as std::cmp::PartialEq>::eq"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "<Delimiter as std::clone::Clone>::clone"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "<Delimiter as std::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "<Delimiter as std::cmp::PartialEq>::eq"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "<Group as std::clone::Clone>::clone"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "<Ident as std::clone::Clone>::clone"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "<Literal as std::clone::Clone>::clone"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "<Punct as std::clone::Clone>::clone"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "<Punct as std::cmp::PartialEq<char>>::eq"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "<Spacing as std::clone::Clone>::clone"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "<Spacing as std::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "<Spacing as std::cmp::PartialEq>::eq"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "<Span as std::clone::Clone>::clone"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "<TokenStream as std::clone::Clone>::clone"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "<TokenStream as std::convert::From<TokenTree>>::from"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "<TokenStream as std::default::Default>::default"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "<TokenTree as std::clone::Clone>::clone"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "<TokenTree as std::convert::From<Group>>::from"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "<TokenTree as std::convert::From<Ident>>::from"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "<TokenTree as std::convert::From<Literal>>::from"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "<TokenTree as std::convert::From<Punct>>::from"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "<impl std::cmp::PartialEq<Punct> for char>::eq"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "ConcatStreamsHelper::new"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "ConcatTreesHelper::new"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "Group::delimiter"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "Group::new"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "Group::set_span"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "Group::span"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "Group::span_close"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "Group::span_open"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "Group::stream"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "Ident::set_span"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "Ident::span"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "Literal::byte_character"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "Literal::byte_str_value"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "Literal::character"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "Literal::cstr_value"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "Literal::f32_suffixed"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "Literal::f32_unsuffixed"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "Literal::f64_suffixed"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "Literal::f64_unsuffixed"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "Literal::i128_suffixed"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "Literal::i128_unsuffixed"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "Literal::i16_suffixed"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "Literal::i16_unsuffixed"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "Literal::i32_suffixed"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "Literal::i32_unsuffixed"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "Literal::i64_suffixed"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "Literal::i64_unsuffixed"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "Literal::i8_suffixed"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "Literal::i8_unsuffixed"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "Literal::isize_suffixed"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "Literal::isize_unsuffixed"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "Literal::set_span"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "Literal::span"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "Literal::str_value"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "Literal::u128_suffixed"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "Literal::u128_unsuffixed"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "Literal::u16_suffixed"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "Literal::u16_unsuffixed"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "Literal::u32_suffixed"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "Literal::u32_unsuffixed"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "Literal::u64_suffixed"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "Literal::u64_unsuffixed"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "Literal::u8_suffixed"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "Literal::u8_unsuffixed"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "Literal::usize_suffixed"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "Literal::usize_unsuffixed"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "Literal::with_stringify_parts::get_hashes_str"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "Punct::as_char"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "Punct::new"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "Punct::set_span"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "Punct::spacing"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "Punct::span"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "Span::byte_range"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "Span::call_site"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "Span::column"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "Span::def_site"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "Span::end"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "Span::eq"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "Span::file"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "Span::join"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "Span::line"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "Span::local_file"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "Span::located_at"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "Span::mixed_site"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "Span::parent"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "Span::recover_proc_macro_span"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "Span::resolved_at"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "Span::save_span"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "Span::source"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "Span::source_text"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "Span::start"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "TokenStream::expand_expr"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "TokenStream::is_empty"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "TokenStream::new"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "TokenTree::set_span"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "TokenTree::span"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "is_available"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "token_stream::<impl std::iter::IntoIterator for TokenStream>::into_iter"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "tree_to_bridge_tree"
  },
  {
    "file": "proc_macro/src/quote.rs",
    "func": "<quote::HasIterator as std::ops::BitOr<quote::ThereIsNoIteratorInRepetition>>::bitor"
  },
  {
    "file": "proc_macro/src/quote.rs",
    "func": "<quote::HasIterator as std::ops::BitOr>::bitor"
  },
  {
    "file": "proc_macro/src/quote.rs",
    "func": "<quote::ThereIsNoIteratorInRepetition as std::ops::BitOr<quote::HasIterator>>::bitor"
  },
  {
    "file": "proc_macro/src/quote.rs",
    "func": "<quote::ThereIsNoIteratorInRepetition as std::ops::BitOr>::bitor"
  },
  {
    "file": "proc_macro/src/quote.rs",
    "func": "quote::collect_meta_vars"
  },
  {
    "file": "proc_macro/src/quote.rs",
    "func": "quote::quote"
  },
  {
    "file": "proc_macro/src/quote.rs",
    "func": "quote::quote_span"
  },
  {
    "file": "proc_macro/src/to_tokens.rs",
    "func": "<Group as to_tokens::ToTokens>::to_tokens"
  },
  {
    "file": "proc_macro/src/to_tokens.rs",
    "func": "<Ident as to_tokens::ToTokens>::to_tokens"
  },
  {
    "file": "proc_macro/src/to_tokens.rs",
    "func": "<Literal as to_tokens::ToTokens>::to_tokens"
  },
  {
    "file": "proc_macro/src/to_tokens.rs",
    "func": "<Punct as to_tokens::ToTokens>::to_tokens"
  },
  {
    "file": "proc_macro/src/to_tokens.rs",
    "func": "<TokenStream as to_tokens::ToTokens>::into_token_stream"
  },
  {
    "file": "proc_macro/src/to_tokens.rs",
    "func": "<TokenStream as to_tokens::ToTokens>::to_tokens"
  },
  {
    "file": "proc_macro/src/to_tokens.rs",
    "func": "<TokenTree as to_tokens::ToTokens>::into_token_stream"
  },
  {
    "file": "proc_macro/src/to_tokens.rs",
    "func": "<TokenTree as to_tokens::ToTokens>::to_tokens"
  },
  {
    "file": "proc_macro/src/to_tokens.rs",
    "func": "<bool as to_tokens::ToTokens>::to_tokens"
  },
  {
    "file": "proc_macro/src/to_tokens.rs",
    "func": "<char as to_tokens::ToTokens>::to_tokens"
  },
  {
    "file": "proc_macro/src/to_tokens.rs",
    "func": "<f32 as to_tokens::ToTokens>::to_tokens"
  },
  {
    "file": "proc_macro/src/to_tokens.rs",
    "func": "<f64 as to_tokens::ToTokens>::to_tokens"
  },
  {
    "file": "proc_macro/src/to_tokens.rs",
    "func": "<i128 as to_tokens::ToTokens>::to_tokens"
  },
  {
    "file": "proc_macro/src/to_tokens.rs",
    "func": "<i16 as to_tokens::ToTokens>::to_tokens"
  },
  {
    "file": "proc_macro/src/to_tokens.rs",
    "func": "<i32 as to_tokens::ToTokens>::to_tokens"
  },
  {
    "file": "proc_macro/src/to_tokens.rs",
    "func": "<i64 as to_tokens::ToTokens>::to_tokens"
  },
  {
    "file": "proc_macro/src/to_tokens.rs",
    "func": "<i8 as to_tokens::ToTokens>::to_tokens"
  },
  {
    "file": "proc_macro/src/to_tokens.rs",
    "func": "<isize as to_tokens::ToTokens>::to_tokens"
  },
  {
    "file": "proc_macro/src/to_tokens.rs",
    "func": "<u128 as to_tokens::ToTokens>::to_tokens"
  },
  {
    "file": "proc_macro/src/to_tokens.rs",
    "func": "<u16 as to_tokens::ToTokens>::to_tokens"
  },
  {
    "file": "proc_macro/src/to_tokens.rs",
    "func": "<u32 as to_tokens::ToTokens>::to_tokens"
  },
  {
    "file": "proc_macro/src/to_tokens.rs",
    "func": "<u64 as to_tokens::ToTokens>::to_tokens"
  },
  {
    "file": "proc_macro/src/to_tokens.rs",
    "func": "<u8 as to_tokens::ToTokens>::to_tokens"
  },
  {
    "file": "proc_macro/src/to_tokens.rs",
    "func": "<usize as to_tokens::ToTokens>::to_tokens"
  },
  {
    "file": "src/lib.rs",
    "func": "dummy"
  },
  {
    "file": "std/src/alloc.rs",
    "func": "<alloc::System as core::alloc::Allocator>::allocate"
  },
  {
    "file": "std/src/alloc.rs",
    "func": "<alloc::System as core::alloc::Allocator>::allocate_zeroed"
  },
  {
    "file": "std/src/alloc.rs",
    "func": "<alloc::System as core::alloc::Allocator>::deallocate"
  },
  {
    "file": "std/src/alloc.rs",
    "func": "<alloc::System as core::alloc::Allocator>::grow"
  },
  {
    "file": "std/src/alloc.rs",
    "func": "<alloc::System as core::alloc::Allocator>::grow_zeroed"
  },
  {
    "file": "std/src/alloc.rs",
    "func": "<alloc::System as core::alloc::Allocator>::shrink"
  },
  {
    "file": "std/src/alloc.rs",
    "func": "<alloc::System as core::clone::Clone>::clone"
  },
  {
    "file": "std/src/alloc.rs",
    "func": "<alloc::System as core::default::Default>::default"
  },
  {
    "file": "std/src/alloc.rs",
    "func": "alloc::System::alloc_impl"
  },
  {
    "file": "std/src/alloc.rs",
    "func": "alloc::System::grow_impl"
  },
  {
    "file": "std/src/alloc.rs",
    "func": "alloc::_::__rg_oom"
  },
  {
    "file": "std/src/alloc.rs",
    "func": "alloc::__default_lib_allocator::__rdl_alloc"
  },
  {
    "file": "std/src/alloc.rs",
    "func": "alloc::__default_lib_allocator::__rdl_alloc_zeroed"
  },
  {
    "file": "std/src/alloc.rs",
    "func": "alloc::default_alloc_error_hook"
  },
  {
    "file": "std/src/alloc.rs",
    "func": "alloc::rust_oom"
  },
  {
    "file": "std/src/alloc.rs",
    "func": "alloc::take_alloc_error_hook"
  },
  {
    "file": "std/src/ascii.rs",
    "func": "<char as ascii::AsciiExt>::eq_ignore_ascii_case"
  },
  {
    "file": "std/src/ascii.rs",
    "func": "<char as ascii::AsciiExt>::is_ascii"
  },
  {
    "file": "std/src/ascii.rs",
    "func": "<char as ascii::AsciiExt>::make_ascii_lowercase"
  },
  {
    "file": "std/src/ascii.rs",
    "func": "<char as ascii::AsciiExt>::make_ascii_uppercase"
  },
  {
    "file": "std/src/ascii.rs",
    "func": "<char as ascii::AsciiExt>::to_ascii_lowercase"
  },
  {
    "file": "std/src/ascii.rs",
    "func": "<char as ascii::AsciiExt>::to_ascii_uppercase"
  },
  {
    "file": "std/src/ascii.rs",
    "func": "<u8 as ascii::AsciiExt>::eq_ignore_ascii_case"
  },
  {
    "file": "std/src/ascii.rs",
    "func": "<u8 as ascii::AsciiExt>::is_ascii"
  },
  {
    "file": "std/src/ascii.rs",
    "func": "<u8 as ascii::AsciiExt>::make_ascii_lowercase"
  },
  {
    "file": "std/src/ascii.rs",
    "func": "<u8 as ascii::AsciiExt>::make_ascii_uppercase"
  },
  {
    "file": "std/src/ascii.rs",
    "func": "<u8 as ascii::AsciiExt>::to_ascii_lowercase"
  },
  {
    "file": "std/src/ascii.rs",
    "func": "<u8 as ascii::AsciiExt>::to_ascii_uppercase"
  },
  {
    "file": "std/src/backtrace.rs",
    "func": "<backtrace::BacktraceStatus as core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "std/src/backtrace.rs",
    "func": "<backtrace::BacktraceStatus as core::cmp::PartialEq>::eq"
  },
  {
    "file": "std/src/backtrace.rs",
    "func": "backtrace::Backtrace::capture"
  },
  {
    "file": "std/src/backtrace.rs",
    "func": "backtrace::Backtrace::create"
  },
  {
    "file": "std/src/backtrace.rs",
    "func": "backtrace::Backtrace::disabled"
  },
  {
    "file": "std/src/backtrace.rs",
    "func": "backtrace::Backtrace::enabled"
  },
  {
    "file": "std/src/backtrace.rs",
    "func": "backtrace::Backtrace::force_capture"
  },
  {
    "file": "std/src/backtrace.rs",
    "func": "backtrace::_assert_send_sync"
  },
  {
    "file": "std/src/collections/hash/map.rs",
    "func": "collections::hash::map::assert_covariance"
  },
  {
    "file": "std/src/collections/hash/map.rs",
    "func": "collections::hash::map::map_try_reserve_error"
  },
  {
    "file": "std/src/collections/hash/set.rs",
    "func": "collections::hash::set::assert_covariance"
  },
  {
    "file": "std/src/env.rs",
    "func": "<env::JoinPathsError as core::error::Error>::description"
  },
  {
    "file": "std/src/env.rs",
    "func": "env::args"
  },
  {
    "file": "std/src/env.rs",
    "func": "env::args_os"
  },
  {
    "file": "std/src/env.rs",
    "func": "env::current_dir"
  },
  {
    "file": "std/src/env.rs",
    "func": "env::current_exe"
  },
  {
    "file": "std/src/env.rs",
    "func": "env::home_dir"
  },
  {
    "file": "std/src/env.rs",
    "func": "env::temp_dir"
  },
  {
    "file": "std/src/env.rs",
    "func": "env::vars"
  },
  {
    "file": "std/src/env.rs",
    "func": "env::vars_os"
  },
  {
    "file": "std/src/ffi/os_str.rs",
    "func": "<&ffi::os_str::OsStr as core::default::Default>::default"
  },
  {
    "file": "std/src/ffi/os_str.rs",
    "func": "<ffi::os_str::OsString as core::default::Default>::default"
  },
  {
    "file": "std/src/ffi/os_str.rs",
    "func": "ffi::os_str::<impl core::default::Default for alloc_crate::boxed::Box<ffi::os_str::OsStr>>::default"
  },
  {
    "file": "std/src/ffi/os_str.rs",
    "func": "ffi::os_str::OsString::new"
  },
  {
    "file": "std/src/ffi/os_str.rs",
    "func": "ffi::os_str::OsString::with_capacity"
  },
  {
    "file": "std/src/fs.rs",
    "func": "<&fs::File as io::Read>::is_read_vectored"
  },
  {
    "file": "std/src/fs.rs",
    "func": "<&fs::File as io::Seek>::seek"
  },
  {
    "file": "std/src/fs.rs",
    "func": "<&fs::File as io::Seek>::stream_len"
  },
  {
    "file": "std/src/fs.rs",
    "func": "<&fs::File as io::Seek>::stream_position"
  },
  {
    "file": "std/src/fs.rs",
    "func": "<&fs::File as io::Write>::flush"
  },
  {
    "file": "std/src/fs.rs",
    "func": "<&fs::File as io::Write>::is_write_vectored"
  },
  {
    "file": "std/src/fs.rs",
    "func": "<fs::DirBuilder as sys_common::AsInnerMut<sys::fs::unix::DirBuilder>>::as_inner_mut"
  },
  {
    "file": "std/src/fs.rs",
    "func": "<fs::File as io::Read>::is_read_vectored"
  },
  {
    "file": "std/src/fs.rs",
    "func": "<fs::File as io::Seek>::seek"
  },
  {
    "file": "std/src/fs.rs",
    "func": "<fs::File as io::Seek>::stream_len"
  },
  {
    "file": "std/src/fs.rs",
    "func": "<fs::File as io::Seek>::stream_position"
  },
  {
    "file": "std/src/fs.rs",
    "func": "<fs::File as io::Write>::flush"
  },
  {
    "file": "std/src/fs.rs",
    "func": "<fs::File as io::Write>::is_write_vectored"
  },
  {
    "file": "std/src/fs.rs",
    "func": "<fs::File as sys_common::AsInner<sys::fs::unix::File>>::as_inner"
  },
  {
    "file": "std/src/fs.rs",
    "func": "<fs::File as sys_common::FromInner<sys::fs::unix::File>>::from_inner"
  },
  {
    "file": "std/src/fs.rs",
    "func": "<fs::File as sys_common::IntoInner<sys::fs::unix::File>>::into_inner"
  },
  {
    "file": "std/src/fs.rs",
    "func": "<fs::FileTimes as core::clone::Clone>::clone"
  },
  {
    "file": "std/src/fs.rs",
    "func": "<fs::FileTimes as core::default::Default>::default"
  },
  {
    "file": "std/src/fs.rs",
    "func": "<fs::FileTimes as sys_common::AsInnerMut<sys::fs::unix::FileTimes>>::as_inner_mut"
  },
  {
    "file": "std/src/fs.rs",
    "func": "<fs::FileType as core::clone::Clone>::clone"
  },
  {
    "file": "std/src/fs.rs",
    "func": "<fs::FileType as core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "std/src/fs.rs",
    "func": "<fs::FileType as core::cmp::PartialEq>::eq"
  },
  {
    "file": "std/src/fs.rs",
    "func": "<fs::FileType as sys_common::AsInner<sys::fs::unix::FileType>>::as_inner"
  },
  {
    "file": "std/src/fs.rs",
    "func": "<fs::Metadata as core::clone::Clone>::clone"
  },
  {
    "file": "std/src/fs.rs",
    "func": "<fs::Metadata as sys_common::AsInner<sys::fs::unix::FileAttr>>::as_inner"
  },
  {
    "file": "std/src/fs.rs",
    "func": "<fs::Metadata as sys_common::FromInner<sys::fs::unix::FileAttr>>::from_inner"
  },
  {
    "file": "std/src/fs.rs",
    "func": "<fs::OpenOptions as core::clone::Clone>::clone"
  },
  {
    "file": "std/src/fs.rs",
    "func": "<fs::OpenOptions as sys_common::AsInner<sys::fs::unix::OpenOptions>>::as_inner"
  },
  {
    "file": "std/src/fs.rs",
    "func": "<fs::OpenOptions as sys_common::AsInnerMut<sys::fs::unix::OpenOptions>>::as_inner_mut"
  },
  {
    "file": "std/src/fs.rs",
    "func": "<fs::Permissions as core::clone::Clone>::clone"
  },
  {
    "file": "std/src/fs.rs",
    "func": "<fs::Permissions as core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "std/src/fs.rs",
    "func": "<fs::Permissions as core::cmp::PartialEq>::eq"
  },
  {
    "file": "std/src/fs.rs",
    "func": "<fs::Permissions as sys_common::AsInner<sys::fs::unix::FilePermissions>>::as_inner"
  },
  {
    "file": "std/src/fs.rs",
    "func": "<fs::Permissions as sys_common::FromInner<sys::fs::unix::FilePermissions>>::from_inner"
  },
  {
    "file": "std/src/fs.rs",
    "func": "fs::DirBuilder::new"
  },
  {
    "file": "std/src/fs.rs",
    "func": "fs::DirBuilder::recursive"
  },
  {
    "file": "std/src/fs.rs",
    "func": "fs::File::lock"
  },
  {
    "file": "std/src/fs.rs",
    "func": "fs::File::lock_shared"
  },
  {
    "file": "std/src/fs.rs",
    "func": "fs::File::metadata"
  },
  {
    "file": "std/src/fs.rs",
    "func": "fs::File::options"
  },
  {
    "file": "std/src/fs.rs",
    "func": "fs::File::set_len"
  },
  {
    "file": "std/src/fs.rs",
    "func": "fs::File::set_modified"
  },
  {
    "file": "std/src/fs.rs",
    "func": "fs::File::set_permissions"
  },
  {
    "file": "std/src/fs.rs",
    "func": "fs::File::set_times"
  },
  {
    "file": "std/src/fs.rs",
    "func": "fs::File::sync_all"
  },
  {
    "file": "std/src/fs.rs",
    "func": "fs::File::sync_data"
  },
  {
    "file": "std/src/fs.rs",
    "func": "fs::File::try_clone"
  },
  {
    "file": "std/src/fs.rs",
    "func": "fs::File::try_lock"
  },
  {
    "file": "std/src/fs.rs",
    "func": "fs::File::try_lock_shared"
  },
  {
    "file": "std/src/fs.rs",
    "func": "fs::File::unlock"
  },
  {
    "file": "std/src/fs.rs",
    "func": "fs::FileTimes::new"
  },
  {
    "file": "std/src/fs.rs",
    "func": "fs::FileTimes::set_accessed"
  },
  {
    "file": "std/src/fs.rs",
    "func": "fs::FileTimes::set_modified"
  },
  {
    "file": "std/src/fs.rs",
    "func": "fs::FileType::is_dir"
  },
  {
    "file": "std/src/fs.rs",
    "func": "fs::FileType::is_file"
  },
  {
    "file": "std/src/fs.rs",
    "func": "fs::FileType::is_symlink"
  },
  {
    "file": "std/src/fs.rs",
    "func": "fs::Metadata::accessed"
  },
  {
    "file": "std/src/fs.rs",
    "func": "fs::Metadata::created"
  },
  {
    "file": "std/src/fs.rs",
    "func": "fs::Metadata::file_type"
  },
  {
    "file": "std/src/fs.rs",
    "func": "fs::Metadata::is_dir"
  },
  {
    "file": "std/src/fs.rs",
    "func": "fs::Metadata::is_file"
  },
  {
    "file": "std/src/fs.rs",
    "func": "fs::Metadata::is_symlink"
  },
  {
    "file": "std/src/fs.rs",
    "func": "fs::Metadata::len"
  },
  {
    "file": "std/src/fs.rs",
    "func": "fs::Metadata::modified"
  },
  {
    "file": "std/src/fs.rs",
    "func": "fs::Metadata::permissions"
  },
  {
    "file": "std/src/fs.rs",
    "func": "fs::OpenOptions::append"
  },
  {
    "file": "std/src/fs.rs",
    "func": "fs::OpenOptions::create"
  },
  {
    "file": "std/src/fs.rs",
    "func": "fs::OpenOptions::create_new"
  },
  {
    "file": "std/src/fs.rs",
    "func": "fs::OpenOptions::new"
  },
  {
    "file": "std/src/fs.rs",
    "func": "fs::OpenOptions::read"
  },
  {
    "file": "std/src/fs.rs",
    "func": "fs::OpenOptions::truncate"
  },
  {
    "file": "std/src/fs.rs",
    "func": "fs::OpenOptions::write"
  },
  {
    "file": "std/src/fs.rs",
    "func": "fs::Permissions::readonly"
  },
  {
    "file": "std/src/fs.rs",
    "func": "fs::Permissions::set_readonly"
  },
  {
    "file": "std/src/fs.rs",
    "func": "fs::buffer_capacity_required"
  },
  {
    "file": "std/src/hash/random.rs",
    "func": "<hash::random::DefaultHasher as core::clone::Clone>::clone"
  },
  {
    "file": "std/src/hash/random.rs",
    "func": "<hash::random::DefaultHasher as core::default::Default>::default"
  },
  {
    "file": "std/src/hash/random.rs",
    "func": "<hash::random::DefaultHasher as core::hash::Hasher>::finish"
  },
  {
    "file": "std/src/hash/random.rs",
    "func": "<hash::random::RandomState as core::clone::Clone>::clone"
  },
  {
    "file": "std/src/hash/random.rs",
    "func": "<hash::random::RandomState as core::default::Default>::default"
  },
  {
    "file": "std/src/hash/random.rs",
    "func": "<hash::random::RandomState as core::hash::BuildHasher>::build_hasher"
  },
  {
    "file": "std/src/hash/random.rs",
    "func": "hash::random::DefaultHasher::new"
  },
  {
    "file": "std/src/hash/random.rs",
    "func": "hash::random::RandomState::new"
  },
  {
    "file": "std/src/io/buffered/bufreader/buffer.rs",
    "func": "io::buffered::bufreader::buffer::Buffer::try_with_capacity"
  },
  {
    "file": "std/src/io/buffered/bufreader/buffer.rs",
    "func": "io::buffered::bufreader::buffer::Buffer::with_capacity"
  },
  {
    "file": "std/src/io/error.rs",
    "func": "<io::error::Error as core::convert::From<alloc_crate::collections::TryReserveError>>::from"
  },
  {
    "file": "std/src/io/error.rs",
    "func": "<io::error::Error as core::convert::From<io::error::ErrorKind>>::from"
  },
  {
    "file": "std/src/io/error.rs",
    "func": "<io::error::ErrorKind as core::clone::Clone>::clone"
  },
  {
    "file": "std/src/io/error.rs",
    "func": "<io::error::ErrorKind as core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "std/src/io/error.rs",
    "func": "<io::error::ErrorKind as core::cmp::Ord>::cmp"
  },
  {
    "file": "std/src/io/error.rs",
    "func": "<io::error::ErrorKind as core::cmp::PartialEq>::eq"
  },
  {
    "file": "std/src/io/error.rs",
    "func": "<io::error::ErrorKind as core::cmp::PartialOrd>::partial_cmp"
  },
  {
    "file": "std/src/io/error.rs",
    "func": "io::error::Error::from_raw_os_error"
  },
  {
    "file": "std/src/io/error.rs",
    "func": "io::error::Error::last_os_error"
  },
  {
    "file": "std/src/io/error.rs",
    "func": "io::error::ErrorKind::as_str"
  },
  {
    "file": "std/src/io/error.rs",
    "func": "io::error::_assert_error_is_sync_send"
  },
  {
    "file": "std/src/io/error/repr_bitpacked.rs",
    "func": "io::error::repr_bitpacked::Repr::new_os"
  },
  {
    "file": "std/src/io/error/repr_bitpacked.rs",
    "func": "io::error::repr_bitpacked::Repr::new_simple"
  },
  {
    "file": "std/src/io/error/repr_bitpacked.rs",
    "func": "io::error::repr_bitpacked::kind_from_prim"
  },
  {
    "file": "std/src/io/mod.rs",
    "func": "<io::SeekFrom as core::clone::Clone>::clone"
  },
  {
    "file": "std/src/io/mod.rs",
    "func": "<io::SeekFrom as core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "std/src/io/mod.rs",
    "func": "<io::SeekFrom as core::cmp::PartialEq>::eq"
  },
  {
    "file": "std/src/io/pipe.rs",
    "func": "<&io::pipe::PipeReader as io::Read>::is_read_vectored"
  },
  {
    "file": "std/src/io/pipe.rs",
    "func": "<&io::pipe::PipeWriter as io::Write>::flush"
  },
  {
    "file": "std/src/io/pipe.rs",
    "func": "<&io::pipe::PipeWriter as io::Write>::is_write_vectored"
  },
  {
    "file": "std/src/io/pipe.rs",
    "func": "<io::pipe::PipeReader as io::Read>::is_read_vectored"
  },
  {
    "file": "std/src/io/pipe.rs",
    "func": "<io::pipe::PipeReader as sys_common::FromInner<sys::fd::unix::FileDesc>>::from_inner"
  },
  {
    "file": "std/src/io/pipe.rs",
    "func": "<io::pipe::PipeReader as sys_common::IntoInner<sys::fd::unix::FileDesc>>::into_inner"
  },
  {
    "file": "std/src/io/pipe.rs",
    "func": "<io::pipe::PipeWriter as io::Write>::flush"
  },
  {
    "file": "std/src/io/pipe.rs",
    "func": "<io::pipe::PipeWriter as io::Write>::is_write_vectored"
  },
  {
    "file": "std/src/io/pipe.rs",
    "func": "<io::pipe::PipeWriter as sys_common::FromInner<sys::fd::unix::FileDesc>>::from_inner"
  },
  {
    "file": "std/src/io/pipe.rs",
    "func": "<io::pipe::PipeWriter as sys_common::IntoInner<sys::fd::unix::FileDesc>>::into_inner"
  },
  {
    "file": "std/src/io/pipe.rs",
    "func": "io::pipe::PipeReader::try_clone"
  },
  {
    "file": "std/src/io/pipe.rs",
    "func": "io::pipe::PipeWriter::try_clone"
  },
  {
    "file": "std/src/io/pipe.rs",
    "func": "io::pipe::pipe"
  },
  {
    "file": "std/src/io/stdio.rs",
    "func": "<&io::stdio::Stderr as io::Write>::flush"
  },
  {
    "file": "std/src/io/stdio.rs",
    "func": "<&io::stdio::Stderr as io::Write>::is_write_vectored"
  },
  {
    "file": "std/src/io/stdio.rs",
    "func": "<fs::File as io::stdio::IsTerminal>::is_terminal"
  },
  {
    "file": "std/src/io/stdio.rs",
    "func": "<io::stdio::Stderr as io::Write>::flush"
  },
  {
    "file": "std/src/io/stdio.rs",
    "func": "<io::stdio::Stderr as io::Write>::is_write_vectored"
  },
  {
    "file": "std/src/io/stdio.rs",
    "func": "<io::stdio::Stderr as io::stdio::IsTerminal>::is_terminal"
  },
  {
    "file": "std/src/io/stdio.rs",
    "func": "<io::stdio::StderrRaw as io::Write>::flush"
  },
  {
    "file": "std/src/io/stdio.rs",
    "func": "<io::stdio::StderrRaw as io::Write>::is_write_vectored"
  },
  {
    "file": "std/src/io/stdio.rs",
    "func": "<io::stdio::StdinRaw as io::Read>::is_read_vectored"
  },
  {
    "file": "std/src/io/stdio.rs",
    "func": "<io::stdio::StdoutRaw as io::Write>::flush"
  },
  {
    "file": "std/src/io/stdio.rs",
    "func": "<io::stdio::StdoutRaw as io::Write>::is_write_vectored"
  },
  {
    "file": "std/src/io/stdio.rs",
    "func": "io::stdio::Stderr::lock"
  },
  {
    "file": "std/src/io/stdio.rs",
    "func": "io::stdio::cleanup"
  },
  {
    "file": "std/src/io/stdio.rs",
    "func": "io::stdio::stderr"
  },
  {
    "file": "std/src/io/stdio.rs",
    "func": "io::stdio::stderr_raw"
  },
  {
    "file": "std/src/io/stdio.rs",
    "func": "io::stdio::stdin"
  },
  {
    "file": "std/src/io/stdio.rs",
    "func": "io::stdio::stdin_raw"
  },
  {
    "file": "std/src/io/stdio.rs",
    "func": "io::stdio::stdout"
  },
  {
    "file": "std/src/io/stdio.rs",
    "func": "io::stdio::stdout_raw"
  },
  {
    "file": "std/src/io/util.rs",
    "func": "<&io::util::Empty as io::Write>::flush"
  },
  {
    "file": "std/src/io/util.rs",
    "func": "<&io::util::Empty as io::Write>::is_write_vectored"
  },
  {
    "file": "std/src/io/util.rs",
    "func": "<&io::util::Sink as io::Write>::flush"
  },
  {
    "file": "std/src/io/util.rs",
    "func": "<&io::util::Sink as io::Write>::is_write_vectored"
  },
  {
    "file": "std/src/io/util.rs",
    "func": "<io::util::Empty as core::clone::Clone>::clone"
  },
  {
    "file": "std/src/io/util.rs",
    "func": "<io::util::Empty as core::default::Default>::default"
  },
  {
    "file": "std/src/io/util.rs",
    "func": "<io::util::Empty as io::BufRead>::consume"
  },
  {
    "file": "std/src/io/util.rs",
    "func": "<io::util::Empty as io::BufRead>::fill_buf"
  },
  {
    "file": "std/src/io/util.rs",
    "func": "<io::util::Empty as io::BufRead>::has_data_left"
  },
  {
    "file": "std/src/io/util.rs",
    "func": "<io::util::Empty as io::BufRead>::skip_until"
  },
  {
    "file": "std/src/io/util.rs",
    "func": "<io::util::Empty as io::Read>::is_read_vectored"
  },
  {
    "file": "std/src/io/util.rs",
    "func": "<io::util::Empty as io::Seek>::seek"
  },
  {
    "file": "std/src/io/util.rs",
    "func": "<io::util::Empty as io::Seek>::stream_len"
  },
  {
    "file": "std/src/io/util.rs",
    "func": "<io::util::Empty as io::Seek>::stream_position"
  },
  {
    "file": "std/src/io/util.rs",
    "func": "<io::util::Empty as io::SizeHint>::upper_bound"
  },
  {
    "file": "std/src/io/util.rs",
    "func": "<io::util::Empty as io::Write>::flush"
  },
  {
    "file": "std/src/io/util.rs",
    "func": "<io::util::Empty as io::Write>::is_write_vectored"
  },
  {
    "file": "std/src/io/util.rs",
    "func": "<io::util::Repeat as io::Read>::is_read_vectored"
  },
  {
    "file": "std/src/io/util.rs",
    "func": "<io::util::Repeat as io::SizeHint>::lower_bound"
  },
  {
    "file": "std/src/io/util.rs",
    "func": "<io::util::Repeat as io::SizeHint>::upper_bound"
  },
  {
    "file": "std/src/io/util.rs",
    "func": "<io::util::Sink as core::clone::Clone>::clone"
  },
  {
    "file": "std/src/io/util.rs",
    "func": "<io::util::Sink as core::default::Default>::default"
  },
  {
    "file": "std/src/io/util.rs",
    "func": "<io::util::Sink as io::Write>::flush"
  },
  {
    "file": "std/src/io/util.rs",
    "func": "<io::util::Sink as io::Write>::is_write_vectored"
  },
  {
    "file": "std/src/io/util.rs",
    "func": "io::util::empty"
  },
  {
    "file": "std/src/io/util.rs",
    "func": "io::util::repeat"
  },
  {
    "file": "std/src/io/util.rs",
    "func": "io::util::sink"
  },
  {
    "file": "std/src/net/mod.rs",
    "func": "<net::Shutdown as core::clone::Clone>::clone"
  },
  {
    "file": "std/src/net/mod.rs",
    "func": "<net::Shutdown as core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "std/src/net/mod.rs",
    "func": "<net::Shutdown as core::cmp::PartialEq>::eq"
  },
  {
    "file": "std/src/net/socket_addr.rs",
    "func": "<core::net::SocketAddr as net::socket_addr::ToSocketAddrs>::to_socket_addrs"
  },
  {
    "file": "std/src/net/socket_addr.rs",
    "func": "<core::net::SocketAddrV4 as net::socket_addr::ToSocketAddrs>::to_socket_addrs"
  },
  {
    "file": "std/src/net/socket_addr.rs",
    "func": "<core::net::SocketAddrV6 as net::socket_addr::ToSocketAddrs>::to_socket_addrs"
  },
  {
    "file": "std/src/net/tcp.rs",
    "func": "<&net::tcp::TcpStream as io::Read>::is_read_vectored"
  },
  {
    "file": "std/src/net/tcp.rs",
    "func": "<&net::tcp::TcpStream as io::Write>::flush"
  },
  {
    "file": "std/src/net/tcp.rs",
    "func": "<&net::tcp::TcpStream as io::Write>::is_write_vectored"
  },
  {
    "file": "std/src/net/tcp.rs",
    "func": "<net::tcp::IntoIncoming as core::iter::Iterator>::next"
  },
  {
    "file": "std/src/net/tcp.rs",
    "func": "<net::tcp::TcpListener as sys_common::AsInner<sys::net::connection::socket::TcpListener>>::as_inner"
  },
  {
    "file": "std/src/net/tcp.rs",
    "func": "<net::tcp::TcpListener as sys_common::FromInner<sys::net::connection::socket::TcpListener>>::from_inner"
  },
  {
    "file": "std/src/net/tcp.rs",
    "func": "<net::tcp::TcpListener as sys_common::IntoInner<sys::net::connection::socket::TcpListener>>::into_inner"
  },
  {
    "file": "std/src/net/tcp.rs",
    "func": "<net::tcp::TcpStream as io::Read>::is_read_vectored"
  },
  {
    "file": "std/src/net/tcp.rs",
    "func": "<net::tcp::TcpStream as io::Write>::flush"
  },
  {
    "file": "std/src/net/tcp.rs",
    "func": "<net::tcp::TcpStream as io::Write>::is_write_vectored"
  },
  {
    "file": "std/src/net/tcp.rs",
    "func": "<net::tcp::TcpStream as sys_common::AsInner<sys::net::connection::socket::TcpStream>>::as_inner"
  },
  {
    "file": "std/src/net/tcp.rs",
    "func": "<net::tcp::TcpStream as sys_common::FromInner<sys::net::connection::socket::TcpStream>>::from_inner"
  },
  {
    "file": "std/src/net/tcp.rs",
    "func": "<net::tcp::TcpStream as sys_common::IntoInner<sys::net::connection::socket::TcpStream>>::into_inner"
  },
  {
    "file": "std/src/net/tcp.rs",
    "func": "net::tcp::TcpListener::accept"
  },
  {
    "file": "std/src/net/tcp.rs",
    "func": "net::tcp::TcpListener::incoming"
  },
  {
    "file": "std/src/net/tcp.rs",
    "func": "net::tcp::TcpListener::into_incoming"
  },
  {
    "file": "std/src/net/tcp.rs",
    "func": "net::tcp::TcpListener::local_addr"
  },
  {
    "file": "std/src/net/tcp.rs",
    "func": "net::tcp::TcpListener::only_v6"
  },
  {
    "file": "std/src/net/tcp.rs",
    "func": "net::tcp::TcpListener::set_nonblocking"
  },
  {
    "file": "std/src/net/tcp.rs",
    "func": "net::tcp::TcpListener::set_only_v6"
  },
  {
    "file": "std/src/net/tcp.rs",
    "func": "net::tcp::TcpListener::set_ttl"
  },
  {
    "file": "std/src/net/tcp.rs",
    "func": "net::tcp::TcpListener::take_error"
  },
  {
    "file": "std/src/net/tcp.rs",
    "func": "net::tcp::TcpListener::try_clone"
  },
  {
    "file": "std/src/net/tcp.rs",
    "func": "net::tcp::TcpListener::ttl"
  },
  {
    "file": "std/src/net/tcp.rs",
    "func": "net::tcp::TcpStream::connect_timeout"
  },
  {
    "file": "std/src/net/tcp.rs",
    "func": "net::tcp::TcpStream::linger"
  },
  {
    "file": "std/src/net/tcp.rs",
    "func": "net::tcp::TcpStream::local_addr"
  },
  {
    "file": "std/src/net/tcp.rs",
    "func": "net::tcp::TcpStream::nodelay"
  },
  {
    "file": "std/src/net/tcp.rs",
    "func": "net::tcp::TcpStream::peer_addr"
  },
  {
    "file": "std/src/net/tcp.rs",
    "func": "net::tcp::TcpStream::read_timeout"
  },
  {
    "file": "std/src/net/tcp.rs",
    "func": "net::tcp::TcpStream::set_linger"
  },
  {
    "file": "std/src/net/tcp.rs",
    "func": "net::tcp::TcpStream::set_nodelay"
  },
  {
    "file": "std/src/net/tcp.rs",
    "func": "net::tcp::TcpStream::set_nonblocking"
  },
  {
    "file": "std/src/net/tcp.rs",
    "func": "net::tcp::TcpStream::set_read_timeout"
  },
  {
    "file": "std/src/net/tcp.rs",
    "func": "net::tcp::TcpStream::set_ttl"
  },
  {
    "file": "std/src/net/tcp.rs",
    "func": "net::tcp::TcpStream::set_write_timeout"
  },
  {
    "file": "std/src/net/tcp.rs",
    "func": "net::tcp::TcpStream::shutdown"
  },
  {
    "file": "std/src/net/tcp.rs",
    "func": "net::tcp::TcpStream::take_error"
  },
  {
    "file": "std/src/net/tcp.rs",
    "func": "net::tcp::TcpStream::try_clone"
  },
  {
    "file": "std/src/net/tcp.rs",
    "func": "net::tcp::TcpStream::ttl"
  },
  {
    "file": "std/src/net/tcp.rs",
    "func": "net::tcp::TcpStream::write_timeout"
  },
  {
    "file": "std/src/net/udp.rs",
    "func": "<net::udp::UdpSocket as sys_common::AsInner<sys::net::connection::socket::UdpSocket>>::as_inner"
  },
  {
    "file": "std/src/net/udp.rs",
    "func": "<net::udp::UdpSocket as sys_common::FromInner<sys::net::connection::socket::UdpSocket>>::from_inner"
  },
  {
    "file": "std/src/net/udp.rs",
    "func": "<net::udp::UdpSocket as sys_common::IntoInner<sys::net::connection::socket::UdpSocket>>::into_inner"
  },
  {
    "file": "std/src/net/udp.rs",
    "func": "net::udp::UdpSocket::broadcast"
  },
  {
    "file": "std/src/net/udp.rs",
    "func": "net::udp::UdpSocket::join_multicast_v4"
  },
  {
    "file": "std/src/net/udp.rs",
    "func": "net::udp::UdpSocket::join_multicast_v6"
  },
  {
    "file": "std/src/net/udp.rs",
    "func": "net::udp::UdpSocket::leave_multicast_v4"
  },
  {
    "file": "std/src/net/udp.rs",
    "func": "net::udp::UdpSocket::leave_multicast_v6"
  },
  {
    "file": "std/src/net/udp.rs",
    "func": "net::udp::UdpSocket::local_addr"
  },
  {
    "file": "std/src/net/udp.rs",
    "func": "net::udp::UdpSocket::multicast_loop_v4"
  },
  {
    "file": "std/src/net/udp.rs",
    "func": "net::udp::UdpSocket::multicast_loop_v6"
  },
  {
    "file": "std/src/net/udp.rs",
    "func": "net::udp::UdpSocket::multicast_ttl_v4"
  },
  {
    "file": "std/src/net/udp.rs",
    "func": "net::udp::UdpSocket::peer_addr"
  },
  {
    "file": "std/src/net/udp.rs",
    "func": "net::udp::UdpSocket::read_timeout"
  },
  {
    "file": "std/src/net/udp.rs",
    "func": "net::udp::UdpSocket::set_broadcast"
  },
  {
    "file": "std/src/net/udp.rs",
    "func": "net::udp::UdpSocket::set_multicast_loop_v4"
  },
  {
    "file": "std/src/net/udp.rs",
    "func": "net::udp::UdpSocket::set_multicast_loop_v6"
  },
  {
    "file": "std/src/net/udp.rs",
    "func": "net::udp::UdpSocket::set_multicast_ttl_v4"
  },
  {
    "file": "std/src/net/udp.rs",
    "func": "net::udp::UdpSocket::set_nonblocking"
  },
  {
    "file": "std/src/net/udp.rs",
    "func": "net::udp::UdpSocket::set_read_timeout"
  },
  {
    "file": "std/src/net/udp.rs",
    "func": "net::udp::UdpSocket::set_ttl"
  },
  {
    "file": "std/src/net/udp.rs",
    "func": "net::udp::UdpSocket::set_write_timeout"
  },
  {
    "file": "std/src/net/udp.rs",
    "func": "net::udp::UdpSocket::take_error"
  },
  {
    "file": "std/src/net/udp.rs",
    "func": "net::udp::UdpSocket::try_clone"
  },
  {
    "file": "std/src/net/udp.rs",
    "func": "net::udp::UdpSocket::ttl"
  },
  {
    "file": "std/src/net/udp.rs",
    "func": "net::udp::UdpSocket::write_timeout"
  },
  {
    "file": "std/src/num/f128.rs",
    "func": "f128::<impl f128>::acos"
  },
  {
    "file": "std/src/num/f128.rs",
    "func": "f128::<impl f128>::acosh"
  },
  {
    "file": "std/src/num/f128.rs",
    "func": "f128::<impl f128>::asin"
  },
  {
    "file": "std/src/num/f128.rs",
    "func": "f128::<impl f128>::asinh"
  },
  {
    "file": "std/src/num/f128.rs",
    "func": "f128::<impl f128>::atan"
  },
  {
    "file": "std/src/num/f128.rs",
    "func": "f128::<impl f128>::atan2"
  },
  {
    "file": "std/src/num/f128.rs",
    "func": "f128::<impl f128>::atanh"
  },
  {
    "file": "std/src/num/f128.rs",
    "func": "f128::<impl f128>::cbrt"
  },
  {
    "file": "std/src/num/f128.rs",
    "func": "f128::<impl f128>::cos"
  },
  {
    "file": "std/src/num/f128.rs",
    "func": "f128::<impl f128>::cosh"
  },
  {
    "file": "std/src/num/f128.rs",
    "func": "f128::<impl f128>::erf"
  },
  {
    "file": "std/src/num/f128.rs",
    "func": "f128::<impl f128>::erfc"
  },
  {
    "file": "std/src/num/f128.rs",
    "func": "f128::<impl f128>::exp"
  },
  {
    "file": "std/src/num/f128.rs",
    "func": "f128::<impl f128>::exp2"
  },
  {
    "file": "std/src/num/f128.rs",
    "func": "f128::<impl f128>::exp_m1"
  },
  {
    "file": "std/src/num/f128.rs",
    "func": "f128::<impl f128>::gamma"
  },
  {
    "file": "std/src/num/f128.rs",
    "func": "f128::<impl f128>::hypot"
  },
  {
    "file": "std/src/num/f128.rs",
    "func": "f128::<impl f128>::ln"
  },
  {
    "file": "std/src/num/f128.rs",
    "func": "f128::<impl f128>::ln_1p"
  },
  {
    "file": "std/src/num/f128.rs",
    "func": "f128::<impl f128>::ln_gamma"
  },
  {
    "file": "std/src/num/f128.rs",
    "func": "f128::<impl f128>::log"
  },
  {
    "file": "std/src/num/f128.rs",
    "func": "f128::<impl f128>::log10"
  },
  {
    "file": "std/src/num/f128.rs",
    "func": "f128::<impl f128>::log2"
  },
  {
    "file": "std/src/num/f128.rs",
    "func": "f128::<impl f128>::powf"
  },
  {
    "file": "std/src/num/f128.rs",
    "func": "f128::<impl f128>::sin"
  },
  {
    "file": "std/src/num/f128.rs",
    "func": "f128::<impl f128>::sin_cos"
  },
  {
    "file": "std/src/num/f128.rs",
    "func": "f128::<impl f128>::sinh"
  },
  {
    "file": "std/src/num/f128.rs",
    "func": "f128::<impl f128>::tan"
  },
  {
    "file": "std/src/num/f128.rs",
    "func": "f128::<impl f128>::tanh"
  },
  {
    "file": "std/src/num/f16.rs",
    "func": "f16::<impl f16>::acos"
  },
  {
    "file": "std/src/num/f16.rs",
    "func": "f16::<impl f16>::acosh"
  },
  {
    "file": "std/src/num/f16.rs",
    "func": "f16::<impl f16>::asin"
  },
  {
    "file": "std/src/num/f16.rs",
    "func": "f16::<impl f16>::asinh"
  },
  {
    "file": "std/src/num/f16.rs",
    "func": "f16::<impl f16>::atan"
  },
  {
    "file": "std/src/num/f16.rs",
    "func": "f16::<impl f16>::atan2"
  },
  {
    "file": "std/src/num/f16.rs",
    "func": "f16::<impl f16>::atanh"
  },
  {
    "file": "std/src/num/f16.rs",
    "func": "f16::<impl f16>::cos"
  },
  {
    "file": "std/src/num/f16.rs",
    "func": "f16::<impl f16>::cosh"
  },
  {
    "file": "std/src/num/f16.rs",
    "func": "f16::<impl f16>::erf"
  },
  {
    "file": "std/src/num/f16.rs",
    "func": "f16::<impl f16>::erfc"
  },
  {
    "file": "std/src/num/f16.rs",
    "func": "f16::<impl f16>::exp"
  },
  {
    "file": "std/src/num/f16.rs",
    "func": "f16::<impl f16>::exp2"
  },
  {
    "file": "std/src/num/f16.rs",
    "func": "f16::<impl f16>::exp_m1"
  },
  {
    "file": "std/src/num/f16.rs",
    "func": "f16::<impl f16>::gamma"
  },
  {
    "file": "std/src/num/f16.rs",
    "func": "f16::<impl f16>::hypot"
  },
  {
    "file": "std/src/num/f16.rs",
    "func": "f16::<impl f16>::ln"
  },
  {
    "file": "std/src/num/f16.rs",
    "func": "f16::<impl f16>::ln_1p"
  },
  {
    "file": "std/src/num/f16.rs",
    "func": "f16::<impl f16>::ln_gamma"
  },
  {
    "file": "std/src/num/f16.rs",
    "func": "f16::<impl f16>::log"
  },
  {
    "file": "std/src/num/f16.rs",
    "func": "f16::<impl f16>::log10"
  },
  {
    "file": "std/src/num/f16.rs",
    "func": "f16::<impl f16>::log2"
  },
  {
    "file": "std/src/num/f16.rs",
    "func": "f16::<impl f16>::powf"
  },
  {
    "file": "std/src/num/f16.rs",
    "func": "f16::<impl f16>::sin"
  },
  {
    "file": "std/src/num/f16.rs",
    "func": "f16::<impl f16>::sin_cos"
  },
  {
    "file": "std/src/num/f16.rs",
    "func": "f16::<impl f16>::sinh"
  },
  {
    "file": "std/src/num/f16.rs",
    "func": "f16::<impl f16>::tan"
  },
  {
    "file": "std/src/num/f16.rs",
    "func": "f16::<impl f16>::tanh"
  },
  {
    "file": "std/src/num/f32.rs",
    "func": "f32::<impl f32>::abs_sub"
  },
  {
    "file": "std/src/num/f32.rs",
    "func": "f32::<impl f32>::acos"
  },
  {
    "file": "std/src/num/f32.rs",
    "func": "f32::<impl f32>::acosh"
  },
  {
    "file": "std/src/num/f32.rs",
    "func": "f32::<impl f32>::asin"
  },
  {
    "file": "std/src/num/f32.rs",
    "func": "f32::<impl f32>::asinh"
  },
  {
    "file": "std/src/num/f32.rs",
    "func": "f32::<impl f32>::atan"
  },
  {
    "file": "std/src/num/f32.rs",
    "func": "f32::<impl f32>::atan2"
  },
  {
    "file": "std/src/num/f32.rs",
    "func": "f32::<impl f32>::atanh"
  },
  {
    "file": "std/src/num/f32.rs",
    "func": "f32::<impl f32>::cbrt"
  },
  {
    "file": "std/src/num/f32.rs",
    "func": "f32::<impl f32>::ceil"
  },
  {
    "file": "std/src/num/f32.rs",
    "func": "f32::<impl f32>::cos"
  },
  {
    "file": "std/src/num/f32.rs",
    "func": "f32::<impl f32>::cosh"
  },
  {
    "file": "std/src/num/f32.rs",
    "func": "f32::<impl f32>::div_euclid"
  },
  {
    "file": "std/src/num/f32.rs",
    "func": "f32::<impl f32>::erf"
  },
  {
    "file": "std/src/num/f32.rs",
    "func": "f32::<impl f32>::erfc"
  },
  {
    "file": "std/src/num/f32.rs",
    "func": "f32::<impl f32>::exp"
  },
  {
    "file": "std/src/num/f32.rs",
    "func": "f32::<impl f32>::exp2"
  },
  {
    "file": "std/src/num/f32.rs",
    "func": "f32::<impl f32>::exp_m1"
  },
  {
    "file": "std/src/num/f32.rs",
    "func": "f32::<impl f32>::floor"
  },
  {
    "file": "std/src/num/f32.rs",
    "func": "f32::<impl f32>::fract"
  },
  {
    "file": "std/src/num/f32.rs",
    "func": "f32::<impl f32>::gamma"
  },
  {
    "file": "std/src/num/f32.rs",
    "func": "f32::<impl f32>::hypot"
  },
  {
    "file": "std/src/num/f32.rs",
    "func": "f32::<impl f32>::ln"
  },
  {
    "file": "std/src/num/f32.rs",
    "func": "f32::<impl f32>::ln_1p"
  },
  {
    "file": "std/src/num/f32.rs",
    "func": "f32::<impl f32>::ln_gamma"
  },
  {
    "file": "std/src/num/f32.rs",
    "func": "f32::<impl f32>::log"
  },
  {
    "file": "std/src/num/f32.rs",
    "func": "f32::<impl f32>::log10"
  },
  {
    "file": "std/src/num/f32.rs",
    "func": "f32::<impl f32>::log2"
  },
  {
    "file": "std/src/num/f32.rs",
    "func": "f32::<impl f32>::mul_add"
  },
  {
    "file": "std/src/num/f32.rs",
    "func": "f32::<impl f32>::powf"
  },
  {
    "file": "std/src/num/f32.rs",
    "func": "f32::<impl f32>::powi"
  },
  {
    "file": "std/src/num/f32.rs",
    "func": "f32::<impl f32>::rem_euclid"
  },
  {
    "file": "std/src/num/f32.rs",
    "func": "f32::<impl f32>::round"
  },
  {
    "file": "std/src/num/f32.rs",
    "func": "f32::<impl f32>::round_ties_even"
  },
  {
    "file": "std/src/num/f32.rs",
    "func": "f32::<impl f32>::sin"
  },
  {
    "file": "std/src/num/f32.rs",
    "func": "f32::<impl f32>::sin_cos"
  },
  {
    "file": "std/src/num/f32.rs",
    "func": "f32::<impl f32>::sinh"
  },
  {
    "file": "std/src/num/f32.rs",
    "func": "f32::<impl f32>::sqrt"
  },
  {
    "file": "std/src/num/f32.rs",
    "func": "f32::<impl f32>::tan"
  },
  {
    "file": "std/src/num/f32.rs",
    "func": "f32::<impl f32>::tanh"
  },
  {
    "file": "std/src/num/f32.rs",
    "func": "f32::<impl f32>::trunc"
  },
  {
    "file": "std/src/num/f64.rs",
    "func": "f64::<impl f64>::abs_sub"
  },
  {
    "file": "std/src/num/f64.rs",
    "func": "f64::<impl f64>::acos"
  },
  {
    "file": "std/src/num/f64.rs",
    "func": "f64::<impl f64>::acosh"
  },
  {
    "file": "std/src/num/f64.rs",
    "func": "f64::<impl f64>::asin"
  },
  {
    "file": "std/src/num/f64.rs",
    "func": "f64::<impl f64>::asinh"
  },
  {
    "file": "std/src/num/f64.rs",
    "func": "f64::<impl f64>::atan"
  },
  {
    "file": "std/src/num/f64.rs",
    "func": "f64::<impl f64>::atan2"
  },
  {
    "file": "std/src/num/f64.rs",
    "func": "f64::<impl f64>::atanh"
  },
  {
    "file": "std/src/num/f64.rs",
    "func": "f64::<impl f64>::cbrt"
  },
  {
    "file": "std/src/num/f64.rs",
    "func": "f64::<impl f64>::ceil"
  },
  {
    "file": "std/src/num/f64.rs",
    "func": "f64::<impl f64>::cos"
  },
  {
    "file": "std/src/num/f64.rs",
    "func": "f64::<impl f64>::cosh"
  },
  {
    "file": "std/src/num/f64.rs",
    "func": "f64::<impl f64>::div_euclid"
  },
  {
    "file": "std/src/num/f64.rs",
    "func": "f64::<impl f64>::erf"
  },
  {
    "file": "std/src/num/f64.rs",
    "func": "f64::<impl f64>::erfc"
  },
  {
    "file": "std/src/num/f64.rs",
    "func": "f64::<impl f64>::exp"
  },
  {
    "file": "std/src/num/f64.rs",
    "func": "f64::<impl f64>::exp2"
  },
  {
    "file": "std/src/num/f64.rs",
    "func": "f64::<impl f64>::exp_m1"
  },
  {
    "file": "std/src/num/f64.rs",
    "func": "f64::<impl f64>::floor"
  },
  {
    "file": "std/src/num/f64.rs",
    "func": "f64::<impl f64>::fract"
  },
  {
    "file": "std/src/num/f64.rs",
    "func": "f64::<impl f64>::gamma"
  },
  {
    "file": "std/src/num/f64.rs",
    "func": "f64::<impl f64>::hypot"
  },
  {
    "file": "std/src/num/f64.rs",
    "func": "f64::<impl f64>::ln"
  },
  {
    "file": "std/src/num/f64.rs",
    "func": "f64::<impl f64>::ln_1p"
  },
  {
    "file": "std/src/num/f64.rs",
    "func": "f64::<impl f64>::ln_gamma"
  },
  {
    "file": "std/src/num/f64.rs",
    "func": "f64::<impl f64>::log"
  },
  {
    "file": "std/src/num/f64.rs",
    "func": "f64::<impl f64>::log10"
  },
  {
    "file": "std/src/num/f64.rs",
    "func": "f64::<impl f64>::log2"
  },
  {
    "file": "std/src/num/f64.rs",
    "func": "f64::<impl f64>::mul_add"
  },
  {
    "file": "std/src/num/f64.rs",
    "func": "f64::<impl f64>::powf"
  },
  {
    "file": "std/src/num/f64.rs",
    "func": "f64::<impl f64>::powi"
  },
  {
    "file": "std/src/num/f64.rs",
    "func": "f64::<impl f64>::rem_euclid"
  },
  {
    "file": "std/src/num/f64.rs",
    "func": "f64::<impl f64>::round"
  },
  {
    "file": "std/src/num/f64.rs",
    "func": "f64::<impl f64>::round_ties_even"
  },
  {
    "file": "std/src/num/f64.rs",
    "func": "f64::<impl f64>::sin"
  },
  {
    "file": "std/src/num/f64.rs",
    "func": "f64::<impl f64>::sin_cos"
  },
  {
    "file": "std/src/num/f64.rs",
    "func": "f64::<impl f64>::sinh"
  },
  {
    "file": "std/src/num/f64.rs",
    "func": "f64::<impl f64>::sqrt"
  },
  {
    "file": "std/src/num/f64.rs",
    "func": "f64::<impl f64>::tan"
  },
  {
    "file": "std/src/num/f64.rs",
    "func": "f64::<impl f64>::tanh"
  },
  {
    "file": "std/src/num/f64.rs",
    "func": "f64::<impl f64>::trunc"
  },
  {
    "file": "std/src/os/fd/net.rs",
    "func": "os::fd::net::<impl os::fd::raw::AsRawFd for net::tcp::TcpListener>::as_raw_fd"
  },
  {
    "file": "std/src/os/fd/net.rs",
    "func": "os::fd::net::<impl os::fd::raw::AsRawFd for net::tcp::TcpStream>::as_raw_fd"
  },
  {
    "file": "std/src/os/fd/net.rs",
    "func": "os::fd::net::<impl os::fd::raw::AsRawFd for net::udp::UdpSocket>::as_raw_fd"
  },
  {
    "file": "std/src/os/fd/net.rs",
    "func": "os::fd::net::<impl os::fd::raw::FromRawFd for net::tcp::TcpListener>::from_raw_fd"
  },
  {
    "file": "std/src/os/fd/net.rs",
    "func": "os::fd::net::<impl os::fd::raw::FromRawFd for net::tcp::TcpStream>::from_raw_fd"
  },
  {
    "file": "std/src/os/fd/net.rs",
    "func": "os::fd::net::<impl os::fd::raw::FromRawFd for net::udp::UdpSocket>::from_raw_fd"
  },
  {
    "file": "std/src/os/fd/net.rs",
    "func": "os::fd::net::<impl os::fd::raw::IntoRawFd for net::tcp::TcpListener>::into_raw_fd"
  },
  {
    "file": "std/src/os/fd/net.rs",
    "func": "os::fd::net::<impl os::fd::raw::IntoRawFd for net::tcp::TcpStream>::into_raw_fd"
  },
  {
    "file": "std/src/os/fd/net.rs",
    "func": "os::fd::net::<impl os::fd::raw::IntoRawFd for net::udp::UdpSocket>::into_raw_fd"
  },
  {
    "file": "std/src/os/fd/owned.rs",
    "func": "<fs::File as os::fd::owned::AsFd>::as_fd"
  },
  {
    "file": "std/src/os/fd/owned.rs",
    "func": "<io::pipe::PipeReader as os::fd::owned::AsFd>::as_fd"
  },
  {
    "file": "std/src/os/fd/owned.rs",
    "func": "<io::pipe::PipeWriter as os::fd::owned::AsFd>::as_fd"
  },
  {
    "file": "std/src/os/fd/owned.rs",
    "func": "<io::stdio::Stderr as os::fd::owned::AsFd>::as_fd"
  },
  {
    "file": "std/src/os/fd/owned.rs",
    "func": "<net::tcp::TcpListener as os::fd::owned::AsFd>::as_fd"
  },
  {
    "file": "std/src/os/fd/owned.rs",
    "func": "<net::tcp::TcpStream as os::fd::owned::AsFd>::as_fd"
  },
  {
    "file": "std/src/os/fd/owned.rs",
    "func": "<net::udp::UdpSocket as os::fd::owned::AsFd>::as_fd"
  },
  {
    "file": "std/src/os/fd/owned.rs",
    "func": "<os::fd::owned::OwnedFd as core::convert::From<fs::File>>::from"
  },
  {
    "file": "std/src/os/fd/owned.rs",
    "func": "<os::fd::owned::OwnedFd as core::convert::From<io::pipe::PipeReader>>::from"
  },
  {
    "file": "std/src/os/fd/owned.rs",
    "func": "<os::fd::owned::OwnedFd as core::convert::From<io::pipe::PipeWriter>>::from"
  },
  {
    "file": "std/src/os/fd/owned.rs",
    "func": "<os::fd::owned::OwnedFd as core::convert::From<net::tcp::TcpListener>>::from"
  },
  {
    "file": "std/src/os/fd/owned.rs",
    "func": "<os::fd::owned::OwnedFd as core::convert::From<net::tcp::TcpStream>>::from"
  },
  {
    "file": "std/src/os/fd/owned.rs",
    "func": "<os::fd::owned::OwnedFd as core::convert::From<net::udp::UdpSocket>>::from"
  },
  {
    "file": "std/src/os/fd/owned.rs",
    "func": "<os::fd::owned::OwnedFd as core::ops::Drop>::drop"
  },
  {
    "file": "std/src/os/fd/owned.rs",
    "func": "<os::fd::owned::OwnedFd as io::stdio::IsTerminal>::is_terminal"
  },
  {
    "file": "std/src/os/fd/owned.rs",
    "func": "<os::fd::owned::OwnedFd as os::fd::owned::AsFd>::as_fd"
  },
  {
    "file": "std/src/os/fd/owned.rs",
    "func": "<os::fd::owned::OwnedFd as os::fd::raw::AsRawFd>::as_raw_fd"
  },
  {
    "file": "std/src/os/fd/owned.rs",
    "func": "<os::fd::owned::OwnedFd as os::fd::raw::FromRawFd>::from_raw_fd"
  },
  {
    "file": "std/src/os/fd/owned.rs",
    "func": "<os::fd::owned::OwnedFd as os::fd::raw::IntoRawFd>::into_raw_fd"
  },
  {
    "file": "std/src/os/fd/owned.rs",
    "func": "os::fd::owned::<impl core::convert::From<os::fd::owned::OwnedFd> for fs::File>::from"
  },
  {
    "file": "std/src/os/fd/owned.rs",
    "func": "os::fd::owned::<impl core::convert::From<os::fd::owned::OwnedFd> for io::pipe::PipeReader>::from"
  },
  {
    "file": "std/src/os/fd/owned.rs",
    "func": "os::fd::owned::<impl core::convert::From<os::fd::owned::OwnedFd> for io::pipe::PipeWriter>::from"
  },
  {
    "file": "std/src/os/fd/owned.rs",
    "func": "os::fd::owned::<impl core::convert::From<os::fd::owned::OwnedFd> for net::tcp::TcpListener>::from"
  },
  {
    "file": "std/src/os/fd/owned.rs",
    "func": "os::fd::owned::<impl core::convert::From<os::fd::owned::OwnedFd> for net::tcp::TcpStream>::from"
  },
  {
    "file": "std/src/os/fd/owned.rs",
    "func": "os::fd::owned::<impl core::convert::From<os::fd::owned::OwnedFd> for net::udp::UdpSocket>::from"
  },
  {
    "file": "std/src/os/fd/owned.rs",
    "func": "os::fd::owned::BorrowedFd::<'_>::borrow_raw"
  },
  {
    "file": "std/src/os/fd/owned.rs",
    "func": "os::fd::owned::OwnedFd::try_clone"
  },
  {
    "file": "std/src/os/fd/raw.rs",
    "func": "<fs::File as os::fd::raw::AsRawFd>::as_raw_fd"
  },
  {
    "file": "std/src/os/fd/raw.rs",
    "func": "<fs::File as os::fd::raw::FromRawFd>::from_raw_fd"
  },
  {
    "file": "std/src/os/fd/raw.rs",
    "func": "<fs::File as os::fd::raw::IntoRawFd>::into_raw_fd"
  },
  {
    "file": "std/src/os/fd/raw.rs",
    "func": "<i32 as os::fd::raw::AsRawFd>::as_raw_fd"
  },
  {
    "file": "std/src/os/fd/raw.rs",
    "func": "<i32 as os::fd::raw::FromRawFd>::from_raw_fd"
  },
  {
    "file": "std/src/os/fd/raw.rs",
    "func": "<i32 as os::fd::raw::IntoRawFd>::into_raw_fd"
  },
  {
    "file": "std/src/os/fd/raw.rs",
    "func": "<io::pipe::PipeReader as os::fd::raw::AsRawFd>::as_raw_fd"
  },
  {
    "file": "std/src/os/fd/raw.rs",
    "func": "<io::pipe::PipeReader as os::fd::raw::FromRawFd>::from_raw_fd"
  },
  {
    "file": "std/src/os/fd/raw.rs",
    "func": "<io::pipe::PipeReader as os::fd::raw::IntoRawFd>::into_raw_fd"
  },
  {
    "file": "std/src/os/fd/raw.rs",
    "func": "<io::pipe::PipeWriter as os::fd::raw::AsRawFd>::as_raw_fd"
  },
  {
    "file": "std/src/os/fd/raw.rs",
    "func": "<io::pipe::PipeWriter as os::fd::raw::FromRawFd>::from_raw_fd"
  },
  {
    "file": "std/src/os/fd/raw.rs",
    "func": "<io::pipe::PipeWriter as os::fd::raw::IntoRawFd>::into_raw_fd"
  },
  {
    "file": "std/src/os/fd/raw.rs",
    "func": "<io::stdio::Stderr as os::fd::raw::AsRawFd>::as_raw_fd"
  },
  {
    "file": "std/src/os/linux/fs.rs",
    "func": "<fs::Metadata as os::linux::fs::MetadataExt>::as_raw_stat"
  },
  {
    "file": "std/src/os/linux/fs.rs",
    "func": "<fs::Metadata as os::linux::fs::MetadataExt>::st_atime"
  },
  {
    "file": "std/src/os/linux/fs.rs",
    "func": "<fs::Metadata as os::linux::fs::MetadataExt>::st_atime_nsec"
  },
  {
    "file": "std/src/os/linux/fs.rs",
    "func": "<fs::Metadata as os::linux::fs::MetadataExt>::st_blksize"
  },
  {
    "file": "std/src/os/linux/fs.rs",
    "func": "<fs::Metadata as os::linux::fs::MetadataExt>::st_blocks"
  },
  {
    "file": "std/src/os/linux/fs.rs",
    "func": "<fs::Metadata as os::linux::fs::MetadataExt>::st_ctime"
  },
  {
    "file": "std/src/os/linux/fs.rs",
    "func": "<fs::Metadata as os::linux::fs::MetadataExt>::st_ctime_nsec"
  },
  {
    "file": "std/src/os/linux/fs.rs",
    "func": "<fs::Metadata as os::linux::fs::MetadataExt>::st_dev"
  },
  {
    "file": "std/src/os/linux/fs.rs",
    "func": "<fs::Metadata as os::linux::fs::MetadataExt>::st_gid"
  },
  {
    "file": "std/src/os/linux/fs.rs",
    "func": "<fs::Metadata as os::linux::fs::MetadataExt>::st_ino"
  },
  {
    "file": "std/src/os/linux/fs.rs",
    "func": "<fs::Metadata as os::linux::fs::MetadataExt>::st_mode"
  },
  {
    "file": "std/src/os/linux/fs.rs",
    "func": "<fs::Metadata as os::linux::fs::MetadataExt>::st_mtime"
  },
  {
    "file": "std/src/os/linux/fs.rs",
    "func": "<fs::Metadata as os::linux::fs::MetadataExt>::st_mtime_nsec"
  },
  {
    "file": "std/src/os/linux/fs.rs",
    "func": "<fs::Metadata as os::linux::fs::MetadataExt>::st_nlink"
  },
  {
    "file": "std/src/os/linux/fs.rs",
    "func": "<fs::Metadata as os::linux::fs::MetadataExt>::st_rdev"
  },
  {
    "file": "std/src/os/linux/fs.rs",
    "func": "<fs::Metadata as os::linux::fs::MetadataExt>::st_size"
  },
  {
    "file": "std/src/os/linux/fs.rs",
    "func": "<fs::Metadata as os::linux::fs::MetadataExt>::st_uid"
  },
  {
    "file": "std/src/os/linux/process.rs",
    "func": "<os::linux::process::PidFd as core::convert::From<os::fd::owned::OwnedFd>>::from"
  },
  {
    "file": "std/src/os/linux/process.rs",
    "func": "<os::linux::process::PidFd as os::fd::owned::AsFd>::as_fd"
  },
  {
    "file": "std/src/os/linux/process.rs",
    "func": "<os::linux::process::PidFd as os::fd::raw::AsRawFd>::as_raw_fd"
  },
  {
    "file": "std/src/os/linux/process.rs",
    "func": "<os::linux::process::PidFd as os::fd::raw::FromRawFd>::from_raw_fd"
  },
  {
    "file": "std/src/os/linux/process.rs",
    "func": "<os::linux::process::PidFd as os::fd::raw::IntoRawFd>::into_raw_fd"
  },
  {
    "file": "std/src/os/linux/process.rs",
    "func": "<os::linux::process::PidFd as sys_common::AsInner<sys::pal::unix::linux::pidfd::PidFd>>::as_inner"
  },
  {
    "file": "std/src/os/linux/process.rs",
    "func": "<os::linux::process::PidFd as sys_common::FromInner<sys::pal::unix::linux::pidfd::PidFd>>::from_inner"
  },
  {
    "file": "std/src/os/linux/process.rs",
    "func": "<os::linux::process::PidFd as sys_common::IntoInner<sys::pal::unix::linux::pidfd::PidFd>>::into_inner"
  },
  {
    "file": "std/src/os/linux/process.rs",
    "func": "os::linux::process::<impl core::convert::From<os::linux::process::PidFd> for os::fd::owned::OwnedFd>::from"
  },
  {
    "file": "std/src/os/linux/process.rs",
    "func": "os::linux::process::PidFd::kill"
  },
  {
    "file": "std/src/os/linux/process.rs",
    "func": "os::linux::process::PidFd::try_wait"
  },
  {
    "file": "std/src/os/linux/process.rs",
    "func": "os::linux::process::PidFd::wait"
  },
  {
    "file": "std/src/os/linux/raw.rs",
    "func": "<os::linux::raw::arch::stat as core::clone::Clone>::clone"
  },
  {
    "file": "std/src/os/net/linux_ext/socket.rs",
    "func": "<os::unix::net::datagram::UnixDatagram as os::net::linux_ext::socket::UnixSocketExt>::passcred"
  },
  {
    "file": "std/src/os/net/linux_ext/socket.rs",
    "func": "<os::unix::net::datagram::UnixDatagram as os::net::linux_ext::socket::UnixSocketExt>::set_passcred"
  },
  {
    "file": "std/src/os/net/linux_ext/socket.rs",
    "func": "<os::unix::net::stream::UnixStream as os::net::linux_ext::socket::UnixSocketExt>::passcred"
  },
  {
    "file": "std/src/os/net/linux_ext/socket.rs",
    "func": "<os::unix::net::stream::UnixStream as os::net::linux_ext::socket::UnixSocketExt>::set_passcred"
  },
  {
    "file": "std/src/os/net/linux_ext/tcp.rs",
    "func": "<net::tcp::TcpStream as os::net::linux_ext::tcp::TcpStreamExt>::deferaccept"
  },
  {
    "file": "std/src/os/net/linux_ext/tcp.rs",
    "func": "<net::tcp::TcpStream as os::net::linux_ext::tcp::TcpStreamExt>::quickack"
  },
  {
    "file": "std/src/os/net/linux_ext/tcp.rs",
    "func": "<net::tcp::TcpStream as os::net::linux_ext::tcp::TcpStreamExt>::set_deferaccept"
  },
  {
    "file": "std/src/os/net/linux_ext/tcp.rs",
    "func": "<net::tcp::TcpStream as os::net::linux_ext::tcp::TcpStreamExt>::set_quickack"
  },
  {
    "file": "std/src/os/unix/fs.rs",
    "func": "<fs::DirBuilder as os::unix::fs::DirBuilderExt>::mode"
  },
  {
    "file": "std/src/os/unix/fs.rs",
    "func": "<fs::FileType as os::unix::fs::FileTypeExt>::is_block_device"
  },
  {
    "file": "std/src/os/unix/fs.rs",
    "func": "<fs::FileType as os::unix::fs::FileTypeExt>::is_char_device"
  },
  {
    "file": "std/src/os/unix/fs.rs",
    "func": "<fs::FileType as os::unix::fs::FileTypeExt>::is_fifo"
  },
  {
    "file": "std/src/os/unix/fs.rs",
    "func": "<fs::FileType as os::unix::fs::FileTypeExt>::is_socket"
  },
  {
    "file": "std/src/os/unix/fs.rs",
    "func": "<fs::Metadata as os::unix::fs::MetadataExt>::atime"
  },
  {
    "file": "std/src/os/unix/fs.rs",
    "func": "<fs::Metadata as os::unix::fs::MetadataExt>::atime_nsec"
  },
  {
    "file": "std/src/os/unix/fs.rs",
    "func": "<fs::Metadata as os::unix::fs::MetadataExt>::blksize"
  },
  {
    "file": "std/src/os/unix/fs.rs",
    "func": "<fs::Metadata as os::unix::fs::MetadataExt>::blocks"
  },
  {
    "file": "std/src/os/unix/fs.rs",
    "func": "<fs::Metadata as os::unix::fs::MetadataExt>::ctime"
  },
  {
    "file": "std/src/os/unix/fs.rs",
    "func": "<fs::Metadata as os::unix::fs::MetadataExt>::ctime_nsec"
  },
  {
    "file": "std/src/os/unix/fs.rs",
    "func": "<fs::Metadata as os::unix::fs::MetadataExt>::dev"
  },
  {
    "file": "std/src/os/unix/fs.rs",
    "func": "<fs::Metadata as os::unix::fs::MetadataExt>::gid"
  },
  {
    "file": "std/src/os/unix/fs.rs",
    "func": "<fs::Metadata as os::unix::fs::MetadataExt>::ino"
  },
  {
    "file": "std/src/os/unix/fs.rs",
    "func": "<fs::Metadata as os::unix::fs::MetadataExt>::mode"
  },
  {
    "file": "std/src/os/unix/fs.rs",
    "func": "<fs::Metadata as os::unix::fs::MetadataExt>::mtime"
  },
  {
    "file": "std/src/os/unix/fs.rs",
    "func": "<fs::Metadata as os::unix::fs::MetadataExt>::mtime_nsec"
  },
  {
    "file": "std/src/os/unix/fs.rs",
    "func": "<fs::Metadata as os::unix::fs::MetadataExt>::nlink"
  },
  {
    "file": "std/src/os/unix/fs.rs",
    "func": "<fs::Metadata as os::unix::fs::MetadataExt>::rdev"
  },
  {
    "file": "std/src/os/unix/fs.rs",
    "func": "<fs::Metadata as os::unix::fs::MetadataExt>::size"
  },
  {
    "file": "std/src/os/unix/fs.rs",
    "func": "<fs::Metadata as os::unix::fs::MetadataExt>::uid"
  },
  {
    "file": "std/src/os/unix/fs.rs",
    "func": "<fs::OpenOptions as os::unix::fs::OpenOptionsExt>::custom_flags"
  },
  {
    "file": "std/src/os/unix/fs.rs",
    "func": "<fs::OpenOptions as os::unix::fs::OpenOptionsExt>::mode"
  },
  {
    "file": "std/src/os/unix/fs.rs",
    "func": "<fs::Permissions as os::unix::fs::PermissionsExt>::from_mode"
  },
  {
    "file": "std/src/os/unix/fs.rs",
    "func": "<fs::Permissions as os::unix::fs::PermissionsExt>::mode"
  },
  {
    "file": "std/src/os/unix/fs.rs",
    "func": "<fs::Permissions as os::unix::fs::PermissionsExt>::set_mode"
  },
  {
    "file": "std/src/os/unix/net/addr.rs",
    "func": "<os::unix::net::addr::SocketAddr as core::clone::Clone>::clone"
  },
  {
    "file": "std/src/os/unix/net/addr.rs",
    "func": "<os::unix::net::addr::SocketAddr as os::net::linux_ext::addr::SocketAddrExt>::as_abstract_name"
  },
  {
    "file": "std/src/os/unix/net/addr.rs",
    "func": "os::unix::net::addr::SocketAddr::address"
  },
  {
    "file": "std/src/os/unix/net/addr.rs",
    "func": "os::unix::net::addr::SocketAddr::as_pathname"
  },
  {
    "file": "std/src/os/unix/net/addr.rs",
    "func": "os::unix::net::addr::SocketAddr::from_parts"
  },
  {
    "file": "std/src/os/unix/net/addr.rs",
    "func": "os::unix::net::addr::SocketAddr::is_unnamed"
  },
  {
    "file": "std/src/os/unix/net/ancillary.rs",
    "func": "<os::unix::net::ancillary::SocketCred as core::clone::Clone>::clone"
  },
  {
    "file": "std/src/os/unix/net/ancillary.rs",
    "func": "os::unix::net::ancillary::AncillaryData::<'_>::try_from_cmsghdr"
  },
  {
    "file": "std/src/os/unix/net/ancillary.rs",
    "func": "os::unix::net::ancillary::SocketCred::get_gid"
  },
  {
    "file": "std/src/os/unix/net/ancillary.rs",
    "func": "os::unix::net::ancillary::SocketCred::get_pid"
  },
  {
    "file": "std/src/os/unix/net/ancillary.rs",
    "func": "os::unix::net::ancillary::SocketCred::get_uid"
  },
  {
    "file": "std/src/os/unix/net/ancillary.rs",
    "func": "os::unix::net::ancillary::SocketCred::new"
  },
  {
    "file": "std/src/os/unix/net/ancillary.rs",
    "func": "os::unix::net::ancillary::SocketCred::set_gid"
  },
  {
    "file": "std/src/os/unix/net/ancillary.rs",
    "func": "os::unix::net::ancillary::SocketCred::set_pid"
  },
  {
    "file": "std/src/os/unix/net/ancillary.rs",
    "func": "os::unix::net::ancillary::SocketCred::set_uid"
  },
  {
    "file": "std/src/os/unix/net/datagram.rs",
    "func": "<os::unix::net::datagram::UnixDatagram as core::convert::From<os::fd::owned::OwnedFd>>::from"
  },
  {
    "file": "std/src/os/unix/net/datagram.rs",
    "func": "<os::unix::net::datagram::UnixDatagram as os::fd::owned::AsFd>::as_fd"
  },
  {
    "file": "std/src/os/unix/net/datagram.rs",
    "func": "<os::unix::net::datagram::UnixDatagram as os::fd::raw::AsRawFd>::as_raw_fd"
  },
  {
    "file": "std/src/os/unix/net/datagram.rs",
    "func": "<os::unix::net::datagram::UnixDatagram as os::fd::raw::FromRawFd>::from_raw_fd"
  },
  {
    "file": "std/src/os/unix/net/datagram.rs",
    "func": "<os::unix::net::datagram::UnixDatagram as os::fd::raw::IntoRawFd>::into_raw_fd"
  },
  {
    "file": "std/src/os/unix/net/datagram.rs",
    "func": "<os::unix::net::datagram::UnixDatagram as sys_common::AsInner<sys::net::connection::socket::unix::Socket>>::as_inner"
  },
  {
    "file": "std/src/os/unix/net/datagram.rs",
    "func": "os::unix::net::datagram::<impl core::convert::From<os::unix::net::datagram::UnixDatagram> for os::fd::owned::OwnedFd>::from"
  },
  {
    "file": "std/src/os/unix/net/datagram.rs",
    "func": "os::unix::net::datagram::UnixDatagram::bind_addr"
  },
  {
    "file": "std/src/os/unix/net/datagram.rs",
    "func": "os::unix::net::datagram::UnixDatagram::connect_addr"
  },
  {
    "file": "std/src/os/unix/net/datagram.rs",
    "func": "os::unix::net::datagram::UnixDatagram::local_addr"
  },
  {
    "file": "std/src/os/unix/net/datagram.rs",
    "func": "os::unix::net::datagram::UnixDatagram::pair"
  },
  {
    "file": "std/src/os/unix/net/datagram.rs",
    "func": "os::unix::net::datagram::UnixDatagram::peer_addr"
  },
  {
    "file": "std/src/os/unix/net/datagram.rs",
    "func": "os::unix::net::datagram::UnixDatagram::read_timeout"
  },
  {
    "file": "std/src/os/unix/net/datagram.rs",
    "func": "os::unix::net::datagram::UnixDatagram::set_mark"
  },
  {
    "file": "std/src/os/unix/net/datagram.rs",
    "func": "os::unix::net::datagram::UnixDatagram::set_nonblocking"
  },
  {
    "file": "std/src/os/unix/net/datagram.rs",
    "func": "os::unix::net::datagram::UnixDatagram::set_read_timeout"
  },
  {
    "file": "std/src/os/unix/net/datagram.rs",
    "func": "os::unix::net::datagram::UnixDatagram::set_write_timeout"
  },
  {
    "file": "std/src/os/unix/net/datagram.rs",
    "func": "os::unix::net::datagram::UnixDatagram::shutdown"
  },
  {
    "file": "std/src/os/unix/net/datagram.rs",
    "func": "os::unix::net::datagram::UnixDatagram::take_error"
  },
  {
    "file": "std/src/os/unix/net/datagram.rs",
    "func": "os::unix::net::datagram::UnixDatagram::try_clone"
  },
  {
    "file": "std/src/os/unix/net/datagram.rs",
    "func": "os::unix::net::datagram::UnixDatagram::unbound"
  },
  {
    "file": "std/src/os/unix/net/datagram.rs",
    "func": "os::unix::net::datagram::UnixDatagram::write_timeout"
  },
  {
    "file": "std/src/os/unix/net/listener.rs",
    "func": "<&os::unix::net::listener::UnixListener as core::iter::IntoIterator>::into_iter"
  },
  {
    "file": "std/src/os/unix/net/listener.rs",
    "func": "<os::unix::net::listener::UnixListener as core::convert::From<os::fd::owned::OwnedFd>>::from"
  },
  {
    "file": "std/src/os/unix/net/listener.rs",
    "func": "<os::unix::net::listener::UnixListener as os::fd::owned::AsFd>::as_fd"
  },
  {
    "file": "std/src/os/unix/net/listener.rs",
    "func": "<os::unix::net::listener::UnixListener as os::fd::raw::AsRawFd>::as_raw_fd"
  },
  {
    "file": "std/src/os/unix/net/listener.rs",
    "func": "<os::unix::net::listener::UnixListener as os::fd::raw::FromRawFd>::from_raw_fd"
  },
  {
    "file": "std/src/os/unix/net/listener.rs",
    "func": "<os::unix::net::listener::UnixListener as os::fd::raw::IntoRawFd>::into_raw_fd"
  },
  {
    "file": "std/src/os/unix/net/listener.rs",
    "func": "os::unix::net::listener::<impl core::convert::From<os::unix::net::listener::UnixListener> for os::fd::owned::OwnedFd>::from"
  },
  {
    "file": "std/src/os/unix/net/listener.rs",
    "func": "os::unix::net::listener::UnixListener::accept"
  },
  {
    "file": "std/src/os/unix/net/listener.rs",
    "func": "os::unix::net::listener::UnixListener::bind_addr"
  },
  {
    "file": "std/src/os/unix/net/listener.rs",
    "func": "os::unix::net::listener::UnixListener::incoming"
  },
  {
    "file": "std/src/os/unix/net/listener.rs",
    "func": "os::unix::net::listener::UnixListener::local_addr"
  },
  {
    "file": "std/src/os/unix/net/listener.rs",
    "func": "os::unix::net::listener::UnixListener::set_nonblocking"
  },
  {
    "file": "std/src/os/unix/net/listener.rs",
    "func": "os::unix::net::listener::UnixListener::take_error"
  },
  {
    "file": "std/src/os/unix/net/listener.rs",
    "func": "os::unix::net::listener::UnixListener::try_clone"
  },
  {
    "file": "std/src/os/unix/net/stream.rs",
    "func": "<&os::unix::net::stream::UnixStream as io::Read>::is_read_vectored"
  },
  {
    "file": "std/src/os/unix/net/stream.rs",
    "func": "<&os::unix::net::stream::UnixStream as io::Write>::flush"
  },
  {
    "file": "std/src/os/unix/net/stream.rs",
    "func": "<&os::unix::net::stream::UnixStream as io::Write>::is_write_vectored"
  },
  {
    "file": "std/src/os/unix/net/stream.rs",
    "func": "<os::unix::net::stream::UnixStream as core::convert::From<os::fd::owned::OwnedFd>>::from"
  },
  {
    "file": "std/src/os/unix/net/stream.rs",
    "func": "<os::unix::net::stream::UnixStream as io::Read>::is_read_vectored"
  },
  {
    "file": "std/src/os/unix/net/stream.rs",
    "func": "<os::unix::net::stream::UnixStream as io::Write>::flush"
  },
  {
    "file": "std/src/os/unix/net/stream.rs",
    "func": "<os::unix::net::stream::UnixStream as io::Write>::is_write_vectored"
  },
  {
    "file": "std/src/os/unix/net/stream.rs",
    "func": "<os::unix::net::stream::UnixStream as os::fd::owned::AsFd>::as_fd"
  },
  {
    "file": "std/src/os/unix/net/stream.rs",
    "func": "<os::unix::net::stream::UnixStream as os::fd::raw::AsRawFd>::as_raw_fd"
  },
  {
    "file": "std/src/os/unix/net/stream.rs",
    "func": "<os::unix::net::stream::UnixStream as os::fd::raw::FromRawFd>::from_raw_fd"
  },
  {
    "file": "std/src/os/unix/net/stream.rs",
    "func": "<os::unix::net::stream::UnixStream as os::fd::raw::IntoRawFd>::into_raw_fd"
  },
  {
    "file": "std/src/os/unix/net/stream.rs",
    "func": "<os::unix::net::stream::UnixStream as sys_common::AsInner<sys::net::connection::socket::unix::Socket>>::as_inner"
  },
  {
    "file": "std/src/os/unix/net/stream.rs",
    "func": "os::unix::net::stream::<impl core::convert::From<os::unix::net::stream::UnixStream> for os::fd::owned::OwnedFd>::from"
  },
  {
    "file": "std/src/os/unix/net/stream.rs",
    "func": "os::unix::net::stream::UnixStream::connect_addr"
  },
  {
    "file": "std/src/os/unix/net/stream.rs",
    "func": "os::unix::net::stream::UnixStream::local_addr"
  },
  {
    "file": "std/src/os/unix/net/stream.rs",
    "func": "os::unix::net::stream::UnixStream::pair"
  },
  {
    "file": "std/src/os/unix/net/stream.rs",
    "func": "os::unix::net::stream::UnixStream::peer_addr"
  },
  {
    "file": "std/src/os/unix/net/stream.rs",
    "func": "os::unix::net::stream::UnixStream::peer_cred"
  },
  {
    "file": "std/src/os/unix/net/stream.rs",
    "func": "os::unix::net::stream::UnixStream::read_timeout"
  },
  {
    "file": "std/src/os/unix/net/stream.rs",
    "func": "os::unix::net::stream::UnixStream::set_mark"
  },
  {
    "file": "std/src/os/unix/net/stream.rs",
    "func": "os::unix::net::stream::UnixStream::set_nonblocking"
  },
  {
    "file": "std/src/os/unix/net/stream.rs",
    "func": "os::unix::net::stream::UnixStream::set_read_timeout"
  },
  {
    "file": "std/src/os/unix/net/stream.rs",
    "func": "os::unix::net::stream::UnixStream::set_write_timeout"
  },
  {
    "file": "std/src/os/unix/net/stream.rs",
    "func": "os::unix::net::stream::UnixStream::shutdown"
  },
  {
    "file": "std/src/os/unix/net/stream.rs",
    "func": "os::unix::net::stream::UnixStream::take_error"
  },
  {
    "file": "std/src/os/unix/net/stream.rs",
    "func": "os::unix::net::stream::UnixStream::try_clone"
  },
  {
    "file": "std/src/os/unix/net/stream.rs",
    "func": "os::unix::net::stream::UnixStream::write_timeout"
  },
  {
    "file": "std/src/os/unix/net/ucred.rs",
    "func": "<os::unix::net::ucred::UCred as core::clone::Clone>::clone"
  },
  {
    "file": "std/src/os/unix/net/ucred.rs",
    "func": "<os::unix::net::ucred::UCred as core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "std/src/os/unix/net/ucred.rs",
    "func": "<os::unix::net::ucred::UCred as core::cmp::PartialEq>::eq"
  },
  {
    "file": "std/src/os/unix/net/ucred.rs",
    "func": "os::unix::net::ucred::impl_linux::peer_cred"
  },
  {
    "file": "std/src/os/unix/process.rs",
    "func": "<process::Child as os::unix::process::ChildExt>::send_signal"
  },
  {
    "file": "std/src/os/unix/process.rs",
    "func": "<process::ExitStatus as os::unix::process::ExitStatusExt>::continued"
  },
  {
    "file": "std/src/os/unix/process.rs",
    "func": "<process::ExitStatus as os::unix::process::ExitStatusExt>::core_dumped"
  },
  {
    "file": "std/src/os/unix/process.rs",
    "func": "<process::ExitStatus as os::unix::process::ExitStatusExt>::from_raw"
  },
  {
    "file": "std/src/os/unix/process.rs",
    "func": "<process::ExitStatus as os::unix::process::ExitStatusExt>::into_raw"
  },
  {
    "file": "std/src/os/unix/process.rs",
    "func": "<process::ExitStatus as os::unix::process::ExitStatusExt>::signal"
  },
  {
    "file": "std/src/os/unix/process.rs",
    "func": "<process::ExitStatus as os::unix::process::ExitStatusExt>::stopped_signal"
  },
  {
    "file": "std/src/os/unix/process.rs",
    "func": "<process::ExitStatusError as os::unix::process::ExitStatusExt>::continued"
  },
  {
    "file": "std/src/os/unix/process.rs",
    "func": "<process::ExitStatusError as os::unix::process::ExitStatusExt>::core_dumped"
  },
  {
    "file": "std/src/os/unix/process.rs",
    "func": "<process::ExitStatusError as os::unix::process::ExitStatusExt>::from_raw"
  },
  {
    "file": "std/src/os/unix/process.rs",
    "func": "<process::ExitStatusError as os::unix::process::ExitStatusExt>::into_raw"
  },
  {
    "file": "std/src/os/unix/process.rs",
    "func": "<process::ExitStatusError as os::unix::process::ExitStatusExt>::signal"
  },
  {
    "file": "std/src/os/unix/process.rs",
    "func": "<process::ExitStatusError as os::unix::process::ExitStatusExt>::stopped_signal"
  },
  {
    "file": "std/src/os/unix/process.rs",
    "func": "os::unix::process::<impl core::convert::From<os::fd::owned::OwnedFd> for process::ChildStderr>::from"
  },
  {
    "file": "std/src/os/unix/process.rs",
    "func": "os::unix::process::<impl core::convert::From<os::fd::owned::OwnedFd> for process::ChildStdin>::from"
  },
  {
    "file": "std/src/os/unix/process.rs",
    "func": "os::unix::process::<impl core::convert::From<os::fd::owned::OwnedFd> for process::ChildStdout>::from"
  },
  {
    "file": "std/src/os/unix/process.rs",
    "func": "os::unix::process::<impl core::convert::From<os::fd::owned::OwnedFd> for process::Stdio>::from"
  },
  {
    "file": "std/src/os/unix/process.rs",
    "func": "os::unix::process::<impl core::convert::From<process::ChildStderr> for os::fd::owned::OwnedFd>::from"
  },
  {
    "file": "std/src/os/unix/process.rs",
    "func": "os::unix::process::<impl core::convert::From<process::ChildStdin> for os::fd::owned::OwnedFd>::from"
  },
  {
    "file": "std/src/os/unix/process.rs",
    "func": "os::unix::process::<impl core::convert::From<process::ChildStdout> for os::fd::owned::OwnedFd>::from"
  },
  {
    "file": "std/src/os/unix/process.rs",
    "func": "os::unix::process::<impl os::fd::owned::AsFd for process::ChildStderr>::as_fd"
  },
  {
    "file": "std/src/os/unix/process.rs",
    "func": "os::unix::process::<impl os::fd::owned::AsFd for process::ChildStdin>::as_fd"
  },
  {
    "file": "std/src/os/unix/process.rs",
    "func": "os::unix::process::<impl os::fd::owned::AsFd for process::ChildStdout>::as_fd"
  },
  {
    "file": "std/src/os/unix/process.rs",
    "func": "os::unix::process::<impl os::fd::raw::AsRawFd for process::ChildStderr>::as_raw_fd"
  },
  {
    "file": "std/src/os/unix/process.rs",
    "func": "os::unix::process::<impl os::fd::raw::AsRawFd for process::ChildStdin>::as_raw_fd"
  },
  {
    "file": "std/src/os/unix/process.rs",
    "func": "os::unix::process::<impl os::fd::raw::AsRawFd for process::ChildStdout>::as_raw_fd"
  },
  {
    "file": "std/src/os/unix/process.rs",
    "func": "os::unix::process::<impl os::fd::raw::FromRawFd for process::Stdio>::from_raw_fd"
  },
  {
    "file": "std/src/os/unix/process.rs",
    "func": "os::unix::process::<impl os::fd::raw::IntoRawFd for process::ChildStderr>::into_raw_fd"
  },
  {
    "file": "std/src/os/unix/process.rs",
    "func": "os::unix::process::<impl os::fd::raw::IntoRawFd for process::ChildStdin>::into_raw_fd"
  },
  {
    "file": "std/src/os/unix/process.rs",
    "func": "os::unix::process::<impl os::fd::raw::IntoRawFd for process::ChildStdout>::into_raw_fd"
  },
  {
    "file": "std/src/os/unix/process.rs",
    "func": "os::unix::process::parent_id"
  },
  {
    "file": "std/src/panic.rs",
    "func": "<panic::BacktraceStyle as core::clone::Clone>::clone"
  },
  {
    "file": "std/src/panic.rs",
    "func": "<panic::BacktraceStyle as core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "std/src/panic.rs",
    "func": "<panic::BacktraceStyle as core::cmp::PartialEq>::eq"
  },
  {
    "file": "std/src/panic.rs",
    "func": "panic::BacktraceStyle::as_u8"
  },
  {
    "file": "std/src/panic.rs",
    "func": "panic::BacktraceStyle::from_u8"
  },
  {
    "file": "std/src/panic.rs",
    "func": "panic::BacktraceStyle::full"
  },
  {
    "file": "std/src/panic.rs",
    "func": "panic::always_abort"
  },
  {
    "file": "std/src/panic.rs",
    "func": "panic::get_backtrace_style"
  },
  {
    "file": "std/src/panic.rs",
    "func": "panic::set_backtrace_style"
  },
  {
    "file": "std/src/panicking.rs",
    "func": "<panicking::Hook as core::default::Default>::default"
  },
  {
    "file": "std/src/panicking.rs",
    "func": "panicking::__rust_drop_panic"
  },
  {
    "file": "std/src/panicking.rs",
    "func": "panicking::__rust_foreign_exception"
  },
  {
    "file": "std/src/panicking.rs",
    "func": "panicking::panic_count::count_is_zero"
  },
  {
    "file": "std/src/panicking.rs",
    "func": "panicking::panic_count::decrease"
  },
  {
    "file": "std/src/panicking.rs",
    "func": "panicking::panic_count::finished_panic_hook"
  },
  {
    "file": "std/src/panicking.rs",
    "func": "panicking::panic_count::get_count"
  },
  {
    "file": "std/src/panicking.rs",
    "func": "panicking::panic_count::increase"
  },
  {
    "file": "std/src/panicking.rs",
    "func": "panicking::panic_count::is_zero_slow_path"
  },
  {
    "file": "std/src/panicking.rs",
    "func": "panicking::panic_count::set_always_abort"
  },
  {
    "file": "std/src/panicking.rs",
    "func": "panicking::panicking"
  },
  {
    "file": "std/src/panicking.rs",
    "func": "panicking::take_hook"
  },
  {
    "file": "std/src/path.rs",
    "func": "<path::NormalizeError as core::cmp::PartialEq>::eq"
  },
  {
    "file": "std/src/path.rs",
    "func": "<path::PathBuf as core::default::Default>::default"
  },
  {
    "file": "std/src/path.rs",
    "func": "<path::State as core::clone::Clone>::clone"
  },
  {
    "file": "std/src/path.rs",
    "func": "<path::State as core::cmp::PartialEq>::eq"
  },
  {
    "file": "std/src/path.rs",
    "func": "<path::State as core::cmp::PartialOrd>::partial_cmp"
  },
  {
    "file": "std/src/path.rs",
    "func": "<path::StripPrefixError as core::clone::Clone>::clone"
  },
  {
    "file": "std/src/path.rs",
    "func": "<path::StripPrefixError as core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "std/src/path.rs",
    "func": "<path::StripPrefixError as core::cmp::PartialEq>::eq"
  },
  {
    "file": "std/src/path.rs",
    "func": "<path::StripPrefixError as core::error::Error>::description"
  },
  {
    "file": "std/src/path.rs",
    "func": "path::PathBuf::new"
  },
  {
    "file": "std/src/path.rs",
    "func": "path::PathBuf::with_capacity"
  },
  {
    "file": "std/src/path.rs",
    "func": "path::is_separator"
  },
  {
    "file": "std/src/process.rs",
    "func": "<&process::ChildStdin as io::Write>::flush"
  },
  {
    "file": "std/src/process.rs",
    "func": "<&process::ChildStdin as io::Write>::is_write_vectored"
  },
  {
    "file": "std/src/process.rs",
    "func": "<() as process::Termination>::report"
  },
  {
    "file": "std/src/process.rs",
    "func": "<process::Child as sys_common::AsInner<sys::process::unix::unix::Process>>::as_inner"
  },
  {
    "file": "std/src/process.rs",
    "func": "<process::Child as sys_common::IntoInner<sys::process::unix::unix::Process>>::into_inner"
  },
  {
    "file": "std/src/process.rs",
    "func": "<process::ChildStderr as io::Read>::is_read_vectored"
  },
  {
    "file": "std/src/process.rs",
    "func": "<process::ChildStderr as sys_common::AsInner<sys::pal::unix::pipe::AnonPipe>>::as_inner"
  },
  {
    "file": "std/src/process.rs",
    "func": "<process::ChildStderr as sys_common::FromInner<sys::pal::unix::pipe::AnonPipe>>::from_inner"
  },
  {
    "file": "std/src/process.rs",
    "func": "<process::ChildStderr as sys_common::IntoInner<sys::pal::unix::pipe::AnonPipe>>::into_inner"
  },
  {
    "file": "std/src/process.rs",
    "func": "<process::ChildStdin as io::Write>::flush"
  },
  {
    "file": "std/src/process.rs",
    "func": "<process::ChildStdin as io::Write>::is_write_vectored"
  },
  {
    "file": "std/src/process.rs",
    "func": "<process::ChildStdin as sys_common::AsInner<sys::pal::unix::pipe::AnonPipe>>::as_inner"
  },
  {
    "file": "std/src/process.rs",
    "func": "<process::ChildStdin as sys_common::FromInner<sys::pal::unix::pipe::AnonPipe>>::from_inner"
  },
  {
    "file": "std/src/process.rs",
    "func": "<process::ChildStdin as sys_common::IntoInner<sys::pal::unix::pipe::AnonPipe>>::into_inner"
  },
  {
    "file": "std/src/process.rs",
    "func": "<process::ChildStdout as io::Read>::is_read_vectored"
  },
  {
    "file": "std/src/process.rs",
    "func": "<process::ChildStdout as sys_common::AsInner<sys::pal::unix::pipe::AnonPipe>>::as_inner"
  },
  {
    "file": "std/src/process.rs",
    "func": "<process::ChildStdout as sys_common::FromInner<sys::pal::unix::pipe::AnonPipe>>::from_inner"
  },
  {
    "file": "std/src/process.rs",
    "func": "<process::ChildStdout as sys_common::IntoInner<sys::pal::unix::pipe::AnonPipe>>::into_inner"
  },
  {
    "file": "std/src/process.rs",
    "func": "<process::ExitCode as core::clone::Clone>::clone"
  },
  {
    "file": "std/src/process.rs",
    "func": "<process::ExitCode as core::cmp::PartialEq>::eq"
  },
  {
    "file": "std/src/process.rs",
    "func": "<process::ExitCode as core::convert::From<u8>>::from"
  },
  {
    "file": "std/src/process.rs",
    "func": "<process::ExitCode as core::default::Default>::default"
  },
  {
    "file": "std/src/process.rs",
    "func": "<process::ExitCode as process::Termination>::report"
  },
  {
    "file": "std/src/process.rs",
    "func": "<process::ExitCode as sys_common::AsInner<sys::process::unix::common::ExitCode>>::as_inner"
  },
  {
    "file": "std/src/process.rs",
    "func": "<process::ExitCode as sys_common::FromInner<sys::process::unix::common::ExitCode>>::from_inner"
  },
  {
    "file": "std/src/process.rs",
    "func": "<process::ExitStatus as core::clone::Clone>::clone"
  },
  {
    "file": "std/src/process.rs",
    "func": "<process::ExitStatus as core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "std/src/process.rs",
    "func": "<process::ExitStatus as core::cmp::PartialEq>::eq"
  },
  {
    "file": "std/src/process.rs",
    "func": "<process::ExitStatus as core::convert::From<process::ExitStatusError>>::from"
  },
  {
    "file": "std/src/process.rs",
    "func": "<process::ExitStatus as core::default::Default>::default"
  },
  {
    "file": "std/src/process.rs",
    "func": "<process::ExitStatus as sys_common::AsInner<sys::process::unix::unix::ExitStatus>>::as_inner"
  },
  {
    "file": "std/src/process.rs",
    "func": "<process::ExitStatus as sys_common::FromInner<sys::process::unix::unix::ExitStatus>>::from_inner"
  },
  {
    "file": "std/src/process.rs",
    "func": "<process::ExitStatusError as core::clone::Clone>::clone"
  },
  {
    "file": "std/src/process.rs",
    "func": "<process::ExitStatusError as core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "std/src/process.rs",
    "func": "<process::ExitStatusError as core::cmp::PartialEq>::eq"
  },
  {
    "file": "std/src/process.rs",
    "func": "<process::Stdio as core::convert::From<fs::File>>::from"
  },
  {
    "file": "std/src/process.rs",
    "func": "<process::Stdio as core::convert::From<io::pipe::PipeReader>>::from"
  },
  {
    "file": "std/src/process.rs",
    "func": "<process::Stdio as core::convert::From<io::pipe::PipeWriter>>::from"
  },
  {
    "file": "std/src/process.rs",
    "func": "<process::Stdio as core::convert::From<io::stdio::Stderr>>::from"
  },
  {
    "file": "std/src/process.rs",
    "func": "<process::Stdio as core::convert::From<process::ChildStderr>>::from"
  },
  {
    "file": "std/src/process.rs",
    "func": "<process::Stdio as core::convert::From<process::ChildStdin>>::from"
  },
  {
    "file": "std/src/process.rs",
    "func": "<process::Stdio as core::convert::From<process::ChildStdout>>::from"
  },
  {
    "file": "std/src/process.rs",
    "func": "process::Child::id"
  },
  {
    "file": "std/src/process.rs",
    "func": "process::Child::kill"
  },
  {
    "file": "std/src/process.rs",
    "func": "process::Child::try_wait"
  },
  {
    "file": "std/src/process.rs",
    "func": "process::Child::wait"
  },
  {
    "file": "std/src/process.rs",
    "func": "process::Child::wait_with_output"
  },
  {
    "file": "std/src/process.rs",
    "func": "process::ExitCode::exit_process"
  },
  {
    "file": "std/src/process.rs",
    "func": "process::ExitCode::to_i32"
  },
  {
    "file": "std/src/process.rs",
    "func": "process::ExitStatus::code"
  },
  {
    "file": "std/src/process.rs",
    "func": "process::ExitStatus::exit_ok"
  },
  {
    "file": "std/src/process.rs",
    "func": "process::ExitStatus::success"
  },
  {
    "file": "std/src/process.rs",
    "func": "process::ExitStatusError::code"
  },
  {
    "file": "std/src/process.rs",
    "func": "process::ExitStatusError::code_nonzero"
  },
  {
    "file": "std/src/process.rs",
    "func": "process::ExitStatusError::into_status"
  },
  {
    "file": "std/src/process.rs",
    "func": "process::Stdio::inherit"
  },
  {
    "file": "std/src/process.rs",
    "func": "process::Stdio::null"
  },
  {
    "file": "std/src/process.rs",
    "func": "process::Stdio::piped"
  },
  {
    "file": "std/src/process.rs",
    "func": "process::abort"
  },
  {
    "file": "std/src/process.rs",
    "func": "process::exit"
  },
  {
    "file": "std/src/process.rs",
    "func": "process::id"
  },
  {
    "file": "std/src/random.rs",
    "func": "<random::DefaultRandomSource as core::clone::Clone>::clone"
  },
  {
    "file": "std/src/random.rs",
    "func": "<random::DefaultRandomSource as core::default::Default>::default"
  },
  {
    "file": "std/src/rt.rs",
    "func": "rt::__rust_abort"
  },
  {
    "file": "std/src/rt.rs",
    "func": "rt::cleanup"
  },
  {
    "file": "std/src/rt.rs",
    "func": "rt::thread_cleanup"
  },
  {
    "file": "std/src/sync/barrier.rs",
    "func": "sync::barrier::Barrier::new"
  },
  {
    "file": "std/src/sync/barrier.rs",
    "func": "sync::barrier::Barrier::wait"
  },
  {
    "file": "std/src/sync/barrier.rs",
    "func": "sync::barrier::BarrierWaitResult::is_leader"
  },
  {
    "file": "std/src/sync/lazy_lock.rs",
    "func": "sync::lazy_lock::panic_poisoned"
  },
  {
    "file": "std/src/sync/mpmc/array.rs",
    "func": "<sync::mpmc::array::ArrayToken as core::default::Default>::default"
  },
  {
    "file": "std/src/sync/mpmc/context.rs",
    "func": "sync::mpmc::context::Context::new"
  },
  {
    "file": "std/src/sync/mpmc/list.rs",
    "func": "<sync::mpmc::list::ListToken as core::default::Default>::default"
  },
  {
    "file": "std/src/sync/mpmc/select.rs",
    "func": "<sync::mpmc::select::Operation as core::clone::Clone>::clone"
  },
  {
    "file": "std/src/sync/mpmc/select.rs",
    "func": "<sync::mpmc::select::Operation as core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "std/src/sync/mpmc/select.rs",
    "func": "<sync::mpmc::select::Operation as core::cmp::PartialEq>::eq"
  },
  {
    "file": "std/src/sync/mpmc/select.rs",
    "func": "<sync::mpmc::select::Selected as core::clone::Clone>::clone"
  },
  {
    "file": "std/src/sync/mpmc/select.rs",
    "func": "<sync::mpmc::select::Selected as core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "std/src/sync/mpmc/select.rs",
    "func": "<sync::mpmc::select::Selected as core::cmp::PartialEq>::eq"
  },
  {
    "file": "std/src/sync/mpmc/select.rs",
    "func": "<sync::mpmc::select::Selected as core::convert::From<usize>>::from"
  },
  {
    "file": "std/src/sync/mpmc/select.rs",
    "func": "<sync::mpmc::select::Selected as core::convert::Into<usize>>::into"
  },
  {
    "file": "std/src/sync/mpmc/select.rs",
    "func": "<sync::mpmc::select::Token as core::default::Default>::default"
  },
  {
    "file": "std/src/sync/mpmc/utils.rs",
    "func": "sync::mpmc::utils::Backoff::new"
  },
  {
    "file": "std/src/sync/mpmc/utils.rs",
    "func": "sync::mpmc::utils::Backoff::spin_heavy"
  },
  {
    "file": "std/src/sync/mpmc/utils.rs",
    "func": "sync::mpmc::utils::Backoff::spin_light"
  },
  {
    "file": "std/src/sync/mpmc/waker.rs",
    "func": "sync::mpmc::waker::SyncWaker::new"
  },
  {
    "file": "std/src/sync/mpmc/waker.rs",
    "func": "sync::mpmc::waker::Waker::new"
  },
  {
    "file": "std/src/sync/mpmc/waker.rs",
    "func": "sync::mpmc::waker::current_thread_id"
  },
  {
    "file": "std/src/sync/mpmc/zero.rs",
    "func": "<sync::mpmc::zero::ZeroToken as core::default::Default>::default"
  },
  {
    "file": "std/src/sync/mpsc.rs",
    "func": "<sync::mpsc::RecvError as core::clone::Clone>::clone"
  },
  {
    "file": "std/src/sync/mpsc.rs",
    "func": "<sync::mpsc::RecvError as core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "std/src/sync/mpsc.rs",
    "func": "<sync::mpsc::RecvError as core::cmp::PartialEq>::eq"
  },
  {
    "file": "std/src/sync/mpsc.rs",
    "func": "<sync::mpsc::RecvError as core::error::Error>::description"
  },
  {
    "file": "std/src/sync/mpsc.rs",
    "func": "<sync::mpsc::RecvTimeoutError as core::clone::Clone>::clone"
  },
  {
    "file": "std/src/sync/mpsc.rs",
    "func": "<sync::mpsc::RecvTimeoutError as core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "std/src/sync/mpsc.rs",
    "func": "<sync::mpsc::RecvTimeoutError as core::cmp::PartialEq>::eq"
  },
  {
    "file": "std/src/sync/mpsc.rs",
    "func": "<sync::mpsc::RecvTimeoutError as core::convert::From<sync::mpsc::RecvError>>::from"
  },
  {
    "file": "std/src/sync/mpsc.rs",
    "func": "<sync::mpsc::RecvTimeoutError as core::error::Error>::description"
  },
  {
    "file": "std/src/sync/mpsc.rs",
    "func": "<sync::mpsc::TryRecvError as core::clone::Clone>::clone"
  },
  {
    "file": "std/src/sync/mpsc.rs",
    "func": "<sync::mpsc::TryRecvError as core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "std/src/sync/mpsc.rs",
    "func": "<sync::mpsc::TryRecvError as core::cmp::PartialEq>::eq"
  },
  {
    "file": "std/src/sync/mpsc.rs",
    "func": "<sync::mpsc::TryRecvError as core::convert::From<sync::mpsc::RecvError>>::from"
  },
  {
    "file": "std/src/sync/mpsc.rs",
    "func": "<sync::mpsc::TryRecvError as core::error::Error>::description"
  },
  {
    "file": "std/src/sync/poison.rs",
    "func": "<sync::poison::Guard as core::clone::Clone>::clone"
  },
  {
    "file": "std/src/sync/poison.rs",
    "func": "sync::poison::Flag::borrow"
  },
  {
    "file": "std/src/sync/poison.rs",
    "func": "sync::poison::Flag::clear"
  },
  {
    "file": "std/src/sync/poison.rs",
    "func": "sync::poison::Flag::done"
  },
  {
    "file": "std/src/sync/poison.rs",
    "func": "sync::poison::Flag::get"
  },
  {
    "file": "std/src/sync/poison.rs",
    "func": "sync::poison::Flag::guard"
  },
  {
    "file": "std/src/sync/poison.rs",
    "func": "sync::poison::Flag::new"
  },
  {
    "file": "std/src/sync/poison/condvar.rs",
    "func": "<sync::poison::condvar::Condvar as core::default::Default>::default"
  },
  {
    "file": "std/src/sync/poison/condvar.rs",
    "func": "<sync::poison::condvar::WaitTimeoutResult as core::clone::Clone>::clone"
  },
  {
    "file": "std/src/sync/poison/condvar.rs",
    "func": "<sync::poison::condvar::WaitTimeoutResult as core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "std/src/sync/poison/condvar.rs",
    "func": "<sync::poison::condvar::WaitTimeoutResult as core::cmp::PartialEq>::eq"
  },
  {
    "file": "std/src/sync/poison/condvar.rs",
    "func": "sync::poison::condvar::Condvar::new"
  },
  {
    "file": "std/src/sync/poison/condvar.rs",
    "func": "sync::poison::condvar::Condvar::notify_all"
  },
  {
    "file": "std/src/sync/poison/condvar.rs",
    "func": "sync::poison::condvar::Condvar::notify_one"
  },
  {
    "file": "std/src/sync/poison/condvar.rs",
    "func": "sync::poison::condvar::WaitTimeoutResult::timed_out"
  },
  {
    "file": "std/src/sync/poison/once.rs",
    "func": "sync::poison::once::Once::is_completed"
  },
  {
    "file": "std/src/sync/poison/once.rs",
    "func": "sync::poison::once::Once::new"
  },
  {
    "file": "std/src/sync/poison/once.rs",
    "func": "sync::poison::once::Once::set_state"
  },
  {
    "file": "std/src/sync/poison/once.rs",
    "func": "sync::poison::once::Once::state"
  },
  {
    "file": "std/src/sync/poison/once.rs",
    "func": "sync::poison::once::Once::wait"
  },
  {
    "file": "std/src/sync/poison/once.rs",
    "func": "sync::poison::once::Once::wait_force"
  },
  {
    "file": "std/src/sync/poison/once.rs",
    "func": "sync::poison::once::OnceState::is_poisoned"
  },
  {
    "file": "std/src/sync/poison/once.rs",
    "func": "sync::poison::once::OnceState::poison"
  },
  {
    "file": "std/src/sync/reentrant_lock.rs",
    "func": "sync::reentrant_lock::Tid::contains"
  },
  {
    "file": "std/src/sync/reentrant_lock.rs",
    "func": "sync::reentrant_lock::Tid::new"
  },
  {
    "file": "std/src/sync/reentrant_lock.rs",
    "func": "sync::reentrant_lock::Tid::set"
  },
  {
    "file": "std/src/sys/alloc/unix.rs",
    "func": "sys::alloc::unix::<impl core::alloc::GlobalAlloc for alloc::System>::alloc"
  },
  {
    "file": "std/src/sys/alloc/unix.rs",
    "func": "sys::alloc::unix::<impl core::alloc::GlobalAlloc for alloc::System>::alloc_zeroed"
  },
  {
    "file": "std/src/sys/alloc/unix.rs",
    "func": "sys::alloc::unix::aligned_malloc"
  },
  {
    "file": "std/src/sys/anonymous_pipe/unix.rs",
    "func": "sys::anonymous_pipe::unix::pipe"
  },
  {
    "file": "std/src/sys/args/unix.rs",
    "func": "sys::args::unix::args"
  },
  {
    "file": "std/src/sys/args/unix.rs",
    "func": "sys::args::unix::imp::argc_argv"
  },
  {
    "file": "std/src/sys/backtrace.rs",
    "func": "sys::backtrace::lock::<'_>"
  },
  {
    "file": "std/src/sys/backtrace.rs",
    "func": "sys::backtrace::set_image_base"
  },
  {
    "file": "std/src/sys/env/unix.rs",
    "func": "sys::env::unix::env"
  },
  {
    "file": "std/src/sys/env/unix.rs",
    "func": "sys::env::unix::env_read_lock"
  },
  {
    "file": "std/src/sys/env/unix.rs",
    "func": "sys::env::unix::environ"
  },
  {
    "file": "std/src/sys/exit_guard.rs",
    "func": "sys::exit_guard::unique_thread_exit"
  },
  {
    "file": "std/src/sys/fd/unix.rs",
    "func": "<&sys::fd::unix::FileDesc as io::Read>::is_read_vectored"
  },
  {
    "file": "std/src/sys/fd/unix.rs",
    "func": "<sys::fd::unix::FileDesc as os::fd::owned::AsFd>::as_fd"
  },
  {
    "file": "std/src/sys/fd/unix.rs",
    "func": "<sys::fd::unix::FileDesc as os::fd::raw::AsRawFd>::as_raw_fd"
  },
  {
    "file": "std/src/sys/fd/unix.rs",
    "func": "<sys::fd::unix::FileDesc as os::fd::raw::FromRawFd>::from_raw_fd"
  },
  {
    "file": "std/src/sys/fd/unix.rs",
    "func": "<sys::fd::unix::FileDesc as os::fd::raw::IntoRawFd>::into_raw_fd"
  },
  {
    "file": "std/src/sys/fd/unix.rs",
    "func": "<sys::fd::unix::FileDesc as sys_common::AsInner<os::fd::owned::OwnedFd>>::as_inner"
  },
  {
    "file": "std/src/sys/fd/unix.rs",
    "func": "<sys::fd::unix::FileDesc as sys_common::FromInner<os::fd::owned::OwnedFd>>::from_inner"
  },
  {
    "file": "std/src/sys/fd/unix.rs",
    "func": "<sys::fd::unix::FileDesc as sys_common::IntoInner<os::fd::owned::OwnedFd>>::into_inner"
  },
  {
    "file": "std/src/sys/fd/unix.rs",
    "func": "sys::fd::unix::FileDesc::duplicate"
  },
  {
    "file": "std/src/sys/fd/unix.rs",
    "func": "sys::fd::unix::FileDesc::is_read_vectored"
  },
  {
    "file": "std/src/sys/fd/unix.rs",
    "func": "sys::fd::unix::FileDesc::is_write_vectored"
  },
  {
    "file": "std/src/sys/fd/unix.rs",
    "func": "sys::fd::unix::FileDesc::set_cloexec"
  },
  {
    "file": "std/src/sys/fd/unix.rs",
    "func": "sys::fd::unix::FileDesc::set_nonblocking"
  },
  {
    "file": "std/src/sys/fd/unix.rs",
    "func": "sys::fd::unix::FileDesc::try_clone"
  },
  {
    "file": "std/src/sys/fd/unix.rs",
    "func": "sys::fd::unix::max_iov"
  },
  {
    "file": "std/src/sys/fs/unix.rs",
    "func": "<sys::fs::unix::File as core::fmt::Debug>::fmt::get_mode"
  },
  {
    "file": "std/src/sys/fs/unix.rs",
    "func": "<sys::fs::unix::File as core::fmt::Debug>::fmt::get_path"
  },
  {
    "file": "std/src/sys/fs/unix.rs",
    "func": "<sys::fs::unix::File as os::fd::owned::AsFd>::as_fd"
  },
  {
    "file": "std/src/sys/fs/unix.rs",
    "func": "<sys::fs::unix::File as os::fd::raw::AsRawFd>::as_raw_fd"
  },
  {
    "file": "std/src/sys/fs/unix.rs",
    "func": "<sys::fs::unix::File as os::fd::raw::FromRawFd>::from_raw_fd"
  },
  {
    "file": "std/src/sys/fs/unix.rs",
    "func": "<sys::fs::unix::File as os::fd::raw::IntoRawFd>::into_raw_fd"
  },
  {
    "file": "std/src/sys/fs/unix.rs",
    "func": "<sys::fs::unix::File as sys_common::AsInner<sys::fd::unix::FileDesc>>::as_inner"
  },
  {
    "file": "std/src/sys/fs/unix.rs",
    "func": "<sys::fs::unix::File as sys_common::AsInnerMut<sys::fd::unix::FileDesc>>::as_inner_mut"
  },
  {
    "file": "std/src/sys/fs/unix.rs",
    "func": "<sys::fs::unix::File as sys_common::FromInner<sys::fd::unix::FileDesc>>::from_inner"
  },
  {
    "file": "std/src/sys/fs/unix.rs",
    "func": "<sys::fs::unix::File as sys_common::IntoInner<sys::fd::unix::FileDesc>>::into_inner"
  },
  {
    "file": "std/src/sys/fs/unix.rs",
    "func": "<sys::fs::unix::FileAttr as core::clone::Clone>::clone"
  },
  {
    "file": "std/src/sys/fs/unix.rs",
    "func": "<sys::fs::unix::FileAttr as sys_common::AsInner<libc::stat64>>::as_inner"
  },
  {
    "file": "std/src/sys/fs/unix.rs",
    "func": "<sys::fs::unix::FilePermissions as core::clone::Clone>::clone"
  },
  {
    "file": "std/src/sys/fs/unix.rs",
    "func": "<sys::fs::unix::FilePermissions as core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "std/src/sys/fs/unix.rs",
    "func": "<sys::fs::unix::FilePermissions as core::cmp::PartialEq>::eq"
  },
  {
    "file": "std/src/sys/fs/unix.rs",
    "func": "<sys::fs::unix::FilePermissions as sys_common::FromInner<u32>>::from_inner"
  },
  {
    "file": "std/src/sys/fs/unix.rs",
    "func": "<sys::fs::unix::FileTimes as core::clone::Clone>::clone"
  },
  {
    "file": "std/src/sys/fs/unix.rs",
    "func": "<sys::fs::unix::FileTimes as core::default::Default>::default"
  },
  {
    "file": "std/src/sys/fs/unix.rs",
    "func": "<sys::fs::unix::FileType as core::clone::Clone>::clone"
  },
  {
    "file": "std/src/sys/fs/unix.rs",
    "func": "<sys::fs::unix::FileType as core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "std/src/sys/fs/unix.rs",
    "func": "<sys::fs::unix::FileType as core::cmp::PartialEq>::eq"
  },
  {
    "file": "std/src/sys/fs/unix.rs",
    "func": "<sys::fs::unix::Mode as core::clone::Clone>::clone"
  },
  {
    "file": "std/src/sys/fs/unix.rs",
    "func": "<sys::fs::unix::OpenOptions as core::clone::Clone>::clone"
  },
  {
    "file": "std/src/sys/fs/unix.rs",
    "func": "<sys::fs::unix::StatxExtraFields as core::clone::Clone>::clone"
  },
  {
    "file": "std/src/sys/fs/unix.rs",
    "func": "<sys::fs::unix::cfm::CachedFileMetadata as io::Read>::is_read_vectored"
  },
  {
    "file": "std/src/sys/fs/unix.rs",
    "func": "<sys::fs::unix::cfm::CachedFileMetadata as io::Write>::flush"
  },
  {
    "file": "std/src/sys/fs/unix.rs",
    "func": "<sys::fs::unix::cfm::CachedFileMetadata as io::Write>::is_write_vectored"
  },
  {
    "file": "std/src/sys/fs/unix.rs",
    "func": "sys::fs::unix::DirBuilder::new"
  },
  {
    "file": "std/src/sys/fs/unix.rs",
    "func": "sys::fs::unix::DirBuilder::set_mode"
  },
  {
    "file": "std/src/sys/fs/unix.rs",
    "func": "sys::fs::unix::File::datasync"
  },
  {
    "file": "std/src/sys/fs/unix.rs",
    "func": "sys::fs::unix::File::datasync::os_datasync"
  },
  {
    "file": "std/src/sys/fs/unix.rs",
    "func": "sys::fs::unix::File::duplicate"
  },
  {
    "file": "std/src/sys/fs/unix.rs",
    "func": "sys::fs::unix::File::file_attr"
  },
  {
    "file": "std/src/sys/fs/unix.rs",
    "func": "sys::fs::unix::File::flush"
  },
  {
    "file": "std/src/sys/fs/unix.rs",
    "func": "sys::fs::unix::File::fsync"
  },
  {
    "file": "std/src/sys/fs/unix.rs",
    "func": "sys::fs::unix::File::fsync::os_fsync"
  },
  {
    "file": "std/src/sys/fs/unix.rs",
    "func": "sys::fs::unix::File::is_read_vectored"
  },
  {
    "file": "std/src/sys/fs/unix.rs",
    "func": "sys::fs::unix::File::is_write_vectored"
  },
  {
    "file": "std/src/sys/fs/unix.rs",
    "func": "sys::fs::unix::File::lock"
  },
  {
    "file": "std/src/sys/fs/unix.rs",
    "func": "sys::fs::unix::File::lock_shared"
  },
  {
    "file": "std/src/sys/fs/unix.rs",
    "func": "sys::fs::unix::File::seek"
  },
  {
    "file": "std/src/sys/fs/unix.rs",
    "func": "sys::fs::unix::File::set_permissions"
  },
  {
    "file": "std/src/sys/fs/unix.rs",
    "func": "sys::fs::unix::File::set_times"
  },
  {
    "file": "std/src/sys/fs/unix.rs",
    "func": "sys::fs::unix::File::size"
  },
  {
    "file": "std/src/sys/fs/unix.rs",
    "func": "sys::fs::unix::File::tell"
  },
  {
    "file": "std/src/sys/fs/unix.rs",
    "func": "sys::fs::unix::File::truncate"
  },
  {
    "file": "std/src/sys/fs/unix.rs",
    "func": "sys::fs::unix::File::try_lock"
  },
  {
    "file": "std/src/sys/fs/unix.rs",
    "func": "sys::fs::unix::File::try_lock_shared"
  },
  {
    "file": "std/src/sys/fs/unix.rs",
    "func": "sys::fs::unix::File::unlock"
  },
  {
    "file": "std/src/sys/fs/unix.rs",
    "func": "sys::fs::unix::FileAttr::accessed"
  },
  {
    "file": "std/src/sys/fs/unix.rs",
    "func": "sys::fs::unix::FileAttr::created"
  },
  {
    "file": "std/src/sys/fs/unix.rs",
    "func": "sys::fs::unix::FileAttr::file_type"
  },
  {
    "file": "std/src/sys/fs/unix.rs",
    "func": "sys::fs::unix::FileAttr::from_stat64"
  },
  {
    "file": "std/src/sys/fs/unix.rs",
    "func": "sys::fs::unix::FileAttr::modified"
  },
  {
    "file": "std/src/sys/fs/unix.rs",
    "func": "sys::fs::unix::FileAttr::perm"
  },
  {
    "file": "std/src/sys/fs/unix.rs",
    "func": "sys::fs::unix::FileAttr::size"
  },
  {
    "file": "std/src/sys/fs/unix.rs",
    "func": "sys::fs::unix::FilePermissions::mode"
  },
  {
    "file": "std/src/sys/fs/unix.rs",
    "func": "sys::fs::unix::FilePermissions::readonly"
  },
  {
    "file": "std/src/sys/fs/unix.rs",
    "func": "sys::fs::unix::FilePermissions::set_readonly"
  },
  {
    "file": "std/src/sys/fs/unix.rs",
    "func": "sys::fs::unix::FileTimes::set_accessed"
  },
  {
    "file": "std/src/sys/fs/unix.rs",
    "func": "sys::fs::unix::FileTimes::set_modified"
  },
  {
    "file": "std/src/sys/fs/unix.rs",
    "func": "sys::fs::unix::FileType::is"
  },
  {
    "file": "std/src/sys/fs/unix.rs",
    "func": "sys::fs::unix::FileType::is_dir"
  },
  {
    "file": "std/src/sys/fs/unix.rs",
    "func": "sys::fs::unix::FileType::is_file"
  },
  {
    "file": "std/src/sys/fs/unix.rs",
    "func": "sys::fs::unix::FileType::is_symlink"
  },
  {
    "file": "std/src/sys/fs/unix.rs",
    "func": "sys::fs::unix::FileType::masked"
  },
  {
    "file": "std/src/sys/fs/unix.rs",
    "func": "sys::fs::unix::OpenOptions::append"
  },
  {
    "file": "std/src/sys/fs/unix.rs",
    "func": "sys::fs::unix::OpenOptions::create"
  },
  {
    "file": "std/src/sys/fs/unix.rs",
    "func": "sys::fs::unix::OpenOptions::create_new"
  },
  {
    "file": "std/src/sys/fs/unix.rs",
    "func": "sys::fs::unix::OpenOptions::custom_flags"
  },
  {
    "file": "std/src/sys/fs/unix.rs",
    "func": "sys::fs::unix::OpenOptions::get_access_mode"
  },
  {
    "file": "std/src/sys/fs/unix.rs",
    "func": "sys::fs::unix::OpenOptions::get_creation_mode"
  },
  {
    "file": "std/src/sys/fs/unix.rs",
    "func": "sys::fs::unix::OpenOptions::mode"
  },
  {
    "file": "std/src/sys/fs/unix.rs",
    "func": "sys::fs::unix::OpenOptions::new"
  },
  {
    "file": "std/src/sys/fs/unix.rs",
    "func": "sys::fs::unix::OpenOptions::read"
  },
  {
    "file": "std/src/sys/fs/unix.rs",
    "func": "sys::fs::unix::OpenOptions::truncate"
  },
  {
    "file": "std/src/sys/fs/unix.rs",
    "func": "sys::fs::unix::OpenOptions::write"
  },
  {
    "file": "std/src/sys/fs/unix.rs",
    "func": "sys::fs::unix::debug_assert_fd_is_open"
  },
  {
    "file": "std/src/sys/fs/unix.rs",
    "func": "sys::fs::unix::fchown"
  },
  {
    "file": "std/src/sys/fs/unix.rs",
    "func": "sys::fs::unix::remove_dir_impl::fdreaddir"
  },
  {
    "file": "std/src/sys/net/connection/socket.rs",
    "func": "<sys::net::connection::socket::TcpListener as sys_common::FromInner<sys::net::connection::socket::unix::Socket>>::from_inner"
  },
  {
    "file": "std/src/sys/net/connection/socket.rs",
    "func": "<sys::net::connection::socket::TcpStream as sys_common::AsInner<sys::net::connection::socket::unix::Socket>>::as_inner"
  },
  {
    "file": "std/src/sys/net/connection/socket.rs",
    "func": "<sys::net::connection::socket::TcpStream as sys_common::FromInner<sys::net::connection::socket::unix::Socket>>::from_inner"
  },
  {
    "file": "std/src/sys/net/connection/socket.rs",
    "func": "<sys::net::connection::socket::UdpSocket as sys_common::FromInner<sys::net::connection::socket::unix::Socket>>::from_inner"
  },
  {
    "file": "std/src/sys/net/connection/socket.rs",
    "func": "sys::net::connection::socket::TcpListener::accept"
  },
  {
    "file": "std/src/sys/net/connection/socket.rs",
    "func": "sys::net::connection::socket::TcpListener::duplicate"
  },
  {
    "file": "std/src/sys/net/connection/socket.rs",
    "func": "sys::net::connection::socket::TcpListener::into_socket"
  },
  {
    "file": "std/src/sys/net/connection/socket.rs",
    "func": "sys::net::connection::socket::TcpListener::only_v6"
  },
  {
    "file": "std/src/sys/net/connection/socket.rs",
    "func": "sys::net::connection::socket::TcpListener::set_nonblocking"
  },
  {
    "file": "std/src/sys/net/connection/socket.rs",
    "func": "sys::net::connection::socket::TcpListener::set_only_v6"
  },
  {
    "file": "std/src/sys/net/connection/socket.rs",
    "func": "sys::net::connection::socket::TcpListener::set_ttl"
  },
  {
    "file": "std/src/sys/net/connection/socket.rs",
    "func": "sys::net::connection::socket::TcpListener::socket"
  },
  {
    "file": "std/src/sys/net/connection/socket.rs",
    "func": "sys::net::connection::socket::TcpListener::socket_addr"
  },
  {
    "file": "std/src/sys/net/connection/socket.rs",
    "func": "sys::net::connection::socket::TcpListener::take_error"
  },
  {
    "file": "std/src/sys/net/connection/socket.rs",
    "func": "sys::net::connection::socket::TcpListener::ttl"
  },
  {
    "file": "std/src/sys/net/connection/socket.rs",
    "func": "sys::net::connection::socket::TcpStream::connect_timeout"
  },
  {
    "file": "std/src/sys/net/connection/socket.rs",
    "func": "sys::net::connection::socket::TcpStream::duplicate"
  },
  {
    "file": "std/src/sys/net/connection/socket.rs",
    "func": "sys::net::connection::socket::TcpStream::into_socket"
  },
  {
    "file": "std/src/sys/net/connection/socket.rs",
    "func": "sys::net::connection::socket::TcpStream::is_read_vectored"
  },
  {
    "file": "std/src/sys/net/connection/socket.rs",
    "func": "sys::net::connection::socket::TcpStream::is_write_vectored"
  },
  {
    "file": "std/src/sys/net/connection/socket.rs",
    "func": "sys::net::connection::socket::TcpStream::linger"
  },
  {
    "file": "std/src/sys/net/connection/socket.rs",
    "func": "sys::net::connection::socket::TcpStream::nodelay"
  },
  {
    "file": "std/src/sys/net/connection/socket.rs",
    "func": "sys::net::connection::socket::TcpStream::peer_addr"
  },
  {
    "file": "std/src/sys/net/connection/socket.rs",
    "func": "sys::net::connection::socket::TcpStream::read_timeout"
  },
  {
    "file": "std/src/sys/net/connection/socket.rs",
    "func": "sys::net::connection::socket::TcpStream::set_linger"
  },
  {
    "file": "std/src/sys/net/connection/socket.rs",
    "func": "sys::net::connection::socket::TcpStream::set_nodelay"
  },
  {
    "file": "std/src/sys/net/connection/socket.rs",
    "func": "sys::net::connection::socket::TcpStream::set_nonblocking"
  },
  {
    "file": "std/src/sys/net/connection/socket.rs",
    "func": "sys::net::connection::socket::TcpStream::set_read_timeout"
  },
  {
    "file": "std/src/sys/net/connection/socket.rs",
    "func": "sys::net::connection::socket::TcpStream::set_ttl"
  },
  {
    "file": "std/src/sys/net/connection/socket.rs",
    "func": "sys::net::connection::socket::TcpStream::set_write_timeout"
  },
  {
    "file": "std/src/sys/net/connection/socket.rs",
    "func": "sys::net::connection::socket::TcpStream::shutdown"
  },
  {
    "file": "std/src/sys/net/connection/socket.rs",
    "func": "sys::net::connection::socket::TcpStream::socket"
  },
  {
    "file": "std/src/sys/net/connection/socket.rs",
    "func": "sys::net::connection::socket::TcpStream::socket_addr"
  },
  {
    "file": "std/src/sys/net/connection/socket.rs",
    "func": "sys::net::connection::socket::TcpStream::take_error"
  },
  {
    "file": "std/src/sys/net/connection/socket.rs",
    "func": "sys::net::connection::socket::TcpStream::ttl"
  },
  {
    "file": "std/src/sys/net/connection/socket.rs",
    "func": "sys::net::connection::socket::TcpStream::write_timeout"
  },
  {
    "file": "std/src/sys/net/connection/socket.rs",
    "func": "sys::net::connection::socket::UdpSocket::broadcast"
  },
  {
    "file": "std/src/sys/net/connection/socket.rs",
    "func": "sys::net::connection::socket::UdpSocket::duplicate"
  },
  {
    "file": "std/src/sys/net/connection/socket.rs",
    "func": "sys::net::connection::socket::UdpSocket::into_socket"
  },
  {
    "file": "std/src/sys/net/connection/socket.rs",
    "func": "sys::net::connection::socket::UdpSocket::join_multicast_v4"
  },
  {
    "file": "std/src/sys/net/connection/socket.rs",
    "func": "sys::net::connection::socket::UdpSocket::join_multicast_v6"
  },
  {
    "file": "std/src/sys/net/connection/socket.rs",
    "func": "sys::net::connection::socket::UdpSocket::leave_multicast_v4"
  },
  {
    "file": "std/src/sys/net/connection/socket.rs",
    "func": "sys::net::connection::socket::UdpSocket::leave_multicast_v6"
  },
  {
    "file": "std/src/sys/net/connection/socket.rs",
    "func": "sys::net::connection::socket::UdpSocket::multicast_loop_v4"
  },
  {
    "file": "std/src/sys/net/connection/socket.rs",
    "func": "sys::net::connection::socket::UdpSocket::multicast_loop_v6"
  },
  {
    "file": "std/src/sys/net/connection/socket.rs",
    "func": "sys::net::connection::socket::UdpSocket::multicast_ttl_v4"
  },
  {
    "file": "std/src/sys/net/connection/socket.rs",
    "func": "sys::net::connection::socket::UdpSocket::peer_addr"
  },
  {
    "file": "std/src/sys/net/connection/socket.rs",
    "func": "sys::net::connection::socket::UdpSocket::read_timeout"
  },
  {
    "file": "std/src/sys/net/connection/socket.rs",
    "func": "sys::net::connection::socket::UdpSocket::set_broadcast"
  },
  {
    "file": "std/src/sys/net/connection/socket.rs",
    "func": "sys::net::connection::socket::UdpSocket::set_multicast_loop_v4"
  },
  {
    "file": "std/src/sys/net/connection/socket.rs",
    "func": "sys::net::connection::socket::UdpSocket::set_multicast_loop_v6"
  },
  {
    "file": "std/src/sys/net/connection/socket.rs",
    "func": "sys::net::connection::socket::UdpSocket::set_multicast_ttl_v4"
  },
  {
    "file": "std/src/sys/net/connection/socket.rs",
    "func": "sys::net::connection::socket::UdpSocket::set_nonblocking"
  },
  {
    "file": "std/src/sys/net/connection/socket.rs",
    "func": "sys::net::connection::socket::UdpSocket::set_read_timeout"
  },
  {
    "file": "std/src/sys/net/connection/socket.rs",
    "func": "sys::net::connection::socket::UdpSocket::set_ttl"
  },
  {
    "file": "std/src/sys/net/connection/socket.rs",
    "func": "sys::net::connection::socket::UdpSocket::set_write_timeout"
  },
  {
    "file": "std/src/sys/net/connection/socket.rs",
    "func": "sys::net::connection::socket::UdpSocket::socket"
  },
  {
    "file": "std/src/sys/net/connection/socket.rs",
    "func": "sys::net::connection::socket::UdpSocket::socket_addr"
  },
  {
    "file": "std/src/sys/net/connection/socket.rs",
    "func": "sys::net::connection::socket::UdpSocket::take_error"
  },
  {
    "file": "std/src/sys/net/connection/socket.rs",
    "func": "sys::net::connection::socket::UdpSocket::ttl"
  },
  {
    "file": "std/src/sys/net/connection/socket.rs",
    "func": "sys::net::connection::socket::UdpSocket::write_timeout"
  },
  {
    "file": "std/src/sys/net/connection/socket.rs",
    "func": "sys::net::connection::socket::ip_v4_addr_from_c"
  },
  {
    "file": "std/src/sys/net/connection/socket.rs",
    "func": "sys::net::connection::socket::ip_v4_addr_to_c"
  },
  {
    "file": "std/src/sys/net/connection/socket.rs",
    "func": "sys::net::connection::socket::ip_v6_addr_from_c"
  },
  {
    "file": "std/src/sys/net/connection/socket.rs",
    "func": "sys::net::connection::socket::ip_v6_addr_to_c"
  },
  {
    "file": "std/src/sys/net/connection/socket.rs",
    "func": "sys::net::connection::socket::socket_addr_to_c"
  },
  {
    "file": "std/src/sys/net/connection/socket.rs",
    "func": "sys::net::connection::socket::socket_addr_v4_from_c"
  },
  {
    "file": "std/src/sys/net/connection/socket.rs",
    "func": "sys::net::connection::socket::socket_addr_v4_to_c"
  },
  {
    "file": "std/src/sys/net/connection/socket.rs",
    "func": "sys::net::connection::socket::socket_addr_v6_from_c"
  },
  {
    "file": "std/src/sys/net/connection/socket.rs",
    "func": "sys::net::connection::socket::socket_addr_v6_to_c"
  },
  {
    "file": "std/src/sys/net/connection/socket.rs",
    "func": "sys::net::connection::socket::to_ipv6mr_interface"
  },
  {
    "file": "std/src/sys/net/connection/socket/unix.rs",
    "func": "<sys::net::connection::socket::unix::Socket as os::fd::owned::AsFd>::as_fd"
  },
  {
    "file": "std/src/sys/net/connection/socket/unix.rs",
    "func": "<sys::net::connection::socket::unix::Socket as os::fd::raw::AsRawFd>::as_raw_fd"
  },
  {
    "file": "std/src/sys/net/connection/socket/unix.rs",
    "func": "<sys::net::connection::socket::unix::Socket as os::fd::raw::FromRawFd>::from_raw_fd"
  },
  {
    "file": "std/src/sys/net/connection/socket/unix.rs",
    "func": "<sys::net::connection::socket::unix::Socket as os::fd::raw::IntoRawFd>::into_raw_fd"
  },
  {
    "file": "std/src/sys/net/connection/socket/unix.rs",
    "func": "<sys::net::connection::socket::unix::Socket as sys_common::AsInner<sys::fd::unix::FileDesc>>::as_inner"
  },
  {
    "file": "std/src/sys/net/connection/socket/unix.rs",
    "func": "<sys::net::connection::socket::unix::Socket as sys_common::FromInner<sys::fd::unix::FileDesc>>::from_inner"
  },
  {
    "file": "std/src/sys/net/connection/socket/unix.rs",
    "func": "<sys::net::connection::socket::unix::Socket as sys_common::IntoInner<sys::fd::unix::FileDesc>>::into_inner"
  },
  {
    "file": "std/src/sys/net/connection/socket/unix.rs",
    "func": "sys::net::connection::socket::unix::Socket::as_raw"
  },
  {
    "file": "std/src/sys/net/connection/socket/unix.rs",
    "func": "sys::net::connection::socket::unix::Socket::connect"
  },
  {
    "file": "std/src/sys/net/connection/socket/unix.rs",
    "func": "sys::net::connection::socket::unix::Socket::connect_timeout"
  },
  {
    "file": "std/src/sys/net/connection/socket/unix.rs",
    "func": "sys::net::connection::socket::unix::Socket::deferaccept"
  },
  {
    "file": "std/src/sys/net/connection/socket/unix.rs",
    "func": "sys::net::connection::socket::unix::Socket::duplicate"
  },
  {
    "file": "std/src/sys/net/connection/socket/unix.rs",
    "func": "sys::net::connection::socket::unix::Socket::is_read_vectored"
  },
  {
    "file": "std/src/sys/net/connection/socket/unix.rs",
    "func": "sys::net::connection::socket::unix::Socket::is_write_vectored"
  },
  {
    "file": "std/src/sys/net/connection/socket/unix.rs",
    "func": "sys::net::connection::socket::unix::Socket::linger"
  },
  {
    "file": "std/src/sys/net/connection/socket/unix.rs",
    "func": "sys::net::connection::socket::unix::Socket::new"
  },
  {
    "file": "std/src/sys/net/connection/socket/unix.rs",
    "func": "sys::net::connection::socket::unix::Socket::new_pair"
  },
  {
    "file": "std/src/sys/net/connection/socket/unix.rs",
    "func": "sys::net::connection::socket::unix::Socket::new_raw"
  },
  {
    "file": "std/src/sys/net/connection/socket/unix.rs",
    "func": "sys::net::connection::socket::unix::Socket::nodelay"
  },
  {
    "file": "std/src/sys/net/connection/socket/unix.rs",
    "func": "sys::net::connection::socket::unix::Socket::passcred"
  },
  {
    "file": "std/src/sys/net/connection/socket/unix.rs",
    "func": "sys::net::connection::socket::unix::Socket::quickack"
  },
  {
    "file": "std/src/sys/net/connection/socket/unix.rs",
    "func": "sys::net::connection::socket::unix::Socket::set_deferaccept"
  },
  {
    "file": "std/src/sys/net/connection/socket/unix.rs",
    "func": "sys::net::connection::socket::unix::Socket::set_linger"
  },
  {
    "file": "std/src/sys/net/connection/socket/unix.rs",
    "func": "sys::net::connection::socket::unix::Socket::set_mark"
  },
  {
    "file": "std/src/sys/net/connection/socket/unix.rs",
    "func": "sys::net::connection::socket::unix::Socket::set_nodelay"
  },
  {
    "file": "std/src/sys/net/connection/socket/unix.rs",
    "func": "sys::net::connection::socket::unix::Socket::set_nonblocking"
  },
  {
    "file": "std/src/sys/net/connection/socket/unix.rs",
    "func": "sys::net::connection::socket::unix::Socket::set_passcred"
  },
  {
    "file": "std/src/sys/net/connection/socket/unix.rs",
    "func": "sys::net::connection::socket::unix::Socket::set_quickack"
  },
  {
    "file": "std/src/sys/net/connection/socket/unix.rs",
    "func": "sys::net::connection::socket::unix::Socket::set_timeout"
  },
  {
    "file": "std/src/sys/net/connection/socket/unix.rs",
    "func": "sys::net::connection::socket::unix::Socket::shutdown"
  },
  {
    "file": "std/src/sys/net/connection/socket/unix.rs",
    "func": "sys::net::connection::socket::unix::Socket::take_error"
  },
  {
    "file": "std/src/sys/net/connection/socket/unix.rs",
    "func": "sys::net::connection::socket::unix::Socket::timeout"
  },
  {
    "file": "std/src/sys/net/connection/socket/unix.rs",
    "func": "sys::net::connection::socket::unix::cvt_gai"
  },
  {
    "file": "std/src/sys/net/connection/socket/unix.rs",
    "func": "sys::net::connection::socket::unix::init"
  },
  {
    "file": "std/src/sys/net/connection/socket/unix.rs",
    "func": "sys::net::connection::socket::unix::on_resolver_failure"
  },
  {
    "file": "std/src/sys/os_str/bytes.rs",
    "func": "sys::os_str::bytes::Buf::with_capacity"
  },
  {
    "file": "std/src/sys/os_str/bytes.rs",
    "func": "sys::os_str::bytes::Slice::empty_box"
  },
  {
    "file": "std/src/sys/pal/unix/futex.rs",
    "func": "sys::pal::unix::futex::futex_wait"
  },
  {
    "file": "std/src/sys/pal/unix/futex.rs",
    "func": "sys::pal::unix::futex::futex_wake"
  },
  {
    "file": "std/src/sys/pal/unix/futex.rs",
    "func": "sys::pal::unix::futex::futex_wake_all"
  },
  {
    "file": "std/src/sys/pal/unix/kernel_copy.rs",
    "func": "<&fs::File as sys::pal::unix::kernel_copy::CopyRead>::properties"
  },
  {
    "file": "std/src/sys/pal/unix/kernel_copy.rs",
    "func": "<&fs::File as sys::pal::unix::kernel_copy::CopyWrite>::properties"
  },
  {
    "file": "std/src/sys/pal/unix/kernel_copy.rs",
    "func": "<&io::pipe::PipeReader as sys::pal::unix::kernel_copy::CopyRead>::properties"
  },
  {
    "file": "std/src/sys/pal/unix/kernel_copy.rs",
    "func": "<&io::pipe::PipeWriter as sys::pal::unix::kernel_copy::CopyWrite>::properties"
  },
  {
    "file": "std/src/sys/pal/unix/kernel_copy.rs",
    "func": "<&net::tcp::TcpStream as sys::pal::unix::kernel_copy::CopyRead>::properties"
  },
  {
    "file": "std/src/sys/pal/unix/kernel_copy.rs",
    "func": "<&net::tcp::TcpStream as sys::pal::unix::kernel_copy::CopyWrite>::properties"
  },
  {
    "file": "std/src/sys/pal/unix/kernel_copy.rs",
    "func": "<&os::unix::net::stream::UnixStream as sys::pal::unix::kernel_copy::CopyRead>::properties"
  },
  {
    "file": "std/src/sys/pal/unix/kernel_copy.rs",
    "func": "<&os::unix::net::stream::UnixStream as sys::pal::unix::kernel_copy::CopyWrite>::properties"
  },
  {
    "file": "std/src/sys/pal/unix/kernel_copy.rs",
    "func": "<fs::File as sys::pal::unix::kernel_copy::CopyRead>::properties"
  },
  {
    "file": "std/src/sys/pal/unix/kernel_copy.rs",
    "func": "<fs::File as sys::pal::unix::kernel_copy::CopyWrite>::properties"
  },
  {
    "file": "std/src/sys/pal/unix/kernel_copy.rs",
    "func": "<io::pipe::PipeReader as sys::pal::unix::kernel_copy::CopyRead>::properties"
  },
  {
    "file": "std/src/sys/pal/unix/kernel_copy.rs",
    "func": "<io::pipe::PipeWriter as sys::pal::unix::kernel_copy::CopyWrite>::properties"
  },
  {
    "file": "std/src/sys/pal/unix/kernel_copy.rs",
    "func": "<net::tcp::TcpStream as sys::pal::unix::kernel_copy::CopyRead>::properties"
  },
  {
    "file": "std/src/sys/pal/unix/kernel_copy.rs",
    "func": "<net::tcp::TcpStream as sys::pal::unix::kernel_copy::CopyWrite>::properties"
  },
  {
    "file": "std/src/sys/pal/unix/kernel_copy.rs",
    "func": "<os::unix::net::stream::UnixStream as sys::pal::unix::kernel_copy::CopyRead>::properties"
  },
  {
    "file": "std/src/sys/pal/unix/kernel_copy.rs",
    "func": "<os::unix::net::stream::UnixStream as sys::pal::unix::kernel_copy::CopyWrite>::properties"
  },
  {
    "file": "std/src/sys/pal/unix/kernel_copy.rs",
    "func": "<process::ChildStderr as sys::pal::unix::kernel_copy::CopyRead>::properties"
  },
  {
    "file": "std/src/sys/pal/unix/kernel_copy.rs",
    "func": "<process::ChildStdin as sys::pal::unix::kernel_copy::CopyWrite>::properties"
  },
  {
    "file": "std/src/sys/pal/unix/kernel_copy.rs",
    "func": "<process::ChildStdout as sys::pal::unix::kernel_copy::CopyRead>::properties"
  },
  {
    "file": "std/src/sys/pal/unix/kernel_copy.rs",
    "func": "<sys::fs::unix::cfm::CachedFileMetadata as sys::pal::unix::kernel_copy::CopyRead>::properties"
  },
  {
    "file": "std/src/sys/pal/unix/kernel_copy.rs",
    "func": "<sys::fs::unix::cfm::CachedFileMetadata as sys::pal::unix::kernel_copy::CopyWrite>::properties"
  },
  {
    "file": "std/src/sys/pal/unix/kernel_copy.rs",
    "func": "<sys::pal::unix::kernel_copy::FdHandle as core::cmp::PartialEq>::eq"
  },
  {
    "file": "std/src/sys/pal/unix/kernel_copy.rs",
    "func": "<sys::pal::unix::kernel_copy::SpliceMode as core::cmp::PartialEq>::eq"
  },
  {
    "file": "std/src/sys/pal/unix/kernel_copy.rs",
    "func": "sys::pal::unix::kernel_copy::FdMeta::copy_file_range_candidate"
  },
  {
    "file": "std/src/sys/pal/unix/kernel_copy.rs",
    "func": "sys::pal::unix::kernel_copy::FdMeta::maybe_fifo"
  },
  {
    "file": "std/src/sys/pal/unix/kernel_copy.rs",
    "func": "sys::pal::unix::kernel_copy::FdMeta::potential_sendfile_source"
  },
  {
    "file": "std/src/sys/pal/unix/kernel_copy.rs",
    "func": "sys::pal::unix::kernel_copy::copy_regular_files"
  },
  {
    "file": "std/src/sys/pal/unix/kernel_copy.rs",
    "func": "sys::pal::unix::kernel_copy::copy_regular_files::probe_copy_file_range_support"
  },
  {
    "file": "std/src/sys/pal/unix/kernel_copy.rs",
    "func": "sys::pal::unix::kernel_copy::safe_kernel_copy"
  },
  {
    "file": "std/src/sys/pal/unix/kernel_copy.rs",
    "func": "sys::pal::unix::kernel_copy::sendfile_splice"
  },
  {
    "file": "std/src/sys/pal/unix/linux/pidfd.rs",
    "func": "<sys::pal::unix::linux::pidfd::PidFd as os::fd::raw::FromRawFd>::from_raw_fd"
  },
  {
    "file": "std/src/sys/pal/unix/linux/pidfd.rs",
    "func": "<sys::pal::unix::linux::pidfd::PidFd as sys_common::AsInner<sys::fd::unix::FileDesc>>::as_inner"
  },
  {
    "file": "std/src/sys/pal/unix/linux/pidfd.rs",
    "func": "<sys::pal::unix::linux::pidfd::PidFd as sys_common::FromInner<sys::fd::unix::FileDesc>>::from_inner"
  },
  {
    "file": "std/src/sys/pal/unix/linux/pidfd.rs",
    "func": "<sys::pal::unix::linux::pidfd::PidFd as sys_common::IntoInner<sys::fd::unix::FileDesc>>::into_inner"
  },
  {
    "file": "std/src/sys/pal/unix/linux/pidfd.rs",
    "func": "sys::pal::unix::linux::pidfd::PidFd::kill"
  },
  {
    "file": "std/src/sys/pal/unix/linux/pidfd.rs",
    "func": "sys::pal::unix::linux::pidfd::PidFd::send_signal"
  },
  {
    "file": "std/src/sys/pal/unix/linux/pidfd.rs",
    "func": "sys::pal::unix::linux::pidfd::PidFd::try_wait"
  },
  {
    "file": "std/src/sys/pal/unix/linux/pidfd.rs",
    "func": "sys::pal::unix::linux::pidfd::PidFd::wait"
  },
  {
    "file": "std/src/sys/pal/unix/mod.rs",
    "func": "<i16 as sys::pal::unix::IsMinusOne>::is_minus_one"
  },
  {
    "file": "std/src/sys/pal/unix/mod.rs",
    "func": "<i32 as sys::pal::unix::IsMinusOne>::is_minus_one"
  },
  {
    "file": "std/src/sys/pal/unix/mod.rs",
    "func": "<i64 as sys::pal::unix::IsMinusOne>::is_minus_one"
  },
  {
    "file": "std/src/sys/pal/unix/mod.rs",
    "func": "<i8 as sys::pal::unix::IsMinusOne>::is_minus_one"
  },
  {
    "file": "std/src/sys/pal/unix/mod.rs",
    "func": "<isize as sys::pal::unix::IsMinusOne>::is_minus_one"
  },
  {
    "file": "std/src/sys/pal/unix/mod.rs",
    "func": "sys::pal::unix::abort_internal"
  },
  {
    "file": "std/src/sys/pal/unix/mod.rs",
    "func": "sys::pal::unix::cleanup"
  },
  {
    "file": "std/src/sys/pal/unix/mod.rs",
    "func": "sys::pal::unix::cvt_nz"
  },
  {
    "file": "std/src/sys/pal/unix/mod.rs",
    "func": "sys::pal::unix::decode_error_kind"
  },
  {
    "file": "std/src/sys/pal/unix/mod.rs",
    "func": "sys::pal::unix::init::reset_sigpipe"
  },
  {
    "file": "std/src/sys/pal/unix/mod.rs",
    "func": "sys::pal::unix::init::sanitize_standard_fds"
  },
  {
    "file": "std/src/sys/pal/unix/mod.rs",
    "func": "sys::pal::unix::is_interrupted"
  },
  {
    "file": "std/src/sys/pal/unix/mod.rs",
    "func": "sys::pal::unix::on_broken_pipe_flag_used"
  },
  {
    "file": "std/src/sys/pal/unix/os.rs",
    "func": "<sys::pal::unix::os::JoinPathsError as core::error::Error>::description"
  },
  {
    "file": "std/src/sys/pal/unix/os.rs",
    "func": "sys::pal::unix::os::current_exe"
  },
  {
    "file": "std/src/sys/pal/unix/os.rs",
    "func": "sys::pal::unix::os::errno"
  },
  {
    "file": "std/src/sys/pal/unix/os.rs",
    "func": "sys::pal::unix::os::error_string"
  },
  {
    "file": "std/src/sys/pal/unix/os.rs",
    "func": "sys::pal::unix::os::exit"
  },
  {
    "file": "std/src/sys/pal/unix/os.rs",
    "func": "sys::pal::unix::os::getcwd"
  },
  {
    "file": "std/src/sys/pal/unix/os.rs",
    "func": "sys::pal::unix::os::getpid"
  },
  {
    "file": "std/src/sys/pal/unix/os.rs",
    "func": "sys::pal::unix::os::getppid"
  },
  {
    "file": "std/src/sys/pal/unix/os.rs",
    "func": "sys::pal::unix::os::glibc_version"
  },
  {
    "file": "std/src/sys/pal/unix/os.rs",
    "func": "sys::pal::unix::os::home_dir"
  },
  {
    "file": "std/src/sys/pal/unix/os.rs",
    "func": "sys::pal::unix::os::home_dir::fallback"
  },
  {
    "file": "std/src/sys/pal/unix/os.rs",
    "func": "sys::pal::unix::os::page_size"
  },
  {
    "file": "std/src/sys/pal/unix/os.rs",
    "func": "sys::pal::unix::os::set_errno"
  },
  {
    "file": "std/src/sys/pal/unix/os.rs",
    "func": "sys::pal::unix::os::split_paths::is_separator"
  },
  {
    "file": "std/src/sys/pal/unix/os.rs",
    "func": "sys::pal::unix::os::temp_dir"
  },
  {
    "file": "std/src/sys/pal/unix/pipe.rs",
    "func": "<sys::pal::unix::pipe::AnonPipe as os::fd::owned::AsFd>::as_fd"
  },
  {
    "file": "std/src/sys/pal/unix/pipe.rs",
    "func": "<sys::pal::unix::pipe::AnonPipe as os::fd::raw::AsRawFd>::as_raw_fd"
  },
  {
    "file": "std/src/sys/pal/unix/pipe.rs",
    "func": "<sys::pal::unix::pipe::AnonPipe as os::fd::raw::FromRawFd>::from_raw_fd"
  },
  {
    "file": "std/src/sys/pal/unix/pipe.rs",
    "func": "<sys::pal::unix::pipe::AnonPipe as os::fd::raw::IntoRawFd>::into_raw_fd"
  },
  {
    "file": "std/src/sys/pal/unix/pipe.rs",
    "func": "<sys::pal::unix::pipe::AnonPipe as sys_common::FromInner<sys::fd::unix::FileDesc>>::from_inner"
  },
  {
    "file": "std/src/sys/pal/unix/pipe.rs",
    "func": "<sys::pal::unix::pipe::AnonPipe as sys_common::IntoInner<sys::fd::unix::FileDesc>>::into_inner"
  },
  {
    "file": "std/src/sys/pal/unix/pipe.rs",
    "func": "sys::pal::unix::pipe::AnonPipe::as_file_desc"
  },
  {
    "file": "std/src/sys/pal/unix/pipe.rs",
    "func": "sys::pal::unix::pipe::AnonPipe::is_read_vectored"
  },
  {
    "file": "std/src/sys/pal/unix/pipe.rs",
    "func": "sys::pal::unix::pipe::AnonPipe::is_write_vectored"
  },
  {
    "file": "std/src/sys/pal/unix/pipe.rs",
    "func": "sys::pal::unix::pipe::AnonPipe::try_clone"
  },
  {
    "file": "std/src/sys/pal/unix/pipe.rs",
    "func": "sys::pal::unix::pipe::anon_pipe"
  },
  {
    "file": "std/src/sys/pal/unix/stack_overflow.rs",
    "func": "sys::pal::unix::stack_overflow::Handler::null"
  },
  {
    "file": "std/src/sys/pal/unix/stack_overflow.rs",
    "func": "sys::pal::unix::stack_overflow::imp::cleanup"
  },
  {
    "file": "std/src/sys/pal/unix/stack_overflow.rs",
    "func": "sys::pal::unix::stack_overflow::imp::current_guard"
  },
  {
    "file": "std/src/sys/pal/unix/stack_overflow.rs",
    "func": "sys::pal::unix::stack_overflow::imp::get_stack"
  },
  {
    "file": "std/src/sys/pal/unix/stack_overflow.rs",
    "func": "sys::pal::unix::stack_overflow::imp::get_stack_start"
  },
  {
    "file": "std/src/sys/pal/unix/stack_overflow.rs",
    "func": "sys::pal::unix::stack_overflow::imp::init"
  },
  {
    "file": "std/src/sys/pal/unix/stack_overflow.rs",
    "func": "sys::pal::unix::stack_overflow::imp::install_main_guard"
  },
  {
    "file": "std/src/sys/pal/unix/stack_overflow.rs",
    "func": "sys::pal::unix::stack_overflow::imp::install_main_guard_bsds"
  },
  {
    "file": "std/src/sys/pal/unix/stack_overflow.rs",
    "func": "sys::pal::unix::stack_overflow::imp::install_main_guard_default"
  },
  {
    "file": "std/src/sys/pal/unix/stack_overflow.rs",
    "func": "sys::pal::unix::stack_overflow::imp::install_main_guard_freebsd"
  },
  {
    "file": "std/src/sys/pal/unix/stack_overflow.rs",
    "func": "sys::pal::unix::stack_overflow::imp::install_main_guard_linux"
  },
  {
    "file": "std/src/sys/pal/unix/stack_overflow.rs",
    "func": "sys::pal::unix::stack_overflow::imp::install_main_guard_linux_musl"
  },
  {
    "file": "std/src/sys/pal/unix/stack_overflow.rs",
    "func": "sys::pal::unix::stack_overflow::imp::sigstack_size"
  },
  {
    "file": "std/src/sys/pal/unix/stack_overflow.rs",
    "func": "sys::pal::unix::stack_overflow::imp::stack_start_aligned"
  },
  {
    "file": "std/src/sys/pal/unix/stack_overflow/thread_info.rs",
    "func": "<sys::pal::unix::stack_overflow::thread_info::UnlockOnDrop as core::ops::Drop>::drop"
  },
  {
    "file": "std/src/sys/pal/unix/stack_overflow/thread_info.rs",
    "func": "sys::pal::unix::stack_overflow::thread_info::delete_current_info"
  },
  {
    "file": "std/src/sys/pal/unix/stack_overflow/thread_info.rs",
    "func": "sys::pal::unix::stack_overflow::thread_info::spin_lock_in_setup"
  },
  {
    "file": "std/src/sys/pal/unix/thread.rs",
    "func": "<sys::pal::unix::thread::Thread as core::ops::Drop>::drop"
  },
  {
    "file": "std/src/sys/pal/unix/thread.rs",
    "func": "<sys::pal::unix::thread::cgroups::Cgroup as core::cmp::PartialEq>::eq"
  },
  {
    "file": "std/src/sys/pal/unix/thread.rs",
    "func": "sys::pal::unix::thread::Thread::id"
  },
  {
    "file": "std/src/sys/pal/unix/thread.rs",
    "func": "sys::pal::unix::thread::Thread::into_id"
  },
  {
    "file": "std/src/sys/pal/unix/thread.rs",
    "func": "sys::pal::unix::thread::Thread::join"
  },
  {
    "file": "std/src/sys/pal/unix/thread.rs",
    "func": "sys::pal::unix::thread::Thread::sleep"
  },
  {
    "file": "std/src/sys/pal/unix/thread.rs",
    "func": "sys::pal::unix::thread::Thread::sleep_until"
  },
  {
    "file": "std/src/sys/pal/unix/thread.rs",
    "func": "sys::pal::unix::thread::Thread::yield_now"
  },
  {
    "file": "std/src/sys/pal/unix/thread.rs",
    "func": "sys::pal::unix::thread::available_parallelism"
  },
  {
    "file": "std/src/sys/pal/unix/thread.rs",
    "func": "sys::pal::unix::thread::cgroups::quota"
  },
  {
    "file": "std/src/sys/pal/unix/thread.rs",
    "func": "sys::pal::unix::thread::current_os_id"
  },
  {
    "file": "std/src/sys/pal/unix/time.rs",
    "func": "<sys::pal::unix::time::Instant as core::clone::Clone>::clone"
  },
  {
    "file": "std/src/sys/pal/unix/time.rs",
    "func": "<sys::pal::unix::time::Instant as core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "std/src/sys/pal/unix/time.rs",
    "func": "<sys::pal::unix::time::Instant as core::cmp::Ord>::cmp"
  },
  {
    "file": "std/src/sys/pal/unix/time.rs",
    "func": "<sys::pal::unix::time::Instant as core::cmp::PartialEq>::eq"
  },
  {
    "file": "std/src/sys/pal/unix/time.rs",
    "func": "<sys::pal::unix::time::Instant as core::cmp::PartialOrd>::partial_cmp"
  },
  {
    "file": "std/src/sys/pal/unix/time.rs",
    "func": "<sys::pal::unix::time::SystemTime as core::clone::Clone>::clone"
  },
  {
    "file": "std/src/sys/pal/unix/time.rs",
    "func": "<sys::pal::unix::time::SystemTime as core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "std/src/sys/pal/unix/time.rs",
    "func": "<sys::pal::unix::time::SystemTime as core::cmp::Ord>::cmp"
  },
  {
    "file": "std/src/sys/pal/unix/time.rs",
    "func": "<sys::pal::unix::time::SystemTime as core::cmp::PartialEq>::eq"
  },
  {
    "file": "std/src/sys/pal/unix/time.rs",
    "func": "<sys::pal::unix::time::SystemTime as core::cmp::PartialOrd>::partial_cmp"
  },
  {
    "file": "std/src/sys/pal/unix/time.rs",
    "func": "<sys::pal::unix::time::Timespec as core::clone::Clone>::clone"
  },
  {
    "file": "std/src/sys/pal/unix/time.rs",
    "func": "<sys::pal::unix::time::Timespec as core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "std/src/sys/pal/unix/time.rs",
    "func": "<sys::pal::unix::time::Timespec as core::cmp::Ord>::cmp"
  },
  {
    "file": "std/src/sys/pal/unix/time.rs",
    "func": "<sys::pal::unix::time::Timespec as core::cmp::PartialEq>::eq"
  },
  {
    "file": "std/src/sys/pal/unix/time.rs",
    "func": "<sys::pal::unix::time::Timespec as core::cmp::PartialOrd>::partial_cmp"
  },
  {
    "file": "std/src/sys/pal/unix/time.rs",
    "func": "sys::pal::unix::time::Instant::checked_add_duration"
  },
  {
    "file": "std/src/sys/pal/unix/time.rs",
    "func": "sys::pal::unix::time::Instant::checked_sub_duration"
  },
  {
    "file": "std/src/sys/pal/unix/time.rs",
    "func": "sys::pal::unix::time::Instant::checked_sub_instant"
  },
  {
    "file": "std/src/sys/pal/unix/time.rs",
    "func": "sys::pal::unix::time::Instant::into_timespec"
  },
  {
    "file": "std/src/sys/pal/unix/time.rs",
    "func": "sys::pal::unix::time::Instant::now"
  },
  {
    "file": "std/src/sys/pal/unix/time.rs",
    "func": "sys::pal::unix::time::SystemTime::checked_add_duration"
  },
  {
    "file": "std/src/sys/pal/unix/time.rs",
    "func": "sys::pal::unix::time::SystemTime::checked_sub_duration"
  },
  {
    "file": "std/src/sys/pal/unix/time.rs",
    "func": "sys::pal::unix::time::SystemTime::new"
  },
  {
    "file": "std/src/sys/pal/unix/time.rs",
    "func": "sys::pal::unix::time::SystemTime::now"
  },
  {
    "file": "std/src/sys/pal/unix/time.rs",
    "func": "sys::pal::unix::time::SystemTime::sub_time"
  },
  {
    "file": "std/src/sys/pal/unix/time.rs",
    "func": "sys::pal::unix::time::Timespec::checked_add_duration"
  },
  {
    "file": "std/src/sys/pal/unix/time.rs",
    "func": "sys::pal::unix::time::Timespec::checked_sub_duration"
  },
  {
    "file": "std/src/sys/pal/unix/time.rs",
    "func": "sys::pal::unix::time::Timespec::new"
  },
  {
    "file": "std/src/sys/pal/unix/time.rs",
    "func": "sys::pal::unix::time::Timespec::new_unchecked"
  },
  {
    "file": "std/src/sys/pal/unix/time.rs",
    "func": "sys::pal::unix::time::Timespec::now"
  },
  {
    "file": "std/src/sys/pal/unix/time.rs",
    "func": "sys::pal::unix::time::Timespec::sub_timespec"
  },
  {
    "file": "std/src/sys/pal/unix/time.rs",
    "func": "sys::pal::unix::time::Timespec::to_timespec"
  },
  {
    "file": "std/src/sys/pal/unix/time.rs",
    "func": "sys::pal::unix::time::Timespec::zero"
  },
  {
    "file": "std/src/sys/pal/unix/weak.rs",
    "func": "sys::pal::unix::thread::current_os_id::gettid"
  },
  {
    "file": "std/src/sys/path/unix.rs",
    "func": "sys::path::unix::is_sep_byte"
  },
  {
    "file": "std/src/sys/path/unix.rs",
    "func": "sys::path::unix::is_verbatim_sep"
  },
  {
    "file": "std/src/sys/personality/dwarf/eh.rs",
    "func": "sys::personality::dwarf::eh::round_up"
  },
  {
    "file": "std/src/sys/process/env.rs",
    "func": "<sys::process::env::CommandEnv as core::default::Default>::default"
  },
  {
    "file": "std/src/sys/process/unix/common.rs",
    "func": "<sys::process::unix::common::ExitCode as core::clone::Clone>::clone"
  },
  {
    "file": "std/src/sys/process/unix/common.rs",
    "func": "<sys::process::unix::common::ExitCode as core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "std/src/sys/process/unix/common.rs",
    "func": "<sys::process::unix::common::ExitCode as core::cmp::PartialEq>::eq"
  },
  {
    "file": "std/src/sys/process/unix/common.rs",
    "func": "<sys::process::unix::common::ExitCode as core::convert::From<u8>>::from"
  },
  {
    "file": "std/src/sys/process/unix/common.rs",
    "func": "<sys::process::unix::common::ProgramKind as core::clone::Clone>::clone"
  },
  {
    "file": "std/src/sys/process/unix/common.rs",
    "func": "<sys::process::unix::common::ProgramKind as core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "std/src/sys/process/unix/common.rs",
    "func": "<sys::process::unix::common::ProgramKind as core::cmp::PartialEq>::eq"
  },
  {
    "file": "std/src/sys/process/unix/common.rs",
    "func": "<sys::process::unix::common::Stdio as core::convert::From<io::stdio::Stderr>>::from"
  },
  {
    "file": "std/src/sys/process/unix/common.rs",
    "func": "<sys::process::unix::common::Stdio as core::convert::From<sys::fd::unix::FileDesc>>::from"
  },
  {
    "file": "std/src/sys/process/unix/common.rs",
    "func": "<sys::process::unix::common::Stdio as core::convert::From<sys::fs::unix::File>>::from"
  },
  {
    "file": "std/src/sys/process/unix/common.rs",
    "func": "<sys::process::unix::common::Stdio as core::convert::From<sys::pal::unix::pipe::AnonPipe>>::from"
  },
  {
    "file": "std/src/sys/process/unix/common.rs",
    "func": "sys::process::unix::common::ChildStdio::fd"
  },
  {
    "file": "std/src/sys/process/unix/common.rs",
    "func": "sys::process::unix::common::ExitCode::as_i32"
  },
  {
    "file": "std/src/sys/process/unix/common/cstring_array.rs",
    "func": "sys::process::unix::common::cstring_array::CStringArray::with_capacity"
  },
  {
    "file": "std/src/sys/process/unix/unix.rs",
    "func": "<sys::process::unix::unix::ExitStatus as core::clone::Clone>::clone"
  },
  {
    "file": "std/src/sys/process/unix/unix.rs",
    "func": "<sys::process::unix::unix::ExitStatus as core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "std/src/sys/process/unix/unix.rs",
    "func": "<sys::process::unix::unix::ExitStatus as core::cmp::PartialEq>::eq"
  },
  {
    "file": "std/src/sys/process/unix/unix.rs",
    "func": "<sys::process::unix::unix::ExitStatus as core::convert::From<i32>>::from"
  },
  {
    "file": "std/src/sys/process/unix/unix.rs",
    "func": "<sys::process::unix::unix::ExitStatus as core::default::Default>::default"
  },
  {
    "file": "std/src/sys/process/unix/unix.rs",
    "func": "<sys::process::unix::unix::ExitStatusError as core::clone::Clone>::clone"
  },
  {
    "file": "std/src/sys/process/unix/unix.rs",
    "func": "<sys::process::unix::unix::ExitStatusError as core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "std/src/sys/process/unix/unix.rs",
    "func": "<sys::process::unix::unix::ExitStatusError as core::cmp::PartialEq>::eq"
  },
  {
    "file": "std/src/sys/process/unix/unix.rs",
    "func": "<sys::process::unix::unix::ExitStatusError as core::convert::Into<sys::process::unix::unix::ExitStatus>>::into"
  },
  {
    "file": "std/src/sys/process/unix/unix.rs",
    "func": "sys::process::unix::unix::<impl sys::process::unix::common::Command>::posix_spawn::get_posix_spawn_addchdir"
  },
  {
    "file": "std/src/sys/process/unix/unix.rs",
    "func": "sys::process::unix::unix::ExitStatus::code"
  },
  {
    "file": "std/src/sys/process/unix/unix.rs",
    "func": "sys::process::unix::unix::ExitStatus::continued"
  },
  {
    "file": "std/src/sys/process/unix/unix.rs",
    "func": "sys::process::unix::unix::ExitStatus::core_dumped"
  },
  {
    "file": "std/src/sys/process/unix/unix.rs",
    "func": "sys::process::unix::unix::ExitStatus::exit_ok"
  },
  {
    "file": "std/src/sys/process/unix/unix.rs",
    "func": "sys::process::unix::unix::ExitStatus::exited"
  },
  {
    "file": "std/src/sys/process/unix/unix.rs",
    "func": "sys::process::unix::unix::ExitStatus::from_waitid_siginfo"
  },
  {
    "file": "std/src/sys/process/unix/unix.rs",
    "func": "sys::process::unix::unix::ExitStatus::into_raw"
  },
  {
    "file": "std/src/sys/process/unix/unix.rs",
    "func": "sys::process::unix::unix::ExitStatus::new"
  },
  {
    "file": "std/src/sys/process/unix/unix.rs",
    "func": "sys::process::unix::unix::ExitStatus::signal"
  },
  {
    "file": "std/src/sys/process/unix/unix.rs",
    "func": "sys::process::unix::unix::ExitStatus::stopped_signal"
  },
  {
    "file": "std/src/sys/process/unix/unix.rs",
    "func": "sys::process::unix::unix::ExitStatusError::code"
  },
  {
    "file": "std/src/sys/process/unix/unix.rs",
    "func": "sys::process::unix::unix::Process::id"
  },
  {
    "file": "std/src/sys/process/unix/unix.rs",
    "func": "sys::process::unix::unix::Process::kill"
  },
  {
    "file": "std/src/sys/process/unix/unix.rs",
    "func": "sys::process::unix::unix::Process::new"
  },
  {
    "file": "std/src/sys/process/unix/unix.rs",
    "func": "sys::process::unix::unix::Process::send_signal"
  },
  {
    "file": "std/src/sys/process/unix/unix.rs",
    "func": "sys::process::unix::unix::Process::try_wait"
  },
  {
    "file": "std/src/sys/process/unix/unix.rs",
    "func": "sys::process::unix::unix::Process::wait"
  },
  {
    "file": "std/src/sys/process/unix/unix.rs",
    "func": "sys::process::unix::unix::linux_child_ext::<impl os::linux::process::ChildExt for process::Child>::into_pidfd"
  },
  {
    "file": "std/src/sys/process/unix/unix.rs",
    "func": "sys::process::unix::unix::linux_child_ext::<impl os::linux::process::ChildExt for process::Child>::pidfd"
  },
  {
    "file": "std/src/sys/process/unix/unix.rs",
    "func": "sys::process::unix::unix::signal_string"
  },
  {
    "file": "std/src/sys/random/linux.rs",
    "func": "sys::random::linux::hashmap_random_keys"
  },
  {
    "file": "std/src/sys/stdio/unix.rs",
    "func": "<sys::stdio::unix::Stderr as io::Write>::flush"
  },
  {
    "file": "std/src/sys/stdio/unix.rs",
    "func": "<sys::stdio::unix::Stderr as io::Write>::is_write_vectored"
  },
  {
    "file": "std/src/sys/stdio/unix.rs",
    "func": "<sys::stdio::unix::Stdin as io::Read>::is_read_vectored"
  },
  {
    "file": "std/src/sys/stdio/unix.rs",
    "func": "<sys::stdio::unix::Stdout as io::Write>::flush"
  },
  {
    "file": "std/src/sys/stdio/unix.rs",
    "func": "<sys::stdio::unix::Stdout as io::Write>::is_write_vectored"
  },
  {
    "file": "std/src/sys/stdio/unix.rs",
    "func": "sys::stdio::unix::Stderr::new"
  },
  {
    "file": "std/src/sys/stdio/unix.rs",
    "func": "sys::stdio::unix::Stdin::new"
  },
  {
    "file": "std/src/sys/stdio/unix.rs",
    "func": "sys::stdio::unix::Stdout::new"
  },
  {
    "file": "std/src/sys/stdio/unix.rs",
    "func": "sys::stdio::unix::panic_output"
  },
  {
    "file": "std/src/sys/sync/condvar/futex.rs",
    "func": "sys::sync::condvar::futex::Condvar::new"
  },
  {
    "file": "std/src/sys/sync/condvar/futex.rs",
    "func": "sys::sync::condvar::futex::Condvar::notify_all"
  },
  {
    "file": "std/src/sys/sync/condvar/futex.rs",
    "func": "sys::sync::condvar::futex::Condvar::notify_one"
  },
  {
    "file": "std/src/sys/sync/condvar/futex.rs",
    "func": "sys::sync::condvar::futex::Condvar::wait"
  },
  {
    "file": "std/src/sys/sync/condvar/futex.rs",
    "func": "sys::sync::condvar::futex::Condvar::wait_optional_timeout"
  },
  {
    "file": "std/src/sys/sync/condvar/futex.rs",
    "func": "sys::sync::condvar::futex::Condvar::wait_timeout"
  },
  {
    "file": "std/src/sys/sync/mutex/futex.rs",
    "func": "sys::sync::mutex::futex::Mutex::lock"
  },
  {
    "file": "std/src/sys/sync/mutex/futex.rs",
    "func": "sys::sync::mutex::futex::Mutex::lock_contended"
  },
  {
    "file": "std/src/sys/sync/mutex/futex.rs",
    "func": "sys::sync::mutex::futex::Mutex::new"
  },
  {
    "file": "std/src/sys/sync/mutex/futex.rs",
    "func": "sys::sync::mutex::futex::Mutex::spin"
  },
  {
    "file": "std/src/sys/sync/mutex/futex.rs",
    "func": "sys::sync::mutex::futex::Mutex::try_lock"
  },
  {
    "file": "std/src/sys/sync/mutex/futex.rs",
    "func": "sys::sync::mutex::futex::Mutex::unlock"
  },
  {
    "file": "std/src/sys/sync/mutex/futex.rs",
    "func": "sys::sync::mutex::futex::Mutex::wake"
  },
  {
    "file": "std/src/sys/sync/once/futex.rs",
    "func": "sys::sync::once::futex::Once::is_completed"
  },
  {
    "file": "std/src/sys/sync/once/futex.rs",
    "func": "sys::sync::once::futex::Once::new"
  },
  {
    "file": "std/src/sys/sync/once/futex.rs",
    "func": "sys::sync::once::futex::Once::set_state"
  },
  {
    "file": "std/src/sys/sync/once/futex.rs",
    "func": "sys::sync::once::futex::Once::state"
  },
  {
    "file": "std/src/sys/sync/once/futex.rs",
    "func": "sys::sync::once::futex::Once::wait"
  },
  {
    "file": "std/src/sys/sync/once/futex.rs",
    "func": "sys::sync::once::futex::OnceState::is_poisoned"
  },
  {
    "file": "std/src/sys/sync/once/futex.rs",
    "func": "sys::sync::once::futex::OnceState::poison"
  },
  {
    "file": "std/src/sys/sync/rwlock/futex.rs",
    "func": "sys::sync::rwlock::futex::RwLock::downgrade"
  },
  {
    "file": "std/src/sys/sync/rwlock/futex.rs",
    "func": "sys::sync::rwlock::futex::RwLock::new"
  },
  {
    "file": "std/src/sys/sync/rwlock/futex.rs",
    "func": "sys::sync::rwlock::futex::RwLock::read"
  },
  {
    "file": "std/src/sys/sync/rwlock/futex.rs",
    "func": "sys::sync::rwlock::futex::RwLock::read_contended"
  },
  {
    "file": "std/src/sys/sync/rwlock/futex.rs",
    "func": "sys::sync::rwlock::futex::RwLock::read_unlock"
  },
  {
    "file": "std/src/sys/sync/rwlock/futex.rs",
    "func": "sys::sync::rwlock::futex::RwLock::spin_read"
  },
  {
    "file": "std/src/sys/sync/rwlock/futex.rs",
    "func": "sys::sync::rwlock::futex::RwLock::spin_write"
  },
  {
    "file": "std/src/sys/sync/rwlock/futex.rs",
    "func": "sys::sync::rwlock::futex::RwLock::try_read"
  },
  {
    "file": "std/src/sys/sync/rwlock/futex.rs",
    "func": "sys::sync::rwlock::futex::RwLock::try_write"
  },
  {
    "file": "std/src/sys/sync/rwlock/futex.rs",
    "func": "sys::sync::rwlock::futex::RwLock::wake_writer"
  },
  {
    "file": "std/src/sys/sync/rwlock/futex.rs",
    "func": "sys::sync::rwlock::futex::RwLock::wake_writer_or_readers"
  },
  {
    "file": "std/src/sys/sync/rwlock/futex.rs",
    "func": "sys::sync::rwlock::futex::RwLock::write"
  },
  {
    "file": "std/src/sys/sync/rwlock/futex.rs",
    "func": "sys::sync::rwlock::futex::RwLock::write_contended"
  },
  {
    "file": "std/src/sys/sync/rwlock/futex.rs",
    "func": "sys::sync::rwlock::futex::RwLock::write_unlock"
  },
  {
    "file": "std/src/sys/sync/rwlock/futex.rs",
    "func": "sys::sync::rwlock::futex::has_reached_max_readers"
  },
  {
    "file": "std/src/sys/sync/rwlock/futex.rs",
    "func": "sys::sync::rwlock::futex::has_readers_waiting"
  },
  {
    "file": "std/src/sys/sync/rwlock/futex.rs",
    "func": "sys::sync::rwlock::futex::has_writers_waiting"
  },
  {
    "file": "std/src/sys/sync/rwlock/futex.rs",
    "func": "sys::sync::rwlock::futex::is_read_lockable"
  },
  {
    "file": "std/src/sys/sync/rwlock/futex.rs",
    "func": "sys::sync::rwlock::futex::is_read_lockable_after_wakeup"
  },
  {
    "file": "std/src/sys/sync/rwlock/futex.rs",
    "func": "sys::sync::rwlock::futex::is_unlocked"
  },
  {
    "file": "std/src/sys/sync/rwlock/futex.rs",
    "func": "sys::sync::rwlock::futex::is_write_locked"
  },
  {
    "file": "std/src/sys/sync/thread_parking/futex.rs",
    "func": "sys::sync::thread_parking::futex::Parker::park"
  },
  {
    "file": "std/src/sys/sync/thread_parking/futex.rs",
    "func": "sys::sync::thread_parking::futex::Parker::park_timeout"
  },
  {
    "file": "std/src/sys/sync/thread_parking/futex.rs",
    "func": "sys::sync::thread_parking::futex::Parker::unpark"
  },
  {
    "file": "std/src/sys/thread_local/destructors/list.rs",
    "func": "sys::thread_local::destructors::list::run"
  },
  {
    "file": "std/src/sys/thread_local/guard/key.rs",
    "func": "sys::thread_local::guard::key::enable"
  },
  {
    "file": "std/src/sys/thread_local/key/unix.rs",
    "func": "sys::thread_local::key::unix::destroy"
  },
  {
    "file": "std/src/sys/thread_local/mod.rs",
    "func": "<sys::thread_local::abort_on_dtor_unwind::DtorUnwindGuard as core::ops::Drop>::drop"
  },
  {
    "file": "std/src/sys/thread_local/native/eager.rs",
    "func": "<sys::thread_local::native::eager::State as core::clone::Clone>::clone"
  },
  {
    "file": "std/src/sys/thread_local/native/mod.rs",
    "func": "hash::random::RandomState::new::KEYS::__init"
  },
  {
    "file": "std/src/sys/thread_local/native/mod.rs",
    "func": "sync::mpmc::context::Context::with::CONTEXT::__init"
  },
  {
    "file": "std/src/sys/thread_local/native/mod.rs",
    "func": "sys::thread_local::native::LocalPointer::__new"
  },
  {
    "file": "std/src/sys_common/mod.rs",
    "func": "sys_common::mul_div_u64"
  },
  {
    "file": "std/src/sys_common/wtf8.rs",
    "func": "<sys_common::wtf8::CodePoint as core::clone::Clone>::clone"
  },
  {
    "file": "std/src/sys_common/wtf8.rs",
    "func": "<sys_common::wtf8::CodePoint as core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "std/src/sys_common/wtf8.rs",
    "func": "<sys_common::wtf8::CodePoint as core::cmp::Ord>::cmp"
  },
  {
    "file": "std/src/sys_common/wtf8.rs",
    "func": "<sys_common::wtf8::CodePoint as core::cmp::PartialEq>::eq"
  },
  {
    "file": "std/src/sys_common/wtf8.rs",
    "func": "<sys_common::wtf8::CodePoint as core::cmp::PartialOrd>::partial_cmp"
  },
  {
    "file": "std/src/sys_common/wtf8.rs",
    "func": "sys_common::wtf8::CodePoint::from_char"
  },
  {
    "file": "std/src/sys_common/wtf8.rs",
    "func": "sys_common::wtf8::CodePoint::from_u32"
  },
  {
    "file": "std/src/sys_common/wtf8.rs",
    "func": "sys_common::wtf8::CodePoint::from_u32_unchecked"
  },
  {
    "file": "std/src/sys_common/wtf8.rs",
    "func": "sys_common::wtf8::CodePoint::to_char"
  },
  {
    "file": "std/src/sys_common/wtf8.rs",
    "func": "sys_common::wtf8::CodePoint::to_char_lossy"
  },
  {
    "file": "std/src/sys_common/wtf8.rs",
    "func": "sys_common::wtf8::CodePoint::to_lead_surrogate"
  },
  {
    "file": "std/src/sys_common/wtf8.rs",
    "func": "sys_common::wtf8::CodePoint::to_trail_surrogate"
  },
  {
    "file": "std/src/sys_common/wtf8.rs",
    "func": "sys_common::wtf8::CodePoint::to_u32"
  },
  {
    "file": "std/src/sys_common/wtf8.rs",
    "func": "sys_common::wtf8::Wtf8::empty_box"
  },
  {
    "file": "std/src/sys_common/wtf8.rs",
    "func": "sys_common::wtf8::Wtf8Buf::new"
  },
  {
    "file": "std/src/sys_common/wtf8.rs",
    "func": "sys_common::wtf8::Wtf8Buf::with_capacity"
  },
  {
    "file": "std/src/sys_common/wtf8.rs",
    "func": "sys_common::wtf8::decode_surrogate"
  },
  {
    "file": "std/src/sys_common/wtf8.rs",
    "func": "sys_common::wtf8::decode_surrogate_pair"
  },
  {
    "file": "std/src/thread/current.rs",
    "func": "thread::current::current"
  },
  {
    "file": "std/src/thread/current.rs",
    "func": "thread::current::current_id"
  },
  {
    "file": "std/src/thread/current.rs",
    "func": "thread::current::current_or_unnamed"
  },
  {
    "file": "std/src/thread/current.rs",
    "func": "thread::current::current_os_id"
  },
  {
    "file": "std/src/thread/current.rs",
    "func": "thread::current::drop_current"
  },
  {
    "file": "std/src/thread/current.rs",
    "func": "thread::current::id::get"
  },
  {
    "file": "std/src/thread/current.rs",
    "func": "thread::current::id::get_or_init"
  },
  {
    "file": "std/src/thread/current.rs",
    "func": "thread::current::id::set"
  },
  {
    "file": "std/src/thread/local.rs",
    "func": "<thread::local::AccessError as core::clone::Clone>::clone"
  },
  {
    "file": "std/src/thread/local.rs",
    "func": "<thread::local::AccessError as core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "std/src/thread/local.rs",
    "func": "<thread::local::AccessError as core::cmp::PartialEq>::eq"
  },
  {
    "file": "std/src/thread/local.rs",
    "func": "thread::local::panic_access_error"
  },
  {
    "file": "std/src/thread/mod.rs",
    "func": "<thread::PanicGuard as core::ops::Drop>::drop"
  },
  {
    "file": "std/src/thread/mod.rs",
    "func": "<thread::ThreadId as core::clone::Clone>::clone"
  },
  {
    "file": "std/src/thread/mod.rs",
    "func": "<thread::ThreadId as core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "std/src/thread/mod.rs",
    "func": "<thread::ThreadId as core::cmp::PartialEq>::eq"
  },
  {
    "file": "std/src/thread/mod.rs",
    "func": "thread::Builder::new"
  },
  {
    "file": "std/src/thread/mod.rs",
    "func": "thread::ThreadId::as_u64"
  },
  {
    "file": "std/src/thread/mod.rs",
    "func": "thread::ThreadId::from_u64"
  },
  {
    "file": "std/src/thread/mod.rs",
    "func": "thread::ThreadId::new"
  },
  {
    "file": "std/src/thread/mod.rs",
    "func": "thread::ThreadId::new::exhausted"
  },
  {
    "file": "std/src/thread/mod.rs",
    "func": "thread::_assert_sync_and_send"
  },
  {
    "file": "std/src/thread/mod.rs",
    "func": "thread::available_parallelism"
  },
  {
    "file": "std/src/thread/mod.rs",
    "func": "thread::main_thread::get"
  },
  {
    "file": "std/src/thread/mod.rs",
    "func": "thread::main_thread::set"
  },
  {
    "file": "std/src/thread/mod.rs",
    "func": "thread::panicking"
  },
  {
    "file": "std/src/thread/mod.rs",
    "func": "thread::park"
  },
  {
    "file": "std/src/thread/mod.rs",
    "func": "thread::park_timeout"
  },
  {
    "file": "std/src/thread/mod.rs",
    "func": "thread::park_timeout_ms"
  },
  {
    "file": "std/src/thread/mod.rs",
    "func": "thread::sleep"
  },
  {
    "file": "std/src/thread/mod.rs",
    "func": "thread::sleep_ms"
  },
  {
    "file": "std/src/thread/mod.rs",
    "func": "thread::sleep_until"
  },
  {
    "file": "std/src/thread/mod.rs",
    "func": "thread::yield_now"
  },
  {
    "file": "std/src/thread/spawnhook.rs",
    "func": "<thread::spawnhook::ChildSpawnHooks as core::default::Default>::default"
  },
  {
    "file": "std/src/thread/spawnhook.rs",
    "func": "<thread::spawnhook::SpawnHooks as core::default::Default>::default"
  },
  {
    "file": "std/src/time.rs",
    "func": "<time::Instant as core::clone::Clone>::clone"
  },
  {
    "file": "std/src/time.rs",
    "func": "<time::Instant as core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "std/src/time.rs",
    "func": "<time::Instant as core::cmp::Ord>::cmp"
  },
  {
    "file": "std/src/time.rs",
    "func": "<time::Instant as core::cmp::PartialEq>::eq"
  },
  {
    "file": "std/src/time.rs",
    "func": "<time::Instant as core::cmp::PartialOrd>::partial_cmp"
  },
  {
    "file": "std/src/time.rs",
    "func": "<time::Instant as core::ops::Add<core::time::Duration>>::add"
  },
  {
    "file": "std/src/time.rs",
    "func": "<time::Instant as core::ops::AddAssign<core::time::Duration>>::add_assign"
  },
  {
    "file": "std/src/time.rs",
    "func": "<time::Instant as core::ops::Sub<core::time::Duration>>::sub"
  },
  {
    "file": "std/src/time.rs",
    "func": "<time::Instant as core::ops::Sub>::sub"
  },
  {
    "file": "std/src/time.rs",
    "func": "<time::Instant as core::ops::SubAssign<core::time::Duration>>::sub_assign"
  },
  {
    "file": "std/src/time.rs",
    "func": "<time::SystemTime as core::clone::Clone>::clone"
  },
  {
    "file": "std/src/time.rs",
    "func": "<time::SystemTime as core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "std/src/time.rs",
    "func": "<time::SystemTime as core::cmp::Ord>::cmp"
  },
  {
    "file": "std/src/time.rs",
    "func": "<time::SystemTime as core::cmp::PartialEq>::eq"
  },
  {
    "file": "std/src/time.rs",
    "func": "<time::SystemTime as core::cmp::PartialOrd>::partial_cmp"
  },
  {
    "file": "std/src/time.rs",
    "func": "<time::SystemTime as core::ops::Add<core::time::Duration>>::add"
  },
  {
    "file": "std/src/time.rs",
    "func": "<time::SystemTime as core::ops::AddAssign<core::time::Duration>>::add_assign"
  },
  {
    "file": "std/src/time.rs",
    "func": "<time::SystemTime as core::ops::Sub<core::time::Duration>>::sub"
  },
  {
    "file": "std/src/time.rs",
    "func": "<time::SystemTime as core::ops::SubAssign<core::time::Duration>>::sub_assign"
  },
  {
    "file": "std/src/time.rs",
    "func": "<time::SystemTime as sys_common::FromInner<sys::pal::unix::time::SystemTime>>::from_inner"
  },
  {
    "file": "std/src/time.rs",
    "func": "<time::SystemTime as sys_common::IntoInner<sys::pal::unix::time::SystemTime>>::into_inner"
  },
  {
    "file": "std/src/time.rs",
    "func": "<time::SystemTimeError as core::clone::Clone>::clone"
  },
  {
    "file": "std/src/time.rs",
    "func": "<time::SystemTimeError as core::error::Error>::description"
  },
  {
    "file": "std/src/time.rs",
    "func": "time::Instant::checked_add"
  },
  {
    "file": "std/src/time.rs",
    "func": "time::Instant::checked_duration_since"
  },
  {
    "file": "std/src/time.rs",
    "func": "time::Instant::checked_sub"
  },
  {
    "file": "std/src/time.rs",
    "func": "time::Instant::duration_since"
  },
  {
    "file": "std/src/time.rs",
    "func": "time::Instant::elapsed"
  },
  {
    "file": "std/src/time.rs",
    "func": "time::Instant::into_inner"
  },
  {
    "file": "std/src/time.rs",
    "func": "time::Instant::now"
  },
  {
    "file": "std/src/time.rs",
    "func": "time::Instant::saturating_duration_since"
  },
  {
    "file": "std/src/time.rs",
    "func": "time::SystemTime::checked_add"
  },
  {
    "file": "std/src/time.rs",
    "func": "time::SystemTime::checked_sub"
  },
  {
    "file": "std/src/time.rs",
    "func": "time::SystemTime::duration_since"
  },
  {
    "file": "std/src/time.rs",
    "func": "time::SystemTime::elapsed"
  },
  {
    "file": "std/src/time.rs",
    "func": "time::SystemTime::now"
  },
  {
    "file": "std/src/time.rs",
    "func": "time::SystemTimeError::duration"
  },
  {
    "file": "std_detect/src/detect/bit.rs",
    "func": "detect::bit::test"
  },
  {
    "file": "std_detect/src/detect/cache.rs",
    "func": "<detect::cache::Initializer as core::clone::Clone>::clone"
  },
  {
    "file": "std_detect/src/detect/cache.rs",
    "func": "<detect::cache::Initializer as core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "std_detect/src/detect/cache.rs",
    "func": "<detect::cache::Initializer as core::cmp::PartialEq>::eq"
  },
  {
    "file": "std_detect/src/detect/cache.rs",
    "func": "<detect::cache::Initializer as core::default::Default>::default"
  },
  {
    "file": "std_detect/src/detect/cache.rs",
    "func": "detect::cache::Cache::initialize"
  },
  {
    "file": "std_detect/src/detect/cache.rs",
    "func": "detect::cache::Cache::test"
  },
  {
    "file": "std_detect/src/detect/cache.rs",
    "func": "detect::cache::Cache::uninitialized"
  },
  {
    "file": "std_detect/src/detect/cache.rs",
    "func": "detect::cache::Initializer::set"
  },
  {
    "file": "std_detect/src/detect/cache.rs",
    "func": "detect::cache::Initializer::test"
  },
  {
    "file": "std_detect/src/detect/cache.rs",
    "func": "detect::cache::Initializer::unset"
  },
  {
    "file": "std_detect/src/detect/cache.rs",
    "func": "detect::cache::detect_and_initialize"
  },
  {
    "file": "std_detect/src/detect/cache.rs",
    "func": "detect::cache::do_initialize"
  },
  {
    "file": "std_detect/src/detect/cache.rs",
    "func": "detect::cache::initialize"
  },
  {
    "file": "std_detect/src/detect/cache.rs",
    "func": "detect::cache::set_bit"
  },
  {
    "file": "std_detect/src/detect/cache.rs",
    "func": "detect::cache::test"
  },
  {
    "file": "std_detect/src/detect/cache.rs",
    "func": "detect::cache::test_bit"
  },
  {
    "file": "std_detect/src/detect/cache.rs",
    "func": "detect::cache::unset_bit"
  },
  {
    "file": "std_detect/src/detect/macros.rs",
    "func": "<detect::arch::x86::Feature as core::clone::Clone>::clone"
  },
  {
    "file": "std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::Feature::to_str"
  },
  {
    "file": "std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::adx"
  },
  {
    "file": "std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::aes"
  },
  {
    "file": "std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::amx_avx512"
  },
  {
    "file": "std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::amx_bf16"
  },
  {
    "file": "std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::amx_complex"
  },
  {
    "file": "std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::amx_fp16"
  },
  {
    "file": "std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::amx_fp8"
  },
  {
    "file": "std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::amx_int8"
  },
  {
    "file": "std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::amx_movrs"
  },
  {
    "file": "std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::amx_tf32"
  },
  {
    "file": "std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::amx_tile"
  },
  {
    "file": "std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::amx_transpose"
  },
  {
    "file": "std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::avx"
  },
  {
    "file": "std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::avx2"
  },
  {
    "file": "std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::avx512bf16"
  },
  {
    "file": "std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::avx512bitalg"
  },
  {
    "file": "std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::avx512bw"
  },
  {
    "file": "std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::avx512cd"
  },
  {
    "file": "std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::avx512dq"
  },
  {
    "file": "std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::avx512er"
  },
  {
    "file": "std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::avx512f"
  },
  {
    "file": "std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::avx512fp16"
  },
  {
    "file": "std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::avx512ifma"
  },
  {
    "file": "std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::avx512pf"
  },
  {
    "file": "std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::avx512vbmi"
  },
  {
    "file": "std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::avx512vbmi2"
  },
  {
    "file": "std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::avx512vl"
  },
  {
    "file": "std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::avx512vnni"
  },
  {
    "file": "std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::avx512vp2intersect"
  },
  {
    "file": "std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::avx512vpopcntdq"
  },
  {
    "file": "std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::avxifma"
  },
  {
    "file": "std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::avxneconvert"
  },
  {
    "file": "std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::avxvnni"
  },
  {
    "file": "std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::avxvnniint16"
  },
  {
    "file": "std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::avxvnniint8"
  },
  {
    "file": "std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::bmi1"
  },
  {
    "file": "std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::bmi2"
  },
  {
    "file": "std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::cmpxchg16b"
  },
  {
    "file": "std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::ermsb"
  },
  {
    "file": "std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::f16c"
  },
  {
    "file": "std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::fma"
  },
  {
    "file": "std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::fxsr"
  },
  {
    "file": "std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::gfni"
  },
  {
    "file": "std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::kl"
  },
  {
    "file": "std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::lzcnt"
  },
  {
    "file": "std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::mmx"
  },
  {
    "file": "std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::movbe"
  },
  {
    "file": "std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::movrs"
  },
  {
    "file": "std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::pclmulqdq"
  },
  {
    "file": "std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::popcnt"
  },
  {
    "file": "std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::rdrand"
  },
  {
    "file": "std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::rdseed"
  },
  {
    "file": "std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::rtm"
  },
  {
    "file": "std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::sha"
  },
  {
    "file": "std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::sha512"
  },
  {
    "file": "std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::sm3"
  },
  {
    "file": "std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::sm4"
  },
  {
    "file": "std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::sse"
  },
  {
    "file": "std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::sse2"
  },
  {
    "file": "std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::sse3"
  },
  {
    "file": "std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::sse4_1"
  },
  {
    "file": "std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::sse4_2"
  },
  {
    "file": "std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::sse4a"
  },
  {
    "file": "std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::ssse3"
  },
  {
    "file": "std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::tbm"
  },
  {
    "file": "std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::tsc"
  },
  {
    "file": "std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::vaes"
  },
  {
    "file": "std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::vpclmulqdq"
  },
  {
    "file": "std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::widekl"
  },
  {
    "file": "std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::xop"
  },
  {
    "file": "std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::xsave"
  },
  {
    "file": "std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::xsavec"
  },
  {
    "file": "std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::xsaveopt"
  },
  {
    "file": "std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::xsaves"
  },
  {
    "file": "std_detect/src/detect/mod.rs",
    "func": "detect::check_for"
  },
  {
    "file": "std_detect/src/detect/mod.rs",
    "func": "detect::features"
  },
  {
    "file": "std_detect/src/detect/os/x86.rs",
    "func": "detect::os::detect_features"
  },
  {
    "file": "stdarch/crates/core_arch/src/macros.rs",
    "func": "<core_arch::x86::__m128 as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/macros.rs",
    "func": "<core_arch::x86::__m128::splat::JustOne as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/macros.rs",
    "func": "<core_arch::x86::__m128bh as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/macros.rs",
    "func": "<core_arch::x86::__m128bh::splat::JustOne as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/macros.rs",
    "func": "<core_arch::x86::__m128d as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/macros.rs",
    "func": "<core_arch::x86::__m128d::splat::JustOne as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/macros.rs",
    "func": "<core_arch::x86::__m128h as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/macros.rs",
    "func": "<core_arch::x86::__m128h::splat::JustOne as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/macros.rs",
    "func": "<core_arch::x86::__m128i as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/macros.rs",
    "func": "<core_arch::x86::__m128i::splat::JustOne as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/macros.rs",
    "func": "<core_arch::x86::__m256 as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/macros.rs",
    "func": "<core_arch::x86::__m256::splat::JustOne as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/macros.rs",
    "func": "<core_arch::x86::__m256bh as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/macros.rs",
    "func": "<core_arch::x86::__m256bh::splat::JustOne as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/macros.rs",
    "func": "<core_arch::x86::__m256d as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/macros.rs",
    "func": "<core_arch::x86::__m256d::splat::JustOne as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/macros.rs",
    "func": "<core_arch::x86::__m256h as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/macros.rs",
    "func": "<core_arch::x86::__m256h::splat::JustOne as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/macros.rs",
    "func": "<core_arch::x86::__m256i as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/macros.rs",
    "func": "<core_arch::x86::__m256i::splat::JustOne as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/macros.rs",
    "func": "<core_arch::x86::__m512 as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/macros.rs",
    "func": "<core_arch::x86::__m512::splat::JustOne as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/macros.rs",
    "func": "<core_arch::x86::__m512bh as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/macros.rs",
    "func": "<core_arch::x86::__m512bh::splat::JustOne as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/macros.rs",
    "func": "<core_arch::x86::__m512d as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/macros.rs",
    "func": "<core_arch::x86::__m512d::splat::JustOne as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/macros.rs",
    "func": "<core_arch::x86::__m512h as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/macros.rs",
    "func": "<core_arch::x86::__m512h::splat::JustOne as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/macros.rs",
    "func": "<core_arch::x86::__m512i as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/macros.rs",
    "func": "<core_arch::x86::__m512i::splat::JustOne as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/macros.rs",
    "func": "core_arch::x86::__m128::as_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/macros.rs",
    "func": "core_arch::x86::__m128::as_mut_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/macros.rs",
    "func": "core_arch::x86::__m128::splat"
  },
  {
    "file": "stdarch/crates/core_arch/src/macros.rs",
    "func": "core_arch::x86::__m128bh::as_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/macros.rs",
    "func": "core_arch::x86::__m128bh::as_mut_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/macros.rs",
    "func": "core_arch::x86::__m128bh::splat"
  },
  {
    "file": "stdarch/crates/core_arch/src/macros.rs",
    "func": "core_arch::x86::__m128d::as_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/macros.rs",
    "func": "core_arch::x86::__m128d::as_mut_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/macros.rs",
    "func": "core_arch::x86::__m128d::splat"
  },
  {
    "file": "stdarch/crates/core_arch/src/macros.rs",
    "func": "core_arch::x86::__m128h::as_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/macros.rs",
    "func": "core_arch::x86::__m128h::as_mut_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/macros.rs",
    "func": "core_arch::x86::__m128h::splat"
  },
  {
    "file": "stdarch/crates/core_arch/src/macros.rs",
    "func": "core_arch::x86::__m128i::as_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/macros.rs",
    "func": "core_arch::x86::__m128i::as_mut_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/macros.rs",
    "func": "core_arch::x86::__m128i::splat"
  },
  {
    "file": "stdarch/crates/core_arch/src/macros.rs",
    "func": "core_arch::x86::__m256::as_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/macros.rs",
    "func": "core_arch::x86::__m256::as_mut_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/macros.rs",
    "func": "core_arch::x86::__m256::splat"
  },
  {
    "file": "stdarch/crates/core_arch/src/macros.rs",
    "func": "core_arch::x86::__m256bh::as_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/macros.rs",
    "func": "core_arch::x86::__m256bh::as_mut_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/macros.rs",
    "func": "core_arch::x86::__m256bh::splat"
  },
  {
    "file": "stdarch/crates/core_arch/src/macros.rs",
    "func": "core_arch::x86::__m256d::as_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/macros.rs",
    "func": "core_arch::x86::__m256d::as_mut_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/macros.rs",
    "func": "core_arch::x86::__m256d::splat"
  },
  {
    "file": "stdarch/crates/core_arch/src/macros.rs",
    "func": "core_arch::x86::__m256h::as_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/macros.rs",
    "func": "core_arch::x86::__m256h::as_mut_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/macros.rs",
    "func": "core_arch::x86::__m256h::splat"
  },
  {
    "file": "stdarch/crates/core_arch/src/macros.rs",
    "func": "core_arch::x86::__m256i::as_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/macros.rs",
    "func": "core_arch::x86::__m256i::as_mut_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/macros.rs",
    "func": "core_arch::x86::__m256i::splat"
  },
  {
    "file": "stdarch/crates/core_arch/src/macros.rs",
    "func": "core_arch::x86::__m512::as_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/macros.rs",
    "func": "core_arch::x86::__m512::as_mut_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/macros.rs",
    "func": "core_arch::x86::__m512::splat"
  },
  {
    "file": "stdarch/crates/core_arch/src/macros.rs",
    "func": "core_arch::x86::__m512bh::as_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/macros.rs",
    "func": "core_arch::x86::__m512bh::as_mut_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/macros.rs",
    "func": "core_arch::x86::__m512bh::splat"
  },
  {
    "file": "stdarch/crates/core_arch/src/macros.rs",
    "func": "core_arch::x86::__m512d::as_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/macros.rs",
    "func": "core_arch::x86::__m512d::as_mut_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/macros.rs",
    "func": "core_arch::x86::__m512d::splat"
  },
  {
    "file": "stdarch/crates/core_arch/src/macros.rs",
    "func": "core_arch::x86::__m512h::as_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/macros.rs",
    "func": "core_arch::x86::__m512h::as_mut_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/macros.rs",
    "func": "core_arch::x86::__m512h::splat"
  },
  {
    "file": "stdarch/crates/core_arch/src/macros.rs",
    "func": "core_arch::x86::__m512i::as_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/macros.rs",
    "func": "core_arch::x86::__m512i::as_mut_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/macros.rs",
    "func": "core_arch::x86::__m512i::splat"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::f16x16 as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::f16x16 as cmp::PartialEq>::eq"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::f16x16::splat::JustOne as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::f16x32 as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::f16x32 as cmp::PartialEq>::eq"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::f16x32::splat::JustOne as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::f16x4 as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::f16x4 as cmp::PartialEq>::eq"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::f16x4::splat::JustOne as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::f16x8 as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::f16x8 as cmp::PartialEq>::eq"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::f16x8::splat::JustOne as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::f32x16 as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::f32x16 as cmp::PartialEq>::eq"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::f32x16::splat::JustOne as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::f32x2 as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::f32x2 as cmp::PartialEq>::eq"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::f32x2::splat::JustOne as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::f32x4 as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::f32x4 as cmp::PartialEq>::eq"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::f32x4::splat::JustOne as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::f32x8 as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::f32x8 as cmp::PartialEq>::eq"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::f32x8::splat::JustOne as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::f64x1 as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::f64x1 as cmp::PartialEq>::eq"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::f64x1::splat::JustOne as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::f64x2 as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::f64x2 as cmp::PartialEq>::eq"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::f64x2::splat::JustOne as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::f64x4 as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::f64x4 as cmp::PartialEq>::eq"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::f64x4::splat::JustOne as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::f64x8 as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::f64x8 as cmp::PartialEq>::eq"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::f64x8::splat::JustOne as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::i16x16 as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::i16x16 as cmp::PartialEq>::eq"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::i16x16::splat::JustOne as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::i16x2 as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::i16x2 as cmp::PartialEq>::eq"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::i16x2::splat::JustOne as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::i16x32 as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::i16x32 as cmp::PartialEq>::eq"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::i16x32::splat::JustOne as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::i16x4 as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::i16x4 as cmp::PartialEq>::eq"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::i16x4::splat::JustOne as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::i16x8 as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::i16x8 as cmp::PartialEq>::eq"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::i16x8::splat::JustOne as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::i32x16 as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::i32x16 as cmp::PartialEq>::eq"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::i32x16::splat::JustOne as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::i32x2 as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::i32x2 as cmp::PartialEq>::eq"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::i32x2::splat::JustOne as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::i32x32 as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::i32x32 as cmp::PartialEq>::eq"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::i32x32::splat::JustOne as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::i32x4 as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::i32x4 as cmp::PartialEq>::eq"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::i32x4::splat::JustOne as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::i32x8 as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::i32x8 as cmp::PartialEq>::eq"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::i32x8::splat::JustOne as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::i64x1 as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::i64x1 as cmp::PartialEq>::eq"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::i64x1::splat::JustOne as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::i64x2 as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::i64x2 as cmp::PartialEq>::eq"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::i64x2::splat::JustOne as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::i64x4 as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::i64x4 as cmp::PartialEq>::eq"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::i64x4::splat::JustOne as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::i64x8 as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::i64x8 as cmp::PartialEq>::eq"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::i64x8::splat::JustOne as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::i8x16 as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::i8x16 as cmp::PartialEq>::eq"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::i8x16::splat::JustOne as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::i8x2 as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::i8x2 as cmp::PartialEq>::eq"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::i8x2::splat::JustOne as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::i8x32 as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::i8x32 as cmp::PartialEq>::eq"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::i8x32::splat::JustOne as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::i8x4 as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::i8x4 as cmp::PartialEq>::eq"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::i8x4::splat::JustOne as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::i8x64 as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::i8x64 as cmp::PartialEq>::eq"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::i8x64::splat::JustOne as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::i8x8 as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::i8x8 as cmp::PartialEq>::eq"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::i8x8::splat::JustOne as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::m16x16 as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::m16x16 as cmp::PartialEq>::eq"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::m16x16::splat::JustOne as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::m16x8 as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::m16x8 as cmp::PartialEq>::eq"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::m16x8::splat::JustOne as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::m32x4 as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::m32x4 as cmp::PartialEq>::eq"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::m32x4::splat::JustOne as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::m32x8 as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::m32x8 as cmp::PartialEq>::eq"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::m32x8::splat::JustOne as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::m64x2 as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::m64x2 as cmp::PartialEq>::eq"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::m64x2::splat::JustOne as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::m8x16 as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::m8x16 as cmp::PartialEq>::eq"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::m8x16::splat::JustOne as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::m8x32 as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::m8x32 as cmp::PartialEq>::eq"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::m8x32::splat::JustOne as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::u16x16 as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::u16x16 as cmp::PartialEq>::eq"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::u16x16::splat::JustOne as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::u16x2 as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::u16x2 as cmp::PartialEq>::eq"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::u16x2::splat::JustOne as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::u16x32 as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::u16x32 as cmp::PartialEq>::eq"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::u16x32::splat::JustOne as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::u16x4 as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::u16x4 as cmp::PartialEq>::eq"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::u16x4::splat::JustOne as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::u16x64 as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::u16x64 as cmp::PartialEq>::eq"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::u16x64::splat::JustOne as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::u16x8 as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::u16x8 as cmp::PartialEq>::eq"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::u16x8::splat::JustOne as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::u32x16 as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::u32x16 as cmp::PartialEq>::eq"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::u32x16::splat::JustOne as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::u32x2 as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::u32x2 as cmp::PartialEq>::eq"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::u32x2::splat::JustOne as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::u32x32 as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::u32x32 as cmp::PartialEq>::eq"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::u32x32::splat::JustOne as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::u32x4 as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::u32x4 as cmp::PartialEq>::eq"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::u32x4::splat::JustOne as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::u32x8 as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::u32x8 as cmp::PartialEq>::eq"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::u32x8::splat::JustOne as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::u64x1 as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::u64x1 as cmp::PartialEq>::eq"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::u64x1::splat::JustOne as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::u64x2 as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::u64x2 as cmp::PartialEq>::eq"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::u64x2::splat::JustOne as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::u64x4 as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::u64x4 as cmp::PartialEq>::eq"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::u64x4::splat::JustOne as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::u64x8 as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::u64x8 as cmp::PartialEq>::eq"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::u64x8::splat::JustOne as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::u8x16 as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::u8x16 as cmp::PartialEq>::eq"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::u8x16::splat::JustOne as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::u8x2 as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::u8x2 as cmp::PartialEq>::eq"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::u8x2::splat::JustOne as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::u8x32 as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::u8x32 as cmp::PartialEq>::eq"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::u8x32::splat::JustOne as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::u8x4 as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::u8x4 as cmp::PartialEq>::eq"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::u8x4::splat::JustOne as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::u8x64 as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::u8x64 as cmp::PartialEq>::eq"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::u8x64::splat::JustOne as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::u8x8 as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::u8x8 as cmp::PartialEq>::eq"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::u8x8::splat::JustOne as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::f16x16::as_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::f16x16::extract"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::f16x16::from_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::f16x16::new"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::f16x16::splat"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::f16x32::as_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::f16x32::extract"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::f16x32::from_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::f16x32::new"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::f16x32::splat"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::f16x4::as_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::f16x4::extract"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::f16x4::from_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::f16x4::new"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::f16x4::splat"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::f16x8::as_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::f16x8::extract"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::f16x8::from_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::f16x8::new"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::f16x8::splat"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::f32x16::as_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::f32x16::extract"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::f32x16::from_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::f32x16::new"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::f32x16::splat"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::f32x2::as_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::f32x2::extract"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::f32x2::from_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::f32x2::new"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::f32x2::splat"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::f32x4::as_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::f32x4::extract"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::f32x4::from_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::f32x4::new"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::f32x4::splat"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::f32x8::as_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::f32x8::extract"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::f32x8::from_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::f32x8::new"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::f32x8::splat"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::f64x1::as_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::f64x1::extract"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::f64x1::from_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::f64x1::new"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::f64x1::splat"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::f64x2::as_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::f64x2::extract"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::f64x2::from_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::f64x2::new"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::f64x2::splat"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::f64x4::as_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::f64x4::extract"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::f64x4::from_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::f64x4::new"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::f64x4::splat"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::f64x8::as_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::f64x8::extract"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::f64x8::from_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::f64x8::new"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::f64x8::splat"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i16x16::as_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i16x16::extract"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i16x16::from_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i16x16::new"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i16x16::splat"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i16x2::as_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i16x2::extract"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i16x2::from_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i16x2::new"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i16x2::splat"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i16x32::as_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i16x32::extract"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i16x32::from_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i16x32::new"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i16x32::splat"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i16x4::as_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i16x4::extract"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i16x4::from_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i16x4::new"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i16x4::splat"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i16x8::as_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i16x8::extract"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i16x8::from_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i16x8::new"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i16x8::splat"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i32x16::as_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i32x16::extract"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i32x16::from_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i32x16::new"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i32x16::splat"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i32x2::as_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i32x2::extract"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i32x2::from_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i32x2::new"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i32x2::splat"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i32x32::as_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i32x32::extract"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i32x32::from_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i32x32::new"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i32x32::splat"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i32x4::as_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i32x4::extract"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i32x4::from_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i32x4::new"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i32x4::splat"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i32x8::as_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i32x8::extract"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i32x8::from_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i32x8::new"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i32x8::splat"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i64x1::as_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i64x1::extract"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i64x1::from_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i64x1::new"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i64x1::splat"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i64x2::as_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i64x2::extract"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i64x2::from_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i64x2::new"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i64x2::splat"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i64x4::as_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i64x4::extract"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i64x4::from_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i64x4::new"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i64x4::splat"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i64x8::as_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i64x8::extract"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i64x8::from_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i64x8::new"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i64x8::splat"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i8x16::as_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i8x16::extract"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i8x16::from_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i8x16::new"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i8x16::splat"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i8x2::as_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i8x2::extract"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i8x2::from_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i8x2::new"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i8x2::splat"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i8x32::as_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i8x32::extract"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i8x32::from_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i8x32::new"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i8x32::splat"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i8x4::as_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i8x4::extract"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i8x4::from_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i8x4::new"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i8x4::splat"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i8x64::as_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i8x64::extract"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i8x64::from_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i8x64::new"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i8x64::splat"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i8x8::as_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i8x8::extract"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i8x8::from_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i8x8::new"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i8x8::splat"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::m16x16::as_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::m16x16::bool_to_internal"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::m16x16::new"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::m16x16::splat"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::m16x8::as_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::m16x8::bool_to_internal"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::m16x8::new"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::m16x8::splat"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::m32x4::as_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::m32x4::bool_to_internal"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::m32x4::new"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::m32x4::splat"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::m32x8::as_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::m32x8::bool_to_internal"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::m32x8::new"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::m32x8::splat"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::m64x2::as_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::m64x2::bool_to_internal"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::m64x2::new"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::m64x2::splat"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::m8x16::as_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::m8x16::bool_to_internal"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::m8x16::new"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::m8x16::splat"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::m8x32::as_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::m8x32::bool_to_internal"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::m8x32::new"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::m8x32::splat"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u16x16::as_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u16x16::extract"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u16x16::from_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u16x16::new"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u16x16::splat"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u16x2::as_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u16x2::extract"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u16x2::from_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u16x2::new"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u16x2::splat"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u16x32::as_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u16x32::extract"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u16x32::from_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u16x32::new"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u16x32::splat"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u16x4::as_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u16x4::extract"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u16x4::from_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u16x4::new"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u16x4::splat"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u16x64::as_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u16x64::extract"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u16x64::from_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u16x64::new"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u16x64::splat"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u16x8::as_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u16x8::extract"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u16x8::from_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u16x8::new"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u16x8::splat"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u32x16::as_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u32x16::extract"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u32x16::from_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u32x16::new"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u32x16::splat"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u32x2::as_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u32x2::extract"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u32x2::from_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u32x2::new"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u32x2::splat"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u32x32::as_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u32x32::extract"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u32x32::from_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u32x32::new"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u32x32::splat"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u32x4::as_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u32x4::extract"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u32x4::from_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u32x4::new"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u32x4::splat"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u32x8::as_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u32x8::extract"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u32x8::from_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u32x8::new"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u32x8::splat"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u64x1::as_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u64x1::extract"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u64x1::from_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u64x1::new"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u64x1::splat"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u64x2::as_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u64x2::extract"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u64x2::from_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u64x2::new"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u64x2::splat"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u64x4::as_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u64x4::extract"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u64x4::from_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u64x4::new"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u64x4::splat"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u64x8::as_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u64x8::extract"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u64x8::from_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u64x8::new"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u64x8::splat"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u8x16::as_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u8x16::extract"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u8x16::from_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u8x16::new"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u8x16::splat"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u8x2::as_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u8x2::extract"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u8x2::from_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u8x2::new"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u8x2::splat"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u8x32::as_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u8x32::extract"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u8x32::from_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u8x32::new"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u8x32::splat"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u8x4::as_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u8x4::extract"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u8x4::from_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u8x4::new"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u8x4::splat"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u8x64::as_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u8x64::extract"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u8x64::from_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u8x64::new"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u8x64::splat"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u8x8::as_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u8x8::extract"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u8x8::from_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u8x8::new"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u8x8::splat"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/abm.rs",
    "func": "core_arch::x86::abm::_lzcnt_u32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/abm.rs",
    "func": "core_arch::x86::abm::_popcnt32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/adx.rs",
    "func": "core_arch::x86::adx::_addcarry_u32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/adx.rs",
    "func": "core_arch::x86::adx::_addcarryx_u32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/adx.rs",
    "func": "core_arch::x86::adx::_subborrow_u32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/aes.rs",
    "func": "core_arch::x86::aes::_mm_aesdec_si128"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/aes.rs",
    "func": "core_arch::x86::aes::_mm_aesdeclast_si128"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/aes.rs",
    "func": "core_arch::x86::aes::_mm_aesenc_si128"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/aes.rs",
    "func": "core_arch::x86::aes::_mm_aesenclast_si128"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/aes.rs",
    "func": "core_arch::x86::aes::_mm_aesimc_si128"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_add_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_add_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_addsub_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_addsub_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_and_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_and_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_andnot_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_andnot_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_blendv_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_blendv_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_broadcast_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_broadcast_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_broadcast_sd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_broadcast_ss"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_castpd128_pd256"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_castpd256_pd128"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_castpd_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_castpd_si256"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_castps128_ps256"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_castps256_ps128"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_castps_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_castps_si256"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_castsi128_si256"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_castsi256_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_castsi256_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_castsi256_si128"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_ceil_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_ceil_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_cvtepi32_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_cvtepi32_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_cvtpd_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_cvtpd_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_cvtps_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_cvtps_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_cvtsd_f64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_cvtsi256_si32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_cvtss_f32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_cvttpd_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_cvttps_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_div_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_div_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_floor_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_floor_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_hadd_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_hadd_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_hsub_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_hsub_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_max_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_max_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_min_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_min_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_movedup_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_movehdup_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_moveldup_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_movemask_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_movemask_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_mul_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_mul_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_or_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_or_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_permutevar_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_permutevar_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_rcp_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_rsqrt_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_set1_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_set1_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_set1_epi64x"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_set1_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_set1_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_set1_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_set_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_set_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_set_epi64x"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_set_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_set_m128"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_set_m128d"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_set_m128i"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_set_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_set_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_setr_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_setr_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_setr_epi64x"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_setr_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_setr_m128"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_setr_m128d"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_setr_m128i"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_setr_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_setr_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_setzero_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_setzero_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_setzero_si256"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_sqrt_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_sqrt_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_sub_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_sub_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_testc_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_testc_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_testc_si256"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_testnzc_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_testnzc_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_testnzc_si256"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_testz_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_testz_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_testz_si256"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_undefined_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_undefined_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_undefined_si256"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_unpackhi_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_unpackhi_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_unpacklo_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_unpacklo_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_xor_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_xor_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_zeroall"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_zeroupper"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_zextpd128_pd256"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_zextps128_ps256"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_zextsi128_si256"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm_broadcast_ss"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm_permutevar_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm_permutevar_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm_testc_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm_testc_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm_testnzc_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm_testnzc_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm_testz_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm_testz_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_abs_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_abs_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_abs_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_add_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_add_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_add_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_add_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_adds_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_adds_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_adds_epu16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_adds_epu8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_alignr_epi8::mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_and_si256"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_andnot_si256"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_avg_epu16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_avg_epu8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_blendv_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_broadcastb_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_broadcastd_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_broadcastq_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_broadcastsd_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_broadcastsi128_si256"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_broadcastss_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_broadcastw_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_bslli_epi128::mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_bsrli_epi128::mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_cmpeq_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_cmpeq_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_cmpeq_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_cmpeq_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_cmpgt_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_cmpgt_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_cmpgt_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_cmpgt_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_cvtepi16_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_cvtepi16_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_cvtepi32_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_cvtepi8_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_cvtepi8_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_cvtepi8_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_cvtepu16_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_cvtepu16_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_cvtepu32_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_cvtepu8_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_cvtepu8_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_cvtepu8_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_hadd_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_hadd_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_hadds_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_hsub_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_hsub_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_hsubs_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_madd_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_maddubs_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_max_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_max_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_max_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_max_epu16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_max_epu32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_max_epu8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_min_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_min_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_min_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_min_epu16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_min_epu32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_min_epu8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_movemask_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_mul_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_mul_epu32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_mulhi_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_mulhi_epu16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_mulhrs_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_mullo_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_mullo_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_or_si256"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_packs_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_packs_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_packus_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_packus_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_permutevar8x32_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_permutevar8x32_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_sad_epu8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_shuffle_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_sign_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_sign_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_sign_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_sll_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_sll_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_sll_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_sllv_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_sllv_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_sra_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_sra_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_srav_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_srl_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_srl_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_srl_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_srlv_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_srlv_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_sub_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_sub_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_sub_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_sub_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_subs_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_subs_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_subs_epu16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_subs_epu8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_unpackhi_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_unpackhi_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_unpackhi_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_unpackhi_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_unpacklo_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_unpacklo_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_unpacklo_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_unpacklo_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_xor_si256"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm_broadcastb_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm_broadcastd_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm_broadcastq_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm_broadcastsd_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm_broadcastsi128_si256"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm_broadcastss_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm_broadcastw_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm_sllv_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm_sllv_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm_srav_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm_srlv_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm_srlv_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bf16.rs",
    "func": "core_arch::x86::avx512bf16::_mm256_cvtne2ps_pbh"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bf16.rs",
    "func": "core_arch::x86::avx512bf16::_mm256_cvtneps_pbh"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bf16.rs",
    "func": "core_arch::x86::avx512bf16::_mm256_cvtpbh_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bf16.rs",
    "func": "core_arch::x86::avx512bf16::_mm256_dpbf16_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bf16.rs",
    "func": "core_arch::x86::avx512bf16::_mm256_mask_cvtne2ps_pbh"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bf16.rs",
    "func": "core_arch::x86::avx512bf16::_mm256_mask_cvtneps_pbh"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bf16.rs",
    "func": "core_arch::x86::avx512bf16::_mm256_mask_cvtpbh_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bf16.rs",
    "func": "core_arch::x86::avx512bf16::_mm256_mask_dpbf16_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bf16.rs",
    "func": "core_arch::x86::avx512bf16::_mm256_maskz_cvtne2ps_pbh"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bf16.rs",
    "func": "core_arch::x86::avx512bf16::_mm256_maskz_cvtneps_pbh"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bf16.rs",
    "func": "core_arch::x86::avx512bf16::_mm256_maskz_cvtpbh_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bf16.rs",
    "func": "core_arch::x86::avx512bf16::_mm256_maskz_dpbf16_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bf16.rs",
    "func": "core_arch::x86::avx512bf16::_mm512_cvtne2ps_pbh"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bf16.rs",
    "func": "core_arch::x86::avx512bf16::_mm512_cvtneps_pbh"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bf16.rs",
    "func": "core_arch::x86::avx512bf16::_mm512_cvtpbh_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bf16.rs",
    "func": "core_arch::x86::avx512bf16::_mm512_dpbf16_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bf16.rs",
    "func": "core_arch::x86::avx512bf16::_mm512_mask_cvtne2ps_pbh"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bf16.rs",
    "func": "core_arch::x86::avx512bf16::_mm512_mask_cvtneps_pbh"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bf16.rs",
    "func": "core_arch::x86::avx512bf16::_mm512_mask_cvtpbh_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bf16.rs",
    "func": "core_arch::x86::avx512bf16::_mm512_mask_dpbf16_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bf16.rs",
    "func": "core_arch::x86::avx512bf16::_mm512_maskz_cvtne2ps_pbh"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bf16.rs",
    "func": "core_arch::x86::avx512bf16::_mm512_maskz_cvtneps_pbh"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bf16.rs",
    "func": "core_arch::x86::avx512bf16::_mm512_maskz_cvtpbh_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bf16.rs",
    "func": "core_arch::x86::avx512bf16::_mm512_maskz_dpbf16_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bf16.rs",
    "func": "core_arch::x86::avx512bf16::_mm_cvtne2ps_pbh"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bf16.rs",
    "func": "core_arch::x86::avx512bf16::_mm_cvtneps_pbh"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bf16.rs",
    "func": "core_arch::x86::avx512bf16::_mm_cvtness_sbh"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bf16.rs",
    "func": "core_arch::x86::avx512bf16::_mm_cvtpbh_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bf16.rs",
    "func": "core_arch::x86::avx512bf16::_mm_cvtsbh_ss"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bf16.rs",
    "func": "core_arch::x86::avx512bf16::_mm_dpbf16_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bf16.rs",
    "func": "core_arch::x86::avx512bf16::_mm_mask_cvtne2ps_pbh"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bf16.rs",
    "func": "core_arch::x86::avx512bf16::_mm_mask_cvtneps_pbh"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bf16.rs",
    "func": "core_arch::x86::avx512bf16::_mm_mask_cvtpbh_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bf16.rs",
    "func": "core_arch::x86::avx512bf16::_mm_mask_dpbf16_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bf16.rs",
    "func": "core_arch::x86::avx512bf16::_mm_maskz_cvtne2ps_pbh"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bf16.rs",
    "func": "core_arch::x86::avx512bf16::_mm_maskz_cvtneps_pbh"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bf16.rs",
    "func": "core_arch::x86::avx512bf16::_mm_maskz_cvtpbh_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bf16.rs",
    "func": "core_arch::x86::avx512bf16::_mm_maskz_dpbf16_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bitalg.rs",
    "func": "core_arch::x86::avx512bitalg::_mm256_bitshuffle_epi64_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bitalg.rs",
    "func": "core_arch::x86::avx512bitalg::_mm256_mask_bitshuffle_epi64_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bitalg.rs",
    "func": "core_arch::x86::avx512bitalg::_mm256_mask_popcnt_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bitalg.rs",
    "func": "core_arch::x86::avx512bitalg::_mm256_mask_popcnt_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bitalg.rs",
    "func": "core_arch::x86::avx512bitalg::_mm256_maskz_popcnt_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bitalg.rs",
    "func": "core_arch::x86::avx512bitalg::_mm256_maskz_popcnt_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bitalg.rs",
    "func": "core_arch::x86::avx512bitalg::_mm256_popcnt_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bitalg.rs",
    "func": "core_arch::x86::avx512bitalg::_mm256_popcnt_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bitalg.rs",
    "func": "core_arch::x86::avx512bitalg::_mm512_bitshuffle_epi64_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bitalg.rs",
    "func": "core_arch::x86::avx512bitalg::_mm512_mask_bitshuffle_epi64_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bitalg.rs",
    "func": "core_arch::x86::avx512bitalg::_mm512_mask_popcnt_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bitalg.rs",
    "func": "core_arch::x86::avx512bitalg::_mm512_mask_popcnt_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bitalg.rs",
    "func": "core_arch::x86::avx512bitalg::_mm512_maskz_popcnt_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bitalg.rs",
    "func": "core_arch::x86::avx512bitalg::_mm512_maskz_popcnt_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bitalg.rs",
    "func": "core_arch::x86::avx512bitalg::_mm512_popcnt_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bitalg.rs",
    "func": "core_arch::x86::avx512bitalg::_mm512_popcnt_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bitalg.rs",
    "func": "core_arch::x86::avx512bitalg::_mm_bitshuffle_epi64_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bitalg.rs",
    "func": "core_arch::x86::avx512bitalg::_mm_mask_bitshuffle_epi64_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bitalg.rs",
    "func": "core_arch::x86::avx512bitalg::_mm_mask_popcnt_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bitalg.rs",
    "func": "core_arch::x86::avx512bitalg::_mm_mask_popcnt_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bitalg.rs",
    "func": "core_arch::x86::avx512bitalg::_mm_maskz_popcnt_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bitalg.rs",
    "func": "core_arch::x86::avx512bitalg::_mm_maskz_popcnt_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bitalg.rs",
    "func": "core_arch::x86::avx512bitalg::_mm_popcnt_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bitalg.rs",
    "func": "core_arch::x86::avx512bitalg::_mm_popcnt_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_cvtmask32_u32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_cvtu32_mask32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_kadd_mask32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_kadd_mask64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_kand_mask32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_kand_mask64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_kandn_mask32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_kandn_mask64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_knot_mask32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_knot_mask64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_kor_mask32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_kor_mask64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_kortestc_mask32_u8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_kortestc_mask64_u8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_kortestz_mask32_u8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_kortestz_mask64_u8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_ktestc_mask32_u8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_ktestc_mask64_u8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_ktestz_mask32_u8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_ktestz_mask64_u8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_kxnor_mask32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_kxnor_mask64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_kxor_mask32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_kxor_mask64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_cmpeq_epi16_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_cmpeq_epi8_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_cmpeq_epu16_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_cmpeq_epu8_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_cmpge_epi16_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_cmpge_epi8_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_cmpge_epu16_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_cmpge_epu8_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_cmpgt_epi16_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_cmpgt_epi8_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_cmpgt_epu16_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_cmpgt_epu8_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_cmple_epi16_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_cmple_epi8_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_cmple_epu16_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_cmple_epu8_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_cmplt_epi16_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_cmplt_epi8_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_cmplt_epu16_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_cmplt_epu8_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_cmpneq_epi16_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_cmpneq_epi8_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_cmpneq_epu16_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_cmpneq_epu8_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_cvtepi16_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_cvtsepi16_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_cvtusepi16_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask2_permutex2var_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_abs_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_abs_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_add_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_add_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_adds_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_adds_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_adds_epu16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_adds_epu8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_avg_epu16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_avg_epu8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_blend_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_blend_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_broadcastb_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_broadcastw_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_cmpeq_epi16_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_cmpeq_epi8_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_cmpeq_epu16_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_cmpeq_epu8_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_cmpge_epi16_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_cmpge_epi8_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_cmpge_epu16_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_cmpge_epu8_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_cmpgt_epi16_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_cmpgt_epi8_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_cmpgt_epu16_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_cmpgt_epu8_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_cmple_epi16_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_cmple_epi8_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_cmple_epu16_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_cmple_epu8_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_cmplt_epi16_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_cmplt_epi8_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_cmplt_epu16_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_cmplt_epu8_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_cmpneq_epi16_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_cmpneq_epi8_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_cmpneq_epu16_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_cmpneq_epu8_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_cvtepi16_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_cvtepi8_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_cvtepu8_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_cvtsepi16_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_cvtusepi16_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_madd_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_maddubs_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_max_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_max_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_max_epu16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_max_epu8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_min_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_min_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_min_epu16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_min_epu8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_mov_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_mov_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_mulhi_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_mulhi_epu16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_mulhrs_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_mullo_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_packs_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_packs_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_packus_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_packus_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_permutex2var_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_permutexvar_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_reduce_add_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_reduce_add_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_reduce_and_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_reduce_and_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_reduce_max_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_reduce_max_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_reduce_max_epu16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_reduce_max_epu8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_reduce_min_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_reduce_min_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_reduce_min_epu16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_reduce_min_epu8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_reduce_mul_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_reduce_mul_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_reduce_or_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_reduce_or_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_set1_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_set1_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_shuffle_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_sll_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_sllv_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_sra_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_srav_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_srl_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_srlv_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_sub_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_sub_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_subs_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_subs_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_subs_epu16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_subs_epu8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_test_epi16_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_test_epi8_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_testn_epi16_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_testn_epi8_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_unpackhi_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_unpackhi_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_unpacklo_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_unpacklo_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_maskz_abs_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_maskz_abs_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_maskz_add_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_maskz_add_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_maskz_adds_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_maskz_adds_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_maskz_adds_epu16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_maskz_adds_epu8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_maskz_avg_epu16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_maskz_avg_epu8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_maskz_broadcastb_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_maskz_broadcastw_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_maskz_cvtepi16_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_maskz_cvtepi8_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_maskz_cvtepu8_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_maskz_cvtsepi16_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_maskz_cvtusepi16_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_maskz_madd_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_maskz_maddubs_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_maskz_max_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_maskz_max_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_maskz_max_epu16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_maskz_max_epu8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_maskz_min_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_maskz_min_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_maskz_min_epu16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_maskz_min_epu8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_maskz_mov_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_maskz_mov_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_maskz_mulhi_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_maskz_mulhi_epu16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_maskz_mulhrs_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_maskz_mullo_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_maskz_packs_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_maskz_packs_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_maskz_packus_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_maskz_packus_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_maskz_permutex2var_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_maskz_permutexvar_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_maskz_set1_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_maskz_set1_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_maskz_shuffle_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_maskz_sll_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_maskz_sllv_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_maskz_sra_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_maskz_srav_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_maskz_srl_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_maskz_srlv_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_maskz_sub_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_maskz_sub_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_maskz_subs_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_maskz_subs_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_maskz_subs_epu16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_maskz_subs_epu8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_maskz_unpackhi_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_maskz_unpackhi_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_maskz_unpacklo_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_maskz_unpacklo_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_movepi16_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_movepi8_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_movm_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_movm_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_permutex2var_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_permutexvar_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_reduce_add_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_reduce_add_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_reduce_and_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_reduce_and_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_reduce_max_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_reduce_max_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_reduce_max_epu16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_reduce_max_epu8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_reduce_min_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_reduce_min_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_reduce_min_epu16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_reduce_min_epu8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_reduce_mul_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_reduce_mul_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_reduce_or_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_reduce_or_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_sllv_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_srav_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_srlv_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_test_epi16_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_test_epi8_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_testn_epi16_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_testn_epi8_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_abs_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_abs_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_add_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_add_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_adds_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_adds_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_adds_epu16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_adds_epu8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_alignr_epi8::mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_avg_epu16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_avg_epu8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_broadcastb_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_broadcastw_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_bslli_epi128::mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_bsrli_epi128::mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_cmpeq_epi16_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_cmpeq_epi8_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_cmpeq_epu16_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_cmpeq_epu8_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_cmpge_epi16_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_cmpge_epi8_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_cmpge_epu16_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_cmpge_epu8_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_cmpgt_epi16_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_cmpgt_epi8_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_cmpgt_epu16_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_cmpgt_epu8_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_cmple_epi16_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_cmple_epi8_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_cmple_epu16_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_cmple_epu8_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_cmplt_epi16_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_cmplt_epi8_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_cmplt_epu16_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_cmplt_epu8_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_cmpneq_epi16_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_cmpneq_epi8_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_cmpneq_epu16_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_cmpneq_epu8_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_cvtepi16_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_cvtepi8_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_cvtepu8_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_cvtsepi16_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_cvtusepi16_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_kunpackd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_kunpackw"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_madd_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_maddubs_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mask2_permutex2var_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mask_abs_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mask_abs_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mask_add_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mask_add_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mask_adds_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mask_adds_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mask_adds_epu16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mask_adds_epu8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mask_avg_epu16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mask_avg_epu8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mask_blend_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mask_blend_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mask_broadcastb_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mask_broadcastw_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mask_cmpeq_epi16_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mask_cmpeq_epi8_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mask_cmpeq_epu16_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mask_cmpeq_epu8_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mask_cmpge_epi16_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mask_cmpge_epi8_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mask_cmpge_epu16_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mask_cmpge_epu8_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mask_cmpgt_epi16_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mask_cmpgt_epi8_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mask_cmpgt_epu16_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mask_cmpgt_epu8_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mask_cmple_epi16_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mask_cmple_epi8_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mask_cmple_epu16_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mask_cmple_epu8_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mask_cmplt_epi16_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mask_cmplt_epi8_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mask_cmplt_epu16_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mask_cmplt_epu8_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mask_cmpneq_epi16_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mask_cmpneq_epi8_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mask_cmpneq_epu16_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mask_cmpneq_epu8_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mask_cvtepi16_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mask_cvtepi8_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mask_cvtepu8_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mask_cvtsepi16_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mask_cvtusepi16_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mask_madd_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mask_maddubs_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mask_max_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mask_max_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mask_max_epu16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mask_max_epu8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mask_min_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mask_min_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mask_min_epu16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mask_min_epu8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mask_mov_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mask_mov_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mask_mulhi_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mask_mulhi_epu16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mask_mulhrs_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mask_mullo_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mask_packs_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mask_packs_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mask_packus_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mask_packus_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mask_permutex2var_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mask_permutexvar_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mask_set1_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mask_set1_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mask_shuffle_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mask_sll_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mask_sllv_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mask_sra_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mask_srav_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mask_srl_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mask_srlv_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mask_sub_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mask_sub_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mask_subs_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mask_subs_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mask_subs_epu16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mask_subs_epu8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mask_test_epi16_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mask_test_epi8_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mask_testn_epi16_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mask_testn_epi8_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mask_unpackhi_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mask_unpackhi_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mask_unpacklo_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mask_unpacklo_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_maskz_abs_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_maskz_abs_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_maskz_add_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_maskz_add_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_maskz_adds_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_maskz_adds_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_maskz_adds_epu16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_maskz_adds_epu8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_maskz_avg_epu16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_maskz_avg_epu8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_maskz_broadcastb_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_maskz_broadcastw_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_maskz_cvtepi16_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_maskz_cvtepi8_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_maskz_cvtepu8_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_maskz_cvtsepi16_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_maskz_cvtusepi16_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_maskz_madd_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_maskz_maddubs_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_maskz_max_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_maskz_max_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_maskz_max_epu16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_maskz_max_epu8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_maskz_min_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_maskz_min_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_maskz_min_epu16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_maskz_min_epu8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_maskz_mov_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_maskz_mov_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_maskz_mulhi_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_maskz_mulhi_epu16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_maskz_mulhrs_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_maskz_mullo_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_maskz_packs_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_maskz_packs_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_maskz_packus_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_maskz_packus_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_maskz_permutex2var_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_maskz_permutexvar_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_maskz_set1_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_maskz_set1_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_maskz_shuffle_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_maskz_sll_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_maskz_sllv_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_maskz_sra_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_maskz_srav_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_maskz_srl_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_maskz_srlv_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_maskz_sub_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_maskz_sub_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_maskz_subs_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_maskz_subs_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_maskz_subs_epu16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_maskz_subs_epu8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_maskz_unpackhi_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_maskz_unpackhi_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_maskz_unpacklo_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_maskz_unpacklo_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_max_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_max_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_max_epu16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_max_epu8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_min_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_min_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_min_epu16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_min_epu8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_movepi16_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_movepi8_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_movm_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_movm_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mulhi_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mulhi_epu16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mulhrs_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mullo_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_packs_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_packs_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_packus_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_packus_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_permutex2var_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_permutexvar_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_sad_epu8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_shuffle_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_sll_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_sllv_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_sra_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_srav_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_srl_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_srlv_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_sub_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_sub_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_subs_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_subs_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_subs_epu16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_subs_epu8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_test_epi16_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_test_epi8_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_testn_epi16_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_testn_epi8_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_unpackhi_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_unpackhi_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_unpacklo_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_unpacklo_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_cmpeq_epi16_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_cmpeq_epi8_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_cmpeq_epu16_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_cmpeq_epu8_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_cmpge_epi16_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_cmpge_epi8_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_cmpge_epu16_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_cmpge_epu8_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_cmpgt_epi16_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_cmpgt_epi8_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_cmpgt_epu16_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_cmpgt_epu8_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_cmple_epi16_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_cmple_epi8_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_cmple_epu16_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_cmple_epu8_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_cmplt_epi16_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_cmplt_epi8_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_cmplt_epu16_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_cmplt_epu8_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_cmpneq_epi16_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_cmpneq_epi8_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_cmpneq_epu16_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_cmpneq_epu8_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_cvtepi16_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_cvtsepi16_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_cvtusepi16_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask2_permutex2var_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_abs_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_abs_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_add_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_add_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_adds_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_adds_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_adds_epu16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_adds_epu8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_avg_epu16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_avg_epu8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_blend_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_blend_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_broadcastb_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_broadcastw_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_cmpeq_epi16_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_cmpeq_epi8_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_cmpeq_epu16_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_cmpeq_epu8_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_cmpge_epi16_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_cmpge_epi8_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_cmpge_epu16_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_cmpge_epu8_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_cmpgt_epi16_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_cmpgt_epi8_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_cmpgt_epu16_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_cmpgt_epu8_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_cmple_epi16_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_cmple_epi8_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_cmple_epu16_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_cmple_epu8_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_cmplt_epi16_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_cmplt_epi8_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_cmplt_epu16_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_cmplt_epu8_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_cmpneq_epi16_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_cmpneq_epi8_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_cmpneq_epu16_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_cmpneq_epu8_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_cvtepi16_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_cvtepi8_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_cvtepu8_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_cvtsepi16_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_cvtusepi16_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_madd_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_maddubs_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_max_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_max_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_max_epu16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_max_epu8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_min_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_min_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_min_epu16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_min_epu8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_mov_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_mov_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_mulhi_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_mulhi_epu16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_mulhrs_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_mullo_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_packs_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_packs_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_packus_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_packus_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_permutex2var_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_permutexvar_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_reduce_add_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_reduce_add_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_reduce_and_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_reduce_and_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_reduce_max_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_reduce_max_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_reduce_max_epu16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_reduce_max_epu8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_reduce_min_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_reduce_min_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_reduce_min_epu16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_reduce_min_epu8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_reduce_mul_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_reduce_mul_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_reduce_or_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_reduce_or_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_set1_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_set1_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_shuffle_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_sll_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_sllv_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_sra_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_srav_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_srl_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_srlv_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_sub_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_sub_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_subs_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_subs_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_subs_epu16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_subs_epu8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_test_epi16_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_test_epi8_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_testn_epi16_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_testn_epi8_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_unpackhi_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_unpackhi_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_unpacklo_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_unpacklo_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_maskz_abs_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_maskz_abs_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_maskz_add_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_maskz_add_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_maskz_adds_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_maskz_adds_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_maskz_adds_epu16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_maskz_adds_epu8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_maskz_avg_epu16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_maskz_avg_epu8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_maskz_broadcastb_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_maskz_broadcastw_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_maskz_cvtepi16_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_maskz_cvtepi8_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_maskz_cvtepu8_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_maskz_cvtsepi16_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_maskz_cvtusepi16_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_maskz_madd_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_maskz_maddubs_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_maskz_max_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_maskz_max_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_maskz_max_epu16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_maskz_max_epu8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_maskz_min_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_maskz_min_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_maskz_min_epu16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_maskz_min_epu8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_maskz_mov_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_maskz_mov_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_maskz_mulhi_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_maskz_mulhi_epu16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_maskz_mulhrs_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_maskz_mullo_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_maskz_packs_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_maskz_packs_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_maskz_packus_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_maskz_packus_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_maskz_permutex2var_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_maskz_permutexvar_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_maskz_set1_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_maskz_set1_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_maskz_shuffle_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_maskz_sll_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_maskz_sllv_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_maskz_sra_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_maskz_srav_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_maskz_srl_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_maskz_srlv_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_maskz_sub_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_maskz_sub_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_maskz_subs_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_maskz_subs_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_maskz_subs_epu16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_maskz_subs_epu8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_maskz_unpackhi_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_maskz_unpackhi_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_maskz_unpacklo_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_maskz_unpacklo_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_movepi16_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_movepi8_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_movm_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_movm_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_permutex2var_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_permutexvar_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_reduce_add_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_reduce_add_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_reduce_and_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_reduce_and_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_reduce_max_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_reduce_max_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_reduce_max_epu16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_reduce_max_epu8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_reduce_min_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_reduce_min_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_reduce_min_epu16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_reduce_min_epu8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_reduce_mul_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_reduce_mul_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_reduce_or_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_reduce_or_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_sllv_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_srav_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_srlv_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_test_epi16_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_test_epi8_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_testn_epi16_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_testn_epi8_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512cd.rs",
    "func": "core_arch::x86::avx512cd::_mm256_broadcastmb_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512cd.rs",
    "func": "core_arch::x86::avx512cd::_mm256_broadcastmw_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512cd.rs",
    "func": "core_arch::x86::avx512cd::_mm256_conflict_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512cd.rs",
    "func": "core_arch::x86::avx512cd::_mm256_conflict_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512cd.rs",
    "func": "core_arch::x86::avx512cd::_mm256_lzcnt_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512cd.rs",
    "func": "core_arch::x86::avx512cd::_mm256_lzcnt_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512cd.rs",
    "func": "core_arch::x86::avx512cd::_mm256_mask_conflict_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512cd.rs",
    "func": "core_arch::x86::avx512cd::_mm256_mask_conflict_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512cd.rs",
    "func": "core_arch::x86::avx512cd::_mm256_mask_lzcnt_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512cd.rs",
    "func": "core_arch::x86::avx512cd::_mm256_mask_lzcnt_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512cd.rs",
    "func": "core_arch::x86::avx512cd::_mm256_maskz_conflict_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512cd.rs",
    "func": "core_arch::x86::avx512cd::_mm256_maskz_conflict_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512cd.rs",
    "func": "core_arch::x86::avx512cd::_mm256_maskz_lzcnt_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512cd.rs",
    "func": "core_arch::x86::avx512cd::_mm256_maskz_lzcnt_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512cd.rs",
    "func": "core_arch::x86::avx512cd::_mm512_broadcastmb_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512cd.rs",
    "func": "core_arch::x86::avx512cd::_mm512_broadcastmw_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512cd.rs",
    "func": "core_arch::x86::avx512cd::_mm512_conflict_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512cd.rs",
    "func": "core_arch::x86::avx512cd::_mm512_conflict_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512cd.rs",
    "func": "core_arch::x86::avx512cd::_mm512_lzcnt_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512cd.rs",
    "func": "core_arch::x86::avx512cd::_mm512_lzcnt_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512cd.rs",
    "func": "core_arch::x86::avx512cd::_mm512_mask_conflict_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512cd.rs",
    "func": "core_arch::x86::avx512cd::_mm512_mask_conflict_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512cd.rs",
    "func": "core_arch::x86::avx512cd::_mm512_mask_lzcnt_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512cd.rs",
    "func": "core_arch::x86::avx512cd::_mm512_mask_lzcnt_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512cd.rs",
    "func": "core_arch::x86::avx512cd::_mm512_maskz_conflict_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512cd.rs",
    "func": "core_arch::x86::avx512cd::_mm512_maskz_conflict_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512cd.rs",
    "func": "core_arch::x86::avx512cd::_mm512_maskz_lzcnt_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512cd.rs",
    "func": "core_arch::x86::avx512cd::_mm512_maskz_lzcnt_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512cd.rs",
    "func": "core_arch::x86::avx512cd::_mm_broadcastmb_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512cd.rs",
    "func": "core_arch::x86::avx512cd::_mm_broadcastmw_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512cd.rs",
    "func": "core_arch::x86::avx512cd::_mm_conflict_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512cd.rs",
    "func": "core_arch::x86::avx512cd::_mm_conflict_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512cd.rs",
    "func": "core_arch::x86::avx512cd::_mm_lzcnt_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512cd.rs",
    "func": "core_arch::x86::avx512cd::_mm_lzcnt_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512cd.rs",
    "func": "core_arch::x86::avx512cd::_mm_mask_conflict_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512cd.rs",
    "func": "core_arch::x86::avx512cd::_mm_mask_conflict_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512cd.rs",
    "func": "core_arch::x86::avx512cd::_mm_mask_lzcnt_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512cd.rs",
    "func": "core_arch::x86::avx512cd::_mm_mask_lzcnt_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512cd.rs",
    "func": "core_arch::x86::avx512cd::_mm_maskz_conflict_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512cd.rs",
    "func": "core_arch::x86::avx512cd::_mm_maskz_conflict_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512cd.rs",
    "func": "core_arch::x86::avx512cd::_mm_maskz_lzcnt_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512cd.rs",
    "func": "core_arch::x86::avx512cd::_mm_maskz_lzcnt_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_cvtmask8_u32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_cvtu32_mask8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_kadd_mask16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_kadd_mask8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_kand_mask8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_kandn_mask8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_knot_mask8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_kor_mask8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_kortestc_mask8_u8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_kortestz_mask8_u8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_ktestc_mask16_u8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_ktestc_mask8_u8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_ktestz_mask16_u8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_ktestz_mask8_u8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_kxnor_mask8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_kxor_mask8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm256_broadcast_f32x2"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm256_broadcast_f64x2"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm256_broadcast_i32x2"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm256_broadcast_i64x2"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm256_cvtepi64_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm256_cvtepi64_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm256_cvtepu64_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm256_cvtepu64_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm256_cvtpd_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm256_cvtpd_epu64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm256_cvtps_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm256_cvtps_epu64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm256_cvttpd_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm256_cvttpd_epu64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm256_cvttps_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm256_cvttps_epu64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm256_mask_and_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm256_mask_and_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm256_mask_andnot_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm256_mask_andnot_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm256_mask_broadcast_f32x2"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm256_mask_broadcast_f64x2"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm256_mask_broadcast_i32x2"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm256_mask_broadcast_i64x2"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm256_mask_cvtepi64_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm256_mask_cvtepi64_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm256_mask_cvtepu64_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm256_mask_cvtepu64_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm256_mask_cvtpd_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm256_mask_cvtpd_epu64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm256_mask_cvtps_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm256_mask_cvtps_epu64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm256_mask_cvttpd_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm256_mask_cvttpd_epu64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm256_mask_cvttps_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm256_mask_cvttps_epu64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm256_mask_mullo_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm256_mask_or_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm256_mask_or_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm256_mask_xor_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm256_mask_xor_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm256_maskz_and_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm256_maskz_and_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm256_maskz_andnot_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm256_maskz_andnot_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm256_maskz_broadcast_f32x2"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm256_maskz_broadcast_f64x2"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm256_maskz_broadcast_i32x2"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm256_maskz_broadcast_i64x2"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm256_maskz_cvtepi64_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm256_maskz_cvtepi64_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm256_maskz_cvtepu64_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm256_maskz_cvtepu64_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm256_maskz_cvtpd_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm256_maskz_cvtpd_epu64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm256_maskz_cvtps_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm256_maskz_cvtps_epu64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm256_maskz_cvttpd_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm256_maskz_cvttpd_epu64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm256_maskz_cvttps_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm256_maskz_cvttps_epu64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm256_maskz_mullo_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm256_maskz_or_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm256_maskz_or_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm256_maskz_xor_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm256_maskz_xor_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm256_movepi32_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm256_movepi64_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm256_movm_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm256_movm_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm256_mullo_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm512_and_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm512_and_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm512_andnot_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm512_andnot_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm512_broadcast_f32x2"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm512_broadcast_f32x8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm512_broadcast_f64x2"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm512_broadcast_i32x2"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm512_broadcast_i32x8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm512_broadcast_i64x2"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm512_cvtepi64_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm512_cvtepi64_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm512_cvtepu64_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm512_cvtepu64_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm512_cvtpd_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm512_cvtpd_epu64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm512_cvtps_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm512_cvtps_epu64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm512_cvttpd_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm512_cvttpd_epu64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm512_cvttps_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm512_cvttps_epu64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm512_mask_and_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm512_mask_and_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm512_mask_andnot_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm512_mask_andnot_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm512_mask_broadcast_f32x2"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm512_mask_broadcast_f32x8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm512_mask_broadcast_f64x2"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm512_mask_broadcast_i32x2"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm512_mask_broadcast_i32x8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm512_mask_broadcast_i64x2"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm512_mask_cvtepi64_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm512_mask_cvtepi64_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm512_mask_cvtepu64_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm512_mask_cvtepu64_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm512_mask_cvtpd_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm512_mask_cvtpd_epu64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm512_mask_cvtps_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm512_mask_cvtps_epu64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm512_mask_cvttpd_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm512_mask_cvttpd_epu64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm512_mask_cvttps_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm512_mask_cvttps_epu64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm512_mask_mullo_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm512_mask_or_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm512_mask_or_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm512_mask_xor_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm512_mask_xor_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm512_maskz_and_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm512_maskz_and_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm512_maskz_andnot_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm512_maskz_andnot_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm512_maskz_broadcast_f32x2"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm512_maskz_broadcast_f32x8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm512_maskz_broadcast_f64x2"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm512_maskz_broadcast_i32x2"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm512_maskz_broadcast_i32x8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm512_maskz_broadcast_i64x2"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm512_maskz_cvtepi64_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm512_maskz_cvtepi64_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm512_maskz_cvtepu64_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm512_maskz_cvtepu64_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm512_maskz_cvtpd_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm512_maskz_cvtpd_epu64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm512_maskz_cvtps_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm512_maskz_cvtps_epu64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm512_maskz_cvttpd_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm512_maskz_cvttpd_epu64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm512_maskz_cvttps_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm512_maskz_cvttps_epu64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm512_maskz_mullo_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm512_maskz_or_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm512_maskz_or_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm512_maskz_xor_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm512_maskz_xor_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm512_movepi32_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm512_movepi64_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm512_movm_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm512_movm_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm512_mullo_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm512_or_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm512_or_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm512_xor_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm512_xor_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm_broadcast_i32x2"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm_cvtepi64_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm_cvtepi64_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm_cvtepu64_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm_cvtepu64_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm_cvtpd_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm_cvtpd_epu64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm_cvtps_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm_cvtps_epu64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm_cvttpd_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm_cvttpd_epu64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm_cvttps_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm_cvttps_epu64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm_mask_and_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm_mask_and_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm_mask_andnot_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm_mask_andnot_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm_mask_broadcast_i32x2"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm_mask_cvtepi64_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm_mask_cvtepi64_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm_mask_cvtepu64_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm_mask_cvtepu64_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm_mask_cvtpd_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm_mask_cvtpd_epu64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm_mask_cvtps_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm_mask_cvtps_epu64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm_mask_cvttpd_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm_mask_cvttpd_epu64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm_mask_cvttps_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm_mask_cvttps_epu64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm_mask_mullo_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm_mask_or_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm_mask_or_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm_mask_xor_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm_mask_xor_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm_maskz_and_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm_maskz_and_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm_maskz_andnot_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm_maskz_andnot_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm_maskz_broadcast_i32x2"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm_maskz_cvtepi64_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm_maskz_cvtepi64_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm_maskz_cvtepu64_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm_maskz_cvtepu64_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm_maskz_cvtpd_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm_maskz_cvtpd_epu64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm_maskz_cvtps_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm_maskz_cvtps_epu64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm_maskz_cvttpd_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm_maskz_cvttpd_epu64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm_maskz_cvttps_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm_maskz_cvttps_epu64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm_maskz_mullo_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm_maskz_or_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm_maskz_or_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm_maskz_xor_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm_maskz_xor_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm_movepi32_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm_movepi64_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm_movm_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm_movm_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm_mullo_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_cvtmask16_u32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_cvtu32_mask16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_kand_mask16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_kandn_mask16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_knot_mask16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_kor_mask16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_kortestc_mask16_u8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_kortestz_mask16_u8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_kxnor_mask16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_kxor_mask16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_abs_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_broadcast_f32x4"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_broadcast_i32x4"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_cmpeq_epi32_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_cmpeq_epi64_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_cmpeq_epu32_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_cmpeq_epu64_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_cmpge_epi32_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_cmpge_epi64_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_cmpge_epu32_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_cmpge_epu64_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_cmpgt_epi32_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_cmpgt_epi64_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_cmpgt_epu32_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_cmpgt_epu64_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_cmple_epi32_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_cmple_epi64_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_cmple_epu32_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_cmple_epu64_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_cmplt_epi32_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_cmplt_epi64_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_cmplt_epu32_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_cmplt_epu64_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_cmpneq_epi32_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_cmpneq_epi64_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_cmpneq_epu32_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_cmpneq_epu64_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_cvtepi32_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_cvtepi32_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_cvtepi64_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_cvtepi64_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_cvtepi64_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_cvtepu32_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_cvtpd_epu32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_cvtps_epu32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_cvtsepi32_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_cvtsepi32_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_cvtsepi64_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_cvtsepi64_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_cvtsepi64_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_cvttpd_epu32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_cvttps_epu32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_cvtusepi32_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_cvtusepi32_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_cvtusepi64_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_cvtusepi64_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_cvtusepi64_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_getexp_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_getexp_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask2_permutex2var_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask2_permutex2var_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask2_permutex2var_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask2_permutex2var_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask3_fmadd_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask3_fmadd_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask3_fmaddsub_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask3_fmaddsub_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask3_fmsub_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask3_fmsub_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask3_fmsubadd_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask3_fmsubadd_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask3_fnmadd_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask3_fnmadd_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask3_fnmsub_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask3_fnmsub_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_abs_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_abs_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_add_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_add_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_add_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_add_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_and_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_and_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_andnot_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_andnot_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_blend_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_blend_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_blend_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_blend_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_broadcast_f32x4"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_broadcast_i32x4"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_broadcastd_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_broadcastq_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_broadcastsd_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_broadcastss_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_cmpeq_epi32_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_cmpeq_epi64_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_cmpeq_epu32_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_cmpeq_epu64_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_cmpge_epi32_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_cmpge_epi64_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_cmpge_epu32_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_cmpge_epu64_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_cmpgt_epi32_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_cmpgt_epi64_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_cmpgt_epu32_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_cmpgt_epu64_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_cmple_epi32_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_cmple_epi64_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_cmple_epu32_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_cmple_epu64_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_cmplt_epi32_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_cmplt_epi64_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_cmplt_epu32_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_cmplt_epu64_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_cmpneq_epi32_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_cmpneq_epi64_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_cmpneq_epu32_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_cmpneq_epu64_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_compress_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_compress_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_compress_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_compress_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_cvtepi16_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_cvtepi16_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_cvtepi32_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_cvtepi32_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_cvtepi32_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_cvtepi32_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_cvtepi32_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_cvtepi64_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_cvtepi64_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_cvtepi64_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_cvtepi8_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_cvtepi8_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_cvtepu16_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_cvtepu16_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_cvtepu32_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_cvtepu32_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_cvtepu8_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_cvtepu8_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_cvtpd_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_cvtpd_epu32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_cvtpd_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_cvtph_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_cvtps_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_cvtps_epu32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_cvtsepi32_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_cvtsepi32_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_cvtsepi64_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_cvtsepi64_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_cvtsepi64_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_cvttpd_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_cvttpd_epu32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_cvttps_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_cvttps_epu32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_cvtusepi32_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_cvtusepi32_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_cvtusepi64_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_cvtusepi64_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_cvtusepi64_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_div_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_div_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_expand_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_expand_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_expand_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_expand_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_fmadd_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_fmadd_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_fmaddsub_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_fmaddsub_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_fmsub_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_fmsub_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_fmsubadd_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_fmsubadd_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_fnmadd_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_fnmadd_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_fnmsub_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_fnmsub_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_getexp_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_getexp_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_max_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_max_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_max_epu32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_max_epu64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_max_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_max_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_min_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_min_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_min_epu32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_min_epu64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_min_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_min_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_mov_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_mov_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_mov_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_mov_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_movedup_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_movehdup_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_moveldup_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_mul_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_mul_epu32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_mul_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_mul_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_mullo_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_or_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_or_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_permutevar_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_permutevar_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_permutex2var_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_permutex2var_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_permutex2var_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_permutex2var_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_permutexvar_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_permutexvar_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_permutexvar_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_permutexvar_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_rcp14_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_rcp14_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_rolv_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_rolv_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_rorv_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_rorv_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_rsqrt14_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_rsqrt14_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_scalef_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_scalef_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_set1_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_set1_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_sll_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_sll_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_sllv_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_sllv_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_sqrt_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_sqrt_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_sra_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_sra_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_srav_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_srav_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_srl_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_srl_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_srlv_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_srlv_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_sub_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_sub_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_sub_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_sub_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_test_epi32_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_test_epi64_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_testn_epi32_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_testn_epi64_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_unpackhi_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_unpackhi_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_unpackhi_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_unpackhi_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_unpacklo_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_unpacklo_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_unpacklo_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_unpacklo_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_xor_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_xor_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_abs_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_abs_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_add_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_add_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_add_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_add_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_and_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_and_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_andnot_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_andnot_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_broadcast_f32x4"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_broadcast_i32x4"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_broadcastd_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_broadcastq_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_broadcastsd_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_broadcastss_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_compress_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_compress_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_compress_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_compress_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_cvtepi16_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_cvtepi16_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_cvtepi32_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_cvtepi32_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_cvtepi32_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_cvtepi32_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_cvtepi32_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_cvtepi64_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_cvtepi64_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_cvtepi64_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_cvtepi8_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_cvtepi8_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_cvtepu16_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_cvtepu16_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_cvtepu32_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_cvtepu32_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_cvtepu8_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_cvtepu8_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_cvtpd_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_cvtpd_epu32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_cvtpd_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_cvtph_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_cvtps_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_cvtps_epu32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_cvtsepi32_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_cvtsepi32_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_cvtsepi64_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_cvtsepi64_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_cvtsepi64_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_cvttpd_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_cvttpd_epu32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_cvttps_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_cvttps_epu32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_cvtusepi32_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_cvtusepi32_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_cvtusepi64_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_cvtusepi64_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_cvtusepi64_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_div_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_div_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_expand_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_expand_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_expand_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_expand_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_fmadd_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_fmadd_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_fmaddsub_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_fmaddsub_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_fmsub_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_fmsub_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_fmsubadd_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_fmsubadd_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_fnmadd_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_fnmadd_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_fnmsub_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_fnmsub_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_getexp_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_getexp_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_max_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_max_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_max_epu32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_max_epu64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_max_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_max_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_min_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_min_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_min_epu32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_min_epu64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_min_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_min_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_mov_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_mov_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_mov_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_mov_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_movedup_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_movehdup_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_moveldup_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_mul_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_mul_epu32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_mul_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_mul_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_mullo_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_or_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_or_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_permutevar_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_permutevar_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_permutex2var_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_permutex2var_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_permutex2var_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_permutex2var_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_permutexvar_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_permutexvar_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_permutexvar_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_permutexvar_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_rcp14_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_rcp14_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_rolv_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_rolv_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_rorv_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_rorv_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_rsqrt14_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_rsqrt14_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_scalef_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_scalef_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_set1_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_set1_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_sll_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_sll_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_sllv_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_sllv_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_sqrt_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_sqrt_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_sra_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_sra_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_srav_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_srav_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_srl_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_srl_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_srlv_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_srlv_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_sub_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_sub_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_sub_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_sub_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_unpackhi_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_unpackhi_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_unpackhi_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_unpackhi_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_unpacklo_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_unpacklo_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_unpacklo_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_unpacklo_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_xor_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_xor_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_max_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_max_epu64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_min_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_min_epu64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_or_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_or_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_permutex2var_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_permutex2var_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_permutex2var_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_permutex2var_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_permutexvar_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_permutexvar_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_permutexvar_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_permutexvar_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_rcp14_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_rcp14_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_rolv_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_rolv_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_rorv_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_rorv_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_rsqrt14_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_rsqrt14_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_scalef_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_scalef_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_sra_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_srav_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_test_epi32_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_test_epi64_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_testn_epi32_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_testn_epi64_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_xor_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_xor_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_abs_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_abs_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_abs_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_abs_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_add_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_add_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_add_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_add_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_and_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_and_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_and_si512"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_andnot_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_andnot_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_andnot_si512"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_broadcast_f32x4"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_broadcast_f64x4"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_broadcast_i32x4"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_broadcast_i64x4"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_broadcastd_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_broadcastq_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_broadcastsd_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_broadcastss_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_castpd128_pd512"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_castpd256_pd512"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_castpd512_pd128"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_castpd512_pd256"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_castpd_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_castpd_si512"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_castps128_ps512"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_castps256_ps512"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_castps512_ps128"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_castps512_ps256"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_castps_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_castps_si512"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_castsi128_si512"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_castsi256_si512"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_castsi512_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_castsi512_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_castsi512_si128"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_castsi512_si256"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_cmpeq_epi32_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_cmpeq_epi64_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_cmpeq_epu32_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_cmpeq_epu64_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_cmpeq_pd_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_cmpeq_ps_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_cmpge_epi32_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_cmpge_epi64_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_cmpge_epu32_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_cmpge_epu64_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_cmpgt_epi32_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_cmpgt_epi64_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_cmpgt_epu32_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_cmpgt_epu64_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_cmple_epi32_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_cmple_epi64_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_cmple_epu32_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_cmple_epu64_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_cmple_pd_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_cmple_ps_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_cmplt_epi32_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_cmplt_epi64_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_cmplt_epu32_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_cmplt_epu64_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_cmplt_pd_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_cmplt_ps_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_cmpneq_epi32_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_cmpneq_epi64_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_cmpneq_epu32_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_cmpneq_epu64_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_cmpneq_pd_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_cmpneq_ps_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_cmpnle_pd_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_cmpnle_ps_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_cmpnlt_pd_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_cmpnlt_ps_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_cmpord_pd_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_cmpord_ps_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_cmpunord_pd_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_cmpunord_ps_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_cvtepi16_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_cvtepi16_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_cvtepi32_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_cvtepi32_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_cvtepi32_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_cvtepi32_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_cvtepi32_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_cvtepi32lo_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_cvtepi64_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_cvtepi64_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_cvtepi64_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_cvtepi8_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_cvtepi8_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_cvtepu16_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_cvtepu16_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_cvtepu32_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_cvtepu32_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_cvtepu32_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_cvtepu32lo_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_cvtepu8_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_cvtepu8_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_cvtpd_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_cvtpd_epu32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_cvtpd_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_cvtpd_pslo"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_cvtph_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_cvtps_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_cvtps_epu32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_cvtps_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_cvtpslo_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_cvtsd_f64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_cvtsepi32_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_cvtsepi32_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_cvtsepi64_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_cvtsepi64_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_cvtsepi64_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_cvtsi512_si32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_cvtss_f32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_cvttpd_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_cvttpd_epu32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_cvttps_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_cvttps_epu32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_cvtusepi32_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_cvtusepi32_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_cvtusepi64_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_cvtusepi64_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_cvtusepi64_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_div_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_div_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_fmadd_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_fmadd_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_fmaddsub_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_fmaddsub_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_fmsub_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_fmsub_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_fmsubadd_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_fmsubadd_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_fnmadd_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_fnmadd_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_fnmsub_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_fnmsub_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_getexp_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_getexp_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_int2mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_kand"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_kandn"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_kmov"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_knot"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_kor"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_kortestc"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_kortestz"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_kunpackb"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_kxnor"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_kxor"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask2_permutex2var_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask2_permutex2var_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask2_permutex2var_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask2_permutex2var_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask2int"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask3_fmadd_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask3_fmadd_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask3_fmaddsub_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask3_fmaddsub_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask3_fmsub_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask3_fmsub_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask3_fmsubadd_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask3_fmsubadd_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask3_fnmadd_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask3_fnmadd_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask3_fnmsub_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask3_fnmsub_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_abs_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_abs_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_abs_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_abs_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_add_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_add_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_add_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_add_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_and_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_and_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_andnot_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_andnot_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_blend_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_blend_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_blend_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_blend_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_broadcast_f32x4"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_broadcast_f64x4"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_broadcast_i32x4"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_broadcast_i64x4"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_broadcastd_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_broadcastq_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_broadcastsd_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_broadcastss_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_cmpeq_epi32_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_cmpeq_epi64_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_cmpeq_epu32_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_cmpeq_epu64_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_cmpeq_pd_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_cmpeq_ps_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_cmpge_epi32_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_cmpge_epi64_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_cmpge_epu32_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_cmpge_epu64_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_cmpgt_epi32_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_cmpgt_epi64_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_cmpgt_epu32_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_cmpgt_epu64_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_cmple_epi32_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_cmple_epi64_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_cmple_epu32_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_cmple_epu64_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_cmple_pd_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_cmple_ps_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_cmplt_epi32_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_cmplt_epi64_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_cmplt_epu32_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_cmplt_epu64_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_cmplt_pd_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_cmplt_ps_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_cmpneq_epi32_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_cmpneq_epi64_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_cmpneq_epu32_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_cmpneq_epu64_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_cmpneq_pd_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_cmpneq_ps_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_cmpnle_pd_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_cmpnle_ps_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_cmpnlt_pd_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_cmpnlt_ps_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_cmpord_pd_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_cmpord_ps_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_cmpunord_pd_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_cmpunord_ps_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_compress_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_compress_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_compress_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_compress_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_cvtepi16_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_cvtepi16_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_cvtepi32_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_cvtepi32_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_cvtepi32_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_cvtepi32_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_cvtepi32_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_cvtepi32lo_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_cvtepi64_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_cvtepi64_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_cvtepi64_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_cvtepi8_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_cvtepi8_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_cvtepu16_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_cvtepu16_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_cvtepu32_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_cvtepu32_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_cvtepu32_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_cvtepu32lo_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_cvtepu8_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_cvtepu8_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_cvtpd_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_cvtpd_epu32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_cvtpd_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_cvtpd_pslo"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_cvtph_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_cvtps_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_cvtps_epu32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_cvtps_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_cvtpslo_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_cvtsepi32_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_cvtsepi32_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_cvtsepi64_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_cvtsepi64_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_cvtsepi64_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_cvttpd_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_cvttpd_epu32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_cvttps_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_cvttps_epu32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_cvtusepi32_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_cvtusepi32_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_cvtusepi64_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_cvtusepi64_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_cvtusepi64_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_div_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_div_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_expand_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_expand_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_expand_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_expand_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_fmadd_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_fmadd_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_fmaddsub_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_fmaddsub_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_fmsub_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_fmsub_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_fmsubadd_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_fmsubadd_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_fnmadd_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_fnmadd_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_fnmsub_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_fnmsub_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_getexp_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_getexp_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_max_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_max_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_max_epu32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_max_epu64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_max_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_max_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_min_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_min_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_min_epu32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_min_epu64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_min_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_min_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_mov_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_mov_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_mov_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_mov_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_movedup_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_movehdup_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_moveldup_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_mul_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_mul_epu32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_mul_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_mul_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_mullo_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_mullox_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_or_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_or_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_permutevar_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_permutevar_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_permutevar_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_permutex2var_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_permutex2var_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_permutex2var_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_permutex2var_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_permutexvar_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_permutexvar_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_permutexvar_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_permutexvar_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_rcp14_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_rcp14_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_reduce_add_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_reduce_add_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_reduce_add_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_reduce_add_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_reduce_and_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_reduce_and_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_reduce_max_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_reduce_max_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_reduce_max_epu32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_reduce_max_epu64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_reduce_max_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_reduce_max_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_reduce_min_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_reduce_min_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_reduce_min_epu32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_reduce_min_epu64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_reduce_min_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_reduce_min_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_reduce_mul_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_reduce_mul_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_reduce_mul_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_reduce_mul_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_reduce_or_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_reduce_or_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_rolv_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_rolv_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_rorv_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_rorv_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_rsqrt14_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_rsqrt14_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_scalef_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_scalef_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_set1_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_set1_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_sll_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_sll_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_sllv_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_sllv_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_sqrt_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_sqrt_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_sra_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_sra_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_srav_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_srav_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_srl_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_srl_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_srlv_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_srlv_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_sub_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_sub_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_sub_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_sub_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_test_epi32_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_test_epi64_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_testn_epi32_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_testn_epi64_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_unpackhi_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_unpackhi_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_unpackhi_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_unpackhi_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_unpacklo_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_unpacklo_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_unpacklo_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_unpacklo_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_xor_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_xor_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_abs_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_abs_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_add_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_add_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_add_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_add_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_and_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_and_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_andnot_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_andnot_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_broadcast_f32x4"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_broadcast_f64x4"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_broadcast_i32x4"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_broadcast_i64x4"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_broadcastd_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_broadcastq_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_broadcastsd_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_broadcastss_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_compress_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_compress_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_compress_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_compress_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_cvtepi16_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_cvtepi16_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_cvtepi32_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_cvtepi32_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_cvtepi32_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_cvtepi32_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_cvtepi32_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_cvtepi64_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_cvtepi64_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_cvtepi64_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_cvtepi8_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_cvtepi8_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_cvtepu16_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_cvtepu16_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_cvtepu32_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_cvtepu32_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_cvtepu32_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_cvtepu8_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_cvtepu8_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_cvtpd_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_cvtpd_epu32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_cvtpd_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_cvtph_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_cvtps_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_cvtps_epu32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_cvtps_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_cvtsepi32_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_cvtsepi32_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_cvtsepi64_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_cvtsepi64_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_cvtsepi64_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_cvttpd_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_cvttpd_epu32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_cvttps_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_cvttps_epu32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_cvtusepi32_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_cvtusepi32_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_cvtusepi64_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_cvtusepi64_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_cvtusepi64_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_div_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_div_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_expand_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_expand_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_expand_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_expand_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_fmadd_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_fmadd_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_fmaddsub_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_fmaddsub_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_fmsub_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_fmsub_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_fmsubadd_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_fmsubadd_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_fnmadd_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_fnmadd_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_fnmsub_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_fnmsub_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_getexp_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_getexp_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_max_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_max_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_max_epu32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_max_epu64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_max_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_max_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_min_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_min_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_min_epu32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_min_epu64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_min_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_min_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_mov_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_mov_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_mov_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_mov_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_movedup_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_movehdup_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_moveldup_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_mul_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_mul_epu32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_mul_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_mul_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_mullo_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_or_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_or_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_permutevar_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_permutevar_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_permutex2var_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_permutex2var_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_permutex2var_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_permutex2var_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_permutexvar_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_permutexvar_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_permutexvar_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_permutexvar_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_rcp14_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_rcp14_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_rolv_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_rolv_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_rorv_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_rorv_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_rsqrt14_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_rsqrt14_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_scalef_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_scalef_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_set1_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_set1_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_sll_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_sll_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_sllv_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_sllv_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_sqrt_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_sqrt_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_sra_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_sra_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_srav_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_srav_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_srl_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_srl_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_srlv_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_srlv_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_sub_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_sub_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_sub_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_sub_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_unpackhi_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_unpackhi_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_unpackhi_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_unpackhi_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_unpacklo_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_unpacklo_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_unpacklo_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_unpacklo_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_xor_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_xor_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_max_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_max_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_max_epu32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_max_epu64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_max_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_max_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_min_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_min_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_min_epu32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_min_epu64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_min_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_min_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_movedup_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_movehdup_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_moveldup_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mul_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mul_epu32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mul_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mul_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mullo_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mullox_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_or_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_or_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_or_si512"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_permutevar_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_permutevar_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_permutevar_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_permutex2var_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_permutex2var_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_permutex2var_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_permutex2var_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_permutexvar_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_permutexvar_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_permutexvar_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_permutexvar_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_rcp14_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_rcp14_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_reduce_add_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_reduce_add_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_reduce_add_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_reduce_add_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_reduce_and_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_reduce_and_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_reduce_max_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_reduce_max_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_reduce_max_epu32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_reduce_max_epu64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_reduce_max_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_reduce_max_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_reduce_min_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_reduce_min_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_reduce_min_epu32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_reduce_min_epu64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_reduce_min_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_reduce_min_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_reduce_mul_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_reduce_mul_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_reduce_mul_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_reduce_mul_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_reduce_or_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_reduce_or_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_rolv_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_rolv_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_rorv_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_rorv_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_rsqrt14_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_rsqrt14_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_scalef_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_scalef_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_set1_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_set1_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_set1_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_set1_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_set1_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_set1_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_set4_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_set4_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_set4_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_set4_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_set_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_set_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_set_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_set_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_set_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_set_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_setr4_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_setr4_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_setr4_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_setr4_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_setr_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_setr_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_setr_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_setr_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_setzero"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_setzero_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_setzero_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_setzero_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_setzero_si512"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_sll_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_sll_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_sllv_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_sllv_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_sqrt_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_sqrt_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_sra_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_sra_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_srav_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_srav_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_srl_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_srl_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_srlv_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_srlv_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_sub_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_sub_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_sub_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_sub_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_test_epi32_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_test_epi64_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_testn_epi32_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_testn_epi64_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_undefined"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_undefined_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_undefined_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_undefined_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_unpackhi_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_unpackhi_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_unpackhi_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_unpackhi_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_unpacklo_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_unpacklo_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_unpacklo_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_unpacklo_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_xor_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_xor_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_xor_si512"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_zextpd128_pd512"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_zextpd256_pd512"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_zextps128_ps512"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_zextps256_ps512"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_zextsi128_si512"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_zextsi256_si512"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_abs_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_cmpeq_epi32_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_cmpeq_epi64_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_cmpeq_epu32_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_cmpeq_epu64_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_cmpge_epi32_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_cmpge_epi64_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_cmpge_epu32_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_cmpge_epu64_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_cmpgt_epi32_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_cmpgt_epi64_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_cmpgt_epu32_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_cmpgt_epu64_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_cmple_epi32_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_cmple_epi64_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_cmple_epu32_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_cmple_epu64_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_cmplt_epi32_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_cmplt_epi64_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_cmplt_epu32_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_cmplt_epu64_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_cmpneq_epi32_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_cmpneq_epi64_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_cmpneq_epu32_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_cmpneq_epu64_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_cvtepi32_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_cvtepi32_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_cvtepi64_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_cvtepi64_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_cvtepi64_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_cvtepu32_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_cvti32_sd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_cvti32_ss"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_cvtpd_epu32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_cvtps_epu32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_cvtsd_i32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_cvtsd_u32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_cvtsepi32_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_cvtsepi32_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_cvtsepi64_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_cvtsepi64_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_cvtsepi64_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_cvtss_i32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_cvtss_u32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_cvttpd_epu32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_cvttps_epu32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_cvttsd_i32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_cvttsd_u32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_cvttss_i32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_cvttss_u32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_cvtu32_sd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_cvtu32_ss"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_cvtusepi32_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_cvtusepi32_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_cvtusepi64_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_cvtusepi64_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_cvtusepi64_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_getexp_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_getexp_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_getexp_sd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_getexp_ss"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask2_permutex2var_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask2_permutex2var_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask2_permutex2var_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask2_permutex2var_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask3_fmadd_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask3_fmadd_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask3_fmadd_sd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask3_fmadd_ss"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask3_fmaddsub_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask3_fmaddsub_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask3_fmsub_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask3_fmsub_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask3_fmsub_sd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask3_fmsub_ss"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask3_fmsubadd_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask3_fmsubadd_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask3_fnmadd_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask3_fnmadd_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask3_fnmadd_sd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask3_fnmadd_ss"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask3_fnmsub_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask3_fnmsub_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask3_fnmsub_sd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask3_fnmsub_ss"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_abs_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_abs_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_add_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_add_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_add_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_add_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_add_sd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_add_ss"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_and_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_and_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_andnot_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_andnot_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_blend_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_blend_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_blend_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_blend_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_broadcastd_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_broadcastq_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_broadcastss_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_cmpeq_epi32_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_cmpeq_epi64_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_cmpeq_epu32_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_cmpeq_epu64_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_cmpge_epi32_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_cmpge_epi64_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_cmpge_epu32_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_cmpge_epu64_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_cmpgt_epi32_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_cmpgt_epi64_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_cmpgt_epu32_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_cmpgt_epu64_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_cmple_epi32_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_cmple_epi64_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_cmple_epu32_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_cmple_epu64_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_cmplt_epi32_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_cmplt_epi64_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_cmplt_epu32_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_cmplt_epu64_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_cmpneq_epi32_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_cmpneq_epi64_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_cmpneq_epu32_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_cmpneq_epu64_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_compress_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_compress_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_compress_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_compress_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_cvtepi16_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_cvtepi16_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_cvtepi32_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_cvtepi32_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_cvtepi32_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_cvtepi32_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_cvtepi32_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_cvtepi64_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_cvtepi64_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_cvtepi64_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_cvtepi8_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_cvtepi8_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_cvtepu16_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_cvtepu16_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_cvtepu32_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_cvtepu32_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_cvtepu8_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_cvtepu8_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_cvtpd_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_cvtpd_epu32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_cvtpd_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_cvtph_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_cvtps_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_cvtps_epu32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_cvtsd_ss"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_cvtsepi32_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_cvtsepi32_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_cvtsepi64_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_cvtsepi64_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_cvtsepi64_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_cvtss_sd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_cvttpd_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_cvttpd_epu32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_cvttps_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_cvttps_epu32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_cvtusepi32_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_cvtusepi32_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_cvtusepi64_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_cvtusepi64_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_cvtusepi64_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_div_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_div_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_div_sd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_div_ss"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_expand_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_expand_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_expand_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_expand_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_fmadd_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_fmadd_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_fmadd_sd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_fmadd_ss"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_fmaddsub_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_fmaddsub_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_fmsub_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_fmsub_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_fmsub_sd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_fmsub_ss"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_fmsubadd_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_fmsubadd_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_fnmadd_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_fnmadd_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_fnmadd_sd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_fnmadd_ss"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_fnmsub_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_fnmsub_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_fnmsub_sd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_fnmsub_ss"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_getexp_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_getexp_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_getexp_sd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_getexp_ss"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_max_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_max_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_max_epu32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_max_epu64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_max_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_max_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_max_sd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_max_ss"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_min_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_min_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_min_epu32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_min_epu64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_min_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_min_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_min_sd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_min_ss"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_mov_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_mov_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_mov_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_mov_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_move_sd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_move_ss"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_movedup_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_movehdup_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_moveldup_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_mul_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_mul_epu32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_mul_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_mul_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_mul_sd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_mul_ss"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_mullo_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_or_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_or_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_permutevar_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_permutevar_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_permutex2var_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_permutex2var_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_permutex2var_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_permutex2var_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_rcp14_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_rcp14_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_rcp14_sd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_rcp14_ss"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_rolv_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_rolv_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_rorv_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_rorv_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_rsqrt14_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_rsqrt14_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_rsqrt14_sd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_rsqrt14_ss"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_scalef_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_scalef_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_scalef_sd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_scalef_ss"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_set1_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_set1_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_sll_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_sll_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_sllv_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_sllv_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_sqrt_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_sqrt_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_sqrt_sd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_sqrt_ss"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_sra_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_sra_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_srav_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_srav_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_srl_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_srl_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_srlv_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_srlv_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_sub_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_sub_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_sub_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_sub_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_sub_sd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_sub_ss"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_test_epi32_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_test_epi64_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_testn_epi32_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_testn_epi64_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_unpackhi_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_unpackhi_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_unpackhi_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_unpackhi_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_unpacklo_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_unpacklo_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_unpacklo_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_unpacklo_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_xor_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_xor_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_abs_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_abs_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_add_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_add_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_add_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_add_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_add_sd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_add_ss"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_and_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_and_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_andnot_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_andnot_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_broadcastd_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_broadcastq_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_broadcastss_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_compress_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_compress_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_compress_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_compress_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_cvtepi16_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_cvtepi16_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_cvtepi32_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_cvtepi32_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_cvtepi32_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_cvtepi32_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_cvtepi32_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_cvtepi64_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_cvtepi64_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_cvtepi64_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_cvtepi8_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_cvtepi8_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_cvtepu16_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_cvtepu16_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_cvtepu32_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_cvtepu32_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_cvtepu8_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_cvtepu8_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_cvtpd_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_cvtpd_epu32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_cvtpd_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_cvtph_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_cvtps_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_cvtps_epu32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_cvtsd_ss"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_cvtsepi32_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_cvtsepi32_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_cvtsepi64_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_cvtsepi64_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_cvtsepi64_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_cvtss_sd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_cvttpd_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_cvttpd_epu32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_cvttps_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_cvttps_epu32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_cvtusepi32_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_cvtusepi32_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_cvtusepi64_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_cvtusepi64_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_cvtusepi64_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_div_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_div_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_div_sd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_div_ss"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_expand_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_expand_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_expand_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_expand_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_fmadd_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_fmadd_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_fmadd_sd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_fmadd_ss"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_fmaddsub_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_fmaddsub_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_fmsub_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_fmsub_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_fmsub_sd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_fmsub_ss"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_fmsubadd_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_fmsubadd_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_fnmadd_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_fnmadd_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_fnmadd_sd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_fnmadd_ss"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_fnmsub_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_fnmsub_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_fnmsub_sd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_fnmsub_ss"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_getexp_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_getexp_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_getexp_sd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_getexp_ss"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_max_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_max_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_max_epu32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_max_epu64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_max_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_max_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_max_sd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_max_ss"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_min_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_min_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_min_epu32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_min_epu64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_min_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_min_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_min_sd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_min_ss"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_mov_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_mov_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_mov_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_mov_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_move_sd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_move_ss"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_movedup_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_movehdup_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_moveldup_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_mul_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_mul_epu32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_mul_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_mul_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_mul_sd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_mul_ss"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_mullo_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_or_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_or_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_permutevar_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_permutevar_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_permutex2var_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_permutex2var_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_permutex2var_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_permutex2var_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_rcp14_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_rcp14_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_rcp14_sd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_rcp14_ss"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_rolv_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_rolv_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_rorv_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_rorv_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_rsqrt14_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_rsqrt14_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_rsqrt14_sd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_rsqrt14_ss"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_scalef_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_scalef_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_scalef_sd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_scalef_ss"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_set1_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_set1_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_sll_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_sll_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_sllv_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_sllv_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_sqrt_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_sqrt_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_sqrt_sd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_sqrt_ss"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_sra_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_sra_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_srav_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_srav_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_srl_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_srl_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_srlv_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_srlv_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_sub_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_sub_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_sub_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_sub_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_sub_sd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_sub_ss"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_unpackhi_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_unpackhi_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_unpackhi_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_unpackhi_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_unpacklo_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_unpacklo_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_unpacklo_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_unpacklo_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_xor_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_xor_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_max_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_max_epu64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_min_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_min_epu64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_or_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_or_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_permutex2var_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_permutex2var_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_permutex2var_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_permutex2var_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_rcp14_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_rcp14_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_rcp14_sd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_rcp14_ss"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_rolv_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_rolv_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_rorv_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_rorv_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_rsqrt14_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_rsqrt14_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_rsqrt14_sd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_rsqrt14_ss"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_scalef_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_scalef_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_scalef_sd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_scalef_ss"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_sra_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_srav_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_test_epi32_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_test_epi64_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_testn_epi32_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_testn_epi64_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_xor_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_xor_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_abs_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_add_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_castpd_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_castph128_ph256"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_castph256_ph128"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_castph_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_castph_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_castph_si256"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_castps_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_castsi256_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_cmul_pch"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_conj_pch"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_cvtepi16_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_cvtepi32_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_cvtepi64_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_cvtepu16_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_cvtepu32_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_cvtepu64_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_cvtpd_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_cvtph_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_cvtph_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_cvtph_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_cvtph_epu16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_cvtph_epu32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_cvtph_epu64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_cvtph_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_cvtsh_h"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_cvttph_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_cvttph_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_cvttph_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_cvttph_epu16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_cvttph_epu32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_cvttph_epu64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_cvtxph_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_cvtxps_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_div_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_fcmadd_pch"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_fcmul_pch"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_fmadd_pch"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_fmadd_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_fmaddsub_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_fmsub_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_fmsubadd_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_fmul_pch"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_fnmadd_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_fnmsub_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_getexp_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_mask3_fcmadd_pch"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_mask3_fmadd_pch"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_mask3_fmadd_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_mask3_fmaddsub_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_mask3_fmsub_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_mask3_fmsubadd_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_mask3_fnmadd_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_mask3_fnmsub_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_mask_add_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_mask_blend_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_mask_cmul_pch"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_mask_conj_pch"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_mask_cvtepi16_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_mask_cvtepi32_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_mask_cvtepi64_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_mask_cvtepu16_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_mask_cvtepu32_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_mask_cvtepu64_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_mask_cvtpd_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_mask_cvtph_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_mask_cvtph_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_mask_cvtph_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_mask_cvtph_epu16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_mask_cvtph_epu32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_mask_cvtph_epu64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_mask_cvtph_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_mask_cvttph_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_mask_cvttph_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_mask_cvttph_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_mask_cvttph_epu16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_mask_cvttph_epu32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_mask_cvttph_epu64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_mask_cvtxph_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_mask_cvtxps_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_mask_div_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_mask_fcmadd_pch"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_mask_fcmul_pch"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_mask_fmadd_pch"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_mask_fmadd_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_mask_fmaddsub_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_mask_fmsub_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_mask_fmsubadd_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_mask_fmul_pch"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_mask_fnmadd_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_mask_fnmsub_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_mask_getexp_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_mask_max_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_mask_min_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_mask_mul_pch"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_mask_mul_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_mask_rcp_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_mask_rsqrt_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_mask_scalef_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_mask_sqrt_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_mask_sub_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_maskz_add_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_maskz_cmul_pch"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_maskz_conj_pch"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_maskz_cvtepi16_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_maskz_cvtepi32_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_maskz_cvtepi64_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_maskz_cvtepu16_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_maskz_cvtepu32_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_maskz_cvtepu64_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_maskz_cvtpd_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_maskz_cvtph_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_maskz_cvtph_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_maskz_cvtph_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_maskz_cvtph_epu16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_maskz_cvtph_epu32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_maskz_cvtph_epu64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_maskz_cvtph_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_maskz_cvttph_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_maskz_cvttph_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_maskz_cvttph_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_maskz_cvttph_epu16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_maskz_cvttph_epu32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_maskz_cvttph_epu64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_maskz_cvtxph_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_maskz_cvtxps_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_maskz_div_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_maskz_fcmadd_pch"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_maskz_fcmul_pch"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_maskz_fmadd_pch"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_maskz_fmadd_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_maskz_fmaddsub_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_maskz_fmsub_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_maskz_fmsubadd_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_maskz_fmul_pch"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_maskz_fnmadd_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_maskz_fnmsub_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_maskz_getexp_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_maskz_max_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_maskz_min_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_maskz_mul_pch"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_maskz_mul_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_maskz_rcp_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_maskz_rsqrt_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_maskz_scalef_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_maskz_sqrt_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_maskz_sub_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_max_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_min_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_mul_pch"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_mul_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_permutex2var_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_permutexvar_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_rcp_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_reduce_add_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_reduce_max_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_reduce_min_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_reduce_mul_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_rsqrt_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_scalef_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_set1_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_set_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_setr_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_setzero_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_sqrt_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_sub_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_undefined_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_zextph128_ph256"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_abs_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_add_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_castpd_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_castph128_ph512"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_castph256_ph512"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_castph512_ph128"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_castph512_ph256"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_castph_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_castph_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_castph_si512"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_castps_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_castsi512_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_cmul_pch"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_conj_pch"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_cvtepi16_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_cvtepi32_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_cvtepi64_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_cvtepu16_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_cvtepu32_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_cvtepu64_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_cvtpd_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_cvtph_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_cvtph_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_cvtph_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_cvtph_epu16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_cvtph_epu32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_cvtph_epu64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_cvtph_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_cvtsh_h"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_cvttph_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_cvttph_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_cvttph_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_cvttph_epu16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_cvttph_epu32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_cvttph_epu64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_cvtxph_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_cvtxps_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_div_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_fcmadd_pch"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_fcmul_pch"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_fmadd_pch"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_fmadd_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_fmaddsub_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_fmsub_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_fmsubadd_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_fmul_pch"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_fnmadd_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_fnmsub_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_getexp_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_mask3_fcmadd_pch"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_mask3_fmadd_pch"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_mask3_fmadd_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_mask3_fmaddsub_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_mask3_fmsub_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_mask3_fmsubadd_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_mask3_fnmadd_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_mask3_fnmsub_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_mask_add_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_mask_blend_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_mask_cmul_pch"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_mask_conj_pch"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_mask_cvtepi16_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_mask_cvtepi32_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_mask_cvtepi64_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_mask_cvtepu16_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_mask_cvtepu32_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_mask_cvtepu64_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_mask_cvtpd_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_mask_cvtph_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_mask_cvtph_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_mask_cvtph_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_mask_cvtph_epu16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_mask_cvtph_epu32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_mask_cvtph_epu64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_mask_cvtph_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_mask_cvttph_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_mask_cvttph_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_mask_cvttph_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_mask_cvttph_epu16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_mask_cvttph_epu32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_mask_cvttph_epu64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_mask_cvtxph_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_mask_cvtxps_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_mask_div_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_mask_fcmadd_pch"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_mask_fcmul_pch"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_mask_fmadd_pch"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_mask_fmadd_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_mask_fmaddsub_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_mask_fmsub_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_mask_fmsubadd_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_mask_fmul_pch"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_mask_fnmadd_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_mask_fnmsub_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_mask_getexp_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_mask_max_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_mask_min_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_mask_mul_pch"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_mask_mul_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_mask_rcp_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_mask_rsqrt_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_mask_scalef_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_mask_sqrt_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_mask_sub_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_maskz_add_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_maskz_cmul_pch"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_maskz_conj_pch"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_maskz_cvtepi16_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_maskz_cvtepi32_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_maskz_cvtepi64_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_maskz_cvtepu16_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_maskz_cvtepu32_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_maskz_cvtepu64_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_maskz_cvtpd_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_maskz_cvtph_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_maskz_cvtph_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_maskz_cvtph_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_maskz_cvtph_epu16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_maskz_cvtph_epu32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_maskz_cvtph_epu64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_maskz_cvtph_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_maskz_cvttph_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_maskz_cvttph_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_maskz_cvttph_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_maskz_cvttph_epu16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_maskz_cvttph_epu32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_maskz_cvttph_epu64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_maskz_cvtxph_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_maskz_cvtxps_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_maskz_div_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_maskz_fcmadd_pch"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_maskz_fcmul_pch"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_maskz_fmadd_pch"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_maskz_fmadd_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_maskz_fmaddsub_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_maskz_fmsub_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_maskz_fmsubadd_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_maskz_fmul_pch"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_maskz_fnmadd_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_maskz_fnmsub_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_maskz_getexp_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_maskz_max_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_maskz_min_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_maskz_mul_pch"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_maskz_mul_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_maskz_rcp_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_maskz_rsqrt_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_maskz_scalef_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_maskz_sqrt_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_maskz_sub_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_max_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_min_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_mul_pch"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_mul_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_permutex2var_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_permutexvar_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_rcp_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_reduce_add_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_reduce_max_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_reduce_min_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_reduce_mul_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_rsqrt_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_scalef_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_set1_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_set_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_setr_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_setzero_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_sqrt_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_sub_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_undefined_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_zextph128_ph512"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_zextph256_ph512"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_abs_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_add_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_add_sh"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_castpd_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_castph_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_castph_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_castph_si128"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_castps_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_castsi128_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_cmul_pch"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_cmul_sch"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_comieq_sh"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_comige_sh"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_comigt_sh"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_comile_sh"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_comilt_sh"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_comineq_sh"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_conj_pch"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_cvtepi16_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_cvtepi32_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_cvtepi64_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_cvtepu16_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_cvtepu32_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_cvtepu64_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_cvti32_sh"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_cvtpd_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_cvtph_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_cvtph_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_cvtph_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_cvtph_epu16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_cvtph_epu32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_cvtph_epu64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_cvtph_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_cvtsd_sh"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_cvtsh_h"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_cvtsh_i32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_cvtsh_sd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_cvtsh_ss"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_cvtsh_u32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_cvtsi128_si16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_cvtsi16_si128"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_cvtss_sh"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_cvttph_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_cvttph_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_cvttph_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_cvttph_epu16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_cvttph_epu32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_cvttph_epu64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_cvttsh_i32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_cvttsh_u32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_cvtu32_sh"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_cvtxph_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_cvtxps_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_div_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_div_sh"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_fcmadd_pch"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_fcmadd_sch"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_fcmul_pch"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_fcmul_sch"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_fmadd_pch"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_fmadd_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_fmadd_sch"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_fmadd_sh"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_fmaddsub_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_fmsub_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_fmsub_sh"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_fmsubadd_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_fmul_pch"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_fmul_sch"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_fnmadd_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_fnmadd_sh"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_fnmsub_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_fnmsub_sh"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_getexp_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_getexp_sh"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_mask3_fcmadd_pch"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_mask3_fcmadd_sch"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_mask3_fmadd_pch"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_mask3_fmadd_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_mask3_fmadd_sch"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_mask3_fmadd_sh"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_mask3_fmaddsub_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_mask3_fmsub_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_mask3_fmsub_sh"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_mask3_fmsubadd_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_mask3_fnmadd_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_mask3_fnmadd_sh"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_mask3_fnmsub_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_mask3_fnmsub_sh"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_mask_add_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_mask_add_sh"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_mask_blend_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_mask_cmul_pch"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_mask_cmul_sch"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_mask_conj_pch"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_mask_cvtepi16_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_mask_cvtepi32_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_mask_cvtepi64_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_mask_cvtepu16_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_mask_cvtepu32_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_mask_cvtepu64_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_mask_cvtpd_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_mask_cvtph_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_mask_cvtph_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_mask_cvtph_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_mask_cvtph_epu16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_mask_cvtph_epu32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_mask_cvtph_epu64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_mask_cvtph_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_mask_cvtsd_sh"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_mask_cvtsh_sd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_mask_cvtsh_ss"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_mask_cvtss_sh"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_mask_cvttph_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_mask_cvttph_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_mask_cvttph_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_mask_cvttph_epu16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_mask_cvttph_epu32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_mask_cvttph_epu64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_mask_cvtxph_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_mask_cvtxps_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_mask_div_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_mask_div_sh"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_mask_fcmadd_pch"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_mask_fcmadd_sch"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_mask_fcmul_pch"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_mask_fcmul_sch"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_mask_fmadd_pch"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_mask_fmadd_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_mask_fmadd_sch"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_mask_fmadd_sh"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_mask_fmaddsub_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_mask_fmsub_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_mask_fmsub_sh"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_mask_fmsubadd_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_mask_fmul_pch"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_mask_fmul_sch"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_mask_fnmadd_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_mask_fnmadd_sh"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_mask_fnmsub_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_mask_fnmsub_sh"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_mask_getexp_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_mask_getexp_sh"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_mask_max_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_mask_max_sh"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_mask_min_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_mask_min_sh"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_mask_move_sh"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_mask_mul_pch"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_mask_mul_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_mask_mul_sch"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_mask_mul_sh"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_mask_rcp_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_mask_rcp_sh"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_mask_rsqrt_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_mask_rsqrt_sh"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_mask_scalef_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_mask_scalef_sh"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_mask_sqrt_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_mask_sqrt_sh"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_mask_sub_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_mask_sub_sh"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_maskz_add_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_maskz_add_sh"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_maskz_cmul_pch"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_maskz_cmul_sch"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_maskz_conj_pch"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_maskz_cvtepi16_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_maskz_cvtepi32_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_maskz_cvtepi64_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_maskz_cvtepu16_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_maskz_cvtepu32_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_maskz_cvtepu64_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_maskz_cvtpd_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_maskz_cvtph_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_maskz_cvtph_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_maskz_cvtph_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_maskz_cvtph_epu16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_maskz_cvtph_epu32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_maskz_cvtph_epu64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_maskz_cvtph_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_maskz_cvtsd_sh"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_maskz_cvtsh_sd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_maskz_cvtsh_ss"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_maskz_cvtss_sh"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_maskz_cvttph_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_maskz_cvttph_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_maskz_cvttph_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_maskz_cvttph_epu16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_maskz_cvttph_epu32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_maskz_cvttph_epu64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_maskz_cvtxph_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_maskz_cvtxps_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_maskz_div_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_maskz_div_sh"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_maskz_fcmadd_pch"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_maskz_fcmadd_sch"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_maskz_fcmul_pch"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_maskz_fcmul_sch"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_maskz_fmadd_pch"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_maskz_fmadd_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_maskz_fmadd_sch"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_maskz_fmadd_sh"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_maskz_fmaddsub_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_maskz_fmsub_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_maskz_fmsub_sh"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_maskz_fmsubadd_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_maskz_fmul_pch"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_maskz_fmul_sch"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_maskz_fnmadd_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_maskz_fnmadd_sh"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_maskz_fnmsub_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_maskz_fnmsub_sh"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_maskz_getexp_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_maskz_getexp_sh"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_maskz_max_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_maskz_max_sh"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_maskz_min_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_maskz_min_sh"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_maskz_move_sh"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_maskz_mul_pch"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_maskz_mul_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_maskz_mul_sch"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_maskz_mul_sh"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_maskz_rcp_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_maskz_rcp_sh"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_maskz_rsqrt_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_maskz_rsqrt_sh"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_maskz_scalef_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_maskz_scalef_sh"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_maskz_sqrt_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_maskz_sqrt_sh"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_maskz_sub_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_maskz_sub_sh"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_max_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_max_sh"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_min_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_min_sh"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_move_sh"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_mul_pch"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_mul_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_mul_sch"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_mul_sh"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_permutex2var_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_permutexvar_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_rcp_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_rcp_sh"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_reduce_add_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_reduce_max_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_reduce_min_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_reduce_mul_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_rsqrt_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_rsqrt_sh"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_scalef_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_scalef_sh"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_set1_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_set_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_set_sh"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_setr_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_setzero_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_sqrt_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_sqrt_sh"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_sub_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_sub_sh"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_ucomieq_sh"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_ucomige_sh"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_ucomigt_sh"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_ucomile_sh"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_ucomilt_sh"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_ucomineq_sh"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_undefined_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512ifma.rs",
    "func": "core_arch::x86::avx512ifma::_mm256_madd52hi_avx_epu64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512ifma.rs",
    "func": "core_arch::x86::avx512ifma::_mm256_madd52hi_epu64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512ifma.rs",
    "func": "core_arch::x86::avx512ifma::_mm256_madd52lo_avx_epu64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512ifma.rs",
    "func": "core_arch::x86::avx512ifma::_mm256_madd52lo_epu64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512ifma.rs",
    "func": "core_arch::x86::avx512ifma::_mm256_mask_madd52hi_epu64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512ifma.rs",
    "func": "core_arch::x86::avx512ifma::_mm256_mask_madd52lo_epu64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512ifma.rs",
    "func": "core_arch::x86::avx512ifma::_mm256_maskz_madd52hi_epu64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512ifma.rs",
    "func": "core_arch::x86::avx512ifma::_mm256_maskz_madd52lo_epu64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512ifma.rs",
    "func": "core_arch::x86::avx512ifma::_mm512_madd52hi_epu64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512ifma.rs",
    "func": "core_arch::x86::avx512ifma::_mm512_madd52lo_epu64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512ifma.rs",
    "func": "core_arch::x86::avx512ifma::_mm512_mask_madd52hi_epu64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512ifma.rs",
    "func": "core_arch::x86::avx512ifma::_mm512_mask_madd52lo_epu64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512ifma.rs",
    "func": "core_arch::x86::avx512ifma::_mm512_maskz_madd52hi_epu64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512ifma.rs",
    "func": "core_arch::x86::avx512ifma::_mm512_maskz_madd52lo_epu64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512ifma.rs",
    "func": "core_arch::x86::avx512ifma::_mm_madd52hi_avx_epu64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512ifma.rs",
    "func": "core_arch::x86::avx512ifma::_mm_madd52hi_epu64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512ifma.rs",
    "func": "core_arch::x86::avx512ifma::_mm_madd52lo_avx_epu64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512ifma.rs",
    "func": "core_arch::x86::avx512ifma::_mm_madd52lo_epu64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512ifma.rs",
    "func": "core_arch::x86::avx512ifma::_mm_mask_madd52hi_epu64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512ifma.rs",
    "func": "core_arch::x86::avx512ifma::_mm_mask_madd52lo_epu64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512ifma.rs",
    "func": "core_arch::x86::avx512ifma::_mm_maskz_madd52hi_epu64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512ifma.rs",
    "func": "core_arch::x86::avx512ifma::_mm_maskz_madd52lo_epu64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi.rs",
    "func": "core_arch::x86::avx512vbmi::_mm256_mask2_permutex2var_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi.rs",
    "func": "core_arch::x86::avx512vbmi::_mm256_mask_multishift_epi64_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi.rs",
    "func": "core_arch::x86::avx512vbmi::_mm256_mask_permutex2var_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi.rs",
    "func": "core_arch::x86::avx512vbmi::_mm256_mask_permutexvar_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi.rs",
    "func": "core_arch::x86::avx512vbmi::_mm256_maskz_multishift_epi64_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi.rs",
    "func": "core_arch::x86::avx512vbmi::_mm256_maskz_permutex2var_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi.rs",
    "func": "core_arch::x86::avx512vbmi::_mm256_maskz_permutexvar_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi.rs",
    "func": "core_arch::x86::avx512vbmi::_mm256_multishift_epi64_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi.rs",
    "func": "core_arch::x86::avx512vbmi::_mm256_permutex2var_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi.rs",
    "func": "core_arch::x86::avx512vbmi::_mm256_permutexvar_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi.rs",
    "func": "core_arch::x86::avx512vbmi::_mm512_mask2_permutex2var_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi.rs",
    "func": "core_arch::x86::avx512vbmi::_mm512_mask_multishift_epi64_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi.rs",
    "func": "core_arch::x86::avx512vbmi::_mm512_mask_permutex2var_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi.rs",
    "func": "core_arch::x86::avx512vbmi::_mm512_mask_permutexvar_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi.rs",
    "func": "core_arch::x86::avx512vbmi::_mm512_maskz_multishift_epi64_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi.rs",
    "func": "core_arch::x86::avx512vbmi::_mm512_maskz_permutex2var_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi.rs",
    "func": "core_arch::x86::avx512vbmi::_mm512_maskz_permutexvar_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi.rs",
    "func": "core_arch::x86::avx512vbmi::_mm512_multishift_epi64_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi.rs",
    "func": "core_arch::x86::avx512vbmi::_mm512_permutex2var_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi.rs",
    "func": "core_arch::x86::avx512vbmi::_mm512_permutexvar_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi.rs",
    "func": "core_arch::x86::avx512vbmi::_mm_mask2_permutex2var_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi.rs",
    "func": "core_arch::x86::avx512vbmi::_mm_mask_multishift_epi64_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi.rs",
    "func": "core_arch::x86::avx512vbmi::_mm_mask_permutex2var_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi.rs",
    "func": "core_arch::x86::avx512vbmi::_mm_mask_permutexvar_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi.rs",
    "func": "core_arch::x86::avx512vbmi::_mm_maskz_multishift_epi64_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi.rs",
    "func": "core_arch::x86::avx512vbmi::_mm_maskz_permutex2var_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi.rs",
    "func": "core_arch::x86::avx512vbmi::_mm_maskz_permutexvar_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi.rs",
    "func": "core_arch::x86::avx512vbmi::_mm_multishift_epi64_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi.rs",
    "func": "core_arch::x86::avx512vbmi::_mm_permutex2var_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi.rs",
    "func": "core_arch::x86::avx512vbmi::_mm_permutexvar_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi2.rs",
    "func": "core_arch::x86::avx512vbmi2::_mm256_mask_compress_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi2.rs",
    "func": "core_arch::x86::avx512vbmi2::_mm256_mask_compress_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi2.rs",
    "func": "core_arch::x86::avx512vbmi2::_mm256_mask_expand_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi2.rs",
    "func": "core_arch::x86::avx512vbmi2::_mm256_mask_expand_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi2.rs",
    "func": "core_arch::x86::avx512vbmi2::_mm256_mask_shldv_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi2.rs",
    "func": "core_arch::x86::avx512vbmi2::_mm256_mask_shldv_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi2.rs",
    "func": "core_arch::x86::avx512vbmi2::_mm256_mask_shldv_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi2.rs",
    "func": "core_arch::x86::avx512vbmi2::_mm256_mask_shrdv_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi2.rs",
    "func": "core_arch::x86::avx512vbmi2::_mm256_mask_shrdv_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi2.rs",
    "func": "core_arch::x86::avx512vbmi2::_mm256_mask_shrdv_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi2.rs",
    "func": "core_arch::x86::avx512vbmi2::_mm256_maskz_compress_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi2.rs",
    "func": "core_arch::x86::avx512vbmi2::_mm256_maskz_compress_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi2.rs",
    "func": "core_arch::x86::avx512vbmi2::_mm256_maskz_expand_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi2.rs",
    "func": "core_arch::x86::avx512vbmi2::_mm256_maskz_expand_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi2.rs",
    "func": "core_arch::x86::avx512vbmi2::_mm256_maskz_shldv_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi2.rs",
    "func": "core_arch::x86::avx512vbmi2::_mm256_maskz_shldv_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi2.rs",
    "func": "core_arch::x86::avx512vbmi2::_mm256_maskz_shldv_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi2.rs",
    "func": "core_arch::x86::avx512vbmi2::_mm256_maskz_shrdv_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi2.rs",
    "func": "core_arch::x86::avx512vbmi2::_mm256_maskz_shrdv_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi2.rs",
    "func": "core_arch::x86::avx512vbmi2::_mm256_maskz_shrdv_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi2.rs",
    "func": "core_arch::x86::avx512vbmi2::_mm256_shldv_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi2.rs",
    "func": "core_arch::x86::avx512vbmi2::_mm256_shldv_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi2.rs",
    "func": "core_arch::x86::avx512vbmi2::_mm256_shldv_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi2.rs",
    "func": "core_arch::x86::avx512vbmi2::_mm256_shrdv_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi2.rs",
    "func": "core_arch::x86::avx512vbmi2::_mm256_shrdv_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi2.rs",
    "func": "core_arch::x86::avx512vbmi2::_mm256_shrdv_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi2.rs",
    "func": "core_arch::x86::avx512vbmi2::_mm512_mask_compress_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi2.rs",
    "func": "core_arch::x86::avx512vbmi2::_mm512_mask_compress_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi2.rs",
    "func": "core_arch::x86::avx512vbmi2::_mm512_mask_expand_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi2.rs",
    "func": "core_arch::x86::avx512vbmi2::_mm512_mask_expand_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi2.rs",
    "func": "core_arch::x86::avx512vbmi2::_mm512_mask_shldv_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi2.rs",
    "func": "core_arch::x86::avx512vbmi2::_mm512_mask_shldv_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi2.rs",
    "func": "core_arch::x86::avx512vbmi2::_mm512_mask_shldv_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi2.rs",
    "func": "core_arch::x86::avx512vbmi2::_mm512_mask_shrdv_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi2.rs",
    "func": "core_arch::x86::avx512vbmi2::_mm512_mask_shrdv_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi2.rs",
    "func": "core_arch::x86::avx512vbmi2::_mm512_mask_shrdv_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi2.rs",
    "func": "core_arch::x86::avx512vbmi2::_mm512_maskz_compress_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi2.rs",
    "func": "core_arch::x86::avx512vbmi2::_mm512_maskz_compress_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi2.rs",
    "func": "core_arch::x86::avx512vbmi2::_mm512_maskz_expand_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi2.rs",
    "func": "core_arch::x86::avx512vbmi2::_mm512_maskz_expand_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi2.rs",
    "func": "core_arch::x86::avx512vbmi2::_mm512_maskz_shldv_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi2.rs",
    "func": "core_arch::x86::avx512vbmi2::_mm512_maskz_shldv_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi2.rs",
    "func": "core_arch::x86::avx512vbmi2::_mm512_maskz_shldv_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi2.rs",
    "func": "core_arch::x86::avx512vbmi2::_mm512_maskz_shrdv_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi2.rs",
    "func": "core_arch::x86::avx512vbmi2::_mm512_maskz_shrdv_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi2.rs",
    "func": "core_arch::x86::avx512vbmi2::_mm512_maskz_shrdv_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi2.rs",
    "func": "core_arch::x86::avx512vbmi2::_mm512_shldv_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi2.rs",
    "func": "core_arch::x86::avx512vbmi2::_mm512_shldv_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi2.rs",
    "func": "core_arch::x86::avx512vbmi2::_mm512_shldv_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi2.rs",
    "func": "core_arch::x86::avx512vbmi2::_mm512_shrdv_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi2.rs",
    "func": "core_arch::x86::avx512vbmi2::_mm512_shrdv_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi2.rs",
    "func": "core_arch::x86::avx512vbmi2::_mm512_shrdv_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi2.rs",
    "func": "core_arch::x86::avx512vbmi2::_mm_mask_compress_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi2.rs",
    "func": "core_arch::x86::avx512vbmi2::_mm_mask_compress_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi2.rs",
    "func": "core_arch::x86::avx512vbmi2::_mm_mask_expand_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi2.rs",
    "func": "core_arch::x86::avx512vbmi2::_mm_mask_expand_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi2.rs",
    "func": "core_arch::x86::avx512vbmi2::_mm_mask_shldv_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi2.rs",
    "func": "core_arch::x86::avx512vbmi2::_mm_mask_shldv_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi2.rs",
    "func": "core_arch::x86::avx512vbmi2::_mm_mask_shldv_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi2.rs",
    "func": "core_arch::x86::avx512vbmi2::_mm_mask_shrdv_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi2.rs",
    "func": "core_arch::x86::avx512vbmi2::_mm_mask_shrdv_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi2.rs",
    "func": "core_arch::x86::avx512vbmi2::_mm_mask_shrdv_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi2.rs",
    "func": "core_arch::x86::avx512vbmi2::_mm_maskz_compress_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi2.rs",
    "func": "core_arch::x86::avx512vbmi2::_mm_maskz_compress_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi2.rs",
    "func": "core_arch::x86::avx512vbmi2::_mm_maskz_expand_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi2.rs",
    "func": "core_arch::x86::avx512vbmi2::_mm_maskz_expand_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi2.rs",
    "func": "core_arch::x86::avx512vbmi2::_mm_maskz_shldv_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi2.rs",
    "func": "core_arch::x86::avx512vbmi2::_mm_maskz_shldv_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi2.rs",
    "func": "core_arch::x86::avx512vbmi2::_mm_maskz_shldv_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi2.rs",
    "func": "core_arch::x86::avx512vbmi2::_mm_maskz_shrdv_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi2.rs",
    "func": "core_arch::x86::avx512vbmi2::_mm_maskz_shrdv_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi2.rs",
    "func": "core_arch::x86::avx512vbmi2::_mm_maskz_shrdv_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi2.rs",
    "func": "core_arch::x86::avx512vbmi2::_mm_shldv_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi2.rs",
    "func": "core_arch::x86::avx512vbmi2::_mm_shldv_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi2.rs",
    "func": "core_arch::x86::avx512vbmi2::_mm_shldv_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi2.rs",
    "func": "core_arch::x86::avx512vbmi2::_mm_shrdv_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi2.rs",
    "func": "core_arch::x86::avx512vbmi2::_mm_shrdv_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi2.rs",
    "func": "core_arch::x86::avx512vbmi2::_mm_shrdv_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vnni.rs",
    "func": "core_arch::x86::avx512vnni::_mm256_dpbssd_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vnni.rs",
    "func": "core_arch::x86::avx512vnni::_mm256_dpbssds_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vnni.rs",
    "func": "core_arch::x86::avx512vnni::_mm256_dpbsud_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vnni.rs",
    "func": "core_arch::x86::avx512vnni::_mm256_dpbsuds_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vnni.rs",
    "func": "core_arch::x86::avx512vnni::_mm256_dpbusd_avx_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vnni.rs",
    "func": "core_arch::x86::avx512vnni::_mm256_dpbusd_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vnni.rs",
    "func": "core_arch::x86::avx512vnni::_mm256_dpbusds_avx_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vnni.rs",
    "func": "core_arch::x86::avx512vnni::_mm256_dpbusds_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vnni.rs",
    "func": "core_arch::x86::avx512vnni::_mm256_dpbuud_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vnni.rs",
    "func": "core_arch::x86::avx512vnni::_mm256_dpbuuds_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vnni.rs",
    "func": "core_arch::x86::avx512vnni::_mm256_dpwssd_avx_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vnni.rs",
    "func": "core_arch::x86::avx512vnni::_mm256_dpwssd_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vnni.rs",
    "func": "core_arch::x86::avx512vnni::_mm256_dpwssds_avx_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vnni.rs",
    "func": "core_arch::x86::avx512vnni::_mm256_dpwssds_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vnni.rs",
    "func": "core_arch::x86::avx512vnni::_mm256_dpwsud_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vnni.rs",
    "func": "core_arch::x86::avx512vnni::_mm256_dpwsuds_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vnni.rs",
    "func": "core_arch::x86::avx512vnni::_mm256_dpwusd_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vnni.rs",
    "func": "core_arch::x86::avx512vnni::_mm256_dpwusds_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vnni.rs",
    "func": "core_arch::x86::avx512vnni::_mm256_dpwuud_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vnni.rs",
    "func": "core_arch::x86::avx512vnni::_mm256_dpwuuds_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vnni.rs",
    "func": "core_arch::x86::avx512vnni::_mm256_mask_dpbusd_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vnni.rs",
    "func": "core_arch::x86::avx512vnni::_mm256_mask_dpbusds_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vnni.rs",
    "func": "core_arch::x86::avx512vnni::_mm256_mask_dpwssd_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vnni.rs",
    "func": "core_arch::x86::avx512vnni::_mm256_mask_dpwssds_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vnni.rs",
    "func": "core_arch::x86::avx512vnni::_mm256_maskz_dpbusd_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vnni.rs",
    "func": "core_arch::x86::avx512vnni::_mm256_maskz_dpbusds_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vnni.rs",
    "func": "core_arch::x86::avx512vnni::_mm256_maskz_dpwssd_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vnni.rs",
    "func": "core_arch::x86::avx512vnni::_mm256_maskz_dpwssds_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vnni.rs",
    "func": "core_arch::x86::avx512vnni::_mm512_dpbusd_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vnni.rs",
    "func": "core_arch::x86::avx512vnni::_mm512_dpbusds_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vnni.rs",
    "func": "core_arch::x86::avx512vnni::_mm512_dpwssd_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vnni.rs",
    "func": "core_arch::x86::avx512vnni::_mm512_dpwssds_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vnni.rs",
    "func": "core_arch::x86::avx512vnni::_mm512_mask_dpbusd_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vnni.rs",
    "func": "core_arch::x86::avx512vnni::_mm512_mask_dpbusds_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vnni.rs",
    "func": "core_arch::x86::avx512vnni::_mm512_mask_dpwssd_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vnni.rs",
    "func": "core_arch::x86::avx512vnni::_mm512_mask_dpwssds_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vnni.rs",
    "func": "core_arch::x86::avx512vnni::_mm512_maskz_dpbusd_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vnni.rs",
    "func": "core_arch::x86::avx512vnni::_mm512_maskz_dpbusds_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vnni.rs",
    "func": "core_arch::x86::avx512vnni::_mm512_maskz_dpwssd_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vnni.rs",
    "func": "core_arch::x86::avx512vnni::_mm512_maskz_dpwssds_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vnni.rs",
    "func": "core_arch::x86::avx512vnni::_mm_dpbssd_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vnni.rs",
    "func": "core_arch::x86::avx512vnni::_mm_dpbssds_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vnni.rs",
    "func": "core_arch::x86::avx512vnni::_mm_dpbsud_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vnni.rs",
    "func": "core_arch::x86::avx512vnni::_mm_dpbsuds_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vnni.rs",
    "func": "core_arch::x86::avx512vnni::_mm_dpbusd_avx_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vnni.rs",
    "func": "core_arch::x86::avx512vnni::_mm_dpbusd_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vnni.rs",
    "func": "core_arch::x86::avx512vnni::_mm_dpbusds_avx_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vnni.rs",
    "func": "core_arch::x86::avx512vnni::_mm_dpbusds_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vnni.rs",
    "func": "core_arch::x86::avx512vnni::_mm_dpbuud_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vnni.rs",
    "func": "core_arch::x86::avx512vnni::_mm_dpbuuds_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vnni.rs",
    "func": "core_arch::x86::avx512vnni::_mm_dpwssd_avx_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vnni.rs",
    "func": "core_arch::x86::avx512vnni::_mm_dpwssd_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vnni.rs",
    "func": "core_arch::x86::avx512vnni::_mm_dpwssds_avx_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vnni.rs",
    "func": "core_arch::x86::avx512vnni::_mm_dpwssds_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vnni.rs",
    "func": "core_arch::x86::avx512vnni::_mm_dpwsud_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vnni.rs",
    "func": "core_arch::x86::avx512vnni::_mm_dpwsuds_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vnni.rs",
    "func": "core_arch::x86::avx512vnni::_mm_dpwusd_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vnni.rs",
    "func": "core_arch::x86::avx512vnni::_mm_dpwusds_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vnni.rs",
    "func": "core_arch::x86::avx512vnni::_mm_dpwuud_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vnni.rs",
    "func": "core_arch::x86::avx512vnni::_mm_dpwuuds_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vnni.rs",
    "func": "core_arch::x86::avx512vnni::_mm_mask_dpbusd_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vnni.rs",
    "func": "core_arch::x86::avx512vnni::_mm_mask_dpbusds_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vnni.rs",
    "func": "core_arch::x86::avx512vnni::_mm_mask_dpwssd_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vnni.rs",
    "func": "core_arch::x86::avx512vnni::_mm_mask_dpwssds_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vnni.rs",
    "func": "core_arch::x86::avx512vnni::_mm_maskz_dpbusd_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vnni.rs",
    "func": "core_arch::x86::avx512vnni::_mm_maskz_dpbusds_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vnni.rs",
    "func": "core_arch::x86::avx512vnni::_mm_maskz_dpwssd_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vnni.rs",
    "func": "core_arch::x86::avx512vnni::_mm_maskz_dpwssds_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vpopcntdq.rs",
    "func": "core_arch::x86::avx512vpopcntdq::_mm256_mask_popcnt_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vpopcntdq.rs",
    "func": "core_arch::x86::avx512vpopcntdq::_mm256_mask_popcnt_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vpopcntdq.rs",
    "func": "core_arch::x86::avx512vpopcntdq::_mm256_maskz_popcnt_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vpopcntdq.rs",
    "func": "core_arch::x86::avx512vpopcntdq::_mm256_maskz_popcnt_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vpopcntdq.rs",
    "func": "core_arch::x86::avx512vpopcntdq::_mm256_popcnt_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vpopcntdq.rs",
    "func": "core_arch::x86::avx512vpopcntdq::_mm256_popcnt_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vpopcntdq.rs",
    "func": "core_arch::x86::avx512vpopcntdq::_mm512_mask_popcnt_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vpopcntdq.rs",
    "func": "core_arch::x86::avx512vpopcntdq::_mm512_mask_popcnt_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vpopcntdq.rs",
    "func": "core_arch::x86::avx512vpopcntdq::_mm512_maskz_popcnt_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vpopcntdq.rs",
    "func": "core_arch::x86::avx512vpopcntdq::_mm512_maskz_popcnt_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vpopcntdq.rs",
    "func": "core_arch::x86::avx512vpopcntdq::_mm512_popcnt_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vpopcntdq.rs",
    "func": "core_arch::x86::avx512vpopcntdq::_mm512_popcnt_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vpopcntdq.rs",
    "func": "core_arch::x86::avx512vpopcntdq::_mm_mask_popcnt_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vpopcntdq.rs",
    "func": "core_arch::x86::avx512vpopcntdq::_mm_mask_popcnt_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vpopcntdq.rs",
    "func": "core_arch::x86::avx512vpopcntdq::_mm_maskz_popcnt_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vpopcntdq.rs",
    "func": "core_arch::x86::avx512vpopcntdq::_mm_maskz_popcnt_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vpopcntdq.rs",
    "func": "core_arch::x86::avx512vpopcntdq::_mm_popcnt_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vpopcntdq.rs",
    "func": "core_arch::x86::avx512vpopcntdq::_mm_popcnt_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avxneconvert.rs",
    "func": "core_arch::x86::avxneconvert::_mm256_cvtneps_avx_pbh"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avxneconvert.rs",
    "func": "core_arch::x86::avxneconvert::_mm_cvtneps_avx_pbh"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/bmi1.rs",
    "func": "core_arch::x86::bmi1::_andn_u32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/bmi1.rs",
    "func": "core_arch::x86::bmi1::_bextr2_u32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/bmi1.rs",
    "func": "core_arch::x86::bmi1::_bextr_u32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/bmi1.rs",
    "func": "core_arch::x86::bmi1::_blsi_u32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/bmi1.rs",
    "func": "core_arch::x86::bmi1::_blsmsk_u32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/bmi1.rs",
    "func": "core_arch::x86::bmi1::_blsr_u32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/bmi1.rs",
    "func": "core_arch::x86::bmi1::_mm_tzcnt_32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/bmi1.rs",
    "func": "core_arch::x86::bmi1::_tzcnt_u16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/bmi1.rs",
    "func": "core_arch::x86::bmi1::_tzcnt_u32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/bmi2.rs",
    "func": "core_arch::x86::bmi2::_bzhi_u32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/bmi2.rs",
    "func": "core_arch::x86::bmi2::_mulx_u32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/bmi2.rs",
    "func": "core_arch::x86::bmi2::_pdep_u32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/bmi2.rs",
    "func": "core_arch::x86::bmi2::_pext_u32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/bswap.rs",
    "func": "core_arch::x86::bswap::_bswap"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/cpuid.rs",
    "func": "<core_arch::x86::cpuid::CpuidResult as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/cpuid.rs",
    "func": "<core_arch::x86::cpuid::CpuidResult as cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/cpuid.rs",
    "func": "<core_arch::x86::cpuid::CpuidResult as cmp::Ord>::cmp"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/cpuid.rs",
    "func": "<core_arch::x86::cpuid::CpuidResult as cmp::PartialEq>::eq"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/cpuid.rs",
    "func": "<core_arch::x86::cpuid::CpuidResult as cmp::PartialOrd>::partial_cmp"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/cpuid.rs",
    "func": "core_arch::x86::cpuid::__cpuid"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/cpuid.rs",
    "func": "core_arch::x86::cpuid::__cpuid_count"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/cpuid.rs",
    "func": "core_arch::x86::cpuid::__get_cpuid_max"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/eflags.rs",
    "func": "core_arch::x86::eflags::__readeflags"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/eflags.rs",
    "func": "core_arch::x86::eflags::__writeeflags"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/f16c.rs",
    "func": "core_arch::x86::f16c::_mm256_cvtph_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/f16c.rs",
    "func": "core_arch::x86::f16c::_mm_cvtph_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/fma.rs",
    "func": "core_arch::x86::fma::_mm256_fmadd_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/fma.rs",
    "func": "core_arch::x86::fma::_mm256_fmadd_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/fma.rs",
    "func": "core_arch::x86::fma::_mm256_fmaddsub_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/fma.rs",
    "func": "core_arch::x86::fma::_mm256_fmaddsub_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/fma.rs",
    "func": "core_arch::x86::fma::_mm256_fmsub_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/fma.rs",
    "func": "core_arch::x86::fma::_mm256_fmsub_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/fma.rs",
    "func": "core_arch::x86::fma::_mm256_fmsubadd_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/fma.rs",
    "func": "core_arch::x86::fma::_mm256_fmsubadd_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/fma.rs",
    "func": "core_arch::x86::fma::_mm256_fnmadd_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/fma.rs",
    "func": "core_arch::x86::fma::_mm256_fnmadd_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/fma.rs",
    "func": "core_arch::x86::fma::_mm256_fnmsub_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/fma.rs",
    "func": "core_arch::x86::fma::_mm256_fnmsub_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/fma.rs",
    "func": "core_arch::x86::fma::_mm_fmadd_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/fma.rs",
    "func": "core_arch::x86::fma::_mm_fmadd_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/fma.rs",
    "func": "core_arch::x86::fma::_mm_fmadd_sd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/fma.rs",
    "func": "core_arch::x86::fma::_mm_fmadd_ss"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/fma.rs",
    "func": "core_arch::x86::fma::_mm_fmaddsub_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/fma.rs",
    "func": "core_arch::x86::fma::_mm_fmaddsub_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/fma.rs",
    "func": "core_arch::x86::fma::_mm_fmsub_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/fma.rs",
    "func": "core_arch::x86::fma::_mm_fmsub_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/fma.rs",
    "func": "core_arch::x86::fma::_mm_fmsub_sd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/fma.rs",
    "func": "core_arch::x86::fma::_mm_fmsub_ss"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/fma.rs",
    "func": "core_arch::x86::fma::_mm_fmsubadd_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/fma.rs",
    "func": "core_arch::x86::fma::_mm_fmsubadd_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/fma.rs",
    "func": "core_arch::x86::fma::_mm_fnmadd_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/fma.rs",
    "func": "core_arch::x86::fma::_mm_fnmadd_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/fma.rs",
    "func": "core_arch::x86::fma::_mm_fnmadd_sd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/fma.rs",
    "func": "core_arch::x86::fma::_mm_fnmadd_ss"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/fma.rs",
    "func": "core_arch::x86::fma::_mm_fnmsub_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/fma.rs",
    "func": "core_arch::x86::fma::_mm_fnmsub_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/fma.rs",
    "func": "core_arch::x86::fma::_mm_fnmsub_sd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/fma.rs",
    "func": "core_arch::x86::fma::_mm_fnmsub_ss"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/gfni.rs",
    "func": "core_arch::x86::gfni::_mm256_gf2p8mul_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/gfni.rs",
    "func": "core_arch::x86::gfni::_mm256_mask_gf2p8mul_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/gfni.rs",
    "func": "core_arch::x86::gfni::_mm256_maskz_gf2p8mul_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/gfni.rs",
    "func": "core_arch::x86::gfni::_mm512_gf2p8mul_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/gfni.rs",
    "func": "core_arch::x86::gfni::_mm512_mask_gf2p8mul_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/gfni.rs",
    "func": "core_arch::x86::gfni::_mm512_maskz_gf2p8mul_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/gfni.rs",
    "func": "core_arch::x86::gfni::_mm_gf2p8mul_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/gfni.rs",
    "func": "core_arch::x86::gfni::_mm_mask_gf2p8mul_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/gfni.rs",
    "func": "core_arch::x86::gfni::_mm_maskz_gf2p8mul_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/kl.rs",
    "func": "core_arch::x86::kl::_mm_loadiwkey"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "<core_arch::x86::bf16 as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::<impl core_arch::simd::f16x16>::as_m256h"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::<impl core_arch::simd::f16x32>::as_m512h"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::<impl core_arch::simd::f16x8>::as_m128h"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::<impl core_arch::simd::f32x16>::as_m512"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::<impl core_arch::simd::f32x4>::as_m128"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::<impl core_arch::simd::f32x8>::as_m256"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::<impl core_arch::simd::f64x2>::as_m128d"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::<impl core_arch::simd::f64x4>::as_m256d"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::<impl core_arch::simd::f64x8>::as_m512d"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::<impl core_arch::simd::i16x16>::as_m256bh"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::<impl core_arch::simd::i16x16>::as_m256i"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::<impl core_arch::simd::i16x32>::as_m512bh"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::<impl core_arch::simd::i16x32>::as_m512i"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::<impl core_arch::simd::i16x8>::as_m128bh"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::<impl core_arch::simd::i16x8>::as_m128i"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::<impl core_arch::simd::i32x16>::as_m512bh"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::<impl core_arch::simd::i32x16>::as_m512i"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::<impl core_arch::simd::i32x4>::as_m128bh"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::<impl core_arch::simd::i32x4>::as_m128i"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::<impl core_arch::simd::i32x8>::as_m256bh"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::<impl core_arch::simd::i32x8>::as_m256i"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::<impl core_arch::simd::i64x2>::as_m128i"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::<impl core_arch::simd::i64x4>::as_m256i"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::<impl core_arch::simd::i64x8>::as_m512i"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::<impl core_arch::simd::i8x16>::as_m128i"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::<impl core_arch::simd::i8x32>::as_m256i"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::<impl core_arch::simd::i8x64>::as_m512i"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::<impl core_arch::simd::u16x16>::as_m256bh"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::<impl core_arch::simd::u16x16>::as_m256i"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::<impl core_arch::simd::u16x32>::as_m512bh"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::<impl core_arch::simd::u16x32>::as_m512i"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::<impl core_arch::simd::u16x8>::as_m128bh"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::<impl core_arch::simd::u16x8>::as_m128i"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::<impl core_arch::simd::u32x16>::as_m512bh"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::<impl core_arch::simd::u32x16>::as_m512i"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::<impl core_arch::simd::u32x4>::as_m128bh"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::<impl core_arch::simd::u32x4>::as_m128i"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::<impl core_arch::simd::u32x8>::as_m256bh"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::<impl core_arch::simd::u32x8>::as_m256i"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::<impl core_arch::simd::u64x2>::as_m128i"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::<impl core_arch::simd::u64x4>::as_m256i"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::<impl core_arch::simd::u64x8>::as_m512i"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::<impl core_arch::simd::u8x16>::as_m128i"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::<impl core_arch::simd::u8x32>::as_m256i"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::<impl core_arch::simd::u8x64>::as_m512i"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::__m128::as_f32x4"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::__m128bh::as_i16x8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::__m128bh::as_i32x4"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::__m128bh::as_u16x8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::__m128bh::as_u32x4"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::__m128d::as_f64x2"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::__m128h::as_f16x8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::__m128i::as_i16x8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::__m128i::as_i32x4"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::__m128i::as_i64x2"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::__m128i::as_i8x16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::__m128i::as_u16x8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::__m128i::as_u32x4"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::__m128i::as_u64x2"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::__m128i::as_u8x16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::__m256::as_f32x8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::__m256bh::as_i16x16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::__m256bh::as_i32x8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::__m256bh::as_u16x16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::__m256bh::as_u32x8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::__m256d::as_f64x4"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::__m256h::as_f16x16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::__m256i::as_i16x16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::__m256i::as_i32x8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::__m256i::as_i64x4"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::__m256i::as_i8x32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::__m256i::as_u16x16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::__m256i::as_u32x8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::__m256i::as_u64x4"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::__m256i::as_u8x32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::__m512::as_f32x16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::__m512bh::as_i16x32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::__m512bh::as_i32x16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::__m512bh::as_u16x32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::__m512bh::as_u32x16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::__m512d::as_f64x8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::__m512h::as_f16x32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::__m512i::as_i16x32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::__m512i::as_i32x16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::__m512i::as_i64x8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::__m512i::as_i8x64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::__m512i::as_u16x32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::__m512i::as_u32x16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::__m512i::as_u64x8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::__m512i::as_u8x64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::bf16::from_bits"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::bf16::to_bits"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/rdrand.rs",
    "func": "core_arch::x86::rdrand::_rdrand16_step"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/rdrand.rs",
    "func": "core_arch::x86::rdrand::_rdrand32_step"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/rdrand.rs",
    "func": "core_arch::x86::rdrand::_rdseed16_step"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/rdrand.rs",
    "func": "core_arch::x86::rdrand::_rdseed32_step"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/rdtsc.rs",
    "func": "core_arch::x86::rdtsc::_rdtsc"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/rtm.rs",
    "func": "core_arch::x86::rtm::_xabort_code"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/rtm.rs",
    "func": "core_arch::x86::rtm::_xbegin"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/rtm.rs",
    "func": "core_arch::x86::rtm::_xend"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/rtm.rs",
    "func": "core_arch::x86::rtm::_xtest"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sha.rs",
    "func": "core_arch::x86::sha::_mm256_sha512msg1_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sha.rs",
    "func": "core_arch::x86::sha::_mm256_sha512msg2_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sha.rs",
    "func": "core_arch::x86::sha::_mm256_sha512rnds2_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sha.rs",
    "func": "core_arch::x86::sha::_mm256_sm4key4_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sha.rs",
    "func": "core_arch::x86::sha::_mm256_sm4rnds4_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sha.rs",
    "func": "core_arch::x86::sha::_mm_sha1msg1_epu32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sha.rs",
    "func": "core_arch::x86::sha::_mm_sha1msg2_epu32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sha.rs",
    "func": "core_arch::x86::sha::_mm_sha1nexte_epu32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sha.rs",
    "func": "core_arch::x86::sha::_mm_sha256msg1_epu32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sha.rs",
    "func": "core_arch::x86::sha::_mm_sha256msg2_epu32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sha.rs",
    "func": "core_arch::x86::sha::_mm_sha256rnds2_epu32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sha.rs",
    "func": "core_arch::x86::sha::_mm_sm3msg1_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sha.rs",
    "func": "core_arch::x86::sha::_mm_sm3msg2_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sha.rs",
    "func": "core_arch::x86::sha::_mm_sm4key4_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sha.rs",
    "func": "core_arch::x86::sha::_mm_sm4rnds4_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_MM_GET_EXCEPTION_MASK"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_MM_GET_EXCEPTION_STATE"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_MM_GET_FLUSH_ZERO_MODE"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_MM_GET_ROUNDING_MODE"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_MM_SET_EXCEPTION_MASK"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_MM_SET_EXCEPTION_STATE"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_MM_SET_FLUSH_ZERO_MODE"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_MM_SET_ROUNDING_MODE"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_MM_SHUFFLE"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_MM_TRANSPOSE4_PS"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_mm_add_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_mm_add_ss"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_mm_and_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_mm_andnot_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_mm_cmpeq_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_mm_cmpeq_ss"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_mm_cmpge_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_mm_cmpge_ss"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_mm_cmpgt_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_mm_cmpgt_ss"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_mm_cmple_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_mm_cmple_ss"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_mm_cmplt_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_mm_cmplt_ss"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_mm_cmpneq_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_mm_cmpneq_ss"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_mm_cmpnge_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_mm_cmpnge_ss"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_mm_cmpngt_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_mm_cmpngt_ss"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_mm_cmpnle_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_mm_cmpnle_ss"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_mm_cmpnlt_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_mm_cmpnlt_ss"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_mm_cmpord_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_mm_cmpord_ss"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_mm_cmpunord_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_mm_cmpunord_ss"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_mm_comieq_ss"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_mm_comige_ss"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_mm_comigt_ss"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_mm_comile_ss"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_mm_comilt_ss"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_mm_comineq_ss"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_mm_cvt_si2ss"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_mm_cvt_ss2si"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_mm_cvtsi32_ss"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_mm_cvtss_f32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_mm_cvtss_si32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_mm_cvtt_ss2si"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_mm_cvttss_si32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_mm_div_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_mm_div_ss"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_mm_getcsr"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_mm_max_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_mm_max_ss"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_mm_min_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_mm_min_ss"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_mm_move_ss"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_mm_movehl_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_mm_movelh_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_mm_movemask_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_mm_mul_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_mm_mul_ss"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_mm_or_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_mm_rcp_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_mm_rcp_ss"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_mm_rsqrt_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_mm_rsqrt_ss"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_mm_set1_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_mm_set_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_mm_set_ps1"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_mm_set_ss"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_mm_setcsr"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_mm_setr_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_mm_setzero_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_mm_sfence"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_mm_sqrt_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_mm_sqrt_ss"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_mm_sub_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_mm_sub_ss"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_mm_ucomieq_ss"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_mm_ucomige_ss"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_mm_ucomigt_ss"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_mm_ucomile_ss"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_mm_ucomilt_ss"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_mm_ucomineq_ss"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_mm_undefined_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_mm_unpackhi_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_mm_unpacklo_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_mm_xor_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_add_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_add_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_add_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_add_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_add_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_add_sd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_adds_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_adds_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_adds_epu16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_adds_epu8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_and_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_and_si128"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_andnot_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_andnot_si128"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_avg_epu16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_avg_epu8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_castpd_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_castpd_si128"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_castps_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_castps_si128"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_castsi128_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_castsi128_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_cmpeq_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_cmpeq_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_cmpeq_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_cmpeq_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_cmpeq_sd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_cmpge_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_cmpge_sd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_cmpgt_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_cmpgt_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_cmpgt_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_cmpgt_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_cmpgt_sd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_cmple_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_cmple_sd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_cmplt_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_cmplt_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_cmplt_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_cmplt_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_cmplt_sd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_cmpneq_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_cmpneq_sd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_cmpnge_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_cmpnge_sd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_cmpngt_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_cmpngt_sd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_cmpnle_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_cmpnle_sd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_cmpnlt_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_cmpnlt_sd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_cmpord_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_cmpord_sd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_cmpunord_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_cmpunord_sd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_comieq_sd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_comige_sd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_comigt_sd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_comile_sd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_comilt_sd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_comineq_sd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_cvtepi32_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_cvtepi32_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_cvtpd_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_cvtpd_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_cvtps_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_cvtps_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_cvtsd_f64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_cvtsd_si32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_cvtsd_ss"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_cvtsi128_si32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_cvtsi32_sd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_cvtsi32_si128"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_cvtss_sd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_cvttpd_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_cvttps_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_cvttsd_si32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_div_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_div_sd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_lfence"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_madd_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_max_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_max_epu8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_max_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_max_sd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_mfence"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_min_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_min_epu8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_min_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_min_sd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_move_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_move_sd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_movemask_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_movemask_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_mul_epu32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_mul_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_mul_sd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_mulhi_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_mulhi_epu16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_mullo_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_or_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_or_si128"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_packs_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_packs_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_packus_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_pause"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_sad_epu8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_set1_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_set1_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_set1_epi64x"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_set1_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_set1_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_set_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_set_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_set_epi64x"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_set_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_set_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_set_pd1"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_set_sd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_setr_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_setr_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_setr_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_setr_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_setzero_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_setzero_si128"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_sll_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_sll_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_sll_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_slli_si128_impl::mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_sqrt_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_sqrt_sd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_sra_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_sra_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_srl_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_srl_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_srl_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_srli_si128_impl::mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_sub_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_sub_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_sub_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_sub_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_sub_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_sub_sd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_subs_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_subs_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_subs_epu16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_subs_epu8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_ucomieq_sd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_ucomige_sd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_ucomigt_sd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_ucomile_sd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_ucomilt_sd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_ucomineq_sd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_undefined_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_undefined_si128"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_unpackhi_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_unpackhi_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_unpackhi_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_unpackhi_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_unpackhi_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_unpacklo_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_unpacklo_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_unpacklo_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_unpacklo_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_unpacklo_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_xor_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_xor_si128"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse3.rs",
    "func": "core_arch::x86::sse3::_mm_addsub_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse3.rs",
    "func": "core_arch::x86::sse3::_mm_addsub_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse3.rs",
    "func": "core_arch::x86::sse3::_mm_hadd_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse3.rs",
    "func": "core_arch::x86::sse3::_mm_hadd_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse3.rs",
    "func": "core_arch::x86::sse3::_mm_hsub_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse3.rs",
    "func": "core_arch::x86::sse3::_mm_hsub_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse3.rs",
    "func": "core_arch::x86::sse3::_mm_movedup_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse3.rs",
    "func": "core_arch::x86::sse3::_mm_movehdup_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse3.rs",
    "func": "core_arch::x86::sse3::_mm_moveldup_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse41.rs",
    "func": "core_arch::x86::sse41::_mm_blendv_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse41.rs",
    "func": "core_arch::x86::sse41::_mm_blendv_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse41.rs",
    "func": "core_arch::x86::sse41::_mm_blendv_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse41.rs",
    "func": "core_arch::x86::sse41::_mm_ceil_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse41.rs",
    "func": "core_arch::x86::sse41::_mm_ceil_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse41.rs",
    "func": "core_arch::x86::sse41::_mm_ceil_sd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse41.rs",
    "func": "core_arch::x86::sse41::_mm_ceil_ss"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse41.rs",
    "func": "core_arch::x86::sse41::_mm_cmpeq_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse41.rs",
    "func": "core_arch::x86::sse41::_mm_cvtepi16_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse41.rs",
    "func": "core_arch::x86::sse41::_mm_cvtepi16_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse41.rs",
    "func": "core_arch::x86::sse41::_mm_cvtepi32_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse41.rs",
    "func": "core_arch::x86::sse41::_mm_cvtepi8_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse41.rs",
    "func": "core_arch::x86::sse41::_mm_cvtepi8_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse41.rs",
    "func": "core_arch::x86::sse41::_mm_cvtepi8_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse41.rs",
    "func": "core_arch::x86::sse41::_mm_cvtepu16_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse41.rs",
    "func": "core_arch::x86::sse41::_mm_cvtepu16_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse41.rs",
    "func": "core_arch::x86::sse41::_mm_cvtepu32_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse41.rs",
    "func": "core_arch::x86::sse41::_mm_cvtepu8_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse41.rs",
    "func": "core_arch::x86::sse41::_mm_cvtepu8_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse41.rs",
    "func": "core_arch::x86::sse41::_mm_cvtepu8_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse41.rs",
    "func": "core_arch::x86::sse41::_mm_floor_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse41.rs",
    "func": "core_arch::x86::sse41::_mm_floor_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse41.rs",
    "func": "core_arch::x86::sse41::_mm_floor_sd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse41.rs",
    "func": "core_arch::x86::sse41::_mm_floor_ss"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse41.rs",
    "func": "core_arch::x86::sse41::_mm_max_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse41.rs",
    "func": "core_arch::x86::sse41::_mm_max_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse41.rs",
    "func": "core_arch::x86::sse41::_mm_max_epu16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse41.rs",
    "func": "core_arch::x86::sse41::_mm_max_epu32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse41.rs",
    "func": "core_arch::x86::sse41::_mm_min_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse41.rs",
    "func": "core_arch::x86::sse41::_mm_min_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse41.rs",
    "func": "core_arch::x86::sse41::_mm_min_epu16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse41.rs",
    "func": "core_arch::x86::sse41::_mm_min_epu32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse41.rs",
    "func": "core_arch::x86::sse41::_mm_minpos_epu16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse41.rs",
    "func": "core_arch::x86::sse41::_mm_mul_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse41.rs",
    "func": "core_arch::x86::sse41::_mm_mullo_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse41.rs",
    "func": "core_arch::x86::sse41::_mm_packus_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse41.rs",
    "func": "core_arch::x86::sse41::_mm_test_all_ones"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse41.rs",
    "func": "core_arch::x86::sse41::_mm_test_all_zeros"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse41.rs",
    "func": "core_arch::x86::sse41::_mm_test_mix_ones_zeros"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse41.rs",
    "func": "core_arch::x86::sse41::_mm_testc_si128"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse41.rs",
    "func": "core_arch::x86::sse41::_mm_testnzc_si128"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse41.rs",
    "func": "core_arch::x86::sse41::_mm_testz_si128"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse42.rs",
    "func": "core_arch::x86::sse42::_mm_cmpgt_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse42.rs",
    "func": "core_arch::x86::sse42::_mm_crc32_u16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse42.rs",
    "func": "core_arch::x86::sse42::_mm_crc32_u32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse42.rs",
    "func": "core_arch::x86::sse42::_mm_crc32_u8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse4a.rs",
    "func": "core_arch::x86::sse4a::_mm_extract_si64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse4a.rs",
    "func": "core_arch::x86::sse4a::_mm_insert_si64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/ssse3.rs",
    "func": "core_arch::x86::ssse3::_mm_abs_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/ssse3.rs",
    "func": "core_arch::x86::ssse3::_mm_abs_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/ssse3.rs",
    "func": "core_arch::x86::ssse3::_mm_abs_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/ssse3.rs",
    "func": "core_arch::x86::ssse3::_mm_alignr_epi8::mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/ssse3.rs",
    "func": "core_arch::x86::ssse3::_mm_hadd_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/ssse3.rs",
    "func": "core_arch::x86::ssse3::_mm_hadd_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/ssse3.rs",
    "func": "core_arch::x86::ssse3::_mm_hadds_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/ssse3.rs",
    "func": "core_arch::x86::ssse3::_mm_hsub_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/ssse3.rs",
    "func": "core_arch::x86::ssse3::_mm_hsub_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/ssse3.rs",
    "func": "core_arch::x86::ssse3::_mm_hsubs_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/ssse3.rs",
    "func": "core_arch::x86::ssse3::_mm_maddubs_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/ssse3.rs",
    "func": "core_arch::x86::ssse3::_mm_mulhrs_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/ssse3.rs",
    "func": "core_arch::x86::ssse3::_mm_shuffle_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/ssse3.rs",
    "func": "core_arch::x86::ssse3::_mm_sign_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/ssse3.rs",
    "func": "core_arch::x86::ssse3::_mm_sign_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/ssse3.rs",
    "func": "core_arch::x86::ssse3::_mm_sign_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/tbm.rs",
    "func": "core_arch::x86::tbm::_blcfill_u32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/tbm.rs",
    "func": "core_arch::x86::tbm::_blci_u32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/tbm.rs",
    "func": "core_arch::x86::tbm::_blcic_u32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/tbm.rs",
    "func": "core_arch::x86::tbm::_blcmsk_u32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/tbm.rs",
    "func": "core_arch::x86::tbm::_blcs_u32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/tbm.rs",
    "func": "core_arch::x86::tbm::_blsfill_u32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/tbm.rs",
    "func": "core_arch::x86::tbm::_blsic_u32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/tbm.rs",
    "func": "core_arch::x86::tbm::_t1mskc_u32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/tbm.rs",
    "func": "core_arch::x86::tbm::_tzmsk_u32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/vaes.rs",
    "func": "core_arch::x86::vaes::_mm256_aesdec_epi128"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/vaes.rs",
    "func": "core_arch::x86::vaes::_mm256_aesdeclast_epi128"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/vaes.rs",
    "func": "core_arch::x86::vaes::_mm256_aesenc_epi128"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/vaes.rs",
    "func": "core_arch::x86::vaes::_mm256_aesenclast_epi128"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/vaes.rs",
    "func": "core_arch::x86::vaes::_mm512_aesdec_epi128"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/vaes.rs",
    "func": "core_arch::x86::vaes::_mm512_aesdeclast_epi128"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/vaes.rs",
    "func": "core_arch::x86::vaes::_mm512_aesenc_epi128"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/vaes.rs",
    "func": "core_arch::x86::vaes::_mm512_aesenclast_epi128"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/xsave.rs",
    "func": "core_arch::x86::xsave::_xgetbv"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/xsave.rs",
    "func": "core_arch::x86::xsave::_xsetbv"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86_64/abm.rs",
    "func": "core_arch::x86_64::abm::_lzcnt_u64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86_64/abm.rs",
    "func": "core_arch::x86_64::abm::_popcnt64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86_64/adx.rs",
    "func": "core_arch::x86_64::adx::_addcarry_u64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86_64/adx.rs",
    "func": "core_arch::x86_64::adx::_addcarryx_u64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86_64/adx.rs",
    "func": "core_arch::x86_64::adx::_subborrow_u64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86_64/amx.rs",
    "func": "core_arch::x86_64::amx::_tile_release"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86_64/avx512bw.rs",
    "func": "core_arch::x86_64::avx512bw::_cvtmask64_u64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86_64/avx512bw.rs",
    "func": "core_arch::x86_64::avx512bw::_cvtu64_mask64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86_64/avx512f.rs",
    "func": "core_arch::x86_64::avx512f::_mm_cvti64_sd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86_64/avx512f.rs",
    "func": "core_arch::x86_64::avx512f::_mm_cvti64_ss"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86_64/avx512f.rs",
    "func": "core_arch::x86_64::avx512f::_mm_cvtsd_i64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86_64/avx512f.rs",
    "func": "core_arch::x86_64::avx512f::_mm_cvtsd_u64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86_64/avx512f.rs",
    "func": "core_arch::x86_64::avx512f::_mm_cvtss_i64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86_64/avx512f.rs",
    "func": "core_arch::x86_64::avx512f::_mm_cvtss_u64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86_64/avx512f.rs",
    "func": "core_arch::x86_64::avx512f::_mm_cvttsd_i64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86_64/avx512f.rs",
    "func": "core_arch::x86_64::avx512f::_mm_cvttsd_u64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86_64/avx512f.rs",
    "func": "core_arch::x86_64::avx512f::_mm_cvttss_i64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86_64/avx512f.rs",
    "func": "core_arch::x86_64::avx512f::_mm_cvttss_u64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86_64/avx512f.rs",
    "func": "core_arch::x86_64::avx512f::_mm_cvtu64_sd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86_64/avx512f.rs",
    "func": "core_arch::x86_64::avx512f::_mm_cvtu64_ss"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86_64/avx512fp16.rs",
    "func": "core_arch::x86_64::avx512fp16::_mm_cvti64_sh"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86_64/avx512fp16.rs",
    "func": "core_arch::x86_64::avx512fp16::_mm_cvtsh_i64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86_64/avx512fp16.rs",
    "func": "core_arch::x86_64::avx512fp16::_mm_cvtsh_u64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86_64/avx512fp16.rs",
    "func": "core_arch::x86_64::avx512fp16::_mm_cvttsh_i64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86_64/avx512fp16.rs",
    "func": "core_arch::x86_64::avx512fp16::_mm_cvttsh_u64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86_64/avx512fp16.rs",
    "func": "core_arch::x86_64::avx512fp16::_mm_cvtu64_sh"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86_64/bmi.rs",
    "func": "core_arch::x86_64::bmi::_andn_u64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86_64/bmi.rs",
    "func": "core_arch::x86_64::bmi::_bextr2_u64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86_64/bmi.rs",
    "func": "core_arch::x86_64::bmi::_bextr_u64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86_64/bmi.rs",
    "func": "core_arch::x86_64::bmi::_blsi_u64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86_64/bmi.rs",
    "func": "core_arch::x86_64::bmi::_blsmsk_u64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86_64/bmi.rs",
    "func": "core_arch::x86_64::bmi::_blsr_u64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86_64/bmi.rs",
    "func": "core_arch::x86_64::bmi::_mm_tzcnt_64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86_64/bmi.rs",
    "func": "core_arch::x86_64::bmi::_tzcnt_u64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86_64/bmi2.rs",
    "func": "core_arch::x86_64::bmi2::_bzhi_u64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86_64/bmi2.rs",
    "func": "core_arch::x86_64::bmi2::_mulx_u64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86_64/bmi2.rs",
    "func": "core_arch::x86_64::bmi2::_pdep_u64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86_64/bmi2.rs",
    "func": "core_arch::x86_64::bmi2::_pext_u64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86_64/bswap.rs",
    "func": "core_arch::x86_64::bswap::_bswap64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86_64/rdrand.rs",
    "func": "core_arch::x86_64::rdrand::_rdrand64_step"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86_64/rdrand.rs",
    "func": "core_arch::x86_64::rdrand::_rdseed64_step"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86_64/sse.rs",
    "func": "core_arch::x86_64::sse::_mm_cvtsi64_ss"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86_64/sse.rs",
    "func": "core_arch::x86_64::sse::_mm_cvtss_si64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86_64/sse.rs",
    "func": "core_arch::x86_64::sse::_mm_cvttss_si64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86_64/sse2.rs",
    "func": "core_arch::x86_64::sse2::_mm_cvtsd_si64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86_64/sse2.rs",
    "func": "core_arch::x86_64::sse2::_mm_cvtsd_si64x"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86_64/sse2.rs",
    "func": "core_arch::x86_64::sse2::_mm_cvtsi128_si64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86_64/sse2.rs",
    "func": "core_arch::x86_64::sse2::_mm_cvtsi128_si64x"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86_64/sse2.rs",
    "func": "core_arch::x86_64::sse2::_mm_cvtsi64_sd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86_64/sse2.rs",
    "func": "core_arch::x86_64::sse2::_mm_cvtsi64_si128"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86_64/sse2.rs",
    "func": "core_arch::x86_64::sse2::_mm_cvtsi64x_sd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86_64/sse2.rs",
    "func": "core_arch::x86_64::sse2::_mm_cvtsi64x_si128"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86_64/sse2.rs",
    "func": "core_arch::x86_64::sse2::_mm_cvttsd_si64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86_64/sse2.rs",
    "func": "core_arch::x86_64::sse2::_mm_cvttsd_si64x"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86_64/sse42.rs",
    "func": "core_arch::x86_64::sse42::_mm_crc32_u64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86_64/tbm.rs",
    "func": "core_arch::x86_64::tbm::_blcfill_u64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86_64/tbm.rs",
    "func": "core_arch::x86_64::tbm::_blci_u64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86_64/tbm.rs",
    "func": "core_arch::x86_64::tbm::_blcic_u64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86_64/tbm.rs",
    "func": "core_arch::x86_64::tbm::_blcmsk_u64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86_64/tbm.rs",
    "func": "core_arch::x86_64::tbm::_blcs_u64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86_64/tbm.rs",
    "func": "core_arch::x86_64::tbm::_blsfill_u64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86_64/tbm.rs",
    "func": "core_arch::x86_64::tbm::_blsic_u64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86_64/tbm.rs",
    "func": "core_arch::x86_64::tbm::_t1mskc_u64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86_64/tbm.rs",
    "func": "core_arch::x86_64::tbm::_tzmsk_u64"
  },
  {
    "file": "unwind/src/libunwind.rs",
    "func": "<libunwind::_Unwind_Reason_Code as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "unwind/src/libunwind.rs",
    "func": "<libunwind::_Unwind_Reason_Code as rustc_std_workspace_core::cmp::PartialEq>::eq"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/alloc.rs",
    "func": "<alloc::Global as core::alloc::Allocator>::allocate",
    "hash": "1141955903753897517014625167327847791907"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/alloc.rs",
    "func": "<alloc::Global as core::alloc::Allocator>::allocate_zeroed",
    "hash": "96540308768482821532855729325539541075"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/alloc.rs",
    "func": "<alloc::Global as core::alloc::Allocator>::deallocate",
    "hash": "394899740451847047017644777761427403196"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/alloc.rs",
    "func": "<alloc::Global as core::alloc::Allocator>::grow",
    "hash": "143171743503300621612267920995184899355"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/alloc.rs",
    "func": "<alloc::Global as core::alloc::Allocator>::grow_zeroed",
    "hash": "274917975074019154013023798527849617453"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/alloc.rs",
    "func": "<alloc::Global as core::alloc::Allocator>::shrink",
    "hash": "39167793252333032129347795364889021693"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/alloc.rs",
    "func": "<alloc::Global as core::clone::Clone>::clone",
    "hash": "188618813038227315415644954775386001916"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/alloc.rs",
    "func": "<alloc::Global as core::default::Default>::default",
    "hash": "176696082822432675782692881376305731226"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/alloc.rs",
    "func": "alloc::Global::alloc_impl",
    "hash": "1170796756882490861817329164502952420199"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/alloc.rs",
    "func": "alloc::Global::grow_impl",
    "hash": "881594969974767412517171785728766457206"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/alloc.rs",
    "func": "alloc::__alloc_error_handler::__rdl_oom",
    "hash": "344151969821129768416310846417562975845"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/alloc.rs",
    "func": "alloc::alloc",
    "hash": "1376541346679052968213576567834425860228"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/alloc.rs",
    "func": "alloc::alloc_zeroed",
    "hash": "1549398485481521168517137548698896520595"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/alloc.rs",
    "func": "alloc::exchange_malloc",
    "hash": "1270932603880828507015560870038209787189"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/alloc.rs",
    "func": "alloc::handle_alloc_error",
    "hash": "593523720810475000712660203952371323969"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/alloc.rs",
    "func": "alloc::handle_alloc_error::ct_error",
    "hash": "852884122469291582314748938350048483548"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/alloc.rs",
    "func": "alloc::handle_alloc_error::rt_error",
    "hash": "140493508095315886339161612115402293715"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/boxed.rs",
    "func": "<boxed::Box<str> as core::default::Default>::default",
    "hash": "14856800887710591993357915319728027847"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/boxed/thin.rs",
    "func": "boxed::thin::WithHeader::<H>::new_unsize_zst::max",
    "hash": "1214283294772387410513656322816772160048"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/bstr.rs",
    "func": "<bstr::ByteString as core::default::Default>::default",
    "hash": "45358225003190044658397087633477427533"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/collections/binary_heap/mod.rs",
    "func": "collections::binary_heap::BinaryHeap::<T, A>::rebuild_tail::log2_fast",
    "hash": "1034739267880872336318436903717552726778"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/collections/btree/map.rs",
    "func": "<collections::btree::map::UnorderedKeyError as core::clone::Clone>::clone",
    "hash": "1150860557635224211118086471311025313226"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/collections/btree/map.rs",
    "func": "<collections::btree::map::UnorderedKeyError as core::cmp::Eq>::assert_receiver_is_total_eq",
    "hash": "526025963936043764214926126682659565302"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/collections/btree/map.rs",
    "func": "<collections::btree::map::UnorderedKeyError as core::cmp::PartialEq>::eq",
    "hash": "86210571617703808639506184036730667764"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/collections/btree/mem.rs",
    "func": "<collections::btree::mem::replace::PanicGuard as core::ops::Drop>::drop",
    "hash": "106041551097258177951361565161842063386"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/collections/btree/node.rs",
    "func": "collections::btree::node::splitpoint",
    "hash": "164319979920894964069791300187578496271"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/collections/btree/set_val.rs",
    "func": "<collections::btree::set_val::SetValZST as collections::btree::set_val::IsSetVal>::is_set_val",
    "hash": "79761222458285267608190469009755843990"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/collections/btree/set_val.rs",
    "func": "<collections::btree::set_val::SetValZST as core::clone::Clone>::clone",
    "hash": "15352058463492922652170278573860929499"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/collections/btree/set_val.rs",
    "func": "<collections::btree::set_val::SetValZST as core::cmp::Eq>::assert_receiver_is_total_eq",
    "hash": "147055796735940565482009025302173003778"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/collections/btree/set_val.rs",
    "func": "<collections::btree::set_val::SetValZST as core::cmp::Ord>::cmp",
    "hash": "605984565890044805716043055540444426650"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/collections/btree/set_val.rs",
    "func": "<collections::btree::set_val::SetValZST as core::cmp::PartialEq>::eq",
    "hash": "47118706139193443235635944773369221202"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/collections/btree/set_val.rs",
    "func": "<collections::btree::set_val::SetValZST as core::cmp::PartialOrd>::partial_cmp",
    "hash": "96307004548983503186372644330605262617"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/collections/btree/set_val.rs",
    "func": "<collections::btree::set_val::SetValZST as core::default::Default>::default",
    "hash": "883878486470611769410893299160888045942"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/collections/linked_list.rs",
    "func": "collections::linked_list::assert_covariance",
    "hash": "139024699871569484909137643028803113908"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/collections/mod.rs",
    "func": "<collections::TryReserveError as core::clone::Clone>::clone",
    "hash": "67307081462067458518228659530353215819"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/collections/mod.rs",
    "func": "<collections::TryReserveError as core::cmp::Eq>::assert_receiver_is_total_eq",
    "hash": "601246688718493786517705802297950835630"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/collections/mod.rs",
    "func": "<collections::TryReserveError as core::cmp::PartialEq>::eq",
    "hash": "416107742932593270512206529348530756443"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/collections/mod.rs",
    "func": "<collections::TryReserveError as core::convert::From<collections::TryReserveErrorKind>>::from",
    "hash": "1806196275982253069117281718696114376262"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/collections/mod.rs",
    "func": "<collections::TryReserveErrorKind as core::clone::Clone>::clone",
    "hash": "1029563312923393900611914925131263606627"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/collections/mod.rs",
    "func": "<collections::TryReserveErrorKind as core::cmp::Eq>::assert_receiver_is_total_eq",
    "hash": "30843355880797103155581040730416039276"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/collections/mod.rs",
    "func": "<collections::TryReserveErrorKind as core::cmp::PartialEq>::eq",
    "hash": "18085859003630016463445829560899280373"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/collections/mod.rs",
    "func": "<collections::TryReserveErrorKind as core::convert::From<core::alloc::LayoutError>>::from",
    "hash": "9903892076387741271622226004455942430"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/collections/mod.rs",
    "func": "collections::TryReserveError::kind",
    "hash": "418064438806156603612250954936421482396"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/collections/vec_deque/mod.rs",
    "func": "collections::vec_deque::verify::check_vecdeque_swap",
    "hash": "1767766264421952135714692912618106014787",
    "proof_kind": "Standard"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/collections/vec_deque/mod.rs",
    "func": "collections::vec_deque::wrap_index",
    "hash": "173042205768032610075203172605839594717"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/ffi/c_str.rs",
    "func": "<ffi::c_str::CString as core::default::Default>::default",
    "hash": "1616685207904790836916267788242745585106"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/ffi/c_str.rs",
    "func": "<ffi::c_str::FromBytesWithNulErrorKind as core::clone::Clone>::clone",
    "hash": "178916550743863733364659761274070969968"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/ffi/c_str.rs",
    "func": "<ffi::c_str::FromBytesWithNulErrorKind as core::cmp::Eq>::assert_receiver_is_total_eq",
    "hash": "169134587720057382264356999721097941718"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/ffi/c_str.rs",
    "func": "<ffi::c_str::FromBytesWithNulErrorKind as core::cmp::PartialEq>::eq",
    "hash": "10053784383016880137131169174929694455"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/ffi/c_str.rs",
    "func": "ffi::c_str::<impl core::default::Default for boxed::Box<core::ffi::CStr>>::default",
    "hash": "136843577186129073774422058901553840322"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/ffi/c_str.rs",
    "func": "ffi::c_str::<impl core::default::Default for rc::Rc<core::ffi::CStr>>::default",
    "hash": "8762602048422226524972212149556272461"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/raw_vec/mod.rs",
    "func": "raw_vec::RawVecInner::with_capacity",
    "hash": "40248904408582099625424668567566474194"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/raw_vec/mod.rs",
    "func": "raw_vec::alloc_guard",
    "hash": "345677802933696428310596231819274392380"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/raw_vec/mod.rs",
    "func": "raw_vec::capacity_overflow",
    "hash": "1608126128991884205014632356534797510306"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/raw_vec/mod.rs",
    "func": "raw_vec::handle_error",
    "hash": "47317165689800636576984679401220719271"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/raw_vec/mod.rs",
    "func": "raw_vec::layout_array",
    "hash": "816272336489707843515791886556519578691"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/raw_vec/mod.rs",
    "func": "raw_vec::min_non_zero_cap",
    "hash": "65055801994553461588615672273314638017"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/rc.rs",
    "func": "<rc::Rc<str> as core::default::Default>::default",
    "hash": "17860836805283326697021837406826530139"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/rc.rs",
    "func": "rc::data_offset_align",
    "hash": "484411735138548681313387816401471475653"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/rc.rs",
    "func": "rc::rc_inner_layout_for_value_layout",
    "hash": "929409724306803992317043118514718937716"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/string.rs",
    "func": "<bool as string::SpecToString>::spec_to_string",
    "hash": "67975305847984332668550120452937929731"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/string.rs",
    "func": "<char as string::SpecToString>::spec_to_string",
    "hash": "1413495594564040612915779088604766340606"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/string.rs",
    "func": "<core::ascii::Char as string::SpecToString>::spec_to_string",
    "hash": "246070731382179296811102082722103755750"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/string.rs",
    "func": "<i128 as string::SpecToString>::spec_to_string",
    "hash": "1362879315953617225114190352184722804611"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/string.rs",
    "func": "<i16 as string::SpecToString>::spec_to_string",
    "hash": "49212082910033966032145849992258783515"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/string.rs",
    "func": "<i32 as string::SpecToString>::spec_to_string",
    "hash": "1074789730884778591117125322071610789477"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/string.rs",
    "func": "<i64 as string::SpecToString>::spec_to_string",
    "hash": "43611275453518258706172881254981596304"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/string.rs",
    "func": "<i8 as string::SpecToString>::spec_to_string",
    "hash": "133698825763477106788009834428394739733"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/string.rs",
    "func": "<isize as string::SpecToString>::spec_to_string",
    "hash": "155014514765601211779111484224558214597"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/string.rs",
    "func": "<string::FromUtf16Error as core::error::Error>::description",
    "hash": "151753653714415798327334027468080725941"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/string.rs",
    "func": "<string::String as core::convert::From<char>>::from",
    "hash": "102245605235857481429448697773108850798"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/string.rs",
    "func": "<string::String as core::default::Default>::default",
    "hash": "79887214921369405519503094514328680621"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/string.rs",
    "func": "<u128 as string::SpecToString>::spec_to_string",
    "hash": "45223034822600044735269426984349420758"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/string.rs",
    "func": "<u16 as string::SpecToString>::spec_to_string",
    "hash": "239599709981116558112667160560749135246"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/string.rs",
    "func": "<u32 as string::SpecToString>::spec_to_string",
    "hash": "954346466635125359516639782761705010305"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/string.rs",
    "func": "<u64 as string::SpecToString>::spec_to_string",
    "hash": "30464032205093366124894196648990321302"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/string.rs",
    "func": "<u8 as string::SpecToString>::spec_to_string",
    "hash": "167753534786727409533477182004177976470"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/string.rs",
    "func": "<usize as string::SpecToString>::spec_to_string",
    "hash": "139655153020623750312607569216564181953"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/string.rs",
    "func": "string::String::new",
    "hash": "79046669545943228287709651508410318336"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/string.rs",
    "func": "string::String::try_with_capacity",
    "hash": "1432238693172827966414638290709922510157"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/string.rs",
    "func": "string::String::with_capacity",
    "hash": "301473815447514724317281042335643342235"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/sync.rs",
    "func": "<sync::Arc<core::ffi::CStr> as core::default::Default>::default",
    "hash": "88748868021347645905257972537550705222"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/sync.rs",
    "func": "<sync::Arc<str> as core::default::Default>::default",
    "hash": "1834661915501660794116433003308924942041"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/sync.rs",
    "func": "sync::Weak::<T, A>::upgrade::checked_increment",
    "hash": "158152425683517362516660959665770262211"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/sync.rs",
    "func": "sync::arcinner_layout_for_value_layout",
    "hash": "934878482655559990511815744082216932320"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/sync.rs",
    "func": "sync::data_offset_align",
    "hash": "181248517807095498157829195970776525015"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/vec/is_zero.rs",
    "func": "<bool as vec::is_zero::IsZero>::is_zero",
    "hash": "226416230687556135918222008708823951921"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/vec/is_zero.rs",
    "func": "<char as vec::is_zero::IsZero>::is_zero",
    "hash": "562314824199671126613140265516381100367"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/vec/is_zero.rs",
    "func": "<core::option::Option<bool> as vec::is_zero::IsZero>::is_zero",
    "hash": "55282550973537819389606379550037173229"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/vec/is_zero.rs",
    "func": "<core::option::Option<core::num::NonZero<i128>> as vec::is_zero::IsZero>::is_zero",
    "hash": "1720506251788833383214486689275353377544"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/vec/is_zero.rs",
    "func": "<core::option::Option<core::num::NonZero<i16>> as vec::is_zero::IsZero>::is_zero",
    "hash": "152814392829046064067273226362518217329"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/vec/is_zero.rs",
    "func": "<core::option::Option<core::num::NonZero<i32>> as vec::is_zero::IsZero>::is_zero",
    "hash": "49591647048648773565875025356167778818"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/vec/is_zero.rs",
    "func": "<core::option::Option<core::num::NonZero<i64>> as vec::is_zero::IsZero>::is_zero",
    "hash": "181168594773930497234735536558990251740"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/vec/is_zero.rs",
    "func": "<core::option::Option<core::num::NonZero<i8>> as vec::is_zero::IsZero>::is_zero",
    "hash": "11312161407294301361122131310521174807"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/vec/is_zero.rs",
    "func": "<core::option::Option<core::num::NonZero<isize>> as vec::is_zero::IsZero>::is_zero",
    "hash": "1633361032576782756818298118979809316936"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/vec/is_zero.rs",
    "func": "<core::option::Option<core::num::NonZero<u128>> as vec::is_zero::IsZero>::is_zero",
    "hash": "103330843235056718911750599906013025116"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/vec/is_zero.rs",
    "func": "<core::option::Option<core::num::NonZero<u16>> as vec::is_zero::IsZero>::is_zero",
    "hash": "738598021930773736916905903201866490109"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/vec/is_zero.rs",
    "func": "<core::option::Option<core::num::NonZero<u32>> as vec::is_zero::IsZero>::is_zero",
    "hash": "45050772754737871232386659509215520366"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/vec/is_zero.rs",
    "func": "<core::option::Option<core::num::NonZero<u64>> as vec::is_zero::IsZero>::is_zero",
    "hash": "1004802711197926163113375030305559180195"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/vec/is_zero.rs",
    "func": "<core::option::Option<core::num::NonZero<u8>> as vec::is_zero::IsZero>::is_zero",
    "hash": "5381240029021907034562309991152013397"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/vec/is_zero.rs",
    "func": "<core::option::Option<core::num::NonZero<usize>> as vec::is_zero::IsZero>::is_zero",
    "hash": "1324187291799467001913286431910294421734"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/vec/is_zero.rs",
    "func": "<core::option::Option<core::option::Option<bool>> as vec::is_zero::IsZero>::is_zero",
    "hash": "115955547454937142876777049727034594294"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/vec/is_zero.rs",
    "func": "<core::option::Option<core::option::Option<core::option::Option<bool>>> as vec::is_zero::IsZero>::is_zero",
    "hash": "92137497129509717051590096164373128749"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/vec/is_zero.rs",
    "func": "<core::option::Option<i128> as vec::is_zero::IsZero>::is_zero",
    "hash": "97332826814045571384137483073632908543"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/vec/is_zero.rs",
    "func": "<core::option::Option<i16> as vec::is_zero::IsZero>::is_zero",
    "hash": "1551952214378580472514669949821112486326"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/vec/is_zero.rs",
    "func": "<core::option::Option<i32> as vec::is_zero::IsZero>::is_zero",
    "hash": "1232498275400767262010507917826339615857"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/vec/is_zero.rs",
    "func": "<core::option::Option<i64> as vec::is_zero::IsZero>::is_zero",
    "hash": "448950398955720190318331283893953130196"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/vec/is_zero.rs",
    "func": "<core::option::Option<i8> as vec::is_zero::IsZero>::is_zero",
    "hash": "599325279796641059612601345387635232422"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/vec/is_zero.rs",
    "func": "<core::option::Option<isize> as vec::is_zero::IsZero>::is_zero",
    "hash": "100366899955246869607292645471452608098"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/vec/is_zero.rs",
    "func": "<core::option::Option<u128> as vec::is_zero::IsZero>::is_zero",
    "hash": "14651758730421022746999724313290374327"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/vec/is_zero.rs",
    "func": "<core::option::Option<u16> as vec::is_zero::IsZero>::is_zero",
    "hash": "44116722611049818993587026624303100749"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/vec/is_zero.rs",
    "func": "<core::option::Option<u32> as vec::is_zero::IsZero>::is_zero",
    "hash": "609127693595867082813990810118846537744"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/vec/is_zero.rs",
    "func": "<core::option::Option<u64> as vec::is_zero::IsZero>::is_zero",
    "hash": "8304810152053103455671241760436064192"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/vec/is_zero.rs",
    "func": "<core::option::Option<u8> as vec::is_zero::IsZero>::is_zero",
    "hash": "1424402656469086792513759609376913500182"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/vec/is_zero.rs",
    "func": "<core::option::Option<usize> as vec::is_zero::IsZero>::is_zero",
    "hash": "32118125568587543451952746026173474568"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/vec/is_zero.rs",
    "func": "<f32 as vec::is_zero::IsZero>::is_zero",
    "hash": "27000259865368408846759765825619365521"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/vec/is_zero.rs",
    "func": "<f64 as vec::is_zero::IsZero>::is_zero",
    "hash": "97891402136562632024558210899456801827"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/vec/is_zero.rs",
    "func": "<i128 as vec::is_zero::IsZero>::is_zero",
    "hash": "18698055566249928431115470227260948467"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/vec/is_zero.rs",
    "func": "<i16 as vec::is_zero::IsZero>::is_zero",
    "hash": "783609287002888126610410795212579015124"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/vec/is_zero.rs",
    "func": "<i32 as vec::is_zero::IsZero>::is_zero",
    "hash": "42504595435692469042818110472115630694"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/vec/is_zero.rs",
    "func": "<i64 as vec::is_zero::IsZero>::is_zero",
    "hash": "34536797668754468426060086630998615149"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/vec/is_zero.rs",
    "func": "<i8 as vec::is_zero::IsZero>::is_zero",
    "hash": "36403096420846141552085050188458478890"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/vec/is_zero.rs",
    "func": "<isize as vec::is_zero::IsZero>::is_zero",
    "hash": "57874779018659763082518018364462195589"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/vec/is_zero.rs",
    "func": "<u128 as vec::is_zero::IsZero>::is_zero",
    "hash": "100185064925734285171322188388819940861"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/vec/is_zero.rs",
    "func": "<u16 as vec::is_zero::IsZero>::is_zero",
    "hash": "321897002648580578013483930964447877009"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/vec/is_zero.rs",
    "func": "<u32 as vec::is_zero::IsZero>::is_zero",
    "hash": "109155081470732314482131273701303262215"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/vec/is_zero.rs",
    "func": "<u64 as vec::is_zero::IsZero>::is_zero",
    "hash": "9374950131075819485898869668128418073"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/vec/is_zero.rs",
    "func": "<u8 as vec::is_zero::IsZero>::is_zero",
    "hash": "319076220170936590611797679790761320848"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/vec/is_zero.rs",
    "func": "<usize as vec::is_zero::IsZero>::is_zero",
    "hash": "1138662363907580924915852346025134890085"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/vec/mod.rs",
    "func": "vec::Vec::<T, A>::insert_mut::assert_failed",
    "hash": "80966657695241934232536408169712862644"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/vec/mod.rs",
    "func": "vec::Vec::<T, A>::remove::assert_failed",
    "hash": "123631606068332227102207526565102707521"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/vec/mod.rs",
    "func": "vec::Vec::<T, A>::split_off::assert_failed",
    "hash": "512758356025105511012370657234829145561"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/vec/mod.rs",
    "func": "vec::Vec::<T, A>::swap_remove::assert_failed",
    "hash": "69315830043932883013839322807490939179"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/vec/mod.rs",
    "func": "vec::verify::verify_swap_remove",
    "hash": "919736775913665760710633698162108892322",
    "proof_kind": "Standard"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/vec/set_len_on_drop.rs",
    "func": "vec::set_len_on_drop::SetLenOnDrop::<'_>::new",
    "hash": "163653868419212898167354017395545872918"
  },
  {
    "crate": "core",
    "file": "core/src/alloc/layout.rs",
    "func": "<alloc::layout::Layout as clone::Clone>::clone",
    "hash": "138669527279575425473478508059426767195"
  },
  {
    "crate": "core",
    "file": "core/src/alloc/layout.rs",
    "func": "<alloc::layout::Layout as cmp::Eq>::assert_receiver_is_total_eq",
    "hash": "1839720404400470606512354253475767504568"
  },
  {
    "crate": "core",
    "file": "core/src/alloc/layout.rs",
    "func": "<alloc::layout::Layout as cmp::PartialEq>::eq",
    "hash": "1237561809776419274303954737725761997"
  },
  {
    "crate": "core",
    "file": "core/src/alloc/layout.rs",
    "func": "<alloc::layout::Layout as ub_checks::Invariant>::is_safe",
    "hash": "1095330830686397659810157364210475795192"
  },
  {
    "crate": "core",
    "file": "core/src/alloc/layout.rs",
    "func": "<alloc::layout::LayoutError as clone::Clone>::clone",
    "hash": "252359930733652908913448491214756495000"
  },
  {
    "crate": "core",
    "file": "core/src/alloc/layout.rs",
    "func": "<alloc::layout::LayoutError as cmp::Eq>::assert_receiver_is_total_eq",
    "hash": "13369606727933910233948994621658670641"
  },
  {
    "crate": "core",
    "file": "core/src/alloc/layout.rs",
    "func": "<alloc::layout::LayoutError as cmp::PartialEq>::eq",
    "hash": "53188263659268734449859429785139644385"
  },
  {
    "crate": "core",
    "file": "core/src/alloc/layout.rs",
    "func": "alloc::layout::Layout::align",
    "hash": "1644571781544438741211241059160657573132"
  },
  {
    "crate": "core",
    "file": "core/src/alloc/layout.rs",
    "func": "alloc::layout::Layout::align_to",
    "hash": "296640178279774926110530834663623881434"
  },
  {
    "crate": "core",
    "file": "core/src/alloc/layout.rs",
    "func": "alloc::layout::Layout::alignment",
    "hash": "113731111070523917451251479783537796058"
  },
  {
    "crate": "core",
    "file": "core/src/alloc/layout.rs",
    "func": "alloc::layout::Layout::array::inner",
    "hash": "181817944304627036114437799365032790678"
  },
  {
    "crate": "core",
    "file": "core/src/alloc/layout.rs",
    "func": "alloc::layout::Layout::dangling",
    "hash": "1725774325508012088012908468224349910631"
  },
  {
    "crate": "core",
    "file": "core/src/alloc/layout.rs",
    "func": "alloc::layout::Layout::extend",
    "hash": "1835818261999260622914736513936396583107"
  },
  {
    "crate": "core",
    "file": "core/src/alloc/layout.rs",
    "func": "alloc::layout::Layout::extend_packed",
    "hash": "98067059012061316655876652044881984883"
  },
  {
    "crate": "core",
    "file": "core/src/alloc/layout.rs",
    "func": "alloc::layout::Layout::from_size_align",
    "hash": "538364291737422957617115879861496503666"
  },
  {
    "crate": "core",
    "file": "core/src/alloc/layout.rs",
    "func": "alloc::layout::Layout::from_size_align_unchecked",
    "hash": "162350892733688192722165107322765566320"
  },
  {
    "crate": "core",
    "file": "core/src/alloc/layout.rs",
    "func": "alloc::layout::Layout::from_size_alignment",
    "hash": "608664848234302571713593688644672913516"
  },
  {
    "crate": "core",
    "file": "core/src/alloc/layout.rs",
    "func": "alloc::layout::Layout::is_size_align_valid",
    "hash": "1799843820648816373112280196179081243546"
  },
  {
    "crate": "core",
    "file": "core/src/alloc/layout.rs",
    "func": "alloc::layout::Layout::max_size_for_align",
    "hash": "113777446734612017643296714849006136962"
  },
  {
    "crate": "core",
    "file": "core/src/alloc/layout.rs",
    "func": "alloc::layout::Layout::pad_to_align",
    "hash": "909016405302760862510136079549241814213"
  },
  {
    "crate": "core",
    "file": "core/src/alloc/layout.rs",
    "func": "alloc::layout::Layout::padding_needed_for",
    "hash": "510164748966652215015416554849172250285"
  },
  {
    "crate": "core",
    "file": "core/src/alloc/layout.rs",
    "func": "alloc::layout::Layout::repeat",
    "hash": "1808444633254068598110786721635680167104"
  },
  {
    "crate": "core",
    "file": "core/src/alloc/layout.rs",
    "func": "alloc::layout::Layout::repeat_packed",
    "hash": "1377672087386362923310797715518348043733"
  },
  {
    "crate": "core",
    "file": "core/src/alloc/layout.rs",
    "func": "alloc::layout::Layout::size",
    "hash": "1765656156889523721816376187426903869163"
  },
  {
    "crate": "core",
    "file": "core/src/alloc/layout.rs",
    "func": "alloc::layout::Layout::size_rounded_up_to_custom_align",
    "hash": "1333568670384673713210225900017299121386"
  },
  {
    "crate": "core",
    "file": "core/src/alloc/layout.rs",
    "func": "alloc::layout::verify::check_align",
    "hash": "1637242166217099867410890806408770361329",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/alloc/layout.rs",
    "func": "alloc::layout::verify::check_align_to",
    "hash": "30525082609756489223962295669764658151",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/alloc/layout.rs",
    "func": "alloc::layout::verify::check_array_i32",
    "hash": "1221921090030414489711371092086033665289",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/alloc/layout.rs",
    "func": "alloc::layout::verify::check_dangling",
    "hash": "25460700140651668210229017482514908739",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/alloc/layout.rs",
    "func": "alloc::layout::verify::check_extend",
    "hash": "9187449582052380484214812176991244306",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/alloc/layout.rs",
    "func": "alloc::layout::verify::check_extend_packed",
    "hash": "178852584727300507955518555493688548727",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/alloc/layout.rs",
    "func": "alloc::layout::verify::check_for_value_i32",
    "hash": "98422585282241273914824167647975841678",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/alloc/layout.rs",
    "func": "alloc::layout::verify::check_for_value_raw_i32",
    "hash": "1571440310584682597913978359236921835296",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/alloc/layout.rs",
    "func": "alloc::layout::verify::check_new_i32",
    "hash": "48172055640757097621748913235658436321",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/alloc/layout.rs",
    "func": "alloc::layout::verify::check_pad_to_align",
    "hash": "1328709229653847984117499316554534661983",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/alloc/layout.rs",
    "func": "alloc::layout::verify::check_padding_needed_for",
    "hash": "19194095149895162058027801596782697068",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/alloc/layout.rs",
    "func": "alloc::layout::verify::check_repeat",
    "hash": "1101671047870022047316106391470978583577",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/alloc/layout.rs",
    "func": "alloc::layout::verify::check_repeat_packed",
    "hash": "137558868321016238481199794279292318539",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/alloc/layout.rs",
    "func": "alloc::layout::verify::check_size",
    "hash": "1178058664600577600016117516281170094169",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/alloc/mod.rs",
    "func": "<alloc::AllocError as clone::Clone>::clone",
    "hash": "1029666806849078043410114883872574058051"
  },
  {
    "crate": "core",
    "file": "core/src/alloc/mod.rs",
    "func": "<alloc::AllocError as cmp::Eq>::assert_receiver_is_total_eq",
    "hash": "65317846572373040011151543001521417398"
  },
  {
    "crate": "core",
    "file": "core/src/alloc/mod.rs",
    "func": "<alloc::AllocError as cmp::PartialEq>::eq",
    "hash": "1722171256993590572613700931741706537866"
  },
  {
    "crate": "core",
    "file": "core/src/arch.rs",
    "func": "arch::breakpoint",
    "hash": "179452278719966693811388490069887534994"
  },
  {
    "crate": "core",
    "file": "core/src/array/mod.rs",
    "func": "<array::TryFromSliceError as clone::Clone>::clone",
    "hash": "4562367331050962429942001666599523782"
  },
  {
    "crate": "core",
    "file": "core/src/array/mod.rs",
    "func": "<array::TryFromSliceError as error::Error>::description",
    "hash": "125842475309066782315975761313847421031"
  },
  {
    "crate": "core",
    "file": "core/src/ascii.rs",
    "func": "ascii::EscapeDefault::empty",
    "hash": "1075184796020957421713220210555524853953"
  },
  {
    "crate": "core",
    "file": "core/src/ascii.rs",
    "func": "ascii::EscapeDefault::new",
    "hash": "89749163509979118331397359653281917899"
  },
  {
    "crate": "core",
    "file": "core/src/ascii.rs",
    "func": "ascii::escape_default",
    "hash": "1005377300191788699812763229026995308153"
  },
  {
    "crate": "core",
    "file": "core/src/ascii/ascii_char.rs",
    "func": "<ascii::ascii_char::AsciiChar as clone::Clone>::clone",
    "hash": "111035433870535333634453815696196257193"
  },
  {
    "crate": "core",
    "file": "core/src/ascii/ascii_char.rs",
    "func": "<ascii::ascii_char::AsciiChar as cmp::Eq>::assert_receiver_is_total_eq",
    "hash": "1827754337174872640910365780085592186283"
  },
  {
    "crate": "core",
    "file": "core/src/ascii/ascii_char.rs",
    "func": "<ascii::ascii_char::AsciiChar as cmp::Ord>::cmp",
    "hash": "112814026645935245953583575330164277885"
  },
  {
    "crate": "core",
    "file": "core/src/ascii/ascii_char.rs",
    "func": "<ascii::ascii_char::AsciiChar as cmp::PartialEq>::eq",
    "hash": "81344484586276681666638199233416620893"
  },
  {
    "crate": "core",
    "file": "core/src/ascii/ascii_char.rs",
    "func": "<ascii::ascii_char::AsciiChar as cmp::PartialOrd>::partial_cmp",
    "hash": "947449175792168431313243954235902122161"
  },
  {
    "crate": "core",
    "file": "core/src/ascii/ascii_char.rs",
    "func": "<ascii::ascii_char::AsciiChar as fmt::Debug>::fmt::backslash",
    "hash": "142798683471519151818717049339459591202"
  },
  {
    "crate": "core",
    "file": "core/src/ascii/ascii_char.rs",
    "func": "ascii::ascii_char::<impl convert::From<ascii::ascii_char::AsciiChar> for char>::from",
    "hash": "25680643180515091492075518552626296375"
  },
  {
    "crate": "core",
    "file": "core/src/ascii/ascii_char.rs",
    "func": "ascii::ascii_char::<impl convert::From<ascii::ascii_char::AsciiChar> for u128>::from",
    "hash": "1734240027759987692111499873427882592904"
  },
  {
    "crate": "core",
    "file": "core/src/ascii/ascii_char.rs",
    "func": "ascii::ascii_char::<impl convert::From<ascii::ascii_char::AsciiChar> for u16>::from",
    "hash": "1521578451117097498412858301348773415234"
  },
  {
    "crate": "core",
    "file": "core/src/ascii/ascii_char.rs",
    "func": "ascii::ascii_char::<impl convert::From<ascii::ascii_char::AsciiChar> for u32>::from",
    "hash": "406451723365637502013051710475675351544"
  },
  {
    "crate": "core",
    "file": "core/src/ascii/ascii_char.rs",
    "func": "ascii::ascii_char::<impl convert::From<ascii::ascii_char::AsciiChar> for u64>::from",
    "hash": "241791409614011620817952358997921012793"
  },
  {
    "crate": "core",
    "file": "core/src/ascii/ascii_char.rs",
    "func": "ascii::ascii_char::<impl convert::From<ascii::ascii_char::AsciiChar> for u8>::from",
    "hash": "55359956800096477512294625712282727056"
  },
  {
    "crate": "core",
    "file": "core/src/ascii/ascii_char.rs",
    "func": "ascii::ascii_char::AsciiChar::as_str",
    "hash": "954282711880464085816738983663444254636"
  },
  {
    "crate": "core",
    "file": "core/src/ascii/ascii_char.rs",
    "func": "ascii::ascii_char::AsciiChar::digit",
    "hash": "66142078006558172033321637044897030383"
  },
  {
    "crate": "core",
    "file": "core/src/ascii/ascii_char.rs",
    "func": "ascii::ascii_char::AsciiChar::digit_unchecked",
    "hash": "1589729122308785428215351238384910081630"
  },
  {
    "crate": "core",
    "file": "core/src/ascii/ascii_char.rs",
    "func": "ascii::ascii_char::AsciiChar::eq_ignore_case",
    "hash": "1692231325908148864914871934470188610020"
  },
  {
    "crate": "core",
    "file": "core/src/ascii/ascii_char.rs",
    "func": "ascii::ascii_char::AsciiChar::escape_ascii",
    "hash": "56432858114212035737992099245451454428"
  },
  {
    "crate": "core",
    "file": "core/src/ascii/ascii_char.rs",
    "func": "ascii::ascii_char::AsciiChar::from_u8",
    "hash": "1263943423012824645318408613777809385475"
  },
  {
    "crate": "core",
    "file": "core/src/ascii/ascii_char.rs",
    "func": "ascii::ascii_char::AsciiChar::from_u8_unchecked",
    "hash": "15551977551413036531158252289522839939"
  },
  {
    "crate": "core",
    "file": "core/src/ascii/ascii_char.rs",
    "func": "ascii::ascii_char::AsciiChar::is_alphabetic",
    "hash": "141374037431582204228901002596648892899"
  },
  {
    "crate": "core",
    "file": "core/src/ascii/ascii_char.rs",
    "func": "ascii::ascii_char::AsciiChar::is_alphanumeric",
    "hash": "1769212299635255199312158151321151748593"
  },
  {
    "crate": "core",
    "file": "core/src/ascii/ascii_char.rs",
    "func": "ascii::ascii_char::AsciiChar::is_control",
    "hash": "379452128669671562516307381127183737866"
  },
  {
    "crate": "core",
    "file": "core/src/ascii/ascii_char.rs",
    "func": "ascii::ascii_char::AsciiChar::is_digit",
    "hash": "47687222988252838765032272607818926730"
  },
  {
    "crate": "core",
    "file": "core/src/ascii/ascii_char.rs",
    "func": "ascii::ascii_char::AsciiChar::is_graphic",
    "hash": "121801181038273201848591136906946929115"
  },
  {
    "crate": "core",
    "file": "core/src/ascii/ascii_char.rs",
    "func": "ascii::ascii_char::AsciiChar::is_hexdigit",
    "hash": "755968284434454300011982005433871110650"
  },
  {
    "crate": "core",
    "file": "core/src/ascii/ascii_char.rs",
    "func": "ascii::ascii_char::AsciiChar::is_lowercase",
    "hash": "479597666294039129017994040791777849054"
  },
  {
    "crate": "core",
    "file": "core/src/ascii/ascii_char.rs",
    "func": "ascii::ascii_char::AsciiChar::is_octdigit",
    "hash": "852271594176458070316316655434844405899"
  },
  {
    "crate": "core",
    "file": "core/src/ascii/ascii_char.rs",
    "func": "ascii::ascii_char::AsciiChar::is_punctuation",
    "hash": "58202831194809294617820784981134761942"
  },
  {
    "crate": "core",
    "file": "core/src/ascii/ascii_char.rs",
    "func": "ascii::ascii_char::AsciiChar::is_uppercase",
    "hash": "32667457186840015303783944020138794434"
  },
  {
    "crate": "core",
    "file": "core/src/ascii/ascii_char.rs",
    "func": "ascii::ascii_char::AsciiChar::is_whitespace",
    "hash": "143531101920779919634861260905095796459"
  },
  {
    "crate": "core",
    "file": "core/src/ascii/ascii_char.rs",
    "func": "ascii::ascii_char::AsciiChar::make_lowercase",
    "hash": "3645664363023451936488916420063270654"
  },
  {
    "crate": "core",
    "file": "core/src/ascii/ascii_char.rs",
    "func": "ascii::ascii_char::AsciiChar::make_uppercase",
    "hash": "125362895133152657728316806023898963720"
  },
  {
    "crate": "core",
    "file": "core/src/ascii/ascii_char.rs",
    "func": "ascii::ascii_char::AsciiChar::to_char",
    "hash": "1033313609966481997416353699173200356182"
  },
  {
    "crate": "core",
    "file": "core/src/ascii/ascii_char.rs",
    "func": "ascii::ascii_char::AsciiChar::to_lowercase",
    "hash": "95711545036868145599383432957873473452"
  },
  {
    "crate": "core",
    "file": "core/src/ascii/ascii_char.rs",
    "func": "ascii::ascii_char::AsciiChar::to_u8",
    "hash": "211389067699639933614636457746408448112"
  },
  {
    "crate": "core",
    "file": "core/src/ascii/ascii_char.rs",
    "func": "ascii::ascii_char::AsciiChar::to_uppercase",
    "hash": "3812153823289254213385533447377729036"
  },
  {
    "crate": "core",
    "file": "core/src/bstr/mod.rs",
    "func": "<&bstr::ByteStr as default::Default>::default",
    "hash": "125686440090565287313600801723253413560"
  },
  {
    "crate": "core",
    "file": "core/src/bstr/mod.rs",
    "func": "<&mut bstr::ByteStr as default::Default>::default",
    "hash": "1574332461638624138015689794571884755490"
  },
  {
    "crate": "core",
    "file": "core/src/cell.rs",
    "func": "cell::BorrowRef::<'_>::new",
    "hash": "104832941129392599246964512525046082466"
  },
  {
    "crate": "core",
    "file": "core/src/cell.rs",
    "func": "cell::BorrowRefMut::<'_>::new",
    "hash": "26804602359776193861030797062949761013"
  },
  {
    "crate": "core",
    "file": "core/src/cell.rs",
    "func": "cell::assert_coerce_unsized",
    "hash": "179837230025838637622005642652165013263"
  },
  {
    "crate": "core",
    "file": "core/src/cell.rs",
    "func": "cell::is_reading",
    "hash": "958841610888801412131177007951313161"
  },
  {
    "crate": "core",
    "file": "core/src/cell.rs",
    "func": "cell::is_writing",
    "hash": "150987103519159030195100325775074116971"
  },
  {
    "crate": "core",
    "file": "core/src/cell.rs",
    "func": "cell::panic_already_borrowed",
    "hash": "14347111815171877325719724247740644201"
  },
  {
    "crate": "core",
    "file": "core/src/cell.rs",
    "func": "cell::panic_already_mutably_borrowed",
    "hash": "1332435909144140338117758702416711248980"
  },
  {
    "crate": "core",
    "file": "core/src/cell/lazy.rs",
    "func": "cell::lazy::panic_poisoned",
    "hash": "74377589116583307095361716428989041861"
  },
  {
    "crate": "core",
    "file": "core/src/char/convert.rs",
    "func": "<char::convert::CharErrorKind as clone::Clone>::clone",
    "hash": "14590919632670077107703886866540995297"
  },
  {
    "crate": "core",
    "file": "core/src/char/convert.rs",
    "func": "<char::convert::CharErrorKind as cmp::Eq>::assert_receiver_is_total_eq",
    "hash": "62239645015476868415283761933330297157"
  },
  {
    "crate": "core",
    "file": "core/src/char/convert.rs",
    "func": "<char::convert::CharErrorKind as cmp::PartialEq>::eq",
    "hash": "71315430593433594444746674294927717904"
  },
  {
    "crate": "core",
    "file": "core/src/char/convert.rs",
    "func": "<char::convert::CharTryFromError as clone::Clone>::clone",
    "hash": "135415912958453448667931995784336552872"
  },
  {
    "crate": "core",
    "file": "core/src/char/convert.rs",
    "func": "<char::convert::CharTryFromError as cmp::Eq>::assert_receiver_is_total_eq",
    "hash": "158412052472748889385095255687738530311"
  },
  {
    "crate": "core",
    "file": "core/src/char/convert.rs",
    "func": "<char::convert::CharTryFromError as cmp::PartialEq>::eq",
    "hash": "39772555954801153589957516226447287910"
  },
  {
    "crate": "core",
    "file": "core/src/char/convert.rs",
    "func": "<char::convert::ParseCharError as clone::Clone>::clone",
    "hash": "171425005789328490072817929714838253054"
  },
  {
    "crate": "core",
    "file": "core/src/char/convert.rs",
    "func": "<char::convert::ParseCharError as cmp::Eq>::assert_receiver_is_total_eq",
    "hash": "1385259908027616954410045035542382325618"
  },
  {
    "crate": "core",
    "file": "core/src/char/convert.rs",
    "func": "<char::convert::ParseCharError as cmp::PartialEq>::eq",
    "hash": "1337142893895784579613426553132365774701"
  },
  {
    "crate": "core",
    "file": "core/src/char/convert.rs",
    "func": "<char::convert::ParseCharError as error::Error>::description",
    "hash": "30753480272582826087370592886441138490"
  },
  {
    "crate": "core",
    "file": "core/src/char/convert.rs",
    "func": "char::convert::<impl convert::From<char> for u128>::from",
    "hash": "5486281828026669298383869045537591502"
  },
  {
    "crate": "core",
    "file": "core/src/char/convert.rs",
    "func": "char::convert::<impl convert::From<char> for u32>::from",
    "hash": "113949204995067962305733038591445280689"
  },
  {
    "crate": "core",
    "file": "core/src/char/convert.rs",
    "func": "char::convert::<impl convert::From<char> for u64>::from",
    "hash": "176189015992262389841612077595509152686"
  },
  {
    "crate": "core",
    "file": "core/src/char/convert.rs",
    "func": "char::convert::<impl convert::From<u8> for char>::from",
    "hash": "511962504776047044912646038885098500692"
  },
  {
    "crate": "core",
    "file": "core/src/char/convert.rs",
    "func": "char::convert::<impl convert::TryFrom<char> for u16>::try_from",
    "hash": "384454961062101702517631311395990467441"
  },
  {
    "crate": "core",
    "file": "core/src/char/convert.rs",
    "func": "char::convert::<impl convert::TryFrom<char> for u8>::try_from",
    "hash": "34395329715680038192286328316131391397"
  },
  {
    "crate": "core",
    "file": "core/src/char/convert.rs",
    "func": "char::convert::<impl convert::TryFrom<u32> for char>::try_from",
    "hash": "255036167567087723912862092335442774242"
  },
  {
    "crate": "core",
    "file": "core/src/char/convert.rs",
    "func": "char::convert::char_try_from_u32",
    "hash": "1137504858812645032216016959492348926209"
  },
  {
    "crate": "core",
    "file": "core/src/char/convert.rs",
    "func": "char::convert::from_digit",
    "hash": "21288568817902661899163244752640729668"
  },
  {
    "crate": "core",
    "file": "core/src/char/convert.rs",
    "func": "char::convert::from_u32",
    "hash": "763012892079049360233504343849136075"
  },
  {
    "crate": "core",
    "file": "core/src/char/convert.rs",
    "func": "char::convert::from_u32_unchecked",
    "hash": "1730104888752463612515843025505589269421"
  },
  {
    "crate": "core",
    "file": "core/src/char/decode.rs",
    "func": "<char::decode::DecodeUtf16Error as clone::Clone>::clone",
    "hash": "106015577261429054398488907325860436168"
  },
  {
    "crate": "core",
    "file": "core/src/char/decode.rs",
    "func": "<char::decode::DecodeUtf16Error as cmp::Eq>::assert_receiver_is_total_eq",
    "hash": "35536810418520555035725241150857337"
  },
  {
    "crate": "core",
    "file": "core/src/char/decode.rs",
    "func": "<char::decode::DecodeUtf16Error as cmp::PartialEq>::eq",
    "hash": "215534779372337113413718916190493460975"
  },
  {
    "crate": "core",
    "file": "core/src/char/decode.rs",
    "func": "<char::decode::DecodeUtf16Error as error::Error>::description",
    "hash": "72647383057707722512545731438852074222"
  },
  {
    "crate": "core",
    "file": "core/src/char/decode.rs",
    "func": "char::decode::DecodeUtf16Error::unpaired_surrogate",
    "hash": "249399312778873392118202183617190031782"
  },
  {
    "crate": "core",
    "file": "core/src/char/methods.rs",
    "func": "char::methods::<impl char>::as_ascii",
    "hash": "171978863025298498526653523685058692868"
  },
  {
    "crate": "core",
    "file": "core/src/char/methods.rs",
    "func": "char::methods::<impl char>::as_ascii_unchecked",
    "hash": "1040263324564224765614544706129707762903"
  },
  {
    "crate": "core",
    "file": "core/src/char/methods.rs",
    "func": "char::methods::<impl char>::eq_ignore_ascii_case",
    "hash": "347500002211181882111002928277433837828"
  },
  {
    "crate": "core",
    "file": "core/src/char/methods.rs",
    "func": "char::methods::<impl char>::escape_debug",
    "hash": "1699404671803092467410158284302160222118"
  },
  {
    "crate": "core",
    "file": "core/src/char/methods.rs",
    "func": "char::methods::<impl char>::escape_debug_ext",
    "hash": "896450119357571696117985088512991421425"
  },
  {
    "crate": "core",
    "file": "core/src/char/methods.rs",
    "func": "char::methods::<impl char>::escape_default",
    "hash": "455068699149850792715015520127516178876"
  },
  {
    "crate": "core",
    "file": "core/src/char/methods.rs",
    "func": "char::methods::<impl char>::escape_unicode",
    "hash": "118940744255943487826116974334072936571"
  },
  {
    "crate": "core",
    "file": "core/src/char/methods.rs",
    "func": "char::methods::<impl char>::from_digit",
    "hash": "36634764220413573822676746106347514165"
  },
  {
    "crate": "core",
    "file": "core/src/char/methods.rs",
    "func": "char::methods::<impl char>::from_u32",
    "hash": "62779409670349215787847111553423253975"
  },
  {
    "crate": "core",
    "file": "core/src/char/methods.rs",
    "func": "char::methods::<impl char>::from_u32_unchecked",
    "hash": "30477841482411972089439721196610634090"
  },
  {
    "crate": "core",
    "file": "core/src/char/methods.rs",
    "func": "char::methods::<impl char>::is_alphabetic",
    "hash": "667741463944439043118298004134191588249"
  },
  {
    "crate": "core",
    "file": "core/src/char/methods.rs",
    "func": "char::methods::<impl char>::is_alphanumeric",
    "hash": "74233228910389896469163272434988513015"
  },
  {
    "crate": "core",
    "file": "core/src/char/methods.rs",
    "func": "char::methods::<impl char>::is_ascii",
    "hash": "121872163624966698483225952656434249831"
  },
  {
    "crate": "core",
    "file": "core/src/char/methods.rs",
    "func": "char::methods::<impl char>::is_ascii_alphabetic",
    "hash": "867510478015560372217127018194584589133"
  },
  {
    "crate": "core",
    "file": "core/src/char/methods.rs",
    "func": "char::methods::<impl char>::is_ascii_alphanumeric",
    "hash": "1835845409301008492015376142636202002099"
  },
  {
    "crate": "core",
    "file": "core/src/char/methods.rs",
    "func": "char::methods::<impl char>::is_ascii_control",
    "hash": "78320279285770796329737311134415044128"
  },
  {
    "crate": "core",
    "file": "core/src/char/methods.rs",
    "func": "char::methods::<impl char>::is_ascii_digit",
    "hash": "776791319150463290314684492981233965229"
  },
  {
    "crate": "core",
    "file": "core/src/char/methods.rs",
    "func": "char::methods::<impl char>::is_ascii_graphic",
    "hash": "160905160783373154336394295742045723480"
  },
  {
    "crate": "core",
    "file": "core/src/char/methods.rs",
    "func": "char::methods::<impl char>::is_ascii_hexdigit",
    "hash": "1735324140395205190410672666854869582449"
  },
  {
    "crate": "core",
    "file": "core/src/char/methods.rs",
    "func": "char::methods::<impl char>::is_ascii_lowercase",
    "hash": "40029628481153286834917534605165395923"
  },
  {
    "crate": "core",
    "file": "core/src/char/methods.rs",
    "func": "char::methods::<impl char>::is_ascii_octdigit",
    "hash": "5813026921425823168402167983853199852"
  },
  {
    "crate": "core",
    "file": "core/src/char/methods.rs",
    "func": "char::methods::<impl char>::is_ascii_punctuation",
    "hash": "660443504320725929514711155381355735548"
  },
  {
    "crate": "core",
    "file": "core/src/char/methods.rs",
    "func": "char::methods::<impl char>::is_ascii_uppercase",
    "hash": "162761847482439689109896374123862067977"
  },
  {
    "crate": "core",
    "file": "core/src/char/methods.rs",
    "func": "char::methods::<impl char>::is_ascii_whitespace",
    "hash": "141456026617067928877849983863287040673"
  },
  {
    "crate": "core",
    "file": "core/src/char/methods.rs",
    "func": "char::methods::<impl char>::is_control",
    "hash": "652585017859933537111752323782275093449"
  },
  {
    "crate": "core",
    "file": "core/src/char/methods.rs",
    "func": "char::methods::<impl char>::is_digit",
    "hash": "493912080506164438811423101301389031008"
  },
  {
    "crate": "core",
    "file": "core/src/char/methods.rs",
    "func": "char::methods::<impl char>::is_grapheme_extended",
    "hash": "478573153467999256010463538608158507649"
  },
  {
    "crate": "core",
    "file": "core/src/char/methods.rs",
    "func": "char::methods::<impl char>::is_lowercase",
    "hash": "17472793061341830387604313126917302659"
  },
  {
    "crate": "core",
    "file": "core/src/char/methods.rs",
    "func": "char::methods::<impl char>::is_numeric",
    "hash": "215242875896618488610007499859138225323"
  },
  {
    "crate": "core",
    "file": "core/src/char/methods.rs",
    "func": "char::methods::<impl char>::is_uppercase",
    "hash": "95120920575223785971985418626851541925"
  },
  {
    "crate": "core",
    "file": "core/src/char/methods.rs",
    "func": "char::methods::<impl char>::is_whitespace",
    "hash": "79760301754771638958349888420647128122"
  },
  {
    "crate": "core",
    "file": "core/src/char/methods.rs",
    "func": "char::methods::<impl char>::len_utf16",
    "hash": "30964728033535107675893575966530351964"
  },
  {
    "crate": "core",
    "file": "core/src/char/methods.rs",
    "func": "char::methods::<impl char>::len_utf8",
    "hash": "1358253101884662637512268933829053514469"
  },
  {
    "crate": "core",
    "file": "core/src/char/methods.rs",
    "func": "char::methods::<impl char>::make_ascii_lowercase",
    "hash": "63056492727050690364391917141093345859"
  },
  {
    "crate": "core",
    "file": "core/src/char/methods.rs",
    "func": "char::methods::<impl char>::make_ascii_uppercase",
    "hash": "1040510828091348835114571511070917382442"
  },
  {
    "crate": "core",
    "file": "core/src/char/methods.rs",
    "func": "char::methods::<impl char>::to_ascii_lowercase",
    "hash": "1545000998026875087513078667640787051548"
  },
  {
    "crate": "core",
    "file": "core/src/char/methods.rs",
    "func": "char::methods::<impl char>::to_ascii_uppercase",
    "hash": "1561154161655045390118413777525597123812"
  },
  {
    "crate": "core",
    "file": "core/src/char/methods.rs",
    "func": "char::methods::<impl char>::to_digit",
    "hash": "941830179972098197316651007639829831459"
  },
  {
    "crate": "core",
    "file": "core/src/char/methods.rs",
    "func": "char::methods::<impl char>::to_lowercase",
    "hash": "495562436655917367916257634508771838675"
  },
  {
    "crate": "core",
    "file": "core/src/char/methods.rs",
    "func": "char::methods::<impl char>::to_uppercase",
    "hash": "233342035248629507216701786990736057778"
  },
  {
    "crate": "core",
    "file": "core/src/char/methods.rs",
    "func": "char::methods::len_utf16",
    "hash": "566961004407742453510032069701258364292"
  },
  {
    "crate": "core",
    "file": "core/src/char/methods.rs",
    "func": "char::methods::len_utf8",
    "hash": "1026760530544148215311440132616070242899"
  },
  {
    "crate": "core",
    "file": "core/src/char/methods.rs",
    "func": "char::methods::verify::as_ascii_clone",
    "hash": "96678382642319974613340859699268617277"
  },
  {
    "crate": "core",
    "file": "core/src/char/methods.rs",
    "func": "char::methods::verify::check_as_ascii_ascii_char",
    "hash": "82913898912333037239461890300436032634",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/char/methods.rs",
    "func": "char::methods::verify::check_as_ascii_non_ascii_char",
    "hash": "89923403789957614313681646787606670874",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/char/mod.rs",
    "func": "<char::CaseMappingIter as clone::Clone>::clone",
    "hash": "53047111825809652946037447569328203130"
  },
  {
    "crate": "core",
    "file": "core/src/char/mod.rs",
    "func": "<char::CaseMappingIter as iter::traits::double_ended::DoubleEndedIterator>::advance_back_by",
    "hash": "99487482049585193885655827107297531931"
  },
  {
    "crate": "core",
    "file": "core/src/char/mod.rs",
    "func": "<char::CaseMappingIter as iter::traits::double_ended::DoubleEndedIterator>::next_back",
    "hash": "14261555289456195503558071282331207856"
  },
  {
    "crate": "core",
    "file": "core/src/char/mod.rs",
    "func": "<char::CaseMappingIter as iter::traits::exact_size::ExactSizeIterator>::is_empty",
    "hash": "153664854716816481503446288175180637492"
  },
  {
    "crate": "core",
    "file": "core/src/char/mod.rs",
    "func": "<char::CaseMappingIter as iter::traits::exact_size::ExactSizeIterator>::len",
    "hash": "65938875803396913552242942886366437729"
  },
  {
    "crate": "core",
    "file": "core/src/char/mod.rs",
    "func": "<char::CaseMappingIter as iter::traits::iterator::Iterator>::__iterator_get_unchecked",
    "hash": "113178534347892981013742412256111001666"
  },
  {
    "crate": "core",
    "file": "core/src/char/mod.rs",
    "func": "<char::CaseMappingIter as iter::traits::iterator::Iterator>::advance_by",
    "hash": "68048161387437530317726651129761000290"
  },
  {
    "crate": "core",
    "file": "core/src/char/mod.rs",
    "func": "<char::CaseMappingIter as iter::traits::iterator::Iterator>::count",
    "hash": "16442009387475745783617092712059147964"
  },
  {
    "crate": "core",
    "file": "core/src/char/mod.rs",
    "func": "<char::CaseMappingIter as iter::traits::iterator::Iterator>::last",
    "hash": "149962533737513859414583703117573361448"
  },
  {
    "crate": "core",
    "file": "core/src/char/mod.rs",
    "func": "<char::CaseMappingIter as iter::traits::iterator::Iterator>::next",
    "hash": "17130473988891825009341832828311180217"
  },
  {
    "crate": "core",
    "file": "core/src/char/mod.rs",
    "func": "<char::CaseMappingIter as iter::traits::iterator::Iterator>::size_hint",
    "hash": "90283732661933715659640819128273353718"
  },
  {
    "crate": "core",
    "file": "core/src/char/mod.rs",
    "func": "<char::ToLowercase as clone::Clone>::clone",
    "hash": "43032016805931592843923679449446925516"
  },
  {
    "crate": "core",
    "file": "core/src/char/mod.rs",
    "func": "<char::ToLowercase as iter::traits::double_ended::DoubleEndedIterator>::advance_back_by",
    "hash": "1016092817313860423212558279092008167680"
  },
  {
    "crate": "core",
    "file": "core/src/char/mod.rs",
    "func": "<char::ToLowercase as iter::traits::double_ended::DoubleEndedIterator>::next_back",
    "hash": "31141316991561363361107878199911699159"
  },
  {
    "crate": "core",
    "file": "core/src/char/mod.rs",
    "func": "<char::ToLowercase as iter::traits::exact_size::ExactSizeIterator>::is_empty",
    "hash": "131989059948085093073852150892833968976"
  },
  {
    "crate": "core",
    "file": "core/src/char/mod.rs",
    "func": "<char::ToLowercase as iter::traits::exact_size::ExactSizeIterator>::len",
    "hash": "138146750292933418208000627705911670750"
  },
  {
    "crate": "core",
    "file": "core/src/char/mod.rs",
    "func": "<char::ToLowercase as iter::traits::iterator::Iterator>::__iterator_get_unchecked",
    "hash": "136014736483966281718773019753428532761"
  },
  {
    "crate": "core",
    "file": "core/src/char/mod.rs",
    "func": "<char::ToLowercase as iter::traits::iterator::Iterator>::advance_by",
    "hash": "166632256594311274013091798956489037591"
  },
  {
    "crate": "core",
    "file": "core/src/char/mod.rs",
    "func": "<char::ToLowercase as iter::traits::iterator::Iterator>::count",
    "hash": "744001393418860813217734964554394751737"
  },
  {
    "crate": "core",
    "file": "core/src/char/mod.rs",
    "func": "<char::ToLowercase as iter::traits::iterator::Iterator>::last",
    "hash": "798079274642960846811281804163378376726"
  },
  {
    "crate": "core",
    "file": "core/src/char/mod.rs",
    "func": "<char::ToLowercase as iter::traits::iterator::Iterator>::next",
    "hash": "47613810184584961396780585450865009577"
  },
  {
    "crate": "core",
    "file": "core/src/char/mod.rs",
    "func": "<char::ToLowercase as iter::traits::iterator::Iterator>::size_hint",
    "hash": "1027708593438540248413980505779482502344"
  },
  {
    "crate": "core",
    "file": "core/src/char/mod.rs",
    "func": "<char::ToUppercase as clone::Clone>::clone",
    "hash": "1281540102162692478410053514970799354674"
  },
  {
    "crate": "core",
    "file": "core/src/char/mod.rs",
    "func": "<char::ToUppercase as iter::traits::double_ended::DoubleEndedIterator>::advance_back_by",
    "hash": "8543891363159389582920860483451020261"
  },
  {
    "crate": "core",
    "file": "core/src/char/mod.rs",
    "func": "<char::ToUppercase as iter::traits::double_ended::DoubleEndedIterator>::next_back",
    "hash": "20603512010933453413827288692912679696"
  },
  {
    "crate": "core",
    "file": "core/src/char/mod.rs",
    "func": "<char::ToUppercase as iter::traits::exact_size::ExactSizeIterator>::is_empty",
    "hash": "28182804892575652621262896378129640226"
  },
  {
    "crate": "core",
    "file": "core/src/char/mod.rs",
    "func": "<char::ToUppercase as iter::traits::exact_size::ExactSizeIterator>::len",
    "hash": "20444811762446829696991288622876336974"
  },
  {
    "crate": "core",
    "file": "core/src/char/mod.rs",
    "func": "<char::ToUppercase as iter::traits::iterator::Iterator>::__iterator_get_unchecked",
    "hash": "166143413252335028535533396464854042610"
  },
  {
    "crate": "core",
    "file": "core/src/char/mod.rs",
    "func": "<char::ToUppercase as iter::traits::iterator::Iterator>::advance_by",
    "hash": "114941131914495097537432681118221818874"
  },
  {
    "crate": "core",
    "file": "core/src/char/mod.rs",
    "func": "<char::ToUppercase as iter::traits::iterator::Iterator>::count",
    "hash": "3319693376345974627089461543492396543"
  },
  {
    "crate": "core",
    "file": "core/src/char/mod.rs",
    "func": "<char::ToUppercase as iter::traits::iterator::Iterator>::last",
    "hash": "104438380371883739738937087477673240368"
  },
  {
    "crate": "core",
    "file": "core/src/char/mod.rs",
    "func": "<char::ToUppercase as iter::traits::iterator::Iterator>::next",
    "hash": "1061388293078366328512317637489906106923"
  },
  {
    "crate": "core",
    "file": "core/src/char/mod.rs",
    "func": "<char::ToUppercase as iter::traits::iterator::Iterator>::size_hint",
    "hash": "8062902232142518633462520009088608308"
  },
  {
    "crate": "core",
    "file": "core/src/char/mod.rs",
    "func": "<char::TryFromCharError as clone::Clone>::clone",
    "hash": "17593036413974483450417272064427724356"
  },
  {
    "crate": "core",
    "file": "core/src/char/mod.rs",
    "func": "<char::TryFromCharError as cmp::Eq>::assert_receiver_is_total_eq",
    "hash": "163137489307341236254607985678772685992"
  },
  {
    "crate": "core",
    "file": "core/src/char/mod.rs",
    "func": "<char::TryFromCharError as cmp::PartialEq>::eq",
    "hash": "207895728047414024214160502408986053704"
  },
  {
    "crate": "core",
    "file": "core/src/char/mod.rs",
    "func": "char::CaseMappingIter::new",
    "hash": "136124423097050692635978583231532198097"
  },
  {
    "crate": "core",
    "file": "core/src/char/mod.rs",
    "func": "char::EscapeDebug::backslash",
    "hash": "783953459669900024915752671644269616211"
  },
  {
    "crate": "core",
    "file": "core/src/char/mod.rs",
    "func": "char::EscapeDebug::printable",
    "hash": "5619596178062134676583009599741352142"
  },
  {
    "crate": "core",
    "file": "core/src/char/mod.rs",
    "func": "char::EscapeDebug::unicode",
    "hash": "268086875451287205510163200344495449942"
  },
  {
    "crate": "core",
    "file": "core/src/char/mod.rs",
    "func": "char::EscapeDefault::backslash",
    "hash": "167318693743665471496388970833021607658"
  },
  {
    "crate": "core",
    "file": "core/src/char/mod.rs",
    "func": "char::EscapeDefault::printable",
    "hash": "95001581818926480997273063874299368335"
  },
  {
    "crate": "core",
    "file": "core/src/char/mod.rs",
    "func": "char::EscapeDefault::unicode",
    "hash": "1273370485822193859011483499494015596638"
  },
  {
    "crate": "core",
    "file": "core/src/char/mod.rs",
    "func": "char::EscapeUnicode::new",
    "hash": "1033874615445010319918363787932197942810"
  },
  {
    "crate": "core",
    "file": "core/src/char/mod.rs",
    "func": "char::from_digit",
    "hash": "41074370055697033255632607170202960049"
  },
  {
    "crate": "core",
    "file": "core/src/char/mod.rs",
    "func": "char::from_u32",
    "hash": "924668421615801203904456713519388483"
  },
  {
    "crate": "core",
    "file": "core/src/char/mod.rs",
    "func": "char::from_u32_unchecked",
    "hash": "32080152793206539217639795106598500693"
  },
  {
    "crate": "core",
    "file": "core/src/clone.rs",
    "func": "clone::impls::<impl clone::Clone for bool>::clone",
    "hash": "1541084449582708066812227015681373151583"
  },
  {
    "crate": "core",
    "file": "core/src/clone.rs",
    "func": "clone::impls::<impl clone::Clone for char>::clone",
    "hash": "1684636505577985912917866394062015379629"
  },
  {
    "crate": "core",
    "file": "core/src/clone.rs",
    "func": "clone::impls::<impl clone::Clone for f128>::clone",
    "hash": "134864718858646887498578662502019801872"
  },
  {
    "crate": "core",
    "file": "core/src/clone.rs",
    "func": "clone::impls::<impl clone::Clone for f16>::clone",
    "hash": "62033691751709743921158161411877009058"
  },
  {
    "crate": "core",
    "file": "core/src/clone.rs",
    "func": "clone::impls::<impl clone::Clone for f32>::clone",
    "hash": "62849242641042502655525935897380561555"
  },
  {
    "crate": "core",
    "file": "core/src/clone.rs",
    "func": "clone::impls::<impl clone::Clone for f64>::clone",
    "hash": "1510688254251230865813497044048451380593"
  },
  {
    "crate": "core",
    "file": "core/src/clone.rs",
    "func": "clone::impls::<impl clone::Clone for i128>::clone",
    "hash": "161839298653982029038459114307016294619"
  },
  {
    "crate": "core",
    "file": "core/src/clone.rs",
    "func": "clone::impls::<impl clone::Clone for i16>::clone",
    "hash": "1416907371658077741315444557147585542943"
  },
  {
    "crate": "core",
    "file": "core/src/clone.rs",
    "func": "clone::impls::<impl clone::Clone for i32>::clone",
    "hash": "2946218448093988201964427223285041136"
  },
  {
    "crate": "core",
    "file": "core/src/clone.rs",
    "func": "clone::impls::<impl clone::Clone for i64>::clone",
    "hash": "37339067580597664836529318802427343795"
  },
  {
    "crate": "core",
    "file": "core/src/clone.rs",
    "func": "clone::impls::<impl clone::Clone for i8>::clone",
    "hash": "90692542500502867534412921940530622966"
  },
  {
    "crate": "core",
    "file": "core/src/clone.rs",
    "func": "clone::impls::<impl clone::Clone for isize>::clone",
    "hash": "40841349884173141842442651584006866032"
  },
  {
    "crate": "core",
    "file": "core/src/clone.rs",
    "func": "clone::impls::<impl clone::Clone for u128>::clone",
    "hash": "782533626902243992317767964933214769061"
  },
  {
    "crate": "core",
    "file": "core/src/clone.rs",
    "func": "clone::impls::<impl clone::Clone for u16>::clone",
    "hash": "1405173180943430666414644407524585429282"
  },
  {
    "crate": "core",
    "file": "core/src/clone.rs",
    "func": "clone::impls::<impl clone::Clone for u32>::clone",
    "hash": "10603719114885247727214992470050664594"
  },
  {
    "crate": "core",
    "file": "core/src/clone.rs",
    "func": "clone::impls::<impl clone::Clone for u64>::clone",
    "hash": "171106814752922133318385408044488291847"
  },
  {
    "crate": "core",
    "file": "core/src/clone.rs",
    "func": "clone::impls::<impl clone::Clone for u8>::clone",
    "hash": "91101706103594327621932468101859858531"
  },
  {
    "crate": "core",
    "file": "core/src/clone.rs",
    "func": "clone::impls::<impl clone::Clone for usize>::clone",
    "hash": "147525344997271935276533934923114074305"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "<cmp::Ordering as clone::Clone>::clone",
    "hash": "1453848351783850549116325865097133367598"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "<cmp::Ordering as cmp::Eq>::assert_receiver_is_total_eq",
    "hash": "173990051472475260682432545164290715366"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "<cmp::Ordering as cmp::Ord>::cmp",
    "hash": "90137591796003850359632561321974967469"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "<cmp::Ordering as cmp::PartialEq>::eq",
    "hash": "25315992229481465352451865580694346951"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "<cmp::Ordering as cmp::PartialOrd>::partial_cmp",
    "hash": "58040128369477041818581262470185408620"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::Ordering::as_raw",
    "hash": "1599087357710868766316850218022372470465"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::Ordering::is_eq",
    "hash": "1767636601726053801510136021476408014418"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::Ordering::is_ge",
    "hash": "77015241674195912492077004693443111248"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::Ordering::is_gt",
    "hash": "1413669743415980651815482576558527560187"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::Ordering::is_le",
    "hash": "7720540233689324914916901207397917923"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::Ordering::is_lt",
    "hash": "1135064969461757410215295834489737485864"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::Ordering::is_ne",
    "hash": "5540397206875553286766355609948884527"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::Ordering::reverse",
    "hash": "10330146680765739193313035122530387069"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::Ordering::then",
    "hash": "1417415538638866048610242062592059666242"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::Ord for ()>::cmp",
    "hash": "326266878733747875510010226591721936591"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::Ord for bool>::clamp",
    "hash": "96811812160594087115063758489337812780"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::Ord for bool>::cmp",
    "hash": "88384404180700621366629882541354269403"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::Ord for bool>::max",
    "hash": "141198862792638300034244001504527487083"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::Ord for bool>::min",
    "hash": "45249092865509278445496023662989879959"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::Ord for char>::cmp",
    "hash": "139527066517240058298709637544916107716"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::Ord for i128>::cmp",
    "hash": "44832224789384222802515905590530188068"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::Ord for i16>::cmp",
    "hash": "17570561132490819092874960552795184458"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::Ord for i32>::cmp",
    "hash": "842267059997019422815333829425931124000"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::Ord for i64>::cmp",
    "hash": "131203065817488211067140136749599673893"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::Ord for i8>::cmp",
    "hash": "273822593351941059516531358367108661190"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::Ord for isize>::cmp",
    "hash": "5379374555789658073707012302374996835"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::Ord for u128>::cmp",
    "hash": "1131636666458486906514966799554721553883"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::Ord for u16>::cmp",
    "hash": "78730284242200430723749747438658132860"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::Ord for u32>::cmp",
    "hash": "131804240691040385559237509421631119204"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::Ord for u64>::cmp",
    "hash": "1089932391761665036016414866145987101524"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::Ord for u8>::cmp",
    "hash": "4298436512004098368501497010512321306"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::Ord for usize>::cmp",
    "hash": "951858419091851333614102360024241858063"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialEq for ()>::eq",
    "hash": "4705100405533686565995074127689304415"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialEq for ()>::ne",
    "hash": "1429062094026820723310786334394082734490"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialEq for bool>::eq",
    "hash": "1802889178136868040118343593200685347686"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialEq for bool>::ne",
    "hash": "178554573903023165771469903548629224914"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialEq for char>::eq",
    "hash": "15518699560175228058918609018343356989"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialEq for char>::ne",
    "hash": "93438172312179898191465897835311049562"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialEq for f128>::eq",
    "hash": "132412117790542443258465150605224583056"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialEq for f128>::ne",
    "hash": "155140754874107391946791271500498011272"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialEq for f16>::eq",
    "hash": "98567758370546986983125852220078410127"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialEq for f16>::ne",
    "hash": "35902004169784870955892667614762650595"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialEq for f32>::eq",
    "hash": "25228437426877576351635482740751924775"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialEq for f32>::ne",
    "hash": "47292217725132162384552093565156223818"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialEq for f64>::eq",
    "hash": "53662210377722117247255803692570139662"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialEq for f64>::ne",
    "hash": "17839973167024825035303796143882736645"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialEq for i128>::eq",
    "hash": "84854157009096793184505630589693821140"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialEq for i128>::ne",
    "hash": "4523606285266326479107799930613427596"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialEq for i16>::eq",
    "hash": "46481893354104515173031309152647932738"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialEq for i16>::ne",
    "hash": "4050526925845494852453066671974997164"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialEq for i32>::eq",
    "hash": "1674849932610625866118370104244658210822"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialEq for i32>::ne",
    "hash": "67377197155755049242124838670677101573"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialEq for i64>::eq",
    "hash": "102394854822679185511757346022704137097"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialEq for i64>::ne",
    "hash": "966830624825446352312094373941736813516"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialEq for i8>::eq",
    "hash": "66112845269262938208238172803954980118"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialEq for i8>::ne",
    "hash": "127268315914801632215788024717444007960"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialEq for isize>::eq",
    "hash": "770689426483228761223235743246575806"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialEq for isize>::ne",
    "hash": "118326583535237364012713187347196655489"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialEq for u128>::eq",
    "hash": "64201773556620695745425537250792946260"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialEq for u128>::ne",
    "hash": "1172093201039334143510524123475294682361"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialEq for u16>::eq",
    "hash": "99976419681519545577929510319272264645"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialEq for u16>::ne",
    "hash": "501638087040665454610983510760598562478"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialEq for u32>::eq",
    "hash": "14788582008995232797761326074092651079"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialEq for u32>::ne",
    "hash": "814362674021914825717686245777359703992"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialEq for u64>::eq",
    "hash": "463280735582930019114404485781406104133"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialEq for u64>::ne",
    "hash": "167899847990632413701797351830072679643"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialEq for u8>::eq",
    "hash": "50268492807635183487245076908425358872"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialEq for u8>::ne",
    "hash": "142470248864388377168870267173636394357"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialEq for usize>::eq",
    "hash": "1320467760788560224514230630305072675871"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialEq for usize>::ne",
    "hash": "28385238908980352326805070693895050864"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for ()>::partial_cmp",
    "hash": "1414541300270199418213168766429460715197"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for bool>::__chaining_ge",
    "hash": "578825596355387149613395567298980423769"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for bool>::__chaining_gt",
    "hash": "18978848694670348275182692016708428262"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for bool>::__chaining_le",
    "hash": "177529187826170619114976296329021118707"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for bool>::__chaining_lt",
    "hash": "1115226253549215040310617354234484519419"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for bool>::ge",
    "hash": "798551639269656365810633668857724600431"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for bool>::gt",
    "hash": "103748085360982771628096357783467833374"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for bool>::le",
    "hash": "1604618878034127788917555461967531612844"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for bool>::lt",
    "hash": "102798952029638042176319523404642444156"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for bool>::partial_cmp",
    "hash": "359362747701919629717464054427512026912"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for char>::__chaining_ge",
    "hash": "71264527894865437414010551682653003543"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for char>::__chaining_gt",
    "hash": "161171011629462626583117577797162402362"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for char>::__chaining_le",
    "hash": "163920037673336650801186132432189168010"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for char>::__chaining_lt",
    "hash": "399597032967171941914036882222973238490"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for char>::ge",
    "hash": "116941670053223182849548112347422362172"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for char>::gt",
    "hash": "42680075303052524965485835578817634150"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for char>::le",
    "hash": "25191063086834228011728582489039895343"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for char>::lt",
    "hash": "1690201120002870263910426166964932573304"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for char>::partial_cmp",
    "hash": "24162148448370354589733188262820661775"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for f128>::__chaining_ge",
    "hash": "77570750049454441942845132557359668124"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for f128>::__chaining_gt",
    "hash": "105319187994360730337130640445778098382"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for f128>::__chaining_le",
    "hash": "1175159422002408012410682921135195731807"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for f128>::__chaining_lt",
    "hash": "64371128778089058202286036483345602485"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for f128>::ge",
    "hash": "1112776653218206363714268674996192728274"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for f128>::gt",
    "hash": "782623629868165146717175679726287462758"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for f128>::le",
    "hash": "52333083893762950753975300513354069894"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for f128>::lt",
    "hash": "1072726330345218873818086691183427976262"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for f128>::partial_cmp",
    "hash": "5976169314198244501162287379919144072"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for f16>::__chaining_ge",
    "hash": "1143316090739976730612708710701624315763"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for f16>::__chaining_gt",
    "hash": "5802485527763915903785816903541984550"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for f16>::__chaining_le",
    "hash": "74370977747920265178084032885873630739"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for f16>::__chaining_lt",
    "hash": "1387163546711210556615505660394295610840"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for f16>::ge",
    "hash": "16247735014743643556170438868286695335"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for f16>::gt",
    "hash": "1795146981124003409014685080961516332493"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for f16>::le",
    "hash": "125470925375554590103042773218841190787"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for f16>::lt",
    "hash": "330097328533676009316647207291422362759"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for f16>::partial_cmp",
    "hash": "51253921565357424419363665474916532429"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for f32>::__chaining_ge",
    "hash": "1201694889440830776616491155782243712353"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for f32>::__chaining_gt",
    "hash": "8064556355725971666159407891176223724"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for f32>::__chaining_le",
    "hash": "105204828085430851265042250988438514413"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for f32>::__chaining_lt",
    "hash": "67046926271757515012646727538693885780"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for f32>::ge",
    "hash": "658078132255476494111548478521730703813"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for f32>::gt",
    "hash": "469220993544944414914793290462524071579"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for f32>::le",
    "hash": "21116977571499421344231392672037243897"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for f32>::lt",
    "hash": "40773573738061859959602751174711918062"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for f32>::partial_cmp",
    "hash": "32741184074212339817025314919489807319"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for f64>::__chaining_ge",
    "hash": "1173149172762998377418276918221513185689"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for f64>::__chaining_gt",
    "hash": "158070074086519068765694059185536281341"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for f64>::__chaining_le",
    "hash": "157467864489038012342887292173163315993"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for f64>::__chaining_lt",
    "hash": "1822179160837771135816988259484768122430"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for f64>::ge",
    "hash": "68339023766398858555440975147593137171"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for f64>::gt",
    "hash": "9674521848752756613767926320582986339"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for f64>::le",
    "hash": "938692198099078774712083219862555622919"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for f64>::lt",
    "hash": "171966161495435417465664914131710370997"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for f64>::partial_cmp",
    "hash": "511532948149704845711189102103753452552"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for i128>::__chaining_ge",
    "hash": "341477888021074005512263839230117409292"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for i128>::__chaining_gt",
    "hash": "98038596223338175935015569615538862549"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for i128>::__chaining_le",
    "hash": "171772693376941040631549184287279487111"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for i128>::__chaining_lt",
    "hash": "53291966586716576161924084086348413938"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for i128>::ge",
    "hash": "50955014916640454661837898389233919200"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for i128>::gt",
    "hash": "40375971446719616616292812952070776740"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for i128>::le",
    "hash": "909252076882372822714321152903899582909"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for i128>::lt",
    "hash": "432643872418970768815692863716383369432"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for i128>::partial_cmp",
    "hash": "163550080227793864966356638535326483641"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for i16>::__chaining_ge",
    "hash": "89754109746419697064282609422311153699"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for i16>::__chaining_gt",
    "hash": "33120969441997411617499568395943427527"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for i16>::__chaining_le",
    "hash": "36819412795964640751256964026380709160"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for i16>::__chaining_lt",
    "hash": "1215348657450408908915707620005837030616"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for i16>::ge",
    "hash": "161676835738211674035740305725907625183"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for i16>::gt",
    "hash": "76619691553272127929569312204715869164"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for i16>::le",
    "hash": "17658178577037227397858916360997625917"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for i16>::lt",
    "hash": "1213853443284027005618058598546630235512"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for i16>::partial_cmp",
    "hash": "378067185406193463012370735721593125470"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for i32>::__chaining_ge",
    "hash": "317792569590250014914282631836499933273"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for i32>::__chaining_gt",
    "hash": "925527185545600121214320941965971897059"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for i32>::__chaining_le",
    "hash": "967213496975972407618309591448712697150"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for i32>::__chaining_lt",
    "hash": "40594718373777861913173333482836340135"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for i32>::ge",
    "hash": "1535996575152168769915549877827737279774"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for i32>::gt",
    "hash": "1262279423235411172410734952325013040644"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for i32>::le",
    "hash": "69754678775755535297499542041512795014"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for i32>::lt",
    "hash": "961413065080689263112368134397402718944"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for i32>::partial_cmp",
    "hash": "119929648751817687643890860233822170900"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for i64>::__chaining_ge",
    "hash": "47589363529059518557164846191631812127"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for i64>::__chaining_gt",
    "hash": "1569615108346367101210354453684372262973"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for i64>::__chaining_le",
    "hash": "304975284974325326010269844088334472878"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for i64>::__chaining_lt",
    "hash": "1817930959233718391013674952392569718213"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for i64>::ge",
    "hash": "37605485286327083705540910950398614470"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for i64>::gt",
    "hash": "515369855418007512414387965608362668851"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for i64>::le",
    "hash": "1794809666010129108811414850818778983482"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for i64>::lt",
    "hash": "31971559620634993072497414611837921172"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for i64>::partial_cmp",
    "hash": "2859281157529461291817402771229094178"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for i8>::__chaining_ge",
    "hash": "1108596952885060690113919593807334306167"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for i8>::__chaining_gt",
    "hash": "29557147755429277923355210438705404295"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for i8>::__chaining_le",
    "hash": "16857087145812454999123125049855976483"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for i8>::__chaining_lt",
    "hash": "1012036154051267487610935974485415595462"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for i8>::ge",
    "hash": "1357844897070325128016688287209214308086"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for i8>::gt",
    "hash": "954451088741779958915780013560057788449"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for i8>::le",
    "hash": "97944781607954234714933777742521747758"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for i8>::lt",
    "hash": "59431585877006832114506841815936661435"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for i8>::partial_cmp",
    "hash": "689348305308456613610193932127614414004"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for isize>::__chaining_ge",
    "hash": "74238220381331612411106969544844414137"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for isize>::__chaining_gt",
    "hash": "162856045306888237812597494865305313763"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for isize>::__chaining_le",
    "hash": "1205319475555766320017072830438170774958"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for isize>::__chaining_lt",
    "hash": "150601667537082114577657478468856106029"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for isize>::ge",
    "hash": "128530691637756161902288255534984213898"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for isize>::gt",
    "hash": "67579297537116726217259322251380228589"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for isize>::le",
    "hash": "692745909670683610717943687571091860832"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for isize>::lt",
    "hash": "177500186369641598656848646804160604843"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for isize>::partial_cmp",
    "hash": "1504894046191329342516642283196831270142"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for u128>::__chaining_ge",
    "hash": "4198955234369094945978331441190929155"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for u128>::__chaining_gt",
    "hash": "113721095776886471043363431771612134308"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for u128>::__chaining_le",
    "hash": "46995294116883531787698078568940216452"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for u128>::__chaining_lt",
    "hash": "1098066212123074333516856618561954779120"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for u128>::ge",
    "hash": "103444057591425912974560874025365600988"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for u128>::gt",
    "hash": "1334043413188491969214517283895342564103"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for u128>::le",
    "hash": "43973918452349306445740347792719101674"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for u128>::lt",
    "hash": "585929059500562879912576476726405500891"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for u128>::partial_cmp",
    "hash": "97857633285368943681354350891308659595"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for u16>::__chaining_ge",
    "hash": "3618889498771154404696266738403658285"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for u16>::__chaining_gt",
    "hash": "162939954678090397912888157844254535032"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for u16>::__chaining_le",
    "hash": "403813540871790394313355218333123519238"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for u16>::__chaining_lt",
    "hash": "224538569773332953015935354565133478118"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for u16>::ge",
    "hash": "1250127290689641395013554160309947391491"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for u16>::gt",
    "hash": "184387475556752258705797486417760904645"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for u16>::le",
    "hash": "339429075237884379413705816082025146619"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for u16>::lt",
    "hash": "82654341932789732147751919849221457004"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for u16>::partial_cmp",
    "hash": "177204132674385933317258937504706541492"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for u32>::__chaining_ge",
    "hash": "128841769378838719667823853324957460308"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for u32>::__chaining_gt",
    "hash": "165631093884235901911340502259391976001"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for u32>::__chaining_le",
    "hash": "107348173371221698306089360007976222698"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for u32>::__chaining_lt",
    "hash": "7525438604242668256700235155720471681"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for u32>::ge",
    "hash": "1431354684681232682213532060815840762611"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for u32>::gt",
    "hash": "644738972691477611111440489835984167081"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for u32>::le",
    "hash": "73823948922687090493490572363404488201"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for u32>::lt",
    "hash": "153871104070145767316778160342330240743"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for u32>::partial_cmp",
    "hash": "4976469618670056178712128564843409920"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for u64>::__chaining_ge",
    "hash": "1276924848331803346612424721148379696422"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for u64>::__chaining_gt",
    "hash": "1759615334014351544818399444616972264823"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for u64>::__chaining_le",
    "hash": "1775229380384845135716104350028784713627"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for u64>::__chaining_lt",
    "hash": "504506494268084635912923131009762231740"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for u64>::ge",
    "hash": "782504771221663126315856838856334729028"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for u64>::gt",
    "hash": "104296872960810518573767383121132081425"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for u64>::le",
    "hash": "115347817357415588962889507446769987335"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for u64>::lt",
    "hash": "54685371803764063204690065054665066907"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for u64>::partial_cmp",
    "hash": "877085482244590541498241263273192687"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for u8>::__chaining_ge",
    "hash": "179661276308380416043908849496757309702"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for u8>::__chaining_gt",
    "hash": "1100107231971130229214132907963306794472"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for u8>::__chaining_le",
    "hash": "535861037408648390517583728715194186024"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for u8>::__chaining_lt",
    "hash": "2555464184068495982191126990705662077"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for u8>::ge",
    "hash": "499670831053921794217163067823345305002"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for u8>::gt",
    "hash": "1823693009941540177813329131996096504992"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for u8>::le",
    "hash": "1283469796163921542411319081112879521884"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for u8>::lt",
    "hash": "26005865984918626858637243729294095122"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for u8>::partial_cmp",
    "hash": "96628072369026310369313522421454283121"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for usize>::__chaining_ge",
    "hash": "1548863975034644371418113953602308266846"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for usize>::__chaining_gt",
    "hash": "152030842626583256111932459692417043153"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for usize>::__chaining_le",
    "hash": "136946971767327480267949460325330052198"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for usize>::__chaining_lt",
    "hash": "1214050315828216669613460239412280975881"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for usize>::ge",
    "hash": "1086880474753072881916750292298015254856"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for usize>::gt",
    "hash": "587485916120659342113526814978768353585"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for usize>::le",
    "hash": "1186658527347102749413053744485431793478"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for usize>::lt",
    "hash": "155146884437592745449279657258619050520"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for usize>::partial_cmp",
    "hash": "12056847098724419635546482860389617832"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "<f128 as convert::num::FloatToInt<i128>>::to_int_unchecked",
    "hash": "5401272748005108225170015231844042415"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "<f128 as convert::num::FloatToInt<i16>>::to_int_unchecked",
    "hash": "8106237640557471073580597645246276389"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "<f128 as convert::num::FloatToInt<i32>>::to_int_unchecked",
    "hash": "492233870384668259417646718277520613131"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "<f128 as convert::num::FloatToInt<i64>>::to_int_unchecked",
    "hash": "85436354481777373298678937161968822808"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "<f128 as convert::num::FloatToInt<i8>>::to_int_unchecked",
    "hash": "67272556067146161882674407005627671670"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "<f128 as convert::num::FloatToInt<isize>>::to_int_unchecked",
    "hash": "145859362768437713122255974850783963947"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "<f128 as convert::num::FloatToInt<u128>>::to_int_unchecked",
    "hash": "649373533595446747616634326362916258113"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "<f128 as convert::num::FloatToInt<u16>>::to_int_unchecked",
    "hash": "68691467309782099588566504033335306113"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "<f128 as convert::num::FloatToInt<u32>>::to_int_unchecked",
    "hash": "142095150557611732085601685115493352309"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "<f128 as convert::num::FloatToInt<u64>>::to_int_unchecked",
    "hash": "4047051432235026783944635623816623002"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "<f128 as convert::num::FloatToInt<u8>>::to_int_unchecked",
    "hash": "8759826370357264640712844467855374887"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "<f128 as convert::num::FloatToInt<usize>>::to_int_unchecked",
    "hash": "987003126600730429312936607391211602970"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "<f16 as convert::num::FloatToInt<i128>>::to_int_unchecked",
    "hash": "16330166665644353718187662156311451106"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "<f16 as convert::num::FloatToInt<i16>>::to_int_unchecked",
    "hash": "46138308164662925421872131734313820414"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "<f16 as convert::num::FloatToInt<i32>>::to_int_unchecked",
    "hash": "922371780220321241915961426071415444094"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "<f16 as convert::num::FloatToInt<i64>>::to_int_unchecked",
    "hash": "30943267019948841189819240036255568574"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "<f16 as convert::num::FloatToInt<i8>>::to_int_unchecked",
    "hash": "11540754517172685714952890080583928020"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "<f16 as convert::num::FloatToInt<isize>>::to_int_unchecked",
    "hash": "1657647698240050611110600248014284790678"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "<f16 as convert::num::FloatToInt<u128>>::to_int_unchecked",
    "hash": "1584507318570215242217093049813184331868"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "<f16 as convert::num::FloatToInt<u16>>::to_int_unchecked",
    "hash": "605022253927063737518373324847650302490"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "<f16 as convert::num::FloatToInt<u32>>::to_int_unchecked",
    "hash": "113194812208013255087998247489448877960"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "<f16 as convert::num::FloatToInt<u64>>::to_int_unchecked",
    "hash": "1655810091731811610911551844610285981497"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "<f16 as convert::num::FloatToInt<u8>>::to_int_unchecked",
    "hash": "149684059415400330131224220641522900093"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "<f16 as convert::num::FloatToInt<usize>>::to_int_unchecked",
    "hash": "236602267344438528112569534307232442444"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "<f32 as convert::num::FloatToInt<i128>>::to_int_unchecked",
    "hash": "15080030101056987978349956702811452423"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "<f32 as convert::num::FloatToInt<i16>>::to_int_unchecked",
    "hash": "166802358580199115719878010896079132113"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "<f32 as convert::num::FloatToInt<i32>>::to_int_unchecked",
    "hash": "548163622760939740816876510990731455391"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "<f32 as convert::num::FloatToInt<i64>>::to_int_unchecked",
    "hash": "1084895836427789824717598742751658306639"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "<f32 as convert::num::FloatToInt<i8>>::to_int_unchecked",
    "hash": "34890024067839659768026381397380918139"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "<f32 as convert::num::FloatToInt<isize>>::to_int_unchecked",
    "hash": "167708659183710072111515128342092549088"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "<f32 as convert::num::FloatToInt<u128>>::to_int_unchecked",
    "hash": "433207813363144498614421505327452795449"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "<f32 as convert::num::FloatToInt<u16>>::to_int_unchecked",
    "hash": "1231920946327885171814833090428139865746"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "<f32 as convert::num::FloatToInt<u32>>::to_int_unchecked",
    "hash": "1214858424165111957313963051426664600400"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "<f32 as convert::num::FloatToInt<u64>>::to_int_unchecked",
    "hash": "94526677244680493164919154072316679657"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "<f32 as convert::num::FloatToInt<u8>>::to_int_unchecked",
    "hash": "93978316644746463992277797426831022622"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "<f32 as convert::num::FloatToInt<usize>>::to_int_unchecked",
    "hash": "440086421632680266711470680405402503739"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "<f64 as convert::num::FloatToInt<i128>>::to_int_unchecked",
    "hash": "147227011374976596589077049069025332704"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "<f64 as convert::num::FloatToInt<i16>>::to_int_unchecked",
    "hash": "79501386549668259428026726782306385145"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "<f64 as convert::num::FloatToInt<i32>>::to_int_unchecked",
    "hash": "53595793617303824321148836128309304338"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "<f64 as convert::num::FloatToInt<i64>>::to_int_unchecked",
    "hash": "5317042478714973718750854311883021473"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "<f64 as convert::num::FloatToInt<i8>>::to_int_unchecked",
    "hash": "119408407444599371510815039566879659785"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "<f64 as convert::num::FloatToInt<isize>>::to_int_unchecked",
    "hash": "59245911038507173017966681126328345067"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "<f64 as convert::num::FloatToInt<u128>>::to_int_unchecked",
    "hash": "1334842237500446619917057637565054429902"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "<f64 as convert::num::FloatToInt<u16>>::to_int_unchecked",
    "hash": "1483028211588406849813308090296863861059"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "<f64 as convert::num::FloatToInt<u32>>::to_int_unchecked",
    "hash": "117969322134786505349670780818056937488"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "<f64 as convert::num::FloatToInt<u64>>::to_int_unchecked",
    "hash": "488821708153327801840929483641102328"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "<f64 as convert::num::FloatToInt<u8>>::to_int_unchecked",
    "hash": "890139287041388898414349884129634908933"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "<f64 as convert::num::FloatToInt<usize>>::to_int_unchecked",
    "hash": "1231465154010309634711140755662905314330"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<bool> for f128>::from",
    "hash": "1789542306120465212116311275851087336251"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<bool> for f16>::from",
    "hash": "8073787243304497922826771566958761123"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<bool> for f32>::from",
    "hash": "1858874351108735846764694083905870051"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<bool> for f64>::from",
    "hash": "263863326109784245113318873224162457611"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<bool> for i128>::from",
    "hash": "1794871947812776128313659547381894532445"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<bool> for i16>::from",
    "hash": "48844683957880554112654781190951902465"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<bool> for i32>::from",
    "hash": "15974218049985801664655223501580713974"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<bool> for i64>::from",
    "hash": "12882403312354514405297719775408127111"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<bool> for i8>::from",
    "hash": "7004788824799887475851475436259878269"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<bool> for isize>::from",
    "hash": "292117587579826993915751535867241273080"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<bool> for u128>::from",
    "hash": "88850233496641139502427744750706159355"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<bool> for u16>::from",
    "hash": "1408624451954456259213764556278997655759"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<bool> for u32>::from",
    "hash": "173061126694799202639094260664178350491"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<bool> for u64>::from",
    "hash": "130821916993004383724687895105377127682"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<bool> for u8>::from",
    "hash": "109347173964199969639556475715820209817"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<bool> for usize>::from",
    "hash": "1237504719612890742317982279651710292288"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<f16> for f128>::from",
    "hash": "1055393840019585268511415380711841438649"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<f16> for f64>::from",
    "hash": "1736646244190202049617830120802441423098"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<f32> for f128>::from",
    "hash": "131666853646089964671920147568884316423"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<f32> for f64>::from",
    "hash": "235414070433235062217422026781084034924"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<f64> for f128>::from",
    "hash": "9981326628654144599559555495014818307"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<i16> for f128>::from",
    "hash": "89933557664993762201393948154196722084"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<i16> for f32>::from",
    "hash": "1319258001040250174618186238697089104105"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<i16> for f64>::from",
    "hash": "12566502522213766745682526898092971645"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<i16> for i128>::from",
    "hash": "1090710200514452175617054828032806732506"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<i16> for i32>::from",
    "hash": "1833149354452959124312638353584684583642"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<i16> for i64>::from",
    "hash": "11199516400676442699750745715111286687"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<i16> for isize>::from",
    "hash": "2380421536982920580182943022897387692"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<i32> for f128>::from",
    "hash": "863642899723005104910994403210172628775"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<i32> for f64>::from",
    "hash": "1355983201013722561913515634276583770284"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<i32> for i128>::from",
    "hash": "365231642760684231217869505877800182540"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<i32> for i64>::from",
    "hash": "23310505072668924636368916123711234581"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<i64> for i128>::from",
    "hash": "1292834238592954332710556899317332068846"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<i8> for f128>::from",
    "hash": "113352261355814651529629095432489314160"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<i8> for f16>::from",
    "hash": "1153675145200556803915993423727570360747"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<i8> for f32>::from",
    "hash": "49696116521617059641978538028730640560"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<i8> for f64>::from",
    "hash": "111365693242426027611041356093620648039"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<i8> for i128>::from",
    "hash": "890319913482085357316105283515387199386"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<i8> for i16>::from",
    "hash": "160622156172004142086190069188301971259"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<i8> for i32>::from",
    "hash": "1588015091717471965217496485761920366905"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<i8> for i64>::from",
    "hash": "1305505417289711970015900851218413996192"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<i8> for isize>::from",
    "hash": "1625675642317806584113852399241260884749"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<num::nonzero::NonZero<i16>> for num::nonzero::NonZero<i128>>::from",
    "hash": "58491556841094060324420366370919988350"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<num::nonzero::NonZero<i16>> for num::nonzero::NonZero<i32>>::from",
    "hash": "1820310092248813746011565639416710408763"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<num::nonzero::NonZero<i16>> for num::nonzero::NonZero<i64>>::from",
    "hash": "1197108170090435282112599535823139717655"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<num::nonzero::NonZero<i16>> for num::nonzero::NonZero<isize>>::from",
    "hash": "644729096453581900013244040393993142661"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<num::nonzero::NonZero<i32>> for num::nonzero::NonZero<i128>>::from",
    "hash": "139819559161964318261524887532864948035"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<num::nonzero::NonZero<i32>> for num::nonzero::NonZero<i64>>::from",
    "hash": "147510187568627424765625603100555345395"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<num::nonzero::NonZero<i64>> for num::nonzero::NonZero<i128>>::from",
    "hash": "1306790076330051307610005128888794319311"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<num::nonzero::NonZero<i8>> for num::nonzero::NonZero<i128>>::from",
    "hash": "535209157928950161114258186838210869049"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<num::nonzero::NonZero<i8>> for num::nonzero::NonZero<i16>>::from",
    "hash": "706085246154271972714897589456742393220"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<num::nonzero::NonZero<i8>> for num::nonzero::NonZero<i32>>::from",
    "hash": "157501186597089037352959942370846580391"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<num::nonzero::NonZero<i8>> for num::nonzero::NonZero<i64>>::from",
    "hash": "91048174288358972503873652962823329368"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<num::nonzero::NonZero<i8>> for num::nonzero::NonZero<isize>>::from",
    "hash": "1133633480402993020116053964575365777361"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<num::nonzero::NonZero<u16>> for num::nonzero::NonZero<i128>>::from",
    "hash": "49422798428470159029897236283360819164"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<num::nonzero::NonZero<u16>> for num::nonzero::NonZero<i32>>::from",
    "hash": "104999568441843606787672721267565245326"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<num::nonzero::NonZero<u16>> for num::nonzero::NonZero<i64>>::from",
    "hash": "806865885141267131616361011679645278931"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<num::nonzero::NonZero<u16>> for num::nonzero::NonZero<u128>>::from",
    "hash": "996735112491942813616648862829547021256"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<num::nonzero::NonZero<u16>> for num::nonzero::NonZero<u32>>::from",
    "hash": "1117644119576668765611421560021069206"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<num::nonzero::NonZero<u16>> for num::nonzero::NonZero<u64>>::from",
    "hash": "12263495141459562182581283849058097112"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<num::nonzero::NonZero<u16>> for num::nonzero::NonZero<usize>>::from",
    "hash": "111757564339081251565640720465730084815"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<num::nonzero::NonZero<u32>> for num::nonzero::NonZero<i128>>::from",
    "hash": "182988158162022668363414081102193210140"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<num::nonzero::NonZero<u32>> for num::nonzero::NonZero<i64>>::from",
    "hash": "1597539805302574889010391326181062732136"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<num::nonzero::NonZero<u32>> for num::nonzero::NonZero<u128>>::from",
    "hash": "1447723121600662465713945450092531761352"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<num::nonzero::NonZero<u32>> for num::nonzero::NonZero<u64>>::from",
    "hash": "167282115914545753783033793305740910617"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<num::nonzero::NonZero<u64>> for num::nonzero::NonZero<i128>>::from",
    "hash": "270592372536293705914213133497917067183"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<num::nonzero::NonZero<u64>> for num::nonzero::NonZero<u128>>::from",
    "hash": "1578644316924441665011343994285826011097"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<num::nonzero::NonZero<u8>> for num::nonzero::NonZero<i128>>::from",
    "hash": "994585285459280896728665366305964871"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<num::nonzero::NonZero<u8>> for num::nonzero::NonZero<i16>>::from",
    "hash": "2372917339307070835654441305711148784"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<num::nonzero::NonZero<u8>> for num::nonzero::NonZero<i32>>::from",
    "hash": "790973974534869120911969807722778186225"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<num::nonzero::NonZero<u8>> for num::nonzero::NonZero<i64>>::from",
    "hash": "2358873059258264667775558740677438910"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<num::nonzero::NonZero<u8>> for num::nonzero::NonZero<isize>>::from",
    "hash": "51147248107389135473691053719349406699"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<num::nonzero::NonZero<u8>> for num::nonzero::NonZero<u128>>::from",
    "hash": "19526431466015803483304623585037511862"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<num::nonzero::NonZero<u8>> for num::nonzero::NonZero<u16>>::from",
    "hash": "130937601450912125054670247189513823291"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<num::nonzero::NonZero<u8>> for num::nonzero::NonZero<u32>>::from",
    "hash": "961053942574772345218033030724549725485"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<num::nonzero::NonZero<u8>> for num::nonzero::NonZero<u64>>::from",
    "hash": "155146206541502010383759924842725044624"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<num::nonzero::NonZero<u8>> for num::nonzero::NonZero<usize>>::from",
    "hash": "629220717825883392517057156514223819219"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<u16> for f128>::from",
    "hash": "512906658735565694311099137432300681749"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<u16> for f32>::from",
    "hash": "1761341965649931578012999834761432557263"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<u16> for f64>::from",
    "hash": "550364124564084119314175646831331396057"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<u16> for i128>::from",
    "hash": "831850431982784336714289357141359806659"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<u16> for i32>::from",
    "hash": "265419032335565067813564875751572239549"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<u16> for i64>::from",
    "hash": "62554481119205947824639725698727576544"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<u16> for u128>::from",
    "hash": "269740563742987016016441944846597814243"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<u16> for u32>::from",
    "hash": "696204204190822498510158130940083011402"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<u16> for u64>::from",
    "hash": "1842238048521899319216661918848072417444"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<u16> for usize>::from",
    "hash": "1764493963101210311413165999113212183409"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<u32> for f128>::from",
    "hash": "1072628949059966755616889189654085735094"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<u32> for f64>::from",
    "hash": "16277957510272380702654275820789462576"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<u32> for i128>::from",
    "hash": "975017197663566676911628336219531610474"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<u32> for i64>::from",
    "hash": "981505378062833669713544325705331161573"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<u32> for u128>::from",
    "hash": "1816442911027582312117649205470109147667"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<u32> for u64>::from",
    "hash": "1136360611523765204016894861172344305721"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<u64> for i128>::from",
    "hash": "134946530131405556275291907990542838064"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<u64> for u128>::from",
    "hash": "51960838243998703372174073128523606717"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<u8> for f128>::from",
    "hash": "114726964402839652122421767184822010657"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<u8> for f16>::from",
    "hash": "163949952917421708246620864402828387230"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<u8> for f32>::from",
    "hash": "1821624015889267771913885778514907932624"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<u8> for f64>::from",
    "hash": "790501651740110340717899357923559252217"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<u8> for i128>::from",
    "hash": "35436388388524583839148525314316681194"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<u8> for i16>::from",
    "hash": "353779220660859074916459036090406136562"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<u8> for i32>::from",
    "hash": "159956795948017075193347671756804392483"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<u8> for i64>::from",
    "hash": "318411183871803688713523920246046813227"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<u8> for isize>::from",
    "hash": "1618976793528353030111418463449906028438"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<u8> for u128>::from",
    "hash": "11605445658723319250536995745105048898"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<u8> for u16>::from",
    "hash": "26566903800356228512243370711656654888"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<u8> for u32>::from",
    "hash": "954140692927706953217130803342441391826"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<u8> for u64>::from",
    "hash": "142214227362904135076595781839914230549"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<u8> for usize>::from",
    "hash": "119539198841178170095714608677850051781"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<i128> for i16>::try_from",
    "hash": "45400785337515059313800428576948677164"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<i128> for i32>::try_from",
    "hash": "22476670698940202943146218414991679806"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<i128> for i64>::try_from",
    "hash": "574666309370735163014995696932984813282"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<i128> for i8>::try_from",
    "hash": "161590268300533990794858746155247203544"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<i128> for num::nonzero::NonZero<i128>>::try_from",
    "hash": "118837187681255353445220552634771935572"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<i128> for u128>::try_from",
    "hash": "1461363009013774461517908549331222696338"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<i128> for u16>::try_from",
    "hash": "57570769004231423459104319663931520363"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<i128> for u32>::try_from",
    "hash": "162911855155725631177739123050729941382"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<i128> for u64>::try_from",
    "hash": "901786331183791447117204766429688980199"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<i128> for u8>::try_from",
    "hash": "148072388005614968618257324985150599928"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<i16> for i8>::try_from",
    "hash": "733359851653899404711431532055695869406"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<i16> for num::nonzero::NonZero<i16>>::try_from",
    "hash": "84949256875415713299182602225163534073"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<i16> for u128>::try_from",
    "hash": "16256016850884836540867339519038973719"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<i16> for u16>::try_from",
    "hash": "81141380205958915823319660833716728563"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<i16> for u32>::try_from",
    "hash": "1506500986570558850413196165453119911548"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<i16> for u64>::try_from",
    "hash": "323124167137632733115538003972132479163"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<i16> for u8>::try_from",
    "hash": "143848739864720140814329719047043840566"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<i32> for i16>::try_from",
    "hash": "573770195936127898311478162142096980830"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<i32> for i8>::try_from",
    "hash": "95301580034018654567484516795264236572"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<i32> for num::nonzero::NonZero<i32>>::try_from",
    "hash": "989198349328199178710958639457049224326"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<i32> for u128>::try_from",
    "hash": "13975179106737034521745066623644956264"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<i32> for u16>::try_from",
    "hash": "1213164403944714857712360112873116207173"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<i32> for u32>::try_from",
    "hash": "121422642591812018294899847634585834010"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<i32> for u64>::try_from",
    "hash": "1271799165121182816414134973384602480276"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<i32> for u8>::try_from",
    "hash": "4259929890161278738269551006724674751"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<i64> for i16>::try_from",
    "hash": "71007129285107525449836079876094009398"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<i64> for i32>::try_from",
    "hash": "1638487504070731725716065886969433940892"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<i64> for i8>::try_from",
    "hash": "40701467937063224329145833540528517385"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<i64> for num::nonzero::NonZero<i64>>::try_from",
    "hash": "168735114045765878529878789107493902500"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<i64> for u128>::try_from",
    "hash": "1622942722331221769216140901026378060370"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<i64> for u16>::try_from",
    "hash": "101327775189225934811191983572300893734"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<i64> for u32>::try_from",
    "hash": "50159391800631589098220055028840485979"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<i64> for u64>::try_from",
    "hash": "1065280746673628320315272301742015988230"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<i64> for u8>::try_from",
    "hash": "168048301556740617888959180618572804743"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<i8> for num::nonzero::NonZero<i8>>::try_from",
    "hash": "77120269147797600248175845795680254947"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<i8> for u128>::try_from",
    "hash": "18662524535915571046129862810317402724"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<i8> for u16>::try_from",
    "hash": "1816613738275826949712494009729878504050"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<i8> for u32>::try_from",
    "hash": "11306559994856447903355850885578388778"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<i8> for u64>::try_from",
    "hash": "109183171310725104116844937846108903249"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<i8> for u8>::try_from",
    "hash": "79254900824325133954234023207298724785"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<isize> for num::nonzero::NonZero<isize>>::try_from",
    "hash": "965577863474001136015059078542511670868"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<isize> for usize>::try_from",
    "hash": "107531238139093707791602505055265415327"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<i128>> for num::nonzero::NonZero<i16>>::try_from",
    "hash": "11019540738359226266867225001725080317"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<i128>> for num::nonzero::NonZero<i32>>::try_from",
    "hash": "82546279272763257167672626003957878696"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<i128>> for num::nonzero::NonZero<i64>>::try_from",
    "hash": "123009501676033577316622462413485857428"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<i128>> for num::nonzero::NonZero<i8>>::try_from",
    "hash": "135702335153070213677482736450703439673"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<i128>> for num::nonzero::NonZero<isize>>::try_from",
    "hash": "1705544319785759930817624748115343822625"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<i128>> for num::nonzero::NonZero<u128>>::try_from",
    "hash": "154669281398335540559880250085116797302"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<i128>> for num::nonzero::NonZero<u16>>::try_from",
    "hash": "138946047207132949871614508075013744446"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<i128>> for num::nonzero::NonZero<u32>>::try_from",
    "hash": "1839066598476505795311378363783840682940"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<i128>> for num::nonzero::NonZero<u64>>::try_from",
    "hash": "155212484457817171414111825323679947160"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<i128>> for num::nonzero::NonZero<u8>>::try_from",
    "hash": "52485549925812978578721959576354217931"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<i128>> for num::nonzero::NonZero<usize>>::try_from",
    "hash": "69236865892356775568780616173054144176"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<i16>> for num::nonzero::NonZero<i8>>::try_from",
    "hash": "1798554948936114492617394698578492161843"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<i16>> for num::nonzero::NonZero<u128>>::try_from",
    "hash": "37865844926949945646618949307323110692"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<i16>> for num::nonzero::NonZero<u16>>::try_from",
    "hash": "73763846100719908173000228856010337443"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<i16>> for num::nonzero::NonZero<u32>>::try_from",
    "hash": "71199339279881931549027823721424207356"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<i16>> for num::nonzero::NonZero<u64>>::try_from",
    "hash": "136581893226076625041976178688863395279"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<i16>> for num::nonzero::NonZero<u8>>::try_from",
    "hash": "874551175494686799011197638141908539371"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<i16>> for num::nonzero::NonZero<usize>>::try_from",
    "hash": "42960815658927101852042907668932720509"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<i32>> for num::nonzero::NonZero<i16>>::try_from",
    "hash": "38201621106108616332955530021968675797"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<i32>> for num::nonzero::NonZero<i8>>::try_from",
    "hash": "103121776572797234913467836024555322547"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<i32>> for num::nonzero::NonZero<isize>>::try_from",
    "hash": "147116523937777449948036467139590908211"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<i32>> for num::nonzero::NonZero<u128>>::try_from",
    "hash": "1689625635204351351911729899587969103891"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<i32>> for num::nonzero::NonZero<u16>>::try_from",
    "hash": "1229116996998498873010082321977573615592"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<i32>> for num::nonzero::NonZero<u32>>::try_from",
    "hash": "23863289301434350531655510556353058867"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<i32>> for num::nonzero::NonZero<u64>>::try_from",
    "hash": "150699607339497990877496804631327076074"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<i32>> for num::nonzero::NonZero<u8>>::try_from",
    "hash": "861918496193927008213842976680284865534"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<i32>> for num::nonzero::NonZero<usize>>::try_from",
    "hash": "619798984899756932515429268725270187751"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<i64>> for num::nonzero::NonZero<i16>>::try_from",
    "hash": "161247899323408336671830209532311654676"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<i64>> for num::nonzero::NonZero<i32>>::try_from",
    "hash": "12408105728699475344810104687063003770"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<i64>> for num::nonzero::NonZero<i8>>::try_from",
    "hash": "466366853195706811917910078394781125317"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<i64>> for num::nonzero::NonZero<isize>>::try_from",
    "hash": "383072198468491028710824443156715267659"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<i64>> for num::nonzero::NonZero<u128>>::try_from",
    "hash": "10086573998280272666883448030814110964"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<i64>> for num::nonzero::NonZero<u16>>::try_from",
    "hash": "148697437962905606913653240521116645751"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<i64>> for num::nonzero::NonZero<u32>>::try_from",
    "hash": "48502607519426667569338095415249439404"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<i64>> for num::nonzero::NonZero<u64>>::try_from",
    "hash": "290785426891951189215727161591376198150"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<i64>> for num::nonzero::NonZero<u8>>::try_from",
    "hash": "6457758521918510711843756013721196486"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<i64>> for num::nonzero::NonZero<usize>>::try_from",
    "hash": "1164531150921700006215811780871628022844"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<i8>> for num::nonzero::NonZero<u128>>::try_from",
    "hash": "1274385123232947471014879437684757664120"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<i8>> for num::nonzero::NonZero<u16>>::try_from",
    "hash": "6314249675691901942831025761300253617"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<i8>> for num::nonzero::NonZero<u32>>::try_from",
    "hash": "165264129091861880186136254555229097559"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<i8>> for num::nonzero::NonZero<u64>>::try_from",
    "hash": "1067749161952903389616356541010479252520"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<i8>> for num::nonzero::NonZero<u8>>::try_from",
    "hash": "707344941213071920610887837351441205824"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<i8>> for num::nonzero::NonZero<usize>>::try_from",
    "hash": "151822341781222117365671759970653370218"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<isize>> for num::nonzero::NonZero<i128>>::try_from",
    "hash": "335494572156154425216378699558035136491"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<isize>> for num::nonzero::NonZero<i16>>::try_from",
    "hash": "47132719673326635883368344536497086350"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<isize>> for num::nonzero::NonZero<i32>>::try_from",
    "hash": "44652055448198233966750945215951545871"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<isize>> for num::nonzero::NonZero<i64>>::try_from",
    "hash": "826607288955270772811482257396820607302"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<isize>> for num::nonzero::NonZero<i8>>::try_from",
    "hash": "1275666415125366864913499071916982791128"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<isize>> for num::nonzero::NonZero<u128>>::try_from",
    "hash": "210316891932058829212375269087818426156"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<isize>> for num::nonzero::NonZero<u16>>::try_from",
    "hash": "41280453999333922545291953725177640139"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<isize>> for num::nonzero::NonZero<u32>>::try_from",
    "hash": "1585788250846892973317326497637928601522"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<isize>> for num::nonzero::NonZero<u64>>::try_from",
    "hash": "442009392889949918813610906124781146373"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<isize>> for num::nonzero::NonZero<u8>>::try_from",
    "hash": "504931040448131804617555516030728268562"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<isize>> for num::nonzero::NonZero<usize>>::try_from",
    "hash": "217957877447260114210642988526224054542"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<u128>> for num::nonzero::NonZero<i128>>::try_from",
    "hash": "43916800206612961108179588684595845894"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<u128>> for num::nonzero::NonZero<i16>>::try_from",
    "hash": "68189415595448143833975906167863663650"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<u128>> for num::nonzero::NonZero<i32>>::try_from",
    "hash": "175932792461758132499393180528740309017"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<u128>> for num::nonzero::NonZero<i64>>::try_from",
    "hash": "351601993133054313214049902311505326900"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<u128>> for num::nonzero::NonZero<i8>>::try_from",
    "hash": "138234736290158318642385960814016245935"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<u128>> for num::nonzero::NonZero<isize>>::try_from",
    "hash": "59723515428562107091080975560957282134"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<u128>> for num::nonzero::NonZero<u16>>::try_from",
    "hash": "90581778828219067292455991201400418803"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<u128>> for num::nonzero::NonZero<u32>>::try_from",
    "hash": "84105254657735070172127859668824304832"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<u128>> for num::nonzero::NonZero<u64>>::try_from",
    "hash": "1045767639470618449817499479716206048063"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<u128>> for num::nonzero::NonZero<u8>>::try_from",
    "hash": "20069051986071202266636147284612581108"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<u128>> for num::nonzero::NonZero<usize>>::try_from",
    "hash": "127710422173885673999195248688985347415"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<u16>> for num::nonzero::NonZero<i16>>::try_from",
    "hash": "605173813953591930710077979953312198684"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<u16>> for num::nonzero::NonZero<i8>>::try_from",
    "hash": "430187069117792661111690233985085391999"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<u16>> for num::nonzero::NonZero<isize>>::try_from",
    "hash": "1423491425785340539412583389480453359343"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<u16>> for num::nonzero::NonZero<u8>>::try_from",
    "hash": "61491997106362081115448953402250522245"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<u32>> for num::nonzero::NonZero<i16>>::try_from",
    "hash": "132164386914366661978690148872615994810"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<u32>> for num::nonzero::NonZero<i32>>::try_from",
    "hash": "125664174814136875035850106452687855760"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<u32>> for num::nonzero::NonZero<i8>>::try_from",
    "hash": "95539527937447306252007392171868718823"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<u32>> for num::nonzero::NonZero<isize>>::try_from",
    "hash": "101281648492815555708418572527472442580"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<u32>> for num::nonzero::NonZero<u16>>::try_from",
    "hash": "73744748513341243547494582893360850820"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<u32>> for num::nonzero::NonZero<u8>>::try_from",
    "hash": "59291965901206900076995969151987575232"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<u32>> for num::nonzero::NonZero<usize>>::try_from",
    "hash": "60321097069120122895978481133088925741"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<u64>> for num::nonzero::NonZero<i16>>::try_from",
    "hash": "954087622639304471214799387919034773272"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<u64>> for num::nonzero::NonZero<i32>>::try_from",
    "hash": "140803103862900534712899507027305662504"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<u64>> for num::nonzero::NonZero<i64>>::try_from",
    "hash": "83025901533027457382447077441354809629"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<u64>> for num::nonzero::NonZero<i8>>::try_from",
    "hash": "813782735237899247712072289698328229024"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<u64>> for num::nonzero::NonZero<isize>>::try_from",
    "hash": "89544501442801723855780373438519118004"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<u64>> for num::nonzero::NonZero<u16>>::try_from",
    "hash": "127560676341679998546136683589183784043"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<u64>> for num::nonzero::NonZero<u32>>::try_from",
    "hash": "174557349173451826725962670190021715290"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<u64>> for num::nonzero::NonZero<u8>>::try_from",
    "hash": "122492286256890936137836763825562312676"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<u64>> for num::nonzero::NonZero<usize>>::try_from",
    "hash": "1419035773430815165414294210136237736266"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<u8>> for num::nonzero::NonZero<i8>>::try_from",
    "hash": "1406052376180022428215017825323183900785"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<usize>> for num::nonzero::NonZero<i128>>::try_from",
    "hash": "178462976049892909429913789970727383030"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<usize>> for num::nonzero::NonZero<i16>>::try_from",
    "hash": "1666940268628542519114780260559166798678"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<usize>> for num::nonzero::NonZero<i32>>::try_from",
    "hash": "499013690831186719716137403274920423332"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<usize>> for num::nonzero::NonZero<i64>>::try_from",
    "hash": "51954997581849756398694842843189241119"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<usize>> for num::nonzero::NonZero<i8>>::try_from",
    "hash": "35274774973705374738787627174155183602"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<usize>> for num::nonzero::NonZero<isize>>::try_from",
    "hash": "1629780610810076828412671004268750181162"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<usize>> for num::nonzero::NonZero<u128>>::try_from",
    "hash": "1566738375165383875210786335005034516044"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<usize>> for num::nonzero::NonZero<u16>>::try_from",
    "hash": "12364030635206213711455159513097050708"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<usize>> for num::nonzero::NonZero<u32>>::try_from",
    "hash": "13796466379647340443519191260163065246"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<usize>> for num::nonzero::NonZero<u64>>::try_from",
    "hash": "160691290356028877168212000803906597257"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<usize>> for num::nonzero::NonZero<u8>>::try_from",
    "hash": "945318657440698794112935586650535837939"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<u128> for i128>::try_from",
    "hash": "57332215216175682143749418825706612279"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<u128> for i16>::try_from",
    "hash": "135661464612935099024578153667946876561"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<u128> for i32>::try_from",
    "hash": "672244633318314557210004031367326228511"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<u128> for i64>::try_from",
    "hash": "278271362135115644617994338323174157326"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<u128> for i8>::try_from",
    "hash": "157957507334109287547543973283778371301"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<u128> for num::nonzero::NonZero<u128>>::try_from",
    "hash": "1595403695326653930313202514321151914499"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<u128> for u16>::try_from",
    "hash": "76553406888944474865503468346823992683"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<u128> for u32>::try_from",
    "hash": "129184721481646138903387477062011521864"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<u128> for u64>::try_from",
    "hash": "3173128069787095670257188181900050962"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<u128> for u8>::try_from",
    "hash": "84532336648828569145979153128160835249"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<u16> for i16>::try_from",
    "hash": "18451542368111129307691596127196939723"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<u16> for i8>::try_from",
    "hash": "181690701442839249268334871386059476939"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<u16> for num::nonzero::NonZero<u16>>::try_from",
    "hash": "78358814786771827482047425668971065299"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<u16> for u8>::try_from",
    "hash": "431958222759024046615902237670435086372"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<u32> for i16>::try_from",
    "hash": "183265229315889536017532498855707389276"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<u32> for i32>::try_from",
    "hash": "759852156414737248511755057609752156606"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<u32> for i8>::try_from",
    "hash": "158902917307954708315023490175289057183"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<u32> for num::nonzero::NonZero<u32>>::try_from",
    "hash": "670952491731947639813977518546520197914"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<u32> for u16>::try_from",
    "hash": "141490897541753691963849345144419509446"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<u32> for u8>::try_from",
    "hash": "997691888673995826812326854743930117049"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<u64> for i16>::try_from",
    "hash": "63719799245528444193180022899801616945"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<u64> for i32>::try_from",
    "hash": "1234169455594756707117606728985182623540"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<u64> for i64>::try_from",
    "hash": "543575627001539470811422384893076970643"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<u64> for i8>::try_from",
    "hash": "114073842630895118507046641116552654187"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<u64> for num::nonzero::NonZero<u64>>::try_from",
    "hash": "423917164867771358211101353848038830366"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<u64> for u16>::try_from",
    "hash": "811554415972493756511080819475541218670"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<u64> for u32>::try_from",
    "hash": "1522263702256196485210255200377386500474"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<u64> for u8>::try_from",
    "hash": "92689986876534024435272597734550757874"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<u8> for i8>::try_from",
    "hash": "88569041171201628845418150063489259012"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<u8> for num::nonzero::NonZero<u8>>::try_from",
    "hash": "123070029319593327071894072794706016851"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<usize> for isize>::try_from",
    "hash": "362347083875055263112839943619216221392"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<usize> for num::nonzero::NonZero<usize>>::try_from",
    "hash": "7150499813270988691938123602937634502"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::ptr_try_from_impls::<impl convert::TryFrom<i128> for isize>::try_from",
    "hash": "4033948789137983777514840859967203612"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::ptr_try_from_impls::<impl convert::TryFrom<i128> for usize>::try_from",
    "hash": "1514764243439153597911722397688682933483"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::ptr_try_from_impls::<impl convert::TryFrom<i16> for usize>::try_from",
    "hash": "1206423323380894974814525729863658879749"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::ptr_try_from_impls::<impl convert::TryFrom<i32> for isize>::try_from",
    "hash": "99239517373702519855383656533600140"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::ptr_try_from_impls::<impl convert::TryFrom<i32> for usize>::try_from",
    "hash": "1601294861053505017581954277510734537"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::ptr_try_from_impls::<impl convert::TryFrom<i64> for isize>::try_from",
    "hash": "1074531437215324548416132708912002073872"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::ptr_try_from_impls::<impl convert::TryFrom<i64> for usize>::try_from",
    "hash": "1629237951619172494613512912627692435381"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::ptr_try_from_impls::<impl convert::TryFrom<i8> for usize>::try_from",
    "hash": "169955545728263894991380030287598049463"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::ptr_try_from_impls::<impl convert::TryFrom<isize> for i128>::try_from",
    "hash": "146379547750171201592970558072826146848"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::ptr_try_from_impls::<impl convert::TryFrom<isize> for i16>::try_from",
    "hash": "1738779815181392522113956186257995674583"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::ptr_try_from_impls::<impl convert::TryFrom<isize> for i32>::try_from",
    "hash": "99658529063387671455898652470697756202"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::ptr_try_from_impls::<impl convert::TryFrom<isize> for i64>::try_from",
    "hash": "1698601265467042607116126292092517178310"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::ptr_try_from_impls::<impl convert::TryFrom<isize> for i8>::try_from",
    "hash": "92431971319528807816579539856961699677"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::ptr_try_from_impls::<impl convert::TryFrom<isize> for u128>::try_from",
    "hash": "93471601783425491098007861264284854148"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::ptr_try_from_impls::<impl convert::TryFrom<isize> for u16>::try_from",
    "hash": "1295032207764286694410252742421794055661"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::ptr_try_from_impls::<impl convert::TryFrom<isize> for u32>::try_from",
    "hash": "54992589347055033649447304318638605326"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::ptr_try_from_impls::<impl convert::TryFrom<isize> for u64>::try_from",
    "hash": "76872900857839605602465831828297436074"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::ptr_try_from_impls::<impl convert::TryFrom<isize> for u8>::try_from",
    "hash": "24170321743216931748381989004591679950"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::ptr_try_from_impls::<impl convert::TryFrom<u128> for isize>::try_from",
    "hash": "506736437419819875917096708881545893696"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::ptr_try_from_impls::<impl convert::TryFrom<u128> for usize>::try_from",
    "hash": "49122704626954220705865192611008769435"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::ptr_try_from_impls::<impl convert::TryFrom<u16> for isize>::try_from",
    "hash": "115920951211358453922589786995681302177"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::ptr_try_from_impls::<impl convert::TryFrom<u32> for isize>::try_from",
    "hash": "1373797997030762842711357471558839585000"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::ptr_try_from_impls::<impl convert::TryFrom<u32> for usize>::try_from",
    "hash": "174738820542010497823070345102824196978"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::ptr_try_from_impls::<impl convert::TryFrom<u64> for isize>::try_from",
    "hash": "20054321882402467582072971713456962820"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::ptr_try_from_impls::<impl convert::TryFrom<u64> for usize>::try_from",
    "hash": "1771327508445185541917209031555432793358"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::ptr_try_from_impls::<impl convert::TryFrom<usize> for i128>::try_from",
    "hash": "15832264758658199599985182901513224871"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::ptr_try_from_impls::<impl convert::TryFrom<usize> for i16>::try_from",
    "hash": "49889617133935086294757051517432251961"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::ptr_try_from_impls::<impl convert::TryFrom<usize> for i32>::try_from",
    "hash": "1148227617764955896117138128328382274440"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::ptr_try_from_impls::<impl convert::TryFrom<usize> for i64>::try_from",
    "hash": "3054266711627170871461992303278575904"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::ptr_try_from_impls::<impl convert::TryFrom<usize> for i8>::try_from",
    "hash": "23480848983081359624076562068745522984"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::ptr_try_from_impls::<impl convert::TryFrom<usize> for u128>::try_from",
    "hash": "73108653733398811367440736623711379"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::ptr_try_from_impls::<impl convert::TryFrom<usize> for u16>::try_from",
    "hash": "25766193535890195209501582472198083943"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::ptr_try_from_impls::<impl convert::TryFrom<usize> for u32>::try_from",
    "hash": "972810509204405036809177985934168314"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::ptr_try_from_impls::<impl convert::TryFrom<usize> for u64>::try_from",
    "hash": "1820418291522865753218283456206022472387"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::ptr_try_from_impls::<impl convert::TryFrom<usize> for u8>::try_from",
    "hash": "11222097851883566255542748304429478808"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_f16_to_int_unchecked::f128::i128::check_float_to_int_unchecked",
    "hash": "726079433780871972118089782038700119377",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_f16_to_int_unchecked::f128::i16::check_float_to_int_unchecked",
    "hash": "76846065561055953636861286331192677752",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_f16_to_int_unchecked::f128::i32::check_float_to_int_unchecked",
    "hash": "1105840258289478376917496062547132550484",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_f16_to_int_unchecked::f128::i64::check_float_to_int_unchecked",
    "hash": "1607076611541251598013816161143751354067",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_f16_to_int_unchecked::f128::i8::check_float_to_int_unchecked",
    "hash": "127232198393010836642289269534061209082",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_f16_to_int_unchecked::f128::isize::check_float_to_int_unchecked",
    "hash": "166057331918895372681798058056598137041",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_f16_to_int_unchecked::f128::u128::check_float_to_int_unchecked",
    "hash": "919159616503615394714490857978644641280",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_f16_to_int_unchecked::f128::u16::check_float_to_int_unchecked",
    "hash": "762567687678203972310208172292907155030",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_f16_to_int_unchecked::f128::u32::check_float_to_int_unchecked",
    "hash": "547630039776911227011303061320692132287",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_f16_to_int_unchecked::f128::u64::check_float_to_int_unchecked",
    "hash": "6099386460527358425752548945285578685",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_f16_to_int_unchecked::f128::u8::check_float_to_int_unchecked",
    "hash": "127577644685073215278982252595795016341",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_f16_to_int_unchecked::f128::usize::check_float_to_int_unchecked",
    "hash": "430210428455886362711680369326149647181",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_f16_to_int_unchecked::f16::i128::check_float_to_int_unchecked",
    "hash": "1238503737569176298710969684680541114128",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_f16_to_int_unchecked::f16::i16::check_float_to_int_unchecked",
    "hash": "124781082545870060694837878366712111795",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_f16_to_int_unchecked::f16::i32::check_float_to_int_unchecked",
    "hash": "128028370812126816906769636064756715477",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_f16_to_int_unchecked::f16::i64::check_float_to_int_unchecked",
    "hash": "165665243125173871492737109976075458007",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_f16_to_int_unchecked::f16::i8::check_float_to_int_unchecked",
    "hash": "149553111406340368392186777842108849819",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_f16_to_int_unchecked::f16::isize::check_float_to_int_unchecked",
    "hash": "1469844425945096498916047634334419397427",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_f16_to_int_unchecked::f16::u128::check_float_to_int_unchecked",
    "hash": "733635885393604379613211839354327018409",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_f16_to_int_unchecked::f16::u16::check_float_to_int_unchecked",
    "hash": "320662952608664908018025284089592123742",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_f16_to_int_unchecked::f16::u32::check_float_to_int_unchecked",
    "hash": "832955836561587953311409149842976405716",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_f16_to_int_unchecked::f16::u64::check_float_to_int_unchecked",
    "hash": "1257469705707121330616589411327459450738",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_f16_to_int_unchecked::f16::u8::check_float_to_int_unchecked",
    "hash": "10751741823013818023296398191134491153",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_f16_to_int_unchecked::f16::usize::check_float_to_int_unchecked",
    "hash": "114095987978617841117192053508032299428",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_f16_to_int_unchecked::f32::i128::check_float_to_int_unchecked",
    "hash": "535717628773564927115028078573492383124",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_f16_to_int_unchecked::f32::i16::check_float_to_int_unchecked",
    "hash": "122327743583945512562359896861349506593",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_f16_to_int_unchecked::f32::i32::check_float_to_int_unchecked",
    "hash": "15914092602755463446443099414265087857",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_f16_to_int_unchecked::f32::i64::check_float_to_int_unchecked",
    "hash": "149096560235410100961693381099705623699",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_f16_to_int_unchecked::f32::i8::check_float_to_int_unchecked",
    "hash": "278565233543276133114574024160846867568",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_f16_to_int_unchecked::f32::isize::check_float_to_int_unchecked",
    "hash": "69479829321471664513814416686077760409",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_f16_to_int_unchecked::f32::u128::check_float_to_int_unchecked",
    "hash": "81600628266660511481556811809269509960",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_f16_to_int_unchecked::f32::u16::check_float_to_int_unchecked",
    "hash": "161990425485029979841639393033572354820",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_f16_to_int_unchecked::f32::u32::check_float_to_int_unchecked",
    "hash": "156922579332899417779699777769463300777",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_f16_to_int_unchecked::f32::u64::check_float_to_int_unchecked",
    "hash": "789855232862000207016220004877566949897",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_f16_to_int_unchecked::f32::u8::check_float_to_int_unchecked",
    "hash": "1561096723784424062412945495968473449070",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_f16_to_int_unchecked::f32::usize::check_float_to_int_unchecked",
    "hash": "115600040551940030518265706276112820212",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_f16_to_int_unchecked::f64::i128::check_float_to_int_unchecked",
    "hash": "1797053298718753334516989592935679000737",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_f16_to_int_unchecked::f64::i16::check_float_to_int_unchecked",
    "hash": "605708909461772873713557109386036971072",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_f16_to_int_unchecked::f64::i32::check_float_to_int_unchecked",
    "hash": "1809788755676603313612647733018503500769",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_f16_to_int_unchecked::f64::i64::check_float_to_int_unchecked",
    "hash": "97485931389339903367038508051012279242",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_f16_to_int_unchecked::f64::i8::check_float_to_int_unchecked",
    "hash": "81146701544910379369805920554754620569",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_f16_to_int_unchecked::f64::isize::check_float_to_int_unchecked",
    "hash": "126319963542422124969754106204175646335",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_f16_to_int_unchecked::f64::u128::check_float_to_int_unchecked",
    "hash": "4647838360162947036712375254210294809",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_f16_to_int_unchecked::f64::u16::check_float_to_int_unchecked",
    "hash": "449049172364678259714685126827463384282",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_f16_to_int_unchecked::f64::u32::check_float_to_int_unchecked",
    "hash": "39037417319840225437501193300680936469",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_f16_to_int_unchecked::f64::u64::check_float_to_int_unchecked",
    "hash": "132220176709584074641660094302990916751",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_f16_to_int_unchecked::f64::u8::check_float_to_int_unchecked",
    "hash": "95098321863824337398735446891713760654",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_f16_to_int_unchecked::f64::usize::check_float_to_int_unchecked",
    "hash": "815110889484150127713188982799153450452",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i128::i16::check_nonzero_int_try_from_nonzero_int",
    "hash": "292276183212916726411130958993805756873",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i128::i16::check_nonzero_int_try_from_nonzero_int_should_panic",
    "hash": "43689243214645867672819786947770117045",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i128::i32::check_nonzero_int_try_from_nonzero_int",
    "hash": "1732880950653414721715664355983150979189",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i128::i32::check_nonzero_int_try_from_nonzero_int_should_panic",
    "hash": "29485014421653927873369679289416960623",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i128::i64::check_nonzero_int_try_from_nonzero_int",
    "hash": "806719788635133720412219718388387107568",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i128::i64::check_nonzero_int_try_from_nonzero_int_should_panic",
    "hash": "84648977518759344318586493067282576536",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i128::i8::check_nonzero_int_try_from_nonzero_int",
    "hash": "160318994729113339133979079770353115791",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i128::i8::check_nonzero_int_try_from_nonzero_int_should_panic",
    "hash": "157216536372924528837039391582530629203",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i128::isize::check_nonzero_int_try_from_nonzero_int",
    "hash": "361893070407544903411612077262737017361",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i128::isize::check_nonzero_int_try_from_nonzero_int_should_panic",
    "hash": "251839009420854010114653503466364797138",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i128::u128::check_nonzero_int_try_from_nonzero_int",
    "hash": "102433237952634121304971328607543322177",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i128::u128::check_nonzero_int_try_from_nonzero_int_should_panic",
    "hash": "172961023959842339803422179475419870612",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i128::u16::check_nonzero_int_try_from_nonzero_int",
    "hash": "145483412594470465122946595905542579625",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i128::u16::check_nonzero_int_try_from_nonzero_int_should_panic",
    "hash": "164020304603446861116427515133084306963",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i128::u32::check_nonzero_int_try_from_nonzero_int",
    "hash": "723731637050353317213708311368827832475",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i128::u32::check_nonzero_int_try_from_nonzero_int_should_panic",
    "hash": "130295687664501312215007595799663046823",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i128::u64::check_nonzero_int_try_from_nonzero_int",
    "hash": "123614619235016641617442759352132230537",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i128::u64::check_nonzero_int_try_from_nonzero_int_should_panic",
    "hash": "1211687633548320027914124332954140330294",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i128::u8::check_nonzero_int_try_from_nonzero_int",
    "hash": "28876856912947517647904082463673651859",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i128::u8::check_nonzero_int_try_from_nonzero_int_should_panic",
    "hash": "57344119128081652226600086166666169403",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i128::usize::check_nonzero_int_try_from_nonzero_int",
    "hash": "208568122441029525412081952560208430484",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i128::usize::check_nonzero_int_try_from_nonzero_int_should_panic",
    "hash": "4516437970916719225533579004827438093",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i16::i8::check_nonzero_int_try_from_nonzero_int",
    "hash": "133508060919324748978602189024945734141",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i16::i8::check_nonzero_int_try_from_nonzero_int_should_panic",
    "hash": "77352597390386105051101883774765887667",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i16::u128::check_nonzero_int_try_from_nonzero_int",
    "hash": "134044849077619461039266427925262329341",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i16::u128::check_nonzero_int_try_from_nonzero_int_should_panic",
    "hash": "211632216179045246911375004329111057410",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i16::u16::check_nonzero_int_try_from_nonzero_int",
    "hash": "122985965657659814905593157764315323947",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i16::u16::check_nonzero_int_try_from_nonzero_int_should_panic",
    "hash": "163988377863065663749595404209189223678",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i16::u32::check_nonzero_int_try_from_nonzero_int",
    "hash": "1574125866670952779714023904007174896196",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i16::u32::check_nonzero_int_try_from_nonzero_int_should_panic",
    "hash": "125473969872627109874217025925987913658",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i16::u64::check_nonzero_int_try_from_nonzero_int",
    "hash": "1620793627196565447912516291161109841163",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i16::u64::check_nonzero_int_try_from_nonzero_int_should_panic",
    "hash": "15829860448134028589643839615850210612",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i16::u8::check_nonzero_int_try_from_nonzero_int",
    "hash": "1404167639779280354613948831126094341470",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i16::u8::check_nonzero_int_try_from_nonzero_int_should_panic",
    "hash": "154272142030004352012200555981283378076",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i16::usize::check_nonzero_int_try_from_nonzero_int",
    "hash": "66350159648067613112576110655894530031",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i16::usize::check_nonzero_int_try_from_nonzero_int_should_panic",
    "hash": "92980427058677935582890098675065942117",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i32::i16::check_nonzero_int_try_from_nonzero_int",
    "hash": "108360144651196056345363139924426688029",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i32::i16::check_nonzero_int_try_from_nonzero_int_should_panic",
    "hash": "116711695370779452816900368045377940120",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i32::i8::check_nonzero_int_try_from_nonzero_int",
    "hash": "119423232730463361789749762294411707907",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i32::i8::check_nonzero_int_try_from_nonzero_int_should_panic",
    "hash": "1336955566804201881615647294658282353807",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i32::isize::check_nonzero_int_try_from_nonzero_int_infallible",
    "hash": "1028504621461684862514268078396630710532",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i32::u128::check_nonzero_int_try_from_nonzero_int",
    "hash": "82526078878026727693234939171354216757",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i32::u128::check_nonzero_int_try_from_nonzero_int_should_panic",
    "hash": "165655281412337004907793358603947778467",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i32::u16::check_nonzero_int_try_from_nonzero_int",
    "hash": "1402535041337297581617829623227553111806",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i32::u16::check_nonzero_int_try_from_nonzero_int_should_panic",
    "hash": "78087400705837276428106244106760192106",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i32::u32::check_nonzero_int_try_from_nonzero_int",
    "hash": "108532306123709569867524492722263179968",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i32::u32::check_nonzero_int_try_from_nonzero_int_should_panic",
    "hash": "1141959942132084547915994637627980934948",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i32::u64::check_nonzero_int_try_from_nonzero_int",
    "hash": "30806872238246463685241051655296856373",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i32::u64::check_nonzero_int_try_from_nonzero_int_should_panic",
    "hash": "1626936786174764840612844540496225337896",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i32::u8::check_nonzero_int_try_from_nonzero_int",
    "hash": "63796289679568873326393831943736034143",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i32::u8::check_nonzero_int_try_from_nonzero_int_should_panic",
    "hash": "140004656568539876258562159087745939631",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i32::usize::check_nonzero_int_try_from_nonzero_int",
    "hash": "56663138581961395358012320835378433333",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i32::usize::check_nonzero_int_try_from_nonzero_int_should_panic",
    "hash": "614280703313410193512424677797335919435",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i64::i16::check_nonzero_int_try_from_nonzero_int",
    "hash": "1054956654584545073411173633730002357781",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i64::i16::check_nonzero_int_try_from_nonzero_int_should_panic",
    "hash": "134644140810989317618898220242412239201",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i64::i32::check_nonzero_int_try_from_nonzero_int",
    "hash": "8054858521391659815610223438004198175",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i64::i32::check_nonzero_int_try_from_nonzero_int_should_panic",
    "hash": "139108570536249488755550066147870617919",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i64::i8::check_nonzero_int_try_from_nonzero_int",
    "hash": "109445002053710942143775029962856084478",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i64::i8::check_nonzero_int_try_from_nonzero_int_should_panic",
    "hash": "176943356387986841159404376677230897660",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i64::isize::check_nonzero_int_try_from_nonzero_int_infallible",
    "hash": "108690941568390646811589574003086331788",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i64::u128::check_nonzero_int_try_from_nonzero_int",
    "hash": "119626565956875998015281866495934619867",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i64::u128::check_nonzero_int_try_from_nonzero_int_should_panic",
    "hash": "1520868783469707658817088345635167093396",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i64::u16::check_nonzero_int_try_from_nonzero_int",
    "hash": "88166388727124246299010049641358606825",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i64::u16::check_nonzero_int_try_from_nonzero_int_should_panic",
    "hash": "1427780163524197570813613429004444643420",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i64::u32::check_nonzero_int_try_from_nonzero_int",
    "hash": "1754956785057420205314740507898812241813",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i64::u32::check_nonzero_int_try_from_nonzero_int_should_panic",
    "hash": "402905981107434056814512406559403478180",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i64::u64::check_nonzero_int_try_from_nonzero_int",
    "hash": "139579380073796697642802826275159866809",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i64::u64::check_nonzero_int_try_from_nonzero_int_should_panic",
    "hash": "67616662700586277782435967272631555955",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i64::u8::check_nonzero_int_try_from_nonzero_int",
    "hash": "65796001792249769331079824166359514387",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i64::u8::check_nonzero_int_try_from_nonzero_int_should_panic",
    "hash": "579224693818128361584526632082469403",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i64::usize::check_nonzero_int_try_from_nonzero_int",
    "hash": "1781357769792087755611798913356304983",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i64::usize::check_nonzero_int_try_from_nonzero_int_should_panic",
    "hash": "898256204198271781416159630946020325934",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i8::u128::check_nonzero_int_try_from_nonzero_int",
    "hash": "487127706636324437612983869385742797098",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i8::u128::check_nonzero_int_try_from_nonzero_int_should_panic",
    "hash": "1356403778981949168314748206112515061403",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i8::u16::check_nonzero_int_try_from_nonzero_int",
    "hash": "202028606453119880211988513591725817447",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i8::u16::check_nonzero_int_try_from_nonzero_int_should_panic",
    "hash": "14757166587712693264148896813932422450",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i8::u32::check_nonzero_int_try_from_nonzero_int",
    "hash": "305291680613161871317319050539154213837",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i8::u32::check_nonzero_int_try_from_nonzero_int_should_panic",
    "hash": "913817791866216962717069270270999275535",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i8::u64::check_nonzero_int_try_from_nonzero_int",
    "hash": "230732663275919205512841579286944336001",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i8::u64::check_nonzero_int_try_from_nonzero_int_should_panic",
    "hash": "306702223402512426413668256549083317199",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i8::u8::check_nonzero_int_try_from_nonzero_int",
    "hash": "362519889051135712417555003060978070313",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i8::u8::check_nonzero_int_try_from_nonzero_int_should_panic",
    "hash": "1210945384147803564510342663428662591476",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i8::usize::check_nonzero_int_try_from_nonzero_int",
    "hash": "238029495255329191011633547448778005863",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i8::usize::check_nonzero_int_try_from_nonzero_int_should_panic",
    "hash": "154437323713061673776192067007010577753",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_u128::i128::check_nonzero_int_try_from_nonzero_int",
    "hash": "1735658374643211960115036685442471062484",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_u128::i128::check_nonzero_int_try_from_nonzero_int_should_panic",
    "hash": "1422740822710565707616480250599102738042",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_u128::i16::check_nonzero_int_try_from_nonzero_int",
    "hash": "211623336954734176516659278249308125335",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_u128::i16::check_nonzero_int_try_from_nonzero_int_should_panic",
    "hash": "40151312594944534119778728255466015168",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_u128::i32::check_nonzero_int_try_from_nonzero_int",
    "hash": "148016917699432370942922436967822857207",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_u128::i32::check_nonzero_int_try_from_nonzero_int_should_panic",
    "hash": "1700020538537217394318386610648126541645",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_u128::i64::check_nonzero_int_try_from_nonzero_int",
    "hash": "1124431268659288649913581474393327138431",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_u128::i64::check_nonzero_int_try_from_nonzero_int_should_panic",
    "hash": "118406862974468529014827792192714241839",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_u128::i8::check_nonzero_int_try_from_nonzero_int",
    "hash": "70424707490407917848668208832272564977",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_u128::i8::check_nonzero_int_try_from_nonzero_int_should_panic",
    "hash": "168683410215603728810983716632335342031",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_u128::isize::check_nonzero_int_try_from_nonzero_int",
    "hash": "55453860482042519421509454238140062896",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_u128::isize::check_nonzero_int_try_from_nonzero_int_should_panic",
    "hash": "844635869200979865316609291847427413307",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_u128::u16::check_nonzero_int_try_from_nonzero_int",
    "hash": "1146091655280319798211744468745697080157",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_u128::u16::check_nonzero_int_try_from_nonzero_int_should_panic",
    "hash": "140160556460259322224710222916684617299",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_u128::u32::check_nonzero_int_try_from_nonzero_int",
    "hash": "92305424743766647610043407719353481791",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_u128::u32::check_nonzero_int_try_from_nonzero_int_should_panic",
    "hash": "117383013969075862203615931902826640758",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_u128::u64::check_nonzero_int_try_from_nonzero_int",
    "hash": "1191421972871981913016608288731533771349",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_u128::u64::check_nonzero_int_try_from_nonzero_int_should_panic",
    "hash": "15443875401000214223691577997149140394",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_u128::u8::check_nonzero_int_try_from_nonzero_int",
    "hash": "5670395382588893824638928149392665750",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_u128::u8::check_nonzero_int_try_from_nonzero_int_should_panic",
    "hash": "142674374518023898061429178872559970998",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_u128::usize::check_nonzero_int_try_from_nonzero_int",
    "hash": "123586151546792490661704387419109385267",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_u128::usize::check_nonzero_int_try_from_nonzero_int_should_panic",
    "hash": "8165331423299723867128151756758631151",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_u16::i16::check_nonzero_int_try_from_nonzero_int",
    "hash": "689319784394790343615592867468863472162",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_u16::i16::check_nonzero_int_try_from_nonzero_int_should_panic",
    "hash": "178544107081158888626336426878690564184",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_u16::i8::check_nonzero_int_try_from_nonzero_int",
    "hash": "25571091657897247247069890627918885043",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_u16::i8::check_nonzero_int_try_from_nonzero_int_should_panic",
    "hash": "153658359684850480408913210880914504301",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_u16::isize::check_nonzero_int_try_from_nonzero_int_infallible",
    "hash": "105104896037170762332384182687904454593",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_u16::u8::check_nonzero_int_try_from_nonzero_int",
    "hash": "378618467214930331916370298925413016515",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_u16::u8::check_nonzero_int_try_from_nonzero_int_should_panic",
    "hash": "1694095855384739317511552546440063112109",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_u32::i16::check_nonzero_int_try_from_nonzero_int",
    "hash": "66968799189934020677824425469808208641",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_u32::i16::check_nonzero_int_try_from_nonzero_int_should_panic",
    "hash": "131709276161271696688022954050447388572",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_u32::i32::check_nonzero_int_try_from_nonzero_int",
    "hash": "111771355003464941749546120119798001665",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_u32::i32::check_nonzero_int_try_from_nonzero_int_should_panic",
    "hash": "75511280621927997488249582215786764062",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_u32::i8::check_nonzero_int_try_from_nonzero_int",
    "hash": "1725449870524621322412356394770255228775",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_u32::i8::check_nonzero_int_try_from_nonzero_int_should_panic",
    "hash": "1494006792900389687414089760463900059259",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_u32::isize::check_nonzero_int_try_from_nonzero_int_infallible",
    "hash": "552987547967223309912149550402671836141",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_u32::u16::check_nonzero_int_try_from_nonzero_int",
    "hash": "63051546542285590782755207154387250789",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_u32::u16::check_nonzero_int_try_from_nonzero_int_should_panic",
    "hash": "1284899511040914781710450222502295680401",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_u32::u8::check_nonzero_int_try_from_nonzero_int",
    "hash": "4583633689020501929173870496438601345",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_u32::u8::check_nonzero_int_try_from_nonzero_int_should_panic",
    "hash": "93070539356371527529888944451944332684",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_u32::usize::check_nonzero_int_try_from_nonzero_int_infallible",
    "hash": "4748389817443675898822939698385772332",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_u64::i16::check_nonzero_int_try_from_nonzero_int",
    "hash": "43306755300527690217170174391552907221",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_u64::i16::check_nonzero_int_try_from_nonzero_int_should_panic",
    "hash": "924213587478347789013138372388721572260",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_u64::i32::check_nonzero_int_try_from_nonzero_int",
    "hash": "4000169568658901242559951284966536822",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_u64::i32::check_nonzero_int_try_from_nonzero_int_should_panic",
    "hash": "33770106713690337804235188070675187652",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_u64::i64::check_nonzero_int_try_from_nonzero_int",
    "hash": "387807209982400058929569626889047708",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_u64::i64::check_nonzero_int_try_from_nonzero_int_should_panic",
    "hash": "1703367388896228945316112835633981791653",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_u64::i8::check_nonzero_int_try_from_nonzero_int",
    "hash": "1176738042250277950314614405093466409616",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_u64::i8::check_nonzero_int_try_from_nonzero_int_should_panic",
    "hash": "83463047409331243963479121247813118428",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_u64::isize::check_nonzero_int_try_from_nonzero_int",
    "hash": "73435517338227537183325087879248820728",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_u64::isize::check_nonzero_int_try_from_nonzero_int_should_panic",
    "hash": "580475309303327911112641814932729954768",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_u64::u16::check_nonzero_int_try_from_nonzero_int",
    "hash": "1079774118925467245010862929660373524520",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_u64::u16::check_nonzero_int_try_from_nonzero_int_should_panic",
    "hash": "72896067742553194994736150100097389970",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_u64::u32::check_nonzero_int_try_from_nonzero_int",
    "hash": "132144225701011374896501036694518248937",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_u64::u32::check_nonzero_int_try_from_nonzero_int_should_panic",
    "hash": "1127979722403104621914078377694624254232",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_u64::u8::check_nonzero_int_try_from_nonzero_int",
    "hash": "1160268223434506560114422191740844722887",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_u64::u8::check_nonzero_int_try_from_nonzero_int_should_panic",
    "hash": "156215520243502767941549192534125145121",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_u64::usize::check_nonzero_int_try_from_nonzero_int_infallible",
    "hash": "115125161282523719387359394272530262535",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/default.rs",
    "func": "<() as default::Default>::default",
    "hash": "34007422583350565266331217997887226878"
  },
  {
    "crate": "core",
    "file": "core/src/default.rs",
    "func": "<ascii::ascii_char::AsciiChar as default::Default>::default",
    "hash": "1269793736544104207112095330690687044137"
  },
  {
    "crate": "core",
    "file": "core/src/default.rs",
    "func": "<bool as default::Default>::default",
    "hash": "97113273368390197422399019494646759870"
  },
  {
    "crate": "core",
    "file": "core/src/default.rs",
    "func": "<char as default::Default>::default",
    "hash": "1745631581736053538713989223609175157472"
  },
  {
    "crate": "core",
    "file": "core/src/default.rs",
    "func": "<f128 as default::Default>::default",
    "hash": "73435203943850270461466813298534963252"
  },
  {
    "crate": "core",
    "file": "core/src/default.rs",
    "func": "<f16 as default::Default>::default",
    "hash": "1622206036435330812911107287461629669262"
  },
  {
    "crate": "core",
    "file": "core/src/default.rs",
    "func": "<f32 as default::Default>::default",
    "hash": "58324239745448176079354504889339599975"
  },
  {
    "crate": "core",
    "file": "core/src/default.rs",
    "func": "<f64 as default::Default>::default",
    "hash": "1692730864480687644115505133513487257960"
  },
  {
    "crate": "core",
    "file": "core/src/default.rs",
    "func": "<i128 as default::Default>::default",
    "hash": "4785567300361512032643061108134310925"
  },
  {
    "crate": "core",
    "file": "core/src/default.rs",
    "func": "<i16 as default::Default>::default",
    "hash": "1179818934459369976111773881948486975797"
  },
  {
    "crate": "core",
    "file": "core/src/default.rs",
    "func": "<i32 as default::Default>::default",
    "hash": "1002172265968274352711498511734125215469"
  },
  {
    "crate": "core",
    "file": "core/src/default.rs",
    "func": "<i64 as default::Default>::default",
    "hash": "119375585161096607021051354898639892017"
  },
  {
    "crate": "core",
    "file": "core/src/default.rs",
    "func": "<i8 as default::Default>::default",
    "hash": "176821918491003468227626359749537396864"
  },
  {
    "crate": "core",
    "file": "core/src/default.rs",
    "func": "<isize as default::Default>::default",
    "hash": "60732786507886163233768065239918067122"
  },
  {
    "crate": "core",
    "file": "core/src/default.rs",
    "func": "<u128 as default::Default>::default",
    "hash": "147224602796396873381982155428707872800"
  },
  {
    "crate": "core",
    "file": "core/src/default.rs",
    "func": "<u16 as default::Default>::default",
    "hash": "465632265339412911812289834689314255991"
  },
  {
    "crate": "core",
    "file": "core/src/default.rs",
    "func": "<u32 as default::Default>::default",
    "hash": "176721295741621449156391608664984007411"
  },
  {
    "crate": "core",
    "file": "core/src/default.rs",
    "func": "<u64 as default::Default>::default",
    "hash": "67903923256944088678414142369330925193"
  },
  {
    "crate": "core",
    "file": "core/src/default.rs",
    "func": "<u8 as default::Default>::default",
    "hash": "811783093625119632316445809894821812924"
  },
  {
    "crate": "core",
    "file": "core/src/default.rs",
    "func": "<usize as default::Default>::default",
    "hash": "526522679742031129215701282242820325587"
  },
  {
    "crate": "core",
    "file": "core/src/error.rs",
    "func": "<cell::BorrowError as error::Error>::description",
    "hash": "38352637762149476755689190272342585925"
  },
  {
    "crate": "core",
    "file": "core/src/error.rs",
    "func": "<cell::BorrowMutError as error::Error>::description",
    "hash": "146727505591407140582162063635361607349"
  },
  {
    "crate": "core",
    "file": "core/src/error.rs",
    "func": "<char::convert::CharTryFromError as error::Error>::description",
    "hash": "1502513335555468005712286196906760736382"
  },
  {
    "crate": "core",
    "file": "core/src/error.rs",
    "func": "<fmt::Error as error::Error>::description",
    "hash": "83975203477777295006563086005802417805"
  },
  {
    "crate": "core",
    "file": "core/src/escape.rs",
    "func": "<escape::AlwaysEscaped as clone::Clone>::clone",
    "hash": "5842528753916618278220424385606769466"
  },
  {
    "crate": "core",
    "file": "core/src/escape.rs",
    "func": "<escape::MaybeEscaped as clone::Clone>::clone",
    "hash": "179049050490546689751700098731696226443"
  },
  {
    "crate": "core",
    "file": "core/src/ffi/c_str.rs",
    "func": "<&ffi::c_str::CStr as default::Default>::default",
    "hash": "1388331790167823793714032121861419914352"
  },
  {
    "crate": "core",
    "file": "core/src/ffi/c_str.rs",
    "func": "<ffi::c_str::FromBytesUntilNulError as clone::Clone>::clone",
    "hash": "87428115072661550129081655070802804323"
  },
  {
    "crate": "core",
    "file": "core/src/ffi/c_str.rs",
    "func": "<ffi::c_str::FromBytesUntilNulError as cmp::Eq>::assert_receiver_is_total_eq",
    "hash": "9591374333009235593271208878911185570"
  },
  {
    "crate": "core",
    "file": "core/src/ffi/c_str.rs",
    "func": "<ffi::c_str::FromBytesUntilNulError as cmp::PartialEq>::eq",
    "hash": "5652746276482526532951808077332295579"
  },
  {
    "crate": "core",
    "file": "core/src/ffi/c_str.rs",
    "func": "<ffi::c_str::FromBytesWithNulError as clone::Clone>::clone",
    "hash": "94602514312753425407799669423045651165"
  },
  {
    "crate": "core",
    "file": "core/src/ffi/c_str.rs",
    "func": "<ffi::c_str::FromBytesWithNulError as cmp::Eq>::assert_receiver_is_total_eq",
    "hash": "1824658960251005138113370366670541980583"
  },
  {
    "crate": "core",
    "file": "core/src/ffi/c_str.rs",
    "func": "<ffi::c_str::FromBytesWithNulError as cmp::PartialEq>::eq",
    "hash": "175462240773915972574804831616207090249"
  },
  {
    "crate": "core",
    "file": "core/src/ffi/c_str.rs",
    "func": "ffi::c_str::verify::check_as_ptr",
    "hash": "785905070954931369413777163221574516238",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/ffi/c_str.rs",
    "func": "ffi::c_str::verify::check_bytes",
    "hash": "66790044889221782321818120071151480202",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/ffi/c_str.rs",
    "func": "ffi::c_str::verify::check_count_bytes",
    "hash": "1366729292663805457612899167108307527629",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/ffi/c_str.rs",
    "func": "ffi::c_str::verify::check_from_bytes_until_nul",
    "hash": "1162080310308293778263747810261835783",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/ffi/c_str.rs",
    "func": "ffi::c_str::verify::check_from_bytes_with_nul",
    "hash": "153191263301360493184895478506690741063",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/ffi/c_str.rs",
    "func": "ffi::c_str::verify::check_from_bytes_with_nul_unchecked",
    "hash": "95135541425298086294310315476580589891",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ffi/c_str.rs",
    "func": "ffi::c_str::verify::check_from_ptr_contract",
    "hash": "1102467518561431396415081636725141978865",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ffi/c_str.rs",
    "func": "ffi::c_str::verify::check_is_empty",
    "hash": "133070124219742747087061554588624196933",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/ffi/c_str.rs",
    "func": "ffi::c_str::verify::check_strlen_contract",
    "hash": "53626718322224190315683669763605021570",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ffi/c_str.rs",
    "func": "ffi::c_str::verify::check_to_bytes",
    "hash": "108857590286952883988301118412540378260",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/ffi/c_str.rs",
    "func": "ffi::c_str::verify::check_to_bytes_with_nul",
    "hash": "532259289520694952616127319881296061318",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/ffi/c_str.rs",
    "func": "ffi::c_str::verify::check_to_str",
    "hash": "297798415983469713413170093430324749146",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/fmt/builders.rs",
    "func": "<fmt::builders::PadAdapterState as default::Default>::default",
    "hash": "81986060615313457313520860313503674379"
  },
  {
    "crate": "core",
    "file": "core/src/fmt/float.rs",
    "func": "<f16 as fmt::float::GeneralFormat>::already_rounded_value_should_use_exponential",
    "hash": "851745407749290379018406218338085803070"
  },
  {
    "crate": "core",
    "file": "core/src/fmt/float.rs",
    "func": "<f32 as fmt::float::GeneralFormat>::already_rounded_value_should_use_exponential",
    "hash": "1074043478732182391112926816275990419436"
  },
  {
    "crate": "core",
    "file": "core/src/fmt/float.rs",
    "func": "<f64 as fmt::float::GeneralFormat>::already_rounded_value_should_use_exponential",
    "hash": "784694590963647726113650322247217948464"
  },
  {
    "crate": "core",
    "file": "core/src/fmt/mod.rs",
    "func": "<fmt::Alignment as clone::Clone>::clone",
    "hash": "1930369643134351532599693691908151985"
  },
  {
    "crate": "core",
    "file": "core/src/fmt/mod.rs",
    "func": "<fmt::Alignment as cmp::Eq>::assert_receiver_is_total_eq",
    "hash": "1020126266642071054913472207007823295715"
  },
  {
    "crate": "core",
    "file": "core/src/fmt/mod.rs",
    "func": "<fmt::Alignment as cmp::PartialEq>::eq",
    "hash": "138791160527873869081784178737256895373"
  },
  {
    "crate": "core",
    "file": "core/src/fmt/mod.rs",
    "func": "<fmt::DebugAsHex as clone::Clone>::clone",
    "hash": "72208844353626943052934295674922735023"
  },
  {
    "crate": "core",
    "file": "core/src/fmt/mod.rs",
    "func": "<fmt::DebugAsHex as cmp::Eq>::assert_receiver_is_total_eq",
    "hash": "12780908826539783988363338530004955797"
  },
  {
    "crate": "core",
    "file": "core/src/fmt/mod.rs",
    "func": "<fmt::DebugAsHex as cmp::PartialEq>::eq",
    "hash": "13643550569496295414399782017898620453"
  },
  {
    "crate": "core",
    "file": "core/src/fmt/mod.rs",
    "func": "<fmt::Error as clone::Clone>::clone",
    "hash": "171074186052613514879790254848816336011"
  },
  {
    "crate": "core",
    "file": "core/src/fmt/mod.rs",
    "func": "<fmt::Error as cmp::Eq>::assert_receiver_is_total_eq",
    "hash": "106517918667363707052261391735220907356"
  },
  {
    "crate": "core",
    "file": "core/src/fmt/mod.rs",
    "func": "<fmt::Error as cmp::Ord>::cmp",
    "hash": "112191534329724873754391363740074601252"
  },
  {
    "crate": "core",
    "file": "core/src/fmt/mod.rs",
    "func": "<fmt::Error as cmp::PartialEq>::eq",
    "hash": "117415858753975547446665330806920238181"
  },
  {
    "crate": "core",
    "file": "core/src/fmt/mod.rs",
    "func": "<fmt::Error as cmp::PartialOrd>::partial_cmp",
    "hash": "293749126067864311313789127599878053988"
  },
  {
    "crate": "core",
    "file": "core/src/fmt/mod.rs",
    "func": "<fmt::Error as default::Default>::default",
    "hash": "326393976186220405615721807704106422290"
  },
  {
    "crate": "core",
    "file": "core/src/fmt/mod.rs",
    "func": "<fmt::FormattingOptions as clone::Clone>::clone",
    "hash": "1163979745846561664418378404682540817643"
  },
  {
    "crate": "core",
    "file": "core/src/fmt/mod.rs",
    "func": "<fmt::FormattingOptions as cmp::Eq>::assert_receiver_is_total_eq",
    "hash": "979338618432983950012547760744686033549"
  },
  {
    "crate": "core",
    "file": "core/src/fmt/mod.rs",
    "func": "<fmt::FormattingOptions as cmp::PartialEq>::eq",
    "hash": "133931176326902353367209293050489626987"
  },
  {
    "crate": "core",
    "file": "core/src/fmt/mod.rs",
    "func": "<fmt::FormattingOptions as default::Default>::default",
    "hash": "658660712720961258213951507188837886297"
  },
  {
    "crate": "core",
    "file": "core/src/fmt/mod.rs",
    "func": "<fmt::Sign as clone::Clone>::clone",
    "hash": "90874146393869501127809933143331436743"
  },
  {
    "crate": "core",
    "file": "core/src/fmt/mod.rs",
    "func": "<fmt::Sign as cmp::Eq>::assert_receiver_is_total_eq",
    "hash": "765900809292437332013261180106698574193"
  },
  {
    "crate": "core",
    "file": "core/src/fmt/mod.rs",
    "func": "<fmt::Sign as cmp::PartialEq>::eq",
    "hash": "148003910060739080037599170770526304174"
  },
  {
    "crate": "core",
    "file": "core/src/fmt/mod.rs",
    "func": "<str as fmt::Debug>::fmt::needs_escape",
    "hash": "179685553147709381169171195521453669841"
  },
  {
    "crate": "core",
    "file": "core/src/fmt/mod.rs",
    "func": "fmt::FormattingOptions::align",
    "hash": "7183820055713762746363169081446514126"
  },
  {
    "crate": "core",
    "file": "core/src/fmt/mod.rs",
    "func": "fmt::FormattingOptions::alternate",
    "hash": "174616867597443091474034826899928583474"
  },
  {
    "crate": "core",
    "file": "core/src/fmt/mod.rs",
    "func": "fmt::FormattingOptions::debug_as_hex",
    "hash": "103288923899173789567976494321237308664"
  },
  {
    "crate": "core",
    "file": "core/src/fmt/mod.rs",
    "func": "fmt::FormattingOptions::fill",
    "hash": "1692910407746371913718143362461637207110"
  },
  {
    "crate": "core",
    "file": "core/src/fmt/mod.rs",
    "func": "fmt::FormattingOptions::get_align",
    "hash": "9007521356456792533806907033713747580"
  },
  {
    "crate": "core",
    "file": "core/src/fmt/mod.rs",
    "func": "fmt::FormattingOptions::get_alternate",
    "hash": "846166874642796147413812718364271769170"
  },
  {
    "crate": "core",
    "file": "core/src/fmt/mod.rs",
    "func": "fmt::FormattingOptions::get_debug_as_hex",
    "hash": "109970252845503685424744068744556592050"
  },
  {
    "crate": "core",
    "file": "core/src/fmt/mod.rs",
    "func": "fmt::FormattingOptions::get_fill",
    "hash": "1140628964753582780115520904480253073068"
  },
  {
    "crate": "core",
    "file": "core/src/fmt/mod.rs",
    "func": "fmt::FormattingOptions::get_precision",
    "hash": "172140117843934269071100695499597161982"
  },
  {
    "crate": "core",
    "file": "core/src/fmt/mod.rs",
    "func": "fmt::FormattingOptions::get_sign",
    "hash": "170302555131953217375919710574080836661"
  },
  {
    "crate": "core",
    "file": "core/src/fmt/mod.rs",
    "func": "fmt::FormattingOptions::get_sign_aware_zero_pad",
    "hash": "1032211682820222384413209611390579221735"
  },
  {
    "crate": "core",
    "file": "core/src/fmt/mod.rs",
    "func": "fmt::FormattingOptions::get_width",
    "hash": "52500763207302495589956168323478942233"
  },
  {
    "crate": "core",
    "file": "core/src/fmt/mod.rs",
    "func": "fmt::FormattingOptions::new",
    "hash": "4960461046229976118108876182482238045"
  },
  {
    "crate": "core",
    "file": "core/src/fmt/mod.rs",
    "func": "fmt::FormattingOptions::precision",
    "hash": "10789478559275003082674685827221852248"
  },
  {
    "crate": "core",
    "file": "core/src/fmt/mod.rs",
    "func": "fmt::FormattingOptions::sign",
    "hash": "1801964302792114074312984742506803394070"
  },
  {
    "crate": "core",
    "file": "core/src/fmt/mod.rs",
    "func": "fmt::FormattingOptions::sign_aware_zero_pad",
    "hash": "179307403029012602534392180041355274244"
  },
  {
    "crate": "core",
    "file": "core/src/fmt/mod.rs",
    "func": "fmt::FormattingOptions::width",
    "hash": "753832025317161869510977234662067625878"
  },
  {
    "crate": "core",
    "file": "core/src/fmt/mod.rs",
    "func": "fmt::PostPadding::new",
    "hash": "398351056859449483913563186545567727466"
  },
  {
    "crate": "core",
    "file": "core/src/fmt/num.rs",
    "func": "<fmt::num::Binary as clone::Clone>::clone",
    "hash": "1534165630276652196915952124420645941280"
  },
  {
    "crate": "core",
    "file": "core/src/fmt/num.rs",
    "func": "<fmt::num::Binary as cmp::PartialEq>::eq",
    "hash": "26197293199815563081457396635199227641"
  },
  {
    "crate": "core",
    "file": "core/src/fmt/num.rs",
    "func": "<fmt::num::Binary as fmt::num::GenericRadix>::digit",
    "hash": "11388438384345759854584137905333050933"
  },
  {
    "crate": "core",
    "file": "core/src/fmt/num.rs",
    "func": "<fmt::num::LowerHex as clone::Clone>::clone",
    "hash": "322121658660214281310934287804080772367"
  },
  {
    "crate": "core",
    "file": "core/src/fmt/num.rs",
    "func": "<fmt::num::LowerHex as cmp::PartialEq>::eq",
    "hash": "1650230955885587684814621948012465491912"
  },
  {
    "crate": "core",
    "file": "core/src/fmt/num.rs",
    "func": "<fmt::num::LowerHex as fmt::num::GenericRadix>::digit",
    "hash": "111114487648278519213771264640666093421"
  },
  {
    "crate": "core",
    "file": "core/src/fmt/num.rs",
    "func": "<fmt::num::Octal as clone::Clone>::clone",
    "hash": "112276553756523336542961440107614857858"
  },
  {
    "crate": "core",
    "file": "core/src/fmt/num.rs",
    "func": "<fmt::num::Octal as cmp::PartialEq>::eq",
    "hash": "155565227496221426197891402326894894524"
  },
  {
    "crate": "core",
    "file": "core/src/fmt/num.rs",
    "func": "<fmt::num::Octal as fmt::num::GenericRadix>::digit",
    "hash": "167904011784263733187026969240649928935"
  },
  {
    "crate": "core",
    "file": "core/src/fmt/num.rs",
    "func": "<fmt::num::UpperHex as clone::Clone>::clone",
    "hash": "176232967662871059683244822539383776681"
  },
  {
    "crate": "core",
    "file": "core/src/fmt/num.rs",
    "func": "<fmt::num::UpperHex as cmp::PartialEq>::eq",
    "hash": "139030766714485447772726687731751808773"
  },
  {
    "crate": "core",
    "file": "core/src/fmt/num.rs",
    "func": "<fmt::num::UpperHex as fmt::num::GenericRadix>::digit",
    "hash": "180216954894167382576912062485815426"
  },
  {
    "crate": "core",
    "file": "core/src/fmt/num.rs",
    "func": "<i128 as fmt::num::DisplayInt>::from_u8",
    "hash": "5294477751773462885508924109121730461"
  },
  {
    "crate": "core",
    "file": "core/src/fmt/num.rs",
    "func": "<i128 as fmt::num::DisplayInt>::to_u128",
    "hash": "78669605781039933181378697827318868102"
  },
  {
    "crate": "core",
    "file": "core/src/fmt/num.rs",
    "func": "<i128 as fmt::num::DisplayInt>::to_u64",
    "hash": "1620127515545364710914879576697351932853"
  },
  {
    "crate": "core",
    "file": "core/src/fmt/num.rs",
    "func": "<i128 as fmt::num::DisplayInt>::to_u8",
    "hash": "19225743411885900904384057505533253406"
  },
  {
    "crate": "core",
    "file": "core/src/fmt/num.rs",
    "func": "<i128 as fmt::num::DisplayInt>::zero",
    "hash": "36668487709911904927459544870365555417"
  },
  {
    "crate": "core",
    "file": "core/src/fmt/num.rs",
    "func": "<i16 as fmt::num::DisplayInt>::from_u8",
    "hash": "179911810206085813142944528796154808440"
  },
  {
    "crate": "core",
    "file": "core/src/fmt/num.rs",
    "func": "<i16 as fmt::num::DisplayInt>::to_u128",
    "hash": "957313423616673966210397424740684071969"
  },
  {
    "crate": "core",
    "file": "core/src/fmt/num.rs",
    "func": "<i16 as fmt::num::DisplayInt>::to_u64",
    "hash": "141779976922058405464153570495516509578"
  },
  {
    "crate": "core",
    "file": "core/src/fmt/num.rs",
    "func": "<i16 as fmt::num::DisplayInt>::to_u8",
    "hash": "103970598325464875522641380237443116190"
  },
  {
    "crate": "core",
    "file": "core/src/fmt/num.rs",
    "func": "<i16 as fmt::num::DisplayInt>::zero",
    "hash": "1140117766133202439515051365354142807856"
  },
  {
    "crate": "core",
    "file": "core/src/fmt/num.rs",
    "func": "<i32 as fmt::num::DisplayInt>::from_u8",
    "hash": "22669475920986535424753761824962359905"
  },
  {
    "crate": "core",
    "file": "core/src/fmt/num.rs",
    "func": "<i32 as fmt::num::DisplayInt>::to_u128",
    "hash": "926064685467415988617166963073446122238"
  },
  {
    "crate": "core",
    "file": "core/src/fmt/num.rs",
    "func": "<i32 as fmt::num::DisplayInt>::to_u64",
    "hash": "361886645708119225615315366869805404753"
  },
  {
    "crate": "core",
    "file": "core/src/fmt/num.rs",
    "func": "<i32 as fmt::num::DisplayInt>::to_u8",
    "hash": "849161431745999315117229042197172996072"
  },
  {
    "crate": "core",
    "file": "core/src/fmt/num.rs",
    "func": "<i32 as fmt::num::DisplayInt>::zero",
    "hash": "164477563201607292292676276547240254883"
  },
  {
    "crate": "core",
    "file": "core/src/fmt/num.rs",
    "func": "<i64 as fmt::num::DisplayInt>::from_u8",
    "hash": "780617653712044989418084741453469926225"
  },
  {
    "crate": "core",
    "file": "core/src/fmt/num.rs",
    "func": "<i64 as fmt::num::DisplayInt>::to_u128",
    "hash": "68481101555134375649868431811961772711"
  },
  {
    "crate": "core",
    "file": "core/src/fmt/num.rs",
    "func": "<i64 as fmt::num::DisplayInt>::to_u64",
    "hash": "4884455875333858995805135130391166524"
  },
  {
    "crate": "core",
    "file": "core/src/fmt/num.rs",
    "func": "<i64 as fmt::num::DisplayInt>::to_u8",
    "hash": "1528702273076892746173453861128424034"
  },
  {
    "crate": "core",
    "file": "core/src/fmt/num.rs",
    "func": "<i64 as fmt::num::DisplayInt>::zero",
    "hash": "101407265377243734144897293707435367437"
  },
  {
    "crate": "core",
    "file": "core/src/fmt/num.rs",
    "func": "<i8 as fmt::num::DisplayInt>::from_u8",
    "hash": "183635601555063930554129684216102420677"
  },
  {
    "crate": "core",
    "file": "core/src/fmt/num.rs",
    "func": "<i8 as fmt::num::DisplayInt>::to_u128",
    "hash": "618530374273284616115112453237308156736"
  },
  {
    "crate": "core",
    "file": "core/src/fmt/num.rs",
    "func": "<i8 as fmt::num::DisplayInt>::to_u64",
    "hash": "23484710887095176841295286928058658381"
  },
  {
    "crate": "core",
    "file": "core/src/fmt/num.rs",
    "func": "<i8 as fmt::num::DisplayInt>::to_u8",
    "hash": "10776918939108172806482150892791454934"
  },
  {
    "crate": "core",
    "file": "core/src/fmt/num.rs",
    "func": "<i8 as fmt::num::DisplayInt>::zero",
    "hash": "1096644013625185964813645624497917384370"
  },
  {
    "crate": "core",
    "file": "core/src/fmt/num.rs",
    "func": "<isize as fmt::num::DisplayInt>::from_u8",
    "hash": "83226804978539172777577458330364555"
  },
  {
    "crate": "core",
    "file": "core/src/fmt/num.rs",
    "func": "<isize as fmt::num::DisplayInt>::to_u128",
    "hash": "16777071332095488558122029934951925414"
  },
  {
    "crate": "core",
    "file": "core/src/fmt/num.rs",
    "func": "<isize as fmt::num::DisplayInt>::to_u64",
    "hash": "13494211336084911393477747836247726017"
  },
  {
    "crate": "core",
    "file": "core/src/fmt/num.rs",
    "func": "<isize as fmt::num::DisplayInt>::to_u8",
    "hash": "1323676027092381010318291719274739857523"
  },
  {
    "crate": "core",
    "file": "core/src/fmt/num.rs",
    "func": "<isize as fmt::num::DisplayInt>::zero",
    "hash": "461266470413134660617139722343804885278"
  },
  {
    "crate": "core",
    "file": "core/src/fmt/num.rs",
    "func": "<u128 as fmt::num::DisplayInt>::from_u8",
    "hash": "28155713323118307432781297311825906254"
  },
  {
    "crate": "core",
    "file": "core/src/fmt/num.rs",
    "func": "<u128 as fmt::num::DisplayInt>::to_u128",
    "hash": "802106722306908947316912399416557330151"
  },
  {
    "crate": "core",
    "file": "core/src/fmt/num.rs",
    "func": "<u128 as fmt::num::DisplayInt>::to_u64",
    "hash": "118909636242573940335874651697876071660"
  },
  {
    "crate": "core",
    "file": "core/src/fmt/num.rs",
    "func": "<u128 as fmt::num::DisplayInt>::to_u8",
    "hash": "176089261931859928988329016160650528916"
  },
  {
    "crate": "core",
    "file": "core/src/fmt/num.rs",
    "func": "<u128 as fmt::num::DisplayInt>::zero",
    "hash": "99999453301093431167347839367989550206"
  },
  {
    "crate": "core",
    "file": "core/src/fmt/num.rs",
    "func": "<u16 as fmt::num::DisplayInt>::from_u8",
    "hash": "577828058856490814516181064310545433394"
  },
  {
    "crate": "core",
    "file": "core/src/fmt/num.rs",
    "func": "<u16 as fmt::num::DisplayInt>::to_u128",
    "hash": "176584855843834010383577976680342325982"
  },
  {
    "crate": "core",
    "file": "core/src/fmt/num.rs",
    "func": "<u16 as fmt::num::DisplayInt>::to_u64",
    "hash": "129233623545620927304957020688444131537"
  },
  {
    "crate": "core",
    "file": "core/src/fmt/num.rs",
    "func": "<u16 as fmt::num::DisplayInt>::to_u8",
    "hash": "132229670486125603674453330727206158820"
  },
  {
    "crate": "core",
    "file": "core/src/fmt/num.rs",
    "func": "<u16 as fmt::num::DisplayInt>::zero",
    "hash": "84003794237246680415357160724670296657"
  },
  {
    "crate": "core",
    "file": "core/src/fmt/num.rs",
    "func": "<u32 as fmt::num::DisplayInt>::from_u8",
    "hash": "97447565643065368638170945263035682108"
  },
  {
    "crate": "core",
    "file": "core/src/fmt/num.rs",
    "func": "<u32 as fmt::num::DisplayInt>::to_u128",
    "hash": "1286063063986373078511127381610210270293"
  },
  {
    "crate": "core",
    "file": "core/src/fmt/num.rs",
    "func": "<u32 as fmt::num::DisplayInt>::to_u64",
    "hash": "134001199488749739109783573364209507272"
  },
  {
    "crate": "core",
    "file": "core/src/fmt/num.rs",
    "func": "<u32 as fmt::num::DisplayInt>::to_u8",
    "hash": "853842935888302489817116832695820404885"
  },
  {
    "crate": "core",
    "file": "core/src/fmt/num.rs",
    "func": "<u32 as fmt::num::DisplayInt>::zero",
    "hash": "105520003861276918151385759429944427006"
  },
  {
    "crate": "core",
    "file": "core/src/fmt/num.rs",
    "func": "<u64 as fmt::num::DisplayInt>::from_u8",
    "hash": "631183329542470826111924554291224734483"
  },
  {
    "crate": "core",
    "file": "core/src/fmt/num.rs",
    "func": "<u64 as fmt::num::DisplayInt>::to_u128",
    "hash": "135537418278608801939504752390006485857"
  },
  {
    "crate": "core",
    "file": "core/src/fmt/num.rs",
    "func": "<u64 as fmt::num::DisplayInt>::to_u64",
    "hash": "904815608487311879916060635840055724314"
  },
  {
    "crate": "core",
    "file": "core/src/fmt/num.rs",
    "func": "<u64 as fmt::num::DisplayInt>::to_u8",
    "hash": "172791621215325343325333862532506871291"
  },
  {
    "crate": "core",
    "file": "core/src/fmt/num.rs",
    "func": "<u64 as fmt::num::DisplayInt>::zero",
    "hash": "1760011798058273387417430735616051713909"
  },
  {
    "crate": "core",
    "file": "core/src/fmt/num.rs",
    "func": "<u8 as fmt::num::DisplayInt>::from_u8",
    "hash": "633817562610272837517872221126119619954"
  },
  {
    "crate": "core",
    "file": "core/src/fmt/num.rs",
    "func": "<u8 as fmt::num::DisplayInt>::to_u128",
    "hash": "167860374823488212557480030056774053359"
  },
  {
    "crate": "core",
    "file": "core/src/fmt/num.rs",
    "func": "<u8 as fmt::num::DisplayInt>::to_u64",
    "hash": "984862083140884598512544347570251490759"
  },
  {
    "crate": "core",
    "file": "core/src/fmt/num.rs",
    "func": "<u8 as fmt::num::DisplayInt>::to_u8",
    "hash": "109346629468092527896484396404781873774"
  },
  {
    "crate": "core",
    "file": "core/src/fmt/num.rs",
    "func": "<u8 as fmt::num::DisplayInt>::zero",
    "hash": "1144755614376028287117023566262192390235"
  },
  {
    "crate": "core",
    "file": "core/src/fmt/num.rs",
    "func": "<usize as fmt::num::DisplayInt>::from_u8",
    "hash": "1510711761415204691015075936092847231292"
  },
  {
    "crate": "core",
    "file": "core/src/fmt/num.rs",
    "func": "<usize as fmt::num::DisplayInt>::to_u128",
    "hash": "24894660408183704904333274053843880005"
  },
  {
    "crate": "core",
    "file": "core/src/fmt/num.rs",
    "func": "<usize as fmt::num::DisplayInt>::to_u64",
    "hash": "73525943248934885334232390949189844005"
  },
  {
    "crate": "core",
    "file": "core/src/fmt/num.rs",
    "func": "<usize as fmt::num::DisplayInt>::to_u8",
    "hash": "67162225254730244614588701602309773542"
  },
  {
    "crate": "core",
    "file": "core/src/fmt/num.rs",
    "func": "<usize as fmt::num::DisplayInt>::zero",
    "hash": "1438034707980972366317990735548147408261"
  },
  {
    "crate": "core",
    "file": "core/src/fmt/num.rs",
    "func": "fmt::num::<impl i128>::format_into",
    "hash": "155365761248932326869835198344460631302"
  },
  {
    "crate": "core",
    "file": "core/src/fmt/num.rs",
    "func": "fmt::num::<impl u128>::format_into",
    "hash": "1661136395638535485215352860343956757862"
  },
  {
    "crate": "core",
    "file": "core/src/fmt/num.rs",
    "func": "fmt::num::div_rem_1e16",
    "hash": "174302085048697978214413762393835295720"
  },
  {
    "crate": "core",
    "file": "core/src/fmt/num.rs",
    "func": "fmt::num::imp::<impl i16>::format_into",
    "hash": "203172297818551879112424496323055016730"
  },
  {
    "crate": "core",
    "file": "core/src/fmt/num.rs",
    "func": "fmt::num::imp::<impl i32>::format_into",
    "hash": "132771118559955758043817474780689206675"
  },
  {
    "crate": "core",
    "file": "core/src/fmt/num.rs",
    "func": "fmt::num::imp::<impl i64>::format_into",
    "hash": "75916457645820228402095356783383912255"
  },
  {
    "crate": "core",
    "file": "core/src/fmt/num.rs",
    "func": "fmt::num::imp::<impl i8>::format_into",
    "hash": "73221772776170986218290233462731073503"
  },
  {
    "crate": "core",
    "file": "core/src/fmt/num.rs",
    "func": "fmt::num::imp::<impl isize>::format_into",
    "hash": "621116279850728616717070037521363995614"
  },
  {
    "crate": "core",
    "file": "core/src/fmt/num.rs",
    "func": "fmt::num::imp::<impl u16>::format_into",
    "hash": "144409014378210112457399631732561815365"
  },
  {
    "crate": "core",
    "file": "core/src/fmt/num.rs",
    "func": "fmt::num::imp::<impl u32>::format_into",
    "hash": "173266596426739687069737283333332165382"
  },
  {
    "crate": "core",
    "file": "core/src/fmt/num.rs",
    "func": "fmt::num::imp::<impl u64>::format_into",
    "hash": "1505755297758054332210947834724000487125"
  },
  {
    "crate": "core",
    "file": "core/src/fmt/num.rs",
    "func": "fmt::num::imp::<impl u8>::format_into",
    "hash": "660148307734490142710687418312578370028"
  },
  {
    "crate": "core",
    "file": "core/src/fmt/num.rs",
    "func": "fmt::num::imp::<impl usize>::format_into",
    "hash": "893747156984541891113217977861988688586"
  },
  {
    "crate": "core",
    "file": "core/src/fmt/rt.rs",
    "func": "<fmt::rt::Count as clone::Clone>::clone",
    "hash": "1554088839245077136510151124508746428733"
  },
  {
    "crate": "core",
    "file": "core/src/fmt/rt.rs",
    "func": "<fmt::rt::Placeholder as clone::Clone>::clone",
    "hash": "63597180392563451051069991250281351682"
  },
  {
    "crate": "core",
    "file": "core/src/fmt/rt.rs",
    "func": "fmt::rt::Argument::<'_>::from_usize",
    "hash": "70377232471128639649303697310799707355"
  },
  {
    "crate": "core",
    "file": "core/src/hash/sip.rs",
    "func": "<hash::sip::Sip13Rounds as clone::Clone>::clone",
    "hash": "1104163013065108252012527246222564001253"
  },
  {
    "crate": "core",
    "file": "core/src/hash/sip.rs",
    "func": "<hash::sip::Sip13Rounds as default::Default>::default",
    "hash": "71024570808190257589295996218145184325"
  },
  {
    "crate": "core",
    "file": "core/src/hash/sip.rs",
    "func": "<hash::sip::Sip13Rounds as hash::sip::Sip>::c_rounds",
    "hash": "1408849998106221437312010081050212752208"
  },
  {
    "crate": "core",
    "file": "core/src/hash/sip.rs",
    "func": "<hash::sip::Sip13Rounds as hash::sip::Sip>::d_rounds",
    "hash": "1577912354554179303811572792880245515661"
  },
  {
    "crate": "core",
    "file": "core/src/hash/sip.rs",
    "func": "<hash::sip::Sip24Rounds as clone::Clone>::clone",
    "hash": "1079646048113631268211479430269231609065"
  },
  {
    "crate": "core",
    "file": "core/src/hash/sip.rs",
    "func": "<hash::sip::Sip24Rounds as default::Default>::default",
    "hash": "14823643028052029119441293659492769535"
  },
  {
    "crate": "core",
    "file": "core/src/hash/sip.rs",
    "func": "<hash::sip::Sip24Rounds as hash::sip::Sip>::c_rounds",
    "hash": "981296850285583445911890311204319363342"
  },
  {
    "crate": "core",
    "file": "core/src/hash/sip.rs",
    "func": "<hash::sip::Sip24Rounds as hash::sip::Sip>::d_rounds",
    "hash": "1373437994171657112711015225378564013474"
  },
  {
    "crate": "core",
    "file": "core/src/hash/sip.rs",
    "func": "<hash::sip::SipHasher as clone::Clone>::clone",
    "hash": "93948742315428612379557796234542196204"
  },
  {
    "crate": "core",
    "file": "core/src/hash/sip.rs",
    "func": "<hash::sip::SipHasher as default::Default>::default",
    "hash": "137798405421195991881467035531719510403"
  },
  {
    "crate": "core",
    "file": "core/src/hash/sip.rs",
    "func": "<hash::sip::SipHasher as hash::Hasher>::finish",
    "hash": "712960177365206756916321035280101448352"
  },
  {
    "crate": "core",
    "file": "core/src/hash/sip.rs",
    "func": "<hash::sip::SipHasher13 as clone::Clone>::clone",
    "hash": "1461738931035793229913553534843785018533"
  },
  {
    "crate": "core",
    "file": "core/src/hash/sip.rs",
    "func": "<hash::sip::SipHasher13 as default::Default>::default",
    "hash": "794755360944475058710056361763486199425"
  },
  {
    "crate": "core",
    "file": "core/src/hash/sip.rs",
    "func": "<hash::sip::SipHasher13 as hash::Hasher>::finish",
    "hash": "1590779231027515049610852087619636092126"
  },
  {
    "crate": "core",
    "file": "core/src/hash/sip.rs",
    "func": "<hash::sip::SipHasher24 as clone::Clone>::clone",
    "hash": "124895290382739822298420522879387326013"
  },
  {
    "crate": "core",
    "file": "core/src/hash/sip.rs",
    "func": "<hash::sip::SipHasher24 as default::Default>::default",
    "hash": "1554038128847289597217480548674988257209"
  },
  {
    "crate": "core",
    "file": "core/src/hash/sip.rs",
    "func": "<hash::sip::State as clone::Clone>::clone",
    "hash": "114467121091522395751435869652266912369"
  },
  {
    "crate": "core",
    "file": "core/src/hash/sip.rs",
    "func": "hash::sip::SipHasher13::new",
    "hash": "1397418372645629505414475577164745558400"
  },
  {
    "crate": "core",
    "file": "core/src/hash/sip.rs",
    "func": "hash::sip::SipHasher13::new_with_keys",
    "hash": "163242560720530940153418761772316596453"
  },
  {
    "crate": "core",
    "file": "core/src/hash/sip.rs",
    "func": "hash::sip::SipHasher::new",
    "hash": "176915448371237187187727523878898680450"
  },
  {
    "crate": "core",
    "file": "core/src/hash/sip.rs",
    "func": "hash::sip::SipHasher::new_with_keys",
    "hash": "539836302076479601417138968118632292728"
  },
  {
    "crate": "core",
    "file": "core/src/hint.rs",
    "func": "hint::assert_unchecked",
    "hash": "6962362284417680556415378392413733050"
  },
  {
    "crate": "core",
    "file": "core/src/hint.rs",
    "func": "hint::cold_path",
    "hash": "16392690540146237040910799779868652709"
  },
  {
    "crate": "core",
    "file": "core/src/hint.rs",
    "func": "hint::likely",
    "hash": "181482167990866638179327465910727112043"
  },
  {
    "crate": "core",
    "file": "core/src/hint.rs",
    "func": "hint::spin_loop",
    "hash": "175236260907353118956979364930330630259"
  },
  {
    "crate": "core",
    "file": "core/src/hint.rs",
    "func": "hint::unlikely",
    "hash": "13839786837928674380824344641290470077"
  },
  {
    "crate": "core",
    "file": "core/src/hint.rs",
    "func": "hint::unreachable_unchecked",
    "hash": "1415106497522421883676194742336801697"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&bool as ops::bit::BitAnd<bool>>::bitand",
    "hash": "30198916002976542106519383074498473229"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&bool as ops::bit::BitAnd>::bitand",
    "hash": "149726432661941012841297356226701119430"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&bool as ops::bit::BitOr<bool>>::bitor",
    "hash": "580748047223400049615658800837973716077"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&bool as ops::bit::BitOr>::bitor",
    "hash": "2507167844270719911409577224799299522"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&bool as ops::bit::BitXor<bool>>::bitxor",
    "hash": "1058788989414364151311164712053811450300"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&bool as ops::bit::BitXor>::bitxor",
    "hash": "636886664426249497216143143734678711"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&bool as ops::bit::Not>::not",
    "hash": "801765893340550108411093272984453482374"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&f128 as ops::arith::Add<f128>>::add",
    "hash": "14607330535173983345110673420579562205"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&f128 as ops::arith::Add>::add",
    "hash": "43693930733865557919980655657768586896"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&f128 as ops::arith::Div<f128>>::div",
    "hash": "165759492977500845674181249245530021318"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&f128 as ops::arith::Div>::div",
    "hash": "1395269995391731643816361417229257950343"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&f128 as ops::arith::Mul<f128>>::mul",
    "hash": "937393537330320601312101932973261810096"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&f128 as ops::arith::Mul>::mul",
    "hash": "54378920911427035314701255885275896488"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&f128 as ops::arith::Neg>::neg",
    "hash": "394423065267816652718054361730852442460"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&f128 as ops::arith::Rem<f128>>::rem",
    "hash": "856963678645497314013026592807985960231"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&f128 as ops::arith::Rem>::rem",
    "hash": "1547391027819502554445626708441535188"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&f128 as ops::arith::Sub<f128>>::sub",
    "hash": "1312960347591011848017316059755306187502"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&f128 as ops::arith::Sub>::sub",
    "hash": "70913936646483920962551670916797348664"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&f16 as ops::arith::Add<f16>>::add",
    "hash": "1518544050861187998410991988279585893347"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&f16 as ops::arith::Add>::add",
    "hash": "103115856711937122907130064416802340474"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&f16 as ops::arith::Div<f16>>::div",
    "hash": "397676938553692189318205461925879349552"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&f16 as ops::arith::Div>::div",
    "hash": "49353684721349766954219920062440487607"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&f16 as ops::arith::Mul<f16>>::mul",
    "hash": "642791538068690016314414003823417167466"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&f16 as ops::arith::Mul>::mul",
    "hash": "33397512498167917877654842425212810295"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&f16 as ops::arith::Neg>::neg",
    "hash": "85694429161619584916171382546399499991"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&f16 as ops::arith::Rem<f16>>::rem",
    "hash": "51298458272709247277813577933910865248"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&f16 as ops::arith::Rem>::rem",
    "hash": "889572431355678288015007538431417159693"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&f16 as ops::arith::Sub<f16>>::sub",
    "hash": "12804566461415793661296811603803773576"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&f16 as ops::arith::Sub>::sub",
    "hash": "1775650084023323812111287391806817614072"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&f32 as ops::arith::Add<f32>>::add",
    "hash": "819114713403531897016766014803264020682"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&f32 as ops::arith::Add>::add",
    "hash": "1381915411273740277514139927899713919194"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&f32 as ops::arith::Div<f32>>::div",
    "hash": "1198557465065544389813819428220286851988"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&f32 as ops::arith::Div>::div",
    "hash": "161734663496156265532680160663635211286"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&f32 as ops::arith::Mul<f32>>::mul",
    "hash": "114416838768228613976884880590266833113"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&f32 as ops::arith::Mul>::mul",
    "hash": "134433280961495968365749748302845790558"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&f32 as ops::arith::Neg>::neg",
    "hash": "420701478371552465615673252871513215921"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&f32 as ops::arith::Rem<f32>>::rem",
    "hash": "87602053706245178701421791602792249439"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&f32 as ops::arith::Rem>::rem",
    "hash": "111198496606917153377377962209785949130"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&f32 as ops::arith::Sub<f32>>::sub",
    "hash": "117060116552421956541920207874643437153"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&f32 as ops::arith::Sub>::sub",
    "hash": "122376253317635974588934409289529834357"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&f64 as ops::arith::Add<f64>>::add",
    "hash": "1289563298439215006017200719361366554733"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&f64 as ops::arith::Add>::add",
    "hash": "1545467351319816495211348846997497099103"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&f64 as ops::arith::Div<f64>>::div",
    "hash": "136226338570985839061843013871874865556"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&f64 as ops::arith::Div>::div",
    "hash": "140801130159310395614721440006336150722"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&f64 as ops::arith::Mul<f64>>::mul",
    "hash": "840564797163611758512095270548615070236"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&f64 as ops::arith::Mul>::mul",
    "hash": "159712557707580949224238413837194974605"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&f64 as ops::arith::Neg>::neg",
    "hash": "2282011715756519049490894630621370591"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&f64 as ops::arith::Rem<f64>>::rem",
    "hash": "41298423586360136798052560308035769717"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&f64 as ops::arith::Rem>::rem",
    "hash": "137905200286923895556893979882418067801"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&f64 as ops::arith::Sub<f64>>::sub",
    "hash": "148996248639418979679135796677224378071"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&f64 as ops::arith::Sub>::sub",
    "hash": "942367861012716489813062009787796189665"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i128 as ops::arith::Add<i128>>::add",
    "hash": "10391902533421166738750213197112217395"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i128 as ops::arith::Add>::add",
    "hash": "832594674791021679514442585927924588736"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i128 as ops::arith::Div<i128>>::div",
    "hash": "114317876617161220897103388394353292484"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i128 as ops::arith::Div>::div",
    "hash": "335661006923872856411421850412589544313"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i128 as ops::arith::Mul<i128>>::mul",
    "hash": "61713814130229622974783403076407072871"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i128 as ops::arith::Mul>::mul",
    "hash": "163102848664168206211325945204040053035"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i128 as ops::arith::Neg>::neg",
    "hash": "160458408559579061397000285785385280319"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i128 as ops::arith::Rem<i128>>::rem",
    "hash": "26632295734421806198966312704019174000"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i128 as ops::arith::Rem>::rem",
    "hash": "124325422069039523782415822009206141622"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i128 as ops::arith::Sub<i128>>::sub",
    "hash": "153031473827211114005464607129595158591"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i128 as ops::arith::Sub>::sub",
    "hash": "481662048887486371656179026575123048"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i128 as ops::bit::BitAnd<i128>>::bitand",
    "hash": "46745873721100592773706426213297795142"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i128 as ops::bit::BitAnd>::bitand",
    "hash": "13021371005650130479367473832524989194"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i128 as ops::bit::BitOr<i128>>::bitor",
    "hash": "178676037045623210268576632665689840"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i128 as ops::bit::BitOr>::bitor",
    "hash": "827708574593240937172795085673669761"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i128 as ops::bit::BitXor<i128>>::bitxor",
    "hash": "149158213939388264777642020644692077005"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i128 as ops::bit::BitXor>::bitxor",
    "hash": "223430582074632357018373612295081975060"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i128 as ops::bit::Not>::not",
    "hash": "47616367282816038439259358258333934667"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i128 as ops::bit::Shl<&i16>>::shl",
    "hash": "576722938105406976912810709383945291622"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i128 as ops::bit::Shl<&i32>>::shl",
    "hash": "26637628455623450815527843475603830806"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i128 as ops::bit::Shl<&i64>>::shl",
    "hash": "127970294528806029796542124102698793406"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i128 as ops::bit::Shl<&i8>>::shl",
    "hash": "81528052013653522253209251866325907619"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i128 as ops::bit::Shl<&isize>>::shl",
    "hash": "523816763711867919117215291056335373490"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i128 as ops::bit::Shl<&u128>>::shl",
    "hash": "124333390814100281404785154876724100773"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i128 as ops::bit::Shl<&u16>>::shl",
    "hash": "70412657910364605694696625158594310515"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i128 as ops::bit::Shl<&u32>>::shl",
    "hash": "397865040843327819111550422789249946720"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i128 as ops::bit::Shl<&u64>>::shl",
    "hash": "57497438191717731861475585374470222485"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i128 as ops::bit::Shl<&u8>>::shl",
    "hash": "71536946140959468898897462238358508294"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i128 as ops::bit::Shl<&usize>>::shl",
    "hash": "66954461997409518115352697497078007138"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i128 as ops::bit::Shl<i128>>::shl",
    "hash": "58931011180259013977041933776625368613"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i128 as ops::bit::Shl<i16>>::shl",
    "hash": "57620777351772083711940521907085636372"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i128 as ops::bit::Shl<i32>>::shl",
    "hash": "1051718923285868668116144834379889421410"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i128 as ops::bit::Shl<i64>>::shl",
    "hash": "515269430802887698313913301586893156715"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i128 as ops::bit::Shl<i8>>::shl",
    "hash": "26870492299732736935154251111962328306"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i128 as ops::bit::Shl<isize>>::shl",
    "hash": "10228127099227584486983796632732929923"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i128 as ops::bit::Shl<u128>>::shl",
    "hash": "116222421562374223373284593051319796264"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i128 as ops::bit::Shl<u16>>::shl",
    "hash": "7255728393621542815159905491535191832"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i128 as ops::bit::Shl<u32>>::shl",
    "hash": "679832209443784315017873400054651118981"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i128 as ops::bit::Shl<u64>>::shl",
    "hash": "507010451399988006710128744542894269676"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i128 as ops::bit::Shl<u8>>::shl",
    "hash": "101980689012552870492296643582710498410"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i128 as ops::bit::Shl<usize>>::shl",
    "hash": "23420727086096370513681961918458725558"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i128 as ops::bit::Shl>::shl",
    "hash": "845971465300152531812761404728728991145"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i128 as ops::bit::Shr<&i16>>::shr",
    "hash": "1795591391526478646810996243956515506635"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i128 as ops::bit::Shr<&i32>>::shr",
    "hash": "891961557737938330811509531992038670647"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i128 as ops::bit::Shr<&i64>>::shr",
    "hash": "1251667093086336443518322241805393337271"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i128 as ops::bit::Shr<&i8>>::shr",
    "hash": "1080338921861575556415449562576551521973"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i128 as ops::bit::Shr<&isize>>::shr",
    "hash": "169948327540135668567599247398955628641"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i128 as ops::bit::Shr<&u128>>::shr",
    "hash": "817606217340461589512658605065702265012"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i128 as ops::bit::Shr<&u16>>::shr",
    "hash": "25902620620837424312138132045741165562"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i128 as ops::bit::Shr<&u32>>::shr",
    "hash": "684094698223526362915450056985617825788"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i128 as ops::bit::Shr<&u64>>::shr",
    "hash": "140219860969842724807865366439375814749"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i128 as ops::bit::Shr<&u8>>::shr",
    "hash": "308718803898760825714291377300181018452"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i128 as ops::bit::Shr<&usize>>::shr",
    "hash": "432789105308362480614615986680024148657"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i128 as ops::bit::Shr<i128>>::shr",
    "hash": "971779726311401079910008921618304006874"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i128 as ops::bit::Shr<i16>>::shr",
    "hash": "89834844656498515932057229835903613992"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i128 as ops::bit::Shr<i32>>::shr",
    "hash": "12179856177594533613662350192378017408"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i128 as ops::bit::Shr<i64>>::shr",
    "hash": "40073749812509907574005587737100963563"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i128 as ops::bit::Shr<i8>>::shr",
    "hash": "440780086663660733014774701491399486512"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i128 as ops::bit::Shr<isize>>::shr",
    "hash": "182088250441570603422630524635462857316"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i128 as ops::bit::Shr<u128>>::shr",
    "hash": "387693787556494335512909044124532825342"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i128 as ops::bit::Shr<u16>>::shr",
    "hash": "34884669497757640806515084887020077859"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i128 as ops::bit::Shr<u32>>::shr",
    "hash": "172037335941770859754905328128574138615"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i128 as ops::bit::Shr<u64>>::shr",
    "hash": "836926539099451969512941081369880301827"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i128 as ops::bit::Shr<u8>>::shr",
    "hash": "108100290183357660697424951938094372091"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i128 as ops::bit::Shr<usize>>::shr",
    "hash": "234639371447434317011885689222326453220"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i128 as ops::bit::Shr>::shr",
    "hash": "1147179115595518222615676769092580718088"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i16 as ops::arith::Add<i16>>::add",
    "hash": "22973830317947593024332688587450450193"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i16 as ops::arith::Add>::add",
    "hash": "53245774328406326904806112541718268251"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i16 as ops::arith::Div<i16>>::div",
    "hash": "15124981278895610847352786637707897684"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i16 as ops::arith::Div>::div",
    "hash": "1089060127972936206610177472915065078219"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i16 as ops::arith::Mul<i16>>::mul",
    "hash": "1595338203657994640617296084489428286705"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i16 as ops::arith::Mul>::mul",
    "hash": "640338194822456533214505479440935516316"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i16 as ops::arith::Neg>::neg",
    "hash": "61457271683391748363576303739135211279"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i16 as ops::arith::Rem<i16>>::rem",
    "hash": "16065135598316871715449506490180889505"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i16 as ops::arith::Rem>::rem",
    "hash": "1265301665121487312712207321896980545791"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i16 as ops::arith::Sub<i16>>::sub",
    "hash": "33482891826277398311704361908328220548"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i16 as ops::arith::Sub>::sub",
    "hash": "174988334509977311255332808119811636863"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i16 as ops::bit::BitAnd<i16>>::bitand",
    "hash": "54579304439266861264028460125788974793"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i16 as ops::bit::BitAnd>::bitand",
    "hash": "1384291668544727436912797155090650502213"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i16 as ops::bit::BitOr<i16>>::bitor",
    "hash": "95647175070617431222837554787324468514"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i16 as ops::bit::BitOr>::bitor",
    "hash": "33622909694952911974605693149318569430"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i16 as ops::bit::BitXor<i16>>::bitxor",
    "hash": "187952945452273163813914124917927324829"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i16 as ops::bit::BitXor>::bitxor",
    "hash": "5518868572732046262572223791770830286"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i16 as ops::bit::Not>::not",
    "hash": "111380734293756406566383445465020064211"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i16 as ops::bit::Shl<&i128>>::shl",
    "hash": "18261745239550273430389513193047032047"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i16 as ops::bit::Shl<&i32>>::shl",
    "hash": "138328743730274712863946671945171077473"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i16 as ops::bit::Shl<&i64>>::shl",
    "hash": "1507047202394090246218296340901662327122"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i16 as ops::bit::Shl<&i8>>::shl",
    "hash": "1456370896747121926918322440066946758112"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i16 as ops::bit::Shl<&isize>>::shl",
    "hash": "1673955859439496053616190683232260104306"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i16 as ops::bit::Shl<&u128>>::shl",
    "hash": "837030531318202768316493945364163644305"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i16 as ops::bit::Shl<&u16>>::shl",
    "hash": "154586680972331597309926697789852643161"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i16 as ops::bit::Shl<&u32>>::shl",
    "hash": "26465213199896725457709041887130029738"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i16 as ops::bit::Shl<&u64>>::shl",
    "hash": "172762641168253923004451848933143101946"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i16 as ops::bit::Shl<&u8>>::shl",
    "hash": "59406410582092717113597534099951643834"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i16 as ops::bit::Shl<&usize>>::shl",
    "hash": "165446674110523233124486932311603702786"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i16 as ops::bit::Shl<i128>>::shl",
    "hash": "14468488721511727146033305555327738574"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i16 as ops::bit::Shl<i16>>::shl",
    "hash": "13414411082044022788868616293032141817"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i16 as ops::bit::Shl<i32>>::shl",
    "hash": "73477917188603661751253131575789159502"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i16 as ops::bit::Shl<i64>>::shl",
    "hash": "1477012738048319893813396678046325057783"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i16 as ops::bit::Shl<i8>>::shl",
    "hash": "608694506903489509017032779779734596184"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i16 as ops::bit::Shl<isize>>::shl",
    "hash": "114643569927352439742537494176003453518"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i16 as ops::bit::Shl<u128>>::shl",
    "hash": "1308996929500961773713633146590372957303"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i16 as ops::bit::Shl<u16>>::shl",
    "hash": "63288071722449046094600394352739576108"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i16 as ops::bit::Shl<u32>>::shl",
    "hash": "1044694989923928507712314365851119182139"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i16 as ops::bit::Shl<u64>>::shl",
    "hash": "739692948161001025715732102307120951412"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i16 as ops::bit::Shl<u8>>::shl",
    "hash": "72405206033504786098855456991813738875"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i16 as ops::bit::Shl<usize>>::shl",
    "hash": "96609476624198946958268066620997759703"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i16 as ops::bit::Shl>::shl",
    "hash": "304017454761933752915783100760995675977"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i16 as ops::bit::Shr<&i128>>::shr",
    "hash": "318672771422442021816132881810628283463"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i16 as ops::bit::Shr<&i32>>::shr",
    "hash": "76920488488348108422428758363999778543"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i16 as ops::bit::Shr<&i64>>::shr",
    "hash": "4038231236109648107123490772116844891"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i16 as ops::bit::Shr<&i8>>::shr",
    "hash": "155384444644559448023704675307601049839"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i16 as ops::bit::Shr<&isize>>::shr",
    "hash": "98185568363298867595978612560898745100"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i16 as ops::bit::Shr<&u128>>::shr",
    "hash": "1526251674930587395313473124274489791220"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i16 as ops::bit::Shr<&u16>>::shr",
    "hash": "117693488321036433371576495495175384702"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i16 as ops::bit::Shr<&u32>>::shr",
    "hash": "66349226080214411454659483458221506925"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i16 as ops::bit::Shr<&u64>>::shr",
    "hash": "63519384021498683445135992045120444003"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i16 as ops::bit::Shr<&u8>>::shr",
    "hash": "87554071914096946162876289832474889574"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i16 as ops::bit::Shr<&usize>>::shr",
    "hash": "1050535669528077586318258997407654398847"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i16 as ops::bit::Shr<i128>>::shr",
    "hash": "88993318026920160215386446118687177188"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i16 as ops::bit::Shr<i16>>::shr",
    "hash": "3278808773968543185695940627759467839"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i16 as ops::bit::Shr<i32>>::shr",
    "hash": "763641291042944023411306614262289919330"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i16 as ops::bit::Shr<i64>>::shr",
    "hash": "24902338414999211465271498912203432793"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i16 as ops::bit::Shr<i8>>::shr",
    "hash": "1227142108772046319811789467156388719785"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i16 as ops::bit::Shr<isize>>::shr",
    "hash": "63293082178990904343970672230275610033"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i16 as ops::bit::Shr<u128>>::shr",
    "hash": "1723238738866117363616705440530908128127"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i16 as ops::bit::Shr<u16>>::shr",
    "hash": "25334866079705856653983500845799337854"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i16 as ops::bit::Shr<u32>>::shr",
    "hash": "158997038828006975543125689017009731826"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i16 as ops::bit::Shr<u64>>::shr",
    "hash": "1415125655894973604415330497661123053408"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i16 as ops::bit::Shr<u8>>::shr",
    "hash": "1809158843232064225516107428330384641021"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i16 as ops::bit::Shr<usize>>::shr",
    "hash": "14156090617383576560329396010787286170"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i16 as ops::bit::Shr>::shr",
    "hash": "199312953815998242210734904397586368035"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i32 as ops::arith::Add<i32>>::add",
    "hash": "1646016742198820570813305933378717977187"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i32 as ops::arith::Add>::add",
    "hash": "1378125194707347058710359697728485135915"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i32 as ops::arith::Div<i32>>::div",
    "hash": "712720761378380657917832130770586561071"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i32 as ops::arith::Div>::div",
    "hash": "691260060021289229115797052592732486156"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i32 as ops::arith::Mul<i32>>::mul",
    "hash": "4425338319816054412067725099350324339"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i32 as ops::arith::Mul>::mul",
    "hash": "38426543157764426915738436449456863354"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i32 as ops::arith::Neg>::neg",
    "hash": "34729374320992161012462106249172725964"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i32 as ops::arith::Rem<i32>>::rem",
    "hash": "170322526570633571805771989028601434399"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i32 as ops::arith::Rem>::rem",
    "hash": "24085720549534801724292278559904273169"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i32 as ops::arith::Sub<i32>>::sub",
    "hash": "125808477302802184092760353607907705081"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i32 as ops::arith::Sub>::sub",
    "hash": "121099190300592659609147260183545859870"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i32 as ops::bit::BitAnd<i32>>::bitand",
    "hash": "1681604863922447937413184149748203062255"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i32 as ops::bit::BitAnd>::bitand",
    "hash": "1273086319164070411113279283836002941654"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i32 as ops::bit::BitOr<i32>>::bitor",
    "hash": "1108409024345719358411823985541679331036"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i32 as ops::bit::BitOr>::bitor",
    "hash": "8094231932808331345982210081211843665"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i32 as ops::bit::BitXor<i32>>::bitxor",
    "hash": "1149412822245450072012074151403950776058"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i32 as ops::bit::BitXor>::bitxor",
    "hash": "271453720080261399212729830254415072357"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i32 as ops::bit::Not>::not",
    "hash": "825827340387038172411642428826025046714"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i32 as ops::bit::Shl<&i128>>::shl",
    "hash": "81525659300422839314801550880469269193"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i32 as ops::bit::Shl<&i16>>::shl",
    "hash": "679502465103800088217688081126536387375"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i32 as ops::bit::Shl<&i64>>::shl",
    "hash": "58383280420036557636757919552776532251"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i32 as ops::bit::Shl<&i8>>::shl",
    "hash": "5963844117195827695182553485280040193"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i32 as ops::bit::Shl<&isize>>::shl",
    "hash": "102030702717001267381283453360079810573"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i32 as ops::bit::Shl<&u128>>::shl",
    "hash": "1040427414715311358417097746565684482699"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i32 as ops::bit::Shl<&u16>>::shl",
    "hash": "162572479092188413591287162953115008039"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i32 as ops::bit::Shl<&u32>>::shl",
    "hash": "64189943435079994724744566074915908345"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i32 as ops::bit::Shl<&u64>>::shl",
    "hash": "134613790551388177511519385168395662826"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i32 as ops::bit::Shl<&u8>>::shl",
    "hash": "1797079872363021916517542840043465019238"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i32 as ops::bit::Shl<&usize>>::shl",
    "hash": "879468060823450772518393534048429041407"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i32 as ops::bit::Shl<i128>>::shl",
    "hash": "53921018636382906793910654216550674414"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i32 as ops::bit::Shl<i16>>::shl",
    "hash": "106146965883684222117512878650852042593"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i32 as ops::bit::Shl<i32>>::shl",
    "hash": "293027247992434729916188444830947593624"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i32 as ops::bit::Shl<i64>>::shl",
    "hash": "178987423106890999279098314820669163389"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i32 as ops::bit::Shl<i8>>::shl",
    "hash": "24821708340853766689325977852397761991"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i32 as ops::bit::Shl<isize>>::shl",
    "hash": "36865235361175958056037686515707583285"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i32 as ops::bit::Shl<u128>>::shl",
    "hash": "149685990520254264226822159003679826082"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i32 as ops::bit::Shl<u16>>::shl",
    "hash": "103272711276135185578281676232532418339"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i32 as ops::bit::Shl<u32>>::shl",
    "hash": "119254107463730098715691938937795437368"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i32 as ops::bit::Shl<u64>>::shl",
    "hash": "111984872529994110878777062417507432767"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i32 as ops::bit::Shl<u8>>::shl",
    "hash": "20101963881337448531122143516187723411"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i32 as ops::bit::Shl<usize>>::shl",
    "hash": "121130310457955544119991404344561548141"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i32 as ops::bit::Shl>::shl",
    "hash": "16453112518012981811036465448485563147"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i32 as ops::bit::Shr<&i128>>::shr",
    "hash": "188778235668951759711390856388024054455"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i32 as ops::bit::Shr<&i16>>::shr",
    "hash": "159728373309303273104001791108481954474"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i32 as ops::bit::Shr<&i64>>::shr",
    "hash": "971210571986476498810309850080176805398"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i32 as ops::bit::Shr<&i8>>::shr",
    "hash": "147539018494790427031165159007127676875"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i32 as ops::bit::Shr<&isize>>::shr",
    "hash": "1530750179539716941313301194142244971585"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i32 as ops::bit::Shr<&u128>>::shr",
    "hash": "46934227487134300638226195085870953941"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i32 as ops::bit::Shr<&u16>>::shr",
    "hash": "14729626018844445692631160355842364726"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i32 as ops::bit::Shr<&u32>>::shr",
    "hash": "153948227861028446029214747602890087205"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i32 as ops::bit::Shr<&u64>>::shr",
    "hash": "148593236157126815241268820567459301124"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i32 as ops::bit::Shr<&u8>>::shr",
    "hash": "26617388208557974199660689978125747147"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i32 as ops::bit::Shr<&usize>>::shr",
    "hash": "6594620060467567160740978875678884187"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i32 as ops::bit::Shr<i128>>::shr",
    "hash": "66732566690501203139198173594540686543"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i32 as ops::bit::Shr<i16>>::shr",
    "hash": "548941730763358935613972969546646377469"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i32 as ops::bit::Shr<i32>>::shr",
    "hash": "1504443064224036403217141144366976042761"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i32 as ops::bit::Shr<i64>>::shr",
    "hash": "1339598925238336213412662627583885013017"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i32 as ops::bit::Shr<i8>>::shr",
    "hash": "870208363172991026717483611012804120909"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i32 as ops::bit::Shr<isize>>::shr",
    "hash": "34126029798408027037242422580447772186"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i32 as ops::bit::Shr<u128>>::shr",
    "hash": "8890605633868814950312619104466059645"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i32 as ops::bit::Shr<u16>>::shr",
    "hash": "425288586546857502618376531356334741019"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i32 as ops::bit::Shr<u32>>::shr",
    "hash": "57301618174615440915006646499872826152"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i32 as ops::bit::Shr<u64>>::shr",
    "hash": "109115995466379095237185756400202884894"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i32 as ops::bit::Shr<u8>>::shr",
    "hash": "69476140844683409113241597024628771366"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i32 as ops::bit::Shr<usize>>::shr",
    "hash": "128034094513942649129946841676616469951"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i32 as ops::bit::Shr>::shr",
    "hash": "361980757760945297917240965097325762538"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i64 as ops::arith::Add<i64>>::add",
    "hash": "164048429665284704212594519811408136481"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i64 as ops::arith::Add>::add",
    "hash": "321842867715153278114914446100132733499"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i64 as ops::arith::Div<i64>>::div",
    "hash": "114609333831249912911534931067986802352"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i64 as ops::arith::Div>::div",
    "hash": "442203165748230155218004339661345589920"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i64 as ops::arith::Mul<i64>>::mul",
    "hash": "751087629937378656016687263155071169132"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i64 as ops::arith::Mul>::mul",
    "hash": "833627924167967430011112135376860748094"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i64 as ops::arith::Neg>::neg",
    "hash": "8405970081279781639553797432103530791"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i64 as ops::arith::Rem<i64>>::rem",
    "hash": "120548647296291464515269334673085784992"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i64 as ops::arith::Rem>::rem",
    "hash": "975090479010882587814294787064444775300"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i64 as ops::arith::Sub<i64>>::sub",
    "hash": "178369180780830143681707461058210084277"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i64 as ops::arith::Sub>::sub",
    "hash": "173966860468011860347683700593852977629"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i64 as ops::bit::BitAnd<i64>>::bitand",
    "hash": "1481274182272974427016793344244164327525"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i64 as ops::bit::BitAnd>::bitand",
    "hash": "3274592259735016465837754955452288668"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i64 as ops::bit::BitOr<i64>>::bitor",
    "hash": "151907825070363873262740878867496294942"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i64 as ops::bit::BitOr>::bitor",
    "hash": "933283198081616501014811450146389738841"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i64 as ops::bit::BitXor<i64>>::bitxor",
    "hash": "112930318554709106346454723087937492166"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i64 as ops::bit::BitXor>::bitxor",
    "hash": "40941922113763007468356941769268880293"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i64 as ops::bit::Not>::not",
    "hash": "1711189889244927400513458225485979758957"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i64 as ops::bit::Shl<&i128>>::shl",
    "hash": "1631950419817112356612630333695520445307"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i64 as ops::bit::Shl<&i16>>::shl",
    "hash": "95117954947569898884809399017049231987"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i64 as ops::bit::Shl<&i32>>::shl",
    "hash": "165802443139633681348739930925821612892"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i64 as ops::bit::Shl<&i8>>::shl",
    "hash": "353649876170232384111509491951901014770"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i64 as ops::bit::Shl<&isize>>::shl",
    "hash": "728580479680029491412294838105184289920"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i64 as ops::bit::Shl<&u128>>::shl",
    "hash": "548653927270990668510122889651447635861"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i64 as ops::bit::Shl<&u16>>::shl",
    "hash": "308147776078805308813749732669257300604"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i64 as ops::bit::Shl<&u32>>::shl",
    "hash": "1270830166844017684112836136070091665344"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i64 as ops::bit::Shl<&u64>>::shl",
    "hash": "16332945858623545741313145658360168067"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i64 as ops::bit::Shl<&u8>>::shl",
    "hash": "1285079477938495888816147851699768522447"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i64 as ops::bit::Shl<&usize>>::shl",
    "hash": "61832352292282978966862442104065825311"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i64 as ops::bit::Shl<i128>>::shl",
    "hash": "110906851637583877666313805381257111022"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i64 as ops::bit::Shl<i16>>::shl",
    "hash": "130337427772951674389301096934196191384"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i64 as ops::bit::Shl<i32>>::shl",
    "hash": "873051519039907941411534991440657317136"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i64 as ops::bit::Shl<i64>>::shl",
    "hash": "99959221071848329245381556517469783856"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i64 as ops::bit::Shl<i8>>::shl",
    "hash": "79078032347431217165287110835181746831"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i64 as ops::bit::Shl<isize>>::shl",
    "hash": "1520572129424005698910288385791275539373"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i64 as ops::bit::Shl<u128>>::shl",
    "hash": "71551238170180442239337489666773889991"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i64 as ops::bit::Shl<u16>>::shl",
    "hash": "2193640256030866835223381083050996854"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i64 as ops::bit::Shl<u32>>::shl",
    "hash": "140457645338391247342163740543822538695"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i64 as ops::bit::Shl<u64>>::shl",
    "hash": "183143955606498962113707426267223554549"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i64 as ops::bit::Shl<u8>>::shl",
    "hash": "13966515962821644661604332499378864626"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i64 as ops::bit::Shl<usize>>::shl",
    "hash": "964883148525320326616891725012756073891"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i64 as ops::bit::Shl>::shl",
    "hash": "804525498719132771716668731768899320470"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i64 as ops::bit::Shr<&i128>>::shr",
    "hash": "8345430521518198079517805192410116905"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i64 as ops::bit::Shr<&i16>>::shr",
    "hash": "99484860021144449902774110070542973829"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i64 as ops::bit::Shr<&i32>>::shr",
    "hash": "924101341392874771412605804106974379334"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i64 as ops::bit::Shr<&i8>>::shr",
    "hash": "74880631098257535166638609069660168723"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i64 as ops::bit::Shr<&isize>>::shr",
    "hash": "124332115104620223977597337538597877199"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i64 as ops::bit::Shr<&u128>>::shr",
    "hash": "1759889616086202912813740694001498050840"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i64 as ops::bit::Shr<&u16>>::shr",
    "hash": "338456966924138736112609590238019423517"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i64 as ops::bit::Shr<&u32>>::shr",
    "hash": "162592631481603278478718711104222749514"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i64 as ops::bit::Shr<&u64>>::shr",
    "hash": "93075926809343513844272130092734691491"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i64 as ops::bit::Shr<&u8>>::shr",
    "hash": "156687091767423187616594134328908188185"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i64 as ops::bit::Shr<&usize>>::shr",
    "hash": "1145011882938170123717469389325123496276"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i64 as ops::bit::Shr<i128>>::shr",
    "hash": "1492848220906123880216672645302039380468"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i64 as ops::bit::Shr<i16>>::shr",
    "hash": "83136077058372592564292207716636450048"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i64 as ops::bit::Shr<i32>>::shr",
    "hash": "1234770330059267505415576183800655542527"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i64 as ops::bit::Shr<i64>>::shr",
    "hash": "894688824509343729413956607675792990271"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i64 as ops::bit::Shr<i8>>::shr",
    "hash": "43082431284639128583036306446703008366"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i64 as ops::bit::Shr<isize>>::shr",
    "hash": "666583903717520367914974494295014103655"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i64 as ops::bit::Shr<u128>>::shr",
    "hash": "1461122797283733262818441836640900803285"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i64 as ops::bit::Shr<u16>>::shr",
    "hash": "829155992614313492616142838777286556039"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i64 as ops::bit::Shr<u32>>::shr",
    "hash": "103090846504445590435404757826065910330"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i64 as ops::bit::Shr<u64>>::shr",
    "hash": "83807129587706899512117227329879009971"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i64 as ops::bit::Shr<u8>>::shr",
    "hash": "55880402194727687315094899152454060948"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i64 as ops::bit::Shr<usize>>::shr",
    "hash": "1808913585004110889117220778241193336631"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i64 as ops::bit::Shr>::shr",
    "hash": "113609619067028625628891754637666822441"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i8 as ops::arith::Add<i8>>::add",
    "hash": "42090862018665651255342609151695079520"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i8 as ops::arith::Add>::add",
    "hash": "458983039538613151810715457688253868008"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i8 as ops::arith::Div<i8>>::div",
    "hash": "571966270943819058010913161824843199225"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i8 as ops::arith::Div>::div",
    "hash": "75134380128217149781833952590758085206"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i8 as ops::arith::Mul<i8>>::mul",
    "hash": "1196420960691931098412847424979264467691"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i8 as ops::arith::Mul>::mul",
    "hash": "821368268252264736913684147667543633691"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i8 as ops::arith::Neg>::neg",
    "hash": "97422812229093581193283237171976709770"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i8 as ops::arith::Rem<i8>>::rem",
    "hash": "3684660533011333563738296819858297340"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i8 as ops::arith::Rem>::rem",
    "hash": "6191136213985437765595895671777105322"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i8 as ops::arith::Sub<i8>>::sub",
    "hash": "88182587971553560647227761065376158147"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i8 as ops::arith::Sub>::sub",
    "hash": "119343366074213953192239545134880696966"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i8 as ops::bit::BitAnd<i8>>::bitand",
    "hash": "1377675400646782439315445987995768500448"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i8 as ops::bit::BitAnd>::bitand",
    "hash": "16019810956647806410816062042011691777"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i8 as ops::bit::BitOr<i8>>::bitor",
    "hash": "179885920272475584947411873487379407394"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i8 as ops::bit::BitOr>::bitor",
    "hash": "3862915553487709603373790963381726165"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i8 as ops::bit::BitXor<i8>>::bitxor",
    "hash": "160165700537658412656298289626209340889"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i8 as ops::bit::BitXor>::bitxor",
    "hash": "104272443061591556574334389349549520752"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i8 as ops::bit::Not>::not",
    "hash": "1230983930510394211717157197341553923711"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i8 as ops::bit::Shl<&i128>>::shl",
    "hash": "152567651094936160353234325649507834090"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i8 as ops::bit::Shl<&i16>>::shl",
    "hash": "48018634931732763677270555276302057908"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i8 as ops::bit::Shl<&i32>>::shl",
    "hash": "18261525363885238737850730065169699913"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i8 as ops::bit::Shl<&i64>>::shl",
    "hash": "125124764787590659737332553689281497200"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i8 as ops::bit::Shl<&isize>>::shl",
    "hash": "12488401642998478343738439699166854007"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i8 as ops::bit::Shl<&u128>>::shl",
    "hash": "50471979309344536296044229671881543184"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i8 as ops::bit::Shl<&u16>>::shl",
    "hash": "923364553791711032916166283865384512975"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i8 as ops::bit::Shl<&u32>>::shl",
    "hash": "58165744535095431789597910584639208800"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i8 as ops::bit::Shl<&u64>>::shl",
    "hash": "150768181893285443447096795820958881543"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i8 as ops::bit::Shl<&u8>>::shl",
    "hash": "34948051444372766662170870639952290341"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i8 as ops::bit::Shl<&usize>>::shl",
    "hash": "136026663124727285038198120398964262635"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i8 as ops::bit::Shl<i128>>::shl",
    "hash": "597159477471130870018290248764787192264"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i8 as ops::bit::Shl<i16>>::shl",
    "hash": "70476177457621110124328423946406534421"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i8 as ops::bit::Shl<i32>>::shl",
    "hash": "110552563491430476767945577658163311027"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i8 as ops::bit::Shl<i64>>::shl",
    "hash": "8800131341957234588539213547160507241"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i8 as ops::bit::Shl<i8>>::shl",
    "hash": "1288451634428734213016931975453245063573"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i8 as ops::bit::Shl<isize>>::shl",
    "hash": "109269326986386257379614439015572037857"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i8 as ops::bit::Shl<u128>>::shl",
    "hash": "245304109088131727818180095341515259919"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i8 as ops::bit::Shl<u16>>::shl",
    "hash": "1208336102679847158414630766839337883395"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i8 as ops::bit::Shl<u32>>::shl",
    "hash": "1831760761420251602916431911416064109754"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i8 as ops::bit::Shl<u64>>::shl",
    "hash": "760527314660467246516453776293900483432"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i8 as ops::bit::Shl<u8>>::shl",
    "hash": "5346103125156430562327468812929571902"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i8 as ops::bit::Shl<usize>>::shl",
    "hash": "182898135672549570312252838811401089048"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i8 as ops::bit::Shl>::shl",
    "hash": "1027080918921050148014486402160177404713"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i8 as ops::bit::Shr<&i128>>::shr",
    "hash": "1753106966670995356715687533182312794805"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i8 as ops::bit::Shr<&i16>>::shr",
    "hash": "94386284202037628846998811649541325809"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i8 as ops::bit::Shr<&i32>>::shr",
    "hash": "7889752302774008739120368031335192727"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i8 as ops::bit::Shr<&i64>>::shr",
    "hash": "771099203794681750914699453348823700041"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i8 as ops::bit::Shr<&isize>>::shr",
    "hash": "180561100817272585558981436736776900073"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i8 as ops::bit::Shr<&u128>>::shr",
    "hash": "40135371267315243637625251063902741814"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i8 as ops::bit::Shr<&u16>>::shr",
    "hash": "93386231016373089117118563041423590164"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i8 as ops::bit::Shr<&u32>>::shr",
    "hash": "20166217946156958212138810777141447583"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i8 as ops::bit::Shr<&u64>>::shr",
    "hash": "1838778503393763581811874817153323796383"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i8 as ops::bit::Shr<&u8>>::shr",
    "hash": "1699632291463461727218344195358711813581"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i8 as ops::bit::Shr<&usize>>::shr",
    "hash": "27878323848731885465074911149828576857"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i8 as ops::bit::Shr<i128>>::shr",
    "hash": "1511172131827918790210971984805040508187"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i8 as ops::bit::Shr<i16>>::shr",
    "hash": "165917007078900391778800053084488407850"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i8 as ops::bit::Shr<i32>>::shr",
    "hash": "2652694196369760162489697834631095160"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i8 as ops::bit::Shr<i64>>::shr",
    "hash": "469822270713634893115847900711241264217"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i8 as ops::bit::Shr<i8>>::shr",
    "hash": "77718901332695223055199669164587486096"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i8 as ops::bit::Shr<isize>>::shr",
    "hash": "63516819281084176715428491552262964108"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i8 as ops::bit::Shr<u128>>::shr",
    "hash": "150528167108329100662671422648890218097"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i8 as ops::bit::Shr<u16>>::shr",
    "hash": "1722962286795093939211945392373243184530"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i8 as ops::bit::Shr<u32>>::shr",
    "hash": "27640701675782891354668764473723973650"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i8 as ops::bit::Shr<u64>>::shr",
    "hash": "74572482503859187148401914062058824228"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i8 as ops::bit::Shr<u8>>::shr",
    "hash": "1517650289982183774211474869758502906221"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i8 as ops::bit::Shr<usize>>::shr",
    "hash": "135235852133298654889534150553449996298"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i8 as ops::bit::Shr>::shr",
    "hash": "81278314249050646432812602166583991279"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&isize as ops::arith::Add<isize>>::add",
    "hash": "639904839237688230118021491902907716097"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&isize as ops::arith::Add>::add",
    "hash": "143300180171598554966053340575673744439"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&isize as ops::arith::Div<isize>>::div",
    "hash": "1045161825138900931916561247424885801184"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&isize as ops::arith::Div>::div",
    "hash": "28231130058152671699068401320741793335"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&isize as ops::arith::Mul<isize>>::mul",
    "hash": "114043199947446593476214139193520503468"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&isize as ops::arith::Mul>::mul",
    "hash": "559304653575291240811840817621697126046"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&isize as ops::arith::Neg>::neg",
    "hash": "1721352087907853740014257002577132322759"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&isize as ops::arith::Rem<isize>>::rem",
    "hash": "1036834873107148648014115011668408533845"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&isize as ops::arith::Rem>::rem",
    "hash": "145814661070175108008122346274187422661"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&isize as ops::arith::Sub<isize>>::sub",
    "hash": "71443397231430156274032176343914431279"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&isize as ops::arith::Sub>::sub",
    "hash": "9350244020028923114148129707712952922"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&isize as ops::bit::BitAnd<isize>>::bitand",
    "hash": "166664018670287386101967522193647647876"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&isize as ops::bit::BitAnd>::bitand",
    "hash": "238319511775889677517662148869226892495"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&isize as ops::bit::BitOr<isize>>::bitor",
    "hash": "101593188608139526077094752115451786545"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&isize as ops::bit::BitOr>::bitor",
    "hash": "20893310807234486016637123110139660459"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&isize as ops::bit::BitXor<isize>>::bitxor",
    "hash": "1012888139979088797215577569318943192059"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&isize as ops::bit::BitXor>::bitxor",
    "hash": "127646408771367667916524609554895485453"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&isize as ops::bit::Not>::not",
    "hash": "419533008474594235010808428410753077136"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&isize as ops::bit::Shl<&i128>>::shl",
    "hash": "30103239126630459448115257868855017509"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&isize as ops::bit::Shl<&i16>>::shl",
    "hash": "141523677025929653338396070285902637154"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&isize as ops::bit::Shl<&i32>>::shl",
    "hash": "74242228021848012821404628064170803949"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&isize as ops::bit::Shl<&i64>>::shl",
    "hash": "173169319532796765227549770039424861265"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&isize as ops::bit::Shl<&i8>>::shl",
    "hash": "84578645396550621628573914379055514713"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&isize as ops::bit::Shl<&u128>>::shl",
    "hash": "1507455822423501874514119066943720969595"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&isize as ops::bit::Shl<&u16>>::shl",
    "hash": "1808705262200788313296061162245595740"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&isize as ops::bit::Shl<&u32>>::shl",
    "hash": "81573698313114856403252512051937802458"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&isize as ops::bit::Shl<&u64>>::shl",
    "hash": "5143326043680248678837444136662320256"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&isize as ops::bit::Shl<&u8>>::shl",
    "hash": "134603514244807450751335316075077003126"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&isize as ops::bit::Shl<&usize>>::shl",
    "hash": "61748272639616230038979898064119212139"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&isize as ops::bit::Shl<i128>>::shl",
    "hash": "183129209340267864966941087034959909389"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&isize as ops::bit::Shl<i16>>::shl",
    "hash": "545236765472922399412630710413804335569"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&isize as ops::bit::Shl<i32>>::shl",
    "hash": "1530023401258363195316335268817420079560"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&isize as ops::bit::Shl<i64>>::shl",
    "hash": "547842880936380818617334386481182964760"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&isize as ops::bit::Shl<i8>>::shl",
    "hash": "1384621600966953361713336453328689803154"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&isize as ops::bit::Shl<isize>>::shl",
    "hash": "1474819917028438701614820484136539652943"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&isize as ops::bit::Shl<u128>>::shl",
    "hash": "59821226098905760838439823151924089540"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&isize as ops::bit::Shl<u16>>::shl",
    "hash": "1201360222549371597013038493402034707694"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&isize as ops::bit::Shl<u32>>::shl",
    "hash": "98541774793206638629299573342267264645"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&isize as ops::bit::Shl<u64>>::shl",
    "hash": "1162315963643463668612337717014468629504"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&isize as ops::bit::Shl<u8>>::shl",
    "hash": "534538123561405160912910218227118069290"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&isize as ops::bit::Shl<usize>>::shl",
    "hash": "1374163358409499367617131475321670517605"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&isize as ops::bit::Shl>::shl",
    "hash": "1217133929452249531017407852554993574668"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&isize as ops::bit::Shr<&i128>>::shr",
    "hash": "1257626193289621037910408828926293796594"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&isize as ops::bit::Shr<&i16>>::shr",
    "hash": "401997102352709109113359225194918620358"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&isize as ops::bit::Shr<&i32>>::shr",
    "hash": "1603689532523320753211025484663513680400"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&isize as ops::bit::Shr<&i64>>::shr",
    "hash": "14544357735292398714361908229885904552"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&isize as ops::bit::Shr<&i8>>::shr",
    "hash": "6978467086039407541768997809132409650"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&isize as ops::bit::Shr<&u128>>::shr",
    "hash": "278012771722352928512162148089302915639"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&isize as ops::bit::Shr<&u16>>::shr",
    "hash": "125073556872533329977272525008647983717"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&isize as ops::bit::Shr<&u32>>::shr",
    "hash": "113966147281288733665938774161580985634"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&isize as ops::bit::Shr<&u64>>::shr",
    "hash": "1590140012110959990213985275905656464192"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&isize as ops::bit::Shr<&u8>>::shr",
    "hash": "1246039569705107819311647661823896467898"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&isize as ops::bit::Shr<&usize>>::shr",
    "hash": "30134252821298550313207630645777509935"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&isize as ops::bit::Shr<i128>>::shr",
    "hash": "90360998129055830653970325086318183056"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&isize as ops::bit::Shr<i16>>::shr",
    "hash": "1051900385762384284510537833563386149552"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&isize as ops::bit::Shr<i32>>::shr",
    "hash": "10452802504283917731357452065719068293"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&isize as ops::bit::Shr<i64>>::shr",
    "hash": "1507125845896179597013671091701150241936"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&isize as ops::bit::Shr<i8>>::shr",
    "hash": "1414687796818086495016772850526558153446"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&isize as ops::bit::Shr<isize>>::shr",
    "hash": "1537706526612272270213301611268104940086"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&isize as ops::bit::Shr<u128>>::shr",
    "hash": "56750337873897000676686900294540454746"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&isize as ops::bit::Shr<u16>>::shr",
    "hash": "1306333519533764794413779627412810490871"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&isize as ops::bit::Shr<u32>>::shr",
    "hash": "54831191363155187404412547806932678005"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&isize as ops::bit::Shr<u64>>::shr",
    "hash": "622894871633702176011985320493934228585"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&isize as ops::bit::Shr<u8>>::shr",
    "hash": "796384119680132839717496509486158960490"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&isize as ops::bit::Shr<usize>>::shr",
    "hash": "179594357052460315398669147787211131630"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&isize as ops::bit::Shr>::shr",
    "hash": "916227360501164209415878645314249360189"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::nonzero::NonZero<i128> as ops::arith::Neg>::neg",
    "hash": "1546299976121973176712793210678112302745"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::nonzero::NonZero<i16> as ops::arith::Neg>::neg",
    "hash": "171083414387541937133920603998814861433"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::nonzero::NonZero<i32> as ops::arith::Neg>::neg",
    "hash": "980071727674692975717196365476012350286"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::nonzero::NonZero<i64> as ops::arith::Neg>::neg",
    "hash": "156631139831725960746675021931784992431"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::nonzero::NonZero<i8> as ops::arith::Neg>::neg",
    "hash": "164121577721864434725977001176452954651"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::nonzero::NonZero<isize> as ops::arith::Neg>::neg",
    "hash": "107778193642083553538196427612495453673"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<i128> as ops::arith::Add<num::saturating::Saturating<i128>>>::add",
    "hash": "1180296825090811662611078499439439964114"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<i128> as ops::arith::Add>::add",
    "hash": "939036172342061517812420002899059252894"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<i128> as ops::arith::Div<num::saturating::Saturating<i128>>>::div",
    "hash": "203039644138129633112413024641686732882"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<i128> as ops::arith::Div>::div",
    "hash": "58478347161988551189796828637604155926"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<i128> as ops::arith::Mul<num::saturating::Saturating<i128>>>::mul",
    "hash": "99633044792572993358323391072001476449"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<i128> as ops::arith::Mul>::mul",
    "hash": "876521554970416671911532584192092299972"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<i128> as ops::arith::Neg>::neg",
    "hash": "76024353721390962613599666017014101267"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<i128> as ops::arith::Rem<num::saturating::Saturating<i128>>>::rem",
    "hash": "1648197845450544308111638020904431683394"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<i128> as ops::arith::Rem>::rem",
    "hash": "1828577184219657357110126192096267575365"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<i128> as ops::arith::Sub<num::saturating::Saturating<i128>>>::sub",
    "hash": "192283574059077643810689667338318598920"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<i128> as ops::arith::Sub>::sub",
    "hash": "113053139967891077194206459580428667325"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<i128> as ops::bit::BitAnd<num::saturating::Saturating<i128>>>::bitand",
    "hash": "61669064473567347708191842009254810903"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<i128> as ops::bit::BitAnd>::bitand",
    "hash": "18979583815522883195470876179551281691"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<i128> as ops::bit::BitOr<num::saturating::Saturating<i128>>>::bitor",
    "hash": "605184930755976537611969080693039145820"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<i128> as ops::bit::BitOr>::bitor",
    "hash": "65197238455360370253816508701212166485"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<i128> as ops::bit::BitXor<num::saturating::Saturating<i128>>>::bitxor",
    "hash": "86974981292080942706464922566234778224"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<i128> as ops::bit::BitXor>::bitxor",
    "hash": "19740892553591114817266883467175615579"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<i128> as ops::bit::Not>::not",
    "hash": "95857052316822152283235921620640111161"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<i16> as ops::arith::Add<num::saturating::Saturating<i16>>>::add",
    "hash": "172233413223000217753699204822664033044"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<i16> as ops::arith::Add>::add",
    "hash": "326089364517754558613156219141544062230"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<i16> as ops::arith::Div<num::saturating::Saturating<i16>>>::div",
    "hash": "1962881054390222532702125279384299108"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<i16> as ops::arith::Div>::div",
    "hash": "162181361277996640568437313280407368437"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<i16> as ops::arith::Mul<num::saturating::Saturating<i16>>>::mul",
    "hash": "237457405186012193417364886951337033942"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<i16> as ops::arith::Mul>::mul",
    "hash": "479454407320911228513233638671763194464"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<i16> as ops::arith::Neg>::neg",
    "hash": "1672306494225687310114609583938232580789"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<i16> as ops::arith::Rem<num::saturating::Saturating<i16>>>::rem",
    "hash": "896641577315678846818396029884822380893"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<i16> as ops::arith::Rem>::rem",
    "hash": "71151600018608212799855672859171468428"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<i16> as ops::arith::Sub<num::saturating::Saturating<i16>>>::sub",
    "hash": "1257074730582494298418112546962393960335"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<i16> as ops::arith::Sub>::sub",
    "hash": "91006300485390917971892942455712972962"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<i16> as ops::bit::BitAnd<num::saturating::Saturating<i16>>>::bitand",
    "hash": "769438768429025898216308243159212440793"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<i16> as ops::bit::BitAnd>::bitand",
    "hash": "158809313307463680769185219026704553985"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<i16> as ops::bit::BitOr<num::saturating::Saturating<i16>>>::bitor",
    "hash": "500393846618484438513568248839008452787"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<i16> as ops::bit::BitOr>::bitor",
    "hash": "514402675797676112514875484011419048656"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<i16> as ops::bit::BitXor<num::saturating::Saturating<i16>>>::bitxor",
    "hash": "806103283829064325213383574916463302998"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<i16> as ops::bit::BitXor>::bitxor",
    "hash": "659872815964254236514890146574815239790"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<i16> as ops::bit::Not>::not",
    "hash": "599325085483868264711648261609001014048"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<i32> as ops::arith::Add<num::saturating::Saturating<i32>>>::add",
    "hash": "556311149381204218016623925774164509750"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<i32> as ops::arith::Add>::add",
    "hash": "116459375167888297837639016363881848339"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<i32> as ops::arith::Div<num::saturating::Saturating<i32>>>::div",
    "hash": "928705761473808304111712090323713178757"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<i32> as ops::arith::Div>::div",
    "hash": "819189041124159326013447781455421369925"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<i32> as ops::arith::Mul<num::saturating::Saturating<i32>>>::mul",
    "hash": "593255974676178586116888428167834938537"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<i32> as ops::arith::Mul>::mul",
    "hash": "1141990680000547878611365210075546555529"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<i32> as ops::arith::Neg>::neg",
    "hash": "67315148211273512027376309768098968154"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<i32> as ops::arith::Rem<num::saturating::Saturating<i32>>>::rem",
    "hash": "1648354978398246864017770648067957926668"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<i32> as ops::arith::Rem>::rem",
    "hash": "780925561722304094913557013380638704655"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<i32> as ops::arith::Sub<num::saturating::Saturating<i32>>>::sub",
    "hash": "125886366871101449913977913835512507151"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<i32> as ops::arith::Sub>::sub",
    "hash": "159402674354614371024296752878603735997"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<i32> as ops::bit::BitAnd<num::saturating::Saturating<i32>>>::bitand",
    "hash": "54892587953798363484931565024789941246"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<i32> as ops::bit::BitAnd>::bitand",
    "hash": "3085515142309510125599074969192547481"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<i32> as ops::bit::BitOr<num::saturating::Saturating<i32>>>::bitor",
    "hash": "149802067960455334912827314807976462982"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<i32> as ops::bit::BitOr>::bitor",
    "hash": "1721605706553478032012969801878009793136"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<i32> as ops::bit::BitXor<num::saturating::Saturating<i32>>>::bitxor",
    "hash": "2706256674075195854282939001951841110"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<i32> as ops::bit::BitXor>::bitxor",
    "hash": "82465307163493313733369878278388041736"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<i32> as ops::bit::Not>::not",
    "hash": "1551448562476148108016176886814220091390"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<i64> as ops::arith::Add<num::saturating::Saturating<i64>>>::add",
    "hash": "1375060022743335178313126571985892913599"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<i64> as ops::arith::Add>::add",
    "hash": "1604474040800324208910235143968737995709"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<i64> as ops::arith::Div<num::saturating::Saturating<i64>>>::div",
    "hash": "159860131263787822738095346466227438102"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<i64> as ops::arith::Div>::div",
    "hash": "177541101280142335608430482583958709972"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<i64> as ops::arith::Mul<num::saturating::Saturating<i64>>>::mul",
    "hash": "1010267751802935086511997168759068024745"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<i64> as ops::arith::Mul>::mul",
    "hash": "30155604127537346944483068435165249450"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<i64> as ops::arith::Neg>::neg",
    "hash": "883130250594329332714007577604547882980"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<i64> as ops::arith::Rem<num::saturating::Saturating<i64>>>::rem",
    "hash": "89256061833298874138676374637260183593"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<i64> as ops::arith::Rem>::rem",
    "hash": "1216343584060733996917655479750486372252"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<i64> as ops::arith::Sub<num::saturating::Saturating<i64>>>::sub",
    "hash": "1103405725092415804510766097886772855220"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<i64> as ops::arith::Sub>::sub",
    "hash": "29251631871522669285540822280748673869"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<i64> as ops::bit::BitAnd<num::saturating::Saturating<i64>>>::bitand",
    "hash": "297463084841537053912636274857853668669"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<i64> as ops::bit::BitAnd>::bitand",
    "hash": "70111404814641564579633146275079539354"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<i64> as ops::bit::BitOr<num::saturating::Saturating<i64>>>::bitor",
    "hash": "1213205376297184219511751704162092192184"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<i64> as ops::bit::BitOr>::bitor",
    "hash": "6264861854130439642492266456323505699"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<i64> as ops::bit::BitXor<num::saturating::Saturating<i64>>>::bitxor",
    "hash": "61939036601242373839763001059500335421"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<i64> as ops::bit::BitXor>::bitxor",
    "hash": "13405628446102637717548810321701109388"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<i64> as ops::bit::Not>::not",
    "hash": "573138316215909682810971425122646498916"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<i8> as ops::arith::Add<num::saturating::Saturating<i8>>>::add",
    "hash": "182483296430913728499984981698763426580"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<i8> as ops::arith::Add>::add",
    "hash": "264026606559471193816915334879935618762"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<i8> as ops::arith::Div<num::saturating::Saturating<i8>>>::div",
    "hash": "154314885572537704515645996714500679833"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<i8> as ops::arith::Div>::div",
    "hash": "1258378778361513824515646883953080905610"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<i8> as ops::arith::Mul<num::saturating::Saturating<i8>>>::mul",
    "hash": "1700985124814357473912713712816074334812"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<i8> as ops::arith::Mul>::mul",
    "hash": "117805780299377623781742958129056518445"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<i8> as ops::arith::Neg>::neg",
    "hash": "133359569142311964501887966829465075965"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<i8> as ops::arith::Rem<num::saturating::Saturating<i8>>>::rem",
    "hash": "21733606648139720784567860373384057969"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<i8> as ops::arith::Rem>::rem",
    "hash": "124589833027750690075078648658378496774"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<i8> as ops::arith::Sub<num::saturating::Saturating<i8>>>::sub",
    "hash": "12701267377569839514565337897332527852"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<i8> as ops::arith::Sub>::sub",
    "hash": "54403995476859787555371445117470624202"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<i8> as ops::bit::BitAnd<num::saturating::Saturating<i8>>>::bitand",
    "hash": "40679548901880790634790817769819559930"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<i8> as ops::bit::BitAnd>::bitand",
    "hash": "592252792520972779610679525175870114497"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<i8> as ops::bit::BitOr<num::saturating::Saturating<i8>>>::bitor",
    "hash": "174425937886210509567942296534983248804"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<i8> as ops::bit::BitOr>::bitor",
    "hash": "84797197052642977304426427134738996858"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<i8> as ops::bit::BitXor<num::saturating::Saturating<i8>>>::bitxor",
    "hash": "91876134766376109858274189875327526056"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<i8> as ops::bit::BitXor>::bitxor",
    "hash": "13349850203493590847459761267872970861"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<i8> as ops::bit::Not>::not",
    "hash": "1624996569003215158515396235646919070121"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<isize> as ops::arith::Add<num::saturating::Saturating<isize>>>::add",
    "hash": "323624098514919461518401216537833302342"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<isize> as ops::arith::Add>::add",
    "hash": "1653282200965313171114214201324270543727"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<isize> as ops::arith::Div<num::saturating::Saturating<isize>>>::div",
    "hash": "1465968694486314122511100847207140099903"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<isize> as ops::arith::Div>::div",
    "hash": "161872356370292134836660728649652979090"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<isize> as ops::arith::Mul<num::saturating::Saturating<isize>>>::mul",
    "hash": "14657257853788335959513729873739699161"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<isize> as ops::arith::Mul>::mul",
    "hash": "1318211517787628892411504080560571957824"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<isize> as ops::arith::Neg>::neg",
    "hash": "51478940742110974573961788832815472522"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<isize> as ops::arith::Rem<num::saturating::Saturating<isize>>>::rem",
    "hash": "463296883576556002717260975705803118212"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<isize> as ops::arith::Rem>::rem",
    "hash": "63738914697258679567891260979200174458"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<isize> as ops::arith::Sub<num::saturating::Saturating<isize>>>::sub",
    "hash": "1604356139654515255516547196399252749718"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<isize> as ops::arith::Sub>::sub",
    "hash": "172570889680586153108101806682323492385"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<isize> as ops::bit::BitAnd<num::saturating::Saturating<isize>>>::bitand",
    "hash": "1642866768934124233415908874941163753672"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<isize> as ops::bit::BitAnd>::bitand",
    "hash": "1117814121036636518617655101323262290634"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<isize> as ops::bit::BitOr<num::saturating::Saturating<isize>>>::bitor",
    "hash": "13142449285945918421294394371709065504"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<isize> as ops::bit::BitOr>::bitor",
    "hash": "1430683129329995592411963714487256953029"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<isize> as ops::bit::BitXor<num::saturating::Saturating<isize>>>::bitxor",
    "hash": "106064270116457943115271401682833456928"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<isize> as ops::bit::BitXor>::bitxor",
    "hash": "528214848026272692410909242943256489381"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<isize> as ops::bit::Not>::not",
    "hash": "1418457847732022241818133574162516297901"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<u128> as ops::arith::Add<num::saturating::Saturating<u128>>>::add",
    "hash": "146750829845378636283974499843749811088"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<u128> as ops::arith::Add>::add",
    "hash": "103877042371573714566831822614674155622"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<u128> as ops::arith::Div<num::saturating::Saturating<u128>>>::div",
    "hash": "800732774503129399216040914842677470418"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<u128> as ops::arith::Div>::div",
    "hash": "146492493099903510052251833151655980182"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<u128> as ops::arith::Mul<num::saturating::Saturating<u128>>>::mul",
    "hash": "902693556433576375518168996521875314629"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<u128> as ops::arith::Mul>::mul",
    "hash": "9949252051753983713022516125235260699"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<u128> as ops::arith::Rem<num::saturating::Saturating<u128>>>::rem",
    "hash": "26445665990569449823944579607459088139"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<u128> as ops::arith::Rem>::rem",
    "hash": "897997776090527299515486793610668811147"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<u128> as ops::arith::Sub<num::saturating::Saturating<u128>>>::sub",
    "hash": "183314816640460995254727272601074980774"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<u128> as ops::arith::Sub>::sub",
    "hash": "72997083801107835183041455034895997374"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<u128> as ops::bit::BitAnd<num::saturating::Saturating<u128>>>::bitand",
    "hash": "867418546470295476412483100988281200791"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<u128> as ops::bit::BitAnd>::bitand",
    "hash": "1792365696683989431012438615461225604920"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<u128> as ops::bit::BitOr<num::saturating::Saturating<u128>>>::bitor",
    "hash": "447648879388635342716328856022099381637"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<u128> as ops::bit::BitOr>::bitor",
    "hash": "1601991425537747962210221223904444801757"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<u128> as ops::bit::BitXor<num::saturating::Saturating<u128>>>::bitxor",
    "hash": "21406353996110965217504306127739633551"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<u128> as ops::bit::BitXor>::bitxor",
    "hash": "51120875041836143242744408844095124768"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<u128> as ops::bit::Not>::not",
    "hash": "152712252246251233316730900410169683506"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<u16> as ops::arith::Add<num::saturating::Saturating<u16>>>::add",
    "hash": "1832502177935271855316990232089607509935"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<u16> as ops::arith::Add>::add",
    "hash": "68306207620701004364581750337232989573"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<u16> as ops::arith::Div<num::saturating::Saturating<u16>>>::div",
    "hash": "140479097243558377574908786648070805932"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<u16> as ops::arith::Div>::div",
    "hash": "6901498211928276875765852896172123622"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<u16> as ops::arith::Mul<num::saturating::Saturating<u16>>>::mul",
    "hash": "484091536101841106794030209280819649"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<u16> as ops::arith::Mul>::mul",
    "hash": "56985607376891136761608388352656942146"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<u16> as ops::arith::Rem<num::saturating::Saturating<u16>>>::rem",
    "hash": "57527141689997729848868456420694941460"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<u16> as ops::arith::Rem>::rem",
    "hash": "141543372085509308405000713551287937937"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<u16> as ops::arith::Sub<num::saturating::Saturating<u16>>>::sub",
    "hash": "54235580750553331458104138916590496402"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<u16> as ops::arith::Sub>::sub",
    "hash": "69750119643367739826400517100077142459"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<u16> as ops::bit::BitAnd<num::saturating::Saturating<u16>>>::bitand",
    "hash": "102609036268273417635195257271756434793"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<u16> as ops::bit::BitAnd>::bitand",
    "hash": "86651351269774730287832006315354568002"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<u16> as ops::bit::BitOr<num::saturating::Saturating<u16>>>::bitor",
    "hash": "950071264369265002214058176041833031772"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<u16> as ops::bit::BitOr>::bitor",
    "hash": "1172242625181628543815725375469239251485"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<u16> as ops::bit::BitXor<num::saturating::Saturating<u16>>>::bitxor",
    "hash": "22952311063559877086695396600522252567"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<u16> as ops::bit::BitXor>::bitxor",
    "hash": "1803299081383678186917572978410293276146"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<u16> as ops::bit::Not>::not",
    "hash": "92631857521177524912402539298832676829"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<u32> as ops::arith::Add<num::saturating::Saturating<u32>>>::add",
    "hash": "78610467063478551610951673522611675242"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<u32> as ops::arith::Add>::add",
    "hash": "64332786233088647758640084476547328519"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<u32> as ops::arith::Div<num::saturating::Saturating<u32>>>::div",
    "hash": "109555991741456253463339457244720170637"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<u32> as ops::arith::Div>::div",
    "hash": "130035318425916541816172531897377889795"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<u32> as ops::arith::Mul<num::saturating::Saturating<u32>>>::mul",
    "hash": "1286517603531916627010546571693634016434"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<u32> as ops::arith::Mul>::mul",
    "hash": "1108493751047158338214310537563028861190"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<u32> as ops::arith::Rem<num::saturating::Saturating<u32>>>::rem",
    "hash": "155788409275388658101953738236817271448"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<u32> as ops::arith::Rem>::rem",
    "hash": "37395330639998670603782920273431991783"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<u32> as ops::arith::Sub<num::saturating::Saturating<u32>>>::sub",
    "hash": "171794910551247903881116921991605838383"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<u32> as ops::arith::Sub>::sub",
    "hash": "1309739502027508695511875780456378425870"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<u32> as ops::bit::BitAnd<num::saturating::Saturating<u32>>>::bitand",
    "hash": "16043859446694395157567626328052697929"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<u32> as ops::bit::BitAnd>::bitand",
    "hash": "158392626922966074624405682066066310498"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<u32> as ops::bit::BitOr<num::saturating::Saturating<u32>>>::bitor",
    "hash": "522809240722697630710804446307046583938"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<u32> as ops::bit::BitOr>::bitor",
    "hash": "1456641668198307778012011916874103053925"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<u32> as ops::bit::BitXor<num::saturating::Saturating<u32>>>::bitxor",
    "hash": "1539265577012981449213793822929901602808"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<u32> as ops::bit::BitXor>::bitxor",
    "hash": "1545066465346278149113571319502676933399"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<u32> as ops::bit::Not>::not",
    "hash": "33475073342884183438447992695546883317"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<u64> as ops::arith::Add<num::saturating::Saturating<u64>>>::add",
    "hash": "331048695827711416241554970237996834"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<u64> as ops::arith::Add>::add",
    "hash": "1464993733774518794814193212569222350178"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<u64> as ops::arith::Div<num::saturating::Saturating<u64>>>::div",
    "hash": "1055554328173369725313810263922576622986"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<u64> as ops::arith::Div>::div",
    "hash": "24734662250955960518394336685142712575"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<u64> as ops::arith::Mul<num::saturating::Saturating<u64>>>::mul",
    "hash": "1434538225374188372910859618672857646741"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<u64> as ops::arith::Mul>::mul",
    "hash": "17036577264588128657669666731312880938"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<u64> as ops::arith::Rem<num::saturating::Saturating<u64>>>::rem",
    "hash": "143836061301218774799302876576671556826"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<u64> as ops::arith::Rem>::rem",
    "hash": "969470945443589044411600898050446406052"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<u64> as ops::arith::Sub<num::saturating::Saturating<u64>>>::sub",
    "hash": "74896234778515994651673999418684806944"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<u64> as ops::arith::Sub>::sub",
    "hash": "50476370023001428223158380231124985004"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<u64> as ops::bit::BitAnd<num::saturating::Saturating<u64>>>::bitand",
    "hash": "70145061065599067408935873645710465845"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<u64> as ops::bit::BitAnd>::bitand",
    "hash": "559275040145627315316727798246354186713"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<u64> as ops::bit::BitOr<num::saturating::Saturating<u64>>>::bitor",
    "hash": "799149595618109365012569414743029618762"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<u64> as ops::bit::BitOr>::bitor",
    "hash": "305486188121943624915242417638726189707"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<u64> as ops::bit::BitXor<num::saturating::Saturating<u64>>>::bitxor",
    "hash": "1265921720359983632618356004724544948290"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<u64> as ops::bit::BitXor>::bitxor",
    "hash": "28788991861233145437324521923178088289"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<u64> as ops::bit::Not>::not",
    "hash": "1221672594960321484755985114288477350"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<u8> as ops::arith::Add<num::saturating::Saturating<u8>>>::add",
    "hash": "73638781221046067011524441640709470299"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<u8> as ops::arith::Add>::add",
    "hash": "482427365405387426213907163740302829302"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<u8> as ops::arith::Div<num::saturating::Saturating<u8>>>::div",
    "hash": "90987804639505500696011705256526928444"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<u8> as ops::arith::Div>::div",
    "hash": "489476429978823978816477478164145713360"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<u8> as ops::arith::Mul<num::saturating::Saturating<u8>>>::mul",
    "hash": "1647033671953104242711041975583070868752"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<u8> as ops::arith::Mul>::mul",
    "hash": "1461231587074223505610430229700510159232"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<u8> as ops::arith::Rem<num::saturating::Saturating<u8>>>::rem",
    "hash": "179142600328801822415896773152923871236"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<u8> as ops::arith::Rem>::rem",
    "hash": "72501386322270842772323309839503385990"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<u8> as ops::arith::Sub<num::saturating::Saturating<u8>>>::sub",
    "hash": "154342994554015560647156095169958663040"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<u8> as ops::arith::Sub>::sub",
    "hash": "1100596602089759622015344598811807941158"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<u8> as ops::bit::BitAnd<num::saturating::Saturating<u8>>>::bitand",
    "hash": "774834974749566305514428595102887007703"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<u8> as ops::bit::BitAnd>::bitand",
    "hash": "294357046050091099318297120169264137728"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<u8> as ops::bit::BitOr<num::saturating::Saturating<u8>>>::bitor",
    "hash": "999859800265625444510595553533346597119"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<u8> as ops::bit::BitOr>::bitor",
    "hash": "35090081832740957315398225389759052936"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<u8> as ops::bit::BitXor<num::saturating::Saturating<u8>>>::bitxor",
    "hash": "675956012623774968413781234662759359188"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<u8> as ops::bit::BitXor>::bitxor",
    "hash": "858176592372062314815045782012998147356"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<u8> as ops::bit::Not>::not",
    "hash": "49830904555372786495170374959882275355"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<usize> as ops::arith::Add<num::saturating::Saturating<usize>>>::add",
    "hash": "80811925727760371551693553558172691107"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<usize> as ops::arith::Add>::add",
    "hash": "776649816186905390317148248912392132515"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<usize> as ops::arith::Div<num::saturating::Saturating<usize>>>::div",
    "hash": "64514919377062195119526416783113546620"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<usize> as ops::arith::Div>::div",
    "hash": "1298496052781184588116492932865353639270"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<usize> as ops::arith::Mul<num::saturating::Saturating<usize>>>::mul",
    "hash": "29510381906763128008511484823461898672"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<usize> as ops::arith::Mul>::mul",
    "hash": "1059911396660162025012866658623616109633"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<usize> as ops::arith::Rem<num::saturating::Saturating<usize>>>::rem",
    "hash": "1751126422258229398515107692451582982643"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<usize> as ops::arith::Rem>::rem",
    "hash": "56755266713455194738993084392833870021"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<usize> as ops::arith::Sub<num::saturating::Saturating<usize>>>::sub",
    "hash": "133280100940053605752424503129438100560"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<usize> as ops::arith::Sub>::sub",
    "hash": "925119782883928423415049865170304352396"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<usize> as ops::bit::BitAnd<num::saturating::Saturating<usize>>>::bitand",
    "hash": "920745862393786427412418310963865989019"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<usize> as ops::bit::BitAnd>::bitand",
    "hash": "1796588158396543706318229536195279024746"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<usize> as ops::bit::BitOr<num::saturating::Saturating<usize>>>::bitor",
    "hash": "112919329238375074977812833293827938276"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<usize> as ops::bit::BitOr>::bitor",
    "hash": "1426865916983207233468322311169410195"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<usize> as ops::bit::BitXor<num::saturating::Saturating<usize>>>::bitxor",
    "hash": "75372215498476330392140913187015961428"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<usize> as ops::bit::BitXor>::bitxor",
    "hash": "1750824097696278179213351110205833459340"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<usize> as ops::bit::Not>::not",
    "hash": "160804271649793846474081348266450721543"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i128> as ops::arith::Add<num::wrapping::Wrapping<i128>>>::add",
    "hash": "1709384656757958867128496348562386168"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i128> as ops::arith::Add>::add",
    "hash": "83904060138631029846123050168393083522"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i128> as ops::arith::Div<num::wrapping::Wrapping<i128>>>::div",
    "hash": "41078835127555746402154163108302264265"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i128> as ops::arith::Div>::div",
    "hash": "174246491217847907619180626620170380733"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i128> as ops::arith::Mul<num::wrapping::Wrapping<i128>>>::mul",
    "hash": "11590854214995104863789085334663165750"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i128> as ops::arith::Mul>::mul",
    "hash": "252997420498467611516214669338848390698"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i128> as ops::arith::Neg>::neg",
    "hash": "1013614974286048430116206610814728633642"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i128> as ops::arith::Rem<num::wrapping::Wrapping<i128>>>::rem",
    "hash": "10491914561458370839712144194113517871"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i128> as ops::arith::Rem>::rem",
    "hash": "1031732685719717677715182273975778818427"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i128> as ops::arith::Sub<num::wrapping::Wrapping<i128>>>::sub",
    "hash": "1837709108922272589214244530221675310879"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i128> as ops::arith::Sub>::sub",
    "hash": "56327374553834008461779261602574933609"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i128> as ops::bit::BitAnd<num::wrapping::Wrapping<i128>>>::bitand",
    "hash": "51278431989766028706499114258196783801"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i128> as ops::bit::BitAnd>::bitand",
    "hash": "1685438678321854504715657690099320610786"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i128> as ops::bit::BitOr<num::wrapping::Wrapping<i128>>>::bitor",
    "hash": "100457041226822995785764045053281090673"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i128> as ops::bit::BitOr>::bitor",
    "hash": "102235584566737884589701746269275511017"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i128> as ops::bit::BitXor<num::wrapping::Wrapping<i128>>>::bitxor",
    "hash": "115334695634007226102183653422535062938"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i128> as ops::bit::BitXor>::bitxor",
    "hash": "8346469332978447415243447272652426056"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i128> as ops::bit::Not>::not",
    "hash": "56742298200268951118315753241514382544"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i128> as ops::bit::Shl<&usize>>::shl",
    "hash": "111593474611291072919252958638643086185"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i128> as ops::bit::Shl<usize>>::shl",
    "hash": "103021039046721037436530923862962417616"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i128> as ops::bit::Shr<&usize>>::shr",
    "hash": "135015441147122215791091780057580437604"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i128> as ops::bit::Shr<usize>>::shr",
    "hash": "924703916591315383913935769414878625323"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i16> as ops::arith::Add<num::wrapping::Wrapping<i16>>>::add",
    "hash": "145407434500834458373829617361650240886"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i16> as ops::arith::Add>::add",
    "hash": "667368026274928361616230703271969437236"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i16> as ops::arith::Div<num::wrapping::Wrapping<i16>>>::div",
    "hash": "1112055759221256795216079536422177382829"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i16> as ops::arith::Div>::div",
    "hash": "58800860888426669608593538729419299145"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i16> as ops::arith::Mul<num::wrapping::Wrapping<i16>>>::mul",
    "hash": "153818983566148424033595956488428882725"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i16> as ops::arith::Mul>::mul",
    "hash": "1781494935625411785016778617719469025360"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i16> as ops::arith::Neg>::neg",
    "hash": "42393350261876014415400559936126663720"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i16> as ops::arith::Rem<num::wrapping::Wrapping<i16>>>::rem",
    "hash": "177538762237410099842851233959613681741"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i16> as ops::arith::Rem>::rem",
    "hash": "107535232902693192496045393528475056133"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i16> as ops::arith::Sub<num::wrapping::Wrapping<i16>>>::sub",
    "hash": "889432587410813775216626260313870131150"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i16> as ops::arith::Sub>::sub",
    "hash": "1744790459077922624218381750671641015889"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i16> as ops::bit::BitAnd<num::wrapping::Wrapping<i16>>>::bitand",
    "hash": "1028475283608914050017057414581460889058"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i16> as ops::bit::BitAnd>::bitand",
    "hash": "86949185259454163679489498259195762203"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i16> as ops::bit::BitOr<num::wrapping::Wrapping<i16>>>::bitor",
    "hash": "87802051606815267513167889668207963631"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i16> as ops::bit::BitOr>::bitor",
    "hash": "324985955703347421616480625692460405454"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i16> as ops::bit::BitXor<num::wrapping::Wrapping<i16>>>::bitxor",
    "hash": "75175163594238575975475794873246591778"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i16> as ops::bit::BitXor>::bitxor",
    "hash": "69708522933981465655812294219800440063"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i16> as ops::bit::Not>::not",
    "hash": "108993870549584183213096812818362687826"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i16> as ops::bit::Shl<&usize>>::shl",
    "hash": "1655410427814671380118258542365403438018"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i16> as ops::bit::Shl<usize>>::shl",
    "hash": "1295830449828594021316852862407094479179"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i16> as ops::bit::Shr<&usize>>::shr",
    "hash": "1810165580670357044514050832775763632222"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i16> as ops::bit::Shr<usize>>::shr",
    "hash": "125079792331192177506506223780342890869"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i32> as ops::arith::Add<num::wrapping::Wrapping<i32>>>::add",
    "hash": "1496054345137255111710217380768291145488"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i32> as ops::arith::Add>::add",
    "hash": "10802154259782079246072155658499474900"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i32> as ops::arith::Div<num::wrapping::Wrapping<i32>>>::div",
    "hash": "358738806366097947012932589280088663204"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i32> as ops::arith::Div>::div",
    "hash": "1422227368388468065718093171191198107052"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i32> as ops::arith::Mul<num::wrapping::Wrapping<i32>>>::mul",
    "hash": "1090121593142935534213128156960656127824"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i32> as ops::arith::Mul>::mul",
    "hash": "155083463414407373797118084892055112641"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i32> as ops::arith::Neg>::neg",
    "hash": "125454632298788934409245026193078155111"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i32> as ops::arith::Rem<num::wrapping::Wrapping<i32>>>::rem",
    "hash": "131835736378104265852714533299904435116"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i32> as ops::arith::Rem>::rem",
    "hash": "135293245128838442346091869157812805869"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i32> as ops::arith::Sub<num::wrapping::Wrapping<i32>>>::sub",
    "hash": "100737202765075101333564925872871578170"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i32> as ops::arith::Sub>::sub",
    "hash": "1466460252495677115816694954536811354848"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i32> as ops::bit::BitAnd<num::wrapping::Wrapping<i32>>>::bitand",
    "hash": "1151835788785027330718182810734656984631"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i32> as ops::bit::BitAnd>::bitand",
    "hash": "58493834985947123782492497003072203247"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i32> as ops::bit::BitOr<num::wrapping::Wrapping<i32>>>::bitor",
    "hash": "1561183017805296975813008485052833585813"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i32> as ops::bit::BitOr>::bitor",
    "hash": "80205480968549307259047951061082499003"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i32> as ops::bit::BitXor<num::wrapping::Wrapping<i32>>>::bitxor",
    "hash": "95572692922392708718036614559294805509"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i32> as ops::bit::BitXor>::bitxor",
    "hash": "4621599375320725179820165925446372679"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i32> as ops::bit::Not>::not",
    "hash": "92010961785731088111012023776440865318"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i32> as ops::bit::Shl<&usize>>::shl",
    "hash": "62473280930474142417401224543493544577"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i32> as ops::bit::Shl<usize>>::shl",
    "hash": "156185416588812857925120109392599370473"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i32> as ops::bit::Shr<&usize>>::shr",
    "hash": "248163337907091613117853105150291261179"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i32> as ops::bit::Shr<usize>>::shr",
    "hash": "1427953993643073442012398568756007321448"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i64> as ops::arith::Add<num::wrapping::Wrapping<i64>>>::add",
    "hash": "24064072278455013904365906177012697764"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i64> as ops::arith::Add>::add",
    "hash": "93869040876853762967481646732861531100"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i64> as ops::arith::Div<num::wrapping::Wrapping<i64>>>::div",
    "hash": "676694389303701030113933884199749190108"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i64> as ops::arith::Div>::div",
    "hash": "781847103978099049858794444177705121"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i64> as ops::arith::Mul<num::wrapping::Wrapping<i64>>>::mul",
    "hash": "875162502118664429412852813709214970632"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i64> as ops::arith::Mul>::mul",
    "hash": "126170804528054091242224740333847285384"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i64> as ops::arith::Neg>::neg",
    "hash": "67200628685083193761272093054225753914"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i64> as ops::arith::Rem<num::wrapping::Wrapping<i64>>>::rem",
    "hash": "961141164653126524217622905026457033490"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i64> as ops::arith::Rem>::rem",
    "hash": "1587911703669004957911234284416155256994"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i64> as ops::arith::Sub<num::wrapping::Wrapping<i64>>>::sub",
    "hash": "93065089519292712392538523840387999081"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i64> as ops::arith::Sub>::sub",
    "hash": "88409969538727868198313852904974630749"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i64> as ops::bit::BitAnd<num::wrapping::Wrapping<i64>>>::bitand",
    "hash": "616428129220549715216994299033502954325"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i64> as ops::bit::BitAnd>::bitand",
    "hash": "184643219482815890914125921184262453445"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i64> as ops::bit::BitOr<num::wrapping::Wrapping<i64>>>::bitor",
    "hash": "112253383969330965929941906802309193274"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i64> as ops::bit::BitOr>::bitor",
    "hash": "1368474574588003245416916315708704392854"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i64> as ops::bit::BitXor<num::wrapping::Wrapping<i64>>>::bitxor",
    "hash": "1308802575172552284517399477232315974587"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i64> as ops::bit::BitXor>::bitxor",
    "hash": "2901199543208227658793683058444912916"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i64> as ops::bit::Not>::not",
    "hash": "178303533797913717781221807929838851949"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i64> as ops::bit::Shl<&usize>>::shl",
    "hash": "1790764451292515323910143648588342583267"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i64> as ops::bit::Shl<usize>>::shl",
    "hash": "50215541643748368369423585668626160858"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i64> as ops::bit::Shr<&usize>>::shr",
    "hash": "166887009194722895542968721182816504516"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i64> as ops::bit::Shr<usize>>::shr",
    "hash": "639362069287771128715502705283989067639"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i8> as ops::arith::Add<num::wrapping::Wrapping<i8>>>::add",
    "hash": "790923348936489605112222645916318714349"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i8> as ops::arith::Add>::add",
    "hash": "167181497687160619219158982870353983696"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i8> as ops::arith::Div<num::wrapping::Wrapping<i8>>>::div",
    "hash": "1932635033220177286646396848945197226"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i8> as ops::arith::Div>::div",
    "hash": "161347860334365348764088828036343248052"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i8> as ops::arith::Mul<num::wrapping::Wrapping<i8>>>::mul",
    "hash": "1762799850309498300511046031596253249880"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i8> as ops::arith::Mul>::mul",
    "hash": "184707511760788266216431146766860326762"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i8> as ops::arith::Neg>::neg",
    "hash": "1631962082457624997314652776657061526578"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i8> as ops::arith::Rem<num::wrapping::Wrapping<i8>>>::rem",
    "hash": "5266377017614612004403351255849009059"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i8> as ops::arith::Rem>::rem",
    "hash": "1805022931134545563614572384881944070156"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i8> as ops::arith::Sub<num::wrapping::Wrapping<i8>>>::sub",
    "hash": "689906547933718998711733083116950019990"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i8> as ops::arith::Sub>::sub",
    "hash": "100304924666816596814047224286550793898"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i8> as ops::bit::BitAnd<num::wrapping::Wrapping<i8>>>::bitand",
    "hash": "1306407742880879071734562766285183009"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i8> as ops::bit::BitAnd>::bitand",
    "hash": "1460214850617501348110268375449263808049"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i8> as ops::bit::BitOr<num::wrapping::Wrapping<i8>>>::bitor",
    "hash": "1206291449666838807117400348079040185357"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i8> as ops::bit::BitOr>::bitor",
    "hash": "146344504447511447849227294595986798618"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i8> as ops::bit::BitXor<num::wrapping::Wrapping<i8>>>::bitxor",
    "hash": "805006804827174534710374932042105840959"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i8> as ops::bit::BitXor>::bitxor",
    "hash": "1539384212219457256712845403073420007502"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i8> as ops::bit::Not>::not",
    "hash": "167020842421073383803570158685538499385"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i8> as ops::bit::Shl<&usize>>::shl",
    "hash": "136214804584516172114846568870534550024"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i8> as ops::bit::Shl<usize>>::shl",
    "hash": "564002704570664595812113905105364513975"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i8> as ops::bit::Shr<&usize>>::shr",
    "hash": "78804236390512857596542061953302807443"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i8> as ops::bit::Shr<usize>>::shr",
    "hash": "781032439256666016715249029303861388001"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<isize> as ops::arith::Add<num::wrapping::Wrapping<isize>>>::add",
    "hash": "922730970198526718717868085300239125070"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<isize> as ops::arith::Add>::add",
    "hash": "97755322465549915283957627603154835533"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<isize> as ops::arith::Div<num::wrapping::Wrapping<isize>>>::div",
    "hash": "1194318803076858572015414150730173142644"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<isize> as ops::arith::Div>::div",
    "hash": "1527083617463027258212323050064929997370"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<isize> as ops::arith::Mul<num::wrapping::Wrapping<isize>>>::mul",
    "hash": "53603244991110950886977292525257395078"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<isize> as ops::arith::Mul>::mul",
    "hash": "38244933827912984253239502959343783387"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<isize> as ops::arith::Neg>::neg",
    "hash": "166029612126993544486171299457032261217"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<isize> as ops::arith::Rem<num::wrapping::Wrapping<isize>>>::rem",
    "hash": "2966668085337850811053810394601318710"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<isize> as ops::arith::Rem>::rem",
    "hash": "1708092226281327522711867369105746624515"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<isize> as ops::arith::Sub<num::wrapping::Wrapping<isize>>>::sub",
    "hash": "70497839956059559743304634801030971389"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<isize> as ops::arith::Sub>::sub",
    "hash": "320458349077114542617445577769342693768"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<isize> as ops::bit::BitAnd<num::wrapping::Wrapping<isize>>>::bitand",
    "hash": "1764709524688129967510118589742728922728"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<isize> as ops::bit::BitAnd>::bitand",
    "hash": "114471052876309947693435077195727887688"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<isize> as ops::bit::BitOr<num::wrapping::Wrapping<isize>>>::bitor",
    "hash": "45623581786398480246907026494460706610"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<isize> as ops::bit::BitOr>::bitor",
    "hash": "91714199039746428415043927160987174813"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<isize> as ops::bit::BitXor<num::wrapping::Wrapping<isize>>>::bitxor",
    "hash": "1674422434400160517511742739234440059172"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<isize> as ops::bit::BitXor>::bitxor",
    "hash": "110911919620704518465800239756780286035"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<isize> as ops::bit::Not>::not",
    "hash": "53151058160939101564435176280464644444"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<isize> as ops::bit::Shl<&usize>>::shl",
    "hash": "16840240888632991682687372676115047234"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<isize> as ops::bit::Shl<usize>>::shl",
    "hash": "249589826532052290215668982378211486310"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<isize> as ops::bit::Shr<&usize>>::shr",
    "hash": "53858342057490012418962893756801306847"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<isize> as ops::bit::Shr<usize>>::shr",
    "hash": "724887575179779379810668018156361335821"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u128> as ops::arith::Add<num::wrapping::Wrapping<u128>>>::add",
    "hash": "155247685855477405047330202181946530790"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u128> as ops::arith::Add>::add",
    "hash": "154383834059848577002669965904311633616"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u128> as ops::arith::Div<num::wrapping::Wrapping<u128>>>::div",
    "hash": "94538909836609172217589268458364942069"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u128> as ops::arith::Div>::div",
    "hash": "785715762055595042815899233371511984324"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u128> as ops::arith::Mul<num::wrapping::Wrapping<u128>>>::mul",
    "hash": "1583426735524900762411803359019892338758"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u128> as ops::arith::Mul>::mul",
    "hash": "1399772161256097254410556200370939790868"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u128> as ops::arith::Neg>::neg",
    "hash": "39735494177245102899512789566382266822"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u128> as ops::arith::Rem<num::wrapping::Wrapping<u128>>>::rem",
    "hash": "177336957041855855618117081971200627774"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u128> as ops::arith::Rem>::rem",
    "hash": "670299812578167878416067819892847046035"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u128> as ops::arith::Sub<num::wrapping::Wrapping<u128>>>::sub",
    "hash": "22144860101779208704516455542676962751"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u128> as ops::arith::Sub>::sub",
    "hash": "1086965329417672130915449192176410827016"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u128> as ops::bit::BitAnd<num::wrapping::Wrapping<u128>>>::bitand",
    "hash": "1659761185718709458211758714216332829877"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u128> as ops::bit::BitAnd>::bitand",
    "hash": "41231885053467540774983365137621231702"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u128> as ops::bit::BitOr<num::wrapping::Wrapping<u128>>>::bitor",
    "hash": "149924065430303595375595833513608050962"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u128> as ops::bit::BitOr>::bitor",
    "hash": "1516541699426826552016819853729199294918"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u128> as ops::bit::BitXor<num::wrapping::Wrapping<u128>>>::bitxor",
    "hash": "1591161640183166657717997456132343869156"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u128> as ops::bit::BitXor>::bitxor",
    "hash": "103768852061926319258049036393767935425"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u128> as ops::bit::Not>::not",
    "hash": "58501394887734408571489067013420794508"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u128> as ops::bit::Shl<&usize>>::shl",
    "hash": "1413122322670658038715862890526437814780"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u128> as ops::bit::Shl<usize>>::shl",
    "hash": "19227609238258214154954538537524542918"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u128> as ops::bit::Shr<&usize>>::shr",
    "hash": "106787227987617809793260671663213012759"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u128> as ops::bit::Shr<usize>>::shr",
    "hash": "84623655783276146798862523856273973399"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u16> as ops::arith::Add<num::wrapping::Wrapping<u16>>>::add",
    "hash": "1620640723102528420512885965562756919705"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u16> as ops::arith::Add>::add",
    "hash": "74629822106912609258351172998725429567"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u16> as ops::arith::Div<num::wrapping::Wrapping<u16>>>::div",
    "hash": "75414152842979184386609812149348355324"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u16> as ops::arith::Div>::div",
    "hash": "256607532190305607416223295197375304383"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u16> as ops::arith::Mul<num::wrapping::Wrapping<u16>>>::mul",
    "hash": "137263296310994593495163337109087998049"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u16> as ops::arith::Mul>::mul",
    "hash": "296661577231650300416646460085361556089"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u16> as ops::arith::Neg>::neg",
    "hash": "62188043299887427872505489125515656496"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u16> as ops::arith::Rem<num::wrapping::Wrapping<u16>>>::rem",
    "hash": "611956789660790299911419699123684349863"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u16> as ops::arith::Rem>::rem",
    "hash": "43195660885370522395650572601087674156"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u16> as ops::arith::Sub<num::wrapping::Wrapping<u16>>>::sub",
    "hash": "107143417399998455201400346793620160426"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u16> as ops::arith::Sub>::sub",
    "hash": "78008469865969541311224158246952397853"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u16> as ops::bit::BitAnd<num::wrapping::Wrapping<u16>>>::bitand",
    "hash": "1636495298028375871417116129554469265276"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u16> as ops::bit::BitAnd>::bitand",
    "hash": "14596400186171140398238235691472600253"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u16> as ops::bit::BitOr<num::wrapping::Wrapping<u16>>>::bitor",
    "hash": "1717781083693181853211053853516241316407"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u16> as ops::bit::BitOr>::bitor",
    "hash": "1456985843786990552011577164727881828235"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u16> as ops::bit::BitXor<num::wrapping::Wrapping<u16>>>::bitxor",
    "hash": "1828399869538700131409454889227970792"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u16> as ops::bit::BitXor>::bitxor",
    "hash": "363177419474449246217105700943126580031"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u16> as ops::bit::Not>::not",
    "hash": "75699008303779191739390175653042797521"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u16> as ops::bit::Shl<&usize>>::shl",
    "hash": "566286285079476568915504179190912592093"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u16> as ops::bit::Shl<usize>>::shl",
    "hash": "151113554611672922882360219808232662872"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u16> as ops::bit::Shr<&usize>>::shr",
    "hash": "8637565733681022071329482371766253583"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u16> as ops::bit::Shr<usize>>::shr",
    "hash": "1720326953728100290511800895019950586915"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u32> as ops::arith::Add<num::wrapping::Wrapping<u32>>>::add",
    "hash": "121126866655978368659480602985017329989"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u32> as ops::arith::Add>::add",
    "hash": "1032623815120391166214176499824271499854"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u32> as ops::arith::Div<num::wrapping::Wrapping<u32>>>::div",
    "hash": "1653771228638510300413113698701005844482"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u32> as ops::arith::Div>::div",
    "hash": "115619645545995538624997579702164932319"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u32> as ops::arith::Mul<num::wrapping::Wrapping<u32>>>::mul",
    "hash": "1302257407861246096514768631587089867082"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u32> as ops::arith::Mul>::mul",
    "hash": "32108003062684158017987436281130290556"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u32> as ops::arith::Neg>::neg",
    "hash": "32277418331779592564688088552330943968"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u32> as ops::arith::Rem<num::wrapping::Wrapping<u32>>>::rem",
    "hash": "51762653943100810959852882831956148615"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u32> as ops::arith::Rem>::rem",
    "hash": "1172835163236710277413517403492857284054"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u32> as ops::arith::Sub<num::wrapping::Wrapping<u32>>>::sub",
    "hash": "68599200236256635992151141747177129706"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u32> as ops::arith::Sub>::sub",
    "hash": "1450070824972839123316880792049245925929"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u32> as ops::bit::BitAnd<num::wrapping::Wrapping<u32>>>::bitand",
    "hash": "43692817155000169738390645447702786401"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u32> as ops::bit::BitAnd>::bitand",
    "hash": "22617501378428499498330302991521485769"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u32> as ops::bit::BitOr<num::wrapping::Wrapping<u32>>>::bitor",
    "hash": "497868304850633540816067494971654015050"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u32> as ops::bit::BitOr>::bitor",
    "hash": "1835422608541714220515667358500763033174"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u32> as ops::bit::BitXor<num::wrapping::Wrapping<u32>>>::bitxor",
    "hash": "127013362244296240721701309819008268826"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u32> as ops::bit::BitXor>::bitxor",
    "hash": "23879322274814695658053412382986639462"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u32> as ops::bit::Not>::not",
    "hash": "42402464720640900987856151360815494191"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u32> as ops::bit::Shl<&usize>>::shl",
    "hash": "4964974440707513804861902598735968773"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u32> as ops::bit::Shl<usize>>::shl",
    "hash": "129057739248385077137998699435081978991"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u32> as ops::bit::Shr<&usize>>::shr",
    "hash": "1147424851513617531411170858537033541303"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u32> as ops::bit::Shr<usize>>::shr",
    "hash": "335253145466664554916373680077127788613"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u64> as ops::arith::Add<num::wrapping::Wrapping<u64>>>::add",
    "hash": "54614865605121710829000612514990737968"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u64> as ops::arith::Add>::add",
    "hash": "1559855532116338281513259755707499734759"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u64> as ops::arith::Div<num::wrapping::Wrapping<u64>>>::div",
    "hash": "7061904758275001172842257399470832171"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u64> as ops::arith::Div>::div",
    "hash": "540333739871793937510356645683123752667"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u64> as ops::arith::Mul<num::wrapping::Wrapping<u64>>>::mul",
    "hash": "697489081932654195118244550380322287629"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u64> as ops::arith::Mul>::mul",
    "hash": "85979393907103017575938145511167469247"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u64> as ops::arith::Neg>::neg",
    "hash": "1673033241464049935913609803903402435654"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u64> as ops::arith::Rem<num::wrapping::Wrapping<u64>>>::rem",
    "hash": "144939569694606427337936810390879390777"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u64> as ops::arith::Rem>::rem",
    "hash": "8800793187528007977870680181559627433"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u64> as ops::arith::Sub<num::wrapping::Wrapping<u64>>>::sub",
    "hash": "108072832365065864612309078755898670784"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u64> as ops::arith::Sub>::sub",
    "hash": "268941286947531890017277256404703728460"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u64> as ops::bit::BitAnd<num::wrapping::Wrapping<u64>>>::bitand",
    "hash": "35418406053815257204357004220395590615"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u64> as ops::bit::BitAnd>::bitand",
    "hash": "337496980769468348517848525702778276439"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u64> as ops::bit::BitOr<num::wrapping::Wrapping<u64>>>::bitor",
    "hash": "1710057128983311039116875268204059796447"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u64> as ops::bit::BitOr>::bitor",
    "hash": "1536786289453084152516749566643984061282"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u64> as ops::bit::BitXor<num::wrapping::Wrapping<u64>>>::bitxor",
    "hash": "1467319598501889705814822950722204047820"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u64> as ops::bit::BitXor>::bitxor",
    "hash": "64330954768917337576358091999359636339"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u64> as ops::bit::Not>::not",
    "hash": "521628405895454644616706632206262836166"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u64> as ops::bit::Shl<&usize>>::shl",
    "hash": "629588765543336923311871621400842022422"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u64> as ops::bit::Shl<usize>>::shl",
    "hash": "37696180534275890434743053836685381735"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u64> as ops::bit::Shr<&usize>>::shr",
    "hash": "698413364297164969413982781656771147445"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u64> as ops::bit::Shr<usize>>::shr",
    "hash": "1648622873949290900310106675649010186371"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u8> as ops::arith::Add<num::wrapping::Wrapping<u8>>>::add",
    "hash": "494007427437345135413853030088926914440"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u8> as ops::arith::Add>::add",
    "hash": "1571022572104631925818293370163406150184"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u8> as ops::arith::Div<num::wrapping::Wrapping<u8>>>::div",
    "hash": "1736866810706004860715570377985851958970"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u8> as ops::arith::Div>::div",
    "hash": "16459490923371933405815541532809449615"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u8> as ops::arith::Mul<num::wrapping::Wrapping<u8>>>::mul",
    "hash": "77606740948764059557343849701463863895"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u8> as ops::arith::Mul>::mul",
    "hash": "1812914585300585869018285501039664996581"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u8> as ops::arith::Neg>::neg",
    "hash": "182397862098028917386501316778829229943"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u8> as ops::arith::Rem<num::wrapping::Wrapping<u8>>>::rem",
    "hash": "6568106754937706636429207723187502364"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u8> as ops::arith::Rem>::rem",
    "hash": "46358213950334438629679352944178286892"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u8> as ops::arith::Sub<num::wrapping::Wrapping<u8>>>::sub",
    "hash": "1405086693822947726815441080194796378989"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u8> as ops::arith::Sub>::sub",
    "hash": "139663405096645331676316295937002225501"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u8> as ops::bit::BitAnd<num::wrapping::Wrapping<u8>>>::bitand",
    "hash": "48402160220454116296258682764308725085"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u8> as ops::bit::BitAnd>::bitand",
    "hash": "1153052198131139880113365281514638134683"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u8> as ops::bit::BitOr<num::wrapping::Wrapping<u8>>>::bitor",
    "hash": "172090173808613084984137121569555938043"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u8> as ops::bit::BitOr>::bitor",
    "hash": "1696161332617467543216022189685693107886"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u8> as ops::bit::BitXor<num::wrapping::Wrapping<u8>>>::bitxor",
    "hash": "183148526910531296133049757297123601967"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u8> as ops::bit::BitXor>::bitxor",
    "hash": "128315667351902305653196313105255610500"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u8> as ops::bit::Not>::not",
    "hash": "474185802253909917912578566299204832810"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u8> as ops::bit::Shl<&usize>>::shl",
    "hash": "66516674291564437245511157179031685315"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u8> as ops::bit::Shl<usize>>::shl",
    "hash": "143256579642905737904412842311004270767"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u8> as ops::bit::Shr<&usize>>::shr",
    "hash": "155859915908592039619653301696238806765"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u8> as ops::bit::Shr<usize>>::shr",
    "hash": "161178888601236930822799764643058077502"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<usize> as ops::arith::Add<num::wrapping::Wrapping<usize>>>::add",
    "hash": "14937950923794208671606343375715957217"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<usize> as ops::arith::Add>::add",
    "hash": "78911706723147857515063101880512879234"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<usize> as ops::arith::Div<num::wrapping::Wrapping<usize>>>::div",
    "hash": "43084234408805585843483075005289484565"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<usize> as ops::arith::Div>::div",
    "hash": "10118749306819123353979315460357324415"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<usize> as ops::arith::Mul<num::wrapping::Wrapping<usize>>>::mul",
    "hash": "105756683849732090092877624228578866524"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<usize> as ops::arith::Mul>::mul",
    "hash": "982285562681751725513427339245663122421"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<usize> as ops::arith::Neg>::neg",
    "hash": "1380060253580381973717223868639994563151"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<usize> as ops::arith::Rem<num::wrapping::Wrapping<usize>>>::rem",
    "hash": "1560414602269194500611150643327179356059"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<usize> as ops::arith::Rem>::rem",
    "hash": "1275049780110690171417319215876069922413"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<usize> as ops::arith::Sub<num::wrapping::Wrapping<usize>>>::sub",
    "hash": "1390744579239721570016777280161700749052"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<usize> as ops::arith::Sub>::sub",
    "hash": "1206224602617627604815844035544875872464"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<usize> as ops::bit::BitAnd<num::wrapping::Wrapping<usize>>>::bitand",
    "hash": "117667712942413883091995093098135045614"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<usize> as ops::bit::BitAnd>::bitand",
    "hash": "234950762874715555012138936638895825684"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<usize> as ops::bit::BitOr<num::wrapping::Wrapping<usize>>>::bitor",
    "hash": "142786609084270181825665985701272456793"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<usize> as ops::bit::BitOr>::bitor",
    "hash": "58949521386964026377698237142003590373"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<usize> as ops::bit::BitXor<num::wrapping::Wrapping<usize>>>::bitxor",
    "hash": "113111210833975851245630542895552951001"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<usize> as ops::bit::BitXor>::bitxor",
    "hash": "26747083385848703411116161719043579266"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<usize> as ops::bit::Not>::not",
    "hash": "453297136283542473812903433912628693838"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<usize> as ops::bit::Shl<&usize>>::shl",
    "hash": "67858145841009592616629225126294418239"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<usize> as ops::bit::Shl<usize>>::shl",
    "hash": "437867671280763187112758374441242878462"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<usize> as ops::bit::Shr<&usize>>::shr",
    "hash": "529511192075213768113986691971460935273"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<usize> as ops::bit::Shr<usize>>::shr",
    "hash": "1180601145023747539317739495548133393445"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u128 as ops::arith::Add<u128>>::add",
    "hash": "82734289528069015946241299902781950967"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u128 as ops::arith::Add>::add",
    "hash": "1368059339996922269516383221951176464650"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u128 as ops::arith::Div<u128>>::div",
    "hash": "143889520242320860682950811525154242931"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u128 as ops::arith::Div>::div",
    "hash": "154224520866116098196881006847342709094"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u128 as ops::arith::Mul<u128>>::mul",
    "hash": "966455139349630206617809733168595499219"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u128 as ops::arith::Mul>::mul",
    "hash": "68920973388731666942997543632565614305"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u128 as ops::arith::Rem<u128>>::rem",
    "hash": "7491605404170295710719792318678329537"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u128 as ops::arith::Rem>::rem",
    "hash": "159375071383441195297415822979062454818"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u128 as ops::arith::Sub<u128>>::sub",
    "hash": "764907984152003495213282169282664666554"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u128 as ops::arith::Sub>::sub",
    "hash": "1541735454483826441318414389891766703234"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u128 as ops::bit::BitAnd<u128>>::bitand",
    "hash": "72042370228857880082204987048680775813"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u128 as ops::bit::BitAnd>::bitand",
    "hash": "683370716743291462810989997890900158166"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u128 as ops::bit::BitOr<u128>>::bitor",
    "hash": "69616708302925090591334088276208524798"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u128 as ops::bit::BitOr>::bitor",
    "hash": "665284573206974720113768018552587069457"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u128 as ops::bit::BitXor<u128>>::bitxor",
    "hash": "1748301014000791495413147333225170889131"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u128 as ops::bit::BitXor>::bitxor",
    "hash": "111751806292072521412030115615561054527"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u128 as ops::bit::Not>::not",
    "hash": "681608784955501143212203566472353285681"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u128 as ops::bit::Shl<&i128>>::shl",
    "hash": "1383838447537442305010735453570940955285"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u128 as ops::bit::Shl<&i16>>::shl",
    "hash": "812855686067608330112140278545798526427"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u128 as ops::bit::Shl<&i32>>::shl",
    "hash": "161317627005043064062474257111056368241"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u128 as ops::bit::Shl<&i64>>::shl",
    "hash": "1535708111194630479016412538119392488748"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u128 as ops::bit::Shl<&i8>>::shl",
    "hash": "113612541489429377736169590792189030583"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u128 as ops::bit::Shl<&isize>>::shl",
    "hash": "224035172991005876917295717183426307970"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u128 as ops::bit::Shl<&u16>>::shl",
    "hash": "70832947111651877458616953835996337882"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u128 as ops::bit::Shl<&u32>>::shl",
    "hash": "421414067678281292114814431009408180619"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u128 as ops::bit::Shl<&u64>>::shl",
    "hash": "95964462714697587516719348334908895808"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u128 as ops::bit::Shl<&u8>>::shl",
    "hash": "109016110155464120804146263403438400037"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u128 as ops::bit::Shl<&usize>>::shl",
    "hash": "91374018996362229974363441910324554648"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u128 as ops::bit::Shl<i128>>::shl",
    "hash": "78384068952255431158019129011019313038"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u128 as ops::bit::Shl<i16>>::shl",
    "hash": "504712935870273724313458617529713040151"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u128 as ops::bit::Shl<i32>>::shl",
    "hash": "9745104471783750877992604021747670688"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u128 as ops::bit::Shl<i64>>::shl",
    "hash": "141625411705578644727744460002315168446"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u128 as ops::bit::Shl<i8>>::shl",
    "hash": "22713506251996639745281381825434888793"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u128 as ops::bit::Shl<isize>>::shl",
    "hash": "64828728208674603499278986796512873344"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u128 as ops::bit::Shl<u128>>::shl",
    "hash": "37622619798633598901960990220522616889"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u128 as ops::bit::Shl<u16>>::shl",
    "hash": "16665772108046481645316075411768223923"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u128 as ops::bit::Shl<u32>>::shl",
    "hash": "98456495501599739843830573223949213162"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u128 as ops::bit::Shl<u64>>::shl",
    "hash": "151983224674726294621018330395106292134"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u128 as ops::bit::Shl<u8>>::shl",
    "hash": "1579671952910543839015869904897729229399"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u128 as ops::bit::Shl<usize>>::shl",
    "hash": "180025402500771996494538326177614578090"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u128 as ops::bit::Shl>::shl",
    "hash": "359510708595711890610749657903354018373"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u128 as ops::bit::Shr<&i128>>::shr",
    "hash": "1268971495478769475110992220113742873578"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u128 as ops::bit::Shr<&i16>>::shr",
    "hash": "23676456680405944511706316861258050313"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u128 as ops::bit::Shr<&i32>>::shr",
    "hash": "499539540589652569913068138084443103083"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u128 as ops::bit::Shr<&i64>>::shr",
    "hash": "671575998613098201316863522077038773168"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u128 as ops::bit::Shr<&i8>>::shr",
    "hash": "102124771600598323431705094097050200719"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u128 as ops::bit::Shr<&isize>>::shr",
    "hash": "858187367227578784112466828408092809387"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u128 as ops::bit::Shr<&u16>>::shr",
    "hash": "1690288693907005049014030550368691185630"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u128 as ops::bit::Shr<&u32>>::shr",
    "hash": "180500923859564745766439849418313775971"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u128 as ops::bit::Shr<&u64>>::shr",
    "hash": "754277052318271730712889864174736194383"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u128 as ops::bit::Shr<&u8>>::shr",
    "hash": "9962752784120610022973566235968468935"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u128 as ops::bit::Shr<&usize>>::shr",
    "hash": "86037432259685145136747983972520447342"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u128 as ops::bit::Shr<i128>>::shr",
    "hash": "182843058101103873686335253686833033106"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u128 as ops::bit::Shr<i16>>::shr",
    "hash": "149904660080892647857152968684749971264"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u128 as ops::bit::Shr<i32>>::shr",
    "hash": "800764444734789663112771277903617792346"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u128 as ops::bit::Shr<i64>>::shr",
    "hash": "164625254313855943761504425919020050028"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u128 as ops::bit::Shr<i8>>::shr",
    "hash": "111174098869301780259849118679767270272"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u128 as ops::bit::Shr<isize>>::shr",
    "hash": "1009201096279857918714151075436356599503"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u128 as ops::bit::Shr<u128>>::shr",
    "hash": "88315783651751419829567145356880536610"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u128 as ops::bit::Shr<u16>>::shr",
    "hash": "168338404046575953569808219814018537122"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u128 as ops::bit::Shr<u32>>::shr",
    "hash": "16394511495261017352901563062815623849"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u128 as ops::bit::Shr<u64>>::shr",
    "hash": "1157815810949274669413693965595826470553"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u128 as ops::bit::Shr<u8>>::shr",
    "hash": "141382694539226346279921384392444198945"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u128 as ops::bit::Shr<usize>>::shr",
    "hash": "36863596492670592516764678867849963217"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u128 as ops::bit::Shr>::shr",
    "hash": "62881541392075144188407098580208763623"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u16 as ops::arith::Add<u16>>::add",
    "hash": "1835420921884104177112425740248525514083"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u16 as ops::arith::Add>::add",
    "hash": "854393268147535383617943453828889067287"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u16 as ops::arith::Div<u16>>::div",
    "hash": "536711884552490331618443737258406186560"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u16 as ops::arith::Div>::div",
    "hash": "129000606728654663938268142517513076476"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u16 as ops::arith::Mul<u16>>::mul",
    "hash": "989053416161586767013334241812553290728"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u16 as ops::arith::Mul>::mul",
    "hash": "74623112439521002519319573179971326294"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u16 as ops::arith::Rem<u16>>::rem",
    "hash": "120950157105850725604304819023281570006"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u16 as ops::arith::Rem>::rem",
    "hash": "8486985267066988062413450538893414441"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u16 as ops::arith::Sub<u16>>::sub",
    "hash": "145946463077731572542504300330154248862"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u16 as ops::arith::Sub>::sub",
    "hash": "422127666090329670614413205521659149091"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u16 as ops::bit::BitAnd<u16>>::bitand",
    "hash": "28414425187680394093458461897954469200"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u16 as ops::bit::BitAnd>::bitand",
    "hash": "121524937280540128164959926802363578607"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u16 as ops::bit::BitOr<u16>>::bitor",
    "hash": "39338034002717608314910940678351809235"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u16 as ops::bit::BitOr>::bitor",
    "hash": "4289130445703438177217687706258890406"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u16 as ops::bit::BitXor<u16>>::bitxor",
    "hash": "1731697903032050630518315740049853844528"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u16 as ops::bit::BitXor>::bitxor",
    "hash": "1767201022648020183114809789568916482085"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u16 as ops::bit::Not>::not",
    "hash": "96417808971026608282239739428832315798"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u16 as ops::bit::Shl<&i128>>::shl",
    "hash": "7995408941192344354877368047685398519"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u16 as ops::bit::Shl<&i16>>::shl",
    "hash": "1834925674940870281112146547967669934955"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u16 as ops::bit::Shl<&i32>>::shl",
    "hash": "1573614315813243355817868280265789653232"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u16 as ops::bit::Shl<&i64>>::shl",
    "hash": "1258764233097044960515326816405122252063"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u16 as ops::bit::Shl<&i8>>::shl",
    "hash": "1595776478587335463517491734888862852837"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u16 as ops::bit::Shl<&isize>>::shl",
    "hash": "1601269604756060124617904577508186383590"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u16 as ops::bit::Shl<&u128>>::shl",
    "hash": "90662981311700309966485334649902662532"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u16 as ops::bit::Shl<&u32>>::shl",
    "hash": "4308804393010082158602271103852402907"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u16 as ops::bit::Shl<&u64>>::shl",
    "hash": "1218284163631580538215043015140815834892"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u16 as ops::bit::Shl<&u8>>::shl",
    "hash": "87101426554801543489182844591286342527"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u16 as ops::bit::Shl<&usize>>::shl",
    "hash": "1325675380536601859614629696713499063309"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u16 as ops::bit::Shl<i128>>::shl",
    "hash": "91799888983171300924686745092589778074"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u16 as ops::bit::Shl<i16>>::shl",
    "hash": "418039225002329712011730572128502790703"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u16 as ops::bit::Shl<i32>>::shl",
    "hash": "1080747387910652780414162954965442216726"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u16 as ops::bit::Shl<i64>>::shl",
    "hash": "101663081541908529639180572720987025420"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u16 as ops::bit::Shl<i8>>::shl",
    "hash": "1366474649405984273317013508446592138825"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u16 as ops::bit::Shl<isize>>::shl",
    "hash": "145646281761597831358796528572710586238"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u16 as ops::bit::Shl<u128>>::shl",
    "hash": "156923637451523036243161054092372522215"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u16 as ops::bit::Shl<u16>>::shl",
    "hash": "490048590875100880711421231794694765819"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u16 as ops::bit::Shl<u32>>::shl",
    "hash": "675756367378097154713245812251213474365"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u16 as ops::bit::Shl<u64>>::shl",
    "hash": "307185838710442314415689367474766632552"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u16 as ops::bit::Shl<u8>>::shl",
    "hash": "51031553588582848747934970876185896414"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u16 as ops::bit::Shl<usize>>::shl",
    "hash": "975850444747540803112152972660283696626"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u16 as ops::bit::Shl>::shl",
    "hash": "549248893738290294217666256693611924923"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u16 as ops::bit::Shr<&i128>>::shr",
    "hash": "191306001583202435213210254586515883296"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u16 as ops::bit::Shr<&i16>>::shr",
    "hash": "877201431944490009316645810317147331821"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u16 as ops::bit::Shr<&i32>>::shr",
    "hash": "1649791918434528767415321586561857014090"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u16 as ops::bit::Shr<&i64>>::shr",
    "hash": "399622283597245232715017686358165565501"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u16 as ops::bit::Shr<&i8>>::shr",
    "hash": "1295166367773191509013793764321921013663"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u16 as ops::bit::Shr<&isize>>::shr",
    "hash": "118039410179122607714956437970451739777"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u16 as ops::bit::Shr<&u128>>::shr",
    "hash": "14471369891961002232624947063383073714"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u16 as ops::bit::Shr<&u32>>::shr",
    "hash": "737577474724144174311811767510484295451"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u16 as ops::bit::Shr<&u64>>::shr",
    "hash": "1596575575438337919576786536699965625"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u16 as ops::bit::Shr<&u8>>::shr",
    "hash": "1295496017730614156012758731413825724206"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u16 as ops::bit::Shr<&usize>>::shr",
    "hash": "13116772915822434373377540423670336421"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u16 as ops::bit::Shr<i128>>::shr",
    "hash": "350341359213965076115808997973322023271"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u16 as ops::bit::Shr<i16>>::shr",
    "hash": "180446435546744298735693207876089495874"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u16 as ops::bit::Shr<i32>>::shr",
    "hash": "46389004382702130517781892181185613844"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u16 as ops::bit::Shr<i64>>::shr",
    "hash": "12114654754382925694828908790977539023"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u16 as ops::bit::Shr<i8>>::shr",
    "hash": "72161452216123227567440341112937928182"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u16 as ops::bit::Shr<isize>>::shr",
    "hash": "148387799871592359564586749205630334471"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u16 as ops::bit::Shr<u128>>::shr",
    "hash": "1764910780602210211417130894600372355795"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u16 as ops::bit::Shr<u16>>::shr",
    "hash": "1249845617996916658315251278610356255610"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u16 as ops::bit::Shr<u32>>::shr",
    "hash": "718434215564575757311682364526897242381"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u16 as ops::bit::Shr<u64>>::shr",
    "hash": "60488211596653991621893929147264260297"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u16 as ops::bit::Shr<u8>>::shr",
    "hash": "31353857871106438228633803967821801532"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u16 as ops::bit::Shr<usize>>::shr",
    "hash": "299160801020215661715408545222574600170"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u16 as ops::bit::Shr>::shr",
    "hash": "91786511708047246613840566357398677365"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u32 as ops::arith::Add<u32>>::add",
    "hash": "70033593155496069745464701093641887481"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u32 as ops::arith::Add>::add",
    "hash": "170830447827917427677449373901740278907"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u32 as ops::arith::Div<u32>>::div",
    "hash": "53095409267712816454188946367039791363"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u32 as ops::arith::Div>::div",
    "hash": "1015960272468883677912220571694042476548"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u32 as ops::arith::Mul<u32>>::mul",
    "hash": "1098889098768841981316351181843013458697"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u32 as ops::arith::Mul>::mul",
    "hash": "616685395068277821916778085871378598797"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u32 as ops::arith::Rem<u32>>::rem",
    "hash": "20855797299675449403802801117539973982"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u32 as ops::arith::Rem>::rem",
    "hash": "59677023194345341667743303935118870654"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u32 as ops::arith::Sub<u32>>::sub",
    "hash": "38094506305940337238743672236470423966"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u32 as ops::arith::Sub>::sub",
    "hash": "1462954606212807212217235099144943176932"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u32 as ops::bit::BitAnd<u32>>::bitand",
    "hash": "121380644833737710514368909981030146508"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u32 as ops::bit::BitAnd>::bitand",
    "hash": "115957689722409970337153998760788133185"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u32 as ops::bit::BitOr<u32>>::bitor",
    "hash": "1284196093881024676111334680007446719194"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u32 as ops::bit::BitOr>::bitor",
    "hash": "75546471028219167855477290584204466696"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u32 as ops::bit::BitXor<u32>>::bitxor",
    "hash": "97644969783204403851916368727531590129"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u32 as ops::bit::BitXor>::bitxor",
    "hash": "663639709235165461813472821009456489091"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u32 as ops::bit::Not>::not",
    "hash": "1383959140131906656615060511976522317964"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u32 as ops::bit::Shl<&i128>>::shl",
    "hash": "146374138756862017744849736918010715151"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u32 as ops::bit::Shl<&i16>>::shl",
    "hash": "181109855225366901946866782147185760443"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u32 as ops::bit::Shl<&i32>>::shl",
    "hash": "128281533429373501379166381824815392303"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u32 as ops::bit::Shl<&i64>>::shl",
    "hash": "9506709974375741069915375641211465750"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u32 as ops::bit::Shl<&i8>>::shl",
    "hash": "809050537109644739515114230148564489158"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u32 as ops::bit::Shl<&isize>>::shl",
    "hash": "1205532712432762379811393051208445392366"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u32 as ops::bit::Shl<&u128>>::shl",
    "hash": "148102501714327305883940155995580064861"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u32 as ops::bit::Shl<&u16>>::shl",
    "hash": "993890104083784378212155026106996844421"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u32 as ops::bit::Shl<&u64>>::shl",
    "hash": "11146732325445421615566140130232455136"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u32 as ops::bit::Shl<&u8>>::shl",
    "hash": "132569470270946891784342049169597110899"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u32 as ops::bit::Shl<&usize>>::shl",
    "hash": "978105688280375118410847206641190867809"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u32 as ops::bit::Shl<i128>>::shl",
    "hash": "81836041276434679284079101710210543"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u32 as ops::bit::Shl<i16>>::shl",
    "hash": "911538807718776080712918237551443621154"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u32 as ops::bit::Shl<i32>>::shl",
    "hash": "1628502955774075617511388673319780196973"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u32 as ops::bit::Shl<i64>>::shl",
    "hash": "1395952955862927940115824120555965108850"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u32 as ops::bit::Shl<i8>>::shl",
    "hash": "176047591529791085979996120051221645491"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u32 as ops::bit::Shl<isize>>::shl",
    "hash": "130060858147609046683146381979893154815"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u32 as ops::bit::Shl<u128>>::shl",
    "hash": "108028586501389279578422759217348189108"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u32 as ops::bit::Shl<u16>>::shl",
    "hash": "25631447140056778005362683390659865726"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u32 as ops::bit::Shl<u32>>::shl",
    "hash": "730177359315579413916735956712330786496"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u32 as ops::bit::Shl<u64>>::shl",
    "hash": "78238104454220130481083732159681871004"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u32 as ops::bit::Shl<u8>>::shl",
    "hash": "523011497796683558815494397292189019522"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u32 as ops::bit::Shl<usize>>::shl",
    "hash": "447441523798489484811356342486568148862"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u32 as ops::bit::Shl>::shl",
    "hash": "54493951937708927617206868308756405570"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u32 as ops::bit::Shr<&i128>>::shr",
    "hash": "1698377770618167965416719820886481538918"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u32 as ops::bit::Shr<&i16>>::shr",
    "hash": "89698611101096385275427436530976329534"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u32 as ops::bit::Shr<&i32>>::shr",
    "hash": "142666644228020542754721144426187428488"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u32 as ops::bit::Shr<&i64>>::shr",
    "hash": "64555615871626835035303724905092136152"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u32 as ops::bit::Shr<&i8>>::shr",
    "hash": "52019684766904830001491237913582610693"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u32 as ops::bit::Shr<&isize>>::shr",
    "hash": "60461314157618778511118417373112796502"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u32 as ops::bit::Shr<&u128>>::shr",
    "hash": "41132024835220750396484302390843187838"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u32 as ops::bit::Shr<&u16>>::shr",
    "hash": "1741562678782502701711979201696799855079"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u32 as ops::bit::Shr<&u64>>::shr",
    "hash": "129714383748372549711308383016963783590"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u32 as ops::bit::Shr<&u8>>::shr",
    "hash": "1514796187456769151515964114842351940219"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u32 as ops::bit::Shr<&usize>>::shr",
    "hash": "28519740618662261491105091017219635980"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u32 as ops::bit::Shr<i128>>::shr",
    "hash": "7878539720532759324282868372734073840"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u32 as ops::bit::Shr<i16>>::shr",
    "hash": "190814341904419707811854227983936596611"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u32 as ops::bit::Shr<i32>>::shr",
    "hash": "1626200938260846699314813988082562794103"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u32 as ops::bit::Shr<i64>>::shr",
    "hash": "134417798279392183087107644095888659481"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u32 as ops::bit::Shr<i8>>::shr",
    "hash": "1579628246061942818010625260209759259729"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u32 as ops::bit::Shr<isize>>::shr",
    "hash": "568159705419465246015155735623137904042"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u32 as ops::bit::Shr<u128>>::shr",
    "hash": "1390622520090582151112185714081741570075"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u32 as ops::bit::Shr<u16>>::shr",
    "hash": "104491237479629807345033888506441694180"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u32 as ops::bit::Shr<u32>>::shr",
    "hash": "1430066552310688710514899996387606455462"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u32 as ops::bit::Shr<u64>>::shr",
    "hash": "71715221213979494702058030179231274351"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u32 as ops::bit::Shr<u8>>::shr",
    "hash": "1400712727107429269414147608806897126948"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u32 as ops::bit::Shr<usize>>::shr",
    "hash": "175141703061118560018061335649812182895"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u32 as ops::bit::Shr>::shr",
    "hash": "497723569038909810014705728205113236734"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u64 as ops::arith::Add<u64>>::add",
    "hash": "33331557417589730831665925566843047445"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u64 as ops::arith::Add>::add",
    "hash": "163396781071348608202476441382261093085"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u64 as ops::arith::Div<u64>>::div",
    "hash": "119167913234071907523194001676895532562"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u64 as ops::arith::Div>::div",
    "hash": "843353982591817317317675648580757467787"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u64 as ops::arith::Mul<u64>>::mul",
    "hash": "4845573506098039582380911550567106485"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u64 as ops::arith::Mul>::mul",
    "hash": "1393336016143168210016281493527258672130"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u64 as ops::arith::Rem<u64>>::rem",
    "hash": "148870095657924744222372880002073267712"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u64 as ops::arith::Rem>::rem",
    "hash": "946931836166750526115701561906917756562"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u64 as ops::arith::Sub<u64>>::sub",
    "hash": "1192381740732418688411924246696390052940"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u64 as ops::arith::Sub>::sub",
    "hash": "1328451105441438441812507627496957310057"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u64 as ops::bit::BitAnd<u64>>::bitand",
    "hash": "1417238128284550428315535405162383146626"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u64 as ops::bit::BitAnd>::bitand",
    "hash": "210438382073689327710592734984828308071"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u64 as ops::bit::BitOr<u64>>::bitor",
    "hash": "167359529974750999498011573524808630288"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u64 as ops::bit::BitOr>::bitor",
    "hash": "47272795762849062126942129674253603224"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u64 as ops::bit::BitXor<u64>>::bitxor",
    "hash": "180762176507005435482755677247990752025"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u64 as ops::bit::BitXor>::bitxor",
    "hash": "9194986428990627099344386831027217925"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u64 as ops::bit::Not>::not",
    "hash": "134839891059554646644329350855584029273"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u64 as ops::bit::Shl<&i128>>::shl",
    "hash": "392512883733227984814850737253218949177"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u64 as ops::bit::Shl<&i16>>::shl",
    "hash": "5720714955307291654751503426165651324"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u64 as ops::bit::Shl<&i32>>::shl",
    "hash": "485259696259518091812399268265771105286"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u64 as ops::bit::Shl<&i64>>::shl",
    "hash": "124851964479508303817264777850527440109"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u64 as ops::bit::Shl<&i8>>::shl",
    "hash": "2007102255935635103841166089409607020"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u64 as ops::bit::Shl<&isize>>::shl",
    "hash": "133522788972975617394105804772949519616"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u64 as ops::bit::Shl<&u128>>::shl",
    "hash": "164216770921551971893002203663234409594"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u64 as ops::bit::Shl<&u16>>::shl",
    "hash": "287166772028845529511732115206921859362"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u64 as ops::bit::Shl<&u32>>::shl",
    "hash": "1013245883307078494113140807543187035457"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u64 as ops::bit::Shl<&u8>>::shl",
    "hash": "3304024049656499379006064702478054409"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u64 as ops::bit::Shl<&usize>>::shl",
    "hash": "110479146314355736751499313586796333306"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u64 as ops::bit::Shl<i128>>::shl",
    "hash": "1283703044380298346712833589551234261017"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u64 as ops::bit::Shl<i16>>::shl",
    "hash": "91850952202987791676529283414426512941"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u64 as ops::bit::Shl<i32>>::shl",
    "hash": "58168715859550718015570808253196545736"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u64 as ops::bit::Shl<i64>>::shl",
    "hash": "1179983254110602294917108525952407409113"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u64 as ops::bit::Shl<i8>>::shl",
    "hash": "155647100058842454993891115528276542290"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u64 as ops::bit::Shl<isize>>::shl",
    "hash": "261226803992134287113043386948000050725"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u64 as ops::bit::Shl<u128>>::shl",
    "hash": "180659691283896290357936636441738952877"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u64 as ops::bit::Shl<u16>>::shl",
    "hash": "72166017761654091721555158786185675818"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u64 as ops::bit::Shl<u32>>::shl",
    "hash": "76847114410597172833945562625664919551"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u64 as ops::bit::Shl<u64>>::shl",
    "hash": "152975890332242627558953263347430501741"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u64 as ops::bit::Shl<u8>>::shl",
    "hash": "1482628189736871723517657803520689486548"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u64 as ops::bit::Shl<usize>>::shl",
    "hash": "56268138362984901414944298399504017301"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u64 as ops::bit::Shl>::shl",
    "hash": "154660065264916810441095963143951388380"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u64 as ops::bit::Shr<&i128>>::shr",
    "hash": "205402991408139705718205586767490221362"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u64 as ops::bit::Shr<&i16>>::shr",
    "hash": "819787010396980161514942899709338810830"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u64 as ops::bit::Shr<&i32>>::shr",
    "hash": "8512283520214614348085068092153617517"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u64 as ops::bit::Shr<&i64>>::shr",
    "hash": "321332476169044990512545791426119738219"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u64 as ops::bit::Shr<&i8>>::shr",
    "hash": "130986878530520484566696100827089533258"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u64 as ops::bit::Shr<&isize>>::shr",
    "hash": "153025305532858390415742915257534817719"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u64 as ops::bit::Shr<&u128>>::shr",
    "hash": "57713145127437431721625740941632479232"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u64 as ops::bit::Shr<&u16>>::shr",
    "hash": "154791681661556504773838344770058487222"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u64 as ops::bit::Shr<&u32>>::shr",
    "hash": "120442369664465488355134028163785874627"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u64 as ops::bit::Shr<&u8>>::shr",
    "hash": "552287348467626204712967041130326335786"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u64 as ops::bit::Shr<&usize>>::shr",
    "hash": "773371809053715815314730386986008897298"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u64 as ops::bit::Shr<i128>>::shr",
    "hash": "3105185029816583918392421812159573279"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u64 as ops::bit::Shr<i16>>::shr",
    "hash": "1249446499640926627118346471018460461363"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u64 as ops::bit::Shr<i32>>::shr",
    "hash": "160777728834942820932616949996058515505"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u64 as ops::bit::Shr<i64>>::shr",
    "hash": "138077895583189014201455395585664810382"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u64 as ops::bit::Shr<i8>>::shr",
    "hash": "472230091183965213813073954855855482704"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u64 as ops::bit::Shr<isize>>::shr",
    "hash": "121723913311298650364878270836632675503"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u64 as ops::bit::Shr<u128>>::shr",
    "hash": "1277606360938721294313264922268395646154"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u64 as ops::bit::Shr<u16>>::shr",
    "hash": "85905883965308882365375870458772530485"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u64 as ops::bit::Shr<u32>>::shr",
    "hash": "119647381514428261754661648558031868813"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u64 as ops::bit::Shr<u64>>::shr",
    "hash": "1620306399243927810018154280291324733321"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u64 as ops::bit::Shr<u8>>::shr",
    "hash": "156464307264994646753075926382699830003"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u64 as ops::bit::Shr<usize>>::shr",
    "hash": "47480966937559420226726009486499305076"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u64 as ops::bit::Shr>::shr",
    "hash": "21414017961124087231251793075150855002"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u8 as ops::arith::Add<u8>>::add",
    "hash": "1450176940975280811511680647021413221950"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u8 as ops::arith::Add>::add",
    "hash": "12471820624900661671147457116964060412"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u8 as ops::arith::Div<u8>>::div",
    "hash": "729813184486935198012310578133778617459"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u8 as ops::arith::Div>::div",
    "hash": "11429862701388016006108916303590598864"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u8 as ops::arith::Mul<u8>>::mul",
    "hash": "113570411688688540853338733271621808334"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u8 as ops::arith::Mul>::mul",
    "hash": "94825364841709794043216918839895431614"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u8 as ops::arith::Rem<u8>>::rem",
    "hash": "63958408087734703714359412751594610133"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u8 as ops::arith::Rem>::rem",
    "hash": "31804740076636853222437739766941083043"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u8 as ops::arith::Sub<u8>>::sub",
    "hash": "54270614149678762282871058595133279337"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u8 as ops::arith::Sub>::sub",
    "hash": "972865376722062256115991834903153644664"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u8 as ops::bit::BitAnd<u8>>::bitand",
    "hash": "1306599253137065923614281773446707915475"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u8 as ops::bit::BitAnd>::bitand",
    "hash": "58648221330900769177726510350052223191"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u8 as ops::bit::BitOr<u8>>::bitor",
    "hash": "654783384242718781110098426298919994956"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u8 as ops::bit::BitOr>::bitor",
    "hash": "44575442811320202886261647944902279214"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u8 as ops::bit::BitXor<u8>>::bitxor",
    "hash": "146063172940146169013544499503021589576"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u8 as ops::bit::BitXor>::bitxor",
    "hash": "44543816578077988163322341160714439621"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u8 as ops::bit::Not>::not",
    "hash": "45468103384529318562920457208506891147"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u8 as ops::bit::Shl<&i128>>::shl",
    "hash": "153548240768005530929286426227834809489"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u8 as ops::bit::Shl<&i16>>::shl",
    "hash": "134385329897832391781854079098601956214"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u8 as ops::bit::Shl<&i32>>::shl",
    "hash": "4109678121660482676460389992354965477"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u8 as ops::bit::Shl<&i64>>::shl",
    "hash": "39064081088966793910107516360345615995"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u8 as ops::bit::Shl<&i8>>::shl",
    "hash": "329696116232641918114711286783213805705"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u8 as ops::bit::Shl<&isize>>::shl",
    "hash": "151635826536299364972571268511224746375"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u8 as ops::bit::Shl<&u128>>::shl",
    "hash": "143360053359849916775436691202375538477"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u8 as ops::bit::Shl<&u16>>::shl",
    "hash": "56006661203730835244511408555593134498"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u8 as ops::bit::Shl<&u32>>::shl",
    "hash": "35775918316891594766704332212329313429"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u8 as ops::bit::Shl<&u64>>::shl",
    "hash": "1304709069431027470010486614661938867824"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u8 as ops::bit::Shl<&usize>>::shl",
    "hash": "94618361139796208341328266184379844179"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u8 as ops::bit::Shl<i128>>::shl",
    "hash": "1104124595083431481911170398706285170822"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u8 as ops::bit::Shl<i16>>::shl",
    "hash": "13346384547147083570243518556164599482"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u8 as ops::bit::Shl<i32>>::shl",
    "hash": "14541031787190459911501526392193115923"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u8 as ops::bit::Shl<i64>>::shl",
    "hash": "3307494033759957709278742393229386408"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u8 as ops::bit::Shl<i8>>::shl",
    "hash": "1446550290865725360510559893727930152108"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u8 as ops::bit::Shl<isize>>::shl",
    "hash": "167985306724794424828882663233562312107"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u8 as ops::bit::Shl<u128>>::shl",
    "hash": "25878410218074916272037511531781236671"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u8 as ops::bit::Shl<u16>>::shl",
    "hash": "1603900275397604010712329210008593377308"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u8 as ops::bit::Shl<u32>>::shl",
    "hash": "69541779994415077251511490130632924585"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u8 as ops::bit::Shl<u64>>::shl",
    "hash": "1329800117021898110211157514542469643770"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u8 as ops::bit::Shl<u8>>::shl",
    "hash": "183499233831915322712413717449352584182"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u8 as ops::bit::Shl<usize>>::shl",
    "hash": "28549061408659462887791365415551441686"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u8 as ops::bit::Shl>::shl",
    "hash": "179812035835771431055884940179856957578"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u8 as ops::bit::Shr<&i128>>::shr",
    "hash": "1086751539164161270112538117861787675700"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u8 as ops::bit::Shr<&i16>>::shr",
    "hash": "180823366389138230618273464646893354858"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u8 as ops::bit::Shr<&i32>>::shr",
    "hash": "402351214406065676813072336990139334028"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u8 as ops::bit::Shr<&i64>>::shr",
    "hash": "139454997083324991669514274264384138913"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u8 as ops::bit::Shr<&i8>>::shr",
    "hash": "1396530612580186138917536057671385344171"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u8 as ops::bit::Shr<&isize>>::shr",
    "hash": "99216345946045910903583198604272663127"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u8 as ops::bit::Shr<&u128>>::shr",
    "hash": "331018506418819924616595722956472962057"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u8 as ops::bit::Shr<&u16>>::shr",
    "hash": "1389463599383797700313166643744412375950"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u8 as ops::bit::Shr<&u32>>::shr",
    "hash": "1301839706036347398313849882351330338938"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u8 as ops::bit::Shr<&u64>>::shr",
    "hash": "79061370817141484591843639450871823445"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u8 as ops::bit::Shr<&usize>>::shr",
    "hash": "992498190890676082112343058439603788776"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u8 as ops::bit::Shr<i128>>::shr",
    "hash": "67712302402622023405361259037015738955"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u8 as ops::bit::Shr<i16>>::shr",
    "hash": "87673204901337065404769075130844050175"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u8 as ops::bit::Shr<i32>>::shr",
    "hash": "37121642278878901037809655144147841312"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u8 as ops::bit::Shr<i64>>::shr",
    "hash": "5666322687630611280521739130823572097"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u8 as ops::bit::Shr<i8>>::shr",
    "hash": "455089624145437675613828691201846260307"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u8 as ops::bit::Shr<isize>>::shr",
    "hash": "62235739251903262028617766428131359133"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u8 as ops::bit::Shr<u128>>::shr",
    "hash": "727890128839327467413253373100370752123"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u8 as ops::bit::Shr<u16>>::shr",
    "hash": "92752772566448262146269129744376498197"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u8 as ops::bit::Shr<u32>>::shr",
    "hash": "93142941748049122786639886904668761"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u8 as ops::bit::Shr<u64>>::shr",
    "hash": "381482774784597994712745287159475711626"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u8 as ops::bit::Shr<u8>>::shr",
    "hash": "452727797262814055517839071463497164798"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u8 as ops::bit::Shr<usize>>::shr",
    "hash": "1271401683466613494511639416050290091548"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u8 as ops::bit::Shr>::shr",
    "hash": "759480743252128386315526013362574129747"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&usize as ops::arith::Add<usize>>::add",
    "hash": "1825994194789046965112915513657718135589"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&usize as ops::arith::Add>::add",
    "hash": "11764961515515950298043216116330121006"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&usize as ops::arith::Div<usize>>::div",
    "hash": "7196002893950985818832164879412652068"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&usize as ops::arith::Div>::div",
    "hash": "1426887536633609091213852998379949011942"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&usize as ops::arith::Mul<usize>>::mul",
    "hash": "24852367499495304485153491900127988151"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&usize as ops::arith::Mul>::mul",
    "hash": "150163639109559689083492277857504462937"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&usize as ops::arith::Rem<usize>>::rem",
    "hash": "1541474629289746765612034722308496514680"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&usize as ops::arith::Rem>::rem",
    "hash": "21020527073179568516155983604511600101"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&usize as ops::arith::Sub<usize>>::sub",
    "hash": "158227952296256296186620655005473701328"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&usize as ops::arith::Sub>::sub",
    "hash": "859378723764991095811195085555427104407"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&usize as ops::bit::BitAnd<usize>>::bitand",
    "hash": "118749287005435127227658704651739947094"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&usize as ops::bit::BitAnd>::bitand",
    "hash": "148883724030399851413808810259250641234"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&usize as ops::bit::BitOr<usize>>::bitor",
    "hash": "81986267404833965714455535680918903739"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&usize as ops::bit::BitOr>::bitor",
    "hash": "666767564672854709717306393187817062877"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&usize as ops::bit::BitXor<usize>>::bitxor",
    "hash": "6674558348999862231483559443469522742"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&usize as ops::bit::BitXor>::bitxor",
    "hash": "1269977774979252352011418047624393463171"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&usize as ops::bit::Not>::not",
    "hash": "83201146647483598085497875820318842215"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&usize as ops::bit::Shl<&i128>>::shl",
    "hash": "147288205365117239468566585456857289141"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&usize as ops::bit::Shl<&i16>>::shl",
    "hash": "71099005334795953568709972140229227279"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&usize as ops::bit::Shl<&i32>>::shl",
    "hash": "142843970058905482911004701791952471659"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&usize as ops::bit::Shl<&i64>>::shl",
    "hash": "5314336281881298321356527315565027304"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&usize as ops::bit::Shl<&i8>>::shl",
    "hash": "57954553351533777269888549588770122620"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&usize as ops::bit::Shl<&isize>>::shl",
    "hash": "139517171560462546815726851417373476662"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&usize as ops::bit::Shl<&u128>>::shl",
    "hash": "1813161645759317828014804187485650405259"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&usize as ops::bit::Shl<&u16>>::shl",
    "hash": "1780388358200541992611979601606498130513"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&usize as ops::bit::Shl<&u32>>::shl",
    "hash": "157933251659659672709721216545672941513"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&usize as ops::bit::Shl<&u64>>::shl",
    "hash": "24868738786821075531057654255874617425"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&usize as ops::bit::Shl<&u8>>::shl",
    "hash": "942728885585609359915553555454019576279"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&usize as ops::bit::Shl<i128>>::shl",
    "hash": "512988778594167032011666958124514951793"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&usize as ops::bit::Shl<i16>>::shl",
    "hash": "778303778570490043218309284195382574568"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&usize as ops::bit::Shl<i32>>::shl",
    "hash": "1516243086020496029366500688814148608"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&usize as ops::bit::Shl<i64>>::shl",
    "hash": "1330800396806147995711908328412182787940"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&usize as ops::bit::Shl<i8>>::shl",
    "hash": "128591827988940754931275790611828845238"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&usize as ops::bit::Shl<isize>>::shl",
    "hash": "157970885883590653318570597605293787961"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&usize as ops::bit::Shl<u128>>::shl",
    "hash": "135501402210930935413554316623283655927"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&usize as ops::bit::Shl<u16>>::shl",
    "hash": "63157261267604179314460573612548647777"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&usize as ops::bit::Shl<u32>>::shl",
    "hash": "810116896732251771513062968300394223031"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&usize as ops::bit::Shl<u64>>::shl",
    "hash": "113423777502842132173577369420688342136"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&usize as ops::bit::Shl<u8>>::shl",
    "hash": "45139398918120095354564024462999233284"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&usize as ops::bit::Shl<usize>>::shl",
    "hash": "852895959509117699814465021405787805318"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&usize as ops::bit::Shl>::shl",
    "hash": "133494807453391920515942712170532515783"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&usize as ops::bit::Shr<&i128>>::shr",
    "hash": "10620112275569371844131176430622996319"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&usize as ops::bit::Shr<&i16>>::shr",
    "hash": "1440085918663671409012704342399616065100"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&usize as ops::bit::Shr<&i32>>::shr",
    "hash": "208131555663274117013160730303715890405"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&usize as ops::bit::Shr<&i64>>::shr",
    "hash": "171030368808518374011836464064487007224"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&usize as ops::bit::Shr<&i8>>::shr",
    "hash": "8672799597825170546670241604552181911"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&usize as ops::bit::Shr<&isize>>::shr",
    "hash": "104034143376858478966575296192671381492"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&usize as ops::bit::Shr<&u128>>::shr",
    "hash": "54190114424512004836723622001702376168"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&usize as ops::bit::Shr<&u16>>::shr",
    "hash": "1056000977560548137016779702763053548396"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&usize as ops::bit::Shr<&u32>>::shr",
    "hash": "9347288501147751705685723772492277594"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&usize as ops::bit::Shr<&u64>>::shr",
    "hash": "1530880789751038105615014881971867508705"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&usize as ops::bit::Shr<&u8>>::shr",
    "hash": "128912470132151468404586954351526434798"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&usize as ops::bit::Shr<i128>>::shr",
    "hash": "1429031653702389293514314021692581369382"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&usize as ops::bit::Shr<i16>>::shr",
    "hash": "1530040105882327158712611874744302544494"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&usize as ops::bit::Shr<i32>>::shr",
    "hash": "646734427034679215515449877423961837466"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&usize as ops::bit::Shr<i64>>::shr",
    "hash": "769783741192906517615844839102417369854"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&usize as ops::bit::Shr<i8>>::shr",
    "hash": "49762848597465359201369343891127542787"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&usize as ops::bit::Shr<isize>>::shr",
    "hash": "1724782263971276776311210060619893643943"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&usize as ops::bit::Shr<u128>>::shr",
    "hash": "310258427275170955110538481433256442859"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&usize as ops::bit::Shr<u16>>::shr",
    "hash": "127264401621156307583600334584457354305"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&usize as ops::bit::Shr<u32>>::shr",
    "hash": "1315679867081711816318186438541219064694"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&usize as ops::bit::Shr<u64>>::shr",
    "hash": "1157752715478968414116495420031434210352"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&usize as ops::bit::Shr<u8>>::shr",
    "hash": "7004271595067559143494947600662922207"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&usize as ops::bit::Shr<usize>>::shr",
    "hash": "3744076839691443012386021938329124196"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&usize as ops::bit::Shr>::shr",
    "hash": "828755626651577801111656916872016381994"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<bool as ops::bit::BitAnd<&bool>>::bitand",
    "hash": "77668908298663733032226436761840213633"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<bool as ops::bit::BitAndAssign<&bool>>::bitand_assign",
    "hash": "104891665549736895492023087598938299512"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<bool as ops::bit::BitOr<&bool>>::bitor",
    "hash": "4991280812392628402231440048792398989"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<bool as ops::bit::BitOrAssign<&bool>>::bitor_assign",
    "hash": "33365749677149259034954781568303036706"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<bool as ops::bit::BitXor<&bool>>::bitxor",
    "hash": "792116821238867620014874936495311436284"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<bool as ops::bit::BitXorAssign<&bool>>::bitxor_assign",
    "hash": "1607849616613687371513559705966949369453"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<f128 as ops::arith::Add<&f128>>::add",
    "hash": "54934051275090074431975626844324756794"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<f128 as ops::arith::AddAssign<&f128>>::add_assign",
    "hash": "11602203155233726392998394425736614990"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<f128 as ops::arith::Div<&f128>>::div",
    "hash": "975528482471841736117778489735429144115"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<f128 as ops::arith::DivAssign<&f128>>::div_assign",
    "hash": "166467277260184652821185087423970392011"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<f128 as ops::arith::Mul<&f128>>::mul",
    "hash": "51961118673010123252905102547520105560"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<f128 as ops::arith::MulAssign<&f128>>::mul_assign",
    "hash": "177648775352790466857282330902098326909"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<f128 as ops::arith::Rem<&f128>>::rem",
    "hash": "19757719817578762717398958836643451837"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<f128 as ops::arith::RemAssign<&f128>>::rem_assign",
    "hash": "957474170912725518413132143458820831362"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<f128 as ops::arith::Sub<&f128>>::sub",
    "hash": "1348364691876949452613877452476035508691"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<f128 as ops::arith::SubAssign<&f128>>::sub_assign",
    "hash": "126666412888530529835259550563831469847"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<f16 as ops::arith::Add<&f16>>::add",
    "hash": "1161190888950183033110830281187001788031"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<f16 as ops::arith::AddAssign<&f16>>::add_assign",
    "hash": "157143843428663036861829184273538173337"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<f16 as ops::arith::Div<&f16>>::div",
    "hash": "934249694515085265816315365637378401053"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<f16 as ops::arith::DivAssign<&f16>>::div_assign",
    "hash": "1413403813696346971678012923298213001"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<f16 as ops::arith::Mul<&f16>>::mul",
    "hash": "995340285067628267115511312931057994319"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<f16 as ops::arith::MulAssign<&f16>>::mul_assign",
    "hash": "82683667931698202054204043329686619970"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<f16 as ops::arith::Rem<&f16>>::rem",
    "hash": "127877788550872661292757104981983933193"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<f16 as ops::arith::RemAssign<&f16>>::rem_assign",
    "hash": "352402199144305102717609094404420846880"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<f16 as ops::arith::Sub<&f16>>::sub",
    "hash": "687187487174757070815142979308465023824"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<f16 as ops::arith::SubAssign<&f16>>::sub_assign",
    "hash": "1229367076273572715311139873680393863320"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<f32 as ops::arith::Add<&f32>>::add",
    "hash": "329424281969913405916758665102423842131"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<f32 as ops::arith::AddAssign<&f32>>::add_assign",
    "hash": "131363467900616297419348330031436668199"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<f32 as ops::arith::Div<&f32>>::div",
    "hash": "929266892331746180713017364462744691238"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<f32 as ops::arith::DivAssign<&f32>>::div_assign",
    "hash": "131248800487678711334062678319753476316"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<f32 as ops::arith::Mul<&f32>>::mul",
    "hash": "1367938817600533635113575158565400069307"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<f32 as ops::arith::MulAssign<&f32>>::mul_assign",
    "hash": "1540295675351962027518019986324965433863"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<f32 as ops::arith::Rem<&f32>>::rem",
    "hash": "1007915103193673748917425066874075655597"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<f32 as ops::arith::RemAssign<&f32>>::rem_assign",
    "hash": "95570051789741164724735289754348429577"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<f32 as ops::arith::Sub<&f32>>::sub",
    "hash": "859643795356927077213741155956164834484"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<f32 as ops::arith::SubAssign<&f32>>::sub_assign",
    "hash": "159060448590142899303238721013977318234"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<f64 as ops::arith::Add<&f64>>::add",
    "hash": "982975655936520697612225030774426602124"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<f64 as ops::arith::AddAssign<&f64>>::add_assign",
    "hash": "237873795418536586910652161490088854130"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<f64 as ops::arith::Div<&f64>>::div",
    "hash": "1760085970258207219717735666414258675878"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<f64 as ops::arith::DivAssign<&f64>>::div_assign",
    "hash": "1481053180543240376012269137720404774662"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<f64 as ops::arith::Mul<&f64>>::mul",
    "hash": "977104548642875856713666272240759537002"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<f64 as ops::arith::MulAssign<&f64>>::mul_assign",
    "hash": "214442269685416045110218568479726725342"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<f64 as ops::arith::Rem<&f64>>::rem",
    "hash": "93138337462101792465687020776876836628"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<f64 as ops::arith::RemAssign<&f64>>::rem_assign",
    "hash": "165785437539010707763138994295724317441"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<f64 as ops::arith::Sub<&f64>>::sub",
    "hash": "95672016099363052333996466075731818699"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<f64 as ops::arith::SubAssign<&f64>>::sub_assign",
    "hash": "133870422498065270056320868414659826447"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i128 as ops::arith::Add<&i128>>::add",
    "hash": "114545824265515893441477454134551387687"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i128 as ops::arith::AddAssign<&i128>>::add_assign",
    "hash": "956283264113187028815210015242845610962"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i128 as ops::arith::Div<&i128>>::div",
    "hash": "36063902368621463004441055409419003834"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i128 as ops::arith::DivAssign<&i128>>::div_assign",
    "hash": "155385422469450611399216523358957400842"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i128 as ops::arith::Mul<&i128>>::mul",
    "hash": "180518380496321456878127964860767172180"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i128 as ops::arith::MulAssign<&i128>>::mul_assign",
    "hash": "59401595674447088412742890259598046731"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i128 as ops::arith::Rem<&i128>>::rem",
    "hash": "155964553619169456539998935044831778416"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i128 as ops::arith::RemAssign<&i128>>::rem_assign",
    "hash": "69135370191384571925807796551022445515"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i128 as ops::arith::Sub<&i128>>::sub",
    "hash": "106229787906788619977580510236797690028"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i128 as ops::arith::SubAssign<&i128>>::sub_assign",
    "hash": "1627850595307722218713124413167528173811"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i128 as ops::bit::BitAnd<&i128>>::bitand",
    "hash": "40715639933211699259288827888629152746"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i128 as ops::bit::BitAndAssign<&i128>>::bitand_assign",
    "hash": "1020890394448684713011071252795742064704"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i128 as ops::bit::BitOr<&i128>>::bitor",
    "hash": "48096658079868321673141173653884018252"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i128 as ops::bit::BitOrAssign<&i128>>::bitor_assign",
    "hash": "68492256087026216154864316457095158477"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i128 as ops::bit::BitXor<&i128>>::bitxor",
    "hash": "963422000192796097611290580678198235348"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i128 as ops::bit::BitXorAssign<&i128>>::bitxor_assign",
    "hash": "177702107941320258926209467485529619"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i128 as ops::bit::Shl<&i128>>::shl",
    "hash": "14984636461477266188440265038974301530"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i128 as ops::bit::Shl<&i16>>::shl",
    "hash": "38363939128698146082096633085543577539"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i128 as ops::bit::Shl<&i32>>::shl",
    "hash": "180411666635455910719929075137956955032"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i128 as ops::bit::Shl<&i64>>::shl",
    "hash": "645557200650174453317687769875771417124"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i128 as ops::bit::Shl<&i8>>::shl",
    "hash": "523514605086288913316987272932988850087"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i128 as ops::bit::Shl<&isize>>::shl",
    "hash": "1097932567737949965712378053217579935105"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i128 as ops::bit::Shl<&u128>>::shl",
    "hash": "1185026915721454471612871785102548678616"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i128 as ops::bit::Shl<&u16>>::shl",
    "hash": "948633227301788983210538087601756906052"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i128 as ops::bit::Shl<&u32>>::shl",
    "hash": "1686028144601267643011749997524873551522"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i128 as ops::bit::Shl<&u64>>::shl",
    "hash": "372967551347800167717648806682610375722"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i128 as ops::bit::Shl<&u8>>::shl",
    "hash": "1534637241572261189516801178574344306933"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i128 as ops::bit::Shl<&usize>>::shl",
    "hash": "589437227359416080210212725148866879623"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i128 as ops::bit::ShlAssign<&i128>>::shl_assign",
    "hash": "12016732080440119927804325324097186719"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i128 as ops::bit::ShlAssign<&i16>>::shl_assign",
    "hash": "51091453180274693021859208247308698525"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i128 as ops::bit::ShlAssign<&i32>>::shl_assign",
    "hash": "68953961646238988336547890813766502139"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i128 as ops::bit::ShlAssign<&i64>>::shl_assign",
    "hash": "1156740749869261836012661954770280866062"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i128 as ops::bit::ShlAssign<&i8>>::shl_assign",
    "hash": "130363757398169413217777220775438018045"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i128 as ops::bit::ShlAssign<&isize>>::shl_assign",
    "hash": "1712934276785262254115447643992005011039"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i128 as ops::bit::ShlAssign<&u128>>::shl_assign",
    "hash": "63342211296298726017511365152330790315"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i128 as ops::bit::ShlAssign<&u16>>::shl_assign",
    "hash": "6545742823933068843412682201554790533"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i128 as ops::bit::ShlAssign<&u32>>::shl_assign",
    "hash": "1013095564822238599211217371665081373590"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i128 as ops::bit::ShlAssign<&u64>>::shl_assign",
    "hash": "242390716004288941915964653990989610572"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i128 as ops::bit::ShlAssign<&u8>>::shl_assign",
    "hash": "32516930000178740958023128992315691364"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i128 as ops::bit::ShlAssign<&usize>>::shl_assign",
    "hash": "90011926086805283646151571464196755024"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i128 as ops::bit::Shr<&i128>>::shr",
    "hash": "95643957364873916919664391601064134628"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i128 as ops::bit::Shr<&i16>>::shr",
    "hash": "1391136281403195995713431738635356804707"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i128 as ops::bit::Shr<&i32>>::shr",
    "hash": "499623258836392825316413493620670456239"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i128 as ops::bit::Shr<&i64>>::shr",
    "hash": "137638669549053230995521032226802602806"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i128 as ops::bit::Shr<&i8>>::shr",
    "hash": "905613681680810037812282890866967902485"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i128 as ops::bit::Shr<&isize>>::shr",
    "hash": "1026009870420008420515722817828825939977"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i128 as ops::bit::Shr<&u128>>::shr",
    "hash": "101452276421029137691587614902986482014"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i128 as ops::bit::Shr<&u16>>::shr",
    "hash": "1063150746978699843816211863910114350607"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i128 as ops::bit::Shr<&u32>>::shr",
    "hash": "1755268987791934137011903313573554574115"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i128 as ops::bit::Shr<&u64>>::shr",
    "hash": "1584470964692854981414154229500287345841"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i128 as ops::bit::Shr<&u8>>::shr",
    "hash": "135538472958078713389023482022081887094"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i128 as ops::bit::Shr<&usize>>::shr",
    "hash": "1309578256761506046214518430026452043275"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i128 as ops::bit::ShrAssign<&i128>>::shr_assign",
    "hash": "264400900254326142111570371369040970119"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i128 as ops::bit::ShrAssign<&i16>>::shr_assign",
    "hash": "1372730432022910529013738743463356510180"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i128 as ops::bit::ShrAssign<&i32>>::shr_assign",
    "hash": "4978666306179714015054638506704997234"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i128 as ops::bit::ShrAssign<&i64>>::shr_assign",
    "hash": "1843975455763669003017474916492218810931"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i128 as ops::bit::ShrAssign<&i8>>::shr_assign",
    "hash": "812464472401606351013750930455218623276"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i128 as ops::bit::ShrAssign<&isize>>::shr_assign",
    "hash": "12437153188584918784419293342245205850"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i128 as ops::bit::ShrAssign<&u128>>::shr_assign",
    "hash": "49982104887316374235264225599159660351"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i128 as ops::bit::ShrAssign<&u16>>::shr_assign",
    "hash": "794390564665375616417098943499674261377"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i128 as ops::bit::ShrAssign<&u32>>::shr_assign",
    "hash": "1219714424906045362314531954717483215483"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i128 as ops::bit::ShrAssign<&u64>>::shr_assign",
    "hash": "146278415105455598314413270528357268155"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i128 as ops::bit::ShrAssign<&u8>>::shr_assign",
    "hash": "1306896208071433705010346024458158922369"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i128 as ops::bit::ShrAssign<&usize>>::shr_assign",
    "hash": "173007190119150701475488622458575148595"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i16 as ops::arith::Add<&i16>>::add",
    "hash": "14251242422510758811335459972154583914"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i16 as ops::arith::AddAssign<&i16>>::add_assign",
    "hash": "72234125394727902663803565187381189836"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i16 as ops::arith::Div<&i16>>::div",
    "hash": "114499226763559011639188581403912807334"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i16 as ops::arith::DivAssign<&i16>>::div_assign",
    "hash": "163559599963835616593932973160362105489"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i16 as ops::arith::Mul<&i16>>::mul",
    "hash": "97487264614903428162671787396524187767"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i16 as ops::arith::MulAssign<&i16>>::mul_assign",
    "hash": "63539331101969995475929152669840633019"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i16 as ops::arith::Rem<&i16>>::rem",
    "hash": "113612625298396876752855389508157183108"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i16 as ops::arith::RemAssign<&i16>>::rem_assign",
    "hash": "1359350094956498708817357378835298180127"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i16 as ops::arith::Sub<&i16>>::sub",
    "hash": "119130059356627178734846662510538257803"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i16 as ops::arith::SubAssign<&i16>>::sub_assign",
    "hash": "796374607085193852810269917864883179550"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i16 as ops::bit::BitAnd<&i16>>::bitand",
    "hash": "108322297613592287405553860062462743755"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i16 as ops::bit::BitAndAssign<&i16>>::bitand_assign",
    "hash": "1567250105646941888310606866848979228447"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i16 as ops::bit::BitOr<&i16>>::bitor",
    "hash": "96610512134135327528483954969271922269"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i16 as ops::bit::BitOrAssign<&i16>>::bitor_assign",
    "hash": "132006727085639250233256713332343642322"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i16 as ops::bit::BitXor<&i16>>::bitxor",
    "hash": "101731050079908242844831991158852401470"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i16 as ops::bit::BitXorAssign<&i16>>::bitxor_assign",
    "hash": "1199190101527718472112414671044868088982"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i16 as ops::bit::Shl<&i128>>::shl",
    "hash": "31307452919813496591092413034439950192"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i16 as ops::bit::Shl<&i16>>::shl",
    "hash": "1384173985703855952813119055071796904849"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i16 as ops::bit::Shl<&i32>>::shl",
    "hash": "1698458133116898626314659516313601287219"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i16 as ops::bit::Shl<&i64>>::shl",
    "hash": "1373443053241495869742077603452518609"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i16 as ops::bit::Shl<&i8>>::shl",
    "hash": "1518557881150521008218399264332731550555"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i16 as ops::bit::Shl<&isize>>::shl",
    "hash": "357316253993425046117210924619793983888"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i16 as ops::bit::Shl<&u128>>::shl",
    "hash": "1027579833019070856714952456010475973376"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i16 as ops::bit::Shl<&u16>>::shl",
    "hash": "444160916099086111211474143963003639754"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i16 as ops::bit::Shl<&u32>>::shl",
    "hash": "10576627950274670244154559934723857666"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i16 as ops::bit::Shl<&u64>>::shl",
    "hash": "189554748401514298414972670498934769951"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i16 as ops::bit::Shl<&u8>>::shl",
    "hash": "636665416502332632912097634263512023171"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i16 as ops::bit::Shl<&usize>>::shl",
    "hash": "56493005654322745286819025928677801004"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i16 as ops::bit::ShlAssign<&i128>>::shl_assign",
    "hash": "970365620802595577511201446451390503108"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i16 as ops::bit::ShlAssign<&i16>>::shl_assign",
    "hash": "695668567259598529412808111583573011650"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i16 as ops::bit::ShlAssign<&i32>>::shl_assign",
    "hash": "51801432399497451892486775464531960787"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i16 as ops::bit::ShlAssign<&i64>>::shl_assign",
    "hash": "40985610417604824396859420136166223104"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i16 as ops::bit::ShlAssign<&i8>>::shl_assign",
    "hash": "3284985056503405331803554172813897894"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i16 as ops::bit::ShlAssign<&isize>>::shl_assign",
    "hash": "603960992310404116813358658086228226529"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i16 as ops::bit::ShlAssign<&u128>>::shl_assign",
    "hash": "136815154097636041418968158590540558029"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i16 as ops::bit::ShlAssign<&u16>>::shl_assign",
    "hash": "1562754938202676304912496294384079725271"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i16 as ops::bit::ShlAssign<&u32>>::shl_assign",
    "hash": "443959638382042603816152799958379066940"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i16 as ops::bit::ShlAssign<&u64>>::shl_assign",
    "hash": "87174835492659771234051930803548693822"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i16 as ops::bit::ShlAssign<&u8>>::shl_assign",
    "hash": "74892110214747568154193332524314429772"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i16 as ops::bit::ShlAssign<&usize>>::shl_assign",
    "hash": "17005404754820061414827439427334570214"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i16 as ops::bit::Shr<&i128>>::shr",
    "hash": "136279136623198532017855148461553027648"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i16 as ops::bit::Shr<&i16>>::shr",
    "hash": "1014823018160487291214408386278020714647"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i16 as ops::bit::Shr<&i32>>::shr",
    "hash": "878136091841639183711042894985846972131"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i16 as ops::bit::Shr<&i64>>::shr",
    "hash": "107116657715829963528934258819834995389"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i16 as ops::bit::Shr<&i8>>::shr",
    "hash": "73083907822825617611576143425366585325"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i16 as ops::bit::Shr<&isize>>::shr",
    "hash": "166622804396880978348006364085261005685"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i16 as ops::bit::Shr<&u128>>::shr",
    "hash": "34921550644759478733012896108432081030"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i16 as ops::bit::Shr<&u16>>::shr",
    "hash": "1509357632862297082111896398334582775935"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i16 as ops::bit::Shr<&u32>>::shr",
    "hash": "1217758544912578384617808821743969124557"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i16 as ops::bit::Shr<&u64>>::shr",
    "hash": "1581377335621831968414314967815432250960"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i16 as ops::bit::Shr<&u8>>::shr",
    "hash": "140297301831719234721640926825143938705"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i16 as ops::bit::Shr<&usize>>::shr",
    "hash": "152747153928389907521530165788673338001"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i16 as ops::bit::ShrAssign<&i128>>::shr_assign",
    "hash": "72528301137840878621647379659222081240"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i16 as ops::bit::ShrAssign<&i16>>::shr_assign",
    "hash": "1633320673548010626310899526896486554951"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i16 as ops::bit::ShrAssign<&i32>>::shr_assign",
    "hash": "46535900811240358737277792424873598499"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i16 as ops::bit::ShrAssign<&i64>>::shr_assign",
    "hash": "1600637981160887446816914998624719304455"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i16 as ops::bit::ShrAssign<&i8>>::shr_assign",
    "hash": "93750131162841910872106090758910853476"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i16 as ops::bit::ShrAssign<&isize>>::shr_assign",
    "hash": "1740259275583925722918183749530667186881"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i16 as ops::bit::ShrAssign<&u128>>::shr_assign",
    "hash": "1159090768253993699015928043954974824884"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i16 as ops::bit::ShrAssign<&u16>>::shr_assign",
    "hash": "136661281452881077802071776484111024167"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i16 as ops::bit::ShrAssign<&u32>>::shr_assign",
    "hash": "1634386804437937927215635525936992933955"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i16 as ops::bit::ShrAssign<&u64>>::shr_assign",
    "hash": "412392819917572690711889620249104317450"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i16 as ops::bit::ShrAssign<&u8>>::shr_assign",
    "hash": "278034579454058040536162496818645992"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i16 as ops::bit::ShrAssign<&usize>>::shr_assign",
    "hash": "517657813439753455517669801685714994034"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i32 as ops::arith::Add<&i32>>::add",
    "hash": "74820973598209560359288848777852857923"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i32 as ops::arith::AddAssign<&i32>>::add_assign",
    "hash": "13363730902893962187688580887652641729"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i32 as ops::arith::Div<&i32>>::div",
    "hash": "329523781381934867613868590574581309051"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i32 as ops::arith::DivAssign<&i32>>::div_assign",
    "hash": "2702348955541197049671642164162124444"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i32 as ops::arith::Mul<&i32>>::mul",
    "hash": "135234661813878885084213698139927883382"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i32 as ops::arith::MulAssign<&i32>>::mul_assign",
    "hash": "133145444556103818003474717663351893886"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i32 as ops::arith::Rem<&i32>>::rem",
    "hash": "1217824091838775545212795125154356269387"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i32 as ops::arith::RemAssign<&i32>>::rem_assign",
    "hash": "86123851767370717272168874720690838544"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i32 as ops::arith::Sub<&i32>>::sub",
    "hash": "155572844697267510612682389754231995158"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i32 as ops::arith::SubAssign<&i32>>::sub_assign",
    "hash": "128737403100533769695944676428323191606"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i32 as ops::bit::BitAnd<&i32>>::bitand",
    "hash": "5931897964367307037218252471193728354"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i32 as ops::bit::BitAndAssign<&i32>>::bitand_assign",
    "hash": "1002091101716257371017465078823704354912"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i32 as ops::bit::BitOr<&i32>>::bitor",
    "hash": "46189164185107806863301104754393144075"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i32 as ops::bit::BitOrAssign<&i32>>::bitor_assign",
    "hash": "116215686923794596058425273579429898260"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i32 as ops::bit::BitXor<&i32>>::bitxor",
    "hash": "119317407676641730647596389133818749060"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i32 as ops::bit::BitXorAssign<&i32>>::bitxor_assign",
    "hash": "827435277632533631915131857981734407399"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i32 as ops::bit::Shl<&i128>>::shl",
    "hash": "172372101531285085039830071750943780539"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i32 as ops::bit::Shl<&i16>>::shl",
    "hash": "2109931966283820527630437989647602245"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i32 as ops::bit::Shl<&i32>>::shl",
    "hash": "910999868950995871015516053170703449060"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i32 as ops::bit::Shl<&i64>>::shl",
    "hash": "40882081138207050278664224036878384675"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i32 as ops::bit::Shl<&i8>>::shl",
    "hash": "61591119580566985375058889394358792753"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i32 as ops::bit::Shl<&isize>>::shl",
    "hash": "1414858859685522463816272258121793701835"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i32 as ops::bit::Shl<&u128>>::shl",
    "hash": "34223969597807711743492936281230103398"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i32 as ops::bit::Shl<&u16>>::shl",
    "hash": "115878849677982524665605801231063522334"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i32 as ops::bit::Shl<&u32>>::shl",
    "hash": "1718520397352588415616386869646519234423"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i32 as ops::bit::Shl<&u64>>::shl",
    "hash": "144415611816639112674741934634549697159"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i32 as ops::bit::Shl<&u8>>::shl",
    "hash": "11388517342998318337683217946133496922"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i32 as ops::bit::Shl<&usize>>::shl",
    "hash": "20283260052229411144676799266596887030"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i32 as ops::bit::ShlAssign<&i128>>::shl_assign",
    "hash": "120188111792185228552083059963242688467"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i32 as ops::bit::ShlAssign<&i16>>::shl_assign",
    "hash": "1794074814581016089912788130134794620099"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i32 as ops::bit::ShlAssign<&i32>>::shl_assign",
    "hash": "874338999576682736916158675301274056696"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i32 as ops::bit::ShlAssign<&i64>>::shl_assign",
    "hash": "60090792942542607194945662078085110538"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i32 as ops::bit::ShlAssign<&i8>>::shl_assign",
    "hash": "223887750028560705715625453161131420277"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i32 as ops::bit::ShlAssign<&isize>>::shl_assign",
    "hash": "78964361520374556606475040260827437624"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i32 as ops::bit::ShlAssign<&u128>>::shl_assign",
    "hash": "43627110148978539964323242262966035947"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i32 as ops::bit::ShlAssign<&u16>>::shl_assign",
    "hash": "3458036056432986718081443406397320140"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i32 as ops::bit::ShlAssign<&u32>>::shl_assign",
    "hash": "12108504097102775548264019256936707104"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i32 as ops::bit::ShlAssign<&u64>>::shl_assign",
    "hash": "101173952972331809532945997765950816440"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i32 as ops::bit::ShlAssign<&u8>>::shl_assign",
    "hash": "9342231760384964189355498854329916592"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i32 as ops::bit::ShlAssign<&usize>>::shl_assign",
    "hash": "325898505715790067411872180302176156217"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i32 as ops::bit::Shr<&i128>>::shr",
    "hash": "928451950345208894015248643131211204029"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i32 as ops::bit::Shr<&i16>>::shr",
    "hash": "110980484121837364862578106299918987069"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i32 as ops::bit::Shr<&i32>>::shr",
    "hash": "8759426850122440952822704544864307134"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i32 as ops::bit::Shr<&i64>>::shr",
    "hash": "73925974614589634149115303023301757040"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i32 as ops::bit::Shr<&i8>>::shr",
    "hash": "1762604847687987777715313213216519915658"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i32 as ops::bit::Shr<&isize>>::shr",
    "hash": "139776624535643334596620927577082017653"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i32 as ops::bit::Shr<&u128>>::shr",
    "hash": "660522378472212848612608031986836919720"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i32 as ops::bit::Shr<&u16>>::shr",
    "hash": "15184637279743868374763657922606868812"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i32 as ops::bit::Shr<&u32>>::shr",
    "hash": "28756855361848655247028594612002366977"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i32 as ops::bit::Shr<&u64>>::shr",
    "hash": "778545855597045054715930191134307556159"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i32 as ops::bit::Shr<&u8>>::shr",
    "hash": "141843418289604055113621204912591940846"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i32 as ops::bit::Shr<&usize>>::shr",
    "hash": "105538677269464983811002192263882430732"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i32 as ops::bit::ShrAssign<&i128>>::shr_assign",
    "hash": "53333221716071648355100671786915079526"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i32 as ops::bit::ShrAssign<&i16>>::shr_assign",
    "hash": "893626155806409237813358474569901495984"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i32 as ops::bit::ShrAssign<&i32>>::shr_assign",
    "hash": "1813870681465680246014529045986153601895"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i32 as ops::bit::ShrAssign<&i64>>::shr_assign",
    "hash": "1108654067855658193712198852900165862243"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i32 as ops::bit::ShrAssign<&i8>>::shr_assign",
    "hash": "166688096840989200124438616084486678380"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i32 as ops::bit::ShrAssign<&isize>>::shr_assign",
    "hash": "46369017114389239511325370842861443192"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i32 as ops::bit::ShrAssign<&u128>>::shr_assign",
    "hash": "113380471615554851643964249281371756205"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i32 as ops::bit::ShrAssign<&u16>>::shr_assign",
    "hash": "153935464145547119963305332125446801453"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i32 as ops::bit::ShrAssign<&u32>>::shr_assign",
    "hash": "288902087403751995514819384751567492861"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i32 as ops::bit::ShrAssign<&u64>>::shr_assign",
    "hash": "66103011149201734616070759383022409337"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i32 as ops::bit::ShrAssign<&u8>>::shr_assign",
    "hash": "78384259045431364677904006867925853313"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i32 as ops::bit::ShrAssign<&usize>>::shr_assign",
    "hash": "41425856379337626308108133795125568500"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i64 as ops::arith::Add<&i64>>::add",
    "hash": "621417160278843779516306826218108227030"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i64 as ops::arith::AddAssign<&i64>>::add_assign",
    "hash": "45780376162797751855215476177303846675"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i64 as ops::arith::Div<&i64>>::div",
    "hash": "37892061058365160537163479119590189251"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i64 as ops::arith::DivAssign<&i64>>::div_assign",
    "hash": "1826531917053891973810515589313616332741"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i64 as ops::arith::Mul<&i64>>::mul",
    "hash": "96413324016636961618192025250009638183"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i64 as ops::arith::MulAssign<&i64>>::mul_assign",
    "hash": "11084685148374047345375931849696543342"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i64 as ops::arith::Rem<&i64>>::rem",
    "hash": "37263033957171297179115866799685234803"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i64 as ops::arith::RemAssign<&i64>>::rem_assign",
    "hash": "1654258414274204642013373289018854809825"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i64 as ops::arith::Sub<&i64>>::sub",
    "hash": "1499876157039757054213576736430357161598"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i64 as ops::arith::SubAssign<&i64>>::sub_assign",
    "hash": "2929950153265441082861219625407482686"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i64 as ops::bit::BitAnd<&i64>>::bitand",
    "hash": "533392532981290140411812648564011609130"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i64 as ops::bit::BitAndAssign<&i64>>::bitand_assign",
    "hash": "36246029427736319354378245050884073754"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i64 as ops::bit::BitOr<&i64>>::bitor",
    "hash": "72199379048014460328228372799099719326"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i64 as ops::bit::BitOrAssign<&i64>>::bitor_assign",
    "hash": "135248643296514268475386654425615771311"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i64 as ops::bit::BitXor<&i64>>::bitxor",
    "hash": "213023564755064787515167821226378949751"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i64 as ops::bit::BitXorAssign<&i64>>::bitxor_assign",
    "hash": "1135070892491756301316200978845934546521"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i64 as ops::bit::Shl<&i128>>::shl",
    "hash": "38618312384401341922772387142531790396"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i64 as ops::bit::Shl<&i16>>::shl",
    "hash": "23067987568570556011150322596191708709"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i64 as ops::bit::Shl<&i32>>::shl",
    "hash": "153833852018301352877116771547012582948"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i64 as ops::bit::Shl<&i64>>::shl",
    "hash": "150478512124952641335658498864210539053"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i64 as ops::bit::Shl<&i8>>::shl",
    "hash": "144396427640511530974366817112137772245"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i64 as ops::bit::Shl<&isize>>::shl",
    "hash": "168921480684202237416569154524282259401"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i64 as ops::bit::Shl<&u128>>::shl",
    "hash": "1146211279304716162213864856885756508996"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i64 as ops::bit::Shl<&u16>>::shl",
    "hash": "94781794557798756104112418186218687269"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i64 as ops::bit::Shl<&u32>>::shl",
    "hash": "442611581563960907416917638717567156126"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i64 as ops::bit::Shl<&u64>>::shl",
    "hash": "37754680675501629723525456326930036611"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i64 as ops::bit::Shl<&u8>>::shl",
    "hash": "135809373688682186723408285877143914431"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i64 as ops::bit::Shl<&usize>>::shl",
    "hash": "187112588819476892517068374668623172843"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i64 as ops::bit::ShlAssign<&i128>>::shl_assign",
    "hash": "1603751669371622705710538085656939986237"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i64 as ops::bit::ShlAssign<&i16>>::shl_assign",
    "hash": "9200802789476607479805079307792990353"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i64 as ops::bit::ShlAssign<&i32>>::shl_assign",
    "hash": "571032323788168546714191417005769158104"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i64 as ops::bit::ShlAssign<&i64>>::shl_assign",
    "hash": "1836237060569335956913245778319371256614"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i64 as ops::bit::ShlAssign<&i8>>::shl_assign",
    "hash": "352534628599580148216364147786213650165"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i64 as ops::bit::ShlAssign<&isize>>::shl_assign",
    "hash": "138883885698765171596361121368398635419"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i64 as ops::bit::ShlAssign<&u128>>::shl_assign",
    "hash": "732486413096870761913534474712988072612"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i64 as ops::bit::ShlAssign<&u16>>::shl_assign",
    "hash": "1283967497878366812021211992318663114"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i64 as ops::bit::ShlAssign<&u32>>::shl_assign",
    "hash": "22419905131079435971694144766127024416"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i64 as ops::bit::ShlAssign<&u64>>::shl_assign",
    "hash": "1426071402992761365118053552480374167496"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i64 as ops::bit::ShlAssign<&u8>>::shl_assign",
    "hash": "626161772288660810311712556050579802337"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i64 as ops::bit::ShlAssign<&usize>>::shl_assign",
    "hash": "110011443250924874366434258775829348963"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i64 as ops::bit::Shr<&i128>>::shr",
    "hash": "21021036557344671437826926363887697112"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i64 as ops::bit::Shr<&i16>>::shr",
    "hash": "75206547525729491019363767560887674859"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i64 as ops::bit::Shr<&i32>>::shr",
    "hash": "170237449997668343814062732774323925687"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i64 as ops::bit::Shr<&i64>>::shr",
    "hash": "150715371687695606082105657256597366296"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i64 as ops::bit::Shr<&i8>>::shr",
    "hash": "825632344154222640617752374792004892075"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i64 as ops::bit::Shr<&isize>>::shr",
    "hash": "15376518174565761177505422970931399486"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i64 as ops::bit::Shr<&u128>>::shr",
    "hash": "417496103856432035612402156594951829066"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i64 as ops::bit::Shr<&u16>>::shr",
    "hash": "5528845397537497689243733824636360497"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i64 as ops::bit::Shr<&u32>>::shr",
    "hash": "60459652709497901182885951489288518532"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i64 as ops::bit::Shr<&u64>>::shr",
    "hash": "431447600187760917911402836197251377628"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i64 as ops::bit::Shr<&u8>>::shr",
    "hash": "118691949973897360158907485529336039588"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i64 as ops::bit::Shr<&usize>>::shr",
    "hash": "161299441837663092724956132244252241963"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i64 as ops::bit::ShrAssign<&i128>>::shr_assign",
    "hash": "1141459628545108441717031406952422354040"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i64 as ops::bit::ShrAssign<&i16>>::shr_assign",
    "hash": "920628206244618579412112346530727450366"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i64 as ops::bit::ShrAssign<&i32>>::shr_assign",
    "hash": "15562864100631398054143900939039244734"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i64 as ops::bit::ShrAssign<&i64>>::shr_assign",
    "hash": "917055573538743924114576138867191413583"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i64 as ops::bit::ShrAssign<&i8>>::shr_assign",
    "hash": "350784664029020347115744691416943725356"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i64 as ops::bit::ShrAssign<&isize>>::shr_assign",
    "hash": "1654838746428571223415112528395525095695"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i64 as ops::bit::ShrAssign<&u128>>::shr_assign",
    "hash": "1592339171367325369711847832885606845868"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i64 as ops::bit::ShrAssign<&u16>>::shr_assign",
    "hash": "130216253737316168578419133517885841961"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i64 as ops::bit::ShrAssign<&u32>>::shr_assign",
    "hash": "74577537473265354318064339006223386469"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i64 as ops::bit::ShrAssign<&u64>>::shr_assign",
    "hash": "55130173963189312579835382658864275990"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i64 as ops::bit::ShrAssign<&u8>>::shr_assign",
    "hash": "654296666793668967614124729729311294859"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i64 as ops::bit::ShrAssign<&usize>>::shr_assign",
    "hash": "315979869777595000715813728416900434198"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i8 as ops::arith::Add<&i8>>::add",
    "hash": "957945827905253094214148150501985267118"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i8 as ops::arith::AddAssign<&i8>>::add_assign",
    "hash": "151824909519449230789821770434221484123"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i8 as ops::arith::Div<&i8>>::div",
    "hash": "1014305670345667473217152203814532805686"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i8 as ops::arith::DivAssign<&i8>>::div_assign",
    "hash": "271954025808879269913260018153998216701"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i8 as ops::arith::Mul<&i8>>::mul",
    "hash": "880908813610896830316291420323192782195"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i8 as ops::arith::MulAssign<&i8>>::mul_assign",
    "hash": "119057997268843357621511160966518793402"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i8 as ops::arith::Rem<&i8>>::rem",
    "hash": "248882315942977572811945676937095043009"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i8 as ops::arith::RemAssign<&i8>>::rem_assign",
    "hash": "505427473123391206416818727915614310598"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i8 as ops::arith::Sub<&i8>>::sub",
    "hash": "1655628454729527675417561531133177474892"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i8 as ops::arith::SubAssign<&i8>>::sub_assign",
    "hash": "36225250793039808965994696852643908546"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i8 as ops::bit::BitAnd<&i8>>::bitand",
    "hash": "1004180067607670762815887478187194711002"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i8 as ops::bit::BitAndAssign<&i8>>::bitand_assign",
    "hash": "26727425218073683856778199483834498331"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i8 as ops::bit::BitOr<&i8>>::bitor",
    "hash": "192603323422720427313441569094205485120"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i8 as ops::bit::BitOrAssign<&i8>>::bitor_assign",
    "hash": "405772589721555995012601784912730541040"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i8 as ops::bit::BitXor<&i8>>::bitxor",
    "hash": "66202926021140699215051980833384320624"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i8 as ops::bit::BitXorAssign<&i8>>::bitxor_assign",
    "hash": "1482047964947779111016344767533616516404"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i8 as ops::bit::Shl<&i128>>::shl",
    "hash": "154704729601342888696331928886814934299"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i8 as ops::bit::Shl<&i16>>::shl",
    "hash": "2265155874147341041042916176815264711"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i8 as ops::bit::Shl<&i32>>::shl",
    "hash": "182258149339194923967994666897074559506"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i8 as ops::bit::Shl<&i64>>::shl",
    "hash": "33254729709612489942740302161031187904"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i8 as ops::bit::Shl<&i8>>::shl",
    "hash": "20485112305777671054061256971715532944"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i8 as ops::bit::Shl<&isize>>::shl",
    "hash": "38619373363902328606507150166449290837"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i8 as ops::bit::Shl<&u128>>::shl",
    "hash": "14865803260963625536367108884237714287"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i8 as ops::bit::Shl<&u16>>::shl",
    "hash": "1657033549584310605911422084084492035132"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i8 as ops::bit::Shl<&u32>>::shl",
    "hash": "538905085312201006117367809882160902838"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i8 as ops::bit::Shl<&u64>>::shl",
    "hash": "958094658473999834618076050611629601421"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i8 as ops::bit::Shl<&u8>>::shl",
    "hash": "120217464668136078224077204967558499883"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i8 as ops::bit::Shl<&usize>>::shl",
    "hash": "51556225948989796347268074670536848682"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i8 as ops::bit::ShlAssign<&i128>>::shl_assign",
    "hash": "631868036938364661516134156469499418549"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i8 as ops::bit::ShlAssign<&i16>>::shl_assign",
    "hash": "770287913732031103710408286322992957747"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i8 as ops::bit::ShlAssign<&i32>>::shl_assign",
    "hash": "802929655138356501111641958358752068725"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i8 as ops::bit::ShlAssign<&i64>>::shl_assign",
    "hash": "687968302977570266612085435418044497436"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i8 as ops::bit::ShlAssign<&i8>>::shl_assign",
    "hash": "112210500944709357089951920678192371184"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i8 as ops::bit::ShlAssign<&isize>>::shl_assign",
    "hash": "10312707536031133527799766663622098601"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i8 as ops::bit::ShlAssign<&u128>>::shl_assign",
    "hash": "132209300385111394914234123025104680297"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i8 as ops::bit::ShlAssign<&u16>>::shl_assign",
    "hash": "1499316173599621306517791625056909032320"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i8 as ops::bit::ShlAssign<&u32>>::shl_assign",
    "hash": "269434601536366676711052281195790813471"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i8 as ops::bit::ShlAssign<&u64>>::shl_assign",
    "hash": "159012461912120357171878434438211938209"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i8 as ops::bit::ShlAssign<&u8>>::shl_assign",
    "hash": "13242215843841384991216406153081006458"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i8 as ops::bit::ShlAssign<&usize>>::shl_assign",
    "hash": "1516961640768242471415381325612473432468"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i8 as ops::bit::Shr<&i128>>::shr",
    "hash": "10131681027671792866470288229710194944"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i8 as ops::bit::Shr<&i16>>::shr",
    "hash": "116813539817265930619744891821804360633"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i8 as ops::bit::Shr<&i32>>::shr",
    "hash": "145181972408978905689696368001107778987"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i8 as ops::bit::Shr<&i64>>::shr",
    "hash": "2201253865479409619141666524829118476"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i8 as ops::bit::Shr<&i8>>::shr",
    "hash": "87550087737003032482726246132200457262"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i8 as ops::bit::Shr<&isize>>::shr",
    "hash": "1284675577761042364016416860090285207492"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i8 as ops::bit::Shr<&u128>>::shr",
    "hash": "711773914523466572915425393516635323017"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i8 as ops::bit::Shr<&u16>>::shr",
    "hash": "15005796739324569378545666306012977682"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i8 as ops::bit::Shr<&u32>>::shr",
    "hash": "24496257897734848796072233017297376732"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i8 as ops::bit::Shr<&u64>>::shr",
    "hash": "1503460033494949927412021130423377729710"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i8 as ops::bit::Shr<&u8>>::shr",
    "hash": "1745026361120123482110608674039173629986"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i8 as ops::bit::Shr<&usize>>::shr",
    "hash": "1777666620815475558515436973168849916381"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i8 as ops::bit::ShrAssign<&i128>>::shr_assign",
    "hash": "56307820585549541896738551494301791596"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i8 as ops::bit::ShrAssign<&i16>>::shr_assign",
    "hash": "16618589061696659105659460536525719251"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i8 as ops::bit::ShrAssign<&i32>>::shr_assign",
    "hash": "4633985086628698685989821029159277637"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i8 as ops::bit::ShrAssign<&i64>>::shr_assign",
    "hash": "9403411695146714337706851325051517338"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i8 as ops::bit::ShrAssign<&i8>>::shr_assign",
    "hash": "70821645427514109175086037717601011413"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i8 as ops::bit::ShrAssign<&isize>>::shr_assign",
    "hash": "276844002005070770516733329157444972263"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i8 as ops::bit::ShrAssign<&u128>>::shr_assign",
    "hash": "116380862722429433688945440676235371408"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i8 as ops::bit::ShrAssign<&u16>>::shr_assign",
    "hash": "1086812004876984907212762645045132310924"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i8 as ops::bit::ShrAssign<&u32>>::shr_assign",
    "hash": "165601844854576033006365505325094808821"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i8 as ops::bit::ShrAssign<&u64>>::shr_assign",
    "hash": "78824621965400971924018032235598027332"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i8 as ops::bit::ShrAssign<&u8>>::shr_assign",
    "hash": "877688668274666503710578614250576955484"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i8 as ops::bit::ShrAssign<&usize>>::shr_assign",
    "hash": "1149849534857962401915394273535192133803"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<isize as ops::arith::Add<&isize>>::add",
    "hash": "60331126894468359407230470097010125778"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<isize as ops::arith::AddAssign<&isize>>::add_assign",
    "hash": "132449584224789635486836679266378994429"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<isize as ops::arith::Div<&isize>>::div",
    "hash": "31987572136085918891318328664430296920"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<isize as ops::arith::DivAssign<&isize>>::div_assign",
    "hash": "1193567250745185414111405706867047686019"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<isize as ops::arith::Mul<&isize>>::mul",
    "hash": "1352375438826298998410319652092098318551"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<isize as ops::arith::MulAssign<&isize>>::mul_assign",
    "hash": "139508241437966252778402440494024328295"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<isize as ops::arith::Rem<&isize>>::rem",
    "hash": "569167636225726701116993736163524951606"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<isize as ops::arith::RemAssign<&isize>>::rem_assign",
    "hash": "958565291087777571418083714692202439824"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<isize as ops::arith::Sub<&isize>>::sub",
    "hash": "176378552462415681171707568211352274879"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<isize as ops::arith::SubAssign<&isize>>::sub_assign",
    "hash": "1300153085291125282010158560398330990202"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<isize as ops::bit::BitAnd<&isize>>::bitand",
    "hash": "650460010716084314610888026190929419008"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<isize as ops::bit::BitAndAssign<&isize>>::bitand_assign",
    "hash": "1042290879650696614415823504568200477406"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<isize as ops::bit::BitOr<&isize>>::bitor",
    "hash": "1672841064637544624012743462971831913330"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<isize as ops::bit::BitOrAssign<&isize>>::bitor_assign",
    "hash": "116232986680947692887746244980786565941"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<isize as ops::bit::BitXor<&isize>>::bitxor",
    "hash": "159339126408046907614739370806192035624"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<isize as ops::bit::BitXorAssign<&isize>>::bitxor_assign",
    "hash": "58672793852729948312889284929483483830"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<isize as ops::bit::Shl<&i128>>::shl",
    "hash": "105967141506584817316210215701326887418"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<isize as ops::bit::Shl<&i16>>::shl",
    "hash": "167730248679986123215211041622912850525"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<isize as ops::bit::Shl<&i32>>::shl",
    "hash": "47347477178668725142203456589556605147"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<isize as ops::bit::Shl<&i64>>::shl",
    "hash": "101113565163633822281711239290753709494"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<isize as ops::bit::Shl<&i8>>::shl",
    "hash": "961539007930788967314083672189342327306"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<isize as ops::bit::Shl<&isize>>::shl",
    "hash": "170153440402399663096462699511491898062"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<isize as ops::bit::Shl<&u128>>::shl",
    "hash": "1198376724680399676114740645364641475822"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<isize as ops::bit::Shl<&u16>>::shl",
    "hash": "5111116630962081015631323227054470636"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<isize as ops::bit::Shl<&u32>>::shl",
    "hash": "519690613799666698618065007740976962287"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<isize as ops::bit::Shl<&u64>>::shl",
    "hash": "193669346252723217397481670837686717"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<isize as ops::bit::Shl<&u8>>::shl",
    "hash": "1347472188785514034917125718285132266049"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<isize as ops::bit::Shl<&usize>>::shl",
    "hash": "629435932312521399814645644546393796764"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<isize as ops::bit::ShlAssign<&i128>>::shl_assign",
    "hash": "514711965222549525417421249956433481011"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<isize as ops::bit::ShlAssign<&i16>>::shl_assign",
    "hash": "65037513573167708044545424060277577638"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<isize as ops::bit::ShlAssign<&i32>>::shl_assign",
    "hash": "39209864685980580743770004632419074136"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<isize as ops::bit::ShlAssign<&i64>>::shl_assign",
    "hash": "7000653694897725043182491909196610241"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<isize as ops::bit::ShlAssign<&i8>>::shl_assign",
    "hash": "133748417173162211362680615434983062786"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<isize as ops::bit::ShlAssign<&isize>>::shl_assign",
    "hash": "1682664618162820736216122740124686875658"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<isize as ops::bit::ShlAssign<&u128>>::shl_assign",
    "hash": "958990274300123574518020483689063399031"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<isize as ops::bit::ShlAssign<&u16>>::shl_assign",
    "hash": "160045021522430648265353147329838308494"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<isize as ops::bit::ShlAssign<&u32>>::shl_assign",
    "hash": "1067758747354216555310728914631283565438"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<isize as ops::bit::ShlAssign<&u64>>::shl_assign",
    "hash": "1279830939527297586513733828501482876201"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<isize as ops::bit::ShlAssign<&u8>>::shl_assign",
    "hash": "834506864789774155813859456073224116946"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<isize as ops::bit::ShlAssign<&usize>>::shl_assign",
    "hash": "143840939588164321598111398913474330069"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<isize as ops::bit::Shr<&i128>>::shr",
    "hash": "585339527782717469812733988686921342133"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<isize as ops::bit::Shr<&i16>>::shr",
    "hash": "1224763918825533312110233574032810529392"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<isize as ops::bit::Shr<&i32>>::shr",
    "hash": "84091289825032107242267009643637508439"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<isize as ops::bit::Shr<&i64>>::shr",
    "hash": "154115050756775372022454169051005451834"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<isize as ops::bit::Shr<&i8>>::shr",
    "hash": "888188654881115432617985346272435180775"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<isize as ops::bit::Shr<&isize>>::shr",
    "hash": "247974407580116057112812815628410020913"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<isize as ops::bit::Shr<&u128>>::shr",
    "hash": "102698748086609078298821705595344013930"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<isize as ops::bit::Shr<&u16>>::shr",
    "hash": "1786011844028194318811861850643878507936"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<isize as ops::bit::Shr<&u32>>::shr",
    "hash": "46270550121416893732153661112553016147"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<isize as ops::bit::Shr<&u64>>::shr",
    "hash": "179830655109743509769179812154971614135"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<isize as ops::bit::Shr<&u8>>::shr",
    "hash": "57621788043487617344253439828242795184"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<isize as ops::bit::Shr<&usize>>::shr",
    "hash": "104215125148840620666476259204429722150"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<isize as ops::bit::ShrAssign<&i128>>::shr_assign",
    "hash": "888667146749941918115198394839892486823"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<isize as ops::bit::ShrAssign<&i16>>::shr_assign",
    "hash": "118527591905584527407470350284955670555"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<isize as ops::bit::ShrAssign<&i32>>::shr_assign",
    "hash": "172089107088180304947417641155180798240"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<isize as ops::bit::ShrAssign<&i64>>::shr_assign",
    "hash": "171539385614278335176039601021247929891"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<isize as ops::bit::ShrAssign<&i8>>::shr_assign",
    "hash": "44612487864594819447300363592238532513"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<isize as ops::bit::ShrAssign<&isize>>::shr_assign",
    "hash": "107011414448404065033275471971610472462"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<isize as ops::bit::ShrAssign<&u128>>::shr_assign",
    "hash": "851515630839955921911741418121477244845"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<isize as ops::bit::ShrAssign<&u16>>::shr_assign",
    "hash": "10283160772166775633202851132372533014"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<isize as ops::bit::ShrAssign<&u32>>::shr_assign",
    "hash": "319704230181613756712462411532892607366"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<isize as ops::bit::ShrAssign<&u64>>::shr_assign",
    "hash": "209608133185976633210992885855423006058"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<isize as ops::bit::ShrAssign<&u8>>::shr_assign",
    "hash": "1314410631095225210816979548382604699061"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<isize as ops::bit::ShrAssign<&usize>>::shr_assign",
    "hash": "180004841078921817355881152825655489710"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i128> as ops::arith::Add<&num::saturating::Saturating<i128>>>::add",
    "hash": "12123151099769828975917954877523355541"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i128> as ops::arith::AddAssign<&i128>>::add_assign",
    "hash": "885930117689058256010893265476144928138"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i128> as ops::arith::AddAssign<&num::saturating::Saturating<i128>>>::add_assign",
    "hash": "682066611972576827611083246455633001178"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i128> as ops::arith::Div<&num::saturating::Saturating<i128>>>::div",
    "hash": "411242222311028786613918944771894081635"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i128> as ops::arith::DivAssign<&i128>>::div_assign",
    "hash": "1249550307617805605417748619773280402353"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i128> as ops::arith::DivAssign<&num::saturating::Saturating<i128>>>::div_assign",
    "hash": "7977502247782724396983485339493313380"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i128> as ops::arith::Mul<&num::saturating::Saturating<i128>>>::mul",
    "hash": "171213445656404467609276826521702266598"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i128> as ops::arith::MulAssign<&i128>>::mul_assign",
    "hash": "1163765278587782194313780841097788696701"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i128> as ops::arith::MulAssign<&num::saturating::Saturating<i128>>>::mul_assign",
    "hash": "67749166992818634401035122194464058697"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i128> as ops::arith::Rem<&num::saturating::Saturating<i128>>>::rem",
    "hash": "632203645739475756216753385270311098788"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i128> as ops::arith::RemAssign<&i128>>::rem_assign",
    "hash": "69152005550859352123142337579923036636"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i128> as ops::arith::RemAssign<&num::saturating::Saturating<i128>>>::rem_assign",
    "hash": "979948744623652913415811329606076795728"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i128> as ops::arith::Sub<&num::saturating::Saturating<i128>>>::sub",
    "hash": "167421273133481346526688162129123556733"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i128> as ops::arith::SubAssign<&i128>>::sub_assign",
    "hash": "18407179470726195022111125056014718898"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i128> as ops::arith::SubAssign<&num::saturating::Saturating<i128>>>::sub_assign",
    "hash": "1465320658755759710712235645645621804432"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i128> as ops::bit::BitAnd<&num::saturating::Saturating<i128>>>::bitand",
    "hash": "4529174905003408858295421083661239586"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i128> as ops::bit::BitAndAssign<&i128>>::bitand_assign",
    "hash": "369888015270594587718245920349435843207"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i128> as ops::bit::BitAndAssign<&num::saturating::Saturating<i128>>>::bitand_assign",
    "hash": "699792333249322926811298523233042818651"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i128> as ops::bit::BitOr<&num::saturating::Saturating<i128>>>::bitor",
    "hash": "1075489825223117212016565012375054670715"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i128> as ops::bit::BitOrAssign<&i128>>::bitor_assign",
    "hash": "115921663531136768617423011870340679448"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i128> as ops::bit::BitOrAssign<&num::saturating::Saturating<i128>>>::bitor_assign",
    "hash": "137756730001348016645275437308313575333"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i128> as ops::bit::BitXor<&num::saturating::Saturating<i128>>>::bitxor",
    "hash": "16203112981112193138462729668873660941"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i128> as ops::bit::BitXorAssign<&i128>>::bitxor_assign",
    "hash": "77328214016507160682673424383393718347"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i128> as ops::bit::BitXorAssign<&num::saturating::Saturating<i128>>>::bitxor_assign",
    "hash": "1492075071710517735212729972689292152995"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i16> as ops::arith::Add<&num::saturating::Saturating<i16>>>::add",
    "hash": "26285172328137803827158887965950272239"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i16> as ops::arith::AddAssign<&i16>>::add_assign",
    "hash": "200380198212399768610992013123868830090"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i16> as ops::arith::AddAssign<&num::saturating::Saturating<i16>>>::add_assign",
    "hash": "128693750022196010468636649242477605723"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i16> as ops::arith::Div<&num::saturating::Saturating<i16>>>::div",
    "hash": "8998054201326644318288503743677805730"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i16> as ops::arith::DivAssign<&i16>>::div_assign",
    "hash": "134722087963241082038181525810187735375"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i16> as ops::arith::DivAssign<&num::saturating::Saturating<i16>>>::div_assign",
    "hash": "716894467759183907713362373414773686338"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i16> as ops::arith::Mul<&num::saturating::Saturating<i16>>>::mul",
    "hash": "809763854504429279812073087140836370312"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i16> as ops::arith::MulAssign<&i16>>::mul_assign",
    "hash": "141756872141034226307108904502053665708"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i16> as ops::arith::MulAssign<&num::saturating::Saturating<i16>>>::mul_assign",
    "hash": "174044806679912713158259482472863181993"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i16> as ops::arith::Rem<&num::saturating::Saturating<i16>>>::rem",
    "hash": "1472920937352355387914712267063687922867"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i16> as ops::arith::RemAssign<&i16>>::rem_assign",
    "hash": "5553840653485150656505648310522478833"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i16> as ops::arith::RemAssign<&num::saturating::Saturating<i16>>>::rem_assign",
    "hash": "10145919207524320422358200781071898908"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i16> as ops::arith::Sub<&num::saturating::Saturating<i16>>>::sub",
    "hash": "59680265877040473744850942163732384913"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i16> as ops::arith::SubAssign<&i16>>::sub_assign",
    "hash": "485956782936976776817991630979190704066"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i16> as ops::arith::SubAssign<&num::saturating::Saturating<i16>>>::sub_assign",
    "hash": "19663483835330412210850220774149338039"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i16> as ops::bit::BitAnd<&num::saturating::Saturating<i16>>>::bitand",
    "hash": "159206339900618952722767737233970639684"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i16> as ops::bit::BitAndAssign<&i16>>::bitand_assign",
    "hash": "713458623090224401517487711551356911924"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i16> as ops::bit::BitAndAssign<&num::saturating::Saturating<i16>>>::bitand_assign",
    "hash": "15377222211541073141818830961868377058"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i16> as ops::bit::BitOr<&num::saturating::Saturating<i16>>>::bitor",
    "hash": "775441453621489483411489910113898417752"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i16> as ops::bit::BitOrAssign<&i16>>::bitor_assign",
    "hash": "1386427166305909206718015409345707299709"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i16> as ops::bit::BitOrAssign<&num::saturating::Saturating<i16>>>::bitor_assign",
    "hash": "122381345761171424003296196671801630180"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i16> as ops::bit::BitXor<&num::saturating::Saturating<i16>>>::bitxor",
    "hash": "695239222473852356812189085988411624712"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i16> as ops::bit::BitXorAssign<&i16>>::bitxor_assign",
    "hash": "1241318019172537603015031187806341607605"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i16> as ops::bit::BitXorAssign<&num::saturating::Saturating<i16>>>::bitxor_assign",
    "hash": "1186599677044166555712154332457600579518"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i32> as ops::arith::Add<&num::saturating::Saturating<i32>>>::add",
    "hash": "1682070794490458097011651460364093703428"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i32> as ops::arith::AddAssign<&i32>>::add_assign",
    "hash": "1222283070535807049118196266997492413051"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i32> as ops::arith::AddAssign<&num::saturating::Saturating<i32>>>::add_assign",
    "hash": "158443893345553411392705148619174049699"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i32> as ops::arith::Div<&num::saturating::Saturating<i32>>>::div",
    "hash": "90428124883249427817292310535985754767"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i32> as ops::arith::DivAssign<&i32>>::div_assign",
    "hash": "1589610723889943683015168110117849735337"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i32> as ops::arith::DivAssign<&num::saturating::Saturating<i32>>>::div_assign",
    "hash": "95593140674465458347446166887219474082"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i32> as ops::arith::Mul<&num::saturating::Saturating<i32>>>::mul",
    "hash": "695874844938832572612605891656245859028"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i32> as ops::arith::MulAssign<&i32>>::mul_assign",
    "hash": "248976436098025557717592257031259013627"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i32> as ops::arith::MulAssign<&num::saturating::Saturating<i32>>>::mul_assign",
    "hash": "580654734256975097914894627848328633966"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i32> as ops::arith::Rem<&num::saturating::Saturating<i32>>>::rem",
    "hash": "872667992399247072113435586709214850856"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i32> as ops::arith::RemAssign<&i32>>::rem_assign",
    "hash": "464928659853439401510741713229785195170"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i32> as ops::arith::RemAssign<&num::saturating::Saturating<i32>>>::rem_assign",
    "hash": "496856661046363376611383048855127258496"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i32> as ops::arith::Sub<&num::saturating::Saturating<i32>>>::sub",
    "hash": "1277684184865123740016530369270200123589"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i32> as ops::arith::SubAssign<&i32>>::sub_assign",
    "hash": "836279741060852389418128942505751866988"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i32> as ops::arith::SubAssign<&num::saturating::Saturating<i32>>>::sub_assign",
    "hash": "13746007868730154327416790010757496984"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i32> as ops::bit::BitAnd<&num::saturating::Saturating<i32>>>::bitand",
    "hash": "432027896632894797412324147976945467319"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i32> as ops::bit::BitAndAssign<&i32>>::bitand_assign",
    "hash": "74067082511212639738674331958951090598"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i32> as ops::bit::BitAndAssign<&num::saturating::Saturating<i32>>>::bitand_assign",
    "hash": "48680955322708584233055880273214030552"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i32> as ops::bit::BitOr<&num::saturating::Saturating<i32>>>::bitor",
    "hash": "939491617002613612010083335511500363366"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i32> as ops::bit::BitOrAssign<&i32>>::bitor_assign",
    "hash": "1750840540774748177011392019622996349715"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i32> as ops::bit::BitOrAssign<&num::saturating::Saturating<i32>>>::bitor_assign",
    "hash": "81307190284869646579140383503409902808"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i32> as ops::bit::BitXor<&num::saturating::Saturating<i32>>>::bitxor",
    "hash": "570679423165641270013052943531398680700"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i32> as ops::bit::BitXorAssign<&i32>>::bitxor_assign",
    "hash": "134351972411168303129910050979931985730"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i32> as ops::bit::BitXorAssign<&num::saturating::Saturating<i32>>>::bitxor_assign",
    "hash": "18309632453628027377952573655713819382"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i64> as ops::arith::Add<&num::saturating::Saturating<i64>>>::add",
    "hash": "785294756021575469715100543691279657602"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i64> as ops::arith::AddAssign<&i64>>::add_assign",
    "hash": "100191992716962173135263313737198063509"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i64> as ops::arith::AddAssign<&num::saturating::Saturating<i64>>>::add_assign",
    "hash": "777042838965294662917398973582924296779"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i64> as ops::arith::Div<&num::saturating::Saturating<i64>>>::div",
    "hash": "8378545774161940634256929776186048722"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i64> as ops::arith::DivAssign<&i64>>::div_assign",
    "hash": "15881540355597233249868483480647813778"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i64> as ops::arith::DivAssign<&num::saturating::Saturating<i64>>>::div_assign",
    "hash": "101467392440926511609295608515433533164"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i64> as ops::arith::Mul<&num::saturating::Saturating<i64>>>::mul",
    "hash": "1345224444981452945614053366480777270819"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i64> as ops::arith::MulAssign<&i64>>::mul_assign",
    "hash": "76266885548530882854502039307883160755"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i64> as ops::arith::MulAssign<&num::saturating::Saturating<i64>>>::mul_assign",
    "hash": "931213416495846299715080176974902402310"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i64> as ops::arith::Rem<&num::saturating::Saturating<i64>>>::rem",
    "hash": "11600437941916428276799381820510197636"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i64> as ops::arith::RemAssign<&i64>>::rem_assign",
    "hash": "1366196331009934209518355843636610268054"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i64> as ops::arith::RemAssign<&num::saturating::Saturating<i64>>>::rem_assign",
    "hash": "756299294891882766617887365291208194455"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i64> as ops::arith::Sub<&num::saturating::Saturating<i64>>>::sub",
    "hash": "1334839174358327476512280551462766879418"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i64> as ops::arith::SubAssign<&i64>>::sub_assign",
    "hash": "591467945505041500213625835666537674451"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i64> as ops::arith::SubAssign<&num::saturating::Saturating<i64>>>::sub_assign",
    "hash": "127870621825916617407513622925660073704"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i64> as ops::bit::BitAnd<&num::saturating::Saturating<i64>>>::bitand",
    "hash": "148964653616453991235436697275875759"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i64> as ops::bit::BitAndAssign<&i64>>::bitand_assign",
    "hash": "939125340758960531918019326753555472432"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i64> as ops::bit::BitAndAssign<&num::saturating::Saturating<i64>>>::bitand_assign",
    "hash": "1704601175004116643514045369578463368194"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i64> as ops::bit::BitOr<&num::saturating::Saturating<i64>>>::bitor",
    "hash": "151158596076494401031666326473654938688"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i64> as ops::bit::BitOrAssign<&i64>>::bitor_assign",
    "hash": "12066250041010451497306235939414928521"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i64> as ops::bit::BitOrAssign<&num::saturating::Saturating<i64>>>::bitor_assign",
    "hash": "554131134242479421810594244734507987022"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i64> as ops::bit::BitXor<&num::saturating::Saturating<i64>>>::bitxor",
    "hash": "82698217210362071621123974924154071188"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i64> as ops::bit::BitXorAssign<&i64>>::bitxor_assign",
    "hash": "556519577690761654915956355923195385900"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i64> as ops::bit::BitXorAssign<&num::saturating::Saturating<i64>>>::bitxor_assign",
    "hash": "1297797962629342808816005859141852517916"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i8> as ops::arith::Add<&num::saturating::Saturating<i8>>>::add",
    "hash": "147769569916159448187719392106775423899"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i8> as ops::arith::AddAssign<&i8>>::add_assign",
    "hash": "1312917827216291709913098450316234447486"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i8> as ops::arith::AddAssign<&num::saturating::Saturating<i8>>>::add_assign",
    "hash": "45022945126832227014391773540360034605"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i8> as ops::arith::Div<&num::saturating::Saturating<i8>>>::div",
    "hash": "810820491027736327912498022274656518327"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i8> as ops::arith::DivAssign<&i8>>::div_assign",
    "hash": "22425069474456236216905563952553825716"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i8> as ops::arith::DivAssign<&num::saturating::Saturating<i8>>>::div_assign",
    "hash": "78404663338081752473146425077973498315"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i8> as ops::arith::Mul<&num::saturating::Saturating<i8>>>::mul",
    "hash": "870989789052121085810138704634591816914"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i8> as ops::arith::MulAssign<&i8>>::mul_assign",
    "hash": "102583688790661287993697775964840214963"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i8> as ops::arith::MulAssign<&num::saturating::Saturating<i8>>>::mul_assign",
    "hash": "9719175069879925388355941956891529767"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i8> as ops::arith::Rem<&num::saturating::Saturating<i8>>>::rem",
    "hash": "137913438963545033374050622920259553305"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i8> as ops::arith::RemAssign<&i8>>::rem_assign",
    "hash": "391454347513567336411472722492357333105"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i8> as ops::arith::RemAssign<&num::saturating::Saturating<i8>>>::rem_assign",
    "hash": "610818402563084538716272390894172011968"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i8> as ops::arith::Sub<&num::saturating::Saturating<i8>>>::sub",
    "hash": "7167126924477519856404563135547785341"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i8> as ops::arith::SubAssign<&i8>>::sub_assign",
    "hash": "14169741209905258809268517234481765432"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i8> as ops::arith::SubAssign<&num::saturating::Saturating<i8>>>::sub_assign",
    "hash": "1476659267062851811513178578352171937440"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i8> as ops::bit::BitAnd<&num::saturating::Saturating<i8>>>::bitand",
    "hash": "485990076821611095612437181964163391289"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i8> as ops::bit::BitAndAssign<&i8>>::bitand_assign",
    "hash": "74436138301816287287949082662641017851"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i8> as ops::bit::BitAndAssign<&num::saturating::Saturating<i8>>>::bitand_assign",
    "hash": "91927781966917934427090677772527671184"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i8> as ops::bit::BitOr<&num::saturating::Saturating<i8>>>::bitor",
    "hash": "129753949657858112401759994500682521646"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i8> as ops::bit::BitOrAssign<&i8>>::bitor_assign",
    "hash": "611177484694262293114298260370873532544"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i8> as ops::bit::BitOrAssign<&num::saturating::Saturating<i8>>>::bitor_assign",
    "hash": "173343535645730291189343900367568432752"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i8> as ops::bit::BitXor<&num::saturating::Saturating<i8>>>::bitxor",
    "hash": "1422153335797785491973681092850627660"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i8> as ops::bit::BitXorAssign<&i8>>::bitxor_assign",
    "hash": "163069627040178494107988449038788377756"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i8> as ops::bit::BitXorAssign<&num::saturating::Saturating<i8>>>::bitxor_assign",
    "hash": "649314996106840473616526118115312161925"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<isize> as ops::arith::Add<&num::saturating::Saturating<isize>>>::add",
    "hash": "987178356895732543013374871946525816818"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<isize> as ops::arith::AddAssign<&isize>>::add_assign",
    "hash": "5997419910563145689978211048297356422"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<isize> as ops::arith::AddAssign<&num::saturating::Saturating<isize>>>::add_assign",
    "hash": "163958286976658884085425737441174726451"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<isize> as ops::arith::Div<&num::saturating::Saturating<isize>>>::div",
    "hash": "1495658016560749753911609797387427906678"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<isize> as ops::arith::DivAssign<&isize>>::div_assign",
    "hash": "2933337347434703261037860910015037507"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<isize> as ops::arith::DivAssign<&num::saturating::Saturating<isize>>>::div_assign",
    "hash": "866731448702059155117084827813350085771"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<isize> as ops::arith::Mul<&num::saturating::Saturating<isize>>>::mul",
    "hash": "1461074344363240629315833266462188276542"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<isize> as ops::arith::MulAssign<&isize>>::mul_assign",
    "hash": "128468538813884953709567296876259848359"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<isize> as ops::arith::MulAssign<&num::saturating::Saturating<isize>>>::mul_assign",
    "hash": "2737883736125483466577965734366465041"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<isize> as ops::arith::Rem<&num::saturating::Saturating<isize>>>::rem",
    "hash": "1672366185805468300717415490907881164037"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<isize> as ops::arith::RemAssign<&isize>>::rem_assign",
    "hash": "68960877313197405182892673239658566297"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<isize> as ops::arith::RemAssign<&num::saturating::Saturating<isize>>>::rem_assign",
    "hash": "152276948180230723439569259000654647163"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<isize> as ops::arith::Sub<&num::saturating::Saturating<isize>>>::sub",
    "hash": "1781748466860142144417121436666630545799"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<isize> as ops::arith::SubAssign<&isize>>::sub_assign",
    "hash": "122344638262920810592150133637048008053"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<isize> as ops::arith::SubAssign<&num::saturating::Saturating<isize>>>::sub_assign",
    "hash": "1672302597346087620916215765394527152714"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<isize> as ops::bit::BitAnd<&num::saturating::Saturating<isize>>>::bitand",
    "hash": "1029038298192549371016085197781253982449"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<isize> as ops::bit::BitAndAssign<&isize>>::bitand_assign",
    "hash": "147284944896508261743680101682664687251"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<isize> as ops::bit::BitAndAssign<&num::saturating::Saturating<isize>>>::bitand_assign",
    "hash": "72670101930894263219342139938026873908"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<isize> as ops::bit::BitOr<&num::saturating::Saturating<isize>>>::bitor",
    "hash": "79218962765212155366896762661685801316"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<isize> as ops::bit::BitOrAssign<&isize>>::bitor_assign",
    "hash": "5181601176800762821013186447881059164"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<isize> as ops::bit::BitOrAssign<&num::saturating::Saturating<isize>>>::bitor_assign",
    "hash": "61891349833805878227127057255139785898"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<isize> as ops::bit::BitXor<&num::saturating::Saturating<isize>>>::bitxor",
    "hash": "26681542414777859852284861864675253978"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<isize> as ops::bit::BitXorAssign<&isize>>::bitxor_assign",
    "hash": "69543915326927445216176611421710216778"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<isize> as ops::bit::BitXorAssign<&num::saturating::Saturating<isize>>>::bitxor_assign",
    "hash": "2836281492040191721817926440400217444"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u128> as ops::arith::Add<&num::saturating::Saturating<u128>>>::add",
    "hash": "49442882566051851078531166387890292501"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u128> as ops::arith::AddAssign<&num::saturating::Saturating<u128>>>::add_assign",
    "hash": "28039353022804140912873299484154355486"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u128> as ops::arith::AddAssign<&u128>>::add_assign",
    "hash": "1583013106238003589610684471778468117312"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u128> as ops::arith::Div<&num::saturating::Saturating<u128>>>::div",
    "hash": "1357588278167649845017245083568352341160"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u128> as ops::arith::DivAssign<&num::saturating::Saturating<u128>>>::div_assign",
    "hash": "77533426882240492695259239387669416283"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u128> as ops::arith::DivAssign<&u128>>::div_assign",
    "hash": "676729893412333840118121173382843527357"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u128> as ops::arith::Mul<&num::saturating::Saturating<u128>>>::mul",
    "hash": "159014383215219393715176788439365153637"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u128> as ops::arith::MulAssign<&num::saturating::Saturating<u128>>>::mul_assign",
    "hash": "195782328787494537916603793842616769835"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u128> as ops::arith::MulAssign<&u128>>::mul_assign",
    "hash": "149275854094016294366302432293541920392"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u128> as ops::arith::Rem<&num::saturating::Saturating<u128>>>::rem",
    "hash": "163556774947860797655224522067858186496"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u128> as ops::arith::RemAssign<&num::saturating::Saturating<u128>>>::rem_assign",
    "hash": "1566069568485401192813118522937537028463"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u128> as ops::arith::RemAssign<&u128>>::rem_assign",
    "hash": "38163302143418994404394971799080005454"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u128> as ops::arith::Sub<&num::saturating::Saturating<u128>>>::sub",
    "hash": "731123202831970358717724867634384885225"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u128> as ops::arith::SubAssign<&num::saturating::Saturating<u128>>>::sub_assign",
    "hash": "262239730365943115511773258742786042521"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u128> as ops::arith::SubAssign<&u128>>::sub_assign",
    "hash": "653187290822363966911772298579542075060"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u128> as ops::bit::BitAnd<&num::saturating::Saturating<u128>>>::bitand",
    "hash": "1586612142195618290517082560964781137237"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u128> as ops::bit::BitAndAssign<&num::saturating::Saturating<u128>>>::bitand_assign",
    "hash": "54984976903597886287716087611938207853"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u128> as ops::bit::BitAndAssign<&u128>>::bitand_assign",
    "hash": "632628476416999833016082340918613957428"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u128> as ops::bit::BitOr<&num::saturating::Saturating<u128>>>::bitor",
    "hash": "84364849138670844921396920328382591317"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u128> as ops::bit::BitOrAssign<&num::saturating::Saturating<u128>>>::bitor_assign",
    "hash": "1544395190171079460515943706947553123463"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u128> as ops::bit::BitOrAssign<&u128>>::bitor_assign",
    "hash": "999762568023288536914835701195807197625"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u128> as ops::bit::BitXor<&num::saturating::Saturating<u128>>>::bitxor",
    "hash": "163637080908547485559601646284630024574"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u128> as ops::bit::BitXorAssign<&num::saturating::Saturating<u128>>>::bitxor_assign",
    "hash": "26982233871198899465682050328857869417"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u128> as ops::bit::BitXorAssign<&u128>>::bitxor_assign",
    "hash": "95033304847011108713079148655432245339"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u16> as ops::arith::Add<&num::saturating::Saturating<u16>>>::add",
    "hash": "1197361496985925985416188961459172896476"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u16> as ops::arith::AddAssign<&num::saturating::Saturating<u16>>>::add_assign",
    "hash": "654921537011911672314958859751719111323"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u16> as ops::arith::AddAssign<&u16>>::add_assign",
    "hash": "1820489104621172938416880798009706685489"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u16> as ops::arith::Div<&num::saturating::Saturating<u16>>>::div",
    "hash": "1135946581801381781615842417088158593319"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u16> as ops::arith::DivAssign<&num::saturating::Saturating<u16>>>::div_assign",
    "hash": "2694508566471904353756304471391795199"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u16> as ops::arith::DivAssign<&u16>>::div_assign",
    "hash": "63906330632763797198390998297468444343"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u16> as ops::arith::Mul<&num::saturating::Saturating<u16>>>::mul",
    "hash": "283253179364602782910079037173970809756"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u16> as ops::arith::MulAssign<&num::saturating::Saturating<u16>>>::mul_assign",
    "hash": "6094439783641276934838472290559723896"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u16> as ops::arith::MulAssign<&u16>>::mul_assign",
    "hash": "143785197316383370006683103392008459671"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u16> as ops::arith::Rem<&num::saturating::Saturating<u16>>>::rem",
    "hash": "1962619729674023897070691785184731224"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u16> as ops::arith::RemAssign<&num::saturating::Saturating<u16>>>::rem_assign",
    "hash": "35999378691656211218219924263213566633"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u16> as ops::arith::RemAssign<&u16>>::rem_assign",
    "hash": "661367153813290968813627858567104176419"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u16> as ops::arith::Sub<&num::saturating::Saturating<u16>>>::sub",
    "hash": "1141975081554052715015112086357089028431"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u16> as ops::arith::SubAssign<&num::saturating::Saturating<u16>>>::sub_assign",
    "hash": "1335155599577609325317168539619789843148"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u16> as ops::arith::SubAssign<&u16>>::sub_assign",
    "hash": "717888935197506304613582750293296397596"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u16> as ops::bit::BitAnd<&num::saturating::Saturating<u16>>>::bitand",
    "hash": "30947355874017412184521521477381485911"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u16> as ops::bit::BitAndAssign<&num::saturating::Saturating<u16>>>::bitand_assign",
    "hash": "151596165237081842193547288544484158068"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u16> as ops::bit::BitAndAssign<&u16>>::bitand_assign",
    "hash": "83165162482076394973234413095570391848"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u16> as ops::bit::BitOr<&num::saturating::Saturating<u16>>>::bitor",
    "hash": "92029479624834062757663099122447404729"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u16> as ops::bit::BitOrAssign<&num::saturating::Saturating<u16>>>::bitor_assign",
    "hash": "64920976184836815999364181920911412990"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u16> as ops::bit::BitOrAssign<&u16>>::bitor_assign",
    "hash": "1476942745280885018915096292121061916650"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u16> as ops::bit::BitXor<&num::saturating::Saturating<u16>>>::bitxor",
    "hash": "15932873330975320679577371101163045279"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u16> as ops::bit::BitXorAssign<&num::saturating::Saturating<u16>>>::bitxor_assign",
    "hash": "111322053000772895555035689801420744630"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u16> as ops::bit::BitXorAssign<&u16>>::bitxor_assign",
    "hash": "85703190794730706495899628676810535655"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u32> as ops::arith::Add<&num::saturating::Saturating<u32>>>::add",
    "hash": "65700788665701126609429833745872034022"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u32> as ops::arith::AddAssign<&num::saturating::Saturating<u32>>>::add_assign",
    "hash": "48872133292283917485812458675000726017"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u32> as ops::arith::AddAssign<&u32>>::add_assign",
    "hash": "970713090864650849714903061170429975065"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u32> as ops::arith::Div<&num::saturating::Saturating<u32>>>::div",
    "hash": "1536173180532482091211021574535517463850"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u32> as ops::arith::DivAssign<&num::saturating::Saturating<u32>>>::div_assign",
    "hash": "372598497767089254315336092213113794970"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u32> as ops::arith::DivAssign<&u32>>::div_assign",
    "hash": "152365965496839559329082865340460909953"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u32> as ops::arith::Mul<&num::saturating::Saturating<u32>>>::mul",
    "hash": "1329905200663403578116794778463321320436"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u32> as ops::arith::MulAssign<&num::saturating::Saturating<u32>>>::mul_assign",
    "hash": "347204030714035160416158872910740464594"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u32> as ops::arith::MulAssign<&u32>>::mul_assign",
    "hash": "119726172062676999912574077882275229916"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u32> as ops::arith::Rem<&num::saturating::Saturating<u32>>>::rem",
    "hash": "1302159762166697474012786447180712964454"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u32> as ops::arith::RemAssign<&num::saturating::Saturating<u32>>>::rem_assign",
    "hash": "172900726955334710866638022908024748271"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u32> as ops::arith::RemAssign<&u32>>::rem_assign",
    "hash": "1705717573863604320213620451645942888526"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u32> as ops::arith::Sub<&num::saturating::Saturating<u32>>>::sub",
    "hash": "1777915280930768825415489701175979166761"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u32> as ops::arith::SubAssign<&num::saturating::Saturating<u32>>>::sub_assign",
    "hash": "136690549437429972223806942202365055039"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u32> as ops::arith::SubAssign<&u32>>::sub_assign",
    "hash": "125170193963028238112218028303017375264"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u32> as ops::bit::BitAnd<&num::saturating::Saturating<u32>>>::bitand",
    "hash": "181608571557069981589070661142071295986"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u32> as ops::bit::BitAndAssign<&num::saturating::Saturating<u32>>>::bitand_assign",
    "hash": "1329907767304454515014686086202903455510"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u32> as ops::bit::BitAndAssign<&u32>>::bitand_assign",
    "hash": "126014217170929718441538537527859467760"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u32> as ops::bit::BitOr<&num::saturating::Saturating<u32>>>::bitor",
    "hash": "1428195191825694474414977553925550876211"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u32> as ops::bit::BitOrAssign<&num::saturating::Saturating<u32>>>::bitor_assign",
    "hash": "650200476049364264313797680493317413466"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u32> as ops::bit::BitOrAssign<&u32>>::bitor_assign",
    "hash": "83925411088114686674139893662956208679"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u32> as ops::bit::BitXor<&num::saturating::Saturating<u32>>>::bitxor",
    "hash": "234901542025814248913669597192070235548"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u32> as ops::bit::BitXorAssign<&num::saturating::Saturating<u32>>>::bitxor_assign",
    "hash": "328379662672357389910075555631831375573"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u32> as ops::bit::BitXorAssign<&u32>>::bitxor_assign",
    "hash": "65060911874222312785949373520593537127"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u64> as ops::arith::Add<&num::saturating::Saturating<u64>>>::add",
    "hash": "131035497968395196592156247776998870646"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u64> as ops::arith::AddAssign<&num::saturating::Saturating<u64>>>::add_assign",
    "hash": "137965833231588655995353138566645159972"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u64> as ops::arith::AddAssign<&u64>>::add_assign",
    "hash": "122927229307999923576106782372686542136"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u64> as ops::arith::Div<&num::saturating::Saturating<u64>>>::div",
    "hash": "402679776521479489818421608671226285192"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u64> as ops::arith::DivAssign<&num::saturating::Saturating<u64>>>::div_assign",
    "hash": "150295818227117895969203926617278216157"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u64> as ops::arith::DivAssign<&u64>>::div_assign",
    "hash": "152490473470571483464602485843869347724"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u64> as ops::arith::Mul<&num::saturating::Saturating<u64>>>::mul",
    "hash": "36937587002905584865439455565341338182"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u64> as ops::arith::MulAssign<&num::saturating::Saturating<u64>>>::mul_assign",
    "hash": "1148813431673751277712791636462462683941"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u64> as ops::arith::MulAssign<&u64>>::mul_assign",
    "hash": "389693365346947777912767089952964989012"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u64> as ops::arith::Rem<&num::saturating::Saturating<u64>>>::rem",
    "hash": "86436231788569726841493102178695213860"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u64> as ops::arith::RemAssign<&num::saturating::Saturating<u64>>>::rem_assign",
    "hash": "144912683914811053926693833333147886520"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u64> as ops::arith::RemAssign<&u64>>::rem_assign",
    "hash": "1067448139644896035417136461202210404442"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u64> as ops::arith::Sub<&num::saturating::Saturating<u64>>>::sub",
    "hash": "17733997711299208001196669283029504093"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u64> as ops::arith::SubAssign<&num::saturating::Saturating<u64>>>::sub_assign",
    "hash": "69470194789715015235540729975290725337"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u64> as ops::arith::SubAssign<&u64>>::sub_assign",
    "hash": "115426036598459034832301128434279455853"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u64> as ops::bit::BitAnd<&num::saturating::Saturating<u64>>>::bitand",
    "hash": "118434218828739610836920811020669849759"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u64> as ops::bit::BitAndAssign<&num::saturating::Saturating<u64>>>::bitand_assign",
    "hash": "96318577598294560826676454467039705238"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u64> as ops::bit::BitAndAssign<&u64>>::bitand_assign",
    "hash": "3359871319813181232021252761714116880"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u64> as ops::bit::BitOr<&num::saturating::Saturating<u64>>>::bitor",
    "hash": "1388011547326450790610939860520438455844"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u64> as ops::bit::BitOrAssign<&num::saturating::Saturating<u64>>>::bitor_assign",
    "hash": "94440777663390981474538085821413136946"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u64> as ops::bit::BitOrAssign<&u64>>::bitor_assign",
    "hash": "991815182936113900311851837777046048331"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u64> as ops::bit::BitXor<&num::saturating::Saturating<u64>>>::bitxor",
    "hash": "44143631107288872365717766772506979472"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u64> as ops::bit::BitXorAssign<&num::saturating::Saturating<u64>>>::bitxor_assign",
    "hash": "1119097468660158010615199673233601732659"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u64> as ops::bit::BitXorAssign<&u64>>::bitxor_assign",
    "hash": "104352739706528051187782507719615929773"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u8> as ops::arith::Add<&num::saturating::Saturating<u8>>>::add",
    "hash": "256981360486601251917852210562188857583"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u8> as ops::arith::AddAssign<&num::saturating::Saturating<u8>>>::add_assign",
    "hash": "75201802544935707177234193346566725620"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u8> as ops::arith::AddAssign<&u8>>::add_assign",
    "hash": "1603902348584581421310977661676874653685"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u8> as ops::arith::Div<&num::saturating::Saturating<u8>>>::div",
    "hash": "89404181131365061586712550382129596679"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u8> as ops::arith::DivAssign<&num::saturating::Saturating<u8>>>::div_assign",
    "hash": "1351444103206132452618090549236998031136"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u8> as ops::arith::DivAssign<&u8>>::div_assign",
    "hash": "1263460066720486466210880279014035164474"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u8> as ops::arith::Mul<&num::saturating::Saturating<u8>>>::mul",
    "hash": "173849941381110514844346425688793678611"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u8> as ops::arith::MulAssign<&num::saturating::Saturating<u8>>>::mul_assign",
    "hash": "31105055761114616534057353687784985666"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u8> as ops::arith::MulAssign<&u8>>::mul_assign",
    "hash": "125636047413597445112885870556329940618"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u8> as ops::arith::Rem<&num::saturating::Saturating<u8>>>::rem",
    "hash": "1827329930798182313518183669026304175863"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u8> as ops::arith::RemAssign<&num::saturating::Saturating<u8>>>::rem_assign",
    "hash": "60768713471428322428799015960623502607"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u8> as ops::arith::RemAssign<&u8>>::rem_assign",
    "hash": "204012584163302876513224593809435318239"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u8> as ops::arith::Sub<&num::saturating::Saturating<u8>>>::sub",
    "hash": "895698389663785244615920894779348136630"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u8> as ops::arith::SubAssign<&num::saturating::Saturating<u8>>>::sub_assign",
    "hash": "60833967359896214733132371566038210359"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u8> as ops::arith::SubAssign<&u8>>::sub_assign",
    "hash": "20090572678147224427646450196629327148"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u8> as ops::bit::BitAnd<&num::saturating::Saturating<u8>>>::bitand",
    "hash": "144613412197365605414831411752624341748"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u8> as ops::bit::BitAndAssign<&num::saturating::Saturating<u8>>>::bitand_assign",
    "hash": "1530675555285175003011707008938381030725"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u8> as ops::bit::BitAndAssign<&u8>>::bitand_assign",
    "hash": "137220210331350433778522945167503097813"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u8> as ops::bit::BitOr<&num::saturating::Saturating<u8>>>::bitor",
    "hash": "138933086039407254504062016832526667590"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u8> as ops::bit::BitOrAssign<&num::saturating::Saturating<u8>>>::bitor_assign",
    "hash": "63618192934903793643252157524356499043"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u8> as ops::bit::BitOrAssign<&u8>>::bitor_assign",
    "hash": "1284833368630121245711461346407701377824"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u8> as ops::bit::BitXor<&num::saturating::Saturating<u8>>>::bitxor",
    "hash": "666074730341997351614378745336125407564"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u8> as ops::bit::BitXorAssign<&num::saturating::Saturating<u8>>>::bitxor_assign",
    "hash": "78300212117258375992040617561883417759"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u8> as ops::bit::BitXorAssign<&u8>>::bitxor_assign",
    "hash": "393669793514660588912161635742338418591"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<usize> as ops::arith::Add<&num::saturating::Saturating<usize>>>::add",
    "hash": "102705797413420797731448226168188001386"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<usize> as ops::arith::AddAssign<&num::saturating::Saturating<usize>>>::add_assign",
    "hash": "834842646665330207317268831505962836513"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<usize> as ops::arith::AddAssign<&usize>>::add_assign",
    "hash": "626526239477015478811011404694514735006"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<usize> as ops::arith::Div<&num::saturating::Saturating<usize>>>::div",
    "hash": "493720744934807450815288564388611641603"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<usize> as ops::arith::DivAssign<&num::saturating::Saturating<usize>>>::div_assign",
    "hash": "102678094426085179899517833352792164696"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<usize> as ops::arith::DivAssign<&usize>>::div_assign",
    "hash": "1179103250495024188014294664355445593898"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<usize> as ops::arith::Mul<&num::saturating::Saturating<usize>>>::mul",
    "hash": "17844143077449266879860933623854281493"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<usize> as ops::arith::MulAssign<&num::saturating::Saturating<usize>>>::mul_assign",
    "hash": "162860923789749011138034619093912820646"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<usize> as ops::arith::MulAssign<&usize>>::mul_assign",
    "hash": "14371684118692680864439748403244116406"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<usize> as ops::arith::Rem<&num::saturating::Saturating<usize>>>::rem",
    "hash": "22045961939121551729579655006471649359"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<usize> as ops::arith::RemAssign<&num::saturating::Saturating<usize>>>::rem_assign",
    "hash": "1595567593176112730816444196220172646507"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<usize> as ops::arith::RemAssign<&usize>>::rem_assign",
    "hash": "431796685477969191411024457445209626282"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<usize> as ops::arith::Sub<&num::saturating::Saturating<usize>>>::sub",
    "hash": "123923506425776291345081115493553011732"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<usize> as ops::arith::SubAssign<&num::saturating::Saturating<usize>>>::sub_assign",
    "hash": "253272233988441541910545807010040140673"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<usize> as ops::arith::SubAssign<&usize>>::sub_assign",
    "hash": "96018485304479465936101100156663638772"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<usize> as ops::bit::BitAnd<&num::saturating::Saturating<usize>>>::bitand",
    "hash": "398189656834025967513417660547987239721"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<usize> as ops::bit::BitAndAssign<&num::saturating::Saturating<usize>>>::bitand_assign",
    "hash": "369064201012240729516988436661022257571"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<usize> as ops::bit::BitAndAssign<&usize>>::bitand_assign",
    "hash": "1212785386216276259613074035633317290741"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<usize> as ops::bit::BitOr<&num::saturating::Saturating<usize>>>::bitor",
    "hash": "1389484483259841215616490833099015155871"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<usize> as ops::bit::BitOrAssign<&num::saturating::Saturating<usize>>>::bitor_assign",
    "hash": "150472673215144657795798049364469141003"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<usize> as ops::bit::BitOrAssign<&usize>>::bitor_assign",
    "hash": "142734499517809557552112197976406142610"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<usize> as ops::bit::BitXor<&num::saturating::Saturating<usize>>>::bitxor",
    "hash": "467291627211184368312523988874046611380"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<usize> as ops::bit::BitXorAssign<&num::saturating::Saturating<usize>>>::bitxor_assign",
    "hash": "168951480305374336473408137879471269827"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<usize> as ops::bit::BitXorAssign<&usize>>::bitxor_assign",
    "hash": "1484424056815599283115486480099759226680"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i128> as ops::arith::Add<&num::wrapping::Wrapping<i128>>>::add",
    "hash": "167049939151429979337677159550347235441"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i128> as ops::arith::AddAssign<&i128>>::add_assign",
    "hash": "140310341368221587389388589682153347393"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i128> as ops::arith::AddAssign<&num::wrapping::Wrapping<i128>>>::add_assign",
    "hash": "178631123225916650091729806230077958866"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i128> as ops::arith::Div<&num::wrapping::Wrapping<i128>>>::div",
    "hash": "33357440416086045427662048920316966505"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i128> as ops::arith::DivAssign<&i128>>::div_assign",
    "hash": "259949932135618138715966624525435923239"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i128> as ops::arith::DivAssign<&num::wrapping::Wrapping<i128>>>::div_assign",
    "hash": "317440414193581668210830774329520307819"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i128> as ops::arith::Mul<&num::wrapping::Wrapping<i128>>>::mul",
    "hash": "116397956790155350679770487915940070037"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i128> as ops::arith::MulAssign<&i128>>::mul_assign",
    "hash": "62070348563756824513601812147962025976"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i128> as ops::arith::MulAssign<&num::wrapping::Wrapping<i128>>>::mul_assign",
    "hash": "59702298260322996961124264298858984053"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i128> as ops::arith::Rem<&num::wrapping::Wrapping<i128>>>::rem",
    "hash": "1213097308551147298910720912616920660936"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i128> as ops::arith::RemAssign<&i128>>::rem_assign",
    "hash": "91028777976512405599302130388855816297"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i128> as ops::arith::RemAssign<&num::wrapping::Wrapping<i128>>>::rem_assign",
    "hash": "5021822277632623426288841901508586032"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i128> as ops::arith::Sub<&num::wrapping::Wrapping<i128>>>::sub",
    "hash": "168698932948476853017637190414327814580"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i128> as ops::arith::SubAssign<&i128>>::sub_assign",
    "hash": "90319565330750622828841880285024422189"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i128> as ops::arith::SubAssign<&num::wrapping::Wrapping<i128>>>::sub_assign",
    "hash": "8571014735037937410210263722605548895"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i128> as ops::bit::BitAnd<&num::wrapping::Wrapping<i128>>>::bitand",
    "hash": "10112753626300529591849255109706264945"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i128> as ops::bit::BitAndAssign<&i128>>::bitand_assign",
    "hash": "888601222372597156012453513633497487977"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i128> as ops::bit::BitAndAssign<&num::wrapping::Wrapping<i128>>>::bitand_assign",
    "hash": "1754232287511276820113472740898059626677"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i128> as ops::bit::BitOr<&num::wrapping::Wrapping<i128>>>::bitor",
    "hash": "30764207410714678171033087770602468213"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i128> as ops::bit::BitOrAssign<&i128>>::bitor_assign",
    "hash": "53586027615008256721947021578277412611"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i128> as ops::bit::BitOrAssign<&num::wrapping::Wrapping<i128>>>::bitor_assign",
    "hash": "1398755961226854633418372709167441202062"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i128> as ops::bit::BitXor<&num::wrapping::Wrapping<i128>>>::bitxor",
    "hash": "1176357627164153253410845823822079072235"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i128> as ops::bit::BitXorAssign<&i128>>::bitxor_assign",
    "hash": "98606303936150562769161631115889844028"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i128> as ops::bit::BitXorAssign<&num::wrapping::Wrapping<i128>>>::bitxor_assign",
    "hash": "848689674774025239815015918853055095993"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i128> as ops::bit::Shl<&usize>>::shl",
    "hash": "1556468762768546602411052434335678002502"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i128> as ops::bit::ShlAssign<&usize>>::shl_assign",
    "hash": "149183708395774802353701553084883696141"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i128> as ops::bit::Shr<&usize>>::shr",
    "hash": "89669856794780731966221438109875385600"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i128> as ops::bit::ShrAssign<&usize>>::shr_assign",
    "hash": "59430665082724359295902230811297146662"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i16> as ops::arith::Add<&num::wrapping::Wrapping<i16>>>::add",
    "hash": "85865253479322730402432105272620998171"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i16> as ops::arith::AddAssign<&i16>>::add_assign",
    "hash": "17240636234886698179293092122208866036"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i16> as ops::arith::AddAssign<&num::wrapping::Wrapping<i16>>>::add_assign",
    "hash": "796338753500268826315863270004399154068"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i16> as ops::arith::Div<&num::wrapping::Wrapping<i16>>>::div",
    "hash": "1075406616990903513613880547259634089272"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i16> as ops::arith::DivAssign<&i16>>::div_assign",
    "hash": "579411885331755943214302317768695716142"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i16> as ops::arith::DivAssign<&num::wrapping::Wrapping<i16>>>::div_assign",
    "hash": "153333490993259579910001274680810707377"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i16> as ops::arith::Mul<&num::wrapping::Wrapping<i16>>>::mul",
    "hash": "75078797440644740258673498357128394498"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i16> as ops::arith::MulAssign<&i16>>::mul_assign",
    "hash": "176514510334848133254930202217879135758"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i16> as ops::arith::MulAssign<&num::wrapping::Wrapping<i16>>>::mul_assign",
    "hash": "149265561152099277212629309659797335040"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i16> as ops::arith::Rem<&num::wrapping::Wrapping<i16>>>::rem",
    "hash": "644307763493969084012100619503281040650"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i16> as ops::arith::RemAssign<&i16>>::rem_assign",
    "hash": "49377609866481267121151824021499956498"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i16> as ops::arith::RemAssign<&num::wrapping::Wrapping<i16>>>::rem_assign",
    "hash": "307191090457115945211015104759120897583"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i16> as ops::arith::Sub<&num::wrapping::Wrapping<i16>>>::sub",
    "hash": "789984552048446525214810889665472610163"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i16> as ops::arith::SubAssign<&i16>>::sub_assign",
    "hash": "94976457412970565762043570220583911384"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i16> as ops::arith::SubAssign<&num::wrapping::Wrapping<i16>>>::sub_assign",
    "hash": "726585565967072472415904805367053082436"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i16> as ops::bit::BitAnd<&num::wrapping::Wrapping<i16>>>::bitand",
    "hash": "187656301853131112017935755307930590385"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i16> as ops::bit::BitAndAssign<&i16>>::bitand_assign",
    "hash": "124238343662381942323375836893880332590"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i16> as ops::bit::BitAndAssign<&num::wrapping::Wrapping<i16>>>::bitand_assign",
    "hash": "546353379616730951215489298901471681910"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i16> as ops::bit::BitOr<&num::wrapping::Wrapping<i16>>>::bitor",
    "hash": "1740930292932491118516919971564517303535"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i16> as ops::bit::BitOrAssign<&i16>>::bitor_assign",
    "hash": "1366176245266904286611969867878711188972"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i16> as ops::bit::BitOrAssign<&num::wrapping::Wrapping<i16>>>::bitor_assign",
    "hash": "22904260270781805825527643875672830758"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i16> as ops::bit::BitXor<&num::wrapping::Wrapping<i16>>>::bitxor",
    "hash": "16505410653546204613678182724362187591"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i16> as ops::bit::BitXorAssign<&i16>>::bitxor_assign",
    "hash": "823029901611996000812811022380080538931"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i16> as ops::bit::BitXorAssign<&num::wrapping::Wrapping<i16>>>::bitxor_assign",
    "hash": "52029801296215555855866701039645195668"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i16> as ops::bit::Shl<&usize>>::shl",
    "hash": "103150036305457619021780050058173249931"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i16> as ops::bit::ShlAssign<&usize>>::shl_assign",
    "hash": "167243536786081471237829892309974914440"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i16> as ops::bit::Shr<&usize>>::shr",
    "hash": "96143772514776184710916299057936161950"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i16> as ops::bit::ShrAssign<&usize>>::shr_assign",
    "hash": "90425832618903873478222663855036235051"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i32> as ops::arith::Add<&num::wrapping::Wrapping<i32>>>::add",
    "hash": "605917800342690213116004884980903630172"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i32> as ops::arith::AddAssign<&i32>>::add_assign",
    "hash": "1226619282275204828713392838669602539498"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i32> as ops::arith::AddAssign<&num::wrapping::Wrapping<i32>>>::add_assign",
    "hash": "149326577646246857075355674051114048986"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i32> as ops::arith::Div<&num::wrapping::Wrapping<i32>>>::div",
    "hash": "51447153077589102879460969216054921786"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i32> as ops::arith::DivAssign<&i32>>::div_assign",
    "hash": "144045839836556545488600795472204354407"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i32> as ops::arith::DivAssign<&num::wrapping::Wrapping<i32>>>::div_assign",
    "hash": "69570633332390119289743991772147039250"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i32> as ops::arith::Mul<&num::wrapping::Wrapping<i32>>>::mul",
    "hash": "5891822538068576799269888229536485451"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i32> as ops::arith::MulAssign<&i32>>::mul_assign",
    "hash": "1843650007863789575811095485063839127128"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i32> as ops::arith::MulAssign<&num::wrapping::Wrapping<i32>>>::mul_assign",
    "hash": "84415348781406006793612500643749469115"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i32> as ops::arith::Rem<&num::wrapping::Wrapping<i32>>>::rem",
    "hash": "106071823627929638956600543150262134355"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i32> as ops::arith::RemAssign<&i32>>::rem_assign",
    "hash": "1522939831656415955314588852458079780307"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i32> as ops::arith::RemAssign<&num::wrapping::Wrapping<i32>>>::rem_assign",
    "hash": "115823605201722183047350744195849611428"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i32> as ops::arith::Sub<&num::wrapping::Wrapping<i32>>>::sub",
    "hash": "149982662725107807961837615943719095463"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i32> as ops::arith::SubAssign<&i32>>::sub_assign",
    "hash": "339121507382122160212709342379708724322"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i32> as ops::arith::SubAssign<&num::wrapping::Wrapping<i32>>>::sub_assign",
    "hash": "123875832971699059862325060122958193507"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i32> as ops::bit::BitAnd<&num::wrapping::Wrapping<i32>>>::bitand",
    "hash": "793463926299434503817346604502825159520"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i32> as ops::bit::BitAndAssign<&i32>>::bitand_assign",
    "hash": "74691509261521790616529908734321462931"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i32> as ops::bit::BitAndAssign<&num::wrapping::Wrapping<i32>>>::bitand_assign",
    "hash": "899971373615221393312226246888423192021"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i32> as ops::bit::BitOr<&num::wrapping::Wrapping<i32>>>::bitor",
    "hash": "94166221813969345217243225650979077008"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i32> as ops::bit::BitOrAssign<&i32>>::bitor_assign",
    "hash": "182543189080745557116261659331138443974"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i32> as ops::bit::BitOrAssign<&num::wrapping::Wrapping<i32>>>::bitor_assign",
    "hash": "5580352657957916389114044101626258298"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i32> as ops::bit::BitXor<&num::wrapping::Wrapping<i32>>>::bitxor",
    "hash": "109846369256452202968466291194850559269"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i32> as ops::bit::BitXorAssign<&i32>>::bitxor_assign",
    "hash": "1127887004726246338899715202039724132"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i32> as ops::bit::BitXorAssign<&num::wrapping::Wrapping<i32>>>::bitxor_assign",
    "hash": "416140274399719526511250747798861194676"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i32> as ops::bit::Shl<&usize>>::shl",
    "hash": "106767526455910281718525842127909968670"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i32> as ops::bit::ShlAssign<&usize>>::shl_assign",
    "hash": "111352212610743074865781683068076178073"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i32> as ops::bit::Shr<&usize>>::shr",
    "hash": "850848825994318521962748579124071846"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i32> as ops::bit::ShrAssign<&usize>>::shr_assign",
    "hash": "1024112593380615358310004553807677922278"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i64> as ops::arith::Add<&num::wrapping::Wrapping<i64>>>::add",
    "hash": "76726243451236400721039465484613721080"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i64> as ops::arith::AddAssign<&i64>>::add_assign",
    "hash": "88378572599516381739713463058440712232"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i64> as ops::arith::AddAssign<&num::wrapping::Wrapping<i64>>>::add_assign",
    "hash": "160349405750842641249306945184699365454"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i64> as ops::arith::Div<&num::wrapping::Wrapping<i64>>>::div",
    "hash": "173853451916111139975704007302714335672"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i64> as ops::arith::DivAssign<&i64>>::div_assign",
    "hash": "9799073682605393155768173093463156951"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i64> as ops::arith::DivAssign<&num::wrapping::Wrapping<i64>>>::div_assign",
    "hash": "650622477565990484814292474805774274838"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i64> as ops::arith::Mul<&num::wrapping::Wrapping<i64>>>::mul",
    "hash": "1414560225899109618110827294614152151078"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i64> as ops::arith::MulAssign<&i64>>::mul_assign",
    "hash": "169885449900541380598328006522470515591"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i64> as ops::arith::MulAssign<&num::wrapping::Wrapping<i64>>>::mul_assign",
    "hash": "954934739757445948210718729341991497440"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i64> as ops::arith::Rem<&num::wrapping::Wrapping<i64>>>::rem",
    "hash": "163737212973989282131034122697196846932"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i64> as ops::arith::RemAssign<&i64>>::rem_assign",
    "hash": "176542528922489597406850811318137434136"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i64> as ops::arith::RemAssign<&num::wrapping::Wrapping<i64>>>::rem_assign",
    "hash": "1189955499999449722611221483154792645323"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i64> as ops::arith::Sub<&num::wrapping::Wrapping<i64>>>::sub",
    "hash": "161466551033711783548482155806204245645"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i64> as ops::arith::SubAssign<&i64>>::sub_assign",
    "hash": "30963439452645752512040950351133281335"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i64> as ops::arith::SubAssign<&num::wrapping::Wrapping<i64>>>::sub_assign",
    "hash": "83664163200722128699761958039446862634"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i64> as ops::bit::BitAnd<&num::wrapping::Wrapping<i64>>>::bitand",
    "hash": "728445270648883664410071608452660816292"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i64> as ops::bit::BitAndAssign<&i64>>::bitand_assign",
    "hash": "129961742192546887511914539199903339297"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i64> as ops::bit::BitAndAssign<&num::wrapping::Wrapping<i64>>>::bitand_assign",
    "hash": "45566724884160501329358117929448450084"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i64> as ops::bit::BitOr<&num::wrapping::Wrapping<i64>>>::bitor",
    "hash": "1036200127659718295916048383252909054024"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i64> as ops::bit::BitOrAssign<&i64>>::bitor_assign",
    "hash": "619383975993713697017063995002482328022"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i64> as ops::bit::BitOrAssign<&num::wrapping::Wrapping<i64>>>::bitor_assign",
    "hash": "26525643419649402895999123800662620889"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i64> as ops::bit::BitXor<&num::wrapping::Wrapping<i64>>>::bitxor",
    "hash": "983532210357934792413269715557241428982"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i64> as ops::bit::BitXorAssign<&i64>>::bitxor_assign",
    "hash": "536489799223263311311104416884596014431"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i64> as ops::bit::BitXorAssign<&num::wrapping::Wrapping<i64>>>::bitxor_assign",
    "hash": "92833682644123120719795460593568822263"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i64> as ops::bit::Shl<&usize>>::shl",
    "hash": "620551491467081400610382329823072995084"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i64> as ops::bit::ShlAssign<&usize>>::shl_assign",
    "hash": "6997509109617620591430289156062907812"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i64> as ops::bit::Shr<&usize>>::shr",
    "hash": "870510783821087374913203854059001561777"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i64> as ops::bit::ShrAssign<&usize>>::shr_assign",
    "hash": "164092206531148149401056212865799114786"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i8> as ops::arith::Add<&num::wrapping::Wrapping<i8>>>::add",
    "hash": "86977026033720087782197961074237027371"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i8> as ops::arith::AddAssign<&i8>>::add_assign",
    "hash": "1597427600291263960915205239954282901422"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i8> as ops::arith::AddAssign<&num::wrapping::Wrapping<i8>>>::add_assign",
    "hash": "1161772928522719800918227613171421104794"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i8> as ops::arith::Div<&num::wrapping::Wrapping<i8>>>::div",
    "hash": "881442722825041402211272035877713595135"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i8> as ops::arith::DivAssign<&i8>>::div_assign",
    "hash": "42645494655839522373017791410494433575"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i8> as ops::arith::DivAssign<&num::wrapping::Wrapping<i8>>>::div_assign",
    "hash": "77861019350038525949170834713102364313"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i8> as ops::arith::Mul<&num::wrapping::Wrapping<i8>>>::mul",
    "hash": "149295392574210352562611085178450989985"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i8> as ops::arith::MulAssign<&i8>>::mul_assign",
    "hash": "91473431909864802987152773701854035414"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i8> as ops::arith::MulAssign<&num::wrapping::Wrapping<i8>>>::mul_assign",
    "hash": "44890038723401174243523511892803487162"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i8> as ops::arith::Rem<&num::wrapping::Wrapping<i8>>>::rem",
    "hash": "61507628023300740423544791466065930877"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i8> as ops::arith::RemAssign<&i8>>::rem_assign",
    "hash": "1277476303126219331814479199923762521780"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i8> as ops::arith::RemAssign<&num::wrapping::Wrapping<i8>>>::rem_assign",
    "hash": "1078854496939115780712437509708629517156"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i8> as ops::arith::Sub<&num::wrapping::Wrapping<i8>>>::sub",
    "hash": "110181946140794072255721489193471572356"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i8> as ops::arith::SubAssign<&i8>>::sub_assign",
    "hash": "1004216986027465988511738566846761682178"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i8> as ops::arith::SubAssign<&num::wrapping::Wrapping<i8>>>::sub_assign",
    "hash": "17926562591579831505851411351659414454"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i8> as ops::bit::BitAnd<&num::wrapping::Wrapping<i8>>>::bitand",
    "hash": "430552428336040316410808342675202099332"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i8> as ops::bit::BitAndAssign<&i8>>::bitand_assign",
    "hash": "1191841443975983091513288140073217032423"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i8> as ops::bit::BitAndAssign<&num::wrapping::Wrapping<i8>>>::bitand_assign",
    "hash": "409322855453674698313837696642162818614"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i8> as ops::bit::BitOr<&num::wrapping::Wrapping<i8>>>::bitor",
    "hash": "880558134298026146716189467349772059562"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i8> as ops::bit::BitOrAssign<&i8>>::bitor_assign",
    "hash": "32707347472066704655658934683516837653"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i8> as ops::bit::BitOrAssign<&num::wrapping::Wrapping<i8>>>::bitor_assign",
    "hash": "520860117520266249012171909513912915409"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i8> as ops::bit::BitXor<&num::wrapping::Wrapping<i8>>>::bitxor",
    "hash": "1449464577861016864610187076186218761992"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i8> as ops::bit::BitXorAssign<&i8>>::bitxor_assign",
    "hash": "829778417933022489816073611476232512972"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i8> as ops::bit::BitXorAssign<&num::wrapping::Wrapping<i8>>>::bitxor_assign",
    "hash": "25885455175625782429559638893308682446"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i8> as ops::bit::Shl<&usize>>::shl",
    "hash": "146698635866641816948737201816990655745"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i8> as ops::bit::ShlAssign<&usize>>::shl_assign",
    "hash": "22508829583360113421152704894202787542"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i8> as ops::bit::Shr<&usize>>::shr",
    "hash": "1816340470395859480315015228271136627887"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i8> as ops::bit::ShrAssign<&usize>>::shr_assign",
    "hash": "129757126320914309306895238307288163256"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<isize> as ops::arith::Add<&num::wrapping::Wrapping<isize>>>::add",
    "hash": "47075260806378761774995937096439400470"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<isize> as ops::arith::AddAssign<&isize>>::add_assign",
    "hash": "895332635285110196813242070883729216678"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<isize> as ops::arith::AddAssign<&num::wrapping::Wrapping<isize>>>::add_assign",
    "hash": "128688600703519940563557850184706637393"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<isize> as ops::arith::Div<&num::wrapping::Wrapping<isize>>>::div",
    "hash": "138316888975562861988750403560489892883"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<isize> as ops::arith::DivAssign<&isize>>::div_assign",
    "hash": "438735918994560136411491912894123737393"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<isize> as ops::arith::DivAssign<&num::wrapping::Wrapping<isize>>>::div_assign",
    "hash": "130512499338676632934941915604709057458"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<isize> as ops::arith::Mul<&num::wrapping::Wrapping<isize>>>::mul",
    "hash": "65018973643412765604282404536608562182"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<isize> as ops::arith::MulAssign<&isize>>::mul_assign",
    "hash": "191110303633045400511574339066946766499"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<isize> as ops::arith::MulAssign<&num::wrapping::Wrapping<isize>>>::mul_assign",
    "hash": "110718632536742663392069885413598026180"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<isize> as ops::arith::Rem<&num::wrapping::Wrapping<isize>>>::rem",
    "hash": "1665793553039625505113297498581812368153"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<isize> as ops::arith::RemAssign<&isize>>::rem_assign",
    "hash": "14135272538129657032252152999383858444"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<isize> as ops::arith::RemAssign<&num::wrapping::Wrapping<isize>>>::rem_assign",
    "hash": "8383011559974790276658404794147392379"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<isize> as ops::arith::Sub<&num::wrapping::Wrapping<isize>>>::sub",
    "hash": "180191658490686720844764435220918628514"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<isize> as ops::arith::SubAssign<&isize>>::sub_assign",
    "hash": "1559455784946535360113217059181540571529"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<isize> as ops::arith::SubAssign<&num::wrapping::Wrapping<isize>>>::sub_assign",
    "hash": "133773791555857136638205431325492718740"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<isize> as ops::bit::BitAnd<&num::wrapping::Wrapping<isize>>>::bitand",
    "hash": "437779995661574010114612662353711361021"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<isize> as ops::bit::BitAndAssign<&isize>>::bitand_assign",
    "hash": "143720856997084986325752373091024644301"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<isize> as ops::bit::BitAndAssign<&num::wrapping::Wrapping<isize>>>::bitand_assign",
    "hash": "1774913413173164778513525178257826301879"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<isize> as ops::bit::BitOr<&num::wrapping::Wrapping<isize>>>::bitor",
    "hash": "141379534121483683215031289364260726374"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<isize> as ops::bit::BitOrAssign<&isize>>::bitor_assign",
    "hash": "7691318599357444745167055424322525487"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<isize> as ops::bit::BitOrAssign<&num::wrapping::Wrapping<isize>>>::bitor_assign",
    "hash": "43842994766648827387211028203032487874"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<isize> as ops::bit::BitXor<&num::wrapping::Wrapping<isize>>>::bitxor",
    "hash": "12746683981417145712663815131420963245"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<isize> as ops::bit::BitXorAssign<&isize>>::bitxor_assign",
    "hash": "72077334072306267033316289113268215231"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<isize> as ops::bit::BitXorAssign<&num::wrapping::Wrapping<isize>>>::bitxor_assign",
    "hash": "169269758608861596894430668993428039037"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<isize> as ops::bit::Shl<&usize>>::shl",
    "hash": "1594802196189740110615789127716278299535"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<isize> as ops::bit::ShlAssign<&usize>>::shl_assign",
    "hash": "10970688630456800481973374286884961694"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<isize> as ops::bit::Shr<&usize>>::shr",
    "hash": "56185999056681300343625738098817765934"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<isize> as ops::bit::ShrAssign<&usize>>::shr_assign",
    "hash": "44710114763293587214441000028035710495"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u128> as ops::arith::Add<&num::wrapping::Wrapping<u128>>>::add",
    "hash": "1105899554413078520314074543224819631599"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u128> as ops::arith::AddAssign<&num::wrapping::Wrapping<u128>>>::add_assign",
    "hash": "1079605773464031447315440881927389141758"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u128> as ops::arith::AddAssign<&u128>>::add_assign",
    "hash": "1416783917424752871106141911881765203"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u128> as ops::arith::Div<&num::wrapping::Wrapping<u128>>>::div",
    "hash": "28512889424337260743444015610550334319"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u128> as ops::arith::DivAssign<&num::wrapping::Wrapping<u128>>>::div_assign",
    "hash": "180309418564979602341641155032456522829"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u128> as ops::arith::DivAssign<&u128>>::div_assign",
    "hash": "30912187485031331107863544697228599873"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u128> as ops::arith::Mul<&num::wrapping::Wrapping<u128>>>::mul",
    "hash": "57662579310681090624302896036188592267"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u128> as ops::arith::MulAssign<&num::wrapping::Wrapping<u128>>>::mul_assign",
    "hash": "1381374118774360203114351776394655455112"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u128> as ops::arith::MulAssign<&u128>>::mul_assign",
    "hash": "42134068414731139827141793288141328528"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u128> as ops::arith::Rem<&num::wrapping::Wrapping<u128>>>::rem",
    "hash": "801923960928539001113418865014712711750"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u128> as ops::arith::RemAssign<&num::wrapping::Wrapping<u128>>>::rem_assign",
    "hash": "9843437450020640977960588593629988606"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u128> as ops::arith::RemAssign<&u128>>::rem_assign",
    "hash": "129419897007537553433738089828266315544"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u128> as ops::arith::Sub<&num::wrapping::Wrapping<u128>>>::sub",
    "hash": "1462678525230859485213349995152775951086"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u128> as ops::arith::SubAssign<&num::wrapping::Wrapping<u128>>>::sub_assign",
    "hash": "108117037274321318934595615138800834487"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u128> as ops::arith::SubAssign<&u128>>::sub_assign",
    "hash": "128918806946504562278065916832208491196"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u128> as ops::bit::BitAnd<&num::wrapping::Wrapping<u128>>>::bitand",
    "hash": "778925635719220611210412200355970450123"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u128> as ops::bit::BitAndAssign<&num::wrapping::Wrapping<u128>>>::bitand_assign",
    "hash": "177831158320032071408414223666913860101"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u128> as ops::bit::BitAndAssign<&u128>>::bitand_assign",
    "hash": "2957794332384549241365378417645324215"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u128> as ops::bit::BitOr<&num::wrapping::Wrapping<u128>>>::bitor",
    "hash": "1675551722437363816615678894165219735934"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u128> as ops::bit::BitOrAssign<&num::wrapping::Wrapping<u128>>>::bitor_assign",
    "hash": "122014373390981314453445296082997355821"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u128> as ops::bit::BitOrAssign<&u128>>::bitor_assign",
    "hash": "7585208501884706426302641685134724625"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u128> as ops::bit::BitXor<&num::wrapping::Wrapping<u128>>>::bitxor",
    "hash": "79559790655009326918416251273768254507"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u128> as ops::bit::BitXorAssign<&num::wrapping::Wrapping<u128>>>::bitxor_assign",
    "hash": "151592686952459454697603535875563276191"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u128> as ops::bit::BitXorAssign<&u128>>::bitxor_assign",
    "hash": "3115817818936655032245849574415899257"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u128> as ops::bit::Shl<&usize>>::shl",
    "hash": "172726063673196569767596143591117984031"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u128> as ops::bit::ShlAssign<&usize>>::shl_assign",
    "hash": "10952624665122629120364061144706028486"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u128> as ops::bit::Shr<&usize>>::shr",
    "hash": "1068308272299950623716449397953081713472"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u128> as ops::bit::ShrAssign<&usize>>::shr_assign",
    "hash": "638998669244048343711253284537840413981"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u16> as ops::arith::Add<&num::wrapping::Wrapping<u16>>>::add",
    "hash": "1632043474569805263120265640278444400"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u16> as ops::arith::AddAssign<&num::wrapping::Wrapping<u16>>>::add_assign",
    "hash": "173242777805764369606150309769950059832"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u16> as ops::arith::AddAssign<&u16>>::add_assign",
    "hash": "114980368924363292043588128053178814064"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u16> as ops::arith::Div<&num::wrapping::Wrapping<u16>>>::div",
    "hash": "748293330743467083214325518652086958782"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u16> as ops::arith::DivAssign<&num::wrapping::Wrapping<u16>>>::div_assign",
    "hash": "735446720667286468113415488377944727352"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u16> as ops::arith::DivAssign<&u16>>::div_assign",
    "hash": "49879705593191454319832012057338883633"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u16> as ops::arith::Mul<&num::wrapping::Wrapping<u16>>>::mul",
    "hash": "28102868904993330609587193448512353280"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u16> as ops::arith::MulAssign<&num::wrapping::Wrapping<u16>>>::mul_assign",
    "hash": "763356534226385675317359400214845526774"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u16> as ops::arith::MulAssign<&u16>>::mul_assign",
    "hash": "59159400849074705189399208739787900020"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u16> as ops::arith::Rem<&num::wrapping::Wrapping<u16>>>::rem",
    "hash": "163811043952776751068123160179874510454"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u16> as ops::arith::RemAssign<&num::wrapping::Wrapping<u16>>>::rem_assign",
    "hash": "159774744611630735842432863755457643438"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u16> as ops::arith::RemAssign<&u16>>::rem_assign",
    "hash": "403563082742163104814692933036449506103"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u16> as ops::arith::Sub<&num::wrapping::Wrapping<u16>>>::sub",
    "hash": "1603239298100019774117306352375329310011"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u16> as ops::arith::SubAssign<&num::wrapping::Wrapping<u16>>>::sub_assign",
    "hash": "1119359804371681900416195872277397742346"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u16> as ops::arith::SubAssign<&u16>>::sub_assign",
    "hash": "1536721275923482394617229734805852310233"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u16> as ops::bit::BitAnd<&num::wrapping::Wrapping<u16>>>::bitand",
    "hash": "1008773332233545468717323319289080492997"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u16> as ops::bit::BitAndAssign<&num::wrapping::Wrapping<u16>>>::bitand_assign",
    "hash": "1155428342526603130216944858586918456538"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u16> as ops::bit::BitAndAssign<&u16>>::bitand_assign",
    "hash": "940717614383505172918247934813854261964"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u16> as ops::bit::BitOr<&num::wrapping::Wrapping<u16>>>::bitor",
    "hash": "106779861969421623112836436049849520859"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u16> as ops::bit::BitOrAssign<&num::wrapping::Wrapping<u16>>>::bitor_assign",
    "hash": "150476204547168285814840989882031901730"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u16> as ops::bit::BitOrAssign<&u16>>::bitor_assign",
    "hash": "127037804379397222476161305645632341881"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u16> as ops::bit::BitXor<&num::wrapping::Wrapping<u16>>>::bitxor",
    "hash": "42658937718569257213539433830134582564"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u16> as ops::bit::BitXorAssign<&num::wrapping::Wrapping<u16>>>::bitxor_assign",
    "hash": "75011582831788759612093092768482109404"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u16> as ops::bit::BitXorAssign<&u16>>::bitxor_assign",
    "hash": "659155508918675928610666129026865690492"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u16> as ops::bit::Shl<&usize>>::shl",
    "hash": "119968131659869878541498873383136020625"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u16> as ops::bit::ShlAssign<&usize>>::shl_assign",
    "hash": "1804216489257126085716264203068925355532"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u16> as ops::bit::Shr<&usize>>::shr",
    "hash": "370054596679960573616979982655286275157"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u16> as ops::bit::ShrAssign<&usize>>::shr_assign",
    "hash": "1287961371547563209518401005058681484850"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u32> as ops::arith::Add<&num::wrapping::Wrapping<u32>>>::add",
    "hash": "1822441917120006527914739393151951459814"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u32> as ops::arith::AddAssign<&num::wrapping::Wrapping<u32>>>::add_assign",
    "hash": "271647121094354104714587393580461314538"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u32> as ops::arith::AddAssign<&u32>>::add_assign",
    "hash": "108734486501145795498485475326714451013"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u32> as ops::arith::Div<&num::wrapping::Wrapping<u32>>>::div",
    "hash": "103848618011674043647443777952223044410"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u32> as ops::arith::DivAssign<&num::wrapping::Wrapping<u32>>>::div_assign",
    "hash": "31883150613451916789619186012668098180"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u32> as ops::arith::DivAssign<&u32>>::div_assign",
    "hash": "165055397897349464703854224908567458337"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u32> as ops::arith::Mul<&num::wrapping::Wrapping<u32>>>::mul",
    "hash": "1351843578685650297515841662656162101903"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u32> as ops::arith::MulAssign<&num::wrapping::Wrapping<u32>>>::mul_assign",
    "hash": "689094357787269033413104024257474358704"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u32> as ops::arith::MulAssign<&u32>>::mul_assign",
    "hash": "747219563568657242014272340692931513140"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u32> as ops::arith::Rem<&num::wrapping::Wrapping<u32>>>::rem",
    "hash": "109360492840430010713168935680167133896"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u32> as ops::arith::RemAssign<&num::wrapping::Wrapping<u32>>>::rem_assign",
    "hash": "47896304959291265287884555688439463303"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u32> as ops::arith::RemAssign<&u32>>::rem_assign",
    "hash": "1143206888426740318116240562353212789316"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u32> as ops::arith::Sub<&num::wrapping::Wrapping<u32>>>::sub",
    "hash": "18939812860012286857130082652437912072"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u32> as ops::arith::SubAssign<&num::wrapping::Wrapping<u32>>>::sub_assign",
    "hash": "776443780019637941916800694815517567097"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u32> as ops::arith::SubAssign<&u32>>::sub_assign",
    "hash": "1147990997281082512416824845693959906881"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u32> as ops::bit::BitAnd<&num::wrapping::Wrapping<u32>>>::bitand",
    "hash": "794971412360123584513996500242095118930"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u32> as ops::bit::BitAndAssign<&num::wrapping::Wrapping<u32>>>::bitand_assign",
    "hash": "1567524660986221294414089316281818857072"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u32> as ops::bit::BitAndAssign<&u32>>::bitand_assign",
    "hash": "1731246895659425111411740137396601824911"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u32> as ops::bit::BitOr<&num::wrapping::Wrapping<u32>>>::bitor",
    "hash": "120732169329801416125840384327019761274"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u32> as ops::bit::BitOrAssign<&num::wrapping::Wrapping<u32>>>::bitor_assign",
    "hash": "1240259830151407424794055607303669187"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u32> as ops::bit::BitOrAssign<&u32>>::bitor_assign",
    "hash": "1449780149786273317810680954017337519366"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u32> as ops::bit::BitXor<&num::wrapping::Wrapping<u32>>>::bitxor",
    "hash": "17561745628004720719050390341688551615"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u32> as ops::bit::BitXorAssign<&num::wrapping::Wrapping<u32>>>::bitxor_assign",
    "hash": "157952206666417939633808538037575114234"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u32> as ops::bit::BitXorAssign<&u32>>::bitxor_assign",
    "hash": "740366304848764351215825183171011946254"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u32> as ops::bit::Shl<&usize>>::shl",
    "hash": "1595234115253707977413304397585557851122"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u32> as ops::bit::ShlAssign<&usize>>::shl_assign",
    "hash": "97174276340666831692172406386078292079"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u32> as ops::bit::Shr<&usize>>::shr",
    "hash": "94453598594550151273800434221697318736"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u32> as ops::bit::ShrAssign<&usize>>::shr_assign",
    "hash": "177740698807723369102530258154076177159"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u64> as ops::arith::Add<&num::wrapping::Wrapping<u64>>>::add",
    "hash": "14172090260631850936577565385640083744"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u64> as ops::arith::AddAssign<&num::wrapping::Wrapping<u64>>>::add_assign",
    "hash": "128591047779626189788876167197259418154"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u64> as ops::arith::AddAssign<&u64>>::add_assign",
    "hash": "150643027173205623627769113204588834676"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u64> as ops::arith::Div<&num::wrapping::Wrapping<u64>>>::div",
    "hash": "447880875062496214614256997474242540081"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u64> as ops::arith::DivAssign<&num::wrapping::Wrapping<u64>>>::div_assign",
    "hash": "162561606794091009011519020692255352157"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u64> as ops::arith::DivAssign<&u64>>::div_assign",
    "hash": "7066561750851004497933869621042213315"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u64> as ops::arith::Mul<&num::wrapping::Wrapping<u64>>>::mul",
    "hash": "705052149767112779414809906137868503309"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u64> as ops::arith::MulAssign<&num::wrapping::Wrapping<u64>>>::mul_assign",
    "hash": "492717182861818931211860497986750425063"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u64> as ops::arith::MulAssign<&u64>>::mul_assign",
    "hash": "5994666022253672218676505298032590986"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u64> as ops::arith::Rem<&num::wrapping::Wrapping<u64>>>::rem",
    "hash": "1634657637660909846613973405902048278030"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u64> as ops::arith::RemAssign<&num::wrapping::Wrapping<u64>>>::rem_assign",
    "hash": "1747880045114875426013590967618483490881"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u64> as ops::arith::RemAssign<&u64>>::rem_assign",
    "hash": "330089858155820924214389993004676974234"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u64> as ops::arith::Sub<&num::wrapping::Wrapping<u64>>>::sub",
    "hash": "1744424397086972404418350630434700782969"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u64> as ops::arith::SubAssign<&num::wrapping::Wrapping<u64>>>::sub_assign",
    "hash": "1563851815699668073411014982142842769215"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u64> as ops::arith::SubAssign<&u64>>::sub_assign",
    "hash": "268798440657623115015939046224799521416"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u64> as ops::bit::BitAnd<&num::wrapping::Wrapping<u64>>>::bitand",
    "hash": "43120945942062415523141379080949878954"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u64> as ops::bit::BitAndAssign<&num::wrapping::Wrapping<u64>>>::bitand_assign",
    "hash": "124329574752211507607410404647102097231"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u64> as ops::bit::BitAndAssign<&u64>>::bitand_assign",
    "hash": "1244146704425020979813798847137706826114"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u64> as ops::bit::BitOr<&num::wrapping::Wrapping<u64>>>::bitor",
    "hash": "1009547094895033363315380839675347121455"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u64> as ops::bit::BitOrAssign<&num::wrapping::Wrapping<u64>>>::bitor_assign",
    "hash": "257373934460761038216542739462952466042"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u64> as ops::bit::BitOrAssign<&u64>>::bitor_assign",
    "hash": "5390212268689966586317345829101937103"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u64> as ops::bit::BitXor<&num::wrapping::Wrapping<u64>>>::bitxor",
    "hash": "56162191347322525325955416887561814576"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u64> as ops::bit::BitXorAssign<&num::wrapping::Wrapping<u64>>>::bitxor_assign",
    "hash": "34997879259023964942765910389126622996"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u64> as ops::bit::BitXorAssign<&u64>>::bitxor_assign",
    "hash": "6984462078573920282585790198044624211"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u64> as ops::bit::Shl<&usize>>::shl",
    "hash": "54506377068771825018135630475045104557"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u64> as ops::bit::ShlAssign<&usize>>::shl_assign",
    "hash": "165508408738785635125870571283734944700"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u64> as ops::bit::Shr<&usize>>::shr",
    "hash": "71673807617597230402751375104306626432"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u64> as ops::bit::ShrAssign<&usize>>::shr_assign",
    "hash": "138377950292369735056920636739290195737"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u8> as ops::arith::Add<&num::wrapping::Wrapping<u8>>>::add",
    "hash": "1372974645902338176514456261081563881893"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u8> as ops::arith::AddAssign<&num::wrapping::Wrapping<u8>>>::add_assign",
    "hash": "1343362379859708518918165697719900686681"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u8> as ops::arith::AddAssign<&u8>>::add_assign",
    "hash": "55961456546280119503446877476370471397"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u8> as ops::arith::Div<&num::wrapping::Wrapping<u8>>>::div",
    "hash": "158806254579646190215982838869194591760"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u8> as ops::arith::DivAssign<&num::wrapping::Wrapping<u8>>>::div_assign",
    "hash": "158028939111503239676839988087123388255"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u8> as ops::arith::DivAssign<&u8>>::div_assign",
    "hash": "1440328986154524738618070166938548245515"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u8> as ops::arith::Mul<&num::wrapping::Wrapping<u8>>>::mul",
    "hash": "1827451472335498108318125617921163893410"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u8> as ops::arith::MulAssign<&num::wrapping::Wrapping<u8>>>::mul_assign",
    "hash": "11730679262806396197687893393673889942"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u8> as ops::arith::MulAssign<&u8>>::mul_assign",
    "hash": "1089229738465761015417449448204893177828"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u8> as ops::arith::Rem<&num::wrapping::Wrapping<u8>>>::rem",
    "hash": "1216785335558387652411418179795708830257"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u8> as ops::arith::RemAssign<&num::wrapping::Wrapping<u8>>>::rem_assign",
    "hash": "77603178727179850458152094170966185180"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u8> as ops::arith::RemAssign<&u8>>::rem_assign",
    "hash": "38286655877854311181271669390838407587"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u8> as ops::arith::Sub<&num::wrapping::Wrapping<u8>>>::sub",
    "hash": "36317023119638534283096367566913942376"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u8> as ops::arith::SubAssign<&num::wrapping::Wrapping<u8>>>::sub_assign",
    "hash": "1311253179236946527212840890145890450706"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u8> as ops::arith::SubAssign<&u8>>::sub_assign",
    "hash": "18905554590762482033070496609682572311"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u8> as ops::bit::BitAnd<&num::wrapping::Wrapping<u8>>>::bitand",
    "hash": "94290869160107438117730041421212881389"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u8> as ops::bit::BitAndAssign<&num::wrapping::Wrapping<u8>>>::bitand_assign",
    "hash": "16692366807928618535674872157852483121"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u8> as ops::bit::BitAndAssign<&u8>>::bitand_assign",
    "hash": "166481671099348585349235648072520721954"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u8> as ops::bit::BitOr<&num::wrapping::Wrapping<u8>>>::bitor",
    "hash": "511758944076478291217508899554450603026"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u8> as ops::bit::BitOrAssign<&num::wrapping::Wrapping<u8>>>::bitor_assign",
    "hash": "27935828157554983527631587395919474874"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u8> as ops::bit::BitOrAssign<&u8>>::bitor_assign",
    "hash": "84693211385337697902295608053287661299"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u8> as ops::bit::BitXor<&num::wrapping::Wrapping<u8>>>::bitxor",
    "hash": "163923488932732699709775113041035402345"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u8> as ops::bit::BitXorAssign<&num::wrapping::Wrapping<u8>>>::bitxor_assign",
    "hash": "3864714119964995904942518034228949528"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u8> as ops::bit::BitXorAssign<&u8>>::bitxor_assign",
    "hash": "508460151576263061011925822818430646850"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u8> as ops::bit::Shl<&usize>>::shl",
    "hash": "113450444197216956568224968333256043574"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u8> as ops::bit::ShlAssign<&usize>>::shl_assign",
    "hash": "1446813577378649373716647111978818819331"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u8> as ops::bit::Shr<&usize>>::shr",
    "hash": "172487241189147964001586998099318162602"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u8> as ops::bit::ShrAssign<&usize>>::shr_assign",
    "hash": "146416578115697743842444113824833648867"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<usize> as ops::arith::Add<&num::wrapping::Wrapping<usize>>>::add",
    "hash": "172518176226452307832258208063208526497"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<usize> as ops::arith::AddAssign<&num::wrapping::Wrapping<usize>>>::add_assign",
    "hash": "27987214993684759593582712812286386447"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<usize> as ops::arith::AddAssign<&usize>>::add_assign",
    "hash": "1341953274288466666312098935617054485590"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<usize> as ops::arith::Div<&num::wrapping::Wrapping<usize>>>::div",
    "hash": "1322602222734243022715527585072983284643"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<usize> as ops::arith::DivAssign<&num::wrapping::Wrapping<usize>>>::div_assign",
    "hash": "1358755346586067420017314580125352613452"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<usize> as ops::arith::DivAssign<&usize>>::div_assign",
    "hash": "123100816847499178578489413186313192166"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<usize> as ops::arith::Mul<&num::wrapping::Wrapping<usize>>>::mul",
    "hash": "766686448664803082513200961592103405991"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<usize> as ops::arith::MulAssign<&num::wrapping::Wrapping<usize>>>::mul_assign",
    "hash": "65314713161047556853783644148633532801"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<usize> as ops::arith::MulAssign<&usize>>::mul_assign",
    "hash": "1820950936838170410113672147095205880383"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<usize> as ops::arith::Rem<&num::wrapping::Wrapping<usize>>>::rem",
    "hash": "132854794023282598051274692911635765637"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<usize> as ops::arith::RemAssign<&num::wrapping::Wrapping<usize>>>::rem_assign",
    "hash": "1202500749304333712118441815186942970018"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<usize> as ops::arith::RemAssign<&usize>>::rem_assign",
    "hash": "6224562988733717501622518277862582710"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<usize> as ops::arith::Sub<&num::wrapping::Wrapping<usize>>>::sub",
    "hash": "10129733359191056710701885553160513034"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<usize> as ops::arith::SubAssign<&num::wrapping::Wrapping<usize>>>::sub_assign",
    "hash": "1624690747077304428915221830768633421634"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<usize> as ops::arith::SubAssign<&usize>>::sub_assign",
    "hash": "1809861108859599599814635768626078138998"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<usize> as ops::bit::BitAnd<&num::wrapping::Wrapping<usize>>>::bitand",
    "hash": "14453801014358491812996303907330586052"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<usize> as ops::bit::BitAndAssign<&num::wrapping::Wrapping<usize>>>::bitand_assign",
    "hash": "1734765449581753755314339941301138310939"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<usize> as ops::bit::BitAndAssign<&usize>>::bitand_assign",
    "hash": "81747247369436232075725657307283302845"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<usize> as ops::bit::BitOr<&num::wrapping::Wrapping<usize>>>::bitor",
    "hash": "166244523787719758812127738752586039996"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<usize> as ops::bit::BitOrAssign<&num::wrapping::Wrapping<usize>>>::bitor_assign",
    "hash": "158799118426277343168686343555987761322"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<usize> as ops::bit::BitOrAssign<&usize>>::bitor_assign",
    "hash": "819654227215085640712524509977559594679"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<usize> as ops::bit::BitXor<&num::wrapping::Wrapping<usize>>>::bitxor",
    "hash": "47466553912218891315400164938565916893"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<usize> as ops::bit::BitXorAssign<&num::wrapping::Wrapping<usize>>>::bitxor_assign",
    "hash": "111643109900760095638481365771726706182"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<usize> as ops::bit::BitXorAssign<&usize>>::bitxor_assign",
    "hash": "575853635810399511814324143561819851089"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<usize> as ops::bit::Shl<&usize>>::shl",
    "hash": "136122864466307871211996138306216893547"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<usize> as ops::bit::ShlAssign<&usize>>::shl_assign",
    "hash": "564904116870049488210498226130799204903"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<usize> as ops::bit::Shr<&usize>>::shr",
    "hash": "136735133721962045009867645841035475791"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<usize> as ops::bit::ShrAssign<&usize>>::shr_assign",
    "hash": "183814287216601377269780662050381627022"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<str::CharEscapeDebugContinue as ops::function::Fn<(char,)>>::call",
    "hash": "443615137387529622517691612058795865382"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<str::CharEscapeDebugContinue as ops::function::FnMut<(char,)>>::call_mut",
    "hash": "1628992595475265619514513359176464123785"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<str::CharEscapeDebugContinue as ops::function::FnOnce<(char,)>>::call_once",
    "hash": "110732769757463408006094361653360956682"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<str::CharEscapeDefault as ops::function::Fn<(char,)>>::call",
    "hash": "5364339684647307276172199909354851890"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<str::CharEscapeDefault as ops::function::FnMut<(char,)>>::call_mut",
    "hash": "1702292121554276701517413289356566616466"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<str::CharEscapeDefault as ops::function::FnOnce<(char,)>>::call_once",
    "hash": "33900353822925529997001375222888824346"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<str::CharEscapeUnicode as ops::function::Fn<(char,)>>::call",
    "hash": "1094762554971394509811632025389526296225"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<str::CharEscapeUnicode as ops::function::FnMut<(char,)>>::call_mut",
    "hash": "1821133952317122444317708697819135563731"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<str::CharEscapeUnicode as ops::function::FnOnce<(char,)>>::call_once",
    "hash": "74556065689243689705877634565068905929"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<str::IsWhitespace as ops::function::Fn<(char,)>>::call",
    "hash": "456928144197643502311518038980030024077"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<str::IsWhitespace as ops::function::FnMut<(char,)>>::call_mut",
    "hash": "1215892648375486674112698399065598750260"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<str::IsWhitespace as ops::function::FnOnce<(char,)>>::call_once",
    "hash": "148177279589025896263808996396024884197"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u128 as ops::arith::Add<&u128>>::add",
    "hash": "437112021871332367217014185872963675583"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u128 as ops::arith::AddAssign<&u128>>::add_assign",
    "hash": "131956654836093671586308182497438886137"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u128 as ops::arith::Div<&u128>>::div",
    "hash": "171653021385854285863814973575203055694"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u128 as ops::arith::DivAssign<&u128>>::div_assign",
    "hash": "13139636306550889753983890253912379180"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u128 as ops::arith::Mul<&u128>>::mul",
    "hash": "1097371677605289296512463351741266887484"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u128 as ops::arith::MulAssign<&u128>>::mul_assign",
    "hash": "10460691339654999701376154066230029900"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u128 as ops::arith::Rem<&u128>>::rem",
    "hash": "1025868384962655318713943469385946858759"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u128 as ops::arith::RemAssign<&u128>>::rem_assign",
    "hash": "1245212142262414095313868095605243749567"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u128 as ops::arith::Sub<&u128>>::sub",
    "hash": "1298851035090416417110549042050303314047"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u128 as ops::arith::SubAssign<&u128>>::sub_assign",
    "hash": "26989915596117553708351636633518761084"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u128 as ops::bit::BitAnd<&u128>>::bitand",
    "hash": "137173297230917895561329602659032991380"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u128 as ops::bit::BitAndAssign<&u128>>::bitand_assign",
    "hash": "786706648786948340612083411565709412176"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u128 as ops::bit::BitOr<&u128>>::bitor",
    "hash": "1583968743858198075816424701134769179459"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u128 as ops::bit::BitOrAssign<&u128>>::bitor_assign",
    "hash": "14112814468342127942467255386109978681"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u128 as ops::bit::BitXor<&u128>>::bitxor",
    "hash": "88133653546005366367265959107693737532"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u128 as ops::bit::BitXorAssign<&u128>>::bitxor_assign",
    "hash": "1574151954307327177513926165457487547501"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u128 as ops::bit::Shl<&i128>>::shl",
    "hash": "885990443138254486915015513229760800390"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u128 as ops::bit::Shl<&i16>>::shl",
    "hash": "863349133448211128811244403459168702677"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u128 as ops::bit::Shl<&i32>>::shl",
    "hash": "134150636644735524092724382886025756789"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u128 as ops::bit::Shl<&i64>>::shl",
    "hash": "171529113986015938841559887153781270158"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u128 as ops::bit::Shl<&i8>>::shl",
    "hash": "1128251867454148344817084091851021973760"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u128 as ops::bit::Shl<&isize>>::shl",
    "hash": "652949066039887037714130289813707754966"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u128 as ops::bit::Shl<&u128>>::shl",
    "hash": "174931312826812392255691086662263620300"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u128 as ops::bit::Shl<&u16>>::shl",
    "hash": "3173287854568369848551971540717208390"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u128 as ops::bit::Shl<&u32>>::shl",
    "hash": "1442872331949988778616118407961837116629"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u128 as ops::bit::Shl<&u64>>::shl",
    "hash": "1812363138188149578315869549878346003981"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u128 as ops::bit::Shl<&u8>>::shl",
    "hash": "144492851472980402444834333751506404164"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u128 as ops::bit::Shl<&usize>>::shl",
    "hash": "49438772121738125217388176954926846531"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u128 as ops::bit::ShlAssign<&i128>>::shl_assign",
    "hash": "816486659077030596116042121267564037209"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u128 as ops::bit::ShlAssign<&i16>>::shl_assign",
    "hash": "157795283029632174326204965655416903385"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u128 as ops::bit::ShlAssign<&i32>>::shl_assign",
    "hash": "117499094425084923569244480980540088364"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u128 as ops::bit::ShlAssign<&i64>>::shl_assign",
    "hash": "914214819399372214217276923124413873793"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u128 as ops::bit::ShlAssign<&i8>>::shl_assign",
    "hash": "38097228718438228934579120033161365073"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u128 as ops::bit::ShlAssign<&isize>>::shl_assign",
    "hash": "8663970766231133685889669593222928458"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u128 as ops::bit::ShlAssign<&u128>>::shl_assign",
    "hash": "61335145481718476314176699472403965804"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u128 as ops::bit::ShlAssign<&u16>>::shl_assign",
    "hash": "1109711235882258887110310125002726350533"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u128 as ops::bit::ShlAssign<&u32>>::shl_assign",
    "hash": "86686966871925980064229246180177952993"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u128 as ops::bit::ShlAssign<&u64>>::shl_assign",
    "hash": "44971731331718760415055803519738478381"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u128 as ops::bit::ShlAssign<&u8>>::shl_assign",
    "hash": "1367467315025282962612669822206691963793"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u128 as ops::bit::ShlAssign<&usize>>::shl_assign",
    "hash": "1074215288596325099211803290254256869463"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u128 as ops::bit::Shr<&i128>>::shr",
    "hash": "87049604456679981233555018472834989193"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u128 as ops::bit::Shr<&i16>>::shr",
    "hash": "8620423392642894926199932596184181483"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u128 as ops::bit::Shr<&i32>>::shr",
    "hash": "935468619701427675014756106416911293391"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u128 as ops::bit::Shr<&i64>>::shr",
    "hash": "119605063994201902236949839123303568003"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u128 as ops::bit::Shr<&i8>>::shr",
    "hash": "1526752683453247052412556665739811180818"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u128 as ops::bit::Shr<&isize>>::shr",
    "hash": "128703234813053608317883837302178446121"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u128 as ops::bit::Shr<&u128>>::shr",
    "hash": "182341962689556444686216255012680313299"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u128 as ops::bit::Shr<&u16>>::shr",
    "hash": "104127435522098647082873940194910423619"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u128 as ops::bit::Shr<&u32>>::shr",
    "hash": "1624004375916515777512194208449942315550"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u128 as ops::bit::Shr<&u64>>::shr",
    "hash": "908217440491776327282906467769388849"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u128 as ops::bit::Shr<&u8>>::shr",
    "hash": "81613049909568861366835522280806449549"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u128 as ops::bit::Shr<&usize>>::shr",
    "hash": "11155851161161011433344775301052118667"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u128 as ops::bit::ShrAssign<&i128>>::shr_assign",
    "hash": "1537016527201804859714458487103037024759"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u128 as ops::bit::ShrAssign<&i16>>::shr_assign",
    "hash": "798220158154294057515979202434919475603"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u128 as ops::bit::ShrAssign<&i32>>::shr_assign",
    "hash": "174870213120089012666496760114348939874"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u128 as ops::bit::ShrAssign<&i64>>::shr_assign",
    "hash": "99445277215331236323342400404737042757"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u128 as ops::bit::ShrAssign<&i8>>::shr_assign",
    "hash": "89682564014211242932516658023844730756"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u128 as ops::bit::ShrAssign<&isize>>::shr_assign",
    "hash": "129023020468262783908950768770135835989"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u128 as ops::bit::ShrAssign<&u128>>::shr_assign",
    "hash": "123084530483101626817193660564011544883"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u128 as ops::bit::ShrAssign<&u16>>::shr_assign",
    "hash": "1395183517017801944914385241529589441306"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u128 as ops::bit::ShrAssign<&u32>>::shr_assign",
    "hash": "33485199090982347511541439549293562812"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u128 as ops::bit::ShrAssign<&u64>>::shr_assign",
    "hash": "6996598537826672372117071326838081007"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u128 as ops::bit::ShrAssign<&u8>>::shr_assign",
    "hash": "1226281394218852045210099695686699945196"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u128 as ops::bit::ShrAssign<&usize>>::shr_assign",
    "hash": "20620262169907784109880409789672072159"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u16 as ops::arith::Add<&u16>>::add",
    "hash": "108429781377940193215154079929628083933"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u16 as ops::arith::AddAssign<&u16>>::add_assign",
    "hash": "6928441550936178019115835112384458330"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u16 as ops::arith::Div<&u16>>::div",
    "hash": "204181865246471430413218601632229185098"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u16 as ops::arith::DivAssign<&u16>>::div_assign",
    "hash": "69431458999460679633847732137844368656"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u16 as ops::arith::Mul<&u16>>::mul",
    "hash": "5816109182859663205296192931125197674"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u16 as ops::arith::MulAssign<&u16>>::mul_assign",
    "hash": "16291733403440241791375101896755516548"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u16 as ops::arith::Rem<&u16>>::rem",
    "hash": "68378961173004570292452139456516716329"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u16 as ops::arith::RemAssign<&u16>>::rem_assign",
    "hash": "1947204944717401532224891337976523266"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u16 as ops::arith::Sub<&u16>>::sub",
    "hash": "980769449777536950010427110342173757750"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u16 as ops::arith::SubAssign<&u16>>::sub_assign",
    "hash": "1282722465017867681010286986737428003223"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u16 as ops::bit::BitAnd<&u16>>::bitand",
    "hash": "767722159569593230110715440432620410962"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u16 as ops::bit::BitAndAssign<&u16>>::bitand_assign",
    "hash": "51105525693651308812589771283529924183"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u16 as ops::bit::BitOr<&u16>>::bitor",
    "hash": "1676443064345066321811280106140239663573"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u16 as ops::bit::BitOrAssign<&u16>>::bitor_assign",
    "hash": "497984568844062190110299514068485059336"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u16 as ops::bit::BitXor<&u16>>::bitxor",
    "hash": "321824902530672645215062963855770534722"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u16 as ops::bit::BitXorAssign<&u16>>::bitxor_assign",
    "hash": "650491789782740430717232147391142192644"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u16 as ops::bit::Shl<&i128>>::shl",
    "hash": "7703786644142918736402803289102642134"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u16 as ops::bit::Shl<&i16>>::shl",
    "hash": "859591102461920400310669782358540020151"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u16 as ops::bit::Shl<&i32>>::shl",
    "hash": "16380643324989701560664176672391924294"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u16 as ops::bit::Shl<&i64>>::shl",
    "hash": "166971183318769176907139294924467665473"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u16 as ops::bit::Shl<&i8>>::shl",
    "hash": "978249124108109275613641821403992473559"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u16 as ops::bit::Shl<&isize>>::shl",
    "hash": "616840035937843878816964225186125657426"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u16 as ops::bit::Shl<&u128>>::shl",
    "hash": "106858444475239909039924975750214627029"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u16 as ops::bit::Shl<&u16>>::shl",
    "hash": "159535561872318407956889609113441496497"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u16 as ops::bit::Shl<&u32>>::shl",
    "hash": "104757516128289879661878587124046272627"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u16 as ops::bit::Shl<&u64>>::shl",
    "hash": "726032477613465577113487271044233166835"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u16 as ops::bit::Shl<&u8>>::shl",
    "hash": "70934824164964502426702928171190573551"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u16 as ops::bit::Shl<&usize>>::shl",
    "hash": "88967170656048229549729610353644506589"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u16 as ops::bit::ShlAssign<&i128>>::shl_assign",
    "hash": "560705037011246158212340306071026778969"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u16 as ops::bit::ShlAssign<&i16>>::shl_assign",
    "hash": "47366312008905417638983878499371048380"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u16 as ops::bit::ShlAssign<&i32>>::shl_assign",
    "hash": "102650890469689711848452125233356534808"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u16 as ops::bit::ShlAssign<&i64>>::shl_assign",
    "hash": "12022401505159213608338861174776748108"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u16 as ops::bit::ShlAssign<&i8>>::shl_assign",
    "hash": "117917549497742105563013824615280696259"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u16 as ops::bit::ShlAssign<&isize>>::shl_assign",
    "hash": "165801651716930118032675273253710759672"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u16 as ops::bit::ShlAssign<&u128>>::shl_assign",
    "hash": "1740391881710236818013298696993891062672"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u16 as ops::bit::ShlAssign<&u16>>::shl_assign",
    "hash": "450280626597283598713282041790781952960"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u16 as ops::bit::ShlAssign<&u32>>::shl_assign",
    "hash": "495537169559978086712321793162178848647"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u16 as ops::bit::ShlAssign<&u64>>::shl_assign",
    "hash": "1737522251360106597418032428919024074141"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u16 as ops::bit::ShlAssign<&u8>>::shl_assign",
    "hash": "189061408045314444512678726947730745106"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u16 as ops::bit::ShlAssign<&usize>>::shl_assign",
    "hash": "533346246068896479913526498648580485030"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u16 as ops::bit::Shr<&i128>>::shr",
    "hash": "184188740176355754546766211081032008472"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u16 as ops::bit::Shr<&i16>>::shr",
    "hash": "104978714174352531559380508806949270228"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u16 as ops::bit::Shr<&i32>>::shr",
    "hash": "92829595789859997813261142028959875962"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u16 as ops::bit::Shr<&i64>>::shr",
    "hash": "8049634690704801642492826472383326927"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u16 as ops::bit::Shr<&i8>>::shr",
    "hash": "1487501127730095623215062786440188734354"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u16 as ops::bit::Shr<&isize>>::shr",
    "hash": "730075436502480026416343455452484545849"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u16 as ops::bit::Shr<&u128>>::shr",
    "hash": "14898046603676871299679385376746271708"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u16 as ops::bit::Shr<&u16>>::shr",
    "hash": "1703777439336808166410784036587115650784"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u16 as ops::bit::Shr<&u32>>::shr",
    "hash": "1808764561608789958616768923629731616637"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u16 as ops::bit::Shr<&u64>>::shr",
    "hash": "83892235900252469010459823124112202357"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u16 as ops::bit::Shr<&u8>>::shr",
    "hash": "54675702019135355946939998972449113391"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u16 as ops::bit::Shr<&usize>>::shr",
    "hash": "20460387022426154987055888733434568167"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u16 as ops::bit::ShrAssign<&i128>>::shr_assign",
    "hash": "1484376903850572498717807848135322697379"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u16 as ops::bit::ShrAssign<&i16>>::shr_assign",
    "hash": "1179841259157854398512408322427122030720"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u16 as ops::bit::ShrAssign<&i32>>::shr_assign",
    "hash": "567255828859016616915567789493075258589"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u16 as ops::bit::ShrAssign<&i64>>::shr_assign",
    "hash": "108795703638509699544151104674758917013"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u16 as ops::bit::ShrAssign<&i8>>::shr_assign",
    "hash": "63063597178523389679664165873705458351"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u16 as ops::bit::ShrAssign<&isize>>::shr_assign",
    "hash": "168215287990850373784401324107977531202"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u16 as ops::bit::ShrAssign<&u128>>::shr_assign",
    "hash": "59821060621298886214950426269410146244"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u16 as ops::bit::ShrAssign<&u16>>::shr_assign",
    "hash": "17723464019948594547289996209153844072"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u16 as ops::bit::ShrAssign<&u32>>::shr_assign",
    "hash": "163115203449125013029461889891422012193"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u16 as ops::bit::ShrAssign<&u64>>::shr_assign",
    "hash": "1696844088931446882214943260510479080436"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u16 as ops::bit::ShrAssign<&u8>>::shr_assign",
    "hash": "118686175936401947043784252336970680032"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u16 as ops::bit::ShrAssign<&usize>>::shr_assign",
    "hash": "1145370785793806924311194365055421499569"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u32 as ops::arith::Add<&u32>>::add",
    "hash": "878046817043645378717808125345992677612"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u32 as ops::arith::AddAssign<&u32>>::add_assign",
    "hash": "1273103234751973698112971320705642706289"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u32 as ops::arith::Div<&u32>>::div",
    "hash": "1529060289669500186410646483370052692558"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u32 as ops::arith::DivAssign<&u32>>::div_assign",
    "hash": "1007531441639071614515557063879505119881"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u32 as ops::arith::Mul<&u32>>::mul",
    "hash": "34854298843734442825926405813188140095"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u32 as ops::arith::MulAssign<&u32>>::mul_assign",
    "hash": "1511628909712987623811323760725581277105"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u32 as ops::arith::Rem<&u32>>::rem",
    "hash": "793829256731749348416491976247555010231"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u32 as ops::arith::RemAssign<&u32>>::rem_assign",
    "hash": "181913387919365589787141757117820677155"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u32 as ops::arith::Sub<&u32>>::sub",
    "hash": "43537550310677691914959689060518680337"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u32 as ops::arith::SubAssign<&u32>>::sub_assign",
    "hash": "1373142158362202395410671397636711532054"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u32 as ops::bit::BitAnd<&u32>>::bitand",
    "hash": "104857186632182944772442553788847659033"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u32 as ops::bit::BitAndAssign<&u32>>::bitand_assign",
    "hash": "122389133921983791181774439018187043399"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u32 as ops::bit::BitOr<&u32>>::bitor",
    "hash": "283924555238115522211343675181337067821"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u32 as ops::bit::BitOrAssign<&u32>>::bitor_assign",
    "hash": "1360716763434540377310600429471145669033"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u32 as ops::bit::BitXor<&u32>>::bitxor",
    "hash": "14726869702182266291735977969622614133"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u32 as ops::bit::BitXorAssign<&u32>>::bitxor_assign",
    "hash": "674543254031986704110816924821700315633"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u32 as ops::bit::Shl<&i128>>::shl",
    "hash": "868118776050252008711386119973009344523"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u32 as ops::bit::Shl<&i16>>::shl",
    "hash": "180029282763579532388679729201685412174"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u32 as ops::bit::Shl<&i32>>::shl",
    "hash": "94313632400037019123972520478287998488"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u32 as ops::bit::Shl<&i64>>::shl",
    "hash": "91840997335001566845794673821270283934"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u32 as ops::bit::Shl<&i8>>::shl",
    "hash": "15760256600467111288729189517107154559"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u32 as ops::bit::Shl<&isize>>::shl",
    "hash": "6473717444166661645205861308593802694"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u32 as ops::bit::Shl<&u128>>::shl",
    "hash": "1187758524150483134218088312165988444227"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u32 as ops::bit::Shl<&u16>>::shl",
    "hash": "202395816668167962831248277581396521"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u32 as ops::bit::Shl<&u32>>::shl",
    "hash": "211890721822014019311232834905345965296"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u32 as ops::bit::Shl<&u64>>::shl",
    "hash": "1326366837998746884012898270529842746582"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u32 as ops::bit::Shl<&u8>>::shl",
    "hash": "102728497816833942104142410031450149603"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u32 as ops::bit::Shl<&usize>>::shl",
    "hash": "1580976358587929480613833179920016507742"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u32 as ops::bit::ShlAssign<&i128>>::shl_assign",
    "hash": "837593396094682959512108379767514378201"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u32 as ops::bit::ShlAssign<&i16>>::shl_assign",
    "hash": "61491731983950329310676894265801948995"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u32 as ops::bit::ShlAssign<&i32>>::shl_assign",
    "hash": "945404260035518119216026365453424582158"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u32 as ops::bit::ShlAssign<&i64>>::shl_assign",
    "hash": "49913892239680097258443668428499006328"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u32 as ops::bit::ShlAssign<&i8>>::shl_assign",
    "hash": "258877102576282536610991735294572527200"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u32 as ops::bit::ShlAssign<&isize>>::shl_assign",
    "hash": "227360084064275892212633215634979805664"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u32 as ops::bit::ShlAssign<&u128>>::shl_assign",
    "hash": "35334390132110711073480814742820253777"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u32 as ops::bit::ShlAssign<&u16>>::shl_assign",
    "hash": "27905291490706428502257211662844139193"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u32 as ops::bit::ShlAssign<&u32>>::shl_assign",
    "hash": "88653553197834598737928977843760516741"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u32 as ops::bit::ShlAssign<&u64>>::shl_assign",
    "hash": "86013350415525700115067012840360295191"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u32 as ops::bit::ShlAssign<&u8>>::shl_assign",
    "hash": "82210025211924507995458759394196136869"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u32 as ops::bit::ShlAssign<&usize>>::shl_assign",
    "hash": "649651069470691236016102303469015354727"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u32 as ops::bit::Shr<&i128>>::shr",
    "hash": "988177142805208221314568553844309595558"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u32 as ops::bit::Shr<&i16>>::shr",
    "hash": "36636816662155934219238817704878564823"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u32 as ops::bit::Shr<&i32>>::shr",
    "hash": "811455052143532458412507409948930566527"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u32 as ops::bit::Shr<&i64>>::shr",
    "hash": "64196124688723095823118867566514009389"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u32 as ops::bit::Shr<&i8>>::shr",
    "hash": "920455871639463100618076207065655683879"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u32 as ops::bit::Shr<&isize>>::shr",
    "hash": "155850926903536771219140290788138493167"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u32 as ops::bit::Shr<&u128>>::shr",
    "hash": "147546450949112665024892182880472408133"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u32 as ops::bit::Shr<&u16>>::shr",
    "hash": "176738799313917202317894671226644672347"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u32 as ops::bit::Shr<&u32>>::shr",
    "hash": "86576304868079642219518867369549485220"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u32 as ops::bit::Shr<&u64>>::shr",
    "hash": "1392411780882792536615078145236793351228"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u32 as ops::bit::Shr<&u8>>::shr",
    "hash": "608258118921455005210575338231677266492"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u32 as ops::bit::Shr<&usize>>::shr",
    "hash": "1443218206087522397616827010656100491571"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u32 as ops::bit::ShrAssign<&i128>>::shr_assign",
    "hash": "20800565574044758218101736142453220894"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u32 as ops::bit::ShrAssign<&i16>>::shr_assign",
    "hash": "101156690596641372464136077228434621437"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u32 as ops::bit::ShrAssign<&i32>>::shr_assign",
    "hash": "2493521767227701959143980012858588402"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u32 as ops::bit::ShrAssign<&i64>>::shr_assign",
    "hash": "104612665719191023610764224956188722668"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u32 as ops::bit::ShrAssign<&i8>>::shr_assign",
    "hash": "297273689497749162312948393195700861860"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u32 as ops::bit::ShrAssign<&isize>>::shr_assign",
    "hash": "1050394093128608313517959182436287591381"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u32 as ops::bit::ShrAssign<&u128>>::shr_assign",
    "hash": "11068920896943063951736577106276111387"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u32 as ops::bit::ShrAssign<&u16>>::shr_assign",
    "hash": "743264581794211711616545706064469306700"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u32 as ops::bit::ShrAssign<&u32>>::shr_assign",
    "hash": "1807132717738638711614726621828957845756"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u32 as ops::bit::ShrAssign<&u64>>::shr_assign",
    "hash": "129459390018125451137069251740193258533"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u32 as ops::bit::ShrAssign<&u8>>::shr_assign",
    "hash": "961011242599288426114967137319198714301"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u32 as ops::bit::ShrAssign<&usize>>::shr_assign",
    "hash": "24588557839131282066974871493078757711"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u64 as ops::arith::Add<&u64>>::add",
    "hash": "134539678732592052124705086393343749735"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u64 as ops::arith::AddAssign<&u64>>::add_assign",
    "hash": "58712962057144355625161757308072067873"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u64 as ops::arith::Div<&u64>>::div",
    "hash": "1209227468621513163012801083635821136747"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u64 as ops::arith::DivAssign<&u64>>::div_assign",
    "hash": "66025047854646243267385817793555646709"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u64 as ops::arith::Mul<&u64>>::mul",
    "hash": "83479321638721763692449690507194413846"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u64 as ops::arith::MulAssign<&u64>>::mul_assign",
    "hash": "1431265625403481109716656352456730286845"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u64 as ops::arith::Rem<&u64>>::rem",
    "hash": "172958062518190963586768832038459623228"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u64 as ops::arith::RemAssign<&u64>>::rem_assign",
    "hash": "120141962715614002417595603179453787613"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u64 as ops::arith::Sub<&u64>>::sub",
    "hash": "1277666987446344054214566501732171075611"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u64 as ops::arith::SubAssign<&u64>>::sub_assign",
    "hash": "1257133000582338172417805612927992911528"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u64 as ops::bit::BitAnd<&u64>>::bitand",
    "hash": "6346087602326594397414578242643250420"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u64 as ops::bit::BitAndAssign<&u64>>::bitand_assign",
    "hash": "1503952676880065760318186817304655051858"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u64 as ops::bit::BitOr<&u64>>::bitor",
    "hash": "1811606181469027902910856902949463591034"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u64 as ops::bit::BitOrAssign<&u64>>::bitor_assign",
    "hash": "40818159211691558275726427392084344077"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u64 as ops::bit::BitXor<&u64>>::bitxor",
    "hash": "1035710993352624660311918769550435105295"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u64 as ops::bit::BitXorAssign<&u64>>::bitxor_assign",
    "hash": "380206197024932941818410495771671840074"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u64 as ops::bit::Shl<&i128>>::shl",
    "hash": "152312476328010757328865205953003898830"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u64 as ops::bit::Shl<&i16>>::shl",
    "hash": "89197000295579675327913649294764398478"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u64 as ops::bit::Shl<&i32>>::shl",
    "hash": "149168709398976427161188422741372182505"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u64 as ops::bit::Shl<&i64>>::shl",
    "hash": "7366644644596129967674171436491890743"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u64 as ops::bit::Shl<&i8>>::shl",
    "hash": "159428242810209506956738010590775410727"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u64 as ops::bit::Shl<&isize>>::shl",
    "hash": "176042233533392469927589691904305345321"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u64 as ops::bit::Shl<&u128>>::shl",
    "hash": "14514630225904823565887235953367641114"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u64 as ops::bit::Shl<&u16>>::shl",
    "hash": "1662619460976053209510421061390127052039"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u64 as ops::bit::Shl<&u32>>::shl",
    "hash": "176090599575747477896584410332126005196"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u64 as ops::bit::Shl<&u64>>::shl",
    "hash": "117728323782251027524725766152971622168"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u64 as ops::bit::Shl<&u8>>::shl",
    "hash": "99136352417178070511748853077902304607"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u64 as ops::bit::Shl<&usize>>::shl",
    "hash": "11526601647257390598397248826181870241"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u64 as ops::bit::ShlAssign<&i128>>::shl_assign",
    "hash": "83019024351820516207702662768134479342"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u64 as ops::bit::ShlAssign<&i16>>::shl_assign",
    "hash": "1665725819587747087613302216358451721184"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u64 as ops::bit::ShlAssign<&i32>>::shl_assign",
    "hash": "761890564720383690711734448123863462219"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u64 as ops::bit::ShlAssign<&i64>>::shl_assign",
    "hash": "25500837421731226481144834715792342357"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u64 as ops::bit::ShlAssign<&i8>>::shl_assign",
    "hash": "117776694572568462082964860327758552124"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u64 as ops::bit::ShlAssign<&isize>>::shl_assign",
    "hash": "633829588001523350317552392837712774447"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u64 as ops::bit::ShlAssign<&u128>>::shl_assign",
    "hash": "277671097034271078314920663689462381074"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u64 as ops::bit::ShlAssign<&u16>>::shl_assign",
    "hash": "46305687093787415218308356288848150484"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u64 as ops::bit::ShlAssign<&u32>>::shl_assign",
    "hash": "869515339911828617715459548278139810141"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u64 as ops::bit::ShlAssign<&u64>>::shl_assign",
    "hash": "121737658333047076569538646530600403437"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u64 as ops::bit::ShlAssign<&u8>>::shl_assign",
    "hash": "1530717789813777295012127784743211649239"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u64 as ops::bit::ShlAssign<&usize>>::shl_assign",
    "hash": "182851128506927002416528605373444025842"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u64 as ops::bit::Shr<&i128>>::shr",
    "hash": "154110981026370630610841239340317486400"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u64 as ops::bit::Shr<&i16>>::shr",
    "hash": "11720776114217951535931998269612870693"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u64 as ops::bit::Shr<&i32>>::shr",
    "hash": "160621739598204035815001853904271316726"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u64 as ops::bit::Shr<&i64>>::shr",
    "hash": "118237725076302568202431678155309527491"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u64 as ops::bit::Shr<&i8>>::shr",
    "hash": "152431440468037815705964426596861188580"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u64 as ops::bit::Shr<&isize>>::shr",
    "hash": "145580168434373569798534813430553350250"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u64 as ops::bit::Shr<&u128>>::shr",
    "hash": "1686583730550496123912481557242834691014"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u64 as ops::bit::Shr<&u16>>::shr",
    "hash": "392748686748777756911615207935680233002"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u64 as ops::bit::Shr<&u32>>::shr",
    "hash": "16090518422946079812521542788779333871"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u64 as ops::bit::Shr<&u64>>::shr",
    "hash": "163992689563033982088618043558349096922"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u64 as ops::bit::Shr<&u8>>::shr",
    "hash": "137372205973408497644152672833892248109"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u64 as ops::bit::Shr<&usize>>::shr",
    "hash": "14781457212714720419589546199112714202"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u64 as ops::bit::ShrAssign<&i128>>::shr_assign",
    "hash": "20699761960969522513490902377860508139"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u64 as ops::bit::ShrAssign<&i16>>::shr_assign",
    "hash": "432537278147318043318207902547489802987"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u64 as ops::bit::ShrAssign<&i32>>::shr_assign",
    "hash": "31993422895343505777183359522473608719"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u64 as ops::bit::ShrAssign<&i64>>::shr_assign",
    "hash": "1456511206758177792013029621743890610423"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u64 as ops::bit::ShrAssign<&i8>>::shr_assign",
    "hash": "1335634643809417089760048529618447945"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u64 as ops::bit::ShrAssign<&isize>>::shr_assign",
    "hash": "1615996439249039487410878816530896407709"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u64 as ops::bit::ShrAssign<&u128>>::shr_assign",
    "hash": "1723256215946150448317034616286303673280"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u64 as ops::bit::ShrAssign<&u16>>::shr_assign",
    "hash": "4635872526064275049057733470588754440"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u64 as ops::bit::ShrAssign<&u32>>::shr_assign",
    "hash": "169010079972992917418027463902298036577"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u64 as ops::bit::ShrAssign<&u64>>::shr_assign",
    "hash": "422575461567732413316274305293110634228"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u64 as ops::bit::ShrAssign<&u8>>::shr_assign",
    "hash": "22476264440137242076687493756962873476"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u64 as ops::bit::ShrAssign<&usize>>::shr_assign",
    "hash": "6589798079078415442473689615690597966"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u8 as ops::arith::Add<&u8>>::add",
    "hash": "98328573110472543898671058995967036234"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u8 as ops::arith::AddAssign<&u8>>::add_assign",
    "hash": "1608333412196717223614425602372986452556"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u8 as ops::arith::Div<&u8>>::div",
    "hash": "13873929601884261929081189368137325329"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u8 as ops::arith::DivAssign<&u8>>::div_assign",
    "hash": "105880236617187995549982353027814280117"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u8 as ops::arith::Mul<&u8>>::mul",
    "hash": "1476277167238332479814496504122711235211"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u8 as ops::arith::MulAssign<&u8>>::mul_assign",
    "hash": "156700657519157413445034267699082219864"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u8 as ops::arith::Rem<&u8>>::rem",
    "hash": "120326992867704602303843801578938487712"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u8 as ops::arith::RemAssign<&u8>>::rem_assign",
    "hash": "549508696912775355913511941321326739437"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u8 as ops::arith::Sub<&u8>>::sub",
    "hash": "1152476691731523335117491478094499601798"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u8 as ops::arith::SubAssign<&u8>>::sub_assign",
    "hash": "409743780342455560617106776857591145541"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u8 as ops::bit::BitAnd<&u8>>::bitand",
    "hash": "1748793706065922073115990197758463636263"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u8 as ops::bit::BitAndAssign<&u8>>::bitand_assign",
    "hash": "3209030367679218227557095570811271094"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u8 as ops::bit::BitOr<&u8>>::bitor",
    "hash": "42064129415613643406384991684813475527"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u8 as ops::bit::BitOrAssign<&u8>>::bitor_assign",
    "hash": "8193543802013694733543958397954885494"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u8 as ops::bit::BitXor<&u8>>::bitxor",
    "hash": "42309369360428296738902615723415658624"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u8 as ops::bit::BitXorAssign<&u8>>::bitxor_assign",
    "hash": "31630403509453631423961940275789326173"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u8 as ops::bit::Shl<&i128>>::shl",
    "hash": "63213955949397182048222247447959614247"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u8 as ops::bit::Shl<&i16>>::shl",
    "hash": "43712563637202670879777974081613796379"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u8 as ops::bit::Shl<&i32>>::shl",
    "hash": "175065939307455564015323932597667392911"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u8 as ops::bit::Shl<&i64>>::shl",
    "hash": "26258900108581475954855823245480004618"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u8 as ops::bit::Shl<&i8>>::shl",
    "hash": "156485736663370090197080203176820386636"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u8 as ops::bit::Shl<&isize>>::shl",
    "hash": "1343933908018643470511989811184774759859"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u8 as ops::bit::Shl<&u128>>::shl",
    "hash": "103033522119145406815932824463103127619"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u8 as ops::bit::Shl<&u16>>::shl",
    "hash": "1123987701312751549210786509607145108749"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u8 as ops::bit::Shl<&u32>>::shl",
    "hash": "280432013923037987615979669373532288983"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u8 as ops::bit::Shl<&u64>>::shl",
    "hash": "1823270998605647210410054494277095352825"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u8 as ops::bit::Shl<&u8>>::shl",
    "hash": "148698765752243958215325436264479352509"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u8 as ops::bit::Shl<&usize>>::shl",
    "hash": "1657971415745374660514678652554180299585"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u8 as ops::bit::ShlAssign<&i128>>::shl_assign",
    "hash": "26920476402376239642969677740827480660"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u8 as ops::bit::ShlAssign<&i16>>::shl_assign",
    "hash": "142307823707975587401103105079325888247"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u8 as ops::bit::ShlAssign<&i32>>::shl_assign",
    "hash": "172576880472478391006521427432425081022"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u8 as ops::bit::ShlAssign<&i64>>::shl_assign",
    "hash": "45637653177962185351539621855410642512"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u8 as ops::bit::ShlAssign<&i8>>::shl_assign",
    "hash": "1081326713194487378015973104505896104"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u8 as ops::bit::ShlAssign<&isize>>::shl_assign",
    "hash": "1329789905700698356617683756223039400020"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u8 as ops::bit::ShlAssign<&u128>>::shl_assign",
    "hash": "1355492644051781577816436565800105464080"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u8 as ops::bit::ShlAssign<&u16>>::shl_assign",
    "hash": "257426944648337830416477269178221165628"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u8 as ops::bit::ShlAssign<&u32>>::shl_assign",
    "hash": "1609393392404206318216774419116105703785"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u8 as ops::bit::ShlAssign<&u64>>::shl_assign",
    "hash": "142907954704421534485980889894587807472"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u8 as ops::bit::ShlAssign<&u8>>::shl_assign",
    "hash": "233298022309745724310608801946853319086"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u8 as ops::bit::ShlAssign<&usize>>::shl_assign",
    "hash": "86575361056001513325355485158808515810"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u8 as ops::bit::Shr<&i128>>::shr",
    "hash": "59041548177243912144967734267737738026"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u8 as ops::bit::Shr<&i16>>::shr",
    "hash": "117281403935255571610731823152529359817"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u8 as ops::bit::Shr<&i32>>::shr",
    "hash": "1067278447111488836010407817145122666915"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u8 as ops::bit::Shr<&i64>>::shr",
    "hash": "108895638333705600659308012342485120806"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u8 as ops::bit::Shr<&i8>>::shr",
    "hash": "148419777388936071846317542261170072342"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u8 as ops::bit::Shr<&isize>>::shr",
    "hash": "1390249830340254713714360191229102643237"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u8 as ops::bit::Shr<&u128>>::shr",
    "hash": "56786668972997064772065630607424655121"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u8 as ops::bit::Shr<&u16>>::shr",
    "hash": "8918566045425744755224600621507242075"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u8 as ops::bit::Shr<&u32>>::shr",
    "hash": "29824546853178753904588838992557449099"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u8 as ops::bit::Shr<&u64>>::shr",
    "hash": "135144980168669314664381378016033014837"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u8 as ops::bit::Shr<&u8>>::shr",
    "hash": "121477740495020851712548791137866993904"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u8 as ops::bit::Shr<&usize>>::shr",
    "hash": "132904923077153593881997461737628357881"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u8 as ops::bit::ShrAssign<&i128>>::shr_assign",
    "hash": "600426195651969265110903116723654631702"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u8 as ops::bit::ShrAssign<&i16>>::shr_assign",
    "hash": "73549967626989510688872689766772925184"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u8 as ops::bit::ShrAssign<&i32>>::shr_assign",
    "hash": "310594366007308258612289061332390864746"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u8 as ops::bit::ShrAssign<&i64>>::shr_assign",
    "hash": "132842219509226845557556861016783530741"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u8 as ops::bit::ShrAssign<&i8>>::shr_assign",
    "hash": "89478951336307607853511601472185561992"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u8 as ops::bit::ShrAssign<&isize>>::shr_assign",
    "hash": "1128181294201604730811604459373119028090"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u8 as ops::bit::ShrAssign<&u128>>::shr_assign",
    "hash": "835472095910007891817895781473901383283"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u8 as ops::bit::ShrAssign<&u16>>::shr_assign",
    "hash": "1378021136985826632517303008425235335653"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u8 as ops::bit::ShrAssign<&u32>>::shr_assign",
    "hash": "24297878532561396288609527107433527503"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u8 as ops::bit::ShrAssign<&u64>>::shr_assign",
    "hash": "1323236387539651372816917957965430699790"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u8 as ops::bit::ShrAssign<&u8>>::shr_assign",
    "hash": "64427641001877284021686238924932376983"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u8 as ops::bit::ShrAssign<&usize>>::shr_assign",
    "hash": "6222242885449249968329117214669868276"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<usize as ops::arith::Add<&usize>>::add",
    "hash": "1614654634895657775916257780422624616223"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<usize as ops::arith::AddAssign<&usize>>::add_assign",
    "hash": "147158870004959936747464697283668994744"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<usize as ops::arith::Div<&usize>>::div",
    "hash": "69747676218484066165363542884754488182"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<usize as ops::arith::DivAssign<&usize>>::div_assign",
    "hash": "142681760788998473689708013103283115672"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<usize as ops::arith::Mul<&usize>>::mul",
    "hash": "108224038069129778875059752103422089085"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<usize as ops::arith::MulAssign<&usize>>::mul_assign",
    "hash": "101155082926836052551896339225881163716"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<usize as ops::arith::Rem<&usize>>::rem",
    "hash": "476829673127127077916073877576936714076"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<usize as ops::arith::RemAssign<&usize>>::rem_assign",
    "hash": "989704122349513567915844513531976983482"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<usize as ops::arith::Sub<&usize>>::sub",
    "hash": "319945555664539878017279673086659865715"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<usize as ops::arith::SubAssign<&usize>>::sub_assign",
    "hash": "94306108026677042988410716596634887840"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<usize as ops::bit::BitAnd<&usize>>::bitand",
    "hash": "17435936355128296073444200068781648396"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<usize as ops::bit::BitAndAssign<&usize>>::bitand_assign",
    "hash": "1301292624806143460413593428190372195285"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<usize as ops::bit::BitOr<&usize>>::bitor",
    "hash": "82322853059895501705031650447886161973"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<usize as ops::bit::BitOrAssign<&usize>>::bitor_assign",
    "hash": "184022690104605206822342192086553388485"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<usize as ops::bit::BitXor<&usize>>::bitxor",
    "hash": "36149074340900968792621900469606846933"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<usize as ops::bit::BitXorAssign<&usize>>::bitxor_assign",
    "hash": "79350393797954388413837311361481943097"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<usize as ops::bit::Shl<&i128>>::shl",
    "hash": "6080378966546193479153631062443333194"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<usize as ops::bit::Shl<&i16>>::shl",
    "hash": "7413129523035910281224693567749501780"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<usize as ops::bit::Shl<&i32>>::shl",
    "hash": "939444632222010614614677471821790286780"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<usize as ops::bit::Shl<&i64>>::shl",
    "hash": "12710701162409349282872629358445955550"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<usize as ops::bit::Shl<&i8>>::shl",
    "hash": "208596107452770364317013959155965592106"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<usize as ops::bit::Shl<&isize>>::shl",
    "hash": "1534259096947632768218351509312514329960"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<usize as ops::bit::Shl<&u128>>::shl",
    "hash": "80649154307622419886564886236550930455"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<usize as ops::bit::Shl<&u16>>::shl",
    "hash": "83178164713792866388601521223624648676"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<usize as ops::bit::Shl<&u32>>::shl",
    "hash": "143820901782473728769683967008569396029"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<usize as ops::bit::Shl<&u64>>::shl",
    "hash": "78073623432144556011899303110745344070"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<usize as ops::bit::Shl<&u8>>::shl",
    "hash": "171253201941073623695948570542644169052"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<usize as ops::bit::Shl<&usize>>::shl",
    "hash": "1822164382863374819416998809246245767139"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<usize as ops::bit::ShlAssign<&i128>>::shl_assign",
    "hash": "16182769236733496805036238086158363030"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<usize as ops::bit::ShlAssign<&i16>>::shl_assign",
    "hash": "18664063089056231447215191772119332139"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<usize as ops::bit::ShlAssign<&i32>>::shl_assign",
    "hash": "1483297160714447686412139797758564129512"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<usize as ops::bit::ShlAssign<&i64>>::shl_assign",
    "hash": "927009371531512756116588301740385362265"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<usize as ops::bit::ShlAssign<&i8>>::shl_assign",
    "hash": "1370227298514463467010039187693134280432"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<usize as ops::bit::ShlAssign<&isize>>::shl_assign",
    "hash": "124699002786138129514573571327942375866"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<usize as ops::bit::ShlAssign<&u128>>::shl_assign",
    "hash": "88496025100864499848162293466950004803"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<usize as ops::bit::ShlAssign<&u16>>::shl_assign",
    "hash": "1204559652711148633714148432236185971124"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<usize as ops::bit::ShlAssign<&u32>>::shl_assign",
    "hash": "128799320683647422611192384961259278769"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<usize as ops::bit::ShlAssign<&u64>>::shl_assign",
    "hash": "62332501374669349683497717234743059401"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<usize as ops::bit::ShlAssign<&u8>>::shl_assign",
    "hash": "1482301998514267410014574983295622943199"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<usize as ops::bit::ShlAssign<&usize>>::shl_assign",
    "hash": "42091708057230030911370280004314643563"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<usize as ops::bit::Shr<&i128>>::shr",
    "hash": "22854779699679463598517452214934714246"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<usize as ops::bit::Shr<&i16>>::shr",
    "hash": "732700922891620559416387312384839348559"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<usize as ops::bit::Shr<&i32>>::shr",
    "hash": "141580448588174724243362693285779383439"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<usize as ops::bit::Shr<&i64>>::shr",
    "hash": "406809492233466025610147152339057178576"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<usize as ops::bit::Shr<&i8>>::shr",
    "hash": "27104708226954890888594165208903876184"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<usize as ops::bit::Shr<&isize>>::shr",
    "hash": "98027387298128185035314291442929478975"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<usize as ops::bit::Shr<&u128>>::shr",
    "hash": "9791938409793031218396404526061322938"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<usize as ops::bit::Shr<&u16>>::shr",
    "hash": "137510412440746748041737635202782172378"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<usize as ops::bit::Shr<&u32>>::shr",
    "hash": "677108840940243545918018000659893267183"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<usize as ops::bit::Shr<&u64>>::shr",
    "hash": "165573824501490882866962632466250925568"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<usize as ops::bit::Shr<&u8>>::shr",
    "hash": "30234889235354321899681320840007118469"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<usize as ops::bit::Shr<&usize>>::shr",
    "hash": "179408480666129993586394316006132646255"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<usize as ops::bit::ShrAssign<&i128>>::shr_assign",
    "hash": "81329413326208677294326270773106028438"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<usize as ops::bit::ShrAssign<&i16>>::shr_assign",
    "hash": "130736039821025738083147483603749197481"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<usize as ops::bit::ShrAssign<&i32>>::shr_assign",
    "hash": "170907381786583437452151185264654512905"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<usize as ops::bit::ShrAssign<&i64>>::shr_assign",
    "hash": "1655304469369678577918044127918978871980"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<usize as ops::bit::ShrAssign<&i8>>::shr_assign",
    "hash": "120392148007707889946716409728876176879"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<usize as ops::bit::ShrAssign<&isize>>::shr_assign",
    "hash": "18404752592579528306475238760488928510"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<usize as ops::bit::ShrAssign<&u128>>::shr_assign",
    "hash": "80754620455484657124150089382098854005"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<usize as ops::bit::ShrAssign<&u16>>::shr_assign",
    "hash": "1262963103839776627017841136086618634513"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<usize as ops::bit::ShrAssign<&u32>>::shr_assign",
    "hash": "1782368220017790697914518691907324994449"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<usize as ops::bit::ShrAssign<&u64>>::shr_assign",
    "hash": "83031568376340571997698067540952010644"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<usize as ops::bit::ShrAssign<&u8>>::shr_assign",
    "hash": "7865504992128505684051582602203364431"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<usize as ops::bit::ShrAssign<&usize>>::shr_assign",
    "hash": "665125577036080795417467355620283829957"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/fallback.rs",
    "func": "<bool as intrinsics::fallback::DisjointBitOr>::disjoint_bitor",
    "hash": "250800211300164603812517143290931935490"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/fallback.rs",
    "func": "<i128 as intrinsics::fallback::CarryingMulAdd>::carrying_mul_add",
    "hash": "1290072300275374424854000027938811249"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/fallback.rs",
    "func": "<i128 as intrinsics::fallback::DisjointBitOr>::disjoint_bitor",
    "hash": "80040651926103909678271999392285372990"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/fallback.rs",
    "func": "<i16 as intrinsics::fallback::CarryingMulAdd>::carrying_mul_add",
    "hash": "1830217983329785560410244833622901427052"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/fallback.rs",
    "func": "<i16 as intrinsics::fallback::DisjointBitOr>::disjoint_bitor",
    "hash": "6989983334729211908927339249900663943"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/fallback.rs",
    "func": "<i32 as intrinsics::fallback::CarryingMulAdd>::carrying_mul_add",
    "hash": "122302766217189543014900254878157438416"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/fallback.rs",
    "func": "<i32 as intrinsics::fallback::DisjointBitOr>::disjoint_bitor",
    "hash": "1063987999954300775215342309582526319529"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/fallback.rs",
    "func": "<i64 as intrinsics::fallback::CarryingMulAdd>::carrying_mul_add",
    "hash": "173387786816898789623000030637272844593"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/fallback.rs",
    "func": "<i64 as intrinsics::fallback::DisjointBitOr>::disjoint_bitor",
    "hash": "136616187162751180573644041167231130554"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/fallback.rs",
    "func": "<i8 as intrinsics::fallback::CarryingMulAdd>::carrying_mul_add",
    "hash": "513576104662679029714274679730481362425"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/fallback.rs",
    "func": "<i8 as intrinsics::fallback::DisjointBitOr>::disjoint_bitor",
    "hash": "60458008535657027788705666854141614114"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/fallback.rs",
    "func": "<isize as intrinsics::fallback::CarryingMulAdd>::carrying_mul_add",
    "hash": "1206474107364746324514036244532711785001"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/fallback.rs",
    "func": "<isize as intrinsics::fallback::DisjointBitOr>::disjoint_bitor",
    "hash": "62613819432045952176759186974463354075"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/fallback.rs",
    "func": "<u128 as intrinsics::fallback::CarryingMulAdd>::carrying_mul_add",
    "hash": "1049863653024822663415096848776233585763"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/fallback.rs",
    "func": "<u128 as intrinsics::fallback::DisjointBitOr>::disjoint_bitor",
    "hash": "41389422597421656741395145042566161444"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/fallback.rs",
    "func": "<u16 as intrinsics::fallback::CarryingMulAdd>::carrying_mul_add",
    "hash": "1032289468151012314118203924934304480766"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/fallback.rs",
    "func": "<u16 as intrinsics::fallback::DisjointBitOr>::disjoint_bitor",
    "hash": "1806494181001350783915205167250141868281"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/fallback.rs",
    "func": "<u32 as intrinsics::fallback::CarryingMulAdd>::carrying_mul_add",
    "hash": "1333588820054761765511554855614177767265"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/fallback.rs",
    "func": "<u32 as intrinsics::fallback::DisjointBitOr>::disjoint_bitor",
    "hash": "14821326756404741505611264372285877509"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/fallback.rs",
    "func": "<u64 as intrinsics::fallback::CarryingMulAdd>::carrying_mul_add",
    "hash": "15780086404796901452171114016829526503"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/fallback.rs",
    "func": "<u64 as intrinsics::fallback::DisjointBitOr>::disjoint_bitor",
    "hash": "1142238300830356026814631151773818865873"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/fallback.rs",
    "func": "<u8 as intrinsics::fallback::CarryingMulAdd>::carrying_mul_add",
    "hash": "167165260706103225348828696425526634166"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/fallback.rs",
    "func": "<u8 as intrinsics::fallback::DisjointBitOr>::disjoint_bitor",
    "hash": "732735713645133618817345018103717632801"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/fallback.rs",
    "func": "<usize as intrinsics::fallback::CarryingMulAdd>::carrying_mul_add",
    "hash": "176863413171952423588298210118276962435"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/fallback.rs",
    "func": "<usize as intrinsics::fallback::DisjointBitOr>::disjoint_bitor",
    "hash": "130330123525716393101034958525209554520"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/fallback.rs",
    "func": "intrinsics::fallback::wide_mul_u128",
    "hash": "56064935532181582357217772644767711324"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/fallback.rs",
    "func": "intrinsics::fallback::wide_mul_u128::from_low_high",
    "hash": "1215867595331634964412092261842216784704"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/fallback.rs",
    "func": "intrinsics::fallback::wide_mul_u128::scalar_mul",
    "hash": "96480950455274538863936471544432656148"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/fallback.rs",
    "func": "intrinsics::fallback::wide_mul_u128::to_low_high",
    "hash": "1424635015723676172711879731863681352571"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mir.rs",
    "func": "intrinsics::mir::Assume",
    "hash": "139116841123241296862329197121605946323"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mir.rs",
    "func": "intrinsics::mir::Call",
    "hash": "6078477730596990242113457321841194043"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mir.rs",
    "func": "intrinsics::mir::Goto",
    "hash": "1759747026585201915317755709751175452805"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mir.rs",
    "func": "intrinsics::mir::Return",
    "hash": "1170599627963948291011266800954281277174"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mir.rs",
    "func": "intrinsics::mir::ReturnTo",
    "hash": "1011495986108837620716835023935711399203"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mir.rs",
    "func": "intrinsics::mir::Unreachable",
    "hash": "66192141860655940445911401905070001291"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mir.rs",
    "func": "intrinsics::mir::UnwindCleanup",
    "hash": "1017943120358722484515226857180518966828"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mir.rs",
    "func": "intrinsics::mir::UnwindContinue",
    "hash": "716205042651839572811207433411047803327"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mir.rs",
    "func": "intrinsics::mir::UnwindResume",
    "hash": "434066018118664981110529406670455942351"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mir.rs",
    "func": "intrinsics::mir::UnwindTerminate",
    "hash": "1007748932934090353117462947671117947538"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mir.rs",
    "func": "intrinsics::mir::UnwindUnreachable",
    "hash": "17925609387187167828243374465831357219"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "<intrinsics::AtomicOrdering as cmp::Eq>::assert_receiver_is_total_eq",
    "hash": "711056209482254658113082833997498389498"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "<intrinsics::AtomicOrdering as cmp::PartialEq>::eq",
    "hash": "88877246034085362305537985067713117388"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "<intrinsics::verify::arr_mod::generated_struct as clone::Clone>::clone",
    "hash": "668434863308423807612947543209820319186"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "<intrinsics::verify::arr_mod::generated_struct as cmp::PartialEq>::eq",
    "hash": "145417971357762886007482460662303412209"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "<intrinsics::verify::bool_mod::generated_struct as clone::Clone>::clone",
    "hash": "1130182855573675769914523734239966029409"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "<intrinsics::verify::bool_mod::generated_struct as cmp::PartialEq>::eq",
    "hash": "2887600198566352773684432512560948637"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "<intrinsics::verify::char_mod::generated_struct as clone::Clone>::clone",
    "hash": "109712242799967761297613655658910135074"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "<intrinsics::verify::char_mod::generated_struct as cmp::PartialEq>::eq",
    "hash": "102381487177496324338476543520831045774"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "<intrinsics::verify::i128_mod::generated_struct as clone::Clone>::clone",
    "hash": "95924691271640231921433012408833616119"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "<intrinsics::verify::i128_mod::generated_struct as cmp::PartialEq>::eq",
    "hash": "167854312578663968009529066705777883165"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "<intrinsics::verify::i16_mod::generated_struct as clone::Clone>::clone",
    "hash": "126771781333547488368086322377509765640"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "<intrinsics::verify::i16_mod::generated_struct as cmp::PartialEq>::eq",
    "hash": "1689252594087785933915598483619334608152"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "<intrinsics::verify::i32_mod::generated_struct as clone::Clone>::clone",
    "hash": "55986416196107202667177120378888181856"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "<intrinsics::verify::i32_mod::generated_struct as cmp::PartialEq>::eq",
    "hash": "34665534152048460913367544338390960166"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "<intrinsics::verify::i64_mod::generated_struct as clone::Clone>::clone",
    "hash": "8041577304042185661418501751727040648"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "<intrinsics::verify::i64_mod::generated_struct as cmp::PartialEq>::eq",
    "hash": "9859181824640323755333096837796082576"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "<intrinsics::verify::i8_mod::generated_struct as clone::Clone>::clone",
    "hash": "957069709908682265117649890045899517332"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "<intrinsics::verify::i8_mod::generated_struct as cmp::PartialEq>::eq",
    "hash": "48027802749924940115726248583106801393"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "<intrinsics::verify::struct_A as clone::Clone>::clone",
    "hash": "1137666718250997373015979146969043840015"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "<intrinsics::verify::struct_A as cmp::PartialEq>::eq",
    "hash": "1554279941658177487310761975885713866112"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "<intrinsics::verify::struct_mod::generated_struct as clone::Clone>::clone",
    "hash": "1242200455388979343313558476846572027837"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "<intrinsics::verify::struct_mod::generated_struct as cmp::PartialEq>::eq",
    "hash": "1004825844807549103615688802214258372912"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "<intrinsics::verify::tuple_mod::generated_struct as clone::Clone>::clone",
    "hash": "1220998989066453544810325948197839204112"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "<intrinsics::verify::tuple_mod::generated_struct as cmp::PartialEq>::eq",
    "hash": "554385974591348046015105854354708489357"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "<intrinsics::verify::u128_mod::generated_struct as clone::Clone>::clone",
    "hash": "1107942412453118282716260082566407623385"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "<intrinsics::verify::u128_mod::generated_struct as cmp::PartialEq>::eq",
    "hash": "1526236189042748075114283679914995575222"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "<intrinsics::verify::u16_mod::generated_struct as clone::Clone>::clone",
    "hash": "15477842866907110815631714505822464592"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "<intrinsics::verify::u16_mod::generated_struct as cmp::PartialEq>::eq",
    "hash": "122261535514438133911763084164840138267"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "<intrinsics::verify::u32_mod::generated_struct as clone::Clone>::clone",
    "hash": "98802623013543488718768907816755635006"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "<intrinsics::verify::u32_mod::generated_struct as cmp::PartialEq>::eq",
    "hash": "6004524066957894349610382023112068453"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "<intrinsics::verify::u64_mod::generated_struct as clone::Clone>::clone",
    "hash": "306348905796160350213674312474299428749"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "<intrinsics::verify::u64_mod::generated_struct as cmp::PartialEq>::eq",
    "hash": "1305367119046602001816363039827513849713"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "<intrinsics::verify::u8_mod::generated_struct as clone::Clone>::clone",
    "hash": "58344607455878823815951414012232932218"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "<intrinsics::verify::u8_mod::generated_struct as cmp::PartialEq>::eq",
    "hash": "49286551530941805783318609903352435112"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "<intrinsics::verify::u8_struct as clone::Clone>::clone",
    "hash": "594674818617818225913145583589805084172"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "<intrinsics::verify::u8_struct as cmp::PartialEq>::eq",
    "hash": "95855262543484333061997486664200818696"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "cell::panic_already_borrowed::do_panic::compiletime",
    "hash": "149016491882703966614369493205944347039"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "cell::panic_already_borrowed::do_panic::runtime",
    "hash": "64594600704116155152794594163518059784"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "cell::panic_already_mutably_borrowed::do_panic::compiletime",
    "hash": "24519840219812011119266756937500078368"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "cell::panic_already_mutably_borrowed::do_panic::runtime",
    "hash": "718949106997644289417983601561854252516"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "char::methods::encode_utf16_raw::do_panic::compiletime",
    "hash": "88052731816800370845922057460954567729"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "char::methods::encode_utf16_raw::do_panic::runtime",
    "hash": "16777079368042755145990857670913054515"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "char::methods::encode_utf8_raw::do_panic::compiletime",
    "hash": "1638183979521812543813190801179967899671"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "char::methods::encode_utf8_raw::do_panic::runtime",
    "hash": "180216954894167382576912062485815426"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "f128::<impl f128>::clamp::do_panic::compiletime",
    "hash": "159963367604859094706177739418435620816"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "f128::<impl f128>::clamp::do_panic::runtime",
    "hash": "16140974877641887085089842833641598797"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "f16::<impl f16>::clamp::do_panic::compiletime",
    "hash": "219487126421145596418015354223038147254"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "f16::<impl f16>::clamp::do_panic::runtime",
    "hash": "1558485079903789847913522612086713936569"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "f32::<impl f32>::clamp::do_panic::compiletime",
    "hash": "198150020248112727011407715180527090277"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "f32::<impl f32>::clamp::do_panic::runtime",
    "hash": "1810400992473532710818168139255914387438"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "f64::<impl f64>::clamp::do_panic::compiletime",
    "hash": "1204216716995483789011413885380631460095"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "f64::<impl f64>::clamp::do_panic::runtime",
    "hash": "907177110728803140012343899503990895270"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::assume",
    "hash": "150801711286849130431483622466962590964"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::cold_path",
    "hash": "907759440697598486516002160639518786286"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::const_allocate",
    "hash": "1643928417563595727114252839317269764770"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::contract_checks",
    "hash": "202041077652800040812890563446226571566"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::likely",
    "hash": "159665749354558523559870046369576019821"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::maximumf128",
    "hash": "59203540119877078856937496276701616291"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::maximumf16",
    "hash": "1839012001462943493312789979357486918333"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::maximumf32",
    "hash": "975617838670588919414885362085125181836"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::maximumf64",
    "hash": "1761474634303920217017290991538678528378"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::minimumf128",
    "hash": "13429142554620148681304087284986032831"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::minimumf16",
    "hash": "1526820967428337727416708302353840979734"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::minimumf32",
    "hash": "754999970016676017213814673682659647165"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::minimumf64",
    "hash": "984223037173483986910484498604904703708"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::ub_checks",
    "hash": "757546346109244535514310268435567268562"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::unlikely",
    "hash": "690438059002452523915046149102377829082"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::arr_mod::transmute_2ways_arr_to_struct",
    "hash": "1782836234009501699013505153310034086751",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::arr_mod::transmute_2ways_arr_to_tuple",
    "hash": "1548642099514507796912687660536548541622",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::arr_mod::transmute_2ways_struct_to_arr",
    "hash": "125678243630079585739055573690615619979",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::arr_mod::transmute_2ways_struct_to_tuple",
    "hash": "48232889845316672281743266481592779481",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::arr_mod::transmute_2ways_tuple_to_arr",
    "hash": "1610138955804854724011570420055102778715",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::arr_mod::transmute_2ways_tuple_to_struct",
    "hash": "560671018775620992610250780335878673234",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::arr_mod::transmute_unchecked_2ways_arr_to_struct",
    "hash": "42782247965931543379447204597237895409",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::arr_mod::transmute_unchecked_2ways_arr_to_tuple",
    "hash": "583587927615251465312119026964363592320",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::arr_mod::transmute_unchecked_2ways_struct_to_arr",
    "hash": "168540942449724171554557882765177577917",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::arr_mod::transmute_unchecked_2ways_struct_to_tuple",
    "hash": "1054323127368690798113326382798920892215",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::arr_mod::transmute_unchecked_2ways_tuple_to_arr",
    "hash": "106524147134762533511257286382297351265",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::arr_mod::transmute_unchecked_2ways_tuple_to_struct",
    "hash": "82300845034770575031578293537158343843",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::bool_mod::transmute_2ways_arr_to_struct",
    "hash": "1493145245406308527414131213039547476335",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::bool_mod::transmute_2ways_arr_to_tuple",
    "hash": "76468290955996072243509240867871895343",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::bool_mod::transmute_2ways_struct_to_arr",
    "hash": "117766584918247793014651525809133639425",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::bool_mod::transmute_2ways_struct_to_tuple",
    "hash": "1122708379609622710814356321089529169289",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::bool_mod::transmute_2ways_tuple_to_arr",
    "hash": "652903028932802913916223884107905701711",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::bool_mod::transmute_2ways_tuple_to_struct",
    "hash": "963682582275064797017507424448484592000",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::bool_mod::transmute_unchecked_2ways_arr_to_struct",
    "hash": "1242514022528176986817510362580767794230",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::bool_mod::transmute_unchecked_2ways_arr_to_tuple",
    "hash": "802777049615692983112304402069985083708",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::bool_mod::transmute_unchecked_2ways_struct_to_arr",
    "hash": "162822678440023756395444632235820221894",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::bool_mod::transmute_unchecked_2ways_struct_to_tuple",
    "hash": "160851554042158848054461050342046148599",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::bool_mod::transmute_unchecked_2ways_tuple_to_arr",
    "hash": "201927633429252964715915137016129910645",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::bool_mod::transmute_unchecked_2ways_tuple_to_struct",
    "hash": "31723497088135646504384382157039533647",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::char_mod::transmute_2ways_arr_to_struct",
    "hash": "14515943152161437285658607253261793595",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::char_mod::transmute_2ways_arr_to_tuple",
    "hash": "91769286473845536997581263747327181149",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::char_mod::transmute_2ways_struct_to_arr",
    "hash": "349553123673702121911688066548298642352",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::char_mod::transmute_2ways_struct_to_tuple",
    "hash": "144818945070960381637356495753671102127",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::char_mod::transmute_2ways_tuple_to_arr",
    "hash": "153776752539933960342645124805221893600",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::char_mod::transmute_2ways_tuple_to_struct",
    "hash": "183155090638173008972545629383488475117",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::char_mod::transmute_unchecked_2ways_arr_to_struct",
    "hash": "375367100771946685612659532331743637439",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::char_mod::transmute_unchecked_2ways_arr_to_tuple",
    "hash": "1747365412596594210310556833217478160862",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::char_mod::transmute_unchecked_2ways_struct_to_arr",
    "hash": "46977124276280545417220006974144135366",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::char_mod::transmute_unchecked_2ways_struct_to_tuple",
    "hash": "1314630462091548861715359439787351930760",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::char_mod::transmute_unchecked_2ways_tuple_to_arr",
    "hash": "3517298104611591028666291401512092361",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::char_mod::transmute_unchecked_2ways_tuple_to_struct",
    "hash": "1019988227674967069916524733365617598528",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::check_transmute_ptr_address",
    "hash": "448329896304056376117311759064104405379",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::check_transmute_ref_address",
    "hash": "123496227223650224214873311781084412938",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::check_transmute_slice_metadata",
    "hash": "79649927232142614032648513565621853114",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::check_transmute_unchecked_ptr_address",
    "hash": "69063508830066766814459561982060438283",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::check_transmute_unchecked_ref_address",
    "hash": "10426190361975738188297572463140444660",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::check_transmute_unchecked_slice_metadata",
    "hash": "1398787045674040914818125966077668739995",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::check_typed_swap_char",
    "hash": "19850233107170344513519623414712865235",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::check_typed_swap_non_zero",
    "hash": "80125706468327177191202458488832899810",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::check_typed_swap_u8",
    "hash": "1560020515138880291310547486150931187896",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::i128_mod::transmute_2ways_arr_to_struct",
    "hash": "690832886061430681412967335020757857524",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::i128_mod::transmute_2ways_arr_to_tuple",
    "hash": "1509486280768698343916747195069983099779",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::i128_mod::transmute_2ways_struct_to_arr",
    "hash": "1323535439300341388917424708619552106370",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::i128_mod::transmute_2ways_struct_to_tuple",
    "hash": "289095520187765776316258281158219438400",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::i128_mod::transmute_2ways_tuple_to_arr",
    "hash": "1438425847126291765218324713784715373619",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::i128_mod::transmute_2ways_tuple_to_struct",
    "hash": "85888705517229366832731474735558690982",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::i128_mod::transmute_unchecked_2ways_arr_to_struct",
    "hash": "524628470898620752118395103782369057628",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::i128_mod::transmute_unchecked_2ways_arr_to_tuple",
    "hash": "1804102397524396790415736745560777454275",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::i128_mod::transmute_unchecked_2ways_struct_to_arr",
    "hash": "998208797503268320214540567609618169393",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::i128_mod::transmute_unchecked_2ways_struct_to_tuple",
    "hash": "834074833036893645816302552026306690650",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::i128_mod::transmute_unchecked_2ways_tuple_to_arr",
    "hash": "622745556647461407617607201700805605066",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::i128_mod::transmute_unchecked_2ways_tuple_to_struct",
    "hash": "15313197870380383045102756222521918240",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::i16_mod::transmute_2ways_arr_to_struct",
    "hash": "99713086921356753642471597078649807012",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::i16_mod::transmute_2ways_arr_to_tuple",
    "hash": "3654220064086884913491336664424392710",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::i16_mod::transmute_2ways_struct_to_arr",
    "hash": "130780999492841581003614449097065742172",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::i16_mod::transmute_2ways_struct_to_tuple",
    "hash": "62435039703528667911716109945636434623",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::i16_mod::transmute_2ways_tuple_to_arr",
    "hash": "176437909869460479266516857612443099935",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::i16_mod::transmute_2ways_tuple_to_struct",
    "hash": "1306507911952792503513669107166684988247",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::i16_mod::transmute_unchecked_2ways_arr_to_struct",
    "hash": "218324735621527950310403275797999754938",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::i16_mod::transmute_unchecked_2ways_arr_to_tuple",
    "hash": "7724689204263021343971817653011444032",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::i16_mod::transmute_unchecked_2ways_struct_to_arr",
    "hash": "55874965254870041759871307409766852805",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::i16_mod::transmute_unchecked_2ways_struct_to_tuple",
    "hash": "1036014439095920221316883695467096803920",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::i16_mod::transmute_unchecked_2ways_tuple_to_arr",
    "hash": "145547988119000019471115650743349885594",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::i16_mod::transmute_unchecked_2ways_tuple_to_struct",
    "hash": "84202385123288838855906795736575023213",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::i32_mod::transmute_2ways_arr_to_struct",
    "hash": "157514356160552826709965650933430355374",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::i32_mod::transmute_2ways_arr_to_tuple",
    "hash": "150383032748753906197461524064454788393",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::i32_mod::transmute_2ways_struct_to_arr",
    "hash": "34998334156274505018334451592405441355",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::i32_mod::transmute_2ways_struct_to_tuple",
    "hash": "95052941373868172682082888717063405394",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::i32_mod::transmute_2ways_tuple_to_arr",
    "hash": "1727944834461676519616642374506064230625",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::i32_mod::transmute_2ways_tuple_to_struct",
    "hash": "293838628614581607413169920218499584483",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::i32_mod::transmute_unchecked_2ways_arr_to_struct",
    "hash": "792464577584897011313558520960314233849",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::i32_mod::transmute_unchecked_2ways_arr_to_tuple",
    "hash": "79898170579403412812705295255399806019",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::i32_mod::transmute_unchecked_2ways_struct_to_arr",
    "hash": "828285593416288878013008583953310256629",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::i32_mod::transmute_unchecked_2ways_struct_to_tuple",
    "hash": "71931223644101901085491737913213158115",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::i32_mod::transmute_unchecked_2ways_tuple_to_arr",
    "hash": "7023302279846556770288895686693303819",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::i32_mod::transmute_unchecked_2ways_tuple_to_struct",
    "hash": "743062532776624088491481478790291012",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::i64_mod::transmute_2ways_arr_to_struct",
    "hash": "133308294627584005095387885789489611272",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::i64_mod::transmute_2ways_arr_to_tuple",
    "hash": "93791636265330674429134292984186141285",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::i64_mod::transmute_2ways_struct_to_arr",
    "hash": "141705918985632805076735943727123580523",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::i64_mod::transmute_2ways_struct_to_tuple",
    "hash": "178137000795199808551536536487720555885",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::i64_mod::transmute_2ways_tuple_to_arr",
    "hash": "508365167965023687215638235317649278097",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::i64_mod::transmute_2ways_tuple_to_struct",
    "hash": "1004809868555896760914741595993072830932",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::i64_mod::transmute_unchecked_2ways_arr_to_struct",
    "hash": "106978804900771392459225886755296228254",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::i64_mod::transmute_unchecked_2ways_arr_to_tuple",
    "hash": "66044378122524671965167015519698928487",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::i64_mod::transmute_unchecked_2ways_struct_to_arr",
    "hash": "1147192729521097725912956060165015561462",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::i64_mod::transmute_unchecked_2ways_struct_to_tuple",
    "hash": "264759903974487088716024639673505258028",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::i64_mod::transmute_unchecked_2ways_tuple_to_arr",
    "hash": "183842085814741709635893711091994750010",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::i64_mod::transmute_unchecked_2ways_tuple_to_struct",
    "hash": "734140981226720079015626300785240880205",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::i8_mod::transmute_2ways_arr_to_struct",
    "hash": "1619585830647180263912626291646685113476",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::i8_mod::transmute_2ways_arr_to_tuple",
    "hash": "747478797484676081812359263618428681664",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::i8_mod::transmute_2ways_struct_to_arr",
    "hash": "1205028300351015526315690958533532390186",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::i8_mod::transmute_2ways_struct_to_tuple",
    "hash": "1570074966921448647416396404285535344538",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::i8_mod::transmute_2ways_tuple_to_arr",
    "hash": "72478540625000273999910394521835971107",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::i8_mod::transmute_2ways_tuple_to_struct",
    "hash": "47705268928651791585157625187492235187",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::i8_mod::transmute_unchecked_2ways_arr_to_struct",
    "hash": "114098157784318338162510162444496157936",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::i8_mod::transmute_unchecked_2ways_arr_to_tuple",
    "hash": "77735528705083662613343767784371940164",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::i8_mod::transmute_unchecked_2ways_struct_to_arr",
    "hash": "133205297907777614531340181038156542088",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::i8_mod::transmute_unchecked_2ways_struct_to_tuple",
    "hash": "599685976576918315411209177853008124127",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::i8_mod::transmute_unchecked_2ways_tuple_to_arr",
    "hash": "4581388359157637678224270190237192981",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::i8_mod::transmute_unchecked_2ways_tuple_to_struct",
    "hash": "50739000680567522464608749174843288749",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::should_fail_f32_to_char",
    "hash": "1270879794193388356614299110747674134252",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::should_fail_i32_to_char",
    "hash": "71252340057959818701713980782771637171",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::should_fail_i8_to_bool",
    "hash": "1630697644600351031812113838212023737269",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::should_fail_tuple_to_array",
    "hash": "53239433469148459114974354611828575504",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::should_fail_tuple_to_struct",
    "hash": "627025890420160389911671933230599683660",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::should_fail_tuple_to_tuple",
    "hash": "66809410001400578745317411492112642150",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::should_fail_u32_to_char",
    "hash": "115442410215745113653193554894841082957",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::should_fail_u8_to_bool",
    "hash": "625602589147878553717395897973500740983",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::should_succeed_bool_to_i8",
    "hash": "12075485336201253419692735109903496120",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::should_succeed_bool_to_u8",
    "hash": "9484830916799611742463060836324411575",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::should_succeed_char_to_f32",
    "hash": "43820970682645972939432141767338330855",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::should_succeed_char_to_i32",
    "hash": "1605395181587040219416965935160979217326",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::should_succeed_char_to_u32",
    "hash": "55682759958590687507922735031719115418",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::should_succeed_f32_to_char",
    "hash": "1368886441398472537004058093619616192",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::should_succeed_f32_to_i32",
    "hash": "1168782887460991199718096664534879486157",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::should_succeed_f32_to_u32",
    "hash": "946604788067296605110981180043288636675",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::should_succeed_f64_to_i64",
    "hash": "75753025837061513541419920864805314481",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::should_succeed_f64_to_u64",
    "hash": "377217855089213854812226147906617621461",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::should_succeed_i128_to_u128",
    "hash": "988990810077135512018115330772148874253",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::should_succeed_i16_to_u16",
    "hash": "42510263206727149901943168901994116937",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::should_succeed_i32_to_char",
    "hash": "854560901117245373515055931999938395243",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::should_succeed_i32_to_f32",
    "hash": "155566086465034992962232889010213975434",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::should_succeed_i32_to_u32",
    "hash": "130778410883370313601088472790045763166",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::should_succeed_i64_to_f64",
    "hash": "683727320225700557813639410955627975588",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::should_succeed_i64_to_u64",
    "hash": "107237130132153372769225754218930316561",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::should_succeed_i8_to_bool",
    "hash": "36444695712886223024652747482436081309",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::should_succeed_i8_to_u8",
    "hash": "1359279884243369717812081074938713810318",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::should_succeed_tuple_to_array",
    "hash": "237375375785982049112683828593599424251",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::should_succeed_tuple_to_struct",
    "hash": "500966112260286944511734879809533535874",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::should_succeed_tuple_to_tuple",
    "hash": "223251314101501238810012945361478263599",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::should_succeed_u128_to_i128",
    "hash": "1461260413641825203614548543702007763750",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::should_succeed_u16_to_i16",
    "hash": "742467522569302902316033925997148071489",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::should_succeed_u32_to_char",
    "hash": "1731143899043917311510433489076947807720",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::should_succeed_u32_to_f32",
    "hash": "1195582530850636471412050079303307101867",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::should_succeed_u32_to_i32",
    "hash": "1243893104645823087310507920335039638126",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::should_succeed_u64_to_f64",
    "hash": "161450271877470610259761285943569642651",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::should_succeed_u64_to_i64",
    "hash": "1799261862631666800612269882863883937060",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::should_succeed_u8_to_bool",
    "hash": "423920612805040692516594122169498858755",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::should_succeed_u8_to_i8",
    "hash": "34055782383635767255972967863404290600",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::struct_mod::transmute_2ways_arr_to_struct",
    "hash": "1151643186565334188913506112217425847461",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::struct_mod::transmute_2ways_arr_to_tuple",
    "hash": "21352197503668205606605666005532216591",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::struct_mod::transmute_2ways_struct_to_arr",
    "hash": "1230413156148041321012770986354513842679",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::struct_mod::transmute_2ways_struct_to_tuple",
    "hash": "1295333491863333199214772619028035984357",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::struct_mod::transmute_2ways_tuple_to_arr",
    "hash": "397187691544960735415787164528491690720",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::struct_mod::transmute_2ways_tuple_to_struct",
    "hash": "740451310889919079410476363439221296498",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::struct_mod::transmute_unchecked_2ways_arr_to_struct",
    "hash": "77084023159306375315230667034313792737",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::struct_mod::transmute_unchecked_2ways_arr_to_tuple",
    "hash": "95621031745697231019522036079475062158",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::struct_mod::transmute_unchecked_2ways_struct_to_arr",
    "hash": "452931893624327216653173042222742208",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::struct_mod::transmute_unchecked_2ways_struct_to_tuple",
    "hash": "82942167660786275013820451123325046284",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::struct_mod::transmute_unchecked_2ways_tuple_to_arr",
    "hash": "1713431287784463978515640493004958417663",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::struct_mod::transmute_unchecked_2ways_tuple_to_struct",
    "hash": "1108803943875847278414857645155583119958",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::supported_status",
    "hash": "1100372222744605741114100551764421082829"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_2ways_bool_to_i8",
    "hash": "56502024807324186637863979565495206271",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_2ways_bool_to_u8",
    "hash": "81654900099196391864984092518936064924",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_2ways_char_to_f32",
    "hash": "70244379034672826683102389363796901859",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_2ways_char_to_i32",
    "hash": "1717868994879499025716039375992203683710",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_2ways_char_to_u32",
    "hash": "110020614210682580725842700936730757068",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_2ways_f32_to_char",
    "hash": "2591002355659730867913835194220687011",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_2ways_f32_to_i32",
    "hash": "232024346761539055411874182303747965167",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_2ways_f32_to_u32",
    "hash": "1563904136961570825514304219081841833631",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_2ways_f64_to_i64",
    "hash": "1378136907453070025714213543725423634943",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_2ways_f64_to_u64",
    "hash": "127943764296969879784971228459120958931",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_2ways_i128_to_u128",
    "hash": "1462806092098947564118128429333913192985",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_2ways_i16_to_u16",
    "hash": "38294785996638682385505151938642405605",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_2ways_i32_to_char",
    "hash": "649262752686405052116726841146673472958",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_2ways_i32_to_f32",
    "hash": "95095581764101173195690314565762796097",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_2ways_i32_to_u32",
    "hash": "1568125572656426596818216161623298860763",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_2ways_i64_to_f64",
    "hash": "180624881312963200853382298869236815889",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_2ways_i64_to_u64",
    "hash": "375251539080249667311502976321722877794",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_2ways_i8_to_bool",
    "hash": "7397585783611946073922794288807110572",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_2ways_i8_to_u8",
    "hash": "1086229937586908594214268767250467975072",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_2ways_u128_to_i128",
    "hash": "142577758533922390958653779174275279720",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_2ways_u16_to_i16",
    "hash": "137924977810281732532066795118122755814",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_2ways_u32_to_char",
    "hash": "49913998376396864998723105885379858650",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_2ways_u32_to_f32",
    "hash": "1141674729682225440217310535234869904141",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_2ways_u32_to_i32",
    "hash": "112849296075068927914970520330407658363",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_2ways_u64_to_f64",
    "hash": "1088338349564277033014861899056671080463",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_2ways_u64_to_i64",
    "hash": "1045104922017348101815689957336800287827",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_2ways_u8_to_bool",
    "hash": "1669161660158666996917310408243525658079",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_2ways_u8_to_i8",
    "hash": "89580253390734648081459697323021740889",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_unchecked_2ways_bool_to_i8",
    "hash": "123074866498720011018086775815179684524",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_unchecked_2ways_bool_to_u8",
    "hash": "49487621504841285583011847157611860478",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_unchecked_2ways_char_to_f32",
    "hash": "19257751016575295310759292424324667942",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_unchecked_2ways_char_to_i32",
    "hash": "1750242318274694838810304130692237194810",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_unchecked_2ways_char_to_u32",
    "hash": "135270898105612929526863205133233194123",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_unchecked_2ways_f32_to_char",
    "hash": "288259820866174829117357019594998197963",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_unchecked_2ways_f32_to_i32",
    "hash": "1192761183619042624512151863545826731107",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_unchecked_2ways_f32_to_u32",
    "hash": "1253286060877331914655163142985646803",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_unchecked_2ways_f64_to_i64",
    "hash": "17684624939508561064876563271002512805",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_unchecked_2ways_f64_to_u64",
    "hash": "797414266135264443716746297014014447314",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_unchecked_2ways_i128_to_u128",
    "hash": "310569263264865472013766174244994635172",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_unchecked_2ways_i16_to_u16",
    "hash": "1239920429532375834113501587843174033287",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_unchecked_2ways_i32_to_char",
    "hash": "247397651586043942810726233480366877138",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_unchecked_2ways_i32_to_f32",
    "hash": "126369872861395531996252142505547752682",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_unchecked_2ways_i32_to_u32",
    "hash": "460045171230675267915876628649732658557",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_unchecked_2ways_i64_to_f64",
    "hash": "6397200129497234004375544896329424603",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_unchecked_2ways_i64_to_u64",
    "hash": "7371341296738415941849326913519648122",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_unchecked_2ways_i8_to_bool",
    "hash": "35124539965614147695958281464170564313",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_unchecked_2ways_i8_to_u8",
    "hash": "19312526104600147601478467208043099055",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_unchecked_2ways_u128_to_i128",
    "hash": "375520333950091675616863182534096502595",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_unchecked_2ways_u16_to_i16",
    "hash": "100285010379019893529780314415856379541",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_unchecked_2ways_u32_to_char",
    "hash": "161657313877685379349383659626262481439",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_unchecked_2ways_u32_to_f32",
    "hash": "74320463877677662788536877963781050110",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_unchecked_2ways_u32_to_i32",
    "hash": "129172456879507868751895849153021280001",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_unchecked_2ways_u64_to_f64",
    "hash": "793331252370290340114750080297936129355",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_unchecked_2ways_u64_to_i64",
    "hash": "166085270545526497613123358785822649158",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_unchecked_2ways_u8_to_bool",
    "hash": "32445094319556701417807767871555169435",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_unchecked_2ways_u8_to_i8",
    "hash": "780215395811743201314330190497489354685",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_unchecked_bool_to_i8",
    "hash": "481589559063876481211306728576271090069",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_unchecked_bool_to_u8",
    "hash": "1184965038288395784814888264322036388578",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_unchecked_char_to_f32",
    "hash": "1206422569517420655413513747391642910845",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_unchecked_char_to_i32",
    "hash": "48881831839798494848046390027639176044",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_unchecked_char_to_u32",
    "hash": "1121700030436615891814771338211599273138",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_unchecked_f32_to_char",
    "hash": "536089479205392108151484881960878535",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_unchecked_f32_to_i32",
    "hash": "1688886869746163293411768184254305862422",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_unchecked_f32_to_u32",
    "hash": "472529676620762709011528786996811450379",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_unchecked_f64_to_i64",
    "hash": "14195598881026685206188916942843068678",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_unchecked_f64_to_u64",
    "hash": "121641822530538977074209003585715951457",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_unchecked_i128_to_u128",
    "hash": "375931946145524692416350034297215244452",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_unchecked_i16_to_u16",
    "hash": "1106474878493827849415658481064891132180",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_unchecked_i32_to_char",
    "hash": "147795608688418681726078995478641171610",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_unchecked_i32_to_f32",
    "hash": "47429229922379397329780166598634376099",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_unchecked_i32_to_u32",
    "hash": "1477833059357539851313951660800848340071",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_unchecked_i64_to_f64",
    "hash": "1817668722102552620812364772446402790925",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_unchecked_i64_to_u64",
    "hash": "633809814117505894910299385095868473010",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_unchecked_i8_to_bool",
    "hash": "104663810641068135077575729081344209952",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_unchecked_i8_to_u8",
    "hash": "567257716275800969513698326500261810696",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_unchecked_u128_to_i128",
    "hash": "12062606281515543091753842709521741276",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_unchecked_u16_to_i16",
    "hash": "123660911511559722508034929489434741707",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_unchecked_u32_to_char",
    "hash": "123775852278191233416940685975533694821",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_unchecked_u32_to_f32",
    "hash": "79469315224361352978190774855499503347",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_unchecked_u32_to_i32",
    "hash": "84635908967573641467527311434066762394",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_unchecked_u64_to_f64",
    "hash": "802511089344905960612426861018222657722",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_unchecked_u64_to_i64",
    "hash": "76402475924937604234045940242800013340",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_unchecked_u8_to_bool",
    "hash": "152647190142807722692305853971685188703",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_unchecked_u8_to_i8",
    "hash": "10554253401020006055962818074048672089",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_zero_size",
    "hash": "484507416527538729312714644315538965810",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::tuple_mod::transmute_2ways_arr_to_struct",
    "hash": "160985710443184441066207030835286082827",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::tuple_mod::transmute_2ways_arr_to_tuple",
    "hash": "59667579624051289303089389204770472812",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::tuple_mod::transmute_2ways_struct_to_arr",
    "hash": "1707835914458123840516618926595567463348",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::tuple_mod::transmute_2ways_struct_to_tuple",
    "hash": "75755167065974451253731785261083805077",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::tuple_mod::transmute_2ways_tuple_to_arr",
    "hash": "1754114092359364436213088228741799573421",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::tuple_mod::transmute_2ways_tuple_to_struct",
    "hash": "1546999377377995936417907893966693542153",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::tuple_mod::transmute_unchecked_2ways_arr_to_struct",
    "hash": "3932474259163840710413253714939902992",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::tuple_mod::transmute_unchecked_2ways_arr_to_tuple",
    "hash": "41655316238646007711337938557967919842",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::tuple_mod::transmute_unchecked_2ways_struct_to_arr",
    "hash": "199655688612737550215024629850091946913",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::tuple_mod::transmute_unchecked_2ways_struct_to_tuple",
    "hash": "679791739892756223412252975384516357795",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::tuple_mod::transmute_unchecked_2ways_tuple_to_arr",
    "hash": "682268236105259562311651542471718301042",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::tuple_mod::transmute_unchecked_2ways_tuple_to_struct",
    "hash": "157458777061370570878960382474018565393",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::u128_mod::transmute_2ways_arr_to_struct",
    "hash": "14230343065511434559145904249164277990",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::u128_mod::transmute_2ways_arr_to_tuple",
    "hash": "14833927625108796949435227003382508135",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::u128_mod::transmute_2ways_struct_to_arr",
    "hash": "3094390967336231085847785117644861562",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::u128_mod::transmute_2ways_struct_to_tuple",
    "hash": "728740789182751844912290579352369273251",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::u128_mod::transmute_2ways_tuple_to_arr",
    "hash": "2469670873018070667318757628425888642",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::u128_mod::transmute_2ways_tuple_to_struct",
    "hash": "1415593930123754942114339020005272426192",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::u128_mod::transmute_unchecked_2ways_arr_to_struct",
    "hash": "23433865485154774032481670592594335847",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::u128_mod::transmute_unchecked_2ways_arr_to_tuple",
    "hash": "137853861400488240617878720543175442080",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::u128_mod::transmute_unchecked_2ways_struct_to_arr",
    "hash": "17568838714535805031908372010839922256",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::u128_mod::transmute_unchecked_2ways_struct_to_tuple",
    "hash": "24207412719123563767746050718513312156",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::u128_mod::transmute_unchecked_2ways_tuple_to_arr",
    "hash": "411528582189260538812704732912680947149",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::u128_mod::transmute_unchecked_2ways_tuple_to_struct",
    "hash": "146165992295942562168410516305482950836",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::u16_mod::transmute_2ways_arr_to_struct",
    "hash": "144649800564430445829461145961958623330",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::u16_mod::transmute_2ways_arr_to_tuple",
    "hash": "1063651409492354145515700977590404460899",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::u16_mod::transmute_2ways_struct_to_arr",
    "hash": "1389759356909784900217885489814126208610",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::u16_mod::transmute_2ways_struct_to_tuple",
    "hash": "5901438215080103196442121217130292779",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::u16_mod::transmute_2ways_tuple_to_arr",
    "hash": "75389555398005460678590562575543231179",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::u16_mod::transmute_2ways_tuple_to_struct",
    "hash": "372503961573209218517126138470884967192",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::u16_mod::transmute_unchecked_2ways_arr_to_struct",
    "hash": "97354002715565873166762039257722789227",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::u16_mod::transmute_unchecked_2ways_arr_to_tuple",
    "hash": "17774517243202908316774068561348680751",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::u16_mod::transmute_unchecked_2ways_struct_to_arr",
    "hash": "102981365350279064204109875658126102649",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::u16_mod::transmute_unchecked_2ways_struct_to_tuple",
    "hash": "107569875512765698893703270902305289099",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::u16_mod::transmute_unchecked_2ways_tuple_to_arr",
    "hash": "54363110678910271541154188630177228652",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::u16_mod::transmute_unchecked_2ways_tuple_to_struct",
    "hash": "1180862344206023962711930121277062294450",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::u32_mod::transmute_2ways_arr_to_struct",
    "hash": "2270768838392335537665574359158809839",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::u32_mod::transmute_2ways_arr_to_tuple",
    "hash": "15153798172108966471128737227211170904",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::u32_mod::transmute_2ways_struct_to_arr",
    "hash": "36010236323103261041036431324790562309",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::u32_mod::transmute_2ways_struct_to_tuple",
    "hash": "1656845938486269855916722851906324670702",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::u32_mod::transmute_2ways_tuple_to_arr",
    "hash": "910148766197234274311851237017518137428",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::u32_mod::transmute_2ways_tuple_to_struct",
    "hash": "581182378397127640713002592126407637791",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::u32_mod::transmute_unchecked_2ways_arr_to_struct",
    "hash": "96362282908987848602598119367751280004",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::u32_mod::transmute_unchecked_2ways_arr_to_tuple",
    "hash": "1815984079582743963213890740092014374392",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::u32_mod::transmute_unchecked_2ways_struct_to_arr",
    "hash": "1583268482260141493516800142705895286307",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::u32_mod::transmute_unchecked_2ways_struct_to_tuple",
    "hash": "107548779927347397826435084268048003201",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::u32_mod::transmute_unchecked_2ways_tuple_to_arr",
    "hash": "97071174651236203165802218676486837471",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::u32_mod::transmute_unchecked_2ways_tuple_to_struct",
    "hash": "9266239323031833957580472814182777375",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::u64_mod::transmute_2ways_arr_to_struct",
    "hash": "126497131694642986464915100831831338466",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::u64_mod::transmute_2ways_arr_to_tuple",
    "hash": "21887838823199818284054330711259067756",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::u64_mod::transmute_2ways_struct_to_arr",
    "hash": "68803911487383516033594388289865314394",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::u64_mod::transmute_2ways_struct_to_tuple",
    "hash": "127995411568903194613579273818893531342",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::u64_mod::transmute_2ways_tuple_to_arr",
    "hash": "28652840204911455441346106269090521936",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::u64_mod::transmute_2ways_tuple_to_struct",
    "hash": "1147300822560097316314130485657778934049",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::u64_mod::transmute_unchecked_2ways_arr_to_struct",
    "hash": "941058436305966311912086615577829745427",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::u64_mod::transmute_unchecked_2ways_arr_to_tuple",
    "hash": "1464691072464870234314539825742949497824",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::u64_mod::transmute_unchecked_2ways_struct_to_arr",
    "hash": "54486726963181289984154151342567252461",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::u64_mod::transmute_unchecked_2ways_struct_to_tuple",
    "hash": "110443803373271350368938405862256889499",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::u64_mod::transmute_unchecked_2ways_tuple_to_arr",
    "hash": "9346149376843671412274229427458037647",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::u64_mod::transmute_unchecked_2ways_tuple_to_struct",
    "hash": "127133564975657976971010654080251422854",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::u8_mod::transmute_2ways_arr_to_struct",
    "hash": "1268239173742231936110228130575278125460",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::u8_mod::transmute_2ways_arr_to_tuple",
    "hash": "35223862447321525668666672890015068336",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::u8_mod::transmute_2ways_struct_to_arr",
    "hash": "987357752336527673715634394508731741919",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::u8_mod::transmute_2ways_struct_to_tuple",
    "hash": "912162307917328112816148892138387281786",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::u8_mod::transmute_2ways_tuple_to_arr",
    "hash": "78363633049647904141612501867388244741",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::u8_mod::transmute_2ways_tuple_to_struct",
    "hash": "49590227247051242934602600445522699958",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::u8_mod::transmute_unchecked_2ways_arr_to_struct",
    "hash": "1040767876591064949916852262077464101071",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::u8_mod::transmute_unchecked_2ways_arr_to_tuple",
    "hash": "41207698604827878278722573638784416223",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::u8_mod::transmute_unchecked_2ways_struct_to_arr",
    "hash": "1688391788359048147210270591339804848809",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::u8_mod::transmute_unchecked_2ways_struct_to_tuple",
    "hash": "50405386681747178845199120447587703528",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::u8_mod::transmute_unchecked_2ways_tuple_to_arr",
    "hash": "147236086003049125117919083960841406756",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::u8_mod::transmute_unchecked_2ways_tuple_to_struct",
    "hash": "159741343072706364273420105851297253332",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "num::from_ascii_radix_panic::do_panic::compiletime",
    "hash": "74535031650896051214723818354113156377"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "num::from_ascii_radix_panic::do_panic::runtime",
    "hash": "1711567045989756770816552312509655956488"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "slice::<impl [T]>::copy_from_slice::len_mismatch_fail::do_panic::compiletime",
    "hash": "179544472223032317616057845771026677656"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "slice::<impl [T]>::copy_from_slice::len_mismatch_fail::do_panic::runtime",
    "hash": "172979894060783479047945488779460519933"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "slice::index::slice_end_index_len_fail::do_panic::compiletime",
    "hash": "204752567428435900711233096943266288876"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "slice::index::slice_end_index_len_fail::do_panic::runtime",
    "hash": "180216954894167382576912062485815426"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "slice::index::slice_index_order_fail::do_panic::compiletime",
    "hash": "822758658161210665516045755945258428353"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "slice::index::slice_index_order_fail::do_panic::runtime",
    "hash": "180216954894167382576912062485815426"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "slice::index::slice_start_index_len_fail::do_panic::compiletime",
    "hash": "33823086917734864135631584096888360978"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "slice::index::slice_start_index_len_fail::do_panic::runtime",
    "hash": "180216954894167382576912062485815426"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "ub_checks::check_language_ub::compiletime",
    "hash": "1541363921555960948418190727205931026341"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "ub_checks::check_language_ub::runtime",
    "hash": "23815256893174302637797703719499456373"
  },
  {
    "crate": "core",
    "file": "core/src/iter/adapters/step_by.rs",
    "func": "<iter::adapters::step_by::StepBy<I> as iter::adapters::step_by::StepByImpl<I>>::spec_size_hint::first_size",
    "hash": "62286244296064334663190037313067156494"
  },
  {
    "crate": "core",
    "file": "core/src/iter/adapters/step_by.rs",
    "func": "<iter::adapters::step_by::StepBy<I> as iter::adapters::step_by::StepByImpl<I>>::spec_size_hint::other_size",
    "hash": "284863414593542695517394618973036226172"
  },
  {
    "crate": "core",
    "file": "core/src/iter/adapters/step_by.rs",
    "func": "<iter::adapters::step_by::StepBy<ops::range::Range<u16>> as iter::adapters::step_by::StepByBackImpl<ops::range::Range<u16>>>::spec_next_back",
    "hash": "1437546102495456400112923537045137278358"
  },
  {
    "crate": "core",
    "file": "core/src/iter/adapters/step_by.rs",
    "func": "<iter::adapters::step_by::StepBy<ops::range::Range<u16>> as iter::adapters::step_by::StepByBackImpl<ops::range::Range<u16>>>::spec_nth_back",
    "hash": "173166477100294227447580280618720149106"
  },
  {
    "crate": "core",
    "file": "core/src/iter/adapters/step_by.rs",
    "func": "<iter::adapters::step_by::StepBy<ops::range::Range<u16>> as iter::adapters::step_by::StepByImpl<ops::range::Range<u16>>>::spec_next",
    "hash": "114657002092212286604221679931131576740"
  },
  {
    "crate": "core",
    "file": "core/src/iter/adapters/step_by.rs",
    "func": "<iter::adapters::step_by::StepBy<ops::range::Range<u16>> as iter::adapters::step_by::StepByImpl<ops::range::Range<u16>>>::spec_nth",
    "hash": "284599198866240728117079132634886056184"
  },
  {
    "crate": "core",
    "file": "core/src/iter/adapters/step_by.rs",
    "func": "<iter::adapters::step_by::StepBy<ops::range::Range<u16>> as iter::adapters::step_by::StepByImpl<ops::range::Range<u16>>>::spec_size_hint",
    "hash": "158301573143810970113344600865488026234"
  },
  {
    "crate": "core",
    "file": "core/src/iter/adapters/step_by.rs",
    "func": "<iter::adapters::step_by::StepBy<ops::range::Range<u32>> as iter::adapters::step_by::StepByBackImpl<ops::range::Range<u32>>>::spec_next_back",
    "hash": "90456138571888307211130366223652161242"
  },
  {
    "crate": "core",
    "file": "core/src/iter/adapters/step_by.rs",
    "func": "<iter::adapters::step_by::StepBy<ops::range::Range<u32>> as iter::adapters::step_by::StepByBackImpl<ops::range::Range<u32>>>::spec_nth_back",
    "hash": "1132796094015515178112153865354074295580"
  },
  {
    "crate": "core",
    "file": "core/src/iter/adapters/step_by.rs",
    "func": "<iter::adapters::step_by::StepBy<ops::range::Range<u32>> as iter::adapters::step_by::StepByImpl<ops::range::Range<u32>>>::spec_next",
    "hash": "144015449030761749859944505375011935883"
  },
  {
    "crate": "core",
    "file": "core/src/iter/adapters/step_by.rs",
    "func": "<iter::adapters::step_by::StepBy<ops::range::Range<u32>> as iter::adapters::step_by::StepByImpl<ops::range::Range<u32>>>::spec_nth",
    "hash": "1767389833455439637416799471935039298318"
  },
  {
    "crate": "core",
    "file": "core/src/iter/adapters/step_by.rs",
    "func": "<iter::adapters::step_by::StepBy<ops::range::Range<u32>> as iter::adapters::step_by::StepByImpl<ops::range::Range<u32>>>::spec_size_hint",
    "hash": "1745453724709238680517191219809178490890"
  },
  {
    "crate": "core",
    "file": "core/src/iter/adapters/step_by.rs",
    "func": "<iter::adapters::step_by::StepBy<ops::range::Range<u64>> as iter::adapters::step_by::StepByImpl<ops::range::Range<u64>>>::spec_next",
    "hash": "126460389022915297545254311957912528808"
  },
  {
    "crate": "core",
    "file": "core/src/iter/adapters/step_by.rs",
    "func": "<iter::adapters::step_by::StepBy<ops::range::Range<u64>> as iter::adapters::step_by::StepByImpl<ops::range::Range<u64>>>::spec_nth",
    "hash": "65458004229790222681846259837213066986"
  },
  {
    "crate": "core",
    "file": "core/src/iter/adapters/step_by.rs",
    "func": "<iter::adapters::step_by::StepBy<ops::range::Range<u64>> as iter::adapters::step_by::StepByImpl<ops::range::Range<u64>>>::spec_size_hint",
    "hash": "9309498195766837577194283210562229959"
  },
  {
    "crate": "core",
    "file": "core/src/iter/adapters/step_by.rs",
    "func": "<iter::adapters::step_by::StepBy<ops::range::Range<u8>> as iter::adapters::step_by::StepByBackImpl<ops::range::Range<u8>>>::spec_next_back",
    "hash": "31992152674570070249470577279589129744"
  },
  {
    "crate": "core",
    "file": "core/src/iter/adapters/step_by.rs",
    "func": "<iter::adapters::step_by::StepBy<ops::range::Range<u8>> as iter::adapters::step_by::StepByBackImpl<ops::range::Range<u8>>>::spec_nth_back",
    "hash": "176432090346636400649369158023799966500"
  },
  {
    "crate": "core",
    "file": "core/src/iter/adapters/step_by.rs",
    "func": "<iter::adapters::step_by::StepBy<ops::range::Range<u8>> as iter::adapters::step_by::StepByImpl<ops::range::Range<u8>>>::spec_next",
    "hash": "81474915030788861417855047031855509210"
  },
  {
    "crate": "core",
    "file": "core/src/iter/adapters/step_by.rs",
    "func": "<iter::adapters::step_by::StepBy<ops::range::Range<u8>> as iter::adapters::step_by::StepByImpl<ops::range::Range<u8>>>::spec_nth",
    "hash": "169754533853493511026514893084355032230"
  },
  {
    "crate": "core",
    "file": "core/src/iter/adapters/step_by.rs",
    "func": "<iter::adapters::step_by::StepBy<ops::range::Range<u8>> as iter::adapters::step_by::StepByImpl<ops::range::Range<u8>>>::spec_size_hint",
    "hash": "9255805255804584193411116438326773862"
  },
  {
    "crate": "core",
    "file": "core/src/iter/adapters/step_by.rs",
    "func": "<iter::adapters::step_by::StepBy<ops::range::Range<usize>> as iter::adapters::step_by::StepByBackImpl<ops::range::Range<usize>>>::spec_next_back",
    "hash": "690642499111150908817515126236491340300"
  },
  {
    "crate": "core",
    "file": "core/src/iter/adapters/step_by.rs",
    "func": "<iter::adapters::step_by::StepBy<ops::range::Range<usize>> as iter::adapters::step_by::StepByBackImpl<ops::range::Range<usize>>>::spec_nth_back",
    "hash": "115997139320391475499719289274860796242"
  },
  {
    "crate": "core",
    "file": "core/src/iter/adapters/step_by.rs",
    "func": "<iter::adapters::step_by::StepBy<ops::range::Range<usize>> as iter::adapters::step_by::StepByImpl<ops::range::Range<usize>>>::spec_next",
    "hash": "71245514187754322954731267000763581889"
  },
  {
    "crate": "core",
    "file": "core/src/iter/adapters/step_by.rs",
    "func": "<iter::adapters::step_by::StepBy<ops::range::Range<usize>> as iter::adapters::step_by::StepByImpl<ops::range::Range<usize>>>::spec_nth",
    "hash": "56940365720108013652909544675117610417"
  },
  {
    "crate": "core",
    "file": "core/src/iter/adapters/step_by.rs",
    "func": "<iter::adapters::step_by::StepBy<ops::range::Range<usize>> as iter::adapters::step_by::StepByImpl<ops::range::Range<usize>>>::spec_size_hint",
    "hash": "1144218567684167729616089602923919486424"
  },
  {
    "crate": "core",
    "file": "core/src/iter/adapters/step_by.rs",
    "func": "<ops::range::Range<u16> as iter::adapters::step_by::SpecRangeSetup<ops::range::Range<u16>>>::setup",
    "hash": "6075546281202715568801406962313038419"
  },
  {
    "crate": "core",
    "file": "core/src/iter/adapters/step_by.rs",
    "func": "<ops::range::Range<u32> as iter::adapters::step_by::SpecRangeSetup<ops::range::Range<u32>>>::setup",
    "hash": "67933425556499283503408091748382402352"
  },
  {
    "crate": "core",
    "file": "core/src/iter/adapters/step_by.rs",
    "func": "<ops::range::Range<u64> as iter::adapters::step_by::SpecRangeSetup<ops::range::Range<u64>>>::setup",
    "hash": "78204805839686683563153101511420911374"
  },
  {
    "crate": "core",
    "file": "core/src/iter/adapters/step_by.rs",
    "func": "<ops::range::Range<u8> as iter::adapters::step_by::SpecRangeSetup<ops::range::Range<u8>>>::setup",
    "hash": "1557888179237279420016345122066490951419"
  },
  {
    "crate": "core",
    "file": "core/src/iter/adapters/step_by.rs",
    "func": "<ops::range::Range<usize> as iter::adapters::step_by::SpecRangeSetup<ops::range::Range<usize>>>::setup",
    "hash": "18555009449670890111367301219528976932"
  },
  {
    "crate": "core",
    "file": "core/src/iter/range.rs",
    "func": "<ascii::ascii_char::AsciiChar as iter::range::Step>::backward_checked",
    "hash": "1584814164361370116917733204134660077963"
  },
  {
    "crate": "core",
    "file": "core/src/iter/range.rs",
    "func": "<ascii::ascii_char::AsciiChar as iter::range::Step>::backward_unchecked",
    "hash": "1113883411032568079215440482169285777688"
  },
  {
    "crate": "core",
    "file": "core/src/iter/range.rs",
    "func": "<ascii::ascii_char::AsciiChar as iter::range::Step>::forward_checked",
    "hash": "95396672525239714842529152951908186956"
  },
  {
    "crate": "core",
    "file": "core/src/iter/range.rs",
    "func": "<ascii::ascii_char::AsciiChar as iter::range::Step>::forward_unchecked",
    "hash": "915033121146705853914194874801252771405"
  },
  {
    "crate": "core",
    "file": "core/src/iter/range.rs",
    "func": "<ascii::ascii_char::AsciiChar as iter::range::Step>::steps_between",
    "hash": "171867204063098476911645982607944067247"
  },
  {
    "crate": "core",
    "file": "core/src/iter/range.rs",
    "func": "<char as iter::range::Step>::backward_checked",
    "hash": "170996836520433694057892095687131835549"
  },
  {
    "crate": "core",
    "file": "core/src/iter/range.rs",
    "func": "<char as iter::range::Step>::backward_unchecked",
    "hash": "20234539743133970112037233805606787967"
  },
  {
    "crate": "core",
    "file": "core/src/iter/range.rs",
    "func": "<char as iter::range::Step>::forward_checked",
    "hash": "1747681456377819372717979680217552376221"
  },
  {
    "crate": "core",
    "file": "core/src/iter/range.rs",
    "func": "<char as iter::range::Step>::forward_unchecked",
    "hash": "37455746414827064617330487479210774511"
  },
  {
    "crate": "core",
    "file": "core/src/iter/range.rs",
    "func": "<char as iter::range::Step>::steps_between",
    "hash": "17542033173126621586535829358682728021"
  },
  {
    "crate": "core",
    "file": "core/src/iter/range.rs",
    "func": "<i128 as iter::range::Step>::backward",
    "hash": "46637279284804981710526792175396242351"
  },
  {
    "crate": "core",
    "file": "core/src/iter/range.rs",
    "func": "<i128 as iter::range::Step>::backward_checked",
    "hash": "715986186581165071415225264676611628647"
  },
  {
    "crate": "core",
    "file": "core/src/iter/range.rs",
    "func": "<i128 as iter::range::Step>::backward_unchecked",
    "hash": "28207665923397219367982830322686422037"
  },
  {
    "crate": "core",
    "file": "core/src/iter/range.rs",
    "func": "<i128 as iter::range::Step>::forward",
    "hash": "35301800580520485482070331952746502865"
  },
  {
    "crate": "core",
    "file": "core/src/iter/range.rs",
    "func": "<i128 as iter::range::Step>::forward_checked",
    "hash": "89336671190898553832843848729468842805"
  },
  {
    "crate": "core",
    "file": "core/src/iter/range.rs",
    "func": "<i128 as iter::range::Step>::forward_unchecked",
    "hash": "106637977864662296913962445230318497760"
  },
  {
    "crate": "core",
    "file": "core/src/iter/range.rs",
    "func": "<i128 as iter::range::Step>::steps_between",
    "hash": "178226939592630221978389592503388938451"
  },
  {
    "crate": "core",
    "file": "core/src/iter/range.rs",
    "func": "<i16 as iter::range::Step>::backward",
    "hash": "18187796269430026316124359272053080906"
  },
  {
    "crate": "core",
    "file": "core/src/iter/range.rs",
    "func": "<i16 as iter::range::Step>::backward_checked",
    "hash": "56464045187672948618296314910713442314"
  },
  {
    "crate": "core",
    "file": "core/src/iter/range.rs",
    "func": "<i16 as iter::range::Step>::backward_unchecked",
    "hash": "181606940842478322505310187900088292752"
  },
  {
    "crate": "core",
    "file": "core/src/iter/range.rs",
    "func": "<i16 as iter::range::Step>::forward",
    "hash": "1747921821101082677614301461409365052578"
  },
  {
    "crate": "core",
    "file": "core/src/iter/range.rs",
    "func": "<i16 as iter::range::Step>::forward_checked",
    "hash": "176277442684494109976898093282748794905"
  },
  {
    "crate": "core",
    "file": "core/src/iter/range.rs",
    "func": "<i16 as iter::range::Step>::forward_unchecked",
    "hash": "88107231111031882826772250164931534121"
  },
  {
    "crate": "core",
    "file": "core/src/iter/range.rs",
    "func": "<i16 as iter::range::Step>::steps_between",
    "hash": "538111098456330342815726012112382969864"
  },
  {
    "crate": "core",
    "file": "core/src/iter/range.rs",
    "func": "<i32 as iter::range::Step>::backward",
    "hash": "163931853820859447508083222413539593515"
  },
  {
    "crate": "core",
    "file": "core/src/iter/range.rs",
    "func": "<i32 as iter::range::Step>::backward_checked",
    "hash": "80146391544021117671378491422853431859"
  },
  {
    "crate": "core",
    "file": "core/src/iter/range.rs",
    "func": "<i32 as iter::range::Step>::backward_unchecked",
    "hash": "1736815931173822891516188854960004182265"
  },
  {
    "crate": "core",
    "file": "core/src/iter/range.rs",
    "func": "<i32 as iter::range::Step>::forward",
    "hash": "26697555509718753849879693664268613817"
  },
  {
    "crate": "core",
    "file": "core/src/iter/range.rs",
    "func": "<i32 as iter::range::Step>::forward_checked",
    "hash": "131808735788089143402017313600338354726"
  },
  {
    "crate": "core",
    "file": "core/src/iter/range.rs",
    "func": "<i32 as iter::range::Step>::forward_unchecked",
    "hash": "184116441626894171931985232638607497792"
  },
  {
    "crate": "core",
    "file": "core/src/iter/range.rs",
    "func": "<i32 as iter::range::Step>::steps_between",
    "hash": "18134017208154802759534028079637311327"
  },
  {
    "crate": "core",
    "file": "core/src/iter/range.rs",
    "func": "<i64 as iter::range::Step>::backward",
    "hash": "148806232683803536578376452598198053796"
  },
  {
    "crate": "core",
    "file": "core/src/iter/range.rs",
    "func": "<i64 as iter::range::Step>::backward_checked",
    "hash": "4281247821661835206362376732421854033"
  },
  {
    "crate": "core",
    "file": "core/src/iter/range.rs",
    "func": "<i64 as iter::range::Step>::backward_unchecked",
    "hash": "641237976938149051611087950725913328581"
  },
  {
    "crate": "core",
    "file": "core/src/iter/range.rs",
    "func": "<i64 as iter::range::Step>::forward",
    "hash": "156413651848173584534886413189302918168"
  },
  {
    "crate": "core",
    "file": "core/src/iter/range.rs",
    "func": "<i64 as iter::range::Step>::forward_checked",
    "hash": "88046703479673509154033467967626065654"
  },
  {
    "crate": "core",
    "file": "core/src/iter/range.rs",
    "func": "<i64 as iter::range::Step>::forward_unchecked",
    "hash": "95652156272599560796634293327205135055"
  },
  {
    "crate": "core",
    "file": "core/src/iter/range.rs",
    "func": "<i64 as iter::range::Step>::steps_between",
    "hash": "483790462382844215411450452095481338287"
  },
  {
    "crate": "core",
    "file": "core/src/iter/range.rs",
    "func": "<i8 as iter::range::Step>::backward",
    "hash": "1540750575140770629015012537086233386972"
  },
  {
    "crate": "core",
    "file": "core/src/iter/range.rs",
    "func": "<i8 as iter::range::Step>::backward_checked",
    "hash": "24352665723840071814564195621725578807"
  },
  {
    "crate": "core",
    "file": "core/src/iter/range.rs",
    "func": "<i8 as iter::range::Step>::backward_unchecked",
    "hash": "140008607188109087853575341212230802208"
  },
  {
    "crate": "core",
    "file": "core/src/iter/range.rs",
    "func": "<i8 as iter::range::Step>::forward",
    "hash": "121109792047343275109176808859236410756"
  },
  {
    "crate": "core",
    "file": "core/src/iter/range.rs",
    "func": "<i8 as iter::range::Step>::forward_checked",
    "hash": "20420924185289542738998071185231608938"
  },
  {
    "crate": "core",
    "file": "core/src/iter/range.rs",
    "func": "<i8 as iter::range::Step>::forward_unchecked",
    "hash": "1679038030647627839215682441771855309342"
  },
  {
    "crate": "core",
    "file": "core/src/iter/range.rs",
    "func": "<i8 as iter::range::Step>::steps_between",
    "hash": "25418697947291114202128346280975088528"
  },
  {
    "crate": "core",
    "file": "core/src/iter/range.rs",
    "func": "<isize as iter::range::Step>::backward",
    "hash": "174907720366765150331527804263790760601"
  },
  {
    "crate": "core",
    "file": "core/src/iter/range.rs",
    "func": "<isize as iter::range::Step>::backward_checked",
    "hash": "1713701592719078759112430293541681778909"
  },
  {
    "crate": "core",
    "file": "core/src/iter/range.rs",
    "func": "<isize as iter::range::Step>::backward_unchecked",
    "hash": "58536355895910312412889014975981896471"
  },
  {
    "crate": "core",
    "file": "core/src/iter/range.rs",
    "func": "<isize as iter::range::Step>::forward",
    "hash": "1785188989318259472413272802313925383147"
  },
  {
    "crate": "core",
    "file": "core/src/iter/range.rs",
    "func": "<isize as iter::range::Step>::forward_checked",
    "hash": "1800671510482548200213292176572578638441"
  },
  {
    "crate": "core",
    "file": "core/src/iter/range.rs",
    "func": "<isize as iter::range::Step>::forward_unchecked",
    "hash": "1306154598483076633112610075198864223647"
  },
  {
    "crate": "core",
    "file": "core/src/iter/range.rs",
    "func": "<isize as iter::range::Step>::steps_between",
    "hash": "1064805645711304687311408760249880991977"
  },
  {
    "crate": "core",
    "file": "core/src/iter/range.rs",
    "func": "<net::ip_addr::Ipv4Addr as iter::range::Step>::backward_checked",
    "hash": "155147924304071082739513183012654598156"
  },
  {
    "crate": "core",
    "file": "core/src/iter/range.rs",
    "func": "<net::ip_addr::Ipv4Addr as iter::range::Step>::backward_unchecked",
    "hash": "2261012262139325416935341568759147245"
  },
  {
    "crate": "core",
    "file": "core/src/iter/range.rs",
    "func": "<net::ip_addr::Ipv4Addr as iter::range::Step>::forward_checked",
    "hash": "23188403062525542758962441929292085481"
  },
  {
    "crate": "core",
    "file": "core/src/iter/range.rs",
    "func": "<net::ip_addr::Ipv4Addr as iter::range::Step>::forward_unchecked",
    "hash": "110431066513871153949832148942768243625"
  },
  {
    "crate": "core",
    "file": "core/src/iter/range.rs",
    "func": "<net::ip_addr::Ipv4Addr as iter::range::Step>::steps_between",
    "hash": "640223028755912175713550821631676327788"
  },
  {
    "crate": "core",
    "file": "core/src/iter/range.rs",
    "func": "<net::ip_addr::Ipv6Addr as iter::range::Step>::backward_checked",
    "hash": "180485698795718501364048526196287051151"
  },
  {
    "crate": "core",
    "file": "core/src/iter/range.rs",
    "func": "<net::ip_addr::Ipv6Addr as iter::range::Step>::backward_unchecked",
    "hash": "167995654856246241717565365176596117436"
  },
  {
    "crate": "core",
    "file": "core/src/iter/range.rs",
    "func": "<net::ip_addr::Ipv6Addr as iter::range::Step>::forward_checked",
    "hash": "104180859702165432371731928793307518467"
  },
  {
    "crate": "core",
    "file": "core/src/iter/range.rs",
    "func": "<net::ip_addr::Ipv6Addr as iter::range::Step>::forward_unchecked",
    "hash": "11479354753492812804152060166198846021"
  },
  {
    "crate": "core",
    "file": "core/src/iter/range.rs",
    "func": "<net::ip_addr::Ipv6Addr as iter::range::Step>::steps_between",
    "hash": "121773847843983033994232389368357427825"
  },
  {
    "crate": "core",
    "file": "core/src/iter/range.rs",
    "func": "<u128 as iter::range::Step>::backward",
    "hash": "662051539560232978010095377024876359221"
  },
  {
    "crate": "core",
    "file": "core/src/iter/range.rs",
    "func": "<u128 as iter::range::Step>::backward_checked",
    "hash": "136932349198324268844547480207316974809"
  },
  {
    "crate": "core",
    "file": "core/src/iter/range.rs",
    "func": "<u128 as iter::range::Step>::backward_unchecked",
    "hash": "109617963325990620337206705035948786878"
  },
  {
    "crate": "core",
    "file": "core/src/iter/range.rs",
    "func": "<u128 as iter::range::Step>::forward",
    "hash": "1029353990726797278316635533608821128044"
  },
  {
    "crate": "core",
    "file": "core/src/iter/range.rs",
    "func": "<u128 as iter::range::Step>::forward_checked",
    "hash": "115497333304884872689165210217155281995"
  },
  {
    "crate": "core",
    "file": "core/src/iter/range.rs",
    "func": "<u128 as iter::range::Step>::forward_unchecked",
    "hash": "1373895042447891154515382371383961288687"
  },
  {
    "crate": "core",
    "file": "core/src/iter/range.rs",
    "func": "<u128 as iter::range::Step>::steps_between",
    "hash": "67039421311994838194588098024219901463"
  },
  {
    "crate": "core",
    "file": "core/src/iter/range.rs",
    "func": "<u16 as iter::range::Step>::backward",
    "hash": "913894537831375510011224025671864776017"
  },
  {
    "crate": "core",
    "file": "core/src/iter/range.rs",
    "func": "<u16 as iter::range::Step>::backward_checked",
    "hash": "10431493570941138261712102936747677965"
  },
  {
    "crate": "core",
    "file": "core/src/iter/range.rs",
    "func": "<u16 as iter::range::Step>::backward_unchecked",
    "hash": "115633070957513576186686059082106284149"
  },
  {
    "crate": "core",
    "file": "core/src/iter/range.rs",
    "func": "<u16 as iter::range::Step>::forward",
    "hash": "835322914681755681817490333385967872476"
  },
  {
    "crate": "core",
    "file": "core/src/iter/range.rs",
    "func": "<u16 as iter::range::Step>::forward_checked",
    "hash": "928813848808908868714671767792280492111"
  },
  {
    "crate": "core",
    "file": "core/src/iter/range.rs",
    "func": "<u16 as iter::range::Step>::forward_unchecked",
    "hash": "5386377726707104558702884569949486762"
  },
  {
    "crate": "core",
    "file": "core/src/iter/range.rs",
    "func": "<u16 as iter::range::Step>::steps_between",
    "hash": "24731638943756635255783977765570373732"
  },
  {
    "crate": "core",
    "file": "core/src/iter/range.rs",
    "func": "<u32 as iter::range::Step>::backward",
    "hash": "959300812199759333314410986462645446062"
  },
  {
    "crate": "core",
    "file": "core/src/iter/range.rs",
    "func": "<u32 as iter::range::Step>::backward_checked",
    "hash": "1013516730268053840511042095588028624248"
  },
  {
    "crate": "core",
    "file": "core/src/iter/range.rs",
    "func": "<u32 as iter::range::Step>::backward_unchecked",
    "hash": "23323516819309733577180140782847076985"
  },
  {
    "crate": "core",
    "file": "core/src/iter/range.rs",
    "func": "<u32 as iter::range::Step>::forward",
    "hash": "12621881506141467650670175474315130079"
  },
  {
    "crate": "core",
    "file": "core/src/iter/range.rs",
    "func": "<u32 as iter::range::Step>::forward_checked",
    "hash": "30920353411989770835571218196243903657"
  },
  {
    "crate": "core",
    "file": "core/src/iter/range.rs",
    "func": "<u32 as iter::range::Step>::forward_unchecked",
    "hash": "117617402579329450391520196936047326337"
  },
  {
    "crate": "core",
    "file": "core/src/iter/range.rs",
    "func": "<u32 as iter::range::Step>::steps_between",
    "hash": "894283018808594391611609287380905026642"
  },
  {
    "crate": "core",
    "file": "core/src/iter/range.rs",
    "func": "<u64 as iter::range::Step>::backward",
    "hash": "1003402029061291547113677105709015308598"
  },
  {
    "crate": "core",
    "file": "core/src/iter/range.rs",
    "func": "<u64 as iter::range::Step>::backward_checked",
    "hash": "15462226308555501351446326448736722764"
  },
  {
    "crate": "core",
    "file": "core/src/iter/range.rs",
    "func": "<u64 as iter::range::Step>::backward_unchecked",
    "hash": "6850239332182852597837056122527660260"
  },
  {
    "crate": "core",
    "file": "core/src/iter/range.rs",
    "func": "<u64 as iter::range::Step>::forward",
    "hash": "155473448765744146541422357474284016155"
  },
  {
    "crate": "core",
    "file": "core/src/iter/range.rs",
    "func": "<u64 as iter::range::Step>::forward_checked",
    "hash": "43972467294738553587228673479953261703"
  },
  {
    "crate": "core",
    "file": "core/src/iter/range.rs",
    "func": "<u64 as iter::range::Step>::forward_unchecked",
    "hash": "1800877731847338977714977974183321327661"
  },
  {
    "crate": "core",
    "file": "core/src/iter/range.rs",
    "func": "<u64 as iter::range::Step>::steps_between",
    "hash": "1869392806298544895849880444382624092"
  },
  {
    "crate": "core",
    "file": "core/src/iter/range.rs",
    "func": "<u8 as iter::range::Step>::backward",
    "hash": "5114086559220504571663243077170860624"
  },
  {
    "crate": "core",
    "file": "core/src/iter/range.rs",
    "func": "<u8 as iter::range::Step>::backward_checked",
    "hash": "22462706803054849565974658173503796375"
  },
  {
    "crate": "core",
    "file": "core/src/iter/range.rs",
    "func": "<u8 as iter::range::Step>::backward_unchecked",
    "hash": "100275921074869751685291912290555798965"
  },
  {
    "crate": "core",
    "file": "core/src/iter/range.rs",
    "func": "<u8 as iter::range::Step>::forward",
    "hash": "76609193337938512317805154776362002025"
  },
  {
    "crate": "core",
    "file": "core/src/iter/range.rs",
    "func": "<u8 as iter::range::Step>::forward_checked",
    "hash": "1272872124964107645316881309075665740738"
  },
  {
    "crate": "core",
    "file": "core/src/iter/range.rs",
    "func": "<u8 as iter::range::Step>::forward_unchecked",
    "hash": "985749188984138133118122592648924964185"
  },
  {
    "crate": "core",
    "file": "core/src/iter/range.rs",
    "func": "<u8 as iter::range::Step>::steps_between",
    "hash": "1358246712086198366614107958808171399286"
  },
  {
    "crate": "core",
    "file": "core/src/iter/range.rs",
    "func": "<usize as iter::range::Step>::backward",
    "hash": "628055873792552513416321723639018282204"
  },
  {
    "crate": "core",
    "file": "core/src/iter/range.rs",
    "func": "<usize as iter::range::Step>::backward_checked",
    "hash": "163349750718536786115081356692876448881"
  },
  {
    "crate": "core",
    "file": "core/src/iter/range.rs",
    "func": "<usize as iter::range::Step>::backward_unchecked",
    "hash": "106331898439077953744539516180016762298"
  },
  {
    "crate": "core",
    "file": "core/src/iter/range.rs",
    "func": "<usize as iter::range::Step>::forward",
    "hash": "1055930132172326000115257653216899961244"
  },
  {
    "crate": "core",
    "file": "core/src/iter/range.rs",
    "func": "<usize as iter::range::Step>::forward_checked",
    "hash": "411317678509958371016436737334127354750"
  },
  {
    "crate": "core",
    "file": "core/src/iter/range.rs",
    "func": "<usize as iter::range::Step>::forward_unchecked",
    "hash": "6914657791414926604643248476891087136"
  },
  {
    "crate": "core",
    "file": "core/src/iter/range.rs",
    "func": "<usize as iter::range::Step>::steps_between",
    "hash": "177965079280133880087474300800680994427"
  },
  {
    "crate": "core",
    "file": "core/src/iter/traits/collect.rs",
    "func": "<() as iter::traits::collect::Extend<()>>::extend_one",
    "hash": "1120625557459031317916703552649357621493"
  },
  {
    "crate": "core",
    "file": "core/src/marker.rs",
    "func": "<marker::PhantomPinned as clone::Clone>::clone",
    "hash": "825667327041390782617747015861779504959"
  },
  {
    "crate": "core",
    "file": "core/src/marker.rs",
    "func": "<marker::PhantomPinned as cmp::Eq>::assert_receiver_is_total_eq",
    "hash": "831869974603347859414716922117860800231"
  },
  {
    "crate": "core",
    "file": "core/src/marker.rs",
    "func": "<marker::PhantomPinned as cmp::Ord>::cmp",
    "hash": "126049039803743376066865254267291754990"
  },
  {
    "crate": "core",
    "file": "core/src/marker.rs",
    "func": "<marker::PhantomPinned as cmp::PartialEq>::eq",
    "hash": "174411396243082614912337350529316792857"
  },
  {
    "crate": "core",
    "file": "core/src/marker.rs",
    "func": "<marker::PhantomPinned as cmp::PartialOrd>::partial_cmp",
    "hash": "830703818444105436118252870303164065030"
  },
  {
    "crate": "core",
    "file": "core/src/marker.rs",
    "func": "<marker::PhantomPinned as default::Default>::default",
    "hash": "1600509304913695688217697405739095284668"
  },
  {
    "crate": "core",
    "file": "core/src/marker/variance.rs",
    "func": "<marker::variance::PhantomContravariantLifetime<'_> as default::Default>::default",
    "hash": "200093235691051171311857133310441964385"
  },
  {
    "crate": "core",
    "file": "core/src/marker/variance.rs",
    "func": "<marker::variance::PhantomCovariantLifetime<'_> as default::Default>::default",
    "hash": "1585636264149941122215739800273610451179"
  },
  {
    "crate": "core",
    "file": "core/src/marker/variance.rs",
    "func": "<marker::variance::PhantomInvariantLifetime<'_> as default::Default>::default",
    "hash": "148627860536482951858651344035260966131"
  },
  {
    "crate": "core",
    "file": "core/src/marker/variance.rs",
    "func": "marker::variance::PhantomContravariantLifetime::<'_>::new",
    "hash": "325099813201210676814303942567768414682"
  },
  {
    "crate": "core",
    "file": "core/src/marker/variance.rs",
    "func": "marker::variance::PhantomCovariantLifetime::<'_>::new",
    "hash": "166995861130904311335873509826353853958"
  },
  {
    "crate": "core",
    "file": "core/src/marker/variance.rs",
    "func": "marker::variance::PhantomInvariantLifetime::<'_>::new",
    "hash": "226486674780133469212919495806579546593"
  },
  {
    "crate": "core",
    "file": "core/src/mem/mod.rs",
    "func": "mem::verify::check_swap_adt_no_drop",
    "hash": "153587768640835281408077171867932646418",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/mem/mod.rs",
    "func": "mem::verify::check_swap_primitive",
    "hash": "145689140010657863956117726509499832174",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/mem/transmutability.rs",
    "func": "<mem::transmutability::Assume as clone::Clone>::clone",
    "hash": "6113386739589260587615432633775330905"
  },
  {
    "crate": "core",
    "file": "core/src/mem/transmutability.rs",
    "func": "<mem::transmutability::Assume as cmp::Eq>::assert_receiver_is_total_eq",
    "hash": "1286419259412180144315209012837167429522"
  },
  {
    "crate": "core",
    "file": "core/src/mem/transmutability.rs",
    "func": "<mem::transmutability::Assume as cmp::PartialEq>::eq",
    "hash": "1017422462877208356713854341404052895459"
  },
  {
    "crate": "core",
    "file": "core/src/mem/transmutability.rs",
    "func": "<mem::transmutability::Assume as ops::arith::Add>::add",
    "hash": "232771302356690057611311769829264534757"
  },
  {
    "crate": "core",
    "file": "core/src/mem/transmutability.rs",
    "func": "<mem::transmutability::Assume as ops::arith::Sub>::sub",
    "hash": "635741436447222796014484736395444526961"
  },
  {
    "crate": "core",
    "file": "core/src/mem/transmutability.rs",
    "func": "mem::transmutability::Assume::and",
    "hash": "1084455007279128514714263400197774751518"
  },
  {
    "crate": "core",
    "file": "core/src/mem/transmutability.rs",
    "func": "mem::transmutability::Assume::but_not",
    "hash": "1696062762999842893816101781539844044659"
  },
  {
    "crate": "core",
    "file": "core/src/net/ip_addr.rs",
    "func": "<&net::ip_addr::Ipv4Addr as ops::bit::BitAnd<net::ip_addr::Ipv4Addr>>::bitand",
    "hash": "1499027706463113029914722318264888564518"
  },
  {
    "crate": "core",
    "file": "core/src/net/ip_addr.rs",
    "func": "<&net::ip_addr::Ipv4Addr as ops::bit::BitAnd>::bitand",
    "hash": "19038539976714877621938063870403800822"
  },
  {
    "crate": "core",
    "file": "core/src/net/ip_addr.rs",
    "func": "<&net::ip_addr::Ipv4Addr as ops::bit::BitOr<net::ip_addr::Ipv4Addr>>::bitor",
    "hash": "1450143984580719902416880929753416596256"
  },
  {
    "crate": "core",
    "file": "core/src/net/ip_addr.rs",
    "func": "<&net::ip_addr::Ipv4Addr as ops::bit::BitOr>::bitor",
    "hash": "97915705229990448319830217132682394099"
  },
  {
    "crate": "core",
    "file": "core/src/net/ip_addr.rs",
    "func": "<&net::ip_addr::Ipv4Addr as ops::bit::Not>::not",
    "hash": "1076770814037108337516709103481467091829"
  },
  {
    "crate": "core",
    "file": "core/src/net/ip_addr.rs",
    "func": "<&net::ip_addr::Ipv6Addr as ops::bit::BitAnd<net::ip_addr::Ipv6Addr>>::bitand",
    "hash": "947026038782299596713283875371031526550"
  },
  {
    "crate": "core",
    "file": "core/src/net/ip_addr.rs",
    "func": "<&net::ip_addr::Ipv6Addr as ops::bit::BitAnd>::bitand",
    "hash": "131012454452551441867174702414933009726"
  },
  {
    "crate": "core",
    "file": "core/src/net/ip_addr.rs",
    "func": "<&net::ip_addr::Ipv6Addr as ops::bit::BitOr<net::ip_addr::Ipv6Addr>>::bitor",
    "hash": "79509005810274679277715193973954622529"
  },
  {
    "crate": "core",
    "file": "core/src/net/ip_addr.rs",
    "func": "<&net::ip_addr::Ipv6Addr as ops::bit::BitOr>::bitor",
    "hash": "38264661869465706988268920408984779502"
  },
  {
    "crate": "core",
    "file": "core/src/net/ip_addr.rs",
    "func": "<&net::ip_addr::Ipv6Addr as ops::bit::Not>::not",
    "hash": "76153270744949521483249765683685975831"
  },
  {
    "crate": "core",
    "file": "core/src/net/ip_addr.rs",
    "func": "<<net::ip_addr::Ipv6Addr as fmt::Display>::fmt::Span as clone::Clone>::clone",
    "hash": "43471275599068202915603092652712170767"
  },
  {
    "crate": "core",
    "file": "core/src/net/ip_addr.rs",
    "func": "<<net::ip_addr::Ipv6Addr as fmt::Display>::fmt::Span as default::Default>::default",
    "hash": "5166604374501805499379909553192072199"
  },
  {
    "crate": "core",
    "file": "core/src/net/ip_addr.rs",
    "func": "<net::ip_addr::IpAddr as clone::Clone>::clone",
    "hash": "1264060357870657360614311409253839986891"
  },
  {
    "crate": "core",
    "file": "core/src/net/ip_addr.rs",
    "func": "<net::ip_addr::IpAddr as cmp::Eq>::assert_receiver_is_total_eq",
    "hash": "1288518373394506866613409312397158608102"
  },
  {
    "crate": "core",
    "file": "core/src/net/ip_addr.rs",
    "func": "<net::ip_addr::IpAddr as cmp::Ord>::cmp",
    "hash": "116030565378220794375993910323715694410"
  },
  {
    "crate": "core",
    "file": "core/src/net/ip_addr.rs",
    "func": "<net::ip_addr::IpAddr as cmp::PartialEq<net::ip_addr::Ipv4Addr>>::eq",
    "hash": "70479896803653984325842814174243248158"
  },
  {
    "crate": "core",
    "file": "core/src/net/ip_addr.rs",
    "func": "<net::ip_addr::IpAddr as cmp::PartialEq<net::ip_addr::Ipv6Addr>>::eq",
    "hash": "20893141095634284172087981679506930314"
  },
  {
    "crate": "core",
    "file": "core/src/net/ip_addr.rs",
    "func": "<net::ip_addr::IpAddr as cmp::PartialEq>::eq",
    "hash": "1457563282582880031316726086703283705974"
  },
  {
    "crate": "core",
    "file": "core/src/net/ip_addr.rs",
    "func": "<net::ip_addr::IpAddr as cmp::PartialOrd<net::ip_addr::Ipv4Addr>>::partial_cmp",
    "hash": "75843686374402514111872769203495205619"
  },
  {
    "crate": "core",
    "file": "core/src/net/ip_addr.rs",
    "func": "<net::ip_addr::IpAddr as cmp::PartialOrd<net::ip_addr::Ipv6Addr>>::partial_cmp",
    "hash": "1015156525977320808511004166065243164680"
  },
  {
    "crate": "core",
    "file": "core/src/net/ip_addr.rs",
    "func": "<net::ip_addr::IpAddr as cmp::PartialOrd>::partial_cmp",
    "hash": "519017723009844145317519327390128179973"
  },
  {
    "crate": "core",
    "file": "core/src/net/ip_addr.rs",
    "func": "<net::ip_addr::IpAddr as convert::From<[u16; 8]>>::from",
    "hash": "24028560508037190672032026848894563848"
  },
  {
    "crate": "core",
    "file": "core/src/net/ip_addr.rs",
    "func": "<net::ip_addr::IpAddr as convert::From<[u8; 16]>>::from",
    "hash": "1802821787855136755113668362828090022142"
  },
  {
    "crate": "core",
    "file": "core/src/net/ip_addr.rs",
    "func": "<net::ip_addr::IpAddr as convert::From<[u8; 4]>>::from",
    "hash": "170210693590717514915838547958882393841"
  },
  {
    "crate": "core",
    "file": "core/src/net/ip_addr.rs",
    "func": "<net::ip_addr::IpAddr as convert::From<net::ip_addr::Ipv4Addr>>::from",
    "hash": "1364782457274969512810337006941660859937"
  },
  {
    "crate": "core",
    "file": "core/src/net/ip_addr.rs",
    "func": "<net::ip_addr::IpAddr as convert::From<net::ip_addr::Ipv6Addr>>::from",
    "hash": "68073068911272744215152262124905904980"
  },
  {
    "crate": "core",
    "file": "core/src/net/ip_addr.rs",
    "func": "<net::ip_addr::Ipv4Addr as clone::Clone>::clone",
    "hash": "921409553528843095212392378217611236487"
  },
  {
    "crate": "core",
    "file": "core/src/net/ip_addr.rs",
    "func": "<net::ip_addr::Ipv4Addr as cmp::Eq>::assert_receiver_is_total_eq",
    "hash": "438248999008166340012331970616792148675"
  },
  {
    "crate": "core",
    "file": "core/src/net/ip_addr.rs",
    "func": "<net::ip_addr::Ipv4Addr as cmp::Ord>::cmp",
    "hash": "5072067421634535515172598013316489284"
  },
  {
    "crate": "core",
    "file": "core/src/net/ip_addr.rs",
    "func": "<net::ip_addr::Ipv4Addr as cmp::PartialEq<net::ip_addr::IpAddr>>::eq",
    "hash": "1572779705144993790016396127973471967713"
  },
  {
    "crate": "core",
    "file": "core/src/net/ip_addr.rs",
    "func": "<net::ip_addr::Ipv4Addr as cmp::PartialEq>::eq",
    "hash": "335926086649163344211724987064729739868"
  },
  {
    "crate": "core",
    "file": "core/src/net/ip_addr.rs",
    "func": "<net::ip_addr::Ipv4Addr as cmp::PartialOrd<net::ip_addr::IpAddr>>::partial_cmp",
    "hash": "87771466797572457261243928491736958096"
  },
  {
    "crate": "core",
    "file": "core/src/net/ip_addr.rs",
    "func": "<net::ip_addr::Ipv4Addr as cmp::PartialOrd>::partial_cmp",
    "hash": "446113247573873126415740106879866073552"
  },
  {
    "crate": "core",
    "file": "core/src/net/ip_addr.rs",
    "func": "<net::ip_addr::Ipv4Addr as convert::From<[u8; 4]>>::from",
    "hash": "590872620568502661513453452280775232682"
  },
  {
    "crate": "core",
    "file": "core/src/net/ip_addr.rs",
    "func": "<net::ip_addr::Ipv4Addr as convert::From<u32>>::from",
    "hash": "111940559836365269175623275722384843440"
  },
  {
    "crate": "core",
    "file": "core/src/net/ip_addr.rs",
    "func": "<net::ip_addr::Ipv4Addr as ops::bit::BitAnd<&net::ip_addr::Ipv4Addr>>::bitand",
    "hash": "125135056325573265692579555174253599366"
  },
  {
    "crate": "core",
    "file": "core/src/net/ip_addr.rs",
    "func": "<net::ip_addr::Ipv4Addr as ops::bit::BitAnd>::bitand",
    "hash": "467724484819212620012193702746008078689"
  },
  {
    "crate": "core",
    "file": "core/src/net/ip_addr.rs",
    "func": "<net::ip_addr::Ipv4Addr as ops::bit::BitAndAssign<&net::ip_addr::Ipv4Addr>>::bitand_assign",
    "hash": "164960261373697601339858017165226280450"
  },
  {
    "crate": "core",
    "file": "core/src/net/ip_addr.rs",
    "func": "<net::ip_addr::Ipv4Addr as ops::bit::BitAndAssign>::bitand_assign",
    "hash": "53348732915243955366474502245850694427"
  },
  {
    "crate": "core",
    "file": "core/src/net/ip_addr.rs",
    "func": "<net::ip_addr::Ipv4Addr as ops::bit::BitOr<&net::ip_addr::Ipv4Addr>>::bitor",
    "hash": "208817120089508431310227264987737265858"
  },
  {
    "crate": "core",
    "file": "core/src/net/ip_addr.rs",
    "func": "<net::ip_addr::Ipv4Addr as ops::bit::BitOr>::bitor",
    "hash": "7957386348102956150639334897645457546"
  },
  {
    "crate": "core",
    "file": "core/src/net/ip_addr.rs",
    "func": "<net::ip_addr::Ipv4Addr as ops::bit::BitOrAssign<&net::ip_addr::Ipv4Addr>>::bitor_assign",
    "hash": "58349043381394603534762643127118709642"
  },
  {
    "crate": "core",
    "file": "core/src/net/ip_addr.rs",
    "func": "<net::ip_addr::Ipv4Addr as ops::bit::BitOrAssign>::bitor_assign",
    "hash": "68305790234567403593518267939076346699"
  },
  {
    "crate": "core",
    "file": "core/src/net/ip_addr.rs",
    "func": "<net::ip_addr::Ipv4Addr as ops::bit::Not>::not",
    "hash": "115979366230571205841273096360743512900"
  },
  {
    "crate": "core",
    "file": "core/src/net/ip_addr.rs",
    "func": "<net::ip_addr::Ipv6Addr as clone::Clone>::clone",
    "hash": "70641865147263933991186943641804389872"
  },
  {
    "crate": "core",
    "file": "core/src/net/ip_addr.rs",
    "func": "<net::ip_addr::Ipv6Addr as cmp::Eq>::assert_receiver_is_total_eq",
    "hash": "68690352043314482819199385780598020614"
  },
  {
    "crate": "core",
    "file": "core/src/net/ip_addr.rs",
    "func": "<net::ip_addr::Ipv6Addr as cmp::Ord>::cmp",
    "hash": "119100254478889213559567565887720635101"
  },
  {
    "crate": "core",
    "file": "core/src/net/ip_addr.rs",
    "func": "<net::ip_addr::Ipv6Addr as cmp::PartialEq<net::ip_addr::IpAddr>>::eq",
    "hash": "11259879155801106824452719417641411155"
  },
  {
    "crate": "core",
    "file": "core/src/net/ip_addr.rs",
    "func": "<net::ip_addr::Ipv6Addr as cmp::PartialEq>::eq",
    "hash": "155000671637313718397576088623777978878"
  },
  {
    "crate": "core",
    "file": "core/src/net/ip_addr.rs",
    "func": "<net::ip_addr::Ipv6Addr as cmp::PartialOrd<net::ip_addr::IpAddr>>::partial_cmp",
    "hash": "1736507971008823746217802727604766602081"
  },
  {
    "crate": "core",
    "file": "core/src/net/ip_addr.rs",
    "func": "<net::ip_addr::Ipv6Addr as cmp::PartialOrd>::partial_cmp",
    "hash": "261747387604080469014724038135723355926"
  },
  {
    "crate": "core",
    "file": "core/src/net/ip_addr.rs",
    "func": "<net::ip_addr::Ipv6Addr as convert::From<[u16; 8]>>::from",
    "hash": "496854103896297410215563177236853482085"
  },
  {
    "crate": "core",
    "file": "core/src/net/ip_addr.rs",
    "func": "<net::ip_addr::Ipv6Addr as convert::From<[u8; 16]>>::from",
    "hash": "106806037778717533315162590574739237997"
  },
  {
    "crate": "core",
    "file": "core/src/net/ip_addr.rs",
    "func": "<net::ip_addr::Ipv6Addr as convert::From<u128>>::from",
    "hash": "1353486227313295232917938013047437264996"
  },
  {
    "crate": "core",
    "file": "core/src/net/ip_addr.rs",
    "func": "<net::ip_addr::Ipv6Addr as ops::bit::BitAnd<&net::ip_addr::Ipv6Addr>>::bitand",
    "hash": "19787599367985276271280958099214046333"
  },
  {
    "crate": "core",
    "file": "core/src/net/ip_addr.rs",
    "func": "<net::ip_addr::Ipv6Addr as ops::bit::BitAnd>::bitand",
    "hash": "170800379728392804222586662629180231922"
  },
  {
    "crate": "core",
    "file": "core/src/net/ip_addr.rs",
    "func": "<net::ip_addr::Ipv6Addr as ops::bit::BitAndAssign<&net::ip_addr::Ipv6Addr>>::bitand_assign",
    "hash": "113569054666517166911489198123534796411"
  },
  {
    "crate": "core",
    "file": "core/src/net/ip_addr.rs",
    "func": "<net::ip_addr::Ipv6Addr as ops::bit::BitAndAssign>::bitand_assign",
    "hash": "7071427928082939459235444216712354480"
  },
  {
    "crate": "core",
    "file": "core/src/net/ip_addr.rs",
    "func": "<net::ip_addr::Ipv6Addr as ops::bit::BitOr<&net::ip_addr::Ipv6Addr>>::bitor",
    "hash": "1378935421168953185713976362142403064143"
  },
  {
    "crate": "core",
    "file": "core/src/net/ip_addr.rs",
    "func": "<net::ip_addr::Ipv6Addr as ops::bit::BitOr>::bitor",
    "hash": "1527116647105089561615470345125122722"
  },
  {
    "crate": "core",
    "file": "core/src/net/ip_addr.rs",
    "func": "<net::ip_addr::Ipv6Addr as ops::bit::BitOrAssign<&net::ip_addr::Ipv6Addr>>::bitor_assign",
    "hash": "1217135473270964254314286450239611177252"
  },
  {
    "crate": "core",
    "file": "core/src/net/ip_addr.rs",
    "func": "<net::ip_addr::Ipv6Addr as ops::bit::BitOrAssign>::bitor_assign",
    "hash": "1423955562833255093613083828574392478228"
  },
  {
    "crate": "core",
    "file": "core/src/net/ip_addr.rs",
    "func": "<net::ip_addr::Ipv6Addr as ops::bit::Not>::not",
    "hash": "1122736451574327556517542562811819781081"
  },
  {
    "crate": "core",
    "file": "core/src/net/ip_addr.rs",
    "func": "<net::ip_addr::Ipv6MulticastScope as clone::Clone>::clone",
    "hash": "92394463914089531449468390566136204436"
  },
  {
    "crate": "core",
    "file": "core/src/net/ip_addr.rs",
    "func": "<net::ip_addr::Ipv6MulticastScope as cmp::Eq>::assert_receiver_is_total_eq",
    "hash": "35809579958767686439726390059935628492"
  },
  {
    "crate": "core",
    "file": "core/src/net/ip_addr.rs",
    "func": "<net::ip_addr::Ipv6MulticastScope as cmp::PartialEq>::eq",
    "hash": "183878618757968736835492036060161220830"
  },
  {
    "crate": "core",
    "file": "core/src/net/ip_addr.rs",
    "func": "net::ip_addr::<impl convert::From<net::ip_addr::Ipv4Addr> for u32>::from",
    "hash": "1238480682215642418516876435228988077751"
  },
  {
    "crate": "core",
    "file": "core/src/net/ip_addr.rs",
    "func": "net::ip_addr::<impl convert::From<net::ip_addr::Ipv6Addr> for u128>::from",
    "hash": "127415580946367530931935041769097003126"
  },
  {
    "crate": "core",
    "file": "core/src/net/ip_addr.rs",
    "func": "net::ip_addr::IpAddr::as_octets",
    "hash": "1495495502822479886359201545694468405"
  },
  {
    "crate": "core",
    "file": "core/src/net/ip_addr.rs",
    "func": "net::ip_addr::IpAddr::is_benchmarking",
    "hash": "604216226925188989414440400373511461638"
  },
  {
    "crate": "core",
    "file": "core/src/net/ip_addr.rs",
    "func": "net::ip_addr::IpAddr::is_documentation",
    "hash": "773335807216227222205732989469028257"
  },
  {
    "crate": "core",
    "file": "core/src/net/ip_addr.rs",
    "func": "net::ip_addr::IpAddr::is_global",
    "hash": "296926039455876201017313290810886633826"
  },
  {
    "crate": "core",
    "file": "core/src/net/ip_addr.rs",
    "func": "net::ip_addr::IpAddr::is_ipv4",
    "hash": "34072154202520050659010384716436252275"
  },
  {
    "crate": "core",
    "file": "core/src/net/ip_addr.rs",
    "func": "net::ip_addr::IpAddr::is_ipv6",
    "hash": "1647072498908601860616152277765007431928"
  },
  {
    "crate": "core",
    "file": "core/src/net/ip_addr.rs",
    "func": "net::ip_addr::IpAddr::is_loopback",
    "hash": "4275145702109784221145112638162822584"
  },
  {
    "crate": "core",
    "file": "core/src/net/ip_addr.rs",
    "func": "net::ip_addr::IpAddr::is_multicast",
    "hash": "974470087174214937514553515525061838943"
  },
  {
    "crate": "core",
    "file": "core/src/net/ip_addr.rs",
    "func": "net::ip_addr::IpAddr::is_unspecified",
    "hash": "422542674383385852415403549182100948508"
  },
  {
    "crate": "core",
    "file": "core/src/net/ip_addr.rs",
    "func": "net::ip_addr::IpAddr::to_canonical",
    "hash": "4953067943861957827401423747658147059"
  },
  {
    "crate": "core",
    "file": "core/src/net/ip_addr.rs",
    "func": "net::ip_addr::Ipv4Addr::as_octets",
    "hash": "101223278979454058814661964633516097013"
  },
  {
    "crate": "core",
    "file": "core/src/net/ip_addr.rs",
    "func": "net::ip_addr::Ipv4Addr::from_bits",
    "hash": "53640303209692801185961515379240838625"
  },
  {
    "crate": "core",
    "file": "core/src/net/ip_addr.rs",
    "func": "net::ip_addr::Ipv4Addr::from_octets",
    "hash": "13074558314382086100766543927783076739"
  },
  {
    "crate": "core",
    "file": "core/src/net/ip_addr.rs",
    "func": "net::ip_addr::Ipv4Addr::is_benchmarking",
    "hash": "1154112256791800715810884634918423760489"
  },
  {
    "crate": "core",
    "file": "core/src/net/ip_addr.rs",
    "func": "net::ip_addr::Ipv4Addr::is_broadcast",
    "hash": "37228679309763403363793402278172014258"
  },
  {
    "crate": "core",
    "file": "core/src/net/ip_addr.rs",
    "func": "net::ip_addr::Ipv4Addr::is_documentation",
    "hash": "114579728239549930234356732496816117126"
  },
  {
    "crate": "core",
    "file": "core/src/net/ip_addr.rs",
    "func": "net::ip_addr::Ipv4Addr::is_global",
    "hash": "65412080915618015632748207955095093910"
  },
  {
    "crate": "core",
    "file": "core/src/net/ip_addr.rs",
    "func": "net::ip_addr::Ipv4Addr::is_link_local",
    "hash": "213253987694335189314156504989406609016"
  },
  {
    "crate": "core",
    "file": "core/src/net/ip_addr.rs",
    "func": "net::ip_addr::Ipv4Addr::is_loopback",
    "hash": "321058546026469120416686063572945871223"
  },
  {
    "crate": "core",
    "file": "core/src/net/ip_addr.rs",
    "func": "net::ip_addr::Ipv4Addr::is_multicast",
    "hash": "907088996340716512213527345379247401613"
  },
  {
    "crate": "core",
    "file": "core/src/net/ip_addr.rs",
    "func": "net::ip_addr::Ipv4Addr::is_private",
    "hash": "6620292540561497585213147191522101109"
  },
  {
    "crate": "core",
    "file": "core/src/net/ip_addr.rs",
    "func": "net::ip_addr::Ipv4Addr::is_reserved",
    "hash": "117663325912361137749070969518342054249"
  },
  {
    "crate": "core",
    "file": "core/src/net/ip_addr.rs",
    "func": "net::ip_addr::Ipv4Addr::is_shared",
    "hash": "31755862083688557983057264915524589934"
  },
  {
    "crate": "core",
    "file": "core/src/net/ip_addr.rs",
    "func": "net::ip_addr::Ipv4Addr::is_unspecified",
    "hash": "941394626665953672517709741063721552259"
  },
  {
    "crate": "core",
    "file": "core/src/net/ip_addr.rs",
    "func": "net::ip_addr::Ipv4Addr::new",
    "hash": "6502083445142584246779010121987916385"
  },
  {
    "crate": "core",
    "file": "core/src/net/ip_addr.rs",
    "func": "net::ip_addr::Ipv4Addr::octets",
    "hash": "594101468346705865516588037143272085631"
  },
  {
    "crate": "core",
    "file": "core/src/net/ip_addr.rs",
    "func": "net::ip_addr::Ipv4Addr::to_bits",
    "hash": "58102810687130910545583579728752819455"
  },
  {
    "crate": "core",
    "file": "core/src/net/ip_addr.rs",
    "func": "net::ip_addr::Ipv4Addr::to_ipv6_compatible",
    "hash": "1137454815818594248212153291962011273751"
  },
  {
    "crate": "core",
    "file": "core/src/net/ip_addr.rs",
    "func": "net::ip_addr::Ipv4Addr::to_ipv6_mapped",
    "hash": "46152593324762142206711102552937996774"
  },
  {
    "crate": "core",
    "file": "core/src/net/ip_addr.rs",
    "func": "net::ip_addr::Ipv6Addr::as_octets",
    "hash": "1382459460223033583013039461048493254282"
  },
  {
    "crate": "core",
    "file": "core/src/net/ip_addr.rs",
    "func": "net::ip_addr::Ipv6Addr::from_bits",
    "hash": "731623889019565543313014460516118974544"
  },
  {
    "crate": "core",
    "file": "core/src/net/ip_addr.rs",
    "func": "net::ip_addr::Ipv6Addr::from_octets",
    "hash": "180480111936671725525131652993218366240"
  },
  {
    "crate": "core",
    "file": "core/src/net/ip_addr.rs",
    "func": "net::ip_addr::Ipv6Addr::from_segments",
    "hash": "1434257727749521574621178201373249896"
  },
  {
    "crate": "core",
    "file": "core/src/net/ip_addr.rs",
    "func": "net::ip_addr::Ipv6Addr::is_benchmarking",
    "hash": "311221966644046995816298460440871231728"
  },
  {
    "crate": "core",
    "file": "core/src/net/ip_addr.rs",
    "func": "net::ip_addr::Ipv6Addr::is_documentation",
    "hash": "64736383503702590698004130996788022538"
  },
  {
    "crate": "core",
    "file": "core/src/net/ip_addr.rs",
    "func": "net::ip_addr::Ipv6Addr::is_global",
    "hash": "177889845982895599971446583489002734361"
  },
  {
    "crate": "core",
    "file": "core/src/net/ip_addr.rs",
    "func": "net::ip_addr::Ipv6Addr::is_ipv4_mapped",
    "hash": "4157579966703680871898746561468787801"
  },
  {
    "crate": "core",
    "file": "core/src/net/ip_addr.rs",
    "func": "net::ip_addr::Ipv6Addr::is_loopback",
    "hash": "131762636326414538327507480501671525541"
  },
  {
    "crate": "core",
    "file": "core/src/net/ip_addr.rs",
    "func": "net::ip_addr::Ipv6Addr::is_multicast",
    "hash": "1197391494704122416915516136927408510172"
  },
  {
    "crate": "core",
    "file": "core/src/net/ip_addr.rs",
    "func": "net::ip_addr::Ipv6Addr::is_unicast",
    "hash": "333901125391177738612865481659094622197"
  },
  {
    "crate": "core",
    "file": "core/src/net/ip_addr.rs",
    "func": "net::ip_addr::Ipv6Addr::is_unicast_global",
    "hash": "52395046574964579213949133498233728622"
  },
  {
    "crate": "core",
    "file": "core/src/net/ip_addr.rs",
    "func": "net::ip_addr::Ipv6Addr::is_unicast_link_local",
    "hash": "141368012198147533536523881722604338111"
  },
  {
    "crate": "core",
    "file": "core/src/net/ip_addr.rs",
    "func": "net::ip_addr::Ipv6Addr::is_unique_local",
    "hash": "8608213558699341814301942054269486710"
  },
  {
    "crate": "core",
    "file": "core/src/net/ip_addr.rs",
    "func": "net::ip_addr::Ipv6Addr::is_unspecified",
    "hash": "50136023596925998515396630084174774511"
  },
  {
    "crate": "core",
    "file": "core/src/net/ip_addr.rs",
    "func": "net::ip_addr::Ipv6Addr::multicast_scope",
    "hash": "25883525929735483306512180233653308273"
  },
  {
    "crate": "core",
    "file": "core/src/net/ip_addr.rs",
    "func": "net::ip_addr::Ipv6Addr::new",
    "hash": "141921990527120553324605581084068326138"
  },
  {
    "crate": "core",
    "file": "core/src/net/ip_addr.rs",
    "func": "net::ip_addr::Ipv6Addr::octets",
    "hash": "62038573511047791971320547253979391011"
  },
  {
    "crate": "core",
    "file": "core/src/net/ip_addr.rs",
    "func": "net::ip_addr::Ipv6Addr::segments",
    "hash": "634650997431280890716710941514739714143"
  },
  {
    "crate": "core",
    "file": "core/src/net/ip_addr.rs",
    "func": "net::ip_addr::Ipv6Addr::to_bits",
    "hash": "75503629934180112186363457257490015243"
  },
  {
    "crate": "core",
    "file": "core/src/net/ip_addr.rs",
    "func": "net::ip_addr::Ipv6Addr::to_canonical",
    "hash": "105730132000642611302988186046236357533"
  },
  {
    "crate": "core",
    "file": "core/src/net/ip_addr.rs",
    "func": "net::ip_addr::Ipv6Addr::to_ipv4",
    "hash": "1212112831466418242617335471793229244129"
  },
  {
    "crate": "core",
    "file": "core/src/net/ip_addr.rs",
    "func": "net::ip_addr::Ipv6Addr::to_ipv4_mapped",
    "hash": "71246380578644339536635791968521120722"
  },
  {
    "crate": "core",
    "file": "core/src/net/parser.rs",
    "func": "<net::parser::AddrKind as clone::Clone>::clone",
    "hash": "57338033242676239491212106943760500661"
  },
  {
    "crate": "core",
    "file": "core/src/net/parser.rs",
    "func": "<net::parser::AddrKind as cmp::Eq>::assert_receiver_is_total_eq",
    "hash": "51594275855947751775142425134597913907"
  },
  {
    "crate": "core",
    "file": "core/src/net/parser.rs",
    "func": "<net::parser::AddrKind as cmp::PartialEq>::eq",
    "hash": "108990140259355343172568090755494475769"
  },
  {
    "crate": "core",
    "file": "core/src/net/parser.rs",
    "func": "<net::parser::AddrParseError as clone::Clone>::clone",
    "hash": "690813232397562813113920840619976175903"
  },
  {
    "crate": "core",
    "file": "core/src/net/parser.rs",
    "func": "<net::parser::AddrParseError as cmp::Eq>::assert_receiver_is_total_eq",
    "hash": "9049099429058470621088274378690438309"
  },
  {
    "crate": "core",
    "file": "core/src/net/parser.rs",
    "func": "<net::parser::AddrParseError as cmp::PartialEq>::eq",
    "hash": "130017362708044870112137214267689148259"
  },
  {
    "crate": "core",
    "file": "core/src/net/parser.rs",
    "func": "<net::parser::AddrParseError as error::Error>::description",
    "hash": "93897805606052138209833822537600258215"
  },
  {
    "crate": "core",
    "file": "core/src/net/parser.rs",
    "func": "<u16 as net::parser::ReadNumberHelper>::checked_add",
    "hash": "539121335870744671012350925530138496216"
  },
  {
    "crate": "core",
    "file": "core/src/net/parser.rs",
    "func": "<u16 as net::parser::ReadNumberHelper>::checked_mul",
    "hash": "41696721149340869551941639921540757723"
  },
  {
    "crate": "core",
    "file": "core/src/net/parser.rs",
    "func": "<u32 as net::parser::ReadNumberHelper>::checked_add",
    "hash": "45878399708690965432645859627079678235"
  },
  {
    "crate": "core",
    "file": "core/src/net/parser.rs",
    "func": "<u32 as net::parser::ReadNumberHelper>::checked_mul",
    "hash": "1591086628295547906112596037098189206885"
  },
  {
    "crate": "core",
    "file": "core/src/net/parser.rs",
    "func": "<u8 as net::parser::ReadNumberHelper>::checked_add",
    "hash": "1450471548117411532315760461903171262652"
  },
  {
    "crate": "core",
    "file": "core/src/net/parser.rs",
    "func": "<u8 as net::parser::ReadNumberHelper>::checked_mul",
    "hash": "79760089118635028732267478011948325989"
  },
  {
    "crate": "core",
    "file": "core/src/net/socket_addr.rs",
    "func": "<net::socket_addr::SocketAddr as clone::Clone>::clone",
    "hash": "881571011535632767913619940880887849852"
  },
  {
    "crate": "core",
    "file": "core/src/net/socket_addr.rs",
    "func": "<net::socket_addr::SocketAddr as cmp::Eq>::assert_receiver_is_total_eq",
    "hash": "154690688717505045959622994226496609969"
  },
  {
    "crate": "core",
    "file": "core/src/net/socket_addr.rs",
    "func": "<net::socket_addr::SocketAddr as cmp::Ord>::cmp",
    "hash": "8057810432473181882100189611473498506"
  },
  {
    "crate": "core",
    "file": "core/src/net/socket_addr.rs",
    "func": "<net::socket_addr::SocketAddr as cmp::PartialEq>::eq",
    "hash": "1598314630380856789115672586518068129772"
  },
  {
    "crate": "core",
    "file": "core/src/net/socket_addr.rs",
    "func": "<net::socket_addr::SocketAddr as cmp::PartialOrd>::partial_cmp",
    "hash": "1492471071265483731911694780277397200512"
  },
  {
    "crate": "core",
    "file": "core/src/net/socket_addr.rs",
    "func": "<net::socket_addr::SocketAddr as convert::From<net::socket_addr::SocketAddrV4>>::from",
    "hash": "875366945930901465012893057476305314447"
  },
  {
    "crate": "core",
    "file": "core/src/net/socket_addr.rs",
    "func": "<net::socket_addr::SocketAddr as convert::From<net::socket_addr::SocketAddrV6>>::from",
    "hash": "72683622554543568413747473558961338978"
  },
  {
    "crate": "core",
    "file": "core/src/net/socket_addr.rs",
    "func": "<net::socket_addr::SocketAddrV4 as clone::Clone>::clone",
    "hash": "89143128249529267221365318318967522453"
  },
  {
    "crate": "core",
    "file": "core/src/net/socket_addr.rs",
    "func": "<net::socket_addr::SocketAddrV4 as cmp::Eq>::assert_receiver_is_total_eq",
    "hash": "16434557604526258270935765766050497281"
  },
  {
    "crate": "core",
    "file": "core/src/net/socket_addr.rs",
    "func": "<net::socket_addr::SocketAddrV4 as cmp::Ord>::cmp",
    "hash": "176101681564078052391377394909374020333"
  },
  {
    "crate": "core",
    "file": "core/src/net/socket_addr.rs",
    "func": "<net::socket_addr::SocketAddrV4 as cmp::PartialEq>::eq",
    "hash": "1397759549931663747813915423406976584140"
  },
  {
    "crate": "core",
    "file": "core/src/net/socket_addr.rs",
    "func": "<net::socket_addr::SocketAddrV4 as cmp::PartialOrd>::partial_cmp",
    "hash": "4834433346569496402184941970290104105"
  },
  {
    "crate": "core",
    "file": "core/src/net/socket_addr.rs",
    "func": "<net::socket_addr::SocketAddrV6 as clone::Clone>::clone",
    "hash": "183312637659780255541231484230627336028"
  },
  {
    "crate": "core",
    "file": "core/src/net/socket_addr.rs",
    "func": "<net::socket_addr::SocketAddrV6 as cmp::Eq>::assert_receiver_is_total_eq",
    "hash": "376654811610081405710951660308378656615"
  },
  {
    "crate": "core",
    "file": "core/src/net/socket_addr.rs",
    "func": "<net::socket_addr::SocketAddrV6 as cmp::Ord>::cmp",
    "hash": "115969784346468886413211557942722924122"
  },
  {
    "crate": "core",
    "file": "core/src/net/socket_addr.rs",
    "func": "<net::socket_addr::SocketAddrV6 as cmp::PartialEq>::eq",
    "hash": "1626301176650439842515552588979456722752"
  },
  {
    "crate": "core",
    "file": "core/src/net/socket_addr.rs",
    "func": "<net::socket_addr::SocketAddrV6 as cmp::PartialOrd>::partial_cmp",
    "hash": "499599756033640708813652728412470407928"
  },
  {
    "crate": "core",
    "file": "core/src/net/socket_addr.rs",
    "func": "net::socket_addr::SocketAddr::ip",
    "hash": "1018061110745715494518367550576783268367"
  },
  {
    "crate": "core",
    "file": "core/src/net/socket_addr.rs",
    "func": "net::socket_addr::SocketAddr::is_ipv4",
    "hash": "1708910507140939535513526005614921409339"
  },
  {
    "crate": "core",
    "file": "core/src/net/socket_addr.rs",
    "func": "net::socket_addr::SocketAddr::is_ipv6",
    "hash": "58551937312814808791470176540531718370"
  },
  {
    "crate": "core",
    "file": "core/src/net/socket_addr.rs",
    "func": "net::socket_addr::SocketAddr::new",
    "hash": "143820041307921704907427054283161380966"
  },
  {
    "crate": "core",
    "file": "core/src/net/socket_addr.rs",
    "func": "net::socket_addr::SocketAddr::port",
    "hash": "821056380986737062313722891210613829489"
  },
  {
    "crate": "core",
    "file": "core/src/net/socket_addr.rs",
    "func": "net::socket_addr::SocketAddr::set_ip",
    "hash": "674094990990729284615905934285441113489"
  },
  {
    "crate": "core",
    "file": "core/src/net/socket_addr.rs",
    "func": "net::socket_addr::SocketAddr::set_port",
    "hash": "1533972840162688744217732469413820183265"
  },
  {
    "crate": "core",
    "file": "core/src/net/socket_addr.rs",
    "func": "net::socket_addr::SocketAddrV4::ip",
    "hash": "1624000160582606817992326574978127176"
  },
  {
    "crate": "core",
    "file": "core/src/net/socket_addr.rs",
    "func": "net::socket_addr::SocketAddrV4::new",
    "hash": "346801434708832420411564731853873358189"
  },
  {
    "crate": "core",
    "file": "core/src/net/socket_addr.rs",
    "func": "net::socket_addr::SocketAddrV4::port",
    "hash": "1661274048381503306651132033638689155"
  },
  {
    "crate": "core",
    "file": "core/src/net/socket_addr.rs",
    "func": "net::socket_addr::SocketAddrV4::set_ip",
    "hash": "120687218285710837277016605598984744489"
  },
  {
    "crate": "core",
    "file": "core/src/net/socket_addr.rs",
    "func": "net::socket_addr::SocketAddrV4::set_port",
    "hash": "119592868352706283101965858666230448128"
  },
  {
    "crate": "core",
    "file": "core/src/net/socket_addr.rs",
    "func": "net::socket_addr::SocketAddrV6::flowinfo",
    "hash": "271726665598233068216672816377939096504"
  },
  {
    "crate": "core",
    "file": "core/src/net/socket_addr.rs",
    "func": "net::socket_addr::SocketAddrV6::ip",
    "hash": "13923939275776602743576250441745041133"
  },
  {
    "crate": "core",
    "file": "core/src/net/socket_addr.rs",
    "func": "net::socket_addr::SocketAddrV6::new",
    "hash": "956390136576012052516294645937270315205"
  },
  {
    "crate": "core",
    "file": "core/src/net/socket_addr.rs",
    "func": "net::socket_addr::SocketAddrV6::port",
    "hash": "518917683179470932317479461022108880549"
  },
  {
    "crate": "core",
    "file": "core/src/net/socket_addr.rs",
    "func": "net::socket_addr::SocketAddrV6::scope_id",
    "hash": "26383702632836770192870777257194244442"
  },
  {
    "crate": "core",
    "file": "core/src/net/socket_addr.rs",
    "func": "net::socket_addr::SocketAddrV6::set_flowinfo",
    "hash": "1496512249137928513715459396660567295848"
  },
  {
    "crate": "core",
    "file": "core/src/net/socket_addr.rs",
    "func": "net::socket_addr::SocketAddrV6::set_ip",
    "hash": "1017782510994436574815932785748847997117"
  },
  {
    "crate": "core",
    "file": "core/src/net/socket_addr.rs",
    "func": "net::socket_addr::SocketAddrV6::set_port",
    "hash": "158701287728992250414215863642183640212"
  },
  {
    "crate": "core",
    "file": "core/src/net/socket_addr.rs",
    "func": "net::socket_addr::SocketAddrV6::set_scope_id",
    "hash": "56593444992042073581463295166616692561"
  },
  {
    "crate": "core",
    "file": "core/src/num/bignum.rs",
    "func": "<num::bignum::Big32x40 as clone::Clone>::clone",
    "hash": "68448351923864966201202342370076058931"
  },
  {
    "crate": "core",
    "file": "core/src/num/bignum.rs",
    "func": "<num::bignum::Big32x40 as cmp::Ord>::cmp",
    "hash": "157235444529501915307648009778771767554"
  },
  {
    "crate": "core",
    "file": "core/src/num/bignum.rs",
    "func": "<num::bignum::Big32x40 as cmp::PartialEq>::eq",
    "hash": "55342957751527949678708416814213480497"
  },
  {
    "crate": "core",
    "file": "core/src/num/bignum.rs",
    "func": "<num::bignum::Big32x40 as cmp::PartialOrd>::partial_cmp",
    "hash": "1539099902364888240017195621260689674383"
  },
  {
    "crate": "core",
    "file": "core/src/num/bignum.rs",
    "func": "<num::bignum::tests::Big8x3 as clone::Clone>::clone",
    "hash": "22768490750388970221446139959291849771"
  },
  {
    "crate": "core",
    "file": "core/src/num/bignum.rs",
    "func": "<num::bignum::tests::Big8x3 as cmp::Ord>::cmp",
    "hash": "90964047817762015339293758552798849299"
  },
  {
    "crate": "core",
    "file": "core/src/num/bignum.rs",
    "func": "<num::bignum::tests::Big8x3 as cmp::PartialEq>::eq",
    "hash": "9545080481036209117556321656899553418"
  },
  {
    "crate": "core",
    "file": "core/src/num/bignum.rs",
    "func": "<num::bignum::tests::Big8x3 as cmp::PartialOrd>::partial_cmp",
    "hash": "469727331659137685113624978993494314597"
  },
  {
    "crate": "core",
    "file": "core/src/num/bignum.rs",
    "func": "<u16 as num::bignum::FullOps>::full_div_rem",
    "hash": "24394899481369512671357527845702976105"
  },
  {
    "crate": "core",
    "file": "core/src/num/bignum.rs",
    "func": "<u16 as num::bignum::FullOps>::full_mul_add",
    "hash": "1603543728729183321616410501201294266403"
  },
  {
    "crate": "core",
    "file": "core/src/num/bignum.rs",
    "func": "<u32 as num::bignum::FullOps>::full_div_rem",
    "hash": "421349501390734416011533386675405511079"
  },
  {
    "crate": "core",
    "file": "core/src/num/bignum.rs",
    "func": "<u32 as num::bignum::FullOps>::full_mul_add",
    "hash": "537616630704522200217231635580372837379"
  },
  {
    "crate": "core",
    "file": "core/src/num/bignum.rs",
    "func": "<u8 as num::bignum::FullOps>::full_div_rem",
    "hash": "168075370270112550468914736667046711117"
  },
  {
    "crate": "core",
    "file": "core/src/num/bignum.rs",
    "func": "<u8 as num::bignum::FullOps>::full_mul_add",
    "hash": "131773311852764655024953585027788742507"
  },
  {
    "crate": "core",
    "file": "core/src/num/bignum.rs",
    "func": "num::bignum::Big32x40::add",
    "hash": "142236006615218644013081202297100015337"
  },
  {
    "crate": "core",
    "file": "core/src/num/bignum.rs",
    "func": "num::bignum::Big32x40::add_small",
    "hash": "1637482027638663505513134667120714897473"
  },
  {
    "crate": "core",
    "file": "core/src/num/bignum.rs",
    "func": "num::bignum::Big32x40::bit_length",
    "hash": "495236636093004124614343141096832611328"
  },
  {
    "crate": "core",
    "file": "core/src/num/bignum.rs",
    "func": "num::bignum::Big32x40::digits",
    "hash": "1709350454889222829518188576314532771019"
  },
  {
    "crate": "core",
    "file": "core/src/num/bignum.rs",
    "func": "num::bignum::Big32x40::div_rem",
    "hash": "41746593466984539518807844120106645489"
  },
  {
    "crate": "core",
    "file": "core/src/num/bignum.rs",
    "func": "num::bignum::Big32x40::div_rem_small",
    "hash": "10432117029953830314207960737762310169"
  },
  {
    "crate": "core",
    "file": "core/src/num/bignum.rs",
    "func": "num::bignum::Big32x40::from_small",
    "hash": "688273509255497241811981814166475898820"
  },
  {
    "crate": "core",
    "file": "core/src/num/bignum.rs",
    "func": "num::bignum::Big32x40::from_u64",
    "hash": "65012448208712145921130822083503603265"
  },
  {
    "crate": "core",
    "file": "core/src/num/bignum.rs",
    "func": "num::bignum::Big32x40::get_bit",
    "hash": "325062202126984603410165208796385002580"
  },
  {
    "crate": "core",
    "file": "core/src/num/bignum.rs",
    "func": "num::bignum::Big32x40::is_zero",
    "hash": "58478058113839863455843578014073902534"
  },
  {
    "crate": "core",
    "file": "core/src/num/bignum.rs",
    "func": "num::bignum::Big32x40::mul_pow2",
    "hash": "1512118865588730243111965436912519846159"
  },
  {
    "crate": "core",
    "file": "core/src/num/bignum.rs",
    "func": "num::bignum::Big32x40::mul_pow5",
    "hash": "113353197173717007612374465747855905818"
  },
  {
    "crate": "core",
    "file": "core/src/num/bignum.rs",
    "func": "num::bignum::Big32x40::mul_small",
    "hash": "798401544020126271710968178427838874319"
  },
  {
    "crate": "core",
    "file": "core/src/num/bignum.rs",
    "func": "num::bignum::Big32x40::sub",
    "hash": "1109851000613549908714214655601645151905"
  },
  {
    "crate": "core",
    "file": "core/src/num/bignum.rs",
    "func": "num::bignum::tests::Big8x3::add",
    "hash": "403466594233803592214145647532184287159"
  },
  {
    "crate": "core",
    "file": "core/src/num/bignum.rs",
    "func": "num::bignum::tests::Big8x3::add_small",
    "hash": "1773809027005396817514078860217336217595"
  },
  {
    "crate": "core",
    "file": "core/src/num/bignum.rs",
    "func": "num::bignum::tests::Big8x3::bit_length",
    "hash": "140756866487022250453338214281294795318"
  },
  {
    "crate": "core",
    "file": "core/src/num/bignum.rs",
    "func": "num::bignum::tests::Big8x3::digits",
    "hash": "1394925382488659989114838977383861464767"
  },
  {
    "crate": "core",
    "file": "core/src/num/bignum.rs",
    "func": "num::bignum::tests::Big8x3::div_rem",
    "hash": "959312521016698416116282864385345438050"
  },
  {
    "crate": "core",
    "file": "core/src/num/bignum.rs",
    "func": "num::bignum::tests::Big8x3::div_rem_small",
    "hash": "126459479849336544194520093434055021047"
  },
  {
    "crate": "core",
    "file": "core/src/num/bignum.rs",
    "func": "num::bignum::tests::Big8x3::from_small",
    "hash": "95923251219851982587733870047772138958"
  },
  {
    "crate": "core",
    "file": "core/src/num/bignum.rs",
    "func": "num::bignum::tests::Big8x3::from_u64",
    "hash": "109015202747875864486895855169507729787"
  },
  {
    "crate": "core",
    "file": "core/src/num/bignum.rs",
    "func": "num::bignum::tests::Big8x3::get_bit",
    "hash": "35754342945009099314998714575357595157"
  },
  {
    "crate": "core",
    "file": "core/src/num/bignum.rs",
    "func": "num::bignum::tests::Big8x3::is_zero",
    "hash": "36938625418172245791880041105894826053"
  },
  {
    "crate": "core",
    "file": "core/src/num/bignum.rs",
    "func": "num::bignum::tests::Big8x3::mul_pow2",
    "hash": "1317583353036258317800295961670457751"
  },
  {
    "crate": "core",
    "file": "core/src/num/bignum.rs",
    "func": "num::bignum::tests::Big8x3::mul_pow5",
    "hash": "1636035815364232419710385722538337516626"
  },
  {
    "crate": "core",
    "file": "core/src/num/bignum.rs",
    "func": "num::bignum::tests::Big8x3::mul_small",
    "hash": "205164308992946948613014632825474595392"
  },
  {
    "crate": "core",
    "file": "core/src/num/bignum.rs",
    "func": "num::bignum::tests::Big8x3::sub",
    "hash": "173870005240394314073820935816842187558"
  },
  {
    "crate": "core",
    "file": "core/src/num/dec2flt/common.rs",
    "func": "<num::dec2flt::common::BiasedFp as clone::Clone>::clone",
    "hash": "99441173741908537221041840997597706871"
  },
  {
    "crate": "core",
    "file": "core/src/num/dec2flt/common.rs",
    "func": "<num::dec2flt::common::BiasedFp as cmp::Eq>::assert_receiver_is_total_eq",
    "hash": "159308443299976036093318276350800879542"
  },
  {
    "crate": "core",
    "file": "core/src/num/dec2flt/common.rs",
    "func": "<num::dec2flt::common::BiasedFp as cmp::PartialEq>::eq",
    "hash": "145429786339401763763301312996132754216"
  },
  {
    "crate": "core",
    "file": "core/src/num/dec2flt/common.rs",
    "func": "<num::dec2flt::common::BiasedFp as default::Default>::default",
    "hash": "945785180716183794615500752505374170007"
  },
  {
    "crate": "core",
    "file": "core/src/num/dec2flt/common.rs",
    "func": "num::dec2flt::common::BiasedFp::zero_pow2",
    "hash": "124079140710334239353528493759477592936"
  },
  {
    "crate": "core",
    "file": "core/src/num/dec2flt/common.rs",
    "func": "num::dec2flt::common::is_8digits",
    "hash": "81155273415641639718543226166319775065"
  },
  {
    "crate": "core",
    "file": "core/src/num/dec2flt/decimal.rs",
    "func": "<num::dec2flt::decimal::Decimal as clone::Clone>::clone",
    "hash": "102162506459467257013338494265345655001"
  },
  {
    "crate": "core",
    "file": "core/src/num/dec2flt/decimal.rs",
    "func": "<num::dec2flt::decimal::Decimal as cmp::Eq>::assert_receiver_is_total_eq",
    "hash": "1450693652236591138131492669646915817"
  },
  {
    "crate": "core",
    "file": "core/src/num/dec2flt/decimal.rs",
    "func": "<num::dec2flt::decimal::Decimal as cmp::PartialEq>::eq",
    "hash": "110999280021339733258284588787542720220"
  },
  {
    "crate": "core",
    "file": "core/src/num/dec2flt/decimal.rs",
    "func": "<num::dec2flt::decimal::Decimal as default::Default>::default",
    "hash": "42222447178915793548542765777097211393"
  },
  {
    "crate": "core",
    "file": "core/src/num/dec2flt/decimal_seq.rs",
    "func": "<num::dec2flt::decimal_seq::DecimalSeq as clone::Clone>::clone",
    "hash": "777711447013849913009532213041181260"
  },
  {
    "crate": "core",
    "file": "core/src/num/dec2flt/decimal_seq.rs",
    "func": "<num::dec2flt::decimal_seq::DecimalSeq as cmp::PartialEq>::eq",
    "hash": "45179767777851486332294915690955240334"
  },
  {
    "crate": "core",
    "file": "core/src/num/dec2flt/decimal_seq.rs",
    "func": "<num::dec2flt::decimal_seq::DecimalSeq as default::Default>::default",
    "hash": "87456189090776109958790862427017379305"
  },
  {
    "crate": "core",
    "file": "core/src/num/dec2flt/decimal_seq.rs",
    "func": "num::dec2flt::decimal_seq::DecimalSeq::left_shift",
    "hash": "83950639343411156618124094003530263769"
  },
  {
    "crate": "core",
    "file": "core/src/num/dec2flt/decimal_seq.rs",
    "func": "num::dec2flt::decimal_seq::DecimalSeq::right_shift",
    "hash": "164159831218017143116413442747617297155"
  },
  {
    "crate": "core",
    "file": "core/src/num/dec2flt/decimal_seq.rs",
    "func": "num::dec2flt::decimal_seq::DecimalSeq::round",
    "hash": "148119537668673383707422286023267036160"
  },
  {
    "crate": "core",
    "file": "core/src/num/dec2flt/decimal_seq.rs",
    "func": "num::dec2flt::decimal_seq::DecimalSeq::trim",
    "hash": "98081951202171471581631183904010496484"
  },
  {
    "crate": "core",
    "file": "core/src/num/dec2flt/decimal_seq.rs",
    "func": "num::dec2flt::decimal_seq::DecimalSeq::try_add_digit",
    "hash": "285895325995770899616926537188131263408"
  },
  {
    "crate": "core",
    "file": "core/src/num/dec2flt/decimal_seq.rs",
    "func": "num::dec2flt::decimal_seq::number_of_digits_decimal_left_shift",
    "hash": "1397938314945639422810772700218331422360"
  },
  {
    "crate": "core",
    "file": "core/src/num/dec2flt/float.rs",
    "func": "<f16 as num::dec2flt::float::RawFloat>::classify",
    "hash": "1346210993873871991211666290987960334823"
  },
  {
    "crate": "core",
    "file": "core/src/num/dec2flt/float.rs",
    "func": "<f16 as num::dec2flt::float::RawFloat>::from_u64",
    "hash": "14534063376101289658844515537532987720"
  },
  {
    "crate": "core",
    "file": "core/src/num/dec2flt/float.rs",
    "func": "<f16 as num::dec2flt::float::RawFloat>::from_u64_bits",
    "hash": "66193859863570600747554959599874745142"
  },
  {
    "crate": "core",
    "file": "core/src/num/dec2flt/float.rs",
    "func": "<f16 as num::dec2flt::float::RawFloat>::pow10_fast_path",
    "hash": "1331180765608372746618038457355727292914"
  },
  {
    "crate": "core",
    "file": "core/src/num/dec2flt/float.rs",
    "func": "<f16 as num::dec2flt::float::RawFloat>::to_bits",
    "hash": "1330230614802694744615177276662987673529"
  },
  {
    "crate": "core",
    "file": "core/src/num/dec2flt/float.rs",
    "func": "<f32 as num::dec2flt::float::RawFloat>::classify",
    "hash": "707171467712266834113402276266494278110"
  },
  {
    "crate": "core",
    "file": "core/src/num/dec2flt/float.rs",
    "func": "<f32 as num::dec2flt::float::RawFloat>::from_u64",
    "hash": "48413878820509011811281704779891899714"
  },
  {
    "crate": "core",
    "file": "core/src/num/dec2flt/float.rs",
    "func": "<f32 as num::dec2flt::float::RawFloat>::from_u64_bits",
    "hash": "131737611100280153115121608445336918708"
  },
  {
    "crate": "core",
    "file": "core/src/num/dec2flt/float.rs",
    "func": "<f32 as num::dec2flt::float::RawFloat>::pow10_fast_path",
    "hash": "1477297535109009433116068469030518062631"
  },
  {
    "crate": "core",
    "file": "core/src/num/dec2flt/float.rs",
    "func": "<f32 as num::dec2flt::float::RawFloat>::to_bits",
    "hash": "643749885405830349618174171670233457290"
  },
  {
    "crate": "core",
    "file": "core/src/num/dec2flt/float.rs",
    "func": "<f64 as num::dec2flt::float::RawFloat>::classify",
    "hash": "110136787095800963745070749484865738"
  },
  {
    "crate": "core",
    "file": "core/src/num/dec2flt/float.rs",
    "func": "<f64 as num::dec2flt::float::RawFloat>::from_u64",
    "hash": "115412798294293315119430927104186225573"
  },
  {
    "crate": "core",
    "file": "core/src/num/dec2flt/float.rs",
    "func": "<f64 as num::dec2flt::float::RawFloat>::from_u64_bits",
    "hash": "139488482713517022392802644189683338670"
  },
  {
    "crate": "core",
    "file": "core/src/num/dec2flt/float.rs",
    "func": "<f64 as num::dec2flt::float::RawFloat>::pow10_fast_path",
    "hash": "282518903960912928514427315635719199053"
  },
  {
    "crate": "core",
    "file": "core/src/num/dec2flt/float.rs",
    "func": "<f64 as num::dec2flt::float::RawFloat>::to_bits",
    "hash": "320659744895839940711142382562474182804"
  },
  {
    "crate": "core",
    "file": "core/src/num/dec2flt/float.rs",
    "func": "<u16 as num::dec2flt::float::CastInto<i16>>::cast",
    "hash": "127687323327805648567195218735907442787"
  },
  {
    "crate": "core",
    "file": "core/src/num/dec2flt/float.rs",
    "func": "<u32 as num::dec2flt::float::CastInto<i16>>::cast",
    "hash": "149559975351884185919646369653297958751"
  },
  {
    "crate": "core",
    "file": "core/src/num/dec2flt/float.rs",
    "func": "<u64 as num::dec2flt::float::CastInto<i16>>::cast",
    "hash": "948784241142142375515727762281903710886"
  },
  {
    "crate": "core",
    "file": "core/src/num/dec2flt/float.rs",
    "func": "num::dec2flt::float::pow2_to_pow10",
    "hash": "1374583963071674867516068621844801164227"
  },
  {
    "crate": "core",
    "file": "core/src/num/dec2flt/lemire.rs",
    "func": "num::dec2flt::lemire::compute_product_approx",
    "hash": "8528349699866341554252821359689409088"
  },
  {
    "crate": "core",
    "file": "core/src/num/dec2flt/lemire.rs",
    "func": "num::dec2flt::lemire::full_multiplication",
    "hash": "629145951687599873418257489910998052999"
  },
  {
    "crate": "core",
    "file": "core/src/num/dec2flt/lemire.rs",
    "func": "num::dec2flt::lemire::power",
    "hash": "177412085354167004611530873351482257523"
  },
  {
    "crate": "core",
    "file": "core/src/num/dec2flt/mod.rs",
    "func": "<num::dec2flt::FloatErrorKind as clone::Clone>::clone",
    "hash": "948620242474440880814597029645470490692"
  },
  {
    "crate": "core",
    "file": "core/src/num/dec2flt/mod.rs",
    "func": "<num::dec2flt::FloatErrorKind as cmp::Eq>::assert_receiver_is_total_eq",
    "hash": "1332257997316420780915894390392057489961"
  },
  {
    "crate": "core",
    "file": "core/src/num/dec2flt/mod.rs",
    "func": "<num::dec2flt::FloatErrorKind as cmp::PartialEq>::eq",
    "hash": "1377143002006642229517171085059045089805"
  },
  {
    "crate": "core",
    "file": "core/src/num/dec2flt/mod.rs",
    "func": "<num::dec2flt::ParseFloatError as clone::Clone>::clone",
    "hash": "128621596444477492361384010490164262983"
  },
  {
    "crate": "core",
    "file": "core/src/num/dec2flt/mod.rs",
    "func": "<num::dec2flt::ParseFloatError as cmp::Eq>::assert_receiver_is_total_eq",
    "hash": "9504615767016588195683765292003259967"
  },
  {
    "crate": "core",
    "file": "core/src/num/dec2flt/mod.rs",
    "func": "<num::dec2flt::ParseFloatError as cmp::PartialEq>::eq",
    "hash": "1782673906597863114816792713400322968088"
  },
  {
    "crate": "core",
    "file": "core/src/num/dec2flt/mod.rs",
    "func": "<num::dec2flt::ParseFloatError as error::Error>::description",
    "hash": "267167536626021002313264640061050432964"
  },
  {
    "crate": "core",
    "file": "core/src/num/dec2flt/mod.rs",
    "func": "num::dec2flt::pfe_empty",
    "hash": "163583058705921443356149816263196482859"
  },
  {
    "crate": "core",
    "file": "core/src/num/dec2flt/mod.rs",
    "func": "num::dec2flt::pfe_invalid",
    "hash": "1727044216435048357413768906990211119788"
  },
  {
    "crate": "core",
    "file": "core/src/num/dec2flt/parse.rs",
    "func": "num::dec2flt::parse::parse_8digits",
    "hash": "142250375918220167373528997255101575270"
  },
  {
    "crate": "core",
    "file": "core/src/num/diy_float.rs",
    "func": "<num::diy_float::Fp as clone::Clone>::clone",
    "hash": "11123308985278480483617437397512463001"
  },
  {
    "crate": "core",
    "file": "core/src/num/diy_float.rs",
    "func": "num::diy_float::Fp::mul",
    "hash": "4012924844145608626733223849978216763"
  },
  {
    "crate": "core",
    "file": "core/src/num/diy_float.rs",
    "func": "num::diy_float::Fp::normalize",
    "hash": "9416534160265142371301446517740257883"
  },
  {
    "crate": "core",
    "file": "core/src/num/diy_float.rs",
    "func": "num::diy_float::Fp::normalize_to",
    "hash": "115132270033676646069459951352907154117"
  },
  {
    "crate": "core",
    "file": "core/src/num/error.rs",
    "func": "<num::error::IntErrorKind as clone::Clone>::clone",
    "hash": "1236789399677122116714508316988697139166"
  },
  {
    "crate": "core",
    "file": "core/src/num/error.rs",
    "func": "<num::error::IntErrorKind as cmp::Eq>::assert_receiver_is_total_eq",
    "hash": "1419445016049295524118374810393943854299"
  },
  {
    "crate": "core",
    "file": "core/src/num/error.rs",
    "func": "<num::error::IntErrorKind as cmp::PartialEq>::eq",
    "hash": "1800354311251897773810617165975736784271"
  },
  {
    "crate": "core",
    "file": "core/src/num/error.rs",
    "func": "<num::error::ParseIntError as clone::Clone>::clone",
    "hash": "2643485135499013354917072026224088561"
  },
  {
    "crate": "core",
    "file": "core/src/num/error.rs",
    "func": "<num::error::ParseIntError as cmp::Eq>::assert_receiver_is_total_eq",
    "hash": "959073878858029247611239324486018914214"
  },
  {
    "crate": "core",
    "file": "core/src/num/error.rs",
    "func": "<num::error::ParseIntError as cmp::PartialEq>::eq",
    "hash": "47322104149450984505262916341339848557"
  },
  {
    "crate": "core",
    "file": "core/src/num/error.rs",
    "func": "<num::error::ParseIntError as error::Error>::description",
    "hash": "1716277859784042556215440372005255736537"
  },
  {
    "crate": "core",
    "file": "core/src/num/error.rs",
    "func": "<num::error::TryFromIntError as clone::Clone>::clone",
    "hash": "916036849199497178314263223508599207575"
  },
  {
    "crate": "core",
    "file": "core/src/num/error.rs",
    "func": "<num::error::TryFromIntError as cmp::Eq>::assert_receiver_is_total_eq",
    "hash": "1270288674622507163115620625259273602427"
  },
  {
    "crate": "core",
    "file": "core/src/num/error.rs",
    "func": "<num::error::TryFromIntError as cmp::PartialEq>::eq",
    "hash": "112852414032303894246681102116085991357"
  },
  {
    "crate": "core",
    "file": "core/src/num/error.rs",
    "func": "<num::error::TryFromIntError as error::Error>::description",
    "hash": "133768731006095600084521743369127362145"
  },
  {
    "crate": "core",
    "file": "core/src/num/error.rs",
    "func": "num::error::ParseIntError::kind",
    "hash": "82038347365787383711313580505188759587"
  },
  {
    "crate": "core",
    "file": "core/src/num/f128.rs",
    "func": "f128::<impl f128>::abs",
    "hash": "1633869985145731555711738745641244921442"
  },
  {
    "crate": "core",
    "file": "core/src/num/f128.rs",
    "func": "f128::<impl f128>::algebraic_add",
    "hash": "107412085628933887705341889824882063588"
  },
  {
    "crate": "core",
    "file": "core/src/num/f128.rs",
    "func": "f128::<impl f128>::algebraic_div",
    "hash": "28573718556958702876367388132345536459"
  },
  {
    "crate": "core",
    "file": "core/src/num/f128.rs",
    "func": "f128::<impl f128>::algebraic_mul",
    "hash": "1743008224195980377918385042921460347963"
  },
  {
    "crate": "core",
    "file": "core/src/num/f128.rs",
    "func": "f128::<impl f128>::algebraic_rem",
    "hash": "759896221967461959418353569912238842391"
  },
  {
    "crate": "core",
    "file": "core/src/num/f128.rs",
    "func": "f128::<impl f128>::algebraic_sub",
    "hash": "2035428624977107881303811008018160018"
  },
  {
    "crate": "core",
    "file": "core/src/num/f128.rs",
    "func": "f128::<impl f128>::ceil",
    "hash": "890892326526035954217739887613926105526"
  },
  {
    "crate": "core",
    "file": "core/src/num/f128.rs",
    "func": "f128::<impl f128>::clamp",
    "hash": "143315659725294890134426402821872509100"
  },
  {
    "crate": "core",
    "file": "core/src/num/f128.rs",
    "func": "f128::<impl f128>::classify",
    "hash": "329598873808563524728391998075018970"
  },
  {
    "crate": "core",
    "file": "core/src/num/f128.rs",
    "func": "f128::<impl f128>::copysign",
    "hash": "27577874283823845322841179150241966344"
  },
  {
    "crate": "core",
    "file": "core/src/num/f128.rs",
    "func": "f128::<impl f128>::div_euclid",
    "hash": "1719105811906915258215891585661751001995"
  },
  {
    "crate": "core",
    "file": "core/src/num/f128.rs",
    "func": "f128::<impl f128>::floor",
    "hash": "164343511295033781638628160971858826102"
  },
  {
    "crate": "core",
    "file": "core/src/num/f128.rs",
    "func": "f128::<impl f128>::fract",
    "hash": "22372380824071182601499837245090610339"
  },
  {
    "crate": "core",
    "file": "core/src/num/f128.rs",
    "func": "f128::<impl f128>::from_be_bytes",
    "hash": "8122855838445519324414982423083852959"
  },
  {
    "crate": "core",
    "file": "core/src/num/f128.rs",
    "func": "f128::<impl f128>::from_bits",
    "hash": "1234048470098097220414204578628110841792"
  },
  {
    "crate": "core",
    "file": "core/src/num/f128.rs",
    "func": "f128::<impl f128>::from_le_bytes",
    "hash": "419127606033413103113864010664655142528"
  },
  {
    "crate": "core",
    "file": "core/src/num/f128.rs",
    "func": "f128::<impl f128>::from_ne_bytes",
    "hash": "33825004529621780635562173729660688948"
  },
  {
    "crate": "core",
    "file": "core/src/num/f128.rs",
    "func": "f128::<impl f128>::is_finite",
    "hash": "16202382198934990966542523486449605989"
  },
  {
    "crate": "core",
    "file": "core/src/num/f128.rs",
    "func": "f128::<impl f128>::is_infinite",
    "hash": "236758410783238469613851478046733879048"
  },
  {
    "crate": "core",
    "file": "core/src/num/f128.rs",
    "func": "f128::<impl f128>::is_nan",
    "hash": "252887400125453305612667949128372271249"
  },
  {
    "crate": "core",
    "file": "core/src/num/f128.rs",
    "func": "f128::<impl f128>::is_normal",
    "hash": "27269214563205269914051069830866987834"
  },
  {
    "crate": "core",
    "file": "core/src/num/f128.rs",
    "func": "f128::<impl f128>::is_sign_negative",
    "hash": "783290788233458409213943446188194581582"
  },
  {
    "crate": "core",
    "file": "core/src/num/f128.rs",
    "func": "f128::<impl f128>::is_sign_positive",
    "hash": "260250833418102634914982796035296776119"
  },
  {
    "crate": "core",
    "file": "core/src/num/f128.rs",
    "func": "f128::<impl f128>::is_subnormal",
    "hash": "164684107263458641366801424444170751216"
  },
  {
    "crate": "core",
    "file": "core/src/num/f128.rs",
    "func": "f128::<impl f128>::max",
    "hash": "173647465369519523937213106820125207492"
  },
  {
    "crate": "core",
    "file": "core/src/num/f128.rs",
    "func": "f128::<impl f128>::maximum",
    "hash": "1094509065320253984734759796539912530"
  },
  {
    "crate": "core",
    "file": "core/src/num/f128.rs",
    "func": "f128::<impl f128>::midpoint",
    "hash": "1053267476323652799917073259753530224005"
  },
  {
    "crate": "core",
    "file": "core/src/num/f128.rs",
    "func": "f128::<impl f128>::min",
    "hash": "8725491321584156676421639741486441029"
  },
  {
    "crate": "core",
    "file": "core/src/num/f128.rs",
    "func": "f128::<impl f128>::minimum",
    "hash": "171091201390141979079517575818744438541"
  },
  {
    "crate": "core",
    "file": "core/src/num/f128.rs",
    "func": "f128::<impl f128>::mul_add",
    "hash": "110584017521883767474642803331835729246"
  },
  {
    "crate": "core",
    "file": "core/src/num/f128.rs",
    "func": "f128::<impl f128>::next_down",
    "hash": "58468660979199056379891044349254630413"
  },
  {
    "crate": "core",
    "file": "core/src/num/f128.rs",
    "func": "f128::<impl f128>::next_up",
    "hash": "1110697423436517853715911287716452833507"
  },
  {
    "crate": "core",
    "file": "core/src/num/f128.rs",
    "func": "f128::<impl f128>::powi",
    "hash": "1328475710985588959412647222202311337096"
  },
  {
    "crate": "core",
    "file": "core/src/num/f128.rs",
    "func": "f128::<impl f128>::recip",
    "hash": "53673775587403904852748555491265792057"
  },
  {
    "crate": "core",
    "file": "core/src/num/f128.rs",
    "func": "f128::<impl f128>::rem_euclid",
    "hash": "27287646097975060608818861969660199324"
  },
  {
    "crate": "core",
    "file": "core/src/num/f128.rs",
    "func": "f128::<impl f128>::round",
    "hash": "40309882590468259442140807086508547844"
  },
  {
    "crate": "core",
    "file": "core/src/num/f128.rs",
    "func": "f128::<impl f128>::round_ties_even",
    "hash": "1773072776909027464110196152472753402342"
  },
  {
    "crate": "core",
    "file": "core/src/num/f128.rs",
    "func": "f128::<impl f128>::signum",
    "hash": "368383134810218413412034408711171454153"
  },
  {
    "crate": "core",
    "file": "core/src/num/f128.rs",
    "func": "f128::<impl f128>::sqrt",
    "hash": "7007884518632528311742548136128264728"
  },
  {
    "crate": "core",
    "file": "core/src/num/f128.rs",
    "func": "f128::<impl f128>::to_be_bytes",
    "hash": "365061371782884499112893699230453546505"
  },
  {
    "crate": "core",
    "file": "core/src/num/f128.rs",
    "func": "f128::<impl f128>::to_bits",
    "hash": "1974282168039380848894594196462410349"
  },
  {
    "crate": "core",
    "file": "core/src/num/f128.rs",
    "func": "f128::<impl f128>::to_degrees",
    "hash": "44821039925773188649166761235255922029"
  },
  {
    "crate": "core",
    "file": "core/src/num/f128.rs",
    "func": "f128::<impl f128>::to_le_bytes",
    "hash": "1178988833931105813214137142211139040414"
  },
  {
    "crate": "core",
    "file": "core/src/num/f128.rs",
    "func": "f128::<impl f128>::to_ne_bytes",
    "hash": "1585231871491828837011353632571917324705"
  },
  {
    "crate": "core",
    "file": "core/src/num/f128.rs",
    "func": "f128::<impl f128>::to_radians",
    "hash": "90034539424117725455242591575792972227"
  },
  {
    "crate": "core",
    "file": "core/src/num/f128.rs",
    "func": "f128::<impl f128>::total_cmp",
    "hash": "979604039652460967811070772091740033195"
  },
  {
    "crate": "core",
    "file": "core/src/num/f128.rs",
    "func": "f128::<impl f128>::trunc",
    "hash": "54260058544797284938142620574691468031"
  },
  {
    "crate": "core",
    "file": "core/src/num/f16.rs",
    "func": "f16::<impl f16>::abs",
    "hash": "73925086737508027584524650242921435444"
  },
  {
    "crate": "core",
    "file": "core/src/num/f16.rs",
    "func": "f16::<impl f16>::algebraic_add",
    "hash": "1059660548574338426313416220588653512942"
  },
  {
    "crate": "core",
    "file": "core/src/num/f16.rs",
    "func": "f16::<impl f16>::algebraic_div",
    "hash": "104186358263751208487129328069002154041"
  },
  {
    "crate": "core",
    "file": "core/src/num/f16.rs",
    "func": "f16::<impl f16>::algebraic_mul",
    "hash": "56428216161089160957710962075375122303"
  },
  {
    "crate": "core",
    "file": "core/src/num/f16.rs",
    "func": "f16::<impl f16>::algebraic_rem",
    "hash": "1508010742080831854416493819258616290167"
  },
  {
    "crate": "core",
    "file": "core/src/num/f16.rs",
    "func": "f16::<impl f16>::algebraic_sub",
    "hash": "770641304955567270711466230620836663502"
  },
  {
    "crate": "core",
    "file": "core/src/num/f16.rs",
    "func": "f16::<impl f16>::cbrt",
    "hash": "1767604426030851285418192446979788597691"
  },
  {
    "crate": "core",
    "file": "core/src/num/f16.rs",
    "func": "f16::<impl f16>::ceil",
    "hash": "1082734517466005126418251485421086386161"
  },
  {
    "crate": "core",
    "file": "core/src/num/f16.rs",
    "func": "f16::<impl f16>::clamp",
    "hash": "161764625931339692595246122618837151321"
  },
  {
    "crate": "core",
    "file": "core/src/num/f16.rs",
    "func": "f16::<impl f16>::classify",
    "hash": "821624783380660323912636252934479695499"
  },
  {
    "crate": "core",
    "file": "core/src/num/f16.rs",
    "func": "f16::<impl f16>::copysign",
    "hash": "37680520250890434433114734277362237189"
  },
  {
    "crate": "core",
    "file": "core/src/num/f16.rs",
    "func": "f16::<impl f16>::div_euclid",
    "hash": "171436479127279122138558003880116972264"
  },
  {
    "crate": "core",
    "file": "core/src/num/f16.rs",
    "func": "f16::<impl f16>::floor",
    "hash": "921339864627596099859018162835429613"
  },
  {
    "crate": "core",
    "file": "core/src/num/f16.rs",
    "func": "f16::<impl f16>::fract",
    "hash": "173290611482697946331997386164575909520"
  },
  {
    "crate": "core",
    "file": "core/src/num/f16.rs",
    "func": "f16::<impl f16>::from_be_bytes",
    "hash": "104484383379565892142243829022782304407"
  },
  {
    "crate": "core",
    "file": "core/src/num/f16.rs",
    "func": "f16::<impl f16>::from_bits",
    "hash": "80331169847412004098471689422468576411"
  },
  {
    "crate": "core",
    "file": "core/src/num/f16.rs",
    "func": "f16::<impl f16>::from_le_bytes",
    "hash": "163618427863200703384041235697439620981"
  },
  {
    "crate": "core",
    "file": "core/src/num/f16.rs",
    "func": "f16::<impl f16>::from_ne_bytes",
    "hash": "114214805238868335878571195548175352287"
  },
  {
    "crate": "core",
    "file": "core/src/num/f16.rs",
    "func": "f16::<impl f16>::is_finite",
    "hash": "556060979483318749516000448749604067779"
  },
  {
    "crate": "core",
    "file": "core/src/num/f16.rs",
    "func": "f16::<impl f16>::is_infinite",
    "hash": "98825812488495831817080296609037965467"
  },
  {
    "crate": "core",
    "file": "core/src/num/f16.rs",
    "func": "f16::<impl f16>::is_nan",
    "hash": "181659118885593681133963112753434433326"
  },
  {
    "crate": "core",
    "file": "core/src/num/f16.rs",
    "func": "f16::<impl f16>::is_normal",
    "hash": "154926313383668412766224911126506720924"
  },
  {
    "crate": "core",
    "file": "core/src/num/f16.rs",
    "func": "f16::<impl f16>::is_sign_negative",
    "hash": "41314493314170273698848119374772252082"
  },
  {
    "crate": "core",
    "file": "core/src/num/f16.rs",
    "func": "f16::<impl f16>::is_sign_positive",
    "hash": "86698344806947611722293919790928706286"
  },
  {
    "crate": "core",
    "file": "core/src/num/f16.rs",
    "func": "f16::<impl f16>::is_subnormal",
    "hash": "109519248899684371789777581971098695341"
  },
  {
    "crate": "core",
    "file": "core/src/num/f16.rs",
    "func": "f16::<impl f16>::max",
    "hash": "152711517664294811573978637764540359704"
  },
  {
    "crate": "core",
    "file": "core/src/num/f16.rs",
    "func": "f16::<impl f16>::maximum",
    "hash": "183020508902589499482473813196087557516"
  },
  {
    "crate": "core",
    "file": "core/src/num/f16.rs",
    "func": "f16::<impl f16>::midpoint",
    "hash": "169219455588132966417319892430623559685"
  },
  {
    "crate": "core",
    "file": "core/src/num/f16.rs",
    "func": "f16::<impl f16>::min",
    "hash": "118589128990215951012823730733088797622"
  },
  {
    "crate": "core",
    "file": "core/src/num/f16.rs",
    "func": "f16::<impl f16>::minimum",
    "hash": "11805647257725004543720445031762484219"
  },
  {
    "crate": "core",
    "file": "core/src/num/f16.rs",
    "func": "f16::<impl f16>::mul_add",
    "hash": "95134245530129762546123037105692663858"
  },
  {
    "crate": "core",
    "file": "core/src/num/f16.rs",
    "func": "f16::<impl f16>::next_down",
    "hash": "43480900025104149959117673580742885429"
  },
  {
    "crate": "core",
    "file": "core/src/num/f16.rs",
    "func": "f16::<impl f16>::next_up",
    "hash": "1768830170805391089315880766164808379489"
  },
  {
    "crate": "core",
    "file": "core/src/num/f16.rs",
    "func": "f16::<impl f16>::powi",
    "hash": "21262879318647260149068258229086577412"
  },
  {
    "crate": "core",
    "file": "core/src/num/f16.rs",
    "func": "f16::<impl f16>::recip",
    "hash": "505388474969557991817888203243110134258"
  },
  {
    "crate": "core",
    "file": "core/src/num/f16.rs",
    "func": "f16::<impl f16>::rem_euclid",
    "hash": "142407567263000014181597748260039194145"
  },
  {
    "crate": "core",
    "file": "core/src/num/f16.rs",
    "func": "f16::<impl f16>::round",
    "hash": "138083676265772780101124621173759773073"
  },
  {
    "crate": "core",
    "file": "core/src/num/f16.rs",
    "func": "f16::<impl f16>::round_ties_even",
    "hash": "1584401323964197142214394972853170238527"
  },
  {
    "crate": "core",
    "file": "core/src/num/f16.rs",
    "func": "f16::<impl f16>::signum",
    "hash": "9670103822153451985703418164222835874"
  },
  {
    "crate": "core",
    "file": "core/src/num/f16.rs",
    "func": "f16::<impl f16>::sqrt",
    "hash": "895562704183033706610562039504268832954"
  },
  {
    "crate": "core",
    "file": "core/src/num/f16.rs",
    "func": "f16::<impl f16>::to_be_bytes",
    "hash": "23380012099289357074769540496124039726"
  },
  {
    "crate": "core",
    "file": "core/src/num/f16.rs",
    "func": "f16::<impl f16>::to_bits",
    "hash": "331178422282659479317337493575173626152"
  },
  {
    "crate": "core",
    "file": "core/src/num/f16.rs",
    "func": "f16::<impl f16>::to_degrees",
    "hash": "115624753997309890619016079197436323869"
  },
  {
    "crate": "core",
    "file": "core/src/num/f16.rs",
    "func": "f16::<impl f16>::to_le_bytes",
    "hash": "38569530468231361933771940609326788170"
  },
  {
    "crate": "core",
    "file": "core/src/num/f16.rs",
    "func": "f16::<impl f16>::to_ne_bytes",
    "hash": "15586758245316196712825302209304164972"
  },
  {
    "crate": "core",
    "file": "core/src/num/f16.rs",
    "func": "f16::<impl f16>::to_radians",
    "hash": "320485797259104107915664424096873052193"
  },
  {
    "crate": "core",
    "file": "core/src/num/f16.rs",
    "func": "f16::<impl f16>::total_cmp",
    "hash": "775765639444551220212167711497732890430"
  },
  {
    "crate": "core",
    "file": "core/src/num/f16.rs",
    "func": "f16::<impl f16>::trunc",
    "hash": "161445155628503363538073693770598233224"
  },
  {
    "crate": "core",
    "file": "core/src/num/f32.rs",
    "func": "f32::<impl f32>::abs",
    "hash": "7140594435781266806154578540850139692"
  },
  {
    "crate": "core",
    "file": "core/src/num/f32.rs",
    "func": "f32::<impl f32>::algebraic_add",
    "hash": "104484803692756604101945356077582772503"
  },
  {
    "crate": "core",
    "file": "core/src/num/f32.rs",
    "func": "f32::<impl f32>::algebraic_div",
    "hash": "125480685363005409174722380280464863701"
  },
  {
    "crate": "core",
    "file": "core/src/num/f32.rs",
    "func": "f32::<impl f32>::algebraic_mul",
    "hash": "100871955394263534038098351889361213390"
  },
  {
    "crate": "core",
    "file": "core/src/num/f32.rs",
    "func": "f32::<impl f32>::algebraic_rem",
    "hash": "19284626247009428058378358838134224477"
  },
  {
    "crate": "core",
    "file": "core/src/num/f32.rs",
    "func": "f32::<impl f32>::algebraic_sub",
    "hash": "158572850392779277579946471697515664200"
  },
  {
    "crate": "core",
    "file": "core/src/num/f32.rs",
    "func": "f32::<impl f32>::clamp",
    "hash": "27971675638393953588234770756974988693"
  },
  {
    "crate": "core",
    "file": "core/src/num/f32.rs",
    "func": "f32::<impl f32>::classify",
    "hash": "182543060698366627214161300569806267932"
  },
  {
    "crate": "core",
    "file": "core/src/num/f32.rs",
    "func": "f32::<impl f32>::copysign",
    "hash": "91660879335401236928730477644746477916"
  },
  {
    "crate": "core",
    "file": "core/src/num/f32.rs",
    "func": "f32::<impl f32>::from_be_bytes",
    "hash": "1371228300808510208516374968210461489167"
  },
  {
    "crate": "core",
    "file": "core/src/num/f32.rs",
    "func": "f32::<impl f32>::from_bits",
    "hash": "141416729681063873945734553097119310337"
  },
  {
    "crate": "core",
    "file": "core/src/num/f32.rs",
    "func": "f32::<impl f32>::from_le_bytes",
    "hash": "68525805410314396257168658632931135449"
  },
  {
    "crate": "core",
    "file": "core/src/num/f32.rs",
    "func": "f32::<impl f32>::from_ne_bytes",
    "hash": "140645935444460556106759981318207661517"
  },
  {
    "crate": "core",
    "file": "core/src/num/f32.rs",
    "func": "f32::<impl f32>::is_finite",
    "hash": "1531303938923838765511396625477318073187"
  },
  {
    "crate": "core",
    "file": "core/src/num/f32.rs",
    "func": "f32::<impl f32>::is_infinite",
    "hash": "10636394365405002924847654351707122379"
  },
  {
    "crate": "core",
    "file": "core/src/num/f32.rs",
    "func": "f32::<impl f32>::is_nan",
    "hash": "110174298608622596992026438568283617550"
  },
  {
    "crate": "core",
    "file": "core/src/num/f32.rs",
    "func": "f32::<impl f32>::is_normal",
    "hash": "636232236247176065514514387436694411421"
  },
  {
    "crate": "core",
    "file": "core/src/num/f32.rs",
    "func": "f32::<impl f32>::is_sign_negative",
    "hash": "169025222698088550701130642783988507306"
  },
  {
    "crate": "core",
    "file": "core/src/num/f32.rs",
    "func": "f32::<impl f32>::is_sign_positive",
    "hash": "894614440018548037910752981073189373335"
  },
  {
    "crate": "core",
    "file": "core/src/num/f32.rs",
    "func": "f32::<impl f32>::is_subnormal",
    "hash": "1642289273768535047010633412175950183516"
  },
  {
    "crate": "core",
    "file": "core/src/num/f32.rs",
    "func": "f32::<impl f32>::max",
    "hash": "112128120424148035529215705998019957629"
  },
  {
    "crate": "core",
    "file": "core/src/num/f32.rs",
    "func": "f32::<impl f32>::maximum",
    "hash": "117322212830400902639622612582340000610"
  },
  {
    "crate": "core",
    "file": "core/src/num/f32.rs",
    "func": "f32::<impl f32>::midpoint",
    "hash": "205085219078663623013179679713939177738"
  },
  {
    "crate": "core",
    "file": "core/src/num/f32.rs",
    "func": "f32::<impl f32>::min",
    "hash": "451372623761066015216066333506654496517"
  },
  {
    "crate": "core",
    "file": "core/src/num/f32.rs",
    "func": "f32::<impl f32>::minimum",
    "hash": "991700303329753118510903083951194519463"
  },
  {
    "crate": "core",
    "file": "core/src/num/f32.rs",
    "func": "f32::<impl f32>::next_down",
    "hash": "1681177393123097029617095282565980636829"
  },
  {
    "crate": "core",
    "file": "core/src/num/f32.rs",
    "func": "f32::<impl f32>::next_up",
    "hash": "1269843125073022512133378576492267679"
  },
  {
    "crate": "core",
    "file": "core/src/num/f32.rs",
    "func": "f32::<impl f32>::recip",
    "hash": "9562761177431460092250536071346692966"
  },
  {
    "crate": "core",
    "file": "core/src/num/f32.rs",
    "func": "f32::<impl f32>::signum",
    "hash": "753087530211395207011740606835076684171"
  },
  {
    "crate": "core",
    "file": "core/src/num/f32.rs",
    "func": "f32::<impl f32>::to_be_bytes",
    "hash": "169728804810054416533952207038103034445"
  },
  {
    "crate": "core",
    "file": "core/src/num/f32.rs",
    "func": "f32::<impl f32>::to_bits",
    "hash": "1280257502160233765816408910554470634604"
  },
  {
    "crate": "core",
    "file": "core/src/num/f32.rs",
    "func": "f32::<impl f32>::to_degrees",
    "hash": "151006507372923852413151963839623381065"
  },
  {
    "crate": "core",
    "file": "core/src/num/f32.rs",
    "func": "f32::<impl f32>::to_le_bytes",
    "hash": "1206658346023748191812818229859967068256"
  },
  {
    "crate": "core",
    "file": "core/src/num/f32.rs",
    "func": "f32::<impl f32>::to_ne_bytes",
    "hash": "945324755519207202616474918248423120772"
  },
  {
    "crate": "core",
    "file": "core/src/num/f32.rs",
    "func": "f32::<impl f32>::to_radians",
    "hash": "1352230568229456361013168241878730473120"
  },
  {
    "crate": "core",
    "file": "core/src/num/f32.rs",
    "func": "f32::<impl f32>::total_cmp",
    "hash": "1157832635988226544312579101964623411278"
  },
  {
    "crate": "core",
    "file": "core/src/num/f32.rs",
    "func": "f32::math::abs_sub",
    "hash": "147824754210793306612224136684974876748"
  },
  {
    "crate": "core",
    "file": "core/src/num/f32.rs",
    "func": "f32::math::cbrt",
    "hash": "170363654074632269934448994608027670063"
  },
  {
    "crate": "core",
    "file": "core/src/num/f32.rs",
    "func": "f32::math::ceil",
    "hash": "1035767718139092257414645907844215592290"
  },
  {
    "crate": "core",
    "file": "core/src/num/f32.rs",
    "func": "f32::math::div_euclid",
    "hash": "15032386568545210375665912564520042984"
  },
  {
    "crate": "core",
    "file": "core/src/num/f32.rs",
    "func": "f32::math::floor",
    "hash": "14985070720090950399587691230438474661"
  },
  {
    "crate": "core",
    "file": "core/src/num/f32.rs",
    "func": "f32::math::fract",
    "hash": "117479480859851369524283266066306097031"
  },
  {
    "crate": "core",
    "file": "core/src/num/f32.rs",
    "func": "f32::math::mul_add",
    "hash": "960306414198010095314924900814123492338"
  },
  {
    "crate": "core",
    "file": "core/src/num/f32.rs",
    "func": "f32::math::powi",
    "hash": "46627752418478057373695395924105075743"
  },
  {
    "crate": "core",
    "file": "core/src/num/f32.rs",
    "func": "f32::math::rem_euclid",
    "hash": "145956509312742314166437771491205134633"
  },
  {
    "crate": "core",
    "file": "core/src/num/f32.rs",
    "func": "f32::math::round",
    "hash": "45394002683714670213397947575551564242"
  },
  {
    "crate": "core",
    "file": "core/src/num/f32.rs",
    "func": "f32::math::round_ties_even",
    "hash": "1465525211766878933612973348735864383249"
  },
  {
    "crate": "core",
    "file": "core/src/num/f32.rs",
    "func": "f32::math::sqrt",
    "hash": "82419710605507816349607127734973454039"
  },
  {
    "crate": "core",
    "file": "core/src/num/f32.rs",
    "func": "f32::math::trunc",
    "hash": "157990166986652145461875664503021779858"
  },
  {
    "crate": "core",
    "file": "core/src/num/f64.rs",
    "func": "f64::<impl f64>::abs",
    "hash": "75082519682538823603969732638410705888"
  },
  {
    "crate": "core",
    "file": "core/src/num/f64.rs",
    "func": "f64::<impl f64>::algebraic_add",
    "hash": "47082923326302672515497974211937028597"
  },
  {
    "crate": "core",
    "file": "core/src/num/f64.rs",
    "func": "f64::<impl f64>::algebraic_div",
    "hash": "139521875923279349413234625166864569959"
  },
  {
    "crate": "core",
    "file": "core/src/num/f64.rs",
    "func": "f64::<impl f64>::algebraic_mul",
    "hash": "952762552281015986717966951154928030709"
  },
  {
    "crate": "core",
    "file": "core/src/num/f64.rs",
    "func": "f64::<impl f64>::algebraic_rem",
    "hash": "1567984623655507089211711396593762706912"
  },
  {
    "crate": "core",
    "file": "core/src/num/f64.rs",
    "func": "f64::<impl f64>::algebraic_sub",
    "hash": "154125230642450902129272785221891063816"
  },
  {
    "crate": "core",
    "file": "core/src/num/f64.rs",
    "func": "f64::<impl f64>::clamp",
    "hash": "169645818424509628142938486917528859782"
  },
  {
    "crate": "core",
    "file": "core/src/num/f64.rs",
    "func": "f64::<impl f64>::classify",
    "hash": "532879368499335525210375989760065508477"
  },
  {
    "crate": "core",
    "file": "core/src/num/f64.rs",
    "func": "f64::<impl f64>::copysign",
    "hash": "67963974527742159972610443212593302814"
  },
  {
    "crate": "core",
    "file": "core/src/num/f64.rs",
    "func": "f64::<impl f64>::from_be_bytes",
    "hash": "107151288501566245144484822832278331452"
  },
  {
    "crate": "core",
    "file": "core/src/num/f64.rs",
    "func": "f64::<impl f64>::from_bits",
    "hash": "36822172541893058416553893184635977627"
  },
  {
    "crate": "core",
    "file": "core/src/num/f64.rs",
    "func": "f64::<impl f64>::from_le_bytes",
    "hash": "34280353637582758901924288170933296567"
  },
  {
    "crate": "core",
    "file": "core/src/num/f64.rs",
    "func": "f64::<impl f64>::from_ne_bytes",
    "hash": "1495650595994977866211101187729086547425"
  },
  {
    "crate": "core",
    "file": "core/src/num/f64.rs",
    "func": "f64::<impl f64>::is_finite",
    "hash": "149211871492080108598327183981824852066"
  },
  {
    "crate": "core",
    "file": "core/src/num/f64.rs",
    "func": "f64::<impl f64>::is_infinite",
    "hash": "13512674014400935391489011822204974697"
  },
  {
    "crate": "core",
    "file": "core/src/num/f64.rs",
    "func": "f64::<impl f64>::is_nan",
    "hash": "175257293156396574608708563526179465699"
  },
  {
    "crate": "core",
    "file": "core/src/num/f64.rs",
    "func": "f64::<impl f64>::is_negative",
    "hash": "529594375125482352315806705650284901742"
  },
  {
    "crate": "core",
    "file": "core/src/num/f64.rs",
    "func": "f64::<impl f64>::is_normal",
    "hash": "63337192395889833306503793195305820843"
  },
  {
    "crate": "core",
    "file": "core/src/num/f64.rs",
    "func": "f64::<impl f64>::is_positive",
    "hash": "29567607453735018075330329502295835592"
  },
  {
    "crate": "core",
    "file": "core/src/num/f64.rs",
    "func": "f64::<impl f64>::is_sign_negative",
    "hash": "1176328137589943253415190693832930071313"
  },
  {
    "crate": "core",
    "file": "core/src/num/f64.rs",
    "func": "f64::<impl f64>::is_sign_positive",
    "hash": "1415830620938680807913361960636901152453"
  },
  {
    "crate": "core",
    "file": "core/src/num/f64.rs",
    "func": "f64::<impl f64>::is_subnormal",
    "hash": "514807974022540665012576078828228459690"
  },
  {
    "crate": "core",
    "file": "core/src/num/f64.rs",
    "func": "f64::<impl f64>::max",
    "hash": "1486452097717518669017337634165412670198"
  },
  {
    "crate": "core",
    "file": "core/src/num/f64.rs",
    "func": "f64::<impl f64>::maximum",
    "hash": "31889712987353550436659287233283443158"
  },
  {
    "crate": "core",
    "file": "core/src/num/f64.rs",
    "func": "f64::<impl f64>::midpoint",
    "hash": "44916348346235519728247615375472188892"
  },
  {
    "crate": "core",
    "file": "core/src/num/f64.rs",
    "func": "f64::<impl f64>::min",
    "hash": "170653147750905819614417588574687809349"
  },
  {
    "crate": "core",
    "file": "core/src/num/f64.rs",
    "func": "f64::<impl f64>::minimum",
    "hash": "115193647832598641363289192430637705311"
  },
  {
    "crate": "core",
    "file": "core/src/num/f64.rs",
    "func": "f64::<impl f64>::next_down",
    "hash": "93571390650135106673454717496126328595"
  },
  {
    "crate": "core",
    "file": "core/src/num/f64.rs",
    "func": "f64::<impl f64>::next_up",
    "hash": "17338784576413134460872323108501169018"
  },
  {
    "crate": "core",
    "file": "core/src/num/f64.rs",
    "func": "f64::<impl f64>::recip",
    "hash": "177187307026383803322078806229263804059"
  },
  {
    "crate": "core",
    "file": "core/src/num/f64.rs",
    "func": "f64::<impl f64>::signum",
    "hash": "12902274231737729234848811482265804611"
  },
  {
    "crate": "core",
    "file": "core/src/num/f64.rs",
    "func": "f64::<impl f64>::to_be_bytes",
    "hash": "95042186414023080224276934245069444532"
  },
  {
    "crate": "core",
    "file": "core/src/num/f64.rs",
    "func": "f64::<impl f64>::to_bits",
    "hash": "1033976944350554769714411313899354111723"
  },
  {
    "crate": "core",
    "file": "core/src/num/f64.rs",
    "func": "f64::<impl f64>::to_degrees",
    "hash": "117990293606584255616668156579751747098"
  },
  {
    "crate": "core",
    "file": "core/src/num/f64.rs",
    "func": "f64::<impl f64>::to_le_bytes",
    "hash": "85106711341370413685595827134844387064"
  },
  {
    "crate": "core",
    "file": "core/src/num/f64.rs",
    "func": "f64::<impl f64>::to_ne_bytes",
    "hash": "1077176047341378497513788673874683487745"
  },
  {
    "crate": "core",
    "file": "core/src/num/f64.rs",
    "func": "f64::<impl f64>::to_radians",
    "hash": "120051509684505029710993609700207727524"
  },
  {
    "crate": "core",
    "file": "core/src/num/f64.rs",
    "func": "f64::<impl f64>::total_cmp",
    "hash": "935865976961147776913102301421189848381"
  },
  {
    "crate": "core",
    "file": "core/src/num/f64.rs",
    "func": "f64::math::abs_sub",
    "hash": "1573678775023933523510183021361825689101"
  },
  {
    "crate": "core",
    "file": "core/src/num/f64.rs",
    "func": "f64::math::cbrt",
    "hash": "613407158268551309717617956002968467861"
  },
  {
    "crate": "core",
    "file": "core/src/num/f64.rs",
    "func": "f64::math::ceil",
    "hash": "75362501417091822857757966117749144879"
  },
  {
    "crate": "core",
    "file": "core/src/num/f64.rs",
    "func": "f64::math::div_euclid",
    "hash": "106009916394163281565225401153986068652"
  },
  {
    "crate": "core",
    "file": "core/src/num/f64.rs",
    "func": "f64::math::floor",
    "hash": "1055257727812382730413914730601118869130"
  },
  {
    "crate": "core",
    "file": "core/src/num/f64.rs",
    "func": "f64::math::fract",
    "hash": "427075525536988273571091771379324603"
  },
  {
    "crate": "core",
    "file": "core/src/num/f64.rs",
    "func": "f64::math::mul_add",
    "hash": "1513434431476876897315370193006938937554"
  },
  {
    "crate": "core",
    "file": "core/src/num/f64.rs",
    "func": "f64::math::powi",
    "hash": "92363467501872478308143776290411715104"
  },
  {
    "crate": "core",
    "file": "core/src/num/f64.rs",
    "func": "f64::math::rem_euclid",
    "hash": "48695589473683170276468272086639820085"
  },
  {
    "crate": "core",
    "file": "core/src/num/f64.rs",
    "func": "f64::math::round",
    "hash": "1298351934288336602512194140932754017728"
  },
  {
    "crate": "core",
    "file": "core/src/num/f64.rs",
    "func": "f64::math::round_ties_even",
    "hash": "738941912072810946410876002326639549374"
  },
  {
    "crate": "core",
    "file": "core/src/num/f64.rs",
    "func": "f64::math::sqrt",
    "hash": "28577739389794658844894865097729461657"
  },
  {
    "crate": "core",
    "file": "core/src/num/f64.rs",
    "func": "f64::math::trunc",
    "hash": "101824234212718020125078204067537076967"
  },
  {
    "crate": "core",
    "file": "core/src/num/flt2dec/decoder.rs",
    "func": "<f16 as num::flt2dec::decoder::DecodableFloat>::min_pos_norm_value",
    "hash": "1411683336468757870511743711763464370685"
  },
  {
    "crate": "core",
    "file": "core/src/num/flt2dec/decoder.rs",
    "func": "<f32 as num::flt2dec::decoder::DecodableFloat>::min_pos_norm_value",
    "hash": "70639346671593076312505980927961085607"
  },
  {
    "crate": "core",
    "file": "core/src/num/flt2dec/decoder.rs",
    "func": "<f64 as num::flt2dec::decoder::DecodableFloat>::min_pos_norm_value",
    "hash": "88995097835845057026643214485317588839"
  },
  {
    "crate": "core",
    "file": "core/src/num/flt2dec/decoder.rs",
    "func": "<num::flt2dec::decoder::Decoded as clone::Clone>::clone",
    "hash": "22196668788775880228807280919910066572"
  },
  {
    "crate": "core",
    "file": "core/src/num/flt2dec/decoder.rs",
    "func": "<num::flt2dec::decoder::Decoded as cmp::Eq>::assert_receiver_is_total_eq",
    "hash": "1074522564591392152312797296692926083796"
  },
  {
    "crate": "core",
    "file": "core/src/num/flt2dec/decoder.rs",
    "func": "<num::flt2dec::decoder::Decoded as cmp::PartialEq>::eq",
    "hash": "1341518285277626009016216285057754013763"
  },
  {
    "crate": "core",
    "file": "core/src/num/flt2dec/decoder.rs",
    "func": "<num::flt2dec::decoder::FullDecoded as clone::Clone>::clone",
    "hash": "129259328319905844708261732164549998067"
  },
  {
    "crate": "core",
    "file": "core/src/num/flt2dec/decoder.rs",
    "func": "<num::flt2dec::decoder::FullDecoded as cmp::Eq>::assert_receiver_is_total_eq",
    "hash": "1290576628407439649515681688098285308163"
  },
  {
    "crate": "core",
    "file": "core/src/num/flt2dec/decoder.rs",
    "func": "<num::flt2dec::decoder::FullDecoded as cmp::PartialEq>::eq",
    "hash": "114346909286564325269344255709905061981"
  },
  {
    "crate": "core",
    "file": "core/src/num/flt2dec/estimator.rs",
    "func": "num::flt2dec::estimator::estimate_scaling_factor",
    "hash": "42545228607250737003161594314588321773"
  },
  {
    "crate": "core",
    "file": "core/src/num/flt2dec/mod.rs",
    "func": "<num::flt2dec::Sign as clone::Clone>::clone",
    "hash": "120947378612395994628504307865777242178"
  },
  {
    "crate": "core",
    "file": "core/src/num/flt2dec/mod.rs",
    "func": "<num::flt2dec::Sign as cmp::Eq>::assert_receiver_is_total_eq",
    "hash": "60285171457992118441354160639911148336"
  },
  {
    "crate": "core",
    "file": "core/src/num/flt2dec/mod.rs",
    "func": "<num::flt2dec::Sign as cmp::PartialEq>::eq",
    "hash": "1581502818683518884716301355999483565432"
  },
  {
    "crate": "core",
    "file": "core/src/num/flt2dec/mod.rs",
    "func": "num::flt2dec::determine_sign",
    "hash": "839674987001693291411818474957253198623"
  },
  {
    "crate": "core",
    "file": "core/src/num/flt2dec/mod.rs",
    "func": "num::flt2dec::estimate_max_buf_len",
    "hash": "9342887985634485973479008237345816446"
  },
  {
    "crate": "core",
    "file": "core/src/num/flt2dec/strategy/dragon.rs",
    "func": "num::flt2dec::strategy::dragon::div_2pow10",
    "hash": "1045020212512633360016584602042212499409"
  },
  {
    "crate": "core",
    "file": "core/src/num/flt2dec/strategy/dragon.rs",
    "func": "num::flt2dec::strategy::dragon::div_rem_upto_16",
    "hash": "7575997933687728883771580418883405079"
  },
  {
    "crate": "core",
    "file": "core/src/num/flt2dec/strategy/dragon.rs",
    "func": "num::flt2dec::strategy::dragon::mul_pow10",
    "hash": "15137834949278911214245458979444918490"
  },
  {
    "crate": "core",
    "file": "core/src/num/flt2dec/strategy/grisu.rs",
    "func": "num::flt2dec::strategy::grisu::cached_power",
    "hash": "1181644125006497251615243195645141756784"
  },
  {
    "crate": "core",
    "file": "core/src/num/flt2dec/strategy/grisu.rs",
    "func": "num::flt2dec::strategy::grisu::max_pow10_no_more_than",
    "hash": "955476229197528600214265971075818548582"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_log10.rs",
    "func": "num::int_log10::i128",
    "hash": "59386087132677451236210312458518974912"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_log10.rs",
    "func": "num::int_log10::i16",
    "hash": "1545343046737874902312403020346146721035"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_log10.rs",
    "func": "num::int_log10::i32",
    "hash": "114685722929929873749560514147797532667"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_log10.rs",
    "func": "num::int_log10::i64",
    "hash": "1717567921191196525514731974872231517300"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_log10.rs",
    "func": "num::int_log10::i8",
    "hash": "131359992944760294391978023220681961417"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_log10.rs",
    "func": "num::int_log10::less_than_5",
    "hash": "177450053108937244256024058949791559633"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_log10.rs",
    "func": "num::int_log10::panic_for_nonpositive_argument",
    "hash": "50186211171463953727684864518369695334"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_log10.rs",
    "func": "num::int_log10::u128",
    "hash": "1268824783546043517015463399488275120996"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_log10.rs",
    "func": "num::int_log10::u16",
    "hash": "39865264399044161166492979154730285341"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_log10.rs",
    "func": "num::int_log10::u32",
    "hash": "66990443953145658003996624341340406115"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_log10.rs",
    "func": "num::int_log10::u64",
    "hash": "113105628410323550903289764020827107190"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_log10.rs",
    "func": "num::int_log10::u8",
    "hash": "823628517717737326511579186628630831978"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_log10.rs",
    "func": "num::int_log10::usize",
    "hash": "7890666119737191484082000720043292310"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::abs",
    "hash": "175265967334509609305684085580196111549"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::abs_diff",
    "hash": "1065604059287226750314711209764831021348"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::borrowing_sub",
    "hash": "251042098918681410907884516124034"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::carrying_add",
    "hash": "1021975737758461550613879285114476108063"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::carrying_mul",
    "hash": "31470696346050416013161016455834698746"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::carrying_mul_add",
    "hash": "125845965040344807716912371130700569989"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::cast_unsigned",
    "hash": "647743306523424891913703448839836970767"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::checked_abs",
    "hash": "457854577354412182515861059752438245355"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::checked_add",
    "hash": "3159896442645512029076204267602624468"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::checked_add_unsigned",
    "hash": "73822061077489105579767849135491855765"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::checked_div",
    "hash": "1100618994483517807116031071511020176026"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::checked_div_euclid",
    "hash": "67272141747831370415435887391185111076"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::checked_exact_div",
    "hash": "151152594329077127834396088149425339183"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::checked_ilog",
    "hash": "1280470840455542942412566107206592846938"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::checked_ilog10",
    "hash": "78639934854642236775488390106352308669"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::checked_ilog2",
    "hash": "52914263542034352598493904500090327298"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::checked_isqrt",
    "hash": "26121444702755502869833509328915822892"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::checked_mul",
    "hash": "21694484710518266459207888408215691928"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::checked_neg",
    "hash": "21363697991050119921287376649710684119"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::checked_next_multiple_of",
    "hash": "1236601486536241015212156882554656162341"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::checked_pow",
    "hash": "129759900774569850884680528493817437172"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::checked_rem",
    "hash": "33198800715667032337005204311237185061"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::checked_rem_euclid",
    "hash": "12749558488957613111568797843749457881"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::checked_shl",
    "hash": "92171235072883726793731014918493791288"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::checked_shr",
    "hash": "505240151902573996034434276247443231"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::checked_sub",
    "hash": "653224080781204070517668670085470622938"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::checked_sub_unsigned",
    "hash": "58977912445077978313289626713570254244"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::count_ones",
    "hash": "262693664553625480416484411417326965426"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::count_zeros",
    "hash": "326902617798087500313338669302516967264"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::div_ceil",
    "hash": "2145886118013190007862680970622372"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::div_euclid",
    "hash": "98750909987731251811038039865290292094"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::div_floor",
    "hash": "80461232777598450756427324697144930134"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::exact_div",
    "hash": "143477460457672892258209823424691506290"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::from_be",
    "hash": "148581234202796263885167370476060589671"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::from_be_bytes",
    "hash": "49346618967019814636431973571084845136"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::from_le",
    "hash": "1751751957437548971915756893766076223449"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::from_le_bytes",
    "hash": "159988550477905664514158176646366551994"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::from_ne_bytes",
    "hash": "5933046606155206716450380524618885947"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::ilog",
    "hash": "993834152152593521615522742015253887124"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::ilog10",
    "hash": "64040692641697507083814962290799835887"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::ilog2",
    "hash": "4292720735239719689990899532773066349"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::is_negative",
    "hash": "1192891654661433313514346530799180209624"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::is_positive",
    "hash": "139049269530973269615969980324925754314"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::isolate_highest_one",
    "hash": "401047258620110725318386670589791127626"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::isolate_lowest_one",
    "hash": "1635252754356807733318095172102260935380"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::isqrt",
    "hash": "1838437962336466466514772568579663033859"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::leading_ones",
    "hash": "388335529545530959517261967567967718205"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::leading_zeros",
    "hash": "46009713319509486332283667246359967809"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::max_value",
    "hash": "180943395233358193381435831488062607439"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::min_value",
    "hash": "57077051374670224462791086058773905686"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::next_multiple_of",
    "hash": "34996741999728347684561495846456537469"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::overflowing_abs",
    "hash": "1478578349143772943411109326173084738577"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::overflowing_add",
    "hash": "51997308011129664554155336160326695851"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::overflowing_add_unsigned",
    "hash": "19471709441979462214935840375235991775"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::overflowing_div",
    "hash": "27507875789251116726876541693309536183"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::overflowing_div_euclid",
    "hash": "161200072735340356553371610974045419168"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::overflowing_mul",
    "hash": "1306429435546726427911757682379312615598"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::overflowing_neg",
    "hash": "1269882269169964491212359986941830429769"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::overflowing_pow",
    "hash": "1474712115900011415410391008262531930300"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::overflowing_rem",
    "hash": "142323059368617364432363069983908120963"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::overflowing_rem_euclid",
    "hash": "1747953306958202574315978379168575364401"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::overflowing_shl",
    "hash": "113370335242919290672004802401488821744"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::overflowing_shr",
    "hash": "3075776755141879254532274117547362702"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::overflowing_sub",
    "hash": "160920753115148464749885032589529297939"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::overflowing_sub_unsigned",
    "hash": "153162848412152658939422857645229675191"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::pow",
    "hash": "726838083132959439514783034780639013043"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::rem_euclid",
    "hash": "164051992215644893413371905750437359783"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::reverse_bits",
    "hash": "4404187659612114762478263816066970803"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::rotate_left",
    "hash": "1488077727864643166913298554044967873582"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::rotate_right",
    "hash": "66983844384615984689791092527911594252"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::saturating_abs",
    "hash": "117750561130429475871670879648993754217"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::saturating_add",
    "hash": "173203224222654530607700910500417420559"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::saturating_add_unsigned",
    "hash": "353938701493423571916597242876595381201"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::saturating_div",
    "hash": "59361766984483532112832712302392213214"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::saturating_mul",
    "hash": "91476452967716243951753109162880861128"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::saturating_neg",
    "hash": "866110391334788316713458079292382958039"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::saturating_pow",
    "hash": "160411643996441539714169285219266182302"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::saturating_sub",
    "hash": "671577811715498095417926388683800826636"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::saturating_sub_unsigned",
    "hash": "434979764532628426611765454705673367850"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::signum",
    "hash": "109053064866752376076388352707221341680"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::strict_abs",
    "hash": "69330455829352237912393195820992880372"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::strict_add",
    "hash": "1403461030077516482617541774849095576796"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::strict_add_unsigned",
    "hash": "1534993299709155881417305869433936642679"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::strict_div",
    "hash": "8571655786724823421749478683224467688"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::strict_div_euclid",
    "hash": "86157597925218862412119897490454634281"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::strict_mul",
    "hash": "97861197186721600203506232150446715181"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::strict_neg",
    "hash": "17306898241617564576793963348968934505"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::strict_pow",
    "hash": "44939975055598361638750487017954007417"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::strict_rem",
    "hash": "327948677219905875511396167564769682803"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::strict_rem_euclid",
    "hash": "1622411317709938633810616878369369426930"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::strict_shl",
    "hash": "1552880860882098534713967985408107186655"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::strict_shr",
    "hash": "20923803846227110333402199358664978238"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::strict_sub",
    "hash": "53448073271128085314508284265056785329"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::strict_sub_unsigned",
    "hash": "126448026848488434959462988178094745574"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::swap_bytes",
    "hash": "89716536624583829541603072916930941186"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::to_be",
    "hash": "104167712302685660334226307877576695613"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::to_be_bytes",
    "hash": "63218808589518809242008379994426210344"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::to_le",
    "hash": "155426344791413448048502447311870633691"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::to_le_bytes",
    "hash": "700140069100660471814985021343303885262"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::to_ne_bytes",
    "hash": "75538282790620532393181296329399137581"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::trailing_ones",
    "hash": "521841918608144991310926069887126600856"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::trailing_zeros",
    "hash": "91795571903005449719074283445951819253"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::unbounded_shl",
    "hash": "1389440368014777009115617904233696857511"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::unbounded_shr",
    "hash": "27481735107360879354721098447789485019"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::unchecked_add",
    "hash": "1561312958813490389110443825329316865866"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::unchecked_exact_div",
    "hash": "216862066704379906717238846690899392338"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::unchecked_mul",
    "hash": "617832238051080168315375927096300695617"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::unchecked_neg",
    "hash": "26268779479908051517850626020040655694"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::unchecked_shl",
    "hash": "416905258681185982117349859854144386916"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::unchecked_shr",
    "hash": "634465297986577207415117911984063808396"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::unchecked_sub",
    "hash": "119763932893817098947873100739668239195"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::unsigned_abs",
    "hash": "1686957514670974888615491355656458010664"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::widening_mul",
    "hash": "77393728434473637862401239545858487052"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::wrapping_abs",
    "hash": "18988614176753652737157668673594616957"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::wrapping_add",
    "hash": "14465560863520541519525342585138614107"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::wrapping_add_unsigned",
    "hash": "121843186897189119016492299234975320578"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::wrapping_div",
    "hash": "206069365947371291716703230655501740665"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::wrapping_div_euclid",
    "hash": "453386002747149008013427745064703014734"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::wrapping_mul",
    "hash": "34671599387288724449824438655878675916"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::wrapping_neg",
    "hash": "968993476027806531612255900359829014631"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::wrapping_pow",
    "hash": "410832286928097077611305862342360118560"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::wrapping_rem",
    "hash": "34876580690735883676080742664779043387"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::wrapping_rem_euclid",
    "hash": "377981075055988315212902790733316027585"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::wrapping_shl",
    "hash": "361779586616093909315625783838180942670"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::wrapping_shr",
    "hash": "564040409160235442111949045572605274724"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::wrapping_sub",
    "hash": "111806900311181588865698898335110272570"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::wrapping_sub_unsigned",
    "hash": "47352929607146300755715030033270522190"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::abs",
    "hash": "155731575668086324022091605914325652330"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::abs_diff",
    "hash": "33599111814611357779359634443653301417"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::borrowing_sub",
    "hash": "25945325973727512629880373701501063893"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::carrying_add",
    "hash": "11786955682794392361684860051733052417"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::carrying_mul",
    "hash": "790165304826913451112542660901638755437"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::carrying_mul_add",
    "hash": "25025780683636800342632791497652063009"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::cast_unsigned",
    "hash": "70068846011732632214223207646673402903"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::checked_abs",
    "hash": "41830734871083325553270310993783353099"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::checked_add",
    "hash": "8810080690942441014069387815997418703"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::checked_add_unsigned",
    "hash": "65095692324153512537933820910035979315"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::checked_div",
    "hash": "129846239623365901299626640246669338179"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::checked_div_euclid",
    "hash": "45285710811031085216216464585881779252"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::checked_exact_div",
    "hash": "83260331221412798183874320230377241270"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::checked_ilog",
    "hash": "86408150930232037688475460239139427803"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::checked_ilog10",
    "hash": "18710473342929303442298530767951097753"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::checked_ilog2",
    "hash": "1805997725825294560915088381373335449835"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::checked_isqrt",
    "hash": "144992620178392557116749920577792091444"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::checked_mul",
    "hash": "103360302854555138296294976249558541574"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::checked_neg",
    "hash": "28663363003710147667654042948561344974"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::checked_next_multiple_of",
    "hash": "530133323862250218813495645125500871590"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::checked_pow",
    "hash": "151784420731311136807050044317505007432"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::checked_rem",
    "hash": "689656894121638471516387804798401760274"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::checked_rem_euclid",
    "hash": "784911328704935540411333153700841255337"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::checked_shl",
    "hash": "96003793558282875702396733905277949025"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::checked_shr",
    "hash": "441292387385206270017891332313643954786"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::checked_sub",
    "hash": "87055030688283706713434863488369036688"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::checked_sub_unsigned",
    "hash": "165201473612347180315652209839366900381"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::count_ones",
    "hash": "146243391862369509053274814832482786881"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::count_zeros",
    "hash": "146157576234201216846240066114461010736"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::div_ceil",
    "hash": "1141001569478975776112395833097249763216"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::div_euclid",
    "hash": "113688899470257303425209444412742502593"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::div_floor",
    "hash": "25642779214467887619147257684266409207"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::exact_div",
    "hash": "479958193666315167411646301765588357357"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::from_be",
    "hash": "161794983364777420944756273779015857086"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::from_be_bytes",
    "hash": "1568151047311749708116583744126927794001"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::from_le",
    "hash": "5366011696056186012501009324222059724"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::from_le_bytes",
    "hash": "1398492433102116048613830075686018038817"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::from_ne_bytes",
    "hash": "70249524977817162835128740420768418775"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::ilog",
    "hash": "58251333977912896934779269664762579186"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::ilog10",
    "hash": "571583480791266443517148099350123223682"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::ilog2",
    "hash": "144180594440632664148340398268483171444"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::is_negative",
    "hash": "1771649126844177035212781694947907527804"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::is_positive",
    "hash": "20291714520843249034959738790086347814"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::isolate_highest_one",
    "hash": "159890932356018260015725423920925785449"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::isolate_lowest_one",
    "hash": "131174882878304761842114729811174541611"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::isqrt",
    "hash": "1516571790613681825717801491501018019425"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::leading_ones",
    "hash": "8130352488150307004446516326307627257"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::leading_zeros",
    "hash": "11124686682658997613862252243056788598"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::max_value",
    "hash": "1158705393415904139810441965615183188480"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::min_value",
    "hash": "112783229475406594516808075292104518842"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::next_multiple_of",
    "hash": "47452634876630327764206850278699878090"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::overflowing_abs",
    "hash": "1187826036753021480015575349671258954129"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::overflowing_add",
    "hash": "48535606942362821516582536467349180696"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::overflowing_add_unsigned",
    "hash": "33861624979765943059809537865915365173"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::overflowing_div",
    "hash": "172101348456277481914769469348813523394"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::overflowing_div_euclid",
    "hash": "20595603881341505131601538687337682895"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::overflowing_mul",
    "hash": "710404338994499777312033584094295149986"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::overflowing_neg",
    "hash": "134451357591086979366902632987987104865"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::overflowing_pow",
    "hash": "62869900360959082901505863835487524591"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::overflowing_rem",
    "hash": "44818959113647106994652686213242590736"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::overflowing_rem_euclid",
    "hash": "515016122690081412114382170187292788061"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::overflowing_shl",
    "hash": "21022395089986023218669265436358195805"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::overflowing_shr",
    "hash": "17425632295375976372747741135495022752"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::overflowing_sub",
    "hash": "162733509482765276346416268077459681761"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::overflowing_sub_unsigned",
    "hash": "932482192227443399712719701259717897429"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::pow",
    "hash": "90889727519472856255309051867010512390"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::rem_euclid",
    "hash": "526261474094035317615359870656903437518"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::reverse_bits",
    "hash": "123517195295240680671053276755043909110"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::rotate_left",
    "hash": "613013101692056792715028111135320545208"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::rotate_right",
    "hash": "727590302945119871517126755643746045465"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::saturating_abs",
    "hash": "142219083735584264123918926784374075938"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::saturating_add",
    "hash": "5096338176414554289015035137809357165"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::saturating_add_unsigned",
    "hash": "1496010464689378779618327469877292476003"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::saturating_div",
    "hash": "137335677207745713329356742187744588849"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::saturating_mul",
    "hash": "609196871266355507015825621562695050640"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::saturating_neg",
    "hash": "53474626997580721014259754817832826664"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::saturating_pow",
    "hash": "195081780017808744317091019145249680209"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::saturating_sub",
    "hash": "350760325221071883512649062371421692516"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::saturating_sub_unsigned",
    "hash": "8653034575243943877718467208749683269"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::signum",
    "hash": "334045582044431637713733387754187537774"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::strict_abs",
    "hash": "1237381133449847667215649326186289985153"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::strict_add",
    "hash": "63514254220203175857764990846291537819"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::strict_add_unsigned",
    "hash": "335912848415901673114624094252825704294"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::strict_div",
    "hash": "624945636917329288617299292131590172643"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::strict_div_euclid",
    "hash": "837379151695279137416901951723679545308"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::strict_mul",
    "hash": "124000268018590517542625509631537135351"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::strict_neg",
    "hash": "46287781721438062965017821415358685154"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::strict_pow",
    "hash": "102708793268617247344650077264383514942"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::strict_rem",
    "hash": "32059507052678545891126391026471513642"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::strict_rem_euclid",
    "hash": "1534266392296599534716482559709978882702"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::strict_shl",
    "hash": "126270103202653241502549866601740958604"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::strict_shr",
    "hash": "1403168368258716639513306458929464886564"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::strict_sub",
    "hash": "110267864650575762713304496186101551617"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::strict_sub_unsigned",
    "hash": "458906362285358011812114335925651452714"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::swap_bytes",
    "hash": "587153256810278688015199643916929202175"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::to_be",
    "hash": "109092412249136133545451258639807246895"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::to_be_bytes",
    "hash": "1487147549828707957717470666477562416667"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::to_le",
    "hash": "1108101720042180095515790785144465248119"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::to_le_bytes",
    "hash": "16143651177747284713328883150272006990"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::to_ne_bytes",
    "hash": "667627291509516620512354816606151198369"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::trailing_ones",
    "hash": "12510795164478929714070126322470108888"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::trailing_zeros",
    "hash": "15667835623513447027306145724575369561"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::unbounded_shl",
    "hash": "9981846791202872743645621598593586538"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::unbounded_shr",
    "hash": "73225617185722143264401156565074864359"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::unchecked_add",
    "hash": "1319508210999238197218422319908607003541"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::unchecked_exact_div",
    "hash": "145333983993902819997043909603558534883"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::unchecked_mul",
    "hash": "1248690344935655043010025128328256294783"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::unchecked_neg",
    "hash": "694745471614521460712268513294316660727"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::unchecked_shl",
    "hash": "17934049552586708597789890557736929283"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::unchecked_shr",
    "hash": "283925864335604590717320931580800442297"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::unchecked_sub",
    "hash": "22375824903176801477984004494338595793"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::unsigned_abs",
    "hash": "260931105735921557815570993587601649617"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::widening_mul",
    "hash": "128338183107990757511803877817611232105"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::wrapping_abs",
    "hash": "72259297586816184083053334878411021168"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::wrapping_add",
    "hash": "1215644363720961695811981426188375315659"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::wrapping_add_unsigned",
    "hash": "119942431722599649714237856858430762084"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::wrapping_div",
    "hash": "563951876419875917310938327460963587830"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::wrapping_div_euclid",
    "hash": "181670932644115464615376178578714091756"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::wrapping_mul",
    "hash": "1093475582351151041215274432841748582719"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::wrapping_neg",
    "hash": "59103651368508832221967225900789354489"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::wrapping_pow",
    "hash": "1097364094076205648514455467742937162833"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::wrapping_rem",
    "hash": "92629664794819107672303653475036388117"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::wrapping_rem_euclid",
    "hash": "156311570136426385327821181809029114973"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::wrapping_shl",
    "hash": "964402880442907171815526082299626298800"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::wrapping_shr",
    "hash": "1358828499096734539213472152118614630334"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::wrapping_sub",
    "hash": "175943594994036713073249267594505722828"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::wrapping_sub_unsigned",
    "hash": "1340740692248408196315777699752104239870"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::abs",
    "hash": "43720025092985586876410453295865287013"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::abs_diff",
    "hash": "114553415482142737645836441826573789483"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::borrowing_sub",
    "hash": "119236387493465558561396175948744157896"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::carrying_add",
    "hash": "60572058098531508977584507018900639899"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::carrying_mul",
    "hash": "383279165321871315214992655514635269669"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::carrying_mul_add",
    "hash": "19813677742029321043976633822741104444"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::cast_unsigned",
    "hash": "137668923736890365532977712031342374364"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::checked_abs",
    "hash": "1459714869902394507111644719847116656046"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::checked_add",
    "hash": "1740079425015601903312466985321929750987"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::checked_add_unsigned",
    "hash": "294674095718260736012371128269379110869"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::checked_div",
    "hash": "8157056132419909772115276211872477077"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::checked_div_euclid",
    "hash": "317492539617497325011052419383248021675"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::checked_exact_div",
    "hash": "25511236348639454404701592013619356216"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::checked_ilog",
    "hash": "112972708959445931057592288673853767265"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::checked_ilog10",
    "hash": "94904596824071079727766020471051715319"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::checked_ilog2",
    "hash": "164332471108043823371067736331845445974"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::checked_isqrt",
    "hash": "5326934988569299435142250004296800490"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::checked_mul",
    "hash": "125291291873764444964120229333857483578"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::checked_neg",
    "hash": "4935797419447898755418396813475903026"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::checked_next_multiple_of",
    "hash": "34866765251354360988772556326413459740"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::checked_pow",
    "hash": "14315604789105617489919197077812624468"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::checked_rem",
    "hash": "1590574758292989977312158520274088824541"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::checked_rem_euclid",
    "hash": "39434316012642967068538869130846652374"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::checked_shl",
    "hash": "1353103855475413493413462747516917553905"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::checked_shr",
    "hash": "971769541383832081314003437806868877463"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::checked_sub",
    "hash": "68572844105651204452269687795991745207"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::checked_sub_unsigned",
    "hash": "177535201965436177233737570706936739383"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::count_ones",
    "hash": "943091592218078374514167152855894936030"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::count_zeros",
    "hash": "137109368254611758872355175595829024867"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::div_ceil",
    "hash": "950375938897158888012531050695772509718"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::div_euclid",
    "hash": "19365716183377894553141414375784477608"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::div_floor",
    "hash": "44437615880316220838712900485012016977"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::exact_div",
    "hash": "699006943272928916915784156087186339782"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::from_be",
    "hash": "262375234674372128718437497248469428233"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::from_be_bytes",
    "hash": "349144967685181401116842569506390176429"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::from_le",
    "hash": "49211567288492749007948005039965079839"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::from_le_bytes",
    "hash": "123677242466551539738770779542749560073"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::from_ne_bytes",
    "hash": "172843578006074789144639387976583928302"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::ilog",
    "hash": "103772820563089266285223022131553343410"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::ilog10",
    "hash": "161544787001597825036144788012504230475"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::ilog2",
    "hash": "143548737473607609505945842826212298395"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::is_negative",
    "hash": "152957573567666139458051071799244237150"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::is_positive",
    "hash": "18035351853128473592205044224627614917"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::isolate_highest_one",
    "hash": "1440087145262212703915784424344023876398"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::isolate_lowest_one",
    "hash": "815320506244787920211119159299179144562"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::isqrt",
    "hash": "174438913034515700639648900180631184800"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::leading_ones",
    "hash": "147762859717144904067115136757801841588"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::leading_zeros",
    "hash": "727829201882069956916714038143291660244"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::max_value",
    "hash": "887165279836095853713691231556278981789"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::min_value",
    "hash": "451623921591399095013500274817036797700"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::next_multiple_of",
    "hash": "1257978125705175200016707568269698624391"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::overflowing_abs",
    "hash": "5936706155002246131628850577810725578"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::overflowing_add",
    "hash": "703202120818594460618365822185447882082"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::overflowing_add_unsigned",
    "hash": "1244993498094824172917545292117003343189"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::overflowing_div",
    "hash": "16835218290147801298561285352761154515"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::overflowing_div_euclid",
    "hash": "489138098650179950611986992142712650104"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::overflowing_mul",
    "hash": "79947330662949570275485140699415279231"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::overflowing_neg",
    "hash": "1646678019918894960417888246261024389208"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::overflowing_pow",
    "hash": "1605080127333123495417206865228723158531"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::overflowing_rem",
    "hash": "52686609002190749555345273963145362773"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::overflowing_rem_euclid",
    "hash": "1032564237654304451816693065724943397001"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::overflowing_shl",
    "hash": "1412089808803516941011383237265173254692"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::overflowing_shr",
    "hash": "103830501702233882574702447741598323048"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::overflowing_sub",
    "hash": "1706655280129181150417389305750894729773"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::overflowing_sub_unsigned",
    "hash": "121861541121507789535550649334735902501"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::pow",
    "hash": "11056137321724236197663434496693355690"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::rem_euclid",
    "hash": "446100682454771125073388380602255135"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::reverse_bits",
    "hash": "4611819767917989401178860060105050958"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::rotate_left",
    "hash": "1538067673555171783710664333430664665713"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::rotate_right",
    "hash": "158971892307308159515540400022607612217"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::saturating_abs",
    "hash": "127482075998344141376733327213262767510"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::saturating_add",
    "hash": "960952814107643048510145849444398356052"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::saturating_add_unsigned",
    "hash": "16680111590699112264317652755617010363"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::saturating_div",
    "hash": "135438793925164768104982143790041770095"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::saturating_mul",
    "hash": "139164846184584164328927532675112846094"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::saturating_neg",
    "hash": "135902787442030076754681466085573156774"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::saturating_pow",
    "hash": "668914885500793897013914570084819612389"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::saturating_sub",
    "hash": "14522276387211240843653654483379215416"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::saturating_sub_unsigned",
    "hash": "62138495221803755038252995424753140693"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::signum",
    "hash": "170369290958536209063184434361551204676"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::strict_abs",
    "hash": "628830764729068791211233068002720321672"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::strict_add",
    "hash": "1302397347618662565415126366092567365187"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::strict_add_unsigned",
    "hash": "90618641017174035610359851405674430219"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::strict_div",
    "hash": "981443971472832933013347531427341845753"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::strict_div_euclid",
    "hash": "176358732653374882692159084542353658985"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::strict_mul",
    "hash": "1345490523403568366910943955260281788643"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::strict_neg",
    "hash": "181843188527874787775526464159201311272"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::strict_pow",
    "hash": "175912369363366929886008316186763874412"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::strict_rem",
    "hash": "41265314302196677112176073921514680999"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::strict_rem_euclid",
    "hash": "868242004200679267314923602744188688596"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::strict_shl",
    "hash": "108039300715043770052972647057260360452"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::strict_shr",
    "hash": "21381809403743544995318152998193323175"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::strict_sub",
    "hash": "183137900869589170775452834187282238069"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::strict_sub_unsigned",
    "hash": "177966579398721526422935474468017556948"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::swap_bytes",
    "hash": "46591533180823097008792716882253526657"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::to_be",
    "hash": "519800263654770782910858005400809643719"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::to_be_bytes",
    "hash": "147039402609880469412628659241455838235"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::to_le",
    "hash": "14999913966622616831959973170888216623"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::to_le_bytes",
    "hash": "172843849021204360014237589179744147780"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::to_ne_bytes",
    "hash": "1579271155972852839916877143620714475379"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::trailing_ones",
    "hash": "2465820542232904079449337067469797714"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::trailing_zeros",
    "hash": "185467491015468338013555251927727064571"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::unbounded_shl",
    "hash": "190396307579032567616854765570747121316"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::unbounded_shr",
    "hash": "956952861854772141717344244445779843327"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::unchecked_add",
    "hash": "12165191845050660228802104289926418901"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::unchecked_exact_div",
    "hash": "973951258447739311018117154518920882469"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::unchecked_mul",
    "hash": "11711063582145346696769479822055966617"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::unchecked_neg",
    "hash": "59131934657424674408403078071835349666"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::unchecked_shl",
    "hash": "28441072939000252416723892312608621992"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::unchecked_shr",
    "hash": "976852947769772538712117654016182966904"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::unchecked_sub",
    "hash": "117683346558010686038346692239332671692"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::unsigned_abs",
    "hash": "1440311084109427911411767598402928151278"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::widening_mul",
    "hash": "558487697370342420213478474852472195158"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::wrapping_abs",
    "hash": "110553296291267690486764538235023897629"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::wrapping_add",
    "hash": "43849882046882798056164991133482621166"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::wrapping_add_unsigned",
    "hash": "1381294884563449983416329865668761587916"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::wrapping_div",
    "hash": "634458742028398831710245733478212345881"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::wrapping_div_euclid",
    "hash": "74665673367388442815355434941075217257"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::wrapping_mul",
    "hash": "156928473253187586095854346312947879981"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::wrapping_neg",
    "hash": "1095980910905451195915776472035072742717"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::wrapping_pow",
    "hash": "494356424204470875514908463579730425373"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::wrapping_rem",
    "hash": "69543985747247374018338624390294903842"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::wrapping_rem_euclid",
    "hash": "529998221461430501410719005701657217736"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::wrapping_shl",
    "hash": "1445468396967228361217778131603292846958"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::wrapping_shr",
    "hash": "175894220281018921916810923325515637458"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::wrapping_sub",
    "hash": "462846610869204213514639900340099405177"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::wrapping_sub_unsigned",
    "hash": "140385889241359434287293995633398078617"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::abs",
    "hash": "1092668243166745419616106079118851153722"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::abs_diff",
    "hash": "978955111923657289613211405508010237807"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::borrowing_sub",
    "hash": "159376337337319873585830678385587176003"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::carrying_add",
    "hash": "762373411842138491618239498656813278222"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::carrying_mul",
    "hash": "818101256641884949416881552356704159556"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::carrying_mul_add",
    "hash": "94461666830682378622547204442223338407"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::cast_unsigned",
    "hash": "48832799337634659105957413441904749758"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::checked_abs",
    "hash": "17093516308075305482757929860436602101"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::checked_add",
    "hash": "82612020649132484472882055874130973257"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::checked_add_unsigned",
    "hash": "114380975080127543503307683972251129819"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::checked_div",
    "hash": "8060069878062170744411396278027391815"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::checked_div_euclid",
    "hash": "134419957403995748024258203734814030036"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::checked_exact_div",
    "hash": "66096599768042947396507287242648177292"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::checked_ilog",
    "hash": "84671871454156243806101913803062694728"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::checked_ilog10",
    "hash": "867637843596470607113048009065565674720"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::checked_ilog2",
    "hash": "1460113618306361298417535176097529584972"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::checked_isqrt",
    "hash": "39207479037605291111202166614939502958"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::checked_mul",
    "hash": "982130948041778463813827878771661307324"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::checked_neg",
    "hash": "131909041458574601499607584879595830761"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::checked_next_multiple_of",
    "hash": "1002609887889743696816642937203944157956"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::checked_pow",
    "hash": "1085292773628486788015796193888285255373"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::checked_rem",
    "hash": "402876319317964417910218053142414622109"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::checked_rem_euclid",
    "hash": "563519321299705210917978211319519204620"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::checked_shl",
    "hash": "104055351241383960306765214725207382081"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::checked_shr",
    "hash": "1310660369330755198811386080685239085060"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::checked_sub",
    "hash": "74030345580981787474798901414694314637"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::checked_sub_unsigned",
    "hash": "1802103899697126005813488325385234233566"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::count_ones",
    "hash": "742344857890954248311252290709681946984"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::count_zeros",
    "hash": "133591832740946420206734472535154861312"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::div_ceil",
    "hash": "111748085815718777394420267612020844333"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::div_euclid",
    "hash": "56162186136983454136926490276308129018"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::div_floor",
    "hash": "90053347975438195447730193075032713598"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::exact_div",
    "hash": "162722069624427799512619794645893743301"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::from_be",
    "hash": "47247502629409899582834751400280607382"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::from_be_bytes",
    "hash": "267215163936786885816764113567216126302"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::from_le",
    "hash": "25106343237823504807715696978389633099"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::from_le_bytes",
    "hash": "91389583692685680407934516949462459692"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::from_ne_bytes",
    "hash": "12406218518279459798789974058241360776"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::ilog",
    "hash": "657371391443476321312059357413153245800"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::ilog10",
    "hash": "13321997577678197502447150740231114439"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::ilog2",
    "hash": "198456378224594898415242440092690717411"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::is_negative",
    "hash": "6464788442067297999197815002397274632"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::is_positive",
    "hash": "152749061912123041296253319947732062688"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::isolate_highest_one",
    "hash": "154543895963720855034733094554864560420"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::isolate_lowest_one",
    "hash": "55169421752097061037231277369774378784"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::isqrt",
    "hash": "801338350168622607716422170796317068677"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::leading_ones",
    "hash": "499726661578381370916526258741907653421"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::leading_zeros",
    "hash": "1266245121787467304515941167395956354817"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::max_value",
    "hash": "1378902517039201163414291966510700409957"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::min_value",
    "hash": "363350519494953098415412825551711424371"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::next_multiple_of",
    "hash": "128098006496493707288688400864951537578"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::overflowing_abs",
    "hash": "97126910442164009611830239165254890540"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::overflowing_add",
    "hash": "65121803340507881093385760719773185641"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::overflowing_add_unsigned",
    "hash": "83788953935456701268087252282230036162"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::overflowing_div",
    "hash": "15750687196587606329502631408716348750"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::overflowing_div_euclid",
    "hash": "18199968224267739756476811797781300389"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::overflowing_mul",
    "hash": "56747827454301127204091083070222775737"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::overflowing_neg",
    "hash": "937987850261196858813780967219514629552"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::overflowing_pow",
    "hash": "1605836479434674982016125962668218273415"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::overflowing_rem",
    "hash": "115662440318058746518948817985229079647"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::overflowing_rem_euclid",
    "hash": "48152999489022416434796657219017593253"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::overflowing_shl",
    "hash": "13585404411812594289530364568167772211"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::overflowing_shr",
    "hash": "154823315370781493471633094795962329737"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::overflowing_sub",
    "hash": "7964433875645543117286875942214668146"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::overflowing_sub_unsigned",
    "hash": "129537199234544860914498974266321415713"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::pow",
    "hash": "15073194935348457722533110648316258957"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::rem_euclid",
    "hash": "3717599628361847369981878220896902635"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::reverse_bits",
    "hash": "1211563333758014622112855116567848682025"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::rotate_left",
    "hash": "1487181869181249622010773434858123073658"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::rotate_right",
    "hash": "80147111609841117011789457965806916110"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::saturating_abs",
    "hash": "538207257946208531110406846704906279938"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::saturating_add",
    "hash": "14642113934079533694799693796785993165"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::saturating_add_unsigned",
    "hash": "1779713186388638534410585363813543500916"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::saturating_div",
    "hash": "4708279776010808199675220370707113559"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::saturating_mul",
    "hash": "153217373017092416612557004729761350243"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::saturating_neg",
    "hash": "103393896533179199987475618103705653606"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::saturating_pow",
    "hash": "23971378493719665132259451595264965289"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::saturating_sub",
    "hash": "89903796125535350209301858122169167269"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::saturating_sub_unsigned",
    "hash": "34043706311971997091164231816124182879"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::signum",
    "hash": "72128684659017998472861925885218669000"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::strict_abs",
    "hash": "12167687015573899623661060243366705798"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::strict_add",
    "hash": "69726578775198187477022300499350736203"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::strict_add_unsigned",
    "hash": "107324395205427876529787776125533289048"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::strict_div",
    "hash": "1615217026044734372911645005453440118282"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::strict_div_euclid",
    "hash": "94899392973818881575464857216567419693"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::strict_mul",
    "hash": "107215358021180773407773831436441475399"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::strict_neg",
    "hash": "76047954466946392035977387122354962344"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::strict_pow",
    "hash": "168739723175654587038544329238707909218"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::strict_rem",
    "hash": "1513384995426890810514980571958664114572"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::strict_rem_euclid",
    "hash": "153187407517430503011707265114684229651"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::strict_shl",
    "hash": "1506617274212411466213158151132232361377"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::strict_shr",
    "hash": "105871712867629316683662556259836121254"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::strict_sub",
    "hash": "111948391282190002348367976614660167000"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::strict_sub_unsigned",
    "hash": "166183908225818729464569721508846607770"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::swap_bytes",
    "hash": "1768868296499910612413533373127877185047"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::to_be",
    "hash": "39128507132051727861873424578623048831"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::to_be_bytes",
    "hash": "347371647265685648410835785816878960500"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::to_le",
    "hash": "1372839164268040070414691141395070802237"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::to_le_bytes",
    "hash": "112841018842584636413558430097928582431"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::to_ne_bytes",
    "hash": "1562789105274517621617323083038118980583"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::trailing_ones",
    "hash": "5333734545816968324614562004193169961"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::trailing_zeros",
    "hash": "95350493752757310623546003802629312398"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::unbounded_shl",
    "hash": "1783861750243142044110845025770239226579"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::unbounded_shr",
    "hash": "29140109879414384828909637314836070611"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::unchecked_add",
    "hash": "98779123984618954316958992385173948741"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::unchecked_exact_div",
    "hash": "112695115535066439894667228860473255506"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::unchecked_mul",
    "hash": "107179627443143306065869415306322536946"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::unchecked_neg",
    "hash": "1385839509893933484910595289449528780444"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::unchecked_shl",
    "hash": "15562529334155687200755689244406169063"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::unchecked_shr",
    "hash": "764980457477884178112736748316036620814"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::unchecked_sub",
    "hash": "463251263343030322811251261835365764904"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::unsigned_abs",
    "hash": "969578129639084074916186974041562670635"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::widening_mul",
    "hash": "349585170069664795912153277877985914181"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::wrapping_abs",
    "hash": "699790101660378562614747084963340398552"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::wrapping_add",
    "hash": "384635093902161603912295695974608973992"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::wrapping_add_unsigned",
    "hash": "45310379445479945587983858409655628556"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::wrapping_div",
    "hash": "144666468259498663744136221899675512826"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::wrapping_div_euclid",
    "hash": "1331982162129440582214475282950929633659"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::wrapping_mul",
    "hash": "20595283505703306451136956102233327267"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::wrapping_neg",
    "hash": "168736245351591984241880327086012170070"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::wrapping_pow",
    "hash": "1699068582115687116512786362786707263180"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::wrapping_rem",
    "hash": "89169852942498688815338813186327878151"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::wrapping_rem_euclid",
    "hash": "44895569350325894101830813989098055466"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::wrapping_shl",
    "hash": "20120231614481431052023630782867278503"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::wrapping_shr",
    "hash": "172200311238094968835420190019924088620"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::wrapping_sub",
    "hash": "9511991362549564145871105458629169362"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::wrapping_sub_unsigned",
    "hash": "482798131757338989412716503607786943910"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::abs",
    "hash": "81433594433811856402159232587696453563"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::abs_diff",
    "hash": "1269497925693955440613731587262553677720"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::borrowing_sub",
    "hash": "118841702771916741244480648204991139191"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::carrying_add",
    "hash": "143283153061397216016095213082376662022"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::carrying_mul",
    "hash": "138388128605034999467841416195553300925"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::carrying_mul_add",
    "hash": "56867057381192238361920614128394963046"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::cast_unsigned",
    "hash": "336774725528215430512647507492855944298"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::checked_abs",
    "hash": "542029085971169182913103895983799053851"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::checked_add",
    "hash": "118654546951841301962568465573040146684"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::checked_add_unsigned",
    "hash": "145853521004541825559924118709815119848"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::checked_div",
    "hash": "170069147612406270224180007730741089071"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::checked_div_euclid",
    "hash": "1680809513221775961115043147592642270462"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::checked_exact_div",
    "hash": "772791471579700388213612031411464035284"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::checked_ilog",
    "hash": "1352614899589244220416511660881806036763"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::checked_ilog10",
    "hash": "148431496481150421767556297317567289256"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::checked_ilog2",
    "hash": "152528911687242898277720684590045802468"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::checked_isqrt",
    "hash": "1402906194168030433318304064762385915423"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::checked_mul",
    "hash": "1223690600558026232310544296972688154694"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::checked_neg",
    "hash": "93988758899682101494961387784474184481"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::checked_next_multiple_of",
    "hash": "174239911590414561592807114169813446183"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::checked_pow",
    "hash": "328745623271194990417881154065734290881"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::checked_rem",
    "hash": "78446579030675847958117351024685595288"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::checked_rem_euclid",
    "hash": "44055757011588315123125355291546645142"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::checked_shl",
    "hash": "1514558159255745472612561483915861452045"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::checked_shr",
    "hash": "67911261753836558866294497473164847251"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::checked_sub",
    "hash": "386339465232346155714635407152975870620"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::checked_sub_unsigned",
    "hash": "246548588647919702111423872013729484601"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::count_ones",
    "hash": "169679974239488024605024467316445583997"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::count_zeros",
    "hash": "1739408286397631462981655969766705289"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::div_ceil",
    "hash": "599796193598949033416116415179304625208"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::div_euclid",
    "hash": "179675128519588381592697436971613126868"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::div_floor",
    "hash": "483028255984660713914376312845833190952"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::exact_div",
    "hash": "51926609078679231953893764513636222194"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::from_be",
    "hash": "647073982988664209017757436846374909093"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::from_be_bytes",
    "hash": "37973630346173988682584691859509227224"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::from_le",
    "hash": "140550104037714175874884045990744031512"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::from_le_bytes",
    "hash": "925914048206568948316388520319033485223"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::from_ne_bytes",
    "hash": "129668895114390962415336511655774153749"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::ilog",
    "hash": "1359242347402480802316043598872634060582"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::ilog10",
    "hash": "1183645778829324013717030119242382603044"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::ilog2",
    "hash": "93331655518690547504375390104815890365"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::is_negative",
    "hash": "167480137593101728096343184744273276997"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::is_positive",
    "hash": "749335779861557289813706302134595118790"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::isolate_highest_one",
    "hash": "61751103140228685110626661568513558361"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::isolate_lowest_one",
    "hash": "67241641590539762801835157595196298617"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::isqrt",
    "hash": "650900140990515085710579510065955525007"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::leading_ones",
    "hash": "147205081519224998212479963738092715411"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::leading_zeros",
    "hash": "136368072458154297824162363915765747367"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::max_value",
    "hash": "1351386418308792398310879188196752827683"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::min_value",
    "hash": "1734981496856990529912310290664176640286"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::next_multiple_of",
    "hash": "66602290343292686986254907049217500486"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::overflowing_abs",
    "hash": "130980559101616935166850304533274441339"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::overflowing_add",
    "hash": "1427614455102215041813886230656821102444"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::overflowing_add_unsigned",
    "hash": "1558041177245461849113637992523073009272"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::overflowing_div",
    "hash": "42378033663974282137169723084572372188"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::overflowing_div_euclid",
    "hash": "1319102442353403011813020682465805745184"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::overflowing_mul",
    "hash": "1576901648219363124812632477465621858038"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::overflowing_neg",
    "hash": "178593630973334667618300185345433013678"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::overflowing_pow",
    "hash": "396506746860145950910450646409845266205"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::overflowing_rem",
    "hash": "110298124805119800289481376330002340947"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::overflowing_rem_euclid",
    "hash": "10416092167899374797368679810544946931"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::overflowing_shl",
    "hash": "648663701214558452313288547760041965522"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::overflowing_shr",
    "hash": "1554936176057029559715155955125203870369"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::overflowing_sub",
    "hash": "1841172937769020224312541743862883925977"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::overflowing_sub_unsigned",
    "hash": "155975544788910857222566832365556422521"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::pow",
    "hash": "98938124685537412583572076763586886616"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::rem_euclid",
    "hash": "20912493984117611291770118155439821398"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::reverse_bits",
    "hash": "56829114243893533822345954529702959874"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::rotate_left",
    "hash": "42439424615574205846302333793797021483"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::rotate_right",
    "hash": "132055556686158915848186661789120259041"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::saturating_abs",
    "hash": "926058763041667600814449634028725435155"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::saturating_add",
    "hash": "459017526752416941513006593221498614550"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::saturating_add_unsigned",
    "hash": "1820222918783104503513498138178603512592"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::saturating_div",
    "hash": "100147637956682490504359980078780180805"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::saturating_mul",
    "hash": "43661591388374147117174929870337396317"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::saturating_neg",
    "hash": "1671529736263822181815056076021762122210"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::saturating_pow",
    "hash": "152519824630119514922094277449010922544"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::saturating_sub",
    "hash": "126193231782104548563121889234564148949"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::saturating_sub_unsigned",
    "hash": "121626899612718751816550658195909028155"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::signum",
    "hash": "286479609220973701579527710498780558"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::strict_abs",
    "hash": "140213638233120993585665782643682704467"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::strict_add",
    "hash": "7285267272634959933627332203104315165"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::strict_add_unsigned",
    "hash": "1381848106994832116416346195785833088920"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::strict_div",
    "hash": "62307760462294569861309319086817944031"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::strict_div_euclid",
    "hash": "281523783391094023713571412423532543791"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::strict_mul",
    "hash": "131708294534002972745224219560894409979"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::strict_neg",
    "hash": "131834193980907652916825232787742913872"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::strict_pow",
    "hash": "709564199649479573810668522619674750443"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::strict_rem",
    "hash": "88983394095743232081762057523780065710"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::strict_rem_euclid",
    "hash": "53345131586018886734895648543495816498"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::strict_shl",
    "hash": "180520703548117491293610019808608186108"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::strict_shr",
    "hash": "1520315515339444612210824210417081322434"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::strict_sub",
    "hash": "156000170747242076259419904032023151087"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::strict_sub_unsigned",
    "hash": "75167437397846974817456201875732378473"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::swap_bytes",
    "hash": "138623643838112304198243999645805902410"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::to_be",
    "hash": "452658669188199202614898420966671018231"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::to_be_bytes",
    "hash": "1642565052090806165410689515187911845126"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::to_le",
    "hash": "107069531238309742253909436584750410960"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::to_le_bytes",
    "hash": "60462496109947610784845340136062899468"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::to_ne_bytes",
    "hash": "1223482115386271573915903080034416077768"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::trailing_ones",
    "hash": "1153161483639823292714186501652489195003"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::trailing_zeros",
    "hash": "1060115032103585476816360504772747740062"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::unbounded_shl",
    "hash": "1161970458817472723415504802279056884033"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::unbounded_shr",
    "hash": "126018619110304262526782404517088954650"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::unchecked_add",
    "hash": "10485191624609874171439456184078360381"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::unchecked_exact_div",
    "hash": "1202146321215216418817965810447434502906"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::unchecked_mul",
    "hash": "43657951067743356708157440318671096858"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::unchecked_neg",
    "hash": "163478985523034252593288676465028206919"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::unchecked_shl",
    "hash": "1403926846093049920310659874838631850386"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::unchecked_shr",
    "hash": "125782512669445794522121732145927710817"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::unchecked_sub",
    "hash": "129119996288620174511434493107706844206"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::unsigned_abs",
    "hash": "6401744245509042316760081178710077835"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::widening_mul",
    "hash": "1583282685404653933213975720549433693415"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::wrapping_abs",
    "hash": "864572265501540368617859002165622974676"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::wrapping_add",
    "hash": "121947176722351055878469511384091396653"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::wrapping_add_unsigned",
    "hash": "1085592181143067598014503722524755972932"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::wrapping_div",
    "hash": "802627960199068967618102682818332577745"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::wrapping_div_euclid",
    "hash": "1384829680722283517337086868996566699"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::wrapping_mul",
    "hash": "1752326920026980227015973335803272907189"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::wrapping_neg",
    "hash": "1405925331488205285910714401017698497803"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::wrapping_pow",
    "hash": "115397731267472919516556137639655595289"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::wrapping_rem",
    "hash": "152490464469749510473357995354433468871"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::wrapping_rem_euclid",
    "hash": "163550757824870393754114005545939801432"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::wrapping_shl",
    "hash": "1601801865301485007616201849716297925536"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::wrapping_shr",
    "hash": "1174435301218532129915840233406475021556"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::wrapping_sub",
    "hash": "9917577376157082529417021789176567715"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::wrapping_sub_unsigned",
    "hash": "23027864482891441126002119137700254372"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::abs",
    "hash": "81189359812261379328310094335097475243"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::abs_diff",
    "hash": "212352857753965560811657926635981758380"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::borrowing_sub",
    "hash": "34145537338038827375808362488178112441"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::carrying_add",
    "hash": "16191464895649045907210673116999344804"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::carrying_mul",
    "hash": "529239691022111701513097155453133733625"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::carrying_mul_add",
    "hash": "431011933973943704410340701521555670654"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::cast_unsigned",
    "hash": "787969059696116845615186057896005875084"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::checked_abs",
    "hash": "419087736451679869713716569975490004526"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::checked_add",
    "hash": "1634458054474498049714916776785504670768"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::checked_add_unsigned",
    "hash": "4474657906084557880828921830151417722"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::checked_div",
    "hash": "138530961304261695352256046163877721399"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::checked_div_euclid",
    "hash": "108897566936718176413482146108212601937"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::checked_exact_div",
    "hash": "1385619908068958018914527918668322473040"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::checked_ilog",
    "hash": "1266693546298539924012405173601238962543"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::checked_ilog10",
    "hash": "174905229027127068016840580527667014190"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::checked_ilog2",
    "hash": "104063048231785708067315004098539224549"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::checked_isqrt",
    "hash": "1301803825940014075113502407468040520212"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::checked_mul",
    "hash": "23965720822326553157987339842804223213"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::checked_neg",
    "hash": "143166599413941824843471168071053384348"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::checked_next_multiple_of",
    "hash": "1044349888615754122116304754712726826675"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::checked_pow",
    "hash": "139319050410620248844686228486220426657"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::checked_rem",
    "hash": "36444936389647437412938308862803393121"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::checked_rem_euclid",
    "hash": "7356788074318166322682848349067256668"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::checked_shl",
    "hash": "1803391637831217890613591183436332213760"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::checked_shr",
    "hash": "57312157679530279572017703033485963437"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::checked_sub",
    "hash": "1541343937020378735915680601888332243641"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::checked_sub_unsigned",
    "hash": "691599488228806944915555421804815951859"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::count_ones",
    "hash": "95331948113090877077130673581872174261"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::count_zeros",
    "hash": "108829690330232160733049685686628642104"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::div_ceil",
    "hash": "87982825102907964963668661537814866698"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::div_euclid",
    "hash": "14337620938096298444595448667912072845"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::div_floor",
    "hash": "8645480680333761362748096135426237426"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::exact_div",
    "hash": "1559780939075831950915108143477690870896"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::from_be",
    "hash": "144910718044174126278016198471962641611"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::from_be_bytes",
    "hash": "6044740189874372457659795596517473450"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::from_le",
    "hash": "92067604187282981889930022495109270570"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::from_le_bytes",
    "hash": "138891844765931984778115631341795573504"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::from_ne_bytes",
    "hash": "77780462248249808985626411098119180065"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::ilog",
    "hash": "13633362635351759763017335287063721080"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::ilog10",
    "hash": "51726212288982545018612798728574869993"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::ilog2",
    "hash": "86852825279964505547307192870032055185"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::is_negative",
    "hash": "126882193367452869053691657389410134460"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::is_positive",
    "hash": "1210809397497625438711490010334426716980"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::isolate_highest_one",
    "hash": "177594767127742617603529400496530382331"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::isolate_lowest_one",
    "hash": "967089119528684385311669149252471318520"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::isqrt",
    "hash": "157035570677375864125863601915856455772"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::leading_ones",
    "hash": "1090896520147949235618380500344520521781"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::leading_zeros",
    "hash": "1492224908071843716510204841466679461426"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::max_value",
    "hash": "17139637654167326938207738676722984799"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::min_value",
    "hash": "37885497720086847111759286784822543704"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::next_multiple_of",
    "hash": "861978548527344506015806120932577900717"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::overflowing_abs",
    "hash": "113322302050248369201210795560905837204"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::overflowing_add",
    "hash": "7704870870842731634076831769654551052"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::overflowing_add_unsigned",
    "hash": "1163156522231854235315384534668910774277"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::overflowing_div",
    "hash": "26636432675441789956045902148686359798"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::overflowing_div_euclid",
    "hash": "92701043966791214946924792148443449278"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::overflowing_mul",
    "hash": "100741573661083166254739259634530598920"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::overflowing_neg",
    "hash": "153380105951445071398010207846457168641"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::overflowing_pow",
    "hash": "544854974986079374016614092896695921253"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::overflowing_rem",
    "hash": "1601131823279212822517605421299849062446"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::overflowing_rem_euclid",
    "hash": "1360135673453376284018157674372221605508"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::overflowing_shl",
    "hash": "114780694641508248132109734868621589672"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::overflowing_shr",
    "hash": "172988682844677654808638010541705126824"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::overflowing_sub",
    "hash": "77609109575446684707388883017617872820"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::overflowing_sub_unsigned",
    "hash": "55899241080791935262913450891969501854"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::pow",
    "hash": "749511148758628054910799092162650297661"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::rem_euclid",
    "hash": "35594292997667379262894125018817256739"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::reverse_bits",
    "hash": "57088521459201500165979543581271843413"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::rotate_left",
    "hash": "80286655187473450624832783435643648534"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::rotate_right",
    "hash": "117965029541528534162656545497370835393"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::saturating_abs",
    "hash": "343155135182113703211588729011620264034"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::saturating_add",
    "hash": "880354141690654604118078559880171199932"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::saturating_add_unsigned",
    "hash": "358771196529908332315986736115663664086"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::saturating_div",
    "hash": "1113692939673501585716393113928733766110"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::saturating_mul",
    "hash": "311992605174799715410978496965228629567"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::saturating_neg",
    "hash": "296918036812376561713237032913401619366"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::saturating_pow",
    "hash": "939538610104309535615195230339358518402"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::saturating_sub",
    "hash": "166078868569182223345595586232766402681"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::saturating_sub_unsigned",
    "hash": "98021294133416944626769027595826105188"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::signum",
    "hash": "59435449606628717867564924758926822879"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::strict_abs",
    "hash": "1497450826001564832118082626616689773504"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::strict_add",
    "hash": "22843221311488836875329354547872860587"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::strict_add_unsigned",
    "hash": "84403532472551010839156566120949157873"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::strict_div",
    "hash": "1582326072604537996810724707815055742062"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::strict_div_euclid",
    "hash": "611170156786550561610644172767319998876"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::strict_mul",
    "hash": "487220107251299798413969273383060734256"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::strict_neg",
    "hash": "86487019719375024749796963015630906921"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::strict_pow",
    "hash": "409713440368748729514304177570307221189"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::strict_rem",
    "hash": "1741659515633125939712562363891645594578"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::strict_rem_euclid",
    "hash": "16938566188372536602914411065613178366"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::strict_shl",
    "hash": "66393248631622356348905455157905137926"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::strict_shr",
    "hash": "1380890408481333814517298708013067618718"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::strict_sub",
    "hash": "922326837633531108910706155091474149985"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::strict_sub_unsigned",
    "hash": "720045373814956491665361621911365162"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::swap_bytes",
    "hash": "46176804234212869061685804999692540093"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::to_be",
    "hash": "1023466217806067011317631446661318018371"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::to_be_bytes",
    "hash": "43427251603896974192195286794427594153"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::to_le",
    "hash": "180521932118559323617988673229915007367"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::to_le_bytes",
    "hash": "1583770858065257916117342687202414498897"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::to_ne_bytes",
    "hash": "60344567279599897993920926419287479253"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::trailing_ones",
    "hash": "4797925925682370433734231365597711273"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::trailing_zeros",
    "hash": "184195256849918156612525089995144857481"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::unbounded_shl",
    "hash": "166468281817054106038651288697159043164"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::unbounded_shr",
    "hash": "1459558829024071265418359345164433713957"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::unchecked_add",
    "hash": "162791022655271513118000318830965459603"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::unchecked_exact_div",
    "hash": "17866707277457622835202184297607094824"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::unchecked_mul",
    "hash": "71067408389423145126327542501434839530"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::unchecked_neg",
    "hash": "34406283556650756559915574730829163350"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::unchecked_shl",
    "hash": "260327225473832095413032931990982274760"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::unchecked_shr",
    "hash": "40215780056754948323807314450355980775"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::unchecked_sub",
    "hash": "116677102289694588029065933607615782045"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::unsigned_abs",
    "hash": "428052739389227612411384710759624823601"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::widening_mul",
    "hash": "1195836047336496897811117488879495504018"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::wrapping_abs",
    "hash": "418519642158046935110056216247298853747"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::wrapping_add",
    "hash": "21173995163059336492894402386398685098"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::wrapping_add_unsigned",
    "hash": "14035027841724911314341454796277577071"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::wrapping_div",
    "hash": "10669111181965855732952931252749625187"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::wrapping_div_euclid",
    "hash": "933936350504900539616690780383833193509"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::wrapping_mul",
    "hash": "7147186163794982532412858384551660893"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::wrapping_neg",
    "hash": "1258220971271417206117729622567699832507"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::wrapping_pow",
    "hash": "127160712809708941111080765859223865106"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::wrapping_rem",
    "hash": "1430038935578355710215366208073461459411"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::wrapping_rem_euclid",
    "hash": "140617388837633108011315257129134757569"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::wrapping_shl",
    "hash": "498167902530872928411493767255675605074"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::wrapping_shr",
    "hash": "136668924175597196982627181397401474241"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::wrapping_sub",
    "hash": "107896500699219007011661308826584571988"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::wrapping_sub_unsigned",
    "hash": "899662876390963454014133539598389475684"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_sqrt.rs",
    "func": "num::int_sqrt::i128",
    "hash": "54412466803085806454334948911237892680"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_sqrt.rs",
    "func": "num::int_sqrt::i16",
    "hash": "142233249150105640046880744201918458781"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_sqrt.rs",
    "func": "num::int_sqrt::i32",
    "hash": "1061825554720280806915503998960380221692"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_sqrt.rs",
    "func": "num::int_sqrt::i64",
    "hash": "1509527570162456628810299938764566397316"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_sqrt.rs",
    "func": "num::int_sqrt::i8",
    "hash": "5135967430199160468920261282515254851"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_sqrt.rs",
    "func": "num::int_sqrt::panic_for_negative_argument",
    "hash": "447633221541583627413452389044665805897"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_sqrt.rs",
    "func": "num::int_sqrt::u128",
    "hash": "5486363146603561843363899580248755089"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_sqrt.rs",
    "func": "num::int_sqrt::u128_stages",
    "hash": "106932027745800194832784406002976468775"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_sqrt.rs",
    "func": "num::int_sqrt::u16",
    "hash": "990368330621951665112618070167350350801"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_sqrt.rs",
    "func": "num::int_sqrt::u16_stages",
    "hash": "37575315270159499442676200483244321373"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_sqrt.rs",
    "func": "num::int_sqrt::u32",
    "hash": "6751449959499938934680151242898131659"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_sqrt.rs",
    "func": "num::int_sqrt::u32_stages",
    "hash": "7667317671574548320861470170750647575"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_sqrt.rs",
    "func": "num::int_sqrt::u64",
    "hash": "16218661842675806454884449801064122716"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_sqrt.rs",
    "func": "num::int_sqrt::u64_stages",
    "hash": "65358307433341362839857910549970330223"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_sqrt.rs",
    "func": "num::int_sqrt::u8",
    "hash": "60960868849511503248088905502240646288"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "<num::FpCategory as clone::Clone>::clone",
    "hash": "38138070809326056813274648859849705420"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "<num::FpCategory as cmp::Eq>::assert_receiver_is_total_eq",
    "hash": "35517804858554754765753608331752288609"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "<num::FpCategory as cmp::PartialEq>::eq",
    "hash": "662275074378696123273697715385597969"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::<impl i128>::midpoint",
    "hash": "118725858493553258061778013582842899580"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::<impl i16>::midpoint",
    "hash": "179827104322190559006006729748298921968"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::<impl i32>::midpoint",
    "hash": "112885184505775227411344202282795087042"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::<impl i64>::midpoint",
    "hash": "1236911846164131033411242740521533295923"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::<impl i8>::midpoint",
    "hash": "1806314289338502242812778631436190394808"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::<impl isize>::midpoint",
    "hash": "76650669777706349847438362145325134236"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::<impl u128>::midpoint",
    "hash": "1339968946229866764617084945979056956395"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::<impl u16>::is_utf16_surrogate",
    "hash": "79790052907687203808123823924777316396"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::<impl u16>::midpoint",
    "hash": "70333124555803083698724319237077865990"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::<impl u32>::midpoint",
    "hash": "1442757669858944772313258849104098439308"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::<impl u64>::midpoint",
    "hash": "1175193678847869318211903326338808818800"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::<impl u8>::as_ascii",
    "hash": "157342375234659354051153884526544597341"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::<impl u8>::as_ascii_unchecked",
    "hash": "115229797083273352422457158100491949219"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::<impl u8>::ascii_change_case_unchecked",
    "hash": "163595600001382853907822330752148741341"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::<impl u8>::eq_ignore_ascii_case",
    "hash": "988028711998370698513075918543258556788"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::<impl u8>::escape_ascii",
    "hash": "896062857449265910110082576405472516888"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::<impl u8>::is_ascii",
    "hash": "758800371710587469314073968176229651883"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::<impl u8>::is_ascii_alphabetic",
    "hash": "5138601813322156891155001322872760576"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::<impl u8>::is_ascii_alphanumeric",
    "hash": "44344231375078259393652290267886090752"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::<impl u8>::is_ascii_control",
    "hash": "85514849358641988452354051984579566974"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::<impl u8>::is_ascii_digit",
    "hash": "89633452296352964709599256705517159051"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::<impl u8>::is_ascii_graphic",
    "hash": "141615893453559366675599442700992029800"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::<impl u8>::is_ascii_hexdigit",
    "hash": "127639827262063024413401410675802177964"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::<impl u8>::is_ascii_lowercase",
    "hash": "1808592158708615847911831363091156489391"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::<impl u8>::is_ascii_octdigit",
    "hash": "67513390696532489506923807546048943469"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::<impl u8>::is_ascii_punctuation",
    "hash": "62863102658561508765692073348166081495"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::<impl u8>::is_ascii_uppercase",
    "hash": "69417484249274791359857467967200926715"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::<impl u8>::is_ascii_whitespace",
    "hash": "840557237266216613515959608352403941460"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::<impl u8>::is_utf8_char_boundary",
    "hash": "170905408305733982667355251913602478519"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::<impl u8>::make_ascii_lowercase",
    "hash": "115014031790079929662428883345860873260"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::<impl u8>::make_ascii_uppercase",
    "hash": "676196596857159285115644035301973269414"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::<impl u8>::midpoint",
    "hash": "1411783917792700563013159976723630335741"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::<impl u8>::to_ascii_lowercase",
    "hash": "1766778296466189972714376152058119054158"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::<impl u8>::to_ascii_uppercase",
    "hash": "125240937021480279979048134700113690516"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::<impl usize>::midpoint",
    "hash": "182971069895310127889608793246173155965"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::<impl usize>::repeat_u16",
    "hash": "49154833602148188573587472340427332509"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::<impl usize>::repeat_u8",
    "hash": "1616559401006560778014910978455592941385"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::from_ascii_radix_panic",
    "hash": "84362434770786829908051120635907285180"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::verify::carrying_mul_u16_full_range",
    "hash": "12030230529498796836987846966310195742",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::verify::carrying_mul_u32_large",
    "hash": "718056727929463565010736721694665119739",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::verify::carrying_mul_u32_mid_edge",
    "hash": "324902519475090160512834822424234156005",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::verify::carrying_mul_u32_small",
    "hash": "14127748670335109114469912740248529277",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::verify::carrying_mul_u64_large",
    "hash": "523474399613035690913915577681585299772",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::verify::carrying_mul_u64_mid_edge",
    "hash": "10367197388751987055314505444953502347",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::verify::carrying_mul_u64_small",
    "hash": "1195852346573052973015540749732020393893",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::verify::carrying_mul_u8_full_range",
    "hash": "835689271639800610813796645695693371656",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::verify::checked_f128_to_int_unchecked_i128",
    "hash": "1022093637148407057710032415730021215543",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::verify::checked_f128_to_int_unchecked_i16",
    "hash": "10968520718647083662157399403033721455",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::verify::checked_f128_to_int_unchecked_i32",
    "hash": "1426909853073605403215700892152726323632",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::verify::checked_f128_to_int_unchecked_i64",
    "hash": "1424867438184814110114927082939713557226",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::verify::checked_f128_to_int_unchecked_i8",
    "hash": "1575858781462806420810755132879164153831",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::verify::checked_f128_to_int_unchecked_isize",
    "hash": "349638338645130710514007678210357432587",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::verify::checked_f128_to_int_unchecked_u128",
    "hash": "1050567472053985837911254509161640480801",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::verify::checked_f128_to_int_unchecked_u16",
    "hash": "70029394646699288802381682582993317123",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::verify::checked_f128_to_int_unchecked_u32",
    "hash": "1584008062941017573417771102071044980437",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::verify::checked_f128_to_int_unchecked_u64",
    "hash": "65152209366154480049172141318932496341",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::verify::checked_f128_to_int_unchecked_u8",
    "hash": "961245483902458958012731098937624502154",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::verify::checked_f128_to_int_unchecked_usize",
    "hash": "118529424142691902508599203764377409135",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::verify::checked_f16_to_int_unchecked_i128",
    "hash": "149194171000975336205450685393636205963",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::verify::checked_f16_to_int_unchecked_i16",
    "hash": "1474516396576099818917170560429554321066",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::verify::checked_f16_to_int_unchecked_i32",
    "hash": "13078244633405012534982296720247202721",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::verify::checked_f16_to_int_unchecked_i64",
    "hash": "785753086627285620618309046920557580145",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::verify::checked_f16_to_int_unchecked_i8",
    "hash": "1109547049332712863014930553678090803684",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::verify::checked_f16_to_int_unchecked_isize",
    "hash": "66558537547846620849048960665936495799",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::verify::checked_f16_to_int_unchecked_u128",
    "hash": "40221381311060492417348142104614411271",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::verify::checked_f16_to_int_unchecked_u16",
    "hash": "37285490811677600732445281667694757975",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::verify::checked_f16_to_int_unchecked_u32",
    "hash": "21725167609259549073618760656011051929",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::verify::checked_f16_to_int_unchecked_u64",
    "hash": "909041944522856523414207750426421890968",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::verify::checked_f16_to_int_unchecked_u8",
    "hash": "131489547478754908253958101055478714884",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::verify::checked_f16_to_int_unchecked_usize",
    "hash": "1665777245370022280614022620775703147763",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::verify::checked_f32_to_int_unchecked_i128",
    "hash": "2146845469344981724569168275958132704",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::verify::checked_f32_to_int_unchecked_i16",
    "hash": "174938829010611886759192474236502003496",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::verify::checked_f32_to_int_unchecked_i32",
    "hash": "267921842133321400015889515681069425009",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::verify::checked_f32_to_int_unchecked_i64",
    "hash": "99231698528792005310553855934719789290",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::verify::checked_f32_to_int_unchecked_i8",
    "hash": "89234760600994794133802138861224387761",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::verify::checked_f32_to_int_unchecked_isize",
    "hash": "51794365765437429116986798700827333997",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::verify::checked_f32_to_int_unchecked_u128",
    "hash": "1029187919098376413916725176598116364962",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::verify::checked_f32_to_int_unchecked_u16",
    "hash": "1010268148410790901915805895530004236068",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::verify::checked_f32_to_int_unchecked_u32",
    "hash": "1371210293127865885316354084215762837197",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::verify::checked_f32_to_int_unchecked_u64",
    "hash": "1395406964376648328213724412562750520478",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::verify::checked_f32_to_int_unchecked_u8",
    "hash": "1288578928862741328217251328927914123651",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::verify::checked_f32_to_int_unchecked_usize",
    "hash": "146778387914651285613943715191449422440",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::verify::checked_f64_to_int_unchecked_i128",
    "hash": "6544606276058273647836871261144036308",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::verify::checked_f64_to_int_unchecked_i16",
    "hash": "174897113879397573079998332817520462689",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::verify::checked_f64_to_int_unchecked_i32",
    "hash": "981267943326753360912793905704081951381",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::verify::checked_f64_to_int_unchecked_i64",
    "hash": "1654011078598428411216436239188103388020",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::verify::checked_f64_to_int_unchecked_i8",
    "hash": "88640579384768390662404459705007624460",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::verify::checked_f64_to_int_unchecked_isize",
    "hash": "106201091619861039132603576623162319642",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::verify::checked_f64_to_int_unchecked_u128",
    "hash": "901004369420870311817162195808300648776",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::verify::checked_f64_to_int_unchecked_u16",
    "hash": "47394996844201814119127791759760895039",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::verify::checked_f64_to_int_unchecked_u32",
    "hash": "5499797036854767232338238283311354206",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::verify::checked_f64_to_int_unchecked_u64",
    "hash": "369058366633413139017661514812472153050",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::verify::checked_f64_to_int_unchecked_u8",
    "hash": "179389416930440841243355924870379875201",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::verify::checked_f64_to_int_unchecked_usize",
    "hash": "319292740460636672316380286484131501248",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::verify::checked_unchecked_mul_i16",
    "hash": "1558217684074067566110352122986797529653",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::verify::checked_unchecked_mul_i8",
    "hash": "14404621497131026957918922813054029075",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::verify::checked_unchecked_mul_u16",
    "hash": "45480719389544454197219997097769005812",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::verify::checked_unchecked_mul_u8",
    "hash": "1730733134749845457313360449535192292487",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::verify::unchecked_mul_i128_edge_neg",
    "hash": "1591568680401347777713095924987912971780",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::verify::unchecked_mul_i128_edge_pos",
    "hash": "130823312994915196912560541843139363010",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::verify::unchecked_mul_i128_large_neg",
    "hash": "1536732514484955086618396010141268593402",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::verify::unchecked_mul_i128_large_pos",
    "hash": "97580530617337853712509339388496484609",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::verify::unchecked_mul_i128_small",
    "hash": "1773036741255170215127369192566257126",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::verify::unchecked_mul_i32_edge_neg",
    "hash": "825075160848479119717558474060961843577",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::verify::unchecked_mul_i32_edge_pos",
    "hash": "1711787044854938129680579883384266876",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::verify::unchecked_mul_i32_large_neg",
    "hash": "4856518639152238255224581613370083310",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::verify::unchecked_mul_i32_large_pos",
    "hash": "143899761686843302068144577117601736026",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::verify::unchecked_mul_i32_small",
    "hash": "300772098994424304015420422732808931546",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::verify::unchecked_mul_i64_edge_neg",
    "hash": "580394060335188047514966116229268579288",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::verify::unchecked_mul_i64_edge_pos",
    "hash": "1759077864172123349013418408492416560764",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::verify::unchecked_mul_i64_large_neg",
    "hash": "16054898576750419946805238830654069507",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::verify::unchecked_mul_i64_large_pos",
    "hash": "159581615721313791859520237236871873725",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::verify::unchecked_mul_i64_small",
    "hash": "1718517275100767018911151564898060275895",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::verify::unchecked_mul_isize_edge_neg",
    "hash": "152239061730938779381777879898186841373",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::verify::unchecked_mul_isize_edge_pos",
    "hash": "93809864181841294926944011928626926782",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::verify::unchecked_mul_isize_large_neg",
    "hash": "692120539712171865915438716865604359621",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::verify::unchecked_mul_isize_large_pos",
    "hash": "201877798023373758811858410538680206114",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::verify::unchecked_mul_isize_small",
    "hash": "358322265857274070315333915610398904293",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::verify::unchecked_mul_u128_edge",
    "hash": "882317615310312421514452665780341461741",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::verify::unchecked_mul_u128_large",
    "hash": "15727653764022154015279570282125922534",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::verify::unchecked_mul_u128_small",
    "hash": "1701109883750518590116465133092757295371",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::verify::unchecked_mul_u32_edge",
    "hash": "16819090820982780939774940179978513234",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::verify::unchecked_mul_u32_large",
    "hash": "1721959495235583288912537605730583167416",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::verify::unchecked_mul_u32_small",
    "hash": "804236005793763266813768852209921249472",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::verify::unchecked_mul_u64_edge",
    "hash": "158852990385870230965517850860732622323",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::verify::unchecked_mul_u64_large",
    "hash": "112025698543375948858820603942290819217",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::verify::unchecked_mul_u64_small",
    "hash": "118816188075542290317548671692621855518",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::verify::unchecked_mul_usize_edge",
    "hash": "5036010754957378615035721645080522776",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::verify::unchecked_mul_usize_large",
    "hash": "64064730739592167515623113358132877665",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::verify::unchecked_mul_usize_small",
    "hash": "31860114549260775313584486046290935278",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::verify::widening_mul_u16_large",
    "hash": "24550448040971169127567622151017135043",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::verify::widening_mul_u16_mid_edge",
    "hash": "727081603799113348616198558539699885613",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::verify::widening_mul_u16_small",
    "hash": "120149276172808649575847724835378691602",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::verify::widening_mul_u32_large",
    "hash": "121808549130714486045950992824544123004",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::verify::widening_mul_u32_mid_edge",
    "hash": "5285287846062740612304435696930248462",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::verify::widening_mul_u32_small",
    "hash": "143128388194023031128305806447341425512",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::verify::widening_mul_u64_large",
    "hash": "89243993688714972019976312210551082999",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::verify::widening_mul_u64_mid_edge",
    "hash": "85344959385168818075548859879896161244",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::verify::widening_mul_u64_small",
    "hash": "48981887847648442908408832127924089332",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::verify::widening_mul_u8",
    "hash": "1077075525346267809477891646573240211",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::I32NotAllOnes as clone::Clone>::clone",
    "hash": "95321100352647801656372387217815873490"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::I32NotAllOnes as cmp::Eq>::assert_receiver_is_total_eq",
    "hash": "1128942456936212405612391312037393118245"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::I32NotAllOnes as cmp::Ord>::cmp",
    "hash": "174553373116882375222850135469290242685"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::I32NotAllOnes as cmp::PartialEq>::eq",
    "hash": "1201963124633778851914713794854671608362"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::I32NotAllOnes as cmp::PartialOrd>::partial_cmp",
    "hash": "1493153803213328819711772021572164647523"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::I64NotAllOnes as clone::Clone>::clone",
    "hash": "1667278627388378630415009966803279158500"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::I64NotAllOnes as cmp::Eq>::assert_receiver_is_total_eq",
    "hash": "1121255382169342472215387708568473007407"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::I64NotAllOnes as cmp::Ord>::cmp",
    "hash": "9813026064038907675259779602206379072"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::I64NotAllOnes as cmp::PartialEq>::eq",
    "hash": "134556865306442415017006745683775914175"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::I64NotAllOnes as cmp::PartialOrd>::partial_cmp",
    "hash": "159431505251328824673691050302918857561"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::Nanoseconds as clone::Clone>::clone",
    "hash": "284303946851831477117018836781963097314"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::Nanoseconds as cmp::Eq>::assert_receiver_is_total_eq",
    "hash": "98778043234287266566146955103619415516"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::Nanoseconds as cmp::Ord>::cmp",
    "hash": "512164398459567067217317093991245537303"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::Nanoseconds as cmp::PartialEq>::eq",
    "hash": "145631549215298175277333674329319328027"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::Nanoseconds as cmp::PartialOrd>::partial_cmp",
    "hash": "301725601986526277913891928208182597119"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::Nanoseconds as default::Default>::default",
    "hash": "7491658729142438251950090353170692194"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::NonZeroCharInner as clone::Clone>::clone",
    "hash": "646563270916037289013162575682931043827"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::NonZeroCharInner as cmp::Eq>::assert_receiver_is_total_eq",
    "hash": "38023546913063283487379518896174001877"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::NonZeroCharInner as cmp::Ord>::cmp",
    "hash": "14236456660470343059176395765878344970"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::NonZeroCharInner as cmp::PartialEq>::eq",
    "hash": "562076890388947090614160644005012129932"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::NonZeroCharInner as cmp::PartialOrd>::partial_cmp",
    "hash": "333371510205260209113000213422475127961"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::NonZeroI128Inner as clone::Clone>::clone",
    "hash": "17754140644428040844282441624114223893"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::NonZeroI128Inner as cmp::Eq>::assert_receiver_is_total_eq",
    "hash": "1282216883934066851714002867313691004713"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::NonZeroI128Inner as cmp::Ord>::cmp",
    "hash": "701819135548354481311473585089185905085"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::NonZeroI128Inner as cmp::PartialEq>::eq",
    "hash": "1343603757112683336310963940822122512502"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::NonZeroI128Inner as cmp::PartialOrd>::partial_cmp",
    "hash": "121150907442970860044466242539528060576"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::NonZeroI16Inner as clone::Clone>::clone",
    "hash": "72190318537280137841539682266925008022"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::NonZeroI16Inner as cmp::Eq>::assert_receiver_is_total_eq",
    "hash": "1720983361033902027512004013075737303484"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::NonZeroI16Inner as cmp::Ord>::cmp",
    "hash": "183350022567453091817365406468388046580"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::NonZeroI16Inner as cmp::PartialEq>::eq",
    "hash": "527360233841416040611629912172285883263"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::NonZeroI16Inner as cmp::PartialOrd>::partial_cmp",
    "hash": "1408804095153746694116027293652732494604"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::NonZeroI32Inner as clone::Clone>::clone",
    "hash": "96597067483487903276406482902951799593"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::NonZeroI32Inner as cmp::Eq>::assert_receiver_is_total_eq",
    "hash": "1001015365238522009517454183613526247323"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::NonZeroI32Inner as cmp::Ord>::cmp",
    "hash": "103515965297737691962185266105938739512"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::NonZeroI32Inner as cmp::PartialEq>::eq",
    "hash": "1328397263678433839717601172749942956277"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::NonZeroI32Inner as cmp::PartialOrd>::partial_cmp",
    "hash": "152593928270321479343327069359114784280"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::NonZeroI64Inner as clone::Clone>::clone",
    "hash": "148995607470281181666825381623873335179"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::NonZeroI64Inner as cmp::Eq>::assert_receiver_is_total_eq",
    "hash": "250027746305346243318263463367010846428"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::NonZeroI64Inner as cmp::Ord>::cmp",
    "hash": "259619396213900651411018649285330581243"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::NonZeroI64Inner as cmp::PartialEq>::eq",
    "hash": "144538520691767219610562669090868647393"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::NonZeroI64Inner as cmp::PartialOrd>::partial_cmp",
    "hash": "1342065642127279318169989238126787885"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::NonZeroI8Inner as clone::Clone>::clone",
    "hash": "11993465599770535527762291125858906447"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::NonZeroI8Inner as cmp::Eq>::assert_receiver_is_total_eq",
    "hash": "103830356445886948776149581841065336626"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::NonZeroI8Inner as cmp::Ord>::cmp",
    "hash": "1689122075732460372716462159171210232427"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::NonZeroI8Inner as cmp::PartialEq>::eq",
    "hash": "6454034662367040764033774196208972240"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::NonZeroI8Inner as cmp::PartialOrd>::partial_cmp",
    "hash": "279885989956464737916016465710692674115"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::NonZeroIsizeInner as clone::Clone>::clone",
    "hash": "876093211554278727215050143599589481991"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::NonZeroIsizeInner as cmp::Eq>::assert_receiver_is_total_eq",
    "hash": "142793010505519110265045931603233295851"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::NonZeroIsizeInner as cmp::Ord>::cmp",
    "hash": "10731216131240243098486509776933326150"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::NonZeroIsizeInner as cmp::PartialEq>::eq",
    "hash": "1502933851442233464799924290767818054"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::NonZeroIsizeInner as cmp::PartialOrd>::partial_cmp",
    "hash": "178712047096662047813580757188219449658"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::NonZeroU128Inner as clone::Clone>::clone",
    "hash": "1037075663829630022114882488810604835977"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::NonZeroU128Inner as cmp::Eq>::assert_receiver_is_total_eq",
    "hash": "58984455558226749723412355008539141107"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::NonZeroU128Inner as cmp::Ord>::cmp",
    "hash": "161301353217068507902901348858945622378"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::NonZeroU128Inner as cmp::PartialEq>::eq",
    "hash": "119491257037948598876581043085223415382"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::NonZeroU128Inner as cmp::PartialOrd>::partial_cmp",
    "hash": "1546359869906396278810445608732846285152"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::NonZeroU16Inner as clone::Clone>::clone",
    "hash": "153528072920120574029384907328367474318"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::NonZeroU16Inner as cmp::Eq>::assert_receiver_is_total_eq",
    "hash": "30337452864984981165770918289378731852"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::NonZeroU16Inner as cmp::Ord>::cmp",
    "hash": "282251232191035550410427377065685198446"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::NonZeroU16Inner as cmp::PartialEq>::eq",
    "hash": "580424716609395465316227365184800176283"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::NonZeroU16Inner as cmp::PartialOrd>::partial_cmp",
    "hash": "67216807011373199841153424785221003180"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::NonZeroU32Inner as clone::Clone>::clone",
    "hash": "1716360374161700663914959945760548668491"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::NonZeroU32Inner as cmp::Eq>::assert_receiver_is_total_eq",
    "hash": "97140569682018957507481695136460016801"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::NonZeroU32Inner as cmp::Ord>::cmp",
    "hash": "321807867901811157911155848864952479457"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::NonZeroU32Inner as cmp::PartialEq>::eq",
    "hash": "1588856241789892430411623495230000927593"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::NonZeroU32Inner as cmp::PartialOrd>::partial_cmp",
    "hash": "124081834982671595364365454909520925321"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::NonZeroU64Inner as clone::Clone>::clone",
    "hash": "27843151040975060643032297448084622244"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::NonZeroU64Inner as cmp::Eq>::assert_receiver_is_total_eq",
    "hash": "1228171540437761499814347798546612278117"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::NonZeroU64Inner as cmp::Ord>::cmp",
    "hash": "133080877438822076003628093941734747938"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::NonZeroU64Inner as cmp::PartialEq>::eq",
    "hash": "814312750903048097717589463600674821116"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::NonZeroU64Inner as cmp::PartialOrd>::partial_cmp",
    "hash": "1586773114681475570317505217840374866551"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::NonZeroU8Inner as clone::Clone>::clone",
    "hash": "1137783967896002900113095103457766140530"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::NonZeroU8Inner as cmp::Eq>::assert_receiver_is_total_eq",
    "hash": "37882857669520317045947258886109818461"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::NonZeroU8Inner as cmp::Ord>::cmp",
    "hash": "34480482603602722527141391912949672748"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::NonZeroU8Inner as cmp::PartialEq>::eq",
    "hash": "50126328082333034806855786283896430205"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::NonZeroU8Inner as cmp::PartialOrd>::partial_cmp",
    "hash": "21042811134322361510899871248475479927"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::NonZeroUsizeInner as clone::Clone>::clone",
    "hash": "40260587020387872355081439162767383235"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::NonZeroUsizeInner as cmp::Eq>::assert_receiver_is_total_eq",
    "hash": "1694226931834552195617606911830913162418"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::NonZeroUsizeInner as cmp::Ord>::cmp",
    "hash": "1269919922408982161313716115902984197843"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::NonZeroUsizeInner as cmp::PartialEq>::eq",
    "hash": "145281502006416891752791236643378324533"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::NonZeroUsizeInner as cmp::PartialOrd>::partial_cmp",
    "hash": "102896414783371224972502170695240689767"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::U32NotAllOnes as clone::Clone>::clone",
    "hash": "63284965130786882267209187590699827257"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::U32NotAllOnes as cmp::Eq>::assert_receiver_is_total_eq",
    "hash": "1062000390915563735812348873908060650911"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::U32NotAllOnes as cmp::Ord>::cmp",
    "hash": "45187666254638801456080994786718358501"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::U32NotAllOnes as cmp::PartialEq>::eq",
    "hash": "159718716743652191508049444008822950195"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::U32NotAllOnes as cmp::PartialOrd>::partial_cmp",
    "hash": "119049725455992753215815190102212344001"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::U64NotAllOnes as clone::Clone>::clone",
    "hash": "143226554484130730088029222902621711564"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::U64NotAllOnes as cmp::Eq>::assert_receiver_is_total_eq",
    "hash": "705489705562449137310914585806333492821"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::U64NotAllOnes as cmp::Ord>::cmp",
    "hash": "130795345635793130794335262500518662765"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::U64NotAllOnes as cmp::PartialEq>::eq",
    "hash": "6580193502541235621409528767400573430"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::U64NotAllOnes as cmp::PartialOrd>::partial_cmp",
    "hash": "84070443165814848927670074616059774931"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::UsizeNoHighBit as clone::Clone>::clone",
    "hash": "9198930896313849109249687921169621515"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::UsizeNoHighBit as cmp::Eq>::assert_receiver_is_total_eq",
    "hash": "37552281531186353231802949034726945730"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::UsizeNoHighBit as cmp::Ord>::cmp",
    "hash": "161505110218619323649780304543369043706"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::UsizeNoHighBit as cmp::PartialEq>::eq",
    "hash": "1773913891928140334112666195911434249625"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::UsizeNoHighBit as cmp::PartialOrd>::partial_cmp",
    "hash": "1019775686955365115313900624907808345026"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "num::niche_types::I32NotAllOnes::as_inner",
    "hash": "62244199830226386291779977467342026623"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "num::niche_types::I32NotAllOnes::new",
    "hash": "175390871276660016625282384707074363535"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "num::niche_types::I32NotAllOnes::new_unchecked",
    "hash": "14879874428127347896184185204490644176"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "num::niche_types::I64NotAllOnes::as_inner",
    "hash": "367419630750642910114593430510198694251"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "num::niche_types::I64NotAllOnes::new",
    "hash": "773564191869729999013314061526619564775"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "num::niche_types::I64NotAllOnes::new_unchecked",
    "hash": "942111149938557034521400519024763903"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "num::niche_types::Nanoseconds::as_inner",
    "hash": "1426933523126573496413644660254657640553"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "num::niche_types::Nanoseconds::new",
    "hash": "606736214950344564714508380532737518104"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "num::niche_types::Nanoseconds::new_unchecked",
    "hash": "65223988746766808039436936606294077616"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "num::niche_types::NonZeroCharInner::as_inner",
    "hash": "19875482727610676361992474909848387142"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "num::niche_types::NonZeroCharInner::new",
    "hash": "1144699334143911742317049646431545185695"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "num::niche_types::NonZeroCharInner::new_unchecked",
    "hash": "71475697310023452611093136390230537309"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "num::niche_types::NonZeroI128Inner::as_inner",
    "hash": "143201754546631135398957434916674187170"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "num::niche_types::NonZeroI128Inner::new",
    "hash": "1463811939628041084015002430469203331741"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "num::niche_types::NonZeroI128Inner::new_unchecked",
    "hash": "161748338981616977295743930894200777293"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "num::niche_types::NonZeroI16Inner::as_inner",
    "hash": "59082544206243495567078734547340573519"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "num::niche_types::NonZeroI16Inner::new",
    "hash": "82109462271641271578235892241920477982"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "num::niche_types::NonZeroI16Inner::new_unchecked",
    "hash": "170166354132948128213394483554169710296"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "num::niche_types::NonZeroI32Inner::as_inner",
    "hash": "740224013373525553114316046959322446864"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "num::niche_types::NonZeroI32Inner::new",
    "hash": "34285991267509141864784511859000972903"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "num::niche_types::NonZeroI32Inner::new_unchecked",
    "hash": "1826460974137050473396744505070426697"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "num::niche_types::NonZeroI64Inner::as_inner",
    "hash": "3949953616583430794095841446477584616"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "num::niche_types::NonZeroI64Inner::new",
    "hash": "85445704446664558852505452023173173373"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "num::niche_types::NonZeroI64Inner::new_unchecked",
    "hash": "82751913250512252424802773370231482526"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "num::niche_types::NonZeroI8Inner::as_inner",
    "hash": "128785515517641217783627530273772906963"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "num::niche_types::NonZeroI8Inner::new",
    "hash": "26537572305288315897931982334290687065"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "num::niche_types::NonZeroI8Inner::new_unchecked",
    "hash": "1141049312788813497613779143152671955379"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "num::niche_types::NonZeroIsizeInner::as_inner",
    "hash": "1522268170603035591715150647036420798488"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "num::niche_types::NonZeroIsizeInner::new",
    "hash": "943884822448604850715569710206069901875"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "num::niche_types::NonZeroIsizeInner::new_unchecked",
    "hash": "883304844575018730810448984622008620840"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "num::niche_types::NonZeroU128Inner::as_inner",
    "hash": "100113201066320357673422828236054966162"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "num::niche_types::NonZeroU128Inner::new",
    "hash": "51928142693942046049541514914439174147"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "num::niche_types::NonZeroU128Inner::new_unchecked",
    "hash": "136902698961333832702685918516678662824"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "num::niche_types::NonZeroU16Inner::as_inner",
    "hash": "162023002291529747338457158926762289904"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "num::niche_types::NonZeroU16Inner::new",
    "hash": "8593446904918114833241560501000377988"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "num::niche_types::NonZeroU16Inner::new_unchecked",
    "hash": "50172288310396445212552911459489436450"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "num::niche_types::NonZeroU32Inner::as_inner",
    "hash": "87466449370859444979227832938159181468"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "num::niche_types::NonZeroU32Inner::new",
    "hash": "84654765772079266163104534710583038368"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "num::niche_types::NonZeroU32Inner::new_unchecked",
    "hash": "26896078254652699541775187735316093570"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "num::niche_types::NonZeroU64Inner::as_inner",
    "hash": "1174130049495832786818159423045732254036"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "num::niche_types::NonZeroU64Inner::new",
    "hash": "1337245936805198706917279799413468387064"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "num::niche_types::NonZeroU64Inner::new_unchecked",
    "hash": "155921070856881814347823073908816206194"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "num::niche_types::NonZeroU8Inner::as_inner",
    "hash": "173857274480672488187025379529057001394"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "num::niche_types::NonZeroU8Inner::new",
    "hash": "175027558785355766628007098822015109031"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "num::niche_types::NonZeroU8Inner::new_unchecked",
    "hash": "1307434845575148471311362979957012505308"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "num::niche_types::NonZeroUsizeInner::as_inner",
    "hash": "1753289476006331552312795871302340923208"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "num::niche_types::NonZeroUsizeInner::new",
    "hash": "11927801020713044973613301869463690244"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "num::niche_types::NonZeroUsizeInner::new_unchecked",
    "hash": "1334673982917831458617781392939316931537"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "num::niche_types::U32NotAllOnes::as_inner",
    "hash": "897281469239368267612343299324372831050"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "num::niche_types::U32NotAllOnes::new",
    "hash": "96022746719203505848059992568571588545"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "num::niche_types::U32NotAllOnes::new_unchecked",
    "hash": "136697762731726791849613534055152536198"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "num::niche_types::U64NotAllOnes::as_inner",
    "hash": "362422841540258878517837229763688878892"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "num::niche_types::U64NotAllOnes::new",
    "hash": "31887457635799729947953306968828181555"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "num::niche_types::U64NotAllOnes::new_unchecked",
    "hash": "822073062737816464214192110131492739310"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "num::niche_types::UsizeNoHighBit::as_inner",
    "hash": "35498427195212328239621848237205557222"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "num::niche_types::UsizeNoHighBit::new",
    "hash": "21092044382719354958880756437794081353"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "num::niche_types::UsizeNoHighBit::new_unchecked",
    "hash": "96255607689537096122135754509074219025"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "<num::nonzero::NonZero<i128> as ops::arith::Neg>::neg",
    "hash": "123558682713406415814243439857921176693"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "<num::nonzero::NonZero<i16> as ops::arith::Neg>::neg",
    "hash": "1711572890253278453012011003412136348262"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "<num::nonzero::NonZero<i32> as ops::arith::Neg>::neg",
    "hash": "53380607363756486222166576126735027743"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "<num::nonzero::NonZero<i64> as ops::arith::Neg>::neg",
    "hash": "27834530906137920665673123807245472665"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "<num::nonzero::NonZero<i8> as ops::arith::Neg>::neg",
    "hash": "36263533545518412993025693040696374478"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "<num::nonzero::NonZero<isize> as ops::arith::Neg>::neg",
    "hash": "69282862583198349811424542585135970239"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::<impl ops::arith::Div<num::nonzero::NonZero<u128>> for u128>::div",
    "hash": "178617277929797200805583750313527361284"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::<impl ops::arith::Div<num::nonzero::NonZero<u16>> for u16>::div",
    "hash": "64838405647659642216536506174864083023"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::<impl ops::arith::Div<num::nonzero::NonZero<u32>> for u32>::div",
    "hash": "19550253599247923753755358173805599842"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::<impl ops::arith::Div<num::nonzero::NonZero<u64>> for u64>::div",
    "hash": "125481439479323156413034218551856678688"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::<impl ops::arith::Div<num::nonzero::NonZero<u8>> for u8>::div",
    "hash": "137850922484416729669505886484956466157"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::<impl ops::arith::Div<num::nonzero::NonZero<usize>> for usize>::div",
    "hash": "1590767327387192751518051150623530251045"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::<impl ops::arith::DivAssign<num::nonzero::NonZero<u128>> for u128>::div_assign",
    "hash": "1447319211942495355816123836406274903235"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::<impl ops::arith::DivAssign<num::nonzero::NonZero<u16>> for u16>::div_assign",
    "hash": "24680537145814510141791614905073261700"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::<impl ops::arith::DivAssign<num::nonzero::NonZero<u32>> for u32>::div_assign",
    "hash": "33562993708002920935453716475317851877"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::<impl ops::arith::DivAssign<num::nonzero::NonZero<u64>> for u64>::div_assign",
    "hash": "6837268765755857648222194796611903606"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::<impl ops::arith::DivAssign<num::nonzero::NonZero<u8>> for u8>::div_assign",
    "hash": "112943249406850628931731973144860042076"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::<impl ops::arith::DivAssign<num::nonzero::NonZero<usize>> for usize>::div_assign",
    "hash": "1469312955196081409615716701619633375866"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::<impl ops::arith::Rem<num::nonzero::NonZero<u128>> for u128>::rem",
    "hash": "1464049389026291430714486937320490305335"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::<impl ops::arith::Rem<num::nonzero::NonZero<u16>> for u16>::rem",
    "hash": "800595857079647682513461229001188111570"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::<impl ops::arith::Rem<num::nonzero::NonZero<u32>> for u32>::rem",
    "hash": "441391505328538442715531366874352036159"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::<impl ops::arith::Rem<num::nonzero::NonZero<u64>> for u64>::rem",
    "hash": "1597582984089670451815416061924790584816"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::<impl ops::arith::Rem<num::nonzero::NonZero<u8>> for u8>::rem",
    "hash": "129118216344690000495127688991420926641"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::<impl ops::arith::Rem<num::nonzero::NonZero<usize>> for usize>::rem",
    "hash": "1608460528940464221217574714245953728699"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::<impl ops::arith::RemAssign<num::nonzero::NonZero<u128>> for u128>::rem_assign",
    "hash": "1015955819544274226510545403329540036567"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::<impl ops::arith::RemAssign<num::nonzero::NonZero<u16>> for u16>::rem_assign",
    "hash": "82078885096244595058282435486246285551"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::<impl ops::arith::RemAssign<num::nonzero::NonZero<u32>> for u32>::rem_assign",
    "hash": "91474843476314317083973110035587539889"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::<impl ops::arith::RemAssign<num::nonzero::NonZero<u64>> for u64>::rem_assign",
    "hash": "56439634889317828746809704624014842937"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::<impl ops::arith::RemAssign<num::nonzero::NonZero<u8>> for u8>::rem_assign",
    "hash": "313346519268797299417122534966207373483"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::<impl ops::arith::RemAssign<num::nonzero::NonZero<usize>> for usize>::rem_assign",
    "hash": "64977224670414702715612925498152434773"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i128>::abs",
    "hash": "23925836369431111256989472676680125692"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i128>::cast_unsigned",
    "hash": "987853090286847127415836347975063091896"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i128>::checked_abs",
    "hash": "807161546948112528317070447963968185467"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i128>::checked_mul",
    "hash": "143675684973514981854795584471394350791"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i128>::checked_neg",
    "hash": "1469383912398173665117910190847641079975"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i128>::checked_pow",
    "hash": "752648184644694757318176164538040615950"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i128>::count_ones",
    "hash": "1812741068557397045112864673282901497845"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i128>::from_be",
    "hash": "905445864870532845013532957078642795124"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i128>::from_le",
    "hash": "116528197784710404493225044303461619551"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i128>::is_negative",
    "hash": "66428152277273800271495426841013372157"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i128>::is_positive",
    "hash": "130315366175245354674318106252987868696"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i128>::isolate_highest_one",
    "hash": "1681128024806454213914456975371790301345"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i128>::isolate_lowest_one",
    "hash": "51795819420353612288250331287015515104"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i128>::leading_zeros",
    "hash": "728382878789160079715562894230036417793"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i128>::overflowing_abs",
    "hash": "163062874584976344109970679314643498723"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i128>::overflowing_neg",
    "hash": "894058987398649369413370424015858426005"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i128>::reverse_bits",
    "hash": "170042310160526088922116535305025589752"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i128>::rotate_left",
    "hash": "305991969011329290810256970743608744279"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i128>::rotate_right",
    "hash": "182466250710609139837505236944760121886"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i128>::saturating_abs",
    "hash": "1308515390419358465212009276004055940196"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i128>::saturating_mul",
    "hash": "51294321815284115426786419449714490226"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i128>::saturating_neg",
    "hash": "1278394089403730489912466413550839638164"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i128>::saturating_pow",
    "hash": "155261747517383723588524911573245155651"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i128>::swap_bytes",
    "hash": "674845171431958822914779719285350997467"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i128>::to_be",
    "hash": "172351168819932501474952831010641614464"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i128>::to_le",
    "hash": "1512316168900838178015307640311238290761"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i128>::trailing_zeros",
    "hash": "42975527873822675591132344766492084886"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i128>::unchecked_mul",
    "hash": "101558561983416294524097722379517198071"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i128>::unsigned_abs",
    "hash": "119488709681784548887536905069343323008"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i128>::wrapping_abs",
    "hash": "122925082306125521615469443347493773232"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i128>::wrapping_neg",
    "hash": "7779329362079487629535799734123278112"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i16>::abs",
    "hash": "828062572575994988315635440025728658128"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i16>::cast_unsigned",
    "hash": "13128246151222442143874205036750752196"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i16>::checked_abs",
    "hash": "165253212754885999317201369343591202778"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i16>::checked_mul",
    "hash": "70991519385080568519603979332133409421"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i16>::checked_neg",
    "hash": "153824899494874671624199436857254721369"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i16>::checked_pow",
    "hash": "19454347370992453094123559841034064080"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i16>::count_ones",
    "hash": "184159810449161578645481345015713264798"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i16>::from_be",
    "hash": "149003892866643055685057652638813910555"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i16>::from_le",
    "hash": "121179716809322929534774948811428881559"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i16>::is_negative",
    "hash": "48906197233326584478642461507568474095"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i16>::is_positive",
    "hash": "52833382669505082789554905089268820392"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i16>::isolate_highest_one",
    "hash": "1675352232582245297316914021440909216374"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i16>::isolate_lowest_one",
    "hash": "174098496909623277175043848424439836097"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i16>::leading_zeros",
    "hash": "75786297248028982751402450283578841773"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i16>::overflowing_abs",
    "hash": "97134835821374647442884991010502753644"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i16>::overflowing_neg",
    "hash": "29576545562243401603421826422573126794"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i16>::reverse_bits",
    "hash": "174093448337771396896425683535854114782"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i16>::rotate_left",
    "hash": "121268838768307654694275603234651914825"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i16>::rotate_right",
    "hash": "44193200997770180476774260586101059784"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i16>::saturating_abs",
    "hash": "1187289905818307656816568760930674357697"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i16>::saturating_mul",
    "hash": "1832499900168695998212747201022267193940"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i16>::saturating_neg",
    "hash": "684353151057003928515904431159515378057"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i16>::saturating_pow",
    "hash": "1641740563410262450412548762960433506809"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i16>::swap_bytes",
    "hash": "1568022711253825571717587923312127998"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i16>::to_be",
    "hash": "783058053991221566015408888916055065428"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i16>::to_le",
    "hash": "2407939897007116038510635890055119396"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i16>::trailing_zeros",
    "hash": "323728313493409543710230872401959735662"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i16>::unchecked_mul",
    "hash": "740476273739437125211275831530995418435"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i16>::unsigned_abs",
    "hash": "1385483670269985509916687798598829198394"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i16>::wrapping_abs",
    "hash": "633521814770652569513011771763706090339"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i16>::wrapping_neg",
    "hash": "877943233102024440213603921358548426907"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i32>::abs",
    "hash": "17716163621213163159177677429511375780"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i32>::cast_unsigned",
    "hash": "773427070012050200216192144343751488344"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i32>::checked_abs",
    "hash": "16008468637511099749153388567160570872"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i32>::checked_mul",
    "hash": "749545142553233014912940774352588456863"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i32>::checked_neg",
    "hash": "1673954772965774136113172751686304178750"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i32>::checked_pow",
    "hash": "168094254048709894057564933203175273968"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i32>::count_ones",
    "hash": "846029952073462635414156596465818866664"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i32>::from_be",
    "hash": "1626621602225925819313496676365978486708"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i32>::from_le",
    "hash": "116142691244532347716033717157960338051"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i32>::is_negative",
    "hash": "5156167844992808263337903833021965134"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i32>::is_positive",
    "hash": "696441053201700550414811615280761941844"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i32>::isolate_highest_one",
    "hash": "383826697871167025115998999973832928199"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i32>::isolate_lowest_one",
    "hash": "1513033453589189852212763353587362745661"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i32>::leading_zeros",
    "hash": "73991166065174995239112393221421622048"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i32>::overflowing_abs",
    "hash": "111108094607341915946978079267723951543"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i32>::overflowing_neg",
    "hash": "15273553256563276399531251529267126055"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i32>::reverse_bits",
    "hash": "179306124794038436137073225683216011429"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i32>::rotate_left",
    "hash": "636992737902660307111879282024764783333"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i32>::rotate_right",
    "hash": "702894921153526629610043092819094407778"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i32>::saturating_abs",
    "hash": "920264951287173984716504939095778069044"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i32>::saturating_mul",
    "hash": "1781434889715356291714609677132491691673"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i32>::saturating_neg",
    "hash": "30246550069047077118106511311447176036"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i32>::saturating_pow",
    "hash": "1055509180219455889215687425274183276435"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i32>::swap_bytes",
    "hash": "115496712177651436636441026061943754118"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i32>::to_be",
    "hash": "1728047398350553049414833086918669317616"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i32>::to_le",
    "hash": "29141626728886716958652049122411605290"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i32>::trailing_zeros",
    "hash": "131860546526050293932530171285036164654"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i32>::unchecked_mul",
    "hash": "1701581865723334927716203936061063577383"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i32>::unsigned_abs",
    "hash": "60807285866339926423771544390054733260"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i32>::wrapping_abs",
    "hash": "58072441167488969132457432767246161801"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i32>::wrapping_neg",
    "hash": "24185372830810963376757570204937684292"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i64>::abs",
    "hash": "248132585960840184515353773022748985427"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i64>::cast_unsigned",
    "hash": "128760267210712934316706177981595712314"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i64>::checked_abs",
    "hash": "509934025842029643310006941465378222877"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i64>::checked_mul",
    "hash": "641129257307282308513884218634412814703"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i64>::checked_neg",
    "hash": "1590248447524900065415221403540495753115"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i64>::checked_pow",
    "hash": "1336269672362560807317041904638279698250"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i64>::count_ones",
    "hash": "107315374313997130128971287171655176118"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i64>::from_be",
    "hash": "668507220450404100414445609349852224560"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i64>::from_le",
    "hash": "78204573693943933814349638493578797842"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i64>::is_negative",
    "hash": "76889388023204387252911988051837781489"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i64>::is_positive",
    "hash": "1700195199581579242017845232992342878287"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i64>::isolate_highest_one",
    "hash": "1683085826130583365911246299100639898325"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i64>::isolate_lowest_one",
    "hash": "5357504838837007276132491364832582279"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i64>::leading_zeros",
    "hash": "750172651892402487014112128870115538303"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i64>::overflowing_abs",
    "hash": "97364596932472889396018719215327167862"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i64>::overflowing_neg",
    "hash": "1305415139232315102015263688329753574926"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i64>::reverse_bits",
    "hash": "1580136375597466059313601017369452184959"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i64>::rotate_left",
    "hash": "137814996929748934213810195752567216386"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i64>::rotate_right",
    "hash": "1576299454291446800810216937839087520262"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i64>::saturating_abs",
    "hash": "90176282550172596685429161124405642698"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i64>::saturating_mul",
    "hash": "1604944957739661324813433965915449004360"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i64>::saturating_neg",
    "hash": "182929340185133281947759267972990873953"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i64>::saturating_pow",
    "hash": "379353765556311603212324925864746848386"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i64>::swap_bytes",
    "hash": "673876053986136684611611801124605876056"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i64>::to_be",
    "hash": "59831669892924673135144333321377417764"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i64>::to_le",
    "hash": "26623048266561531704605900107597713585"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i64>::trailing_zeros",
    "hash": "1185699434358499621010203577884624677023"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i64>::unchecked_mul",
    "hash": "179909592876459849956279942009788362629"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i64>::unsigned_abs",
    "hash": "697817642290660876812222043948581085738"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i64>::wrapping_abs",
    "hash": "15990383677437317017159748946409093472"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i64>::wrapping_neg",
    "hash": "147332473707382284439150123525207541445"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i8>::abs",
    "hash": "151021936239887762666327836206338344930"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i8>::cast_unsigned",
    "hash": "177438133402387351021822727523265579904"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i8>::checked_abs",
    "hash": "87161909353111206375506031618257761561"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i8>::checked_mul",
    "hash": "952224614392773143411320598673163774276"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i8>::checked_neg",
    "hash": "1455364031940092156117392983420162305765"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i8>::checked_pow",
    "hash": "49241214458272235449496944603845982676"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i8>::count_ones",
    "hash": "646554159967234892910459513109154937348"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i8>::from_be",
    "hash": "844810963500752833817174552650323394649"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i8>::from_le",
    "hash": "352561045013684421018445349379918673274"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i8>::is_negative",
    "hash": "19230453427619344263568764557227859571"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i8>::is_positive",
    "hash": "651983810537921405516905610230652006124"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i8>::isolate_highest_one",
    "hash": "84197070006306743009710010832083745188"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i8>::isolate_lowest_one",
    "hash": "54503466175734028387359791203215997042"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i8>::leading_zeros",
    "hash": "682354332383265537016962013446274711173"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i8>::overflowing_abs",
    "hash": "179447131211170184968537760788961187325"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i8>::overflowing_neg",
    "hash": "1661024455936119584917742518770531022571"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i8>::reverse_bits",
    "hash": "84061473825524990272158644389246538965"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i8>::rotate_left",
    "hash": "377194665932612205917660225168016067267"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i8>::rotate_right",
    "hash": "70578593142143739277344744429054487327"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i8>::saturating_abs",
    "hash": "166735830441246793065128782468275036476"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i8>::saturating_mul",
    "hash": "101961965666640477116731583846606991071"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i8>::saturating_neg",
    "hash": "170650847741967557012746895774742251895"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i8>::saturating_pow",
    "hash": "51362913494053004244139492596958337883"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i8>::swap_bytes",
    "hash": "8525959397268872067884015850847927416"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i8>::to_be",
    "hash": "1788290013067607862915252804693296257615"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i8>::to_le",
    "hash": "182679937764179848812285510397468464180"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i8>::trailing_zeros",
    "hash": "222416142575799616111704519706693160419"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i8>::unchecked_mul",
    "hash": "1389929995165167123117745402920428810035"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i8>::unsigned_abs",
    "hash": "487245344970573658113436243068179272220"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i8>::wrapping_abs",
    "hash": "56912799745612163269034363023195331001"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i8>::wrapping_neg",
    "hash": "728579586635622070411456812516960462509"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<isize>::abs",
    "hash": "834731442687108552715336508092561605681"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<isize>::cast_unsigned",
    "hash": "301379103305840309816446135339485034336"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<isize>::checked_abs",
    "hash": "109919615794746672258042704752925496279"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<isize>::checked_mul",
    "hash": "47124113654656220442957722167763071977"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<isize>::checked_neg",
    "hash": "78235231702980246738985238433038081178"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<isize>::checked_pow",
    "hash": "181505713936248731052899063644383765176"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<isize>::count_ones",
    "hash": "942390320443038923714133290422049396224"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<isize>::from_be",
    "hash": "294295309520472601217270824195613016141"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<isize>::from_le",
    "hash": "160129134261800530802897641011417507534"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<isize>::is_negative",
    "hash": "96835795702410881532900787189799561450"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<isize>::is_positive",
    "hash": "1009916704225682742714974241559697960714"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<isize>::isolate_highest_one",
    "hash": "160290574806707354845805210039304509571"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<isize>::isolate_lowest_one",
    "hash": "182818038911683423715748080570123343037"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<isize>::leading_zeros",
    "hash": "476398535946821859618161758255050588629"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<isize>::overflowing_abs",
    "hash": "1715599862096465834816388416013103772428"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<isize>::overflowing_neg",
    "hash": "1317021243171839489317942895440863397811"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<isize>::reverse_bits",
    "hash": "96417329481674618083235098154210780505"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<isize>::rotate_left",
    "hash": "820344803763328055611393248993576499519"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<isize>::rotate_right",
    "hash": "62757541879944968912607753812089111454"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<isize>::saturating_abs",
    "hash": "1649116197579997024917468395446555768260"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<isize>::saturating_mul",
    "hash": "4522612433079323845337760938855585739"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<isize>::saturating_neg",
    "hash": "793807384040591071017447675402848457836"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<isize>::saturating_pow",
    "hash": "101027592715370150495563111842745686077"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<isize>::swap_bytes",
    "hash": "36259967179865372957606051362812251384"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<isize>::to_be",
    "hash": "43092824205454685167715393347555822004"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<isize>::to_le",
    "hash": "255878821236278894917112088619955986476"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<isize>::trailing_zeros",
    "hash": "857960101317956324814584233772039806503"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<isize>::unchecked_mul",
    "hash": "1244756258047823993710571916260239918540"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<isize>::unsigned_abs",
    "hash": "77005062999805007955755715351724396101"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<isize>::wrapping_abs",
    "hash": "122759429550908216338364323174889827657"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<isize>::wrapping_neg",
    "hash": "18162679899278352909137965482115388530"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u128>::cast_signed",
    "hash": "83800329940941245914390089701367624962"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u128>::checked_add",
    "hash": "23433105181091614041232882974559220676"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u128>::checked_mul",
    "hash": "838430033466743378018327821888628136279"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u128>::checked_next_power_of_two",
    "hash": "1452841824676831183912294903304728365824"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u128>::checked_pow",
    "hash": "1822629630765060761017053027212347546483"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u128>::count_ones",
    "hash": "272795357844316747916123261520102365685"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u128>::div_ceil",
    "hash": "428668815412147297717753377654645983067"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u128>::from_be",
    "hash": "432226252433475320114097621388412581016"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u128>::from_le",
    "hash": "133008282574635953933135440464978794767"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u128>::ilog10",
    "hash": "1320993149732832621117979336373881858467"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u128>::ilog2",
    "hash": "102325152183168014511509242310603109587"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u128>::is_power_of_two",
    "hash": "117793126702971572409660050296855569395"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u128>::isolate_highest_one",
    "hash": "1672594470159170954316955419145023726574"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u128>::isolate_lowest_one",
    "hash": "166414132588137312813395580941612762335"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u128>::isqrt",
    "hash": "796969781026097775112226595804542832706"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u128>::leading_zeros",
    "hash": "910241772385056450317569879237271466009"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u128>::midpoint",
    "hash": "1269413165133200781015534829699595527492"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u128>::reverse_bits",
    "hash": "830776641654872653215386636517729090572"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u128>::rotate_left",
    "hash": "767998059637386629312763801802014450317"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u128>::rotate_right",
    "hash": "12549762973693344401316231003831882289"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u128>::saturating_add",
    "hash": "744720857727489078610038103637341499934"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u128>::saturating_mul",
    "hash": "1634848431459464475115769665504821120560"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u128>::saturating_pow",
    "hash": "135617213086029780713820473731980510468"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u128>::swap_bytes",
    "hash": "151958351403803859349779681863442992342"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u128>::to_be",
    "hash": "151787991146863148909407337029188370587"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u128>::to_le",
    "hash": "163761875120622008411453876829172978260"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u128>::trailing_zeros",
    "hash": "1575987776341144751618306694728423315671"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u128>::unchecked_add",
    "hash": "45391849130795651251305644425731885707"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u128>::unchecked_mul",
    "hash": "941952439360019025218249787986399434744"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u16>::cast_signed",
    "hash": "584932556786552929662465099610846718"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u16>::checked_add",
    "hash": "931207311771512626712922498883577655139"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u16>::checked_mul",
    "hash": "6001380700959860616169215333890261061"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u16>::checked_next_power_of_two",
    "hash": "165497298576479352118035076870283054049"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u16>::checked_pow",
    "hash": "348605161009632663714656854609741646084"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u16>::count_ones",
    "hash": "111411558934645580447364983058559874706"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u16>::div_ceil",
    "hash": "95960130855178645213805410427500333970"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u16>::from_be",
    "hash": "305550704457222498714786735565580791469"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u16>::from_le",
    "hash": "457410891805021315314198408236562989977"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u16>::ilog10",
    "hash": "88359949027592142215823061216958959938"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u16>::ilog2",
    "hash": "1453123518105325441318421888888703315423"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u16>::is_power_of_two",
    "hash": "25708613372261455846172076136859803606"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u16>::isolate_highest_one",
    "hash": "1406418447099456973512133112595836812017"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u16>::isolate_lowest_one",
    "hash": "100120143482003141649683448834861600945"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u16>::isqrt",
    "hash": "112829174461340647527453766140460358991"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u16>::leading_zeros",
    "hash": "31660930797973970384003871453669125127"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u16>::midpoint",
    "hash": "14982902827530940323812614085800526356"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u16>::reverse_bits",
    "hash": "380981747396719036215635617341525755183"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u16>::rotate_left",
    "hash": "28333492085599046221350323097616481851"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u16>::rotate_right",
    "hash": "168178850786223804155103255859066217"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u16>::saturating_add",
    "hash": "180743600590999034136431112945470041863"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u16>::saturating_mul",
    "hash": "27366983935750421706271569304275881920"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u16>::saturating_pow",
    "hash": "78489851357533824301750410847228838784"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u16>::swap_bytes",
    "hash": "1481272360724507197713146978688473296750"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u16>::to_be",
    "hash": "533627643710411743310337239238511384055"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u16>::to_le",
    "hash": "57635159657522072138052857995439351108"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u16>::trailing_zeros",
    "hash": "1093031436859930827616101638874804796243"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u16>::unchecked_add",
    "hash": "1316712312721062933411325497823844222428"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u16>::unchecked_mul",
    "hash": "111876663099551827457955865623130046483"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u32>::cast_signed",
    "hash": "67135386494543409286380537575960832043"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u32>::checked_add",
    "hash": "71842305878030606176213217513382561275"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u32>::checked_mul",
    "hash": "7674908986253503870916593426637616721"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u32>::checked_next_power_of_two",
    "hash": "87839962648998785233028432557202310793"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u32>::checked_pow",
    "hash": "1240413747752517969110158343291744442330"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u32>::count_ones",
    "hash": "819469652543186653810506336222276772180"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u32>::div_ceil",
    "hash": "1623416055278319131817065148029412108386"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u32>::from_be",
    "hash": "1833529271834650831514074672812007282515"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u32>::from_le",
    "hash": "173842997913355447392282681103627052461"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u32>::ilog10",
    "hash": "13200861926861155433454725473141352285"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u32>::ilog2",
    "hash": "4351768085184815982812196066421373754"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u32>::is_power_of_two",
    "hash": "51672030411098969232817055954085554070"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u32>::isolate_highest_one",
    "hash": "24608981884221580634803976925319062254"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u32>::isolate_lowest_one",
    "hash": "889792185392903680813332582964122651322"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u32>::isqrt",
    "hash": "93107076824103693143313273264142863484"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u32>::leading_zeros",
    "hash": "1487258291595747202616031786474416870229"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u32>::midpoint",
    "hash": "2718117333324636788816661397025485857"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u32>::reverse_bits",
    "hash": "695712170299186336013638479863894441216"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u32>::rotate_left",
    "hash": "93381775434254828884208196840275938177"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u32>::rotate_right",
    "hash": "25588199182540773765279870887827020724"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u32>::saturating_add",
    "hash": "152576761983573022293939076034419368419"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u32>::saturating_mul",
    "hash": "1136121512620704685111510067336850458312"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u32>::saturating_pow",
    "hash": "57125756404630221111839447414646370727"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u32>::swap_bytes",
    "hash": "51383615122780344317091815729025476945"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u32>::to_be",
    "hash": "115324671742219785668824155253261760824"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u32>::to_le",
    "hash": "565211075727623086716223214687560581611"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u32>::trailing_zeros",
    "hash": "1822554918409771617912306623422929612118"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u32>::unchecked_add",
    "hash": "130036084873019887854474381859672326629"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u32>::unchecked_mul",
    "hash": "130172284503228896317629197102690983521"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u64>::cast_signed",
    "hash": "772430007572578066812186707947548177027"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u64>::checked_add",
    "hash": "156572529475153228179621823428258456812"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u64>::checked_mul",
    "hash": "1833849119105109012315568922813465373467"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u64>::checked_next_power_of_two",
    "hash": "177050993551862269691670460584219574582"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u64>::checked_pow",
    "hash": "611176989297711230710400072974984216982"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u64>::count_ones",
    "hash": "1027682837691588695613302518190715484953"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u64>::div_ceil",
    "hash": "86706786532465468949891103372290997972"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u64>::from_be",
    "hash": "1023073104994086826915304331342157173857"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u64>::from_le",
    "hash": "105354688350337225447255758964203823354"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u64>::ilog10",
    "hash": "89998950012001735308587189284337397233"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u64>::ilog2",
    "hash": "42274409018925606558961704669734309883"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u64>::is_power_of_two",
    "hash": "1344108716828453117013097030695261457055"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u64>::isolate_highest_one",
    "hash": "13447828842156146130215874931048155596"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u64>::isolate_lowest_one",
    "hash": "60377127389430969975942073475453757728"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u64>::isqrt",
    "hash": "156063438603403244991955397223934281156"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u64>::leading_zeros",
    "hash": "159985777134777101965013862576764445897"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u64>::midpoint",
    "hash": "659390829933798959617209737924559075314"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u64>::reverse_bits",
    "hash": "303805777623992256114852747007392506121"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u64>::rotate_left",
    "hash": "10010753533042595980369181952718342463"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u64>::rotate_right",
    "hash": "113658170941601965226145868233658115452"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u64>::saturating_add",
    "hash": "177968819548894830117498443553416176095"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u64>::saturating_mul",
    "hash": "165987283369144614847171192728148677659"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u64>::saturating_pow",
    "hash": "183100618035700431281763847601463771339"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u64>::swap_bytes",
    "hash": "120744636838119099969114749258105377144"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u64>::to_be",
    "hash": "1440932184708988563912170274947245102806"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u64>::to_le",
    "hash": "84886936475016962219542842348115208923"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u64>::trailing_zeros",
    "hash": "197696496419621889013174185188703919205"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u64>::unchecked_add",
    "hash": "181813787300030613504433388350890955467"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u64>::unchecked_mul",
    "hash": "677659692767608147616521546760214358413"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u8>::cast_signed",
    "hash": "171599057436130338714755249969258859180"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u8>::checked_add",
    "hash": "67911939609313614492931977018168806823"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u8>::checked_mul",
    "hash": "1785950042515256711010324143550124666117"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u8>::checked_next_power_of_two",
    "hash": "95968349074629944448533020342810258758"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u8>::checked_pow",
    "hash": "19044344159891651064267831985403974670"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u8>::count_ones",
    "hash": "86973272922884221257491744417175214774"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u8>::div_ceil",
    "hash": "1369931620517127502615497375026059161083"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u8>::from_be",
    "hash": "104410457499065922638383785037805380799"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u8>::from_le",
    "hash": "424986022515677737110071459689661631076"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u8>::ilog10",
    "hash": "1563409792284493014715525090219884543097"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u8>::ilog2",
    "hash": "66692017018260264775412765548034297047"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u8>::is_power_of_two",
    "hash": "41276938369403885217595936832747010207"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u8>::isolate_highest_one",
    "hash": "138293450699610426502002931714047297126"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u8>::isolate_lowest_one",
    "hash": "332725321769665018810345513208519787058"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u8>::isqrt",
    "hash": "59981785417699487068963840664071181472"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u8>::leading_zeros",
    "hash": "4634430065954190478316177553793417607"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u8>::midpoint",
    "hash": "16123305079822137115764808303673214759"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u8>::reverse_bits",
    "hash": "13909895738156855333805827139202081516"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u8>::rotate_left",
    "hash": "47910687520140553343703816921974545114"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u8>::rotate_right",
    "hash": "185348269214978148110364750695706885655"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u8>::saturating_add",
    "hash": "126997197989441616932048494385435664373"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u8>::saturating_mul",
    "hash": "22327807917071248366444395136785650309"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u8>::saturating_pow",
    "hash": "146385402949468634129943781612768069660"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u8>::swap_bytes",
    "hash": "1780928707428977007317001681410399966788"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u8>::to_be",
    "hash": "63193734186777247026684861767609290271"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u8>::to_le",
    "hash": "165562980685752245818381184460088476863"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u8>::trailing_zeros",
    "hash": "668898296134176563117327544121769351210"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u8>::unchecked_add",
    "hash": "885270401928596298910243396243598321046"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u8>::unchecked_mul",
    "hash": "1263724414591359935116079180885405247105"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<usize>::cast_signed",
    "hash": "78008585878730354146292697658329659391"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<usize>::checked_add",
    "hash": "136580594566804038528714866105134886553"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<usize>::checked_mul",
    "hash": "107688862315689094187404118652433595409"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<usize>::checked_next_power_of_two",
    "hash": "462717744499674840616554714236345332011"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<usize>::checked_pow",
    "hash": "236290477931701838313273038565116975570"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<usize>::count_ones",
    "hash": "1147368995489192592111049898171732739577"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<usize>::div_ceil",
    "hash": "541742873594717179916814387769374332089"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<usize>::from_be",
    "hash": "51761123473802823346711853778868788320"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<usize>::from_le",
    "hash": "126980036220363248044391861093607570248"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<usize>::ilog10",
    "hash": "60423232345718433288371091436408885120"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<usize>::ilog2",
    "hash": "29146486097285943072997980051462331422"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<usize>::is_power_of_two",
    "hash": "754287840937905890217470830548976597425"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<usize>::isolate_highest_one",
    "hash": "44525007519402573615198828251953899876"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<usize>::isolate_lowest_one",
    "hash": "106413765817593025613246415731097909668"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<usize>::isqrt",
    "hash": "945453843982083403018274587422620938926"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<usize>::leading_zeros",
    "hash": "10935169124168190713897023636148712666"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<usize>::midpoint",
    "hash": "1492707409108379673917584743826329202736"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<usize>::reverse_bits",
    "hash": "118093632561640582686364361957159699638"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<usize>::rotate_left",
    "hash": "73292918654648406709270048824812613851"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<usize>::rotate_right",
    "hash": "736265628571179553216885056702286875138"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<usize>::saturating_add",
    "hash": "6129121747475953709337314001361425541"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<usize>::saturating_mul",
    "hash": "17050414808419926701351733889974373585"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<usize>::saturating_pow",
    "hash": "16275404558285587853546548336565264125"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<usize>::swap_bytes",
    "hash": "165911125825895123792690066160447319233"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<usize>::to_be",
    "hash": "1247403932745436339212591247427608089438"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<usize>::to_le",
    "hash": "104896470600610274976029338940749121751"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<usize>::trailing_zeros",
    "hash": "156185963129811750538793314210393617411"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<usize>::unchecked_add",
    "hash": "4811185948813981614152655479958572592"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<usize>::unchecked_mul",
    "hash": "36208522481666726873533581405696888777"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::check_mul_i128_edge_neg",
    "hash": "1253337682652110485214879282679038550285",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::check_mul_i128_edge_pos",
    "hash": "813217000473834103912608009337994157018",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::check_mul_i128_large_neg",
    "hash": "17024543378937405863499183561526923329",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::check_mul_i128_large_pos",
    "hash": "664059893166077086318237631366274238953",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::check_mul_i128_small",
    "hash": "593661234394232866618356690334649627472",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::check_mul_i32_edge_neg",
    "hash": "18085191742927492739205514858455668469",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::check_mul_i32_edge_pos",
    "hash": "145816774574559609004697952390739806358",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::check_mul_i32_large_neg",
    "hash": "42807743668521923179754436293227443535",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::check_mul_i32_large_pos",
    "hash": "1611123542721402090812687205169891497653",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::check_mul_i32_small",
    "hash": "161182038864726262965514335407232247500",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::check_mul_i64_edge_neg",
    "hash": "14949517367149388925370981419739177255",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::check_mul_i64_edge_pos",
    "hash": "70428692387758755383620377915132735230",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::check_mul_i64_large_neg",
    "hash": "14785416419414691029045357117192609583",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::check_mul_i64_large_pos",
    "hash": "1792602743282481740713098357443493791366",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::check_mul_i64_small",
    "hash": "1187591465137866452816868925520445827583",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::check_mul_isize_edge_neg",
    "hash": "66088189661441371028029439597331628469",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::check_mul_isize_edge_pos",
    "hash": "116547997180415914453965787132200648713",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::check_mul_isize_large_neg",
    "hash": "13420847011717385165700840989175474419",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::check_mul_isize_large_pos",
    "hash": "134142172935790583409928674028024605549",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::check_mul_isize_small",
    "hash": "128794058609910278932923359717122647857",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::check_mul_u128_edge",
    "hash": "1245669910679030839514123349002864665753",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::check_mul_u128_large",
    "hash": "30018112531651380243189105189341266237",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::check_mul_u128_small",
    "hash": "415543571659677293512326115873378296253",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::check_mul_u32_edge",
    "hash": "1592225142608623839011610924990841476558",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::check_mul_u32_large",
    "hash": "157822656862906865093444562215479228907",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::check_mul_u32_small",
    "hash": "11003242579508438819983464670294170004",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::check_mul_u64_edge",
    "hash": "1114385443031231526917438322733741337381",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::check_mul_u64_large",
    "hash": "1347503628214630102818267843588390953741",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::check_mul_u64_small",
    "hash": "1397938405543767044214957961153304127769",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::check_mul_usize_edge",
    "hash": "93202332365787775215146657967565475198",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::check_mul_usize_large",
    "hash": "11674564402934857532579714588536247069",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::check_mul_usize_small",
    "hash": "122465686652899081501246930849532270747",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_clamp_for_128",
    "hash": "978295691529972615710777105771473784193",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_clamp_for_16",
    "hash": "148521227385928977854949383196325023275",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_clamp_for_32",
    "hash": "1145870437337246005016720553993505737854",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_clamp_for_64",
    "hash": "772272989801635651810226858123665996364",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_clamp_for_i8",
    "hash": "1363551677989618764213199786058720677202",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_clamp_for_isize",
    "hash": "6287460999193683614637808761680806141",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_clamp_for_u128",
    "hash": "638162007188815012310501740795034625527",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_clamp_for_u16",
    "hash": "465264439809250720314966166781016492334",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_clamp_for_u32",
    "hash": "1437306861033862795913160065099207500055",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_clamp_for_u64",
    "hash": "36898902459745881086201580856370610350",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_clamp_for_u8",
    "hash": "529038900862472448614209277263510152201",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_clamp_for_usize",
    "hash": "40190814296089539907264742264715205545",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_clamp_panic_for_128",
    "hash": "2096152872340196991139797838705336618",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_clamp_panic_for_16",
    "hash": "1516581429653441056412679273251509110280",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_clamp_panic_for_32",
    "hash": "176048671937233592502882171011150360094",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_clamp_panic_for_64",
    "hash": "12133500521057328717429606056245672151",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_clamp_panic_for_i8",
    "hash": "111472461963443071413741187336624452194",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_clamp_panic_for_isize",
    "hash": "526648440799983381415148840789894895676",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_clamp_panic_for_u128",
    "hash": "64783334219660446077720823894486904125",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_clamp_panic_for_u16",
    "hash": "167169132798539458362815820444062178918",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_clamp_panic_for_u32",
    "hash": "1385451632486911145711980961573356756253",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_clamp_panic_for_u64",
    "hash": "820691958240120011511949793389494687466",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_clamp_panic_for_u8",
    "hash": "176568504412158112481067814985869547953",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_clamp_panic_for_usize",
    "hash": "145957964533382946248195308212081371566",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_cmp_for_i128",
    "hash": "433846233727625957518333680386655208196",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_cmp_for_i16",
    "hash": "1588918479777377761511541463727692780943",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_cmp_for_i32",
    "hash": "58763770892653697591450906592803667271",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_cmp_for_i64",
    "hash": "111699851436063087216332335628790846145",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_cmp_for_i8",
    "hash": "1480863019375749954610431919957236498567",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_cmp_for_isize",
    "hash": "5163554340154637132144927911319255441",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_cmp_for_u128",
    "hash": "41014155113201264310220175318984427483",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_cmp_for_u16",
    "hash": "61186031386950123914407122427512487395",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_cmp_for_u32",
    "hash": "40219519316542203159978383842786600303",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_cmp_for_u64",
    "hash": "1037533731165525016017738260254014485885",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_cmp_for_u8",
    "hash": "143890643928619152386582719290793902459",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_cmp_for_usize",
    "hash": "1269523272168021231315909973562941075527",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_from_mut_unchecked_i128",
    "hash": "914689153938437320892870126028664398",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_from_mut_unchecked_i16",
    "hash": "1810366007005092970312498581151830877499",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_from_mut_unchecked_i32",
    "hash": "943081337850089776816593901224853516528",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_from_mut_unchecked_i64",
    "hash": "11028896280341833502805092072897428529",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_from_mut_unchecked_i8",
    "hash": "1169326130978060877913072685300282891579",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_from_mut_unchecked_isize",
    "hash": "70045512948989007511882379779217046989",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_from_mut_unchecked_u128",
    "hash": "876190431336195095217253076845020688349",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_from_mut_unchecked_u16",
    "hash": "364900448114200566416808355689112320546",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_from_mut_unchecked_u32",
    "hash": "38445675184968450014948800187666127813",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_from_mut_unchecked_u64",
    "hash": "40572586377044279112045628462450933168",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_from_mut_unchecked_u8",
    "hash": "7578806577025381966449093594442148720",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_from_mut_unchecked_usize",
    "hash": "221499258913740633311331170326522676644",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_max_for_i128",
    "hash": "1688470677847394664115785622605415745586",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_max_for_i16",
    "hash": "17192073611986051654176760013207331451",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_max_for_i32",
    "hash": "122717505136635367731181465995291569644",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_max_for_i64",
    "hash": "183693185292491038955088959024069041229",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_max_for_i8",
    "hash": "62379603888527556857010123629183336447",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_max_for_isize",
    "hash": "1050872999595700449712490649532210135295",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_max_for_u128",
    "hash": "1046143822979047377716252160397691562416",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_max_for_u16",
    "hash": "1671613465996985972615732896288931716535",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_max_for_u32",
    "hash": "1844097684735696196915276681469700166583",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_max_for_u64",
    "hash": "120491386160550325323277635227403444837",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_max_for_u8",
    "hash": "71037317680949706992815723264605371593",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_max_for_usize",
    "hash": "1139649629437915013410160240048636875920",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_min_for_i128",
    "hash": "74314497467502229278328685264811654534",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_min_for_i16",
    "hash": "54141096722457674949819195553185604631",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_min_for_i32",
    "hash": "619137530099377701716587538608607947577",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_min_for_i64",
    "hash": "148080742852250417512333166221626769085",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_min_for_i8",
    "hash": "916661957844428547711378286308117074817",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_min_for_isize",
    "hash": "720542486258543101912933730116019325108",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_min_for_u128",
    "hash": "145426091552482389733326105608142479450",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_min_for_u16",
    "hash": "7803283403561438242537976701416006098",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_min_for_u32",
    "hash": "64807897293011220501632716140509631310",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_min_for_u64",
    "hash": "12017335598515125920772958819696542251",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_min_for_u8",
    "hash": "87330940046732133097170865434988557779",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_min_for_usize",
    "hash": "722969831619354407415950930416731123408",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_mul_for_i16",
    "hash": "124918164352406532859394325572328407871",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_mul_for_i8",
    "hash": "165513069192932929456601957563391047969",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_mul_for_u16",
    "hash": "30452445456592208414891735527462969355",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_mul_for_u8",
    "hash": "1079605945104515581017580310539159472328",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_new_unchecked_for_128",
    "hash": "805145977795735074516306880321097974434",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_new_unchecked_for_16",
    "hash": "32094761970704021931719020056251299641",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_new_unchecked_for_32",
    "hash": "395994644281978768810680776831321897252",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_new_unchecked_for_64",
    "hash": "138066586257967660938986140733959534639",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_new_unchecked_for_i8",
    "hash": "15579414236798561794998135810148132280",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_new_unchecked_for_isize",
    "hash": "16259504769628895916516428020459992687",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_new_unchecked_for_u128",
    "hash": "1327265872421780932412220965881542219685",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_new_unchecked_for_u16",
    "hash": "1344876832478981024713537805930585442385",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_new_unchecked_for_u32",
    "hash": "284056394954523328912931644401395494655",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_new_unchecked_for_u64",
    "hash": "147272766308520914344001814144070487849",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_new_unchecked_for_u8",
    "hash": "750347018674327123817555117183934743496",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_new_unchecked_for_usize",
    "hash": "158777375578944169176233613817279446392",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_unchecked_add_for_u128",
    "hash": "316965731982252426215408419921514628040",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_unchecked_add_for_u16",
    "hash": "119769613725562983914195894472807896939",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_unchecked_add_for_u32",
    "hash": "33882310872943750922288355875364815831",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_unchecked_add_for_u64",
    "hash": "939592193371514857714686037000561148678",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_unchecked_add_for_u8",
    "hash": "1336917949381104336316817028028382100038",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_unchecked_add_for_usize",
    "hash": "1685612557893617717913305145137423755042",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/overflow_panic.rs",
    "func": "num::overflow_panic::add",
    "hash": "270094252999170086311546006733242136440"
  },
  {
    "crate": "core",
    "file": "core/src/num/overflow_panic.rs",
    "func": "num::overflow_panic::div",
    "hash": "67963160296914708992676158558620209435"
  },
  {
    "crate": "core",
    "file": "core/src/num/overflow_panic.rs",
    "func": "num::overflow_panic::mul",
    "hash": "47545376251115509438487578943349168811"
  },
  {
    "crate": "core",
    "file": "core/src/num/overflow_panic.rs",
    "func": "num::overflow_panic::neg",
    "hash": "95725412220846309792794332117021318440"
  },
  {
    "crate": "core",
    "file": "core/src/num/overflow_panic.rs",
    "func": "num::overflow_panic::rem",
    "hash": "576888632633011791815712311345027209426"
  },
  {
    "crate": "core",
    "file": "core/src/num/overflow_panic.rs",
    "func": "num::overflow_panic::shl",
    "hash": "290609851857017803814021177754696512679"
  },
  {
    "crate": "core",
    "file": "core/src/num/overflow_panic.rs",
    "func": "num::overflow_panic::shr",
    "hash": "13595682241019900114812996569480761291"
  },
  {
    "crate": "core",
    "file": "core/src/num/overflow_panic.rs",
    "func": "num::overflow_panic::sub",
    "hash": "1639242911298951059017350988889133653325"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i128> as ops::arith::Add>::add",
    "hash": "1264328011817614746317846510673020289164"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i128> as ops::arith::AddAssign<i128>>::add_assign",
    "hash": "86982602179206637251822676719336500234"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i128> as ops::arith::AddAssign>::add_assign",
    "hash": "1201821214966440715217741192536008760645"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i128> as ops::arith::Div>::div",
    "hash": "6432290923040788383694952148829414374"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i128> as ops::arith::DivAssign<i128>>::div_assign",
    "hash": "163766907433032383513250224738978204025"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i128> as ops::arith::DivAssign>::div_assign",
    "hash": "329128873266845530115750254844870234404"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i128> as ops::arith::Mul>::mul",
    "hash": "407277013053505902614732955339579777988"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i128> as ops::arith::MulAssign<i128>>::mul_assign",
    "hash": "123789516308059742369935868506709374990"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i128> as ops::arith::MulAssign>::mul_assign",
    "hash": "954609141775281034716368098667193179104"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i128> as ops::arith::Neg>::neg",
    "hash": "42148445131228373911979907022389341252"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i128> as ops::arith::Rem>::rem",
    "hash": "725661364241764510414436654182374033710"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i128> as ops::arith::RemAssign<i128>>::rem_assign",
    "hash": "6896775107684531111165470572532221766"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i128> as ops::arith::RemAssign>::rem_assign",
    "hash": "576059748821367451310239166158572681822"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i128> as ops::arith::Sub>::sub",
    "hash": "48685802360473201935061526301857290143"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i128> as ops::arith::SubAssign<i128>>::sub_assign",
    "hash": "136396161273016057683522008630850492759"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i128> as ops::arith::SubAssign>::sub_assign",
    "hash": "25650523036401210553897548029077390264"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i128> as ops::bit::BitAnd>::bitand",
    "hash": "112689637894070681818041031796651266578"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i128> as ops::bit::BitAndAssign<i128>>::bitand_assign",
    "hash": "180839445639474579154187947936936909801"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i128> as ops::bit::BitAndAssign>::bitand_assign",
    "hash": "1005065435463336548316671876825414129870"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i128> as ops::bit::BitOr>::bitor",
    "hash": "664471231493710923716024452433039300926"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i128> as ops::bit::BitOrAssign<i128>>::bitor_assign",
    "hash": "1366151615913774976816784035783108792323"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i128> as ops::bit::BitOrAssign>::bitor_assign",
    "hash": "317389162578398910614380376071048521018"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i128> as ops::bit::BitXor>::bitxor",
    "hash": "4657223981787872098926240321606353643"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i128> as ops::bit::BitXorAssign<i128>>::bitxor_assign",
    "hash": "1174689227565116327915030858865663094055"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i128> as ops::bit::BitXorAssign>::bitxor_assign",
    "hash": "76418697306163953415481981516508561063"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i128> as ops::bit::Not>::not",
    "hash": "14257280226559481513428087224111938062"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i16> as ops::arith::Add>::add",
    "hash": "10985432406942975073522089769728422255"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i16> as ops::arith::AddAssign<i16>>::add_assign",
    "hash": "152349555429286119847983534815401779135"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i16> as ops::arith::AddAssign>::add_assign",
    "hash": "144375936922632047757171093524698359264"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i16> as ops::arith::Div>::div",
    "hash": "1586128218233062427616731332372657748142"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i16> as ops::arith::DivAssign<i16>>::div_assign",
    "hash": "47184953529896515417662489137249765554"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i16> as ops::arith::DivAssign>::div_assign",
    "hash": "1479373039647724714914018937458201327939"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i16> as ops::arith::Mul>::mul",
    "hash": "7754184422193698785167159241076428491"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i16> as ops::arith::MulAssign<i16>>::mul_assign",
    "hash": "87670169113711029515413374817509563720"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i16> as ops::arith::MulAssign>::mul_assign",
    "hash": "132836589675413701816747451526105745904"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i16> as ops::arith::Neg>::neg",
    "hash": "199940216313876311712031600162147471720"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i16> as ops::arith::Rem>::rem",
    "hash": "580803229855345075217178743595409535037"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i16> as ops::arith::RemAssign<i16>>::rem_assign",
    "hash": "1503122116294145699215710016138118307815"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i16> as ops::arith::RemAssign>::rem_assign",
    "hash": "1442423546811912477314312439775290835910"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i16> as ops::arith::Sub>::sub",
    "hash": "1784291067292909082018275504225591856461"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i16> as ops::arith::SubAssign<i16>>::sub_assign",
    "hash": "75569061307433179035212034011948830339"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i16> as ops::arith::SubAssign>::sub_assign",
    "hash": "79594638236989686313267931047280317898"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i16> as ops::bit::BitAnd>::bitand",
    "hash": "68676909200611059608436265242964053191"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i16> as ops::bit::BitAndAssign<i16>>::bitand_assign",
    "hash": "124632122638995403376991625114027808200"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i16> as ops::bit::BitAndAssign>::bitand_assign",
    "hash": "86068400220750383925586692112881039873"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i16> as ops::bit::BitOr>::bitor",
    "hash": "6560618631039101501879811885450006311"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i16> as ops::bit::BitOrAssign<i16>>::bitor_assign",
    "hash": "1002239686355854454312468351174326473904"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i16> as ops::bit::BitOrAssign>::bitor_assign",
    "hash": "1494909273996762514711006700662495288950"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i16> as ops::bit::BitXor>::bitxor",
    "hash": "28531773803664160447372708647914665818"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i16> as ops::bit::BitXorAssign<i16>>::bitxor_assign",
    "hash": "173846927512796458866169091708923653226"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i16> as ops::bit::BitXorAssign>::bitxor_assign",
    "hash": "604690279249440870916610422974482177935"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i16> as ops::bit::Not>::not",
    "hash": "33150922616999120712296583629028864124"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i32> as ops::arith::Add>::add",
    "hash": "8920197819259524668995789325079898028"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i32> as ops::arith::AddAssign<i32>>::add_assign",
    "hash": "605373126469072523415892535748065347832"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i32> as ops::arith::AddAssign>::add_assign",
    "hash": "1155294328384753086817803913783341960671"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i32> as ops::arith::Div>::div",
    "hash": "836657284752129913011952586767487606559"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i32> as ops::arith::DivAssign<i32>>::div_assign",
    "hash": "14712624651240228857948632335011131658"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i32> as ops::arith::DivAssign>::div_assign",
    "hash": "117188931900771195492893890267259593915"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i32> as ops::arith::Mul>::mul",
    "hash": "170101087656763861978306691897521910895"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i32> as ops::arith::MulAssign<i32>>::mul_assign",
    "hash": "7462729556187040632116798600588241752"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i32> as ops::arith::MulAssign>::mul_assign",
    "hash": "671037501282522570913787167805493601695"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i32> as ops::arith::Neg>::neg",
    "hash": "113012939923611998025081508008911992854"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i32> as ops::arith::Rem>::rem",
    "hash": "81361426740406679887776825433487098470"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i32> as ops::arith::RemAssign<i32>>::rem_assign",
    "hash": "114915236949282391261100920593488524299"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i32> as ops::arith::RemAssign>::rem_assign",
    "hash": "994879733343081357818212003147712407814"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i32> as ops::arith::Sub>::sub",
    "hash": "1058145162610428085913222125629077979146"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i32> as ops::arith::SubAssign<i32>>::sub_assign",
    "hash": "128516473684809228504441074069986708810"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i32> as ops::arith::SubAssign>::sub_assign",
    "hash": "452918096543614044811816014839969285235"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i32> as ops::bit::BitAnd>::bitand",
    "hash": "1223943357166249719511439391157780756867"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i32> as ops::bit::BitAndAssign<i32>>::bitand_assign",
    "hash": "115650805876771533110374333478716684110"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i32> as ops::bit::BitAndAssign>::bitand_assign",
    "hash": "1669234676955152556815099993377148032931"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i32> as ops::bit::BitOr>::bitor",
    "hash": "1158791350173689789312889677248124050530"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i32> as ops::bit::BitOrAssign<i32>>::bitor_assign",
    "hash": "36179617101540939815781068824402466904"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i32> as ops::bit::BitOrAssign>::bitor_assign",
    "hash": "261625584777147881917998995785488552613"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i32> as ops::bit::BitXor>::bitxor",
    "hash": "8317326120228508895951765230472097020"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i32> as ops::bit::BitXorAssign<i32>>::bitxor_assign",
    "hash": "14737205037549796182155873303204857044"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i32> as ops::bit::BitXorAssign>::bitxor_assign",
    "hash": "695052899189180491314749928134345487372"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i32> as ops::bit::Not>::not",
    "hash": "7989041938924995513679076086127169568"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i64> as ops::arith::Add>::add",
    "hash": "504256366582669247313137951219480811401"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i64> as ops::arith::AddAssign<i64>>::add_assign",
    "hash": "1641003594825038440812166952859488279402"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i64> as ops::arith::AddAssign>::add_assign",
    "hash": "1552231050980972865818249824402160300666"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i64> as ops::arith::Div>::div",
    "hash": "73071403728605068238020495542838911062"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i64> as ops::arith::DivAssign<i64>>::div_assign",
    "hash": "340588114963629475013055830847399753447"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i64> as ops::arith::DivAssign>::div_assign",
    "hash": "990490747626240975116328429396770830981"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i64> as ops::arith::Mul>::mul",
    "hash": "83306830425677652812952501408280409839"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i64> as ops::arith::MulAssign<i64>>::mul_assign",
    "hash": "86059408817302663228579400213935626165"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i64> as ops::arith::MulAssign>::mul_assign",
    "hash": "27313529952653174625032949407372142048"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i64> as ops::arith::Neg>::neg",
    "hash": "130091916373217805453239794151647916181"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i64> as ops::arith::Rem>::rem",
    "hash": "123993534919452612984210207038206837949"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i64> as ops::arith::RemAssign<i64>>::rem_assign",
    "hash": "17797570851676764118730219740443324311"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i64> as ops::arith::RemAssign>::rem_assign",
    "hash": "538778232351159239417920821991696057325"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i64> as ops::arith::Sub>::sub",
    "hash": "881877706207361941016993333837534517407"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i64> as ops::arith::SubAssign<i64>>::sub_assign",
    "hash": "51904802122741607715171957387196122250"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i64> as ops::arith::SubAssign>::sub_assign",
    "hash": "14473008183747727149902997928961901503"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i64> as ops::bit::BitAnd>::bitand",
    "hash": "430220839640623946012514903758435134269"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i64> as ops::bit::BitAndAssign<i64>>::bitand_assign",
    "hash": "50050139546550781962330129991119971012"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i64> as ops::bit::BitAndAssign>::bitand_assign",
    "hash": "1171904650851201155812484701192591947653"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i64> as ops::bit::BitOr>::bitor",
    "hash": "1741028789520803688012772097878559775953"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i64> as ops::bit::BitOrAssign<i64>>::bitor_assign",
    "hash": "542753133195547367314919090959395449144"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i64> as ops::bit::BitOrAssign>::bitor_assign",
    "hash": "1799758100981330944111454993527481801383"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i64> as ops::bit::BitXor>::bitxor",
    "hash": "119676810172087891112184671145004506997"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i64> as ops::bit::BitXorAssign<i64>>::bitxor_assign",
    "hash": "125397691825425483567149667072803449607"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i64> as ops::bit::BitXorAssign>::bitxor_assign",
    "hash": "6882678327024598078545084045736118991"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i64> as ops::bit::Not>::not",
    "hash": "85716764613433684109592385405652622884"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i8> as ops::arith::Add>::add",
    "hash": "167072484506600438482893913651204500022"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i8> as ops::arith::AddAssign<i8>>::add_assign",
    "hash": "141290520861072142328386976533249251741"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i8> as ops::arith::AddAssign>::add_assign",
    "hash": "307307299159218675712353471934605670049"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i8> as ops::arith::Div>::div",
    "hash": "1034229596189548054013102509093353593695"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i8> as ops::arith::DivAssign<i8>>::div_assign",
    "hash": "142478758424683893744846648075046427928"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i8> as ops::arith::DivAssign>::div_assign",
    "hash": "64798322858637425133732858859383748867"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i8> as ops::arith::Mul>::mul",
    "hash": "120989316568420216074165653436770213155"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i8> as ops::arith::MulAssign<i8>>::mul_assign",
    "hash": "28032005760469626110290608524631564636"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i8> as ops::arith::MulAssign>::mul_assign",
    "hash": "222875370466047719513414934907564752475"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i8> as ops::arith::Neg>::neg",
    "hash": "1727122715539663653418063954844900862179"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i8> as ops::arith::Rem>::rem",
    "hash": "172483105545072792588808385969065140283"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i8> as ops::arith::RemAssign<i8>>::rem_assign",
    "hash": "23924202910612669977018890021429912121"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i8> as ops::arith::RemAssign>::rem_assign",
    "hash": "987986237686540618210739611997649398496"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i8> as ops::arith::Sub>::sub",
    "hash": "488487250832756517497371829613366792"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i8> as ops::arith::SubAssign<i8>>::sub_assign",
    "hash": "1178029834025744188412882525691052067807"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i8> as ops::arith::SubAssign>::sub_assign",
    "hash": "136711800643334777223024088168773081032"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i8> as ops::bit::BitAnd>::bitand",
    "hash": "120040541723310922663127744680371675733"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i8> as ops::bit::BitAndAssign<i8>>::bitand_assign",
    "hash": "174373231941977968551294842243898210942"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i8> as ops::bit::BitAndAssign>::bitand_assign",
    "hash": "182308689838162974274636082998632962174"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i8> as ops::bit::BitOr>::bitor",
    "hash": "173310288998783227841199457416240009874"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i8> as ops::bit::BitOrAssign<i8>>::bitor_assign",
    "hash": "24333261465511325728677826511355662508"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i8> as ops::bit::BitOrAssign>::bitor_assign",
    "hash": "88884506165820089094039140593592411535"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i8> as ops::bit::BitXor>::bitxor",
    "hash": "121938285601185420416720818326313408232"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i8> as ops::bit::BitXorAssign<i8>>::bitxor_assign",
    "hash": "99253523688733029893035320602279011524"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i8> as ops::bit::BitXorAssign>::bitxor_assign",
    "hash": "954714291666907708411926846888241435558"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i8> as ops::bit::Not>::not",
    "hash": "1260245880560005280514854108128030361810"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<isize> as ops::arith::Add>::add",
    "hash": "1724489254302905625911061335243550987013"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<isize> as ops::arith::AddAssign<isize>>::add_assign",
    "hash": "123709005214043441562047567521261518948"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<isize> as ops::arith::AddAssign>::add_assign",
    "hash": "968045849628010350714560386786189577221"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<isize> as ops::arith::Div>::div",
    "hash": "550618484178392242211554584248434317760"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<isize> as ops::arith::DivAssign<isize>>::div_assign",
    "hash": "294003296876064425511372377034449127674"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<isize> as ops::arith::DivAssign>::div_assign",
    "hash": "126537502379775700268902088020116719071"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<isize> as ops::arith::Mul>::mul",
    "hash": "42232533298794669994451250164818630163"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<isize> as ops::arith::MulAssign<isize>>::mul_assign",
    "hash": "109342376364468873795338538523556883904"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<isize> as ops::arith::MulAssign>::mul_assign",
    "hash": "1768572641011040462912961161500472650991"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<isize> as ops::arith::Neg>::neg",
    "hash": "155195210814968346122590542964035695109"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<isize> as ops::arith::Rem>::rem",
    "hash": "1170205526293737731315496598348217917058"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<isize> as ops::arith::RemAssign<isize>>::rem_assign",
    "hash": "78736189317852783855634457757635013135"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<isize> as ops::arith::RemAssign>::rem_assign",
    "hash": "160771921491885592984088129821889178365"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<isize> as ops::arith::Sub>::sub",
    "hash": "14706747628304910412462648277389198983"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<isize> as ops::arith::SubAssign<isize>>::sub_assign",
    "hash": "410490050324787942111979281815851594530"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<isize> as ops::arith::SubAssign>::sub_assign",
    "hash": "1744757577946347570612495705009736759833"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<isize> as ops::bit::BitAnd>::bitand",
    "hash": "1681421942559540802811198372990989621743"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<isize> as ops::bit::BitAndAssign<isize>>::bitand_assign",
    "hash": "106984733469549814414434476623475354720"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<isize> as ops::bit::BitAndAssign>::bitand_assign",
    "hash": "145133691450986387222953063890009874487"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<isize> as ops::bit::BitOr>::bitor",
    "hash": "59336292429018908667541546552253011925"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<isize> as ops::bit::BitOrAssign<isize>>::bitor_assign",
    "hash": "118098829142139524968843479829962154292"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<isize> as ops::bit::BitOrAssign>::bitor_assign",
    "hash": "158297165152863298972507755748784956070"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<isize> as ops::bit::BitXor>::bitxor",
    "hash": "852099184564305229012673667899996753633"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<isize> as ops::bit::BitXorAssign<isize>>::bitxor_assign",
    "hash": "76507426608070709785486875262340311447"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<isize> as ops::bit::BitXorAssign>::bitxor_assign",
    "hash": "68636731808608660496849657709955460470"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<isize> as ops::bit::Not>::not",
    "hash": "26089937717852784501309896552897113353"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u128> as ops::arith::Add>::add",
    "hash": "51181737837784010696675086379410034003"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u128> as ops::arith::AddAssign<u128>>::add_assign",
    "hash": "129226486774996634844345724856050776422"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u128> as ops::arith::AddAssign>::add_assign",
    "hash": "1232749212846639045353836275434558177"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u128> as ops::arith::Div>::div",
    "hash": "987593083396549227813242135144260583052"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u128> as ops::arith::DivAssign<u128>>::div_assign",
    "hash": "1595769120298867296313269644800560535567"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u128> as ops::arith::DivAssign>::div_assign",
    "hash": "87352371953388320535989078158411995274"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u128> as ops::arith::Mul>::mul",
    "hash": "154955230643347704811964390825026917122"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u128> as ops::arith::MulAssign<u128>>::mul_assign",
    "hash": "302652618334911797814677876929339815885"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u128> as ops::arith::MulAssign>::mul_assign",
    "hash": "36666411011193442807696178024176643313"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u128> as ops::arith::Rem>::rem",
    "hash": "139832724426137660029775100117688138452"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u128> as ops::arith::RemAssign<u128>>::rem_assign",
    "hash": "257801234077984269810686821743867930904"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u128> as ops::arith::RemAssign>::rem_assign",
    "hash": "1688056261265940004711326914049521530164"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u128> as ops::arith::Sub>::sub",
    "hash": "767385308939391322313250636999012961575"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u128> as ops::arith::SubAssign<u128>>::sub_assign",
    "hash": "59258722058939060438550930473098685764"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u128> as ops::arith::SubAssign>::sub_assign",
    "hash": "213204223390823496013671814767800033165"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u128> as ops::bit::BitAnd>::bitand",
    "hash": "155268622902291845301382179035528416524"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u128> as ops::bit::BitAndAssign<u128>>::bitand_assign",
    "hash": "93412924435771172589232459633473541683"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u128> as ops::bit::BitAndAssign>::bitand_assign",
    "hash": "1047295449275823059114580056154942427979"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u128> as ops::bit::BitOr>::bitor",
    "hash": "507508192995177284717897930319471898684"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u128> as ops::bit::BitOrAssign<u128>>::bitor_assign",
    "hash": "174492083799701036944062127174462857160"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u128> as ops::bit::BitOrAssign>::bitor_assign",
    "hash": "85726912377228827726498562405658830106"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u128> as ops::bit::BitXor>::bitxor",
    "hash": "121551437440505361909003451077036139052"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u128> as ops::bit::BitXorAssign<u128>>::bitxor_assign",
    "hash": "110273315594138898516834316082758270784"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u128> as ops::bit::BitXorAssign>::bitxor_assign",
    "hash": "1829415594370468598410457374297872098075"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u128> as ops::bit::Not>::not",
    "hash": "70205176250159643987317936465420660485"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u16> as ops::arith::Add>::add",
    "hash": "102377530408686361824535548037580329586"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u16> as ops::arith::AddAssign<u16>>::add_assign",
    "hash": "823463393043253229616915317936758570707"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u16> as ops::arith::AddAssign>::add_assign",
    "hash": "1806062345624281866714922694391199835182"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u16> as ops::arith::Div>::div",
    "hash": "91585032303662651464739802217945265806"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u16> as ops::arith::DivAssign<u16>>::div_assign",
    "hash": "69661230775737513019756220485733200533"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u16> as ops::arith::DivAssign>::div_assign",
    "hash": "1337264760633289549515184411519164853364"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u16> as ops::arith::Mul>::mul",
    "hash": "7820625552677075708702769261335186218"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u16> as ops::arith::MulAssign<u16>>::mul_assign",
    "hash": "872823679455062980513967142932722641153"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u16> as ops::arith::MulAssign>::mul_assign",
    "hash": "659844958979415878816646142233721919418"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u16> as ops::arith::Rem>::rem",
    "hash": "451679007339863275528469281380536542"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u16> as ops::arith::RemAssign<u16>>::rem_assign",
    "hash": "18700013504608206687000702938552987726"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u16> as ops::arith::RemAssign>::rem_assign",
    "hash": "162831086167417885765689435798307101969"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u16> as ops::arith::Sub>::sub",
    "hash": "71729199679586484615453483396341221618"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u16> as ops::arith::SubAssign<u16>>::sub_assign",
    "hash": "93696424493948396274077985191361451392"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u16> as ops::arith::SubAssign>::sub_assign",
    "hash": "1187593468254203798810798137236946966001"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u16> as ops::bit::BitAnd>::bitand",
    "hash": "10272008846802581161102549298531430492"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u16> as ops::bit::BitAndAssign<u16>>::bitand_assign",
    "hash": "64003400602911569221791713286224017456"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u16> as ops::bit::BitAndAssign>::bitand_assign",
    "hash": "4290741303233683087238193701091571869"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u16> as ops::bit::BitOr>::bitor",
    "hash": "1530018892867449426617084924665345281070"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u16> as ops::bit::BitOrAssign<u16>>::bitor_assign",
    "hash": "1516695620063805844414429894593739768966"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u16> as ops::bit::BitOrAssign>::bitor_assign",
    "hash": "255908697593386542014673942873535117473"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u16> as ops::bit::BitXor>::bitxor",
    "hash": "27423942645237754715771983247097115628"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u16> as ops::bit::BitXorAssign<u16>>::bitxor_assign",
    "hash": "8240908548424509372475176213480472574"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u16> as ops::bit::BitXorAssign>::bitxor_assign",
    "hash": "128563967089040133546156076871387026186"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u16> as ops::bit::Not>::not",
    "hash": "807007526343701159412307444626528767962"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u32> as ops::arith::Add>::add",
    "hash": "459370482607281280312618438820604599845"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u32> as ops::arith::AddAssign<u32>>::add_assign",
    "hash": "21723055509069059797144441468738192323"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u32> as ops::arith::AddAssign>::add_assign",
    "hash": "600605476277649129917614424609383107178"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u32> as ops::arith::Div>::div",
    "hash": "11058622424648733776562265804629210898"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u32> as ops::arith::DivAssign<u32>>::div_assign",
    "hash": "1345614851131217704712418500546177547647"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u32> as ops::arith::DivAssign>::div_assign",
    "hash": "1233066644859392336413699902202101660873"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u32> as ops::arith::Mul>::mul",
    "hash": "799098969787227402413812062248073206518"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u32> as ops::arith::MulAssign<u32>>::mul_assign",
    "hash": "757265957786001923611785674352283806269"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u32> as ops::arith::MulAssign>::mul_assign",
    "hash": "104455052715885883396351698861330154169"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u32> as ops::arith::Rem>::rem",
    "hash": "141757913438153618097978561807691065179"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u32> as ops::arith::RemAssign<u32>>::rem_assign",
    "hash": "1366193571432269117212574334491650306094"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u32> as ops::arith::RemAssign>::rem_assign",
    "hash": "130626355683335040839557240605155052925"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u32> as ops::arith::Sub>::sub",
    "hash": "40676805590717975016899868153224119508"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u32> as ops::arith::SubAssign<u32>>::sub_assign",
    "hash": "559949851695397263910474415966713980427"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u32> as ops::arith::SubAssign>::sub_assign",
    "hash": "179079312978057394466644765140841569547"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u32> as ops::bit::BitAnd>::bitand",
    "hash": "25752917381466925773801792006642275012"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u32> as ops::bit::BitAndAssign<u32>>::bitand_assign",
    "hash": "98419484071621839057372624187133492782"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u32> as ops::bit::BitAndAssign>::bitand_assign",
    "hash": "95184464776930850016714763221879982964"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u32> as ops::bit::BitOr>::bitor",
    "hash": "1143250464226404546614432804101429114229"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u32> as ops::bit::BitOrAssign<u32>>::bitor_assign",
    "hash": "116127695462832509721552666664932047903"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u32> as ops::bit::BitOrAssign>::bitor_assign",
    "hash": "183792877715393365405145814222811612425"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u32> as ops::bit::BitXor>::bitxor",
    "hash": "784762428489493981411789901870509832084"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u32> as ops::bit::BitXorAssign<u32>>::bitxor_assign",
    "hash": "948904711235517571818343408157498966477"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u32> as ops::bit::BitXorAssign>::bitxor_assign",
    "hash": "111780486176906605782838118976222976302"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u32> as ops::bit::Not>::not",
    "hash": "869701641900912846813522861207625951071"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u64> as ops::arith::Add>::add",
    "hash": "9575165391475583804460359367543382186"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u64> as ops::arith::AddAssign<u64>>::add_assign",
    "hash": "8180459692455296017606216279555198879"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u64> as ops::arith::AddAssign>::add_assign",
    "hash": "1517723434793712601317037077564396273729"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u64> as ops::arith::Div>::div",
    "hash": "361718916771852882310802931775400566598"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u64> as ops::arith::DivAssign<u64>>::div_assign",
    "hash": "20932856766671473369740632132375145624"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u64> as ops::arith::DivAssign>::div_assign",
    "hash": "28547067571849149618800270397424991181"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u64> as ops::arith::Mul>::mul",
    "hash": "400371130077722821912186420832772995257"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u64> as ops::arith::MulAssign<u64>>::mul_assign",
    "hash": "1573316697290101900718339766195486706390"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u64> as ops::arith::MulAssign>::mul_assign",
    "hash": "118095125429722932995559637006860955075"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u64> as ops::arith::Rem>::rem",
    "hash": "181896339847837003269108097827324098801"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u64> as ops::arith::RemAssign<u64>>::rem_assign",
    "hash": "1786106636400869976214939078740743674350"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u64> as ops::arith::RemAssign>::rem_assign",
    "hash": "97428999503138003826656324328187205843"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u64> as ops::arith::Sub>::sub",
    "hash": "1842809242613974263217575429838113123689"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u64> as ops::arith::SubAssign<u64>>::sub_assign",
    "hash": "127278145560709563814538479763882685858"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u64> as ops::arith::SubAssign>::sub_assign",
    "hash": "10077346358586428507577504862605094642"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u64> as ops::bit::BitAnd>::bitand",
    "hash": "2632542189670294749259235337220455475"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u64> as ops::bit::BitAndAssign<u64>>::bitand_assign",
    "hash": "870214965699906884513864826807875977676"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u64> as ops::bit::BitAndAssign>::bitand_assign",
    "hash": "1318634895874022560515900383270611561871"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u64> as ops::bit::BitOr>::bitor",
    "hash": "282393639880221679516805130768259263506"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u64> as ops::bit::BitOrAssign<u64>>::bitor_assign",
    "hash": "1596726219066677653813069076095377071381"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u64> as ops::bit::BitOrAssign>::bitor_assign",
    "hash": "1194991622686683956413056477898491306729"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u64> as ops::bit::BitXor>::bitxor",
    "hash": "42710823871216706123915705707730942050"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u64> as ops::bit::BitXorAssign<u64>>::bitxor_assign",
    "hash": "155654588307046209917144994360503331911"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u64> as ops::bit::BitXorAssign>::bitxor_assign",
    "hash": "9457876467421803761254343461863001784"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u64> as ops::bit::Not>::not",
    "hash": "98729443335932235149830204225948975263"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u8> as ops::arith::Add>::add",
    "hash": "457617603009215509917426289428954366988"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u8> as ops::arith::AddAssign<u8>>::add_assign",
    "hash": "326468285645546118215641760849036621646"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u8> as ops::arith::AddAssign>::add_assign",
    "hash": "98062876797310828377817534275847332280"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u8> as ops::arith::Div>::div",
    "hash": "94319852774773140406899919638729615778"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u8> as ops::arith::DivAssign<u8>>::div_assign",
    "hash": "1271817162532844407613087185817892724612"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u8> as ops::arith::DivAssign>::div_assign",
    "hash": "94825354165059279045831021641756721527"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u8> as ops::arith::Mul>::mul",
    "hash": "1020557167093025709017577230353605428541"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u8> as ops::arith::MulAssign<u8>>::mul_assign",
    "hash": "179992457760852308882676726467256561438"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u8> as ops::arith::MulAssign>::mul_assign",
    "hash": "146328625506849598519980782879255320949"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u8> as ops::arith::Rem>::rem",
    "hash": "55434287195254603149248703027091948921"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u8> as ops::arith::RemAssign<u8>>::rem_assign",
    "hash": "991367692842630010516507822500629818116"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u8> as ops::arith::RemAssign>::rem_assign",
    "hash": "45724823048140037706254715273923552395"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u8> as ops::arith::Sub>::sub",
    "hash": "1332326301384444152910185183898292546345"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u8> as ops::arith::SubAssign<u8>>::sub_assign",
    "hash": "306766572049343936115695797634694518866"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u8> as ops::arith::SubAssign>::sub_assign",
    "hash": "176499198859440513241354433203445390760"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u8> as ops::bit::BitAnd>::bitand",
    "hash": "169554233298214659516573317437752976504"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u8> as ops::bit::BitAndAssign<u8>>::bitand_assign",
    "hash": "3374707726659671019583042008372888851"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u8> as ops::bit::BitAndAssign>::bitand_assign",
    "hash": "823855726706466424518441568165319892778"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u8> as ops::bit::BitOr>::bitor",
    "hash": "374411905255933252513369230601844180181"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u8> as ops::bit::BitOrAssign<u8>>::bitor_assign",
    "hash": "164468077279041311509942523609950713298"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u8> as ops::bit::BitOrAssign>::bitor_assign",
    "hash": "1010909670838050183612317846838046901338"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u8> as ops::bit::BitXor>::bitxor",
    "hash": "166026620689284326436329394644351701345"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u8> as ops::bit::BitXorAssign<u8>>::bitxor_assign",
    "hash": "665986763593194268614907001679648449326"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u8> as ops::bit::BitXorAssign>::bitxor_assign",
    "hash": "924861151094267954017097994870119248237"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u8> as ops::bit::Not>::not",
    "hash": "127098794176462081649007365766203860315"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<usize> as ops::arith::Add>::add",
    "hash": "157334622385280541074583601837361223899"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<usize> as ops::arith::AddAssign<usize>>::add_assign",
    "hash": "85712290041944369526055984303185314341"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<usize> as ops::arith::AddAssign>::add_assign",
    "hash": "10487593265711081488157077121928184186"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<usize> as ops::arith::Div>::div",
    "hash": "115821890832302593515304227443239899340"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<usize> as ops::arith::DivAssign<usize>>::div_assign",
    "hash": "340931819103545166318221021993112995137"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<usize> as ops::arith::DivAssign>::div_assign",
    "hash": "14744911409175822647930672745473677562"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<usize> as ops::arith::Mul>::mul",
    "hash": "121187658590440977178627914384098076109"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<usize> as ops::arith::MulAssign<usize>>::mul_assign",
    "hash": "161362887275128209229275459716629052573"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<usize> as ops::arith::MulAssign>::mul_assign",
    "hash": "649132264883556806315833854964287464960"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<usize> as ops::arith::Rem>::rem",
    "hash": "51141641354241174251699624253678186330"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<usize> as ops::arith::RemAssign<usize>>::rem_assign",
    "hash": "697876686495566175111515409582511086180"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<usize> as ops::arith::RemAssign>::rem_assign",
    "hash": "1596521225683261918313253867757986366458"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<usize> as ops::arith::Sub>::sub",
    "hash": "1556056978651663360310990988439193616347"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<usize> as ops::arith::SubAssign<usize>>::sub_assign",
    "hash": "1028607320258984167916532193971818023862"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<usize> as ops::arith::SubAssign>::sub_assign",
    "hash": "334531125603598178513412506307006425804"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<usize> as ops::bit::BitAnd>::bitand",
    "hash": "460245291838070667313538885349844162766"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<usize> as ops::bit::BitAndAssign<usize>>::bitand_assign",
    "hash": "1830609953941828964114745376692341932053"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<usize> as ops::bit::BitAndAssign>::bitand_assign",
    "hash": "21703381855292043921759263165236342821"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<usize> as ops::bit::BitOr>::bitor",
    "hash": "626911736081660889114142373473387174006"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<usize> as ops::bit::BitOrAssign<usize>>::bitor_assign",
    "hash": "1537184666241712373811181215483890186391"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<usize> as ops::bit::BitOrAssign>::bitor_assign",
    "hash": "8731086444030588811287640972753372773"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<usize> as ops::bit::BitXor>::bitxor",
    "hash": "57158148051115467248405820356416847951"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<usize> as ops::bit::BitXorAssign<usize>>::bitxor_assign",
    "hash": "17233253787730095262420278264257515612"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<usize> as ops::bit::BitXorAssign>::bitxor_assign",
    "hash": "1677723086938286456811468808995326056524"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<usize> as ops::bit::Not>::not",
    "hash": "1022033598038023696710329100857479151007"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i128>::abs",
    "hash": "40570904599935252767366535566820999983"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i128>::count_ones",
    "hash": "88097617998141183804849885804645709612"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i128>::count_zeros",
    "hash": "113233046737246764613859196268092052898"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i128>::from_be",
    "hash": "63812447096156213025238097843427276855"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i128>::from_le",
    "hash": "18629222941754390581432058059861444334"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i128>::is_negative",
    "hash": "251483548562763050912209044687597090665"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i128>::is_positive",
    "hash": "754141141830540641969930068286350111"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i128>::leading_zeros",
    "hash": "341993122152547602814488775656240490347"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i128>::pow",
    "hash": "706676392070470401310214325022408817206"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i128>::reverse_bits",
    "hash": "120532123970095498187790438573172991365"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i128>::rotate_left",
    "hash": "167944544228021563637628148975408888431"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i128>::rotate_right",
    "hash": "121484603472334627162951718832160294094"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i128>::signum",
    "hash": "567406253802514381513926531315196102024"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i128>::swap_bytes",
    "hash": "1633130021028212032010309507388872628955"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i128>::to_be",
    "hash": "14575355253133189225663650596853096722"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i128>::to_le",
    "hash": "1641976214205196737910772068331398962132"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i128>::trailing_zeros",
    "hash": "52739849156019087588483229984874157020"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i16>::abs",
    "hash": "159471515002358818753257843565368264603"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i16>::count_ones",
    "hash": "147547193204925677968620634307832800228"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i16>::count_zeros",
    "hash": "52920235766269904667182887260523352736"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i16>::from_be",
    "hash": "43893959598762265927040791984544103590"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i16>::from_le",
    "hash": "93557368247371508578859272219529142665"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i16>::is_negative",
    "hash": "847384640426335273911702125779471828664"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i16>::is_positive",
    "hash": "126189414337770831775052421580335712557"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i16>::leading_zeros",
    "hash": "63852910562481142304627032471929858980"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i16>::pow",
    "hash": "1258766510547366092111157539085152385150"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i16>::reverse_bits",
    "hash": "82832002333763247028991011415832076576"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i16>::rotate_left",
    "hash": "126871859341091243019435800899245391376"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i16>::rotate_right",
    "hash": "6625327514341904265352528414740147567"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i16>::signum",
    "hash": "15861116406230283400948928314012028329"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i16>::swap_bytes",
    "hash": "210402526511379729612710952830689820291"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i16>::to_be",
    "hash": "35177936589849959911205231389838922985"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i16>::to_le",
    "hash": "248322670067359284810439306217923821321"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i16>::trailing_zeros",
    "hash": "1685492964170492927616381985962635619245"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i32>::abs",
    "hash": "94500863289550490503378981501981642559"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i32>::count_ones",
    "hash": "1798051854678231461816965961277763314996"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i32>::count_zeros",
    "hash": "154502871764543547277124705105853571136"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i32>::from_be",
    "hash": "1252313182557450101361957015658869270"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i32>::from_le",
    "hash": "69854947925686036133339001996493307104"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i32>::is_negative",
    "hash": "716021901047466008513426122114199675934"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i32>::is_positive",
    "hash": "1608374968012635814641310797265584889"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i32>::leading_zeros",
    "hash": "1257397788663505592415838886006989062274"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i32>::pow",
    "hash": "795727758595777085517350452314055417812"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i32>::reverse_bits",
    "hash": "139922485703550092256711485806462431890"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i32>::rotate_left",
    "hash": "70004966105081970576168543104250680119"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i32>::rotate_right",
    "hash": "151430897178485101113364443266281002194"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i32>::signum",
    "hash": "118719218008415804623513276729370688"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i32>::swap_bytes",
    "hash": "912347423817179721412668181419259566203"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i32>::to_be",
    "hash": "1538722167193975795710053402056602226945"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i32>::to_le",
    "hash": "923175207077389356620671011298556919"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i32>::trailing_zeros",
    "hash": "647249330671321209513355896142517130609"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i64>::abs",
    "hash": "149479427875626138093317245935287245372"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i64>::count_ones",
    "hash": "69870739885232356599329799768580691897"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i64>::count_zeros",
    "hash": "840921293516748138212376445010181076534"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i64>::from_be",
    "hash": "1842212504864278384912980183632717484546"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i64>::from_le",
    "hash": "237625269707699437318399954191683431254"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i64>::is_negative",
    "hash": "1052233118008286967716261416400180907342"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i64>::is_positive",
    "hash": "889156987174211279414761658318229921309"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i64>::leading_zeros",
    "hash": "78000985925095715628267379779089596703"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i64>::pow",
    "hash": "10851271409890449672031247010492100147"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i64>::reverse_bits",
    "hash": "137796272426303518021742697070987280321"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i64>::rotate_left",
    "hash": "1316345624710528797810925258797131288081"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i64>::rotate_right",
    "hash": "125329354117780613436172112988866304187"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i64>::signum",
    "hash": "108558230156364447307684238550398054022"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i64>::swap_bytes",
    "hash": "588030963039916942510800714845948572791"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i64>::to_be",
    "hash": "1231528423118486342313553172981777052785"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i64>::to_le",
    "hash": "1365767545600931266713385963157423267395"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i64>::trailing_zeros",
    "hash": "464025297718583306215941070787356961271"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i8>::abs",
    "hash": "1287803097855160644614870537746057626106"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i8>::count_ones",
    "hash": "16309057158909932478686308434982643591"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i8>::count_zeros",
    "hash": "1484107711953129546015599140904406582713"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i8>::from_be",
    "hash": "245555779154766048415600940691665169467"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i8>::from_le",
    "hash": "14963658303363770442764791472906396243"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i8>::is_negative",
    "hash": "3324249939436123821604158335735837315"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i8>::is_positive",
    "hash": "189573916363126501012009476214319809028"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i8>::leading_zeros",
    "hash": "175376954183972536094850752850736102121"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i8>::pow",
    "hash": "115907297774997279757898990014387648848"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i8>::reverse_bits",
    "hash": "845339755215979057717626057876615195455"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i8>::rotate_left",
    "hash": "778011996113418756412685632384778202391"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i8>::rotate_right",
    "hash": "44960999807345618643814836735002964706"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i8>::signum",
    "hash": "53690598943501266398366324144301242840"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i8>::swap_bytes",
    "hash": "1228921689462704590018323210214598152981"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i8>::to_be",
    "hash": "140030182955894197963206548610926341435"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i8>::to_le",
    "hash": "1014514617730756863216379721604485125604"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i8>::trailing_zeros",
    "hash": "153193261951914866935091361545979972843"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<isize>::abs",
    "hash": "139036110833849719147347010554927234578"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<isize>::count_ones",
    "hash": "1362004055756781617412240398355247085454"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<isize>::count_zeros",
    "hash": "484264987592485585312397754439310731209"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<isize>::from_be",
    "hash": "23047702966123218895318765769556268892"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<isize>::from_le",
    "hash": "141893398215425053083182431641040938595"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<isize>::is_negative",
    "hash": "15981671598538098418799541300143116544"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<isize>::is_positive",
    "hash": "166439484335145087378051720953494085318"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<isize>::leading_zeros",
    "hash": "1588919268705462155211837284176697248586"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<isize>::pow",
    "hash": "1259762901786490670817575693481434477759"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<isize>::reverse_bits",
    "hash": "157946594519551668956530000347321480900"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<isize>::rotate_left",
    "hash": "76521377916923696569358182495213956979"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<isize>::rotate_right",
    "hash": "1814969628737442740614770208431322510953"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<isize>::signum",
    "hash": "169205908178584289671712169901129315511"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<isize>::swap_bytes",
    "hash": "17251264092907111555989239966170252420"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<isize>::to_be",
    "hash": "342158673558713579316993199438510947378"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<isize>::to_le",
    "hash": "149041804238210080975858945176098760977"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<isize>::trailing_zeros",
    "hash": "77399843475394846947022400528831778151"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<u128>::count_ones",
    "hash": "150317979170279303269219785407397332297"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<u128>::count_zeros",
    "hash": "17952203578230719842299113500455062010"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<u128>::from_be",
    "hash": "80760770105242020267556020982280427414"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<u128>::from_le",
    "hash": "293556939892323521615967147777075951212"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<u128>::is_power_of_two",
    "hash": "36005387194167661193484703356201047908"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<u128>::leading_zeros",
    "hash": "393421869216539514217788701801354780228"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<u128>::pow",
    "hash": "1689981343008303081815767287620967167684"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<u128>::reverse_bits",
    "hash": "1736105894911006533213556954874054377880"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<u128>::rotate_left",
    "hash": "148604663827228996201316447333639283480"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<u128>::rotate_right",
    "hash": "1243530696715668751115472754963368849585"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<u128>::swap_bytes",
    "hash": "1033266115981418536411648099357682171991"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<u128>::to_be",
    "hash": "152007302053965686947600238130918017617"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<u128>::to_le",
    "hash": "1584022854583661397011261160151782558154"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<u128>::trailing_zeros",
    "hash": "317360452252357170211301527938009399178"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<u16>::count_ones",
    "hash": "98149912573789742014995270891164212473"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<u16>::count_zeros",
    "hash": "124539128813802808664816745188980747367"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<u16>::from_be",
    "hash": "1357309783129622878211601079290983441160"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<u16>::from_le",
    "hash": "746331488393895317174066900472248021"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<u16>::is_power_of_two",
    "hash": "1731840505269321470410949133978344857271"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<u16>::leading_zeros",
    "hash": "1279469788872352681415938108846913772727"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<u16>::pow",
    "hash": "653001294895587760316171475647578465371"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<u16>::reverse_bits",
    "hash": "1114961269155762886516445960774240165952"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<u16>::rotate_left",
    "hash": "135870938881831736427853452836776943902"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<u16>::rotate_right",
    "hash": "101407458599579450564051253858499414873"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<u16>::swap_bytes",
    "hash": "682988617966932963412409251582335770702"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<u16>::to_be",
    "hash": "98898108509723541626945725629366781316"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<u16>::to_le",
    "hash": "643985048189943457718325461431532071011"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<u16>::trailing_zeros",
    "hash": "542549056563448048617004614277379299838"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<u32>::count_ones",
    "hash": "390960060499378924113903167115296205082"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<u32>::count_zeros",
    "hash": "63811934759844512189818950838086970707"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<u32>::from_be",
    "hash": "144045589972461839186004545171972599859"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<u32>::from_le",
    "hash": "177622555571856199794294790958733880310"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<u32>::is_power_of_two",
    "hash": "147585427394713630078429091947446685355"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<u32>::leading_zeros",
    "hash": "171967354807466800923143358768823184540"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<u32>::pow",
    "hash": "135115960118989848397812875980334333470"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<u32>::reverse_bits",
    "hash": "1266388478819747022311299196721719895755"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<u32>::rotate_left",
    "hash": "1778503685986474530117538397508143308020"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<u32>::rotate_right",
    "hash": "77289796407372675478384731271522544543"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<u32>::swap_bytes",
    "hash": "77861173466453305598031099781086276889"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<u32>::to_be",
    "hash": "5570844521739611556308724412869285017"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<u32>::to_le",
    "hash": "28767370300342739871917257364273546820"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<u32>::trailing_zeros",
    "hash": "136619460864104599868200854742935543298"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<u64>::count_ones",
    "hash": "107325138687026076711527626606944887714"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<u64>::count_zeros",
    "hash": "57782230796503105345996514048709018605"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<u64>::from_be",
    "hash": "760604675257302293113585253883179137615"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<u64>::from_le",
    "hash": "1255386769837299770915187341266202829742"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<u64>::is_power_of_two",
    "hash": "1053374400438722066513218578886967720522"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<u64>::leading_zeros",
    "hash": "101893742945753447329825941468882722919"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<u64>::pow",
    "hash": "3720579292295584291690214251629843609"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<u64>::reverse_bits",
    "hash": "520290151578912135514562403449402672195"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<u64>::rotate_left",
    "hash": "77328303504505767915809661913603287738"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<u64>::rotate_right",
    "hash": "58079108353060274779485008930934710907"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<u64>::swap_bytes",
    "hash": "300344611420282003417795334282333487512"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<u64>::to_be",
    "hash": "899403515495172746870997886707600058"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<u64>::to_le",
    "hash": "129079082149213572182279250415267201515"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<u64>::trailing_zeros",
    "hash": "369223258570483337911533576052527157074"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<u8>::count_ones",
    "hash": "18089921443639499081589882717447629745"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<u8>::count_zeros",
    "hash": "135018535476732600553180050505576701594"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<u8>::from_be",
    "hash": "156054907538006390622297520325694659140"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<u8>::from_le",
    "hash": "41199827167372294987214962965744953536"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<u8>::is_power_of_two",
    "hash": "143484135190484899711350173459409218089"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<u8>::leading_zeros",
    "hash": "893787808521154880814801285747240321435"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<u8>::pow",
    "hash": "154172730206802644823869468856640669032"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<u8>::reverse_bits",
    "hash": "1203158878815450093910587137702902972659"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<u8>::rotate_left",
    "hash": "13248593436483501536669694457289656489"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<u8>::rotate_right",
    "hash": "909012171624017791714349586018779943745"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<u8>::swap_bytes",
    "hash": "50127337646620506563284541643394295121"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<u8>::to_be",
    "hash": "17326417749115993395347765562506634372"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<u8>::to_le",
    "hash": "1354209287150931850610893658892313884604"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<u8>::trailing_zeros",
    "hash": "52772388773097506826490915531414420715"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<usize>::count_ones",
    "hash": "85738309543394037181925194990427506438"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<usize>::count_zeros",
    "hash": "24489827669495614218301677952858831477"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<usize>::from_be",
    "hash": "880951638369193054316353223340600657790"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<usize>::from_le",
    "hash": "989759244844765503816991954901701792366"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<usize>::is_power_of_two",
    "hash": "180479846013191717817579581623169454500"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<usize>::leading_zeros",
    "hash": "239796196567087453710103458989930954509"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<usize>::pow",
    "hash": "170143381675502600256958341902696135206"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<usize>::reverse_bits",
    "hash": "54191694185447903148688153707854529354"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<usize>::rotate_left",
    "hash": "298661267874727587812381303202722859072"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<usize>::rotate_right",
    "hash": "804681076927404565317488074688376541970"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<usize>::swap_bytes",
    "hash": "142584483264127024255872735587479423523"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<usize>::to_be",
    "hash": "343989285928680316114209982465942871153"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<usize>::to_le",
    "hash": "38469377195769143345446339462598979456"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<usize>::trailing_zeros",
    "hash": "894160854178435181410494337715343598816"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::abs_diff",
    "hash": "46869871514150073816523255424712514517"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::bit_width",
    "hash": "1171533862955738414912174614004974511587"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::borrowing_sub",
    "hash": "120677374057358304291102784071675896564"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::carrying_add",
    "hash": "182902560507611162055117067169386360289"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::carrying_mul",
    "hash": "606019400654643990013613914897518657145"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::carrying_mul_add",
    "hash": "17848087583919573713734014073660267158"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::cast_signed",
    "hash": "27991920600932168468983037312650664423"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::checked_add",
    "hash": "1665781552548256714011429462385181679929"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::checked_add_signed",
    "hash": "11678763855293813016448874143657344"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::checked_div",
    "hash": "451362227385671291916977953334377122719"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::checked_div_euclid",
    "hash": "41182367365062903715736103875485373940"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::checked_exact_div",
    "hash": "520367029063411573854033663963435073"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::checked_ilog",
    "hash": "958329403248510615016667067108808423388"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::checked_ilog10",
    "hash": "114009921050299464994665738950681835091"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::checked_ilog2",
    "hash": "33364343307120818627511102626462370826"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::checked_mul",
    "hash": "302242380160271739916944025857233326894"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::checked_neg",
    "hash": "12205983698590726458972777534748048264"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::checked_next_multiple_of",
    "hash": "61761894336246788596390919113195916481"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::checked_next_power_of_two",
    "hash": "1684649053988819797710451915743732951167"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::checked_pow",
    "hash": "138663197907283407148249874382307552701"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::checked_rem",
    "hash": "602795139505650911511861157559114167758"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::checked_rem_euclid",
    "hash": "18648874413561209988833113010893280796"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::checked_shl",
    "hash": "686239145249575244210462962427237453413"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::checked_shr",
    "hash": "87080418492159895310130461514289620784"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::checked_signed_diff",
    "hash": "30890818992918438144479859131256364833"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::checked_sub",
    "hash": "914336449417096157717115421620022658982"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::checked_sub_signed",
    "hash": "84077564380874265269803344464582726322"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::count_ones",
    "hash": "23619029121930631421760493776754945790"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::count_zeros",
    "hash": "341558973537885842016571237076011627195"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::div_ceil",
    "hash": "36680401587350927521890694106396592369"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::div_euclid",
    "hash": "828756382630013411518063232209689983257"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::div_floor",
    "hash": "708199332286060073315736093470355945962"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::exact_div",
    "hash": "1791060341590103126814079167655650333584"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::from_be",
    "hash": "88890922359380101915526302835597136275"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::from_be_bytes",
    "hash": "172057554320606343691824652425121896863"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::from_le",
    "hash": "162516926836822649153603515558939899298"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::from_le_bytes",
    "hash": "825683807404774819713109040328509989630"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::from_ne_bytes",
    "hash": "744638253998102308711352719419859191466"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::ilog",
    "hash": "382949525471518041011660311100275344847"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::ilog10",
    "hash": "25032189137738627172426672416729567670"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::ilog2",
    "hash": "147554927700738079956334119126591916328"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::is_multiple_of",
    "hash": "1294657611947158692012074174084573574044"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::is_power_of_two",
    "hash": "1828863621889934751015152264504498900796"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::isolate_highest_one",
    "hash": "92387983367694480947409599240654021212"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::isolate_lowest_one",
    "hash": "173623962197830458857331192228280591098"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::isqrt",
    "hash": "48926239532141200719870784778707453148"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::leading_ones",
    "hash": "11311792911574359039103926810641975018"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::leading_zeros",
    "hash": "19113750260982348625004864313482200014"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::max_value",
    "hash": "930426926029105987027014849656256931"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::min_value",
    "hash": "289708672803520080417503552706367563332"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::next_multiple_of",
    "hash": "65629116813305427407440341382976153389"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::next_power_of_two",
    "hash": "34818228171672524563487750574863934399"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::one_less_than_next_power_of_two",
    "hash": "165954786144137085584367194762371998896"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::overflowing_add",
    "hash": "137225128760155526151671631170232111377"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::overflowing_add_signed",
    "hash": "142922357690811634956536681629390212742"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::overflowing_div",
    "hash": "895835121498096586215822721640072645241"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::overflowing_div_euclid",
    "hash": "39862282496770177327579085727330418787"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::overflowing_mul",
    "hash": "1710209202010674430815400274951602107751"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::overflowing_neg",
    "hash": "1332508150336537750611152777165994080874"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::overflowing_pow",
    "hash": "721686727599255759815494656373320850200"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::overflowing_rem",
    "hash": "104756452177356955083492742172139436175"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::overflowing_rem_euclid",
    "hash": "1585081683010507704018168022237144055489"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::overflowing_shl",
    "hash": "1793325446957810198210229258132063429850"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::overflowing_shr",
    "hash": "1389952051400206366316132330167110786964"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::overflowing_sub",
    "hash": "290224080052222695811827506646110889018"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::overflowing_sub_signed",
    "hash": "148014949318626314901354754372357445530"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::pow",
    "hash": "153558066053530297505862118646143620961"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::rem_euclid",
    "hash": "110640669207892913684692854016045974614"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::reverse_bits",
    "hash": "15373119319746869526439138795474647846"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::rotate_left",
    "hash": "135765752785791042003217844356022347018"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::rotate_right",
    "hash": "1120245547934899947510719403524215422025"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::saturating_add",
    "hash": "1523064555281082419813355295181114375872"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::saturating_add_signed",
    "hash": "162310052056470053826655535715651465468"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::saturating_div",
    "hash": "706549191014486790212962681377107644865"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::saturating_mul",
    "hash": "163161940196501629786949501940413274071"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::saturating_pow",
    "hash": "1408956492899277790614059986511249410219"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::saturating_sub",
    "hash": "127229839212061086266336308553910083984"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::saturating_sub_signed",
    "hash": "119277422125500779953200390909399896690"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::strict_add",
    "hash": "796903513668632355210323639957224896988"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::strict_add_signed",
    "hash": "157864064280108695976568965742800799806"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::strict_div",
    "hash": "118539998351343816559648206449475908317"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::strict_div_euclid",
    "hash": "1618445799650434747413453105789019625997"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::strict_mul",
    "hash": "160931624175768398613881562476870330889"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::strict_neg",
    "hash": "885748844558336567216109450006656876807"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::strict_pow",
    "hash": "742792733686830558913120738629210654895"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::strict_rem",
    "hash": "1296973401541759207912426312691352413463"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::strict_rem_euclid",
    "hash": "117915694908745620699315937761115884746"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::strict_shl",
    "hash": "14438749036653118908898983702097694632"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::strict_shr",
    "hash": "62251444412498545868367944414611258623"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::strict_sub",
    "hash": "6087595871912643492238633484254771103"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::strict_sub_signed",
    "hash": "1696587589969068306910351263800075648288"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::swap_bytes",
    "hash": "96797857834202028433736767521767631833"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::to_be",
    "hash": "1029155283933590422918156414960766129054"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::to_be_bytes",
    "hash": "115565156804257258088180857936249366079"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::to_le",
    "hash": "919582778644760206517143176331623874137"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::to_le_bytes",
    "hash": "849754960733016135018237786760131221962"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::to_ne_bytes",
    "hash": "66487688374927878687482940362928478685"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::trailing_ones",
    "hash": "1485562797576348897416003308722937051678"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::trailing_zeros",
    "hash": "429713621587654627418055505447510791465"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::unbounded_shl",
    "hash": "50349873007951898853533027506069222208"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::unbounded_shr",
    "hash": "1091662662282068128917439280288128902344"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::unchecked_add",
    "hash": "22071476802993263771420379863999584405"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::unchecked_disjoint_bitor",
    "hash": "24476073533279508504200132334959301515"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::unchecked_exact_div",
    "hash": "1283535953405523331716176096006125635228"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::unchecked_mul",
    "hash": "99814623034955334955984751321742984086"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::unchecked_shl",
    "hash": "346072768924117297314794851243150655780"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::unchecked_shr",
    "hash": "1232156779236539728410677938145656762487"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::unchecked_sub",
    "hash": "585754856173850295511174257748224935384"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::widening_mul",
    "hash": "25753467031478257716949736687562054564"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::wrapping_add",
    "hash": "6974361947138909637846956203675518908"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::wrapping_add_signed",
    "hash": "1537146655070945020716197834930433196505"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::wrapping_div",
    "hash": "168472227190617294528429230498659627991"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::wrapping_div_euclid",
    "hash": "95176531338878565201836061873015931173"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::wrapping_mul",
    "hash": "46603933790402699735598594773737686872"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::wrapping_neg",
    "hash": "1638626660636449577915896355441563024423"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::wrapping_next_power_of_two",
    "hash": "10432018310243414869141230370721115004"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::wrapping_pow",
    "hash": "1688684332577858823612553407627211535682"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::wrapping_rem",
    "hash": "28037177796152104628972534821590369970"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::wrapping_rem_euclid",
    "hash": "1613944038427025267614279996662988768815"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::wrapping_shl",
    "hash": "76887315029143740328881252497100325640"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::wrapping_shr",
    "hash": "67576177020146039253033652024843048186"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::wrapping_sub",
    "hash": "159795340212274147057126849141514775433"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::wrapping_sub_signed",
    "hash": "119198841210580604792919692766548999069"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::abs_diff",
    "hash": "389682636648371064514272310673268620577"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::bit_width",
    "hash": "1304174947335840177711617187411805403715"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::borrowing_sub",
    "hash": "10547421123365104660513755786358252805"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::carrying_add",
    "hash": "35512012637805533371728208455291874159"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::carrying_mul",
    "hash": "127082183364885927502654218238022948416"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::carrying_mul_add",
    "hash": "563130825831253581117534250148894470310"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::cast_signed",
    "hash": "926591651892489047714270447664914170235"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::checked_add",
    "hash": "19803807215760642039079174007093190693"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::checked_add_signed",
    "hash": "1653716087236031077816321632509506993659"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::checked_div",
    "hash": "1136811166840006366012657086516212183785"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::checked_div_euclid",
    "hash": "1592808362798447956814573286037285056191"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::checked_exact_div",
    "hash": "77427471810022287738443222862326134231"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::checked_ilog",
    "hash": "5600538597401052214110368819067746774"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::checked_ilog10",
    "hash": "908351609803939066350579647852442238"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::checked_ilog2",
    "hash": "1126806406070734482411336537233584562728"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::checked_mul",
    "hash": "132206149694843101553195521296093368390"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::checked_neg",
    "hash": "184084017443103354014786010745542302437"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::checked_next_multiple_of",
    "hash": "1097796591128633258714044798046613730142"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::checked_next_power_of_two",
    "hash": "511636250935532227411975614184364514358"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::checked_pow",
    "hash": "175369956191441324556618837677959619224"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::checked_rem",
    "hash": "155253043239251848946785665215133420910"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::checked_rem_euclid",
    "hash": "158480330306854825289724205416653822273"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::checked_shl",
    "hash": "128469115729627911309797778818106294212"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::checked_shr",
    "hash": "113712788820372786931361074989327992093"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::checked_signed_diff",
    "hash": "1786786233145463000714785581206802127699"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::checked_sub",
    "hash": "21436976277418700456362233174407801144"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::checked_sub_signed",
    "hash": "1714192941019320046017883794887268561685"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::count_ones",
    "hash": "7089437283151166965854634622523210057"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::count_zeros",
    "hash": "99095775155278958171356627292812498815"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::div_ceil",
    "hash": "169021356434604957638960657302766749699"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::div_euclid",
    "hash": "1774133923319310180915348317135811892922"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::div_floor",
    "hash": "16712935760747129377253861640371093507"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::exact_div",
    "hash": "122558040260819454875837483068526861345"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::from_be",
    "hash": "34581143305739046629454127497268528026"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::from_be_bytes",
    "hash": "1799698477091007295616827616188428336634"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::from_le",
    "hash": "1711818743674595539516912941662079010737"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::from_le_bytes",
    "hash": "1309601241359324532416943286328438355396"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::from_ne_bytes",
    "hash": "100231031893118112369835152090856789613"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::ilog",
    "hash": "15499954543887546158116846079523973500"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::ilog10",
    "hash": "330306377730317799016362815147053143251"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::ilog2",
    "hash": "74042231134324917029733172556337915585"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::is_multiple_of",
    "hash": "242002951966990827793821194915019873"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::is_power_of_two",
    "hash": "290235699676251309413395434672501062035"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::isolate_highest_one",
    "hash": "112447090468330117083908198529178889098"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::isolate_lowest_one",
    "hash": "41975928398158249439794602012535199916"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::isqrt",
    "hash": "1683251936170496963435049531128913574"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::leading_ones",
    "hash": "78370339252683080585362643928792731174"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::leading_zeros",
    "hash": "741899288318449396017074031769594997194"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::max_value",
    "hash": "103448513999632730419018887145882781460"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::min_value",
    "hash": "417444116309885708713892351415109682151"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::next_multiple_of",
    "hash": "2346890290447302495528521492876423473"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::next_power_of_two",
    "hash": "1039533765821997002514454768767285427022"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::one_less_than_next_power_of_two",
    "hash": "1132571243569535172817879063662388616911"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::overflowing_add",
    "hash": "276416412318150986910935829568641832460"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::overflowing_add_signed",
    "hash": "165983920333304730642242761520057558191"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::overflowing_div",
    "hash": "56196999163001068604814122564756925327"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::overflowing_div_euclid",
    "hash": "112371632432020565956796706523536137746"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::overflowing_mul",
    "hash": "34592207622385251312187007769926517319"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::overflowing_neg",
    "hash": "179446911322662691577333049716005385053"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::overflowing_pow",
    "hash": "71635526052309217461400170189780905589"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::overflowing_rem",
    "hash": "239925959844348111812054741157049797739"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::overflowing_rem_euclid",
    "hash": "67333306673722219193945141153044460106"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::overflowing_shl",
    "hash": "172594265056246720651319968387638636234"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::overflowing_shr",
    "hash": "123936619868775959641445969725038131146"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::overflowing_sub",
    "hash": "86613059222628044604851290578546921182"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::overflowing_sub_signed",
    "hash": "973410848997854158213660539246137400200"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::pow",
    "hash": "77439715682849516499317154776772212076"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::rem_euclid",
    "hash": "3029406924132324625707176991683766958"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::reverse_bits",
    "hash": "1411798175139531973018343464618934396723"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::rotate_left",
    "hash": "12692810527578658310528413433689848699"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::rotate_right",
    "hash": "158342440334494632763300562318371739408"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::saturating_add",
    "hash": "41145329144538594871352759971159381813"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::saturating_add_signed",
    "hash": "1377137456386150810210106337456158265658"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::saturating_div",
    "hash": "871510203000903243417263124749578210870"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::saturating_mul",
    "hash": "641323759237112842215990716688228819963"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::saturating_pow",
    "hash": "1089233693315779838315838028614060415371"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::saturating_sub",
    "hash": "1033470831615311614611045726977840616131"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::saturating_sub_signed",
    "hash": "134446133713579973267899925829705276641"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::strict_add",
    "hash": "20099556331038557342830296237985801458"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::strict_add_signed",
    "hash": "109065955585306362856375057217489127588"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::strict_div",
    "hash": "51670664107999551122252215534099267325"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::strict_div_euclid",
    "hash": "112378668074927100468299907351635681415"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::strict_mul",
    "hash": "32769921408102479554102724939313564184"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::strict_neg",
    "hash": "129187099811271144991425559648963185176"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::strict_pow",
    "hash": "24718605380896924814501578772962748968"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::strict_rem",
    "hash": "40526853340261802055373683118421483193"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::strict_rem_euclid",
    "hash": "1469237610051438198311412784242570146667"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::strict_shl",
    "hash": "352556348707964436211710099451658990022"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::strict_shr",
    "hash": "1034506037228461168317166699737429185086"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::strict_sub",
    "hash": "689411697637519116711682310174888267887"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::strict_sub_signed",
    "hash": "138994675113058141412676485003507654034"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::swap_bytes",
    "hash": "1609206629060039019314416829701092168316"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::to_be",
    "hash": "84755902463003912879369422462104203310"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::to_be_bytes",
    "hash": "130492583284590779747071029408167835655"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::to_le",
    "hash": "1124087063628916470611254698428333263932"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::to_le_bytes",
    "hash": "690002314606611418015113341582482322806"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::to_ne_bytes",
    "hash": "647683920979556505611270526870914718384"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::trailing_ones",
    "hash": "133747429011301488072654038471297181158"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::trailing_zeros",
    "hash": "17704609541724421577595683375694099576"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::unbounded_shl",
    "hash": "1572441686103318453270045510979812481"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::unbounded_shr",
    "hash": "5676473343965410444687605574375255144"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::unchecked_add",
    "hash": "993611605804025130710031722480304785932"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::unchecked_disjoint_bitor",
    "hash": "427874700096440227212615959198973460985"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::unchecked_exact_div",
    "hash": "1191664837581219748115258877547027963263"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::unchecked_mul",
    "hash": "853958772966087544614475942285899400978"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::unchecked_shl",
    "hash": "1305743030603312249016234142286225772793"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::unchecked_shr",
    "hash": "905373098617646930712552086594338833150"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::unchecked_sub",
    "hash": "129990847385776221253564760187042549152"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::widening_mul",
    "hash": "748660534433090825615763287318346396754"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::wrapping_add",
    "hash": "1175847126974603369815060496403232677423"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::wrapping_add_signed",
    "hash": "1355982255260543405112214376065160782008"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::wrapping_div",
    "hash": "104090799595891083662836187393252624150"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::wrapping_div_euclid",
    "hash": "930329887722619827310781002707697142749"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::wrapping_mul",
    "hash": "1281317076101845288715427931344615225605"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::wrapping_neg",
    "hash": "1203941465387914393117408560836968858997"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::wrapping_next_power_of_two",
    "hash": "61130735579303771909117359294632334459"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::wrapping_pow",
    "hash": "19368078777631064842222115874755202292"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::wrapping_rem",
    "hash": "453453266428999964516001270798073418328"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::wrapping_rem_euclid",
    "hash": "1383843122763743449712952820285853217549"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::wrapping_shl",
    "hash": "1537675074956535765414190997717133001199"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::wrapping_shr",
    "hash": "113312319364173871356723426773440561970"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::wrapping_sub",
    "hash": "9192609610859105498674179645090923037"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::wrapping_sub_signed",
    "hash": "1223146335437442910512546598066710739595"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::abs_diff",
    "hash": "167230440307430580148283469262395051784"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::bit_width",
    "hash": "26565471782524253663924249651311188586"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::borrowing_sub",
    "hash": "183940505232446223818871430972308781436"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::carrying_add",
    "hash": "145622798714409630867526838655313025421"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::carrying_mul",
    "hash": "37557057705510228429104360525042512202"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::carrying_mul_add",
    "hash": "3240997254833329041287552679182698883"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::cast_signed",
    "hash": "64913920072467991169476782286435740633"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::checked_add",
    "hash": "93072201441990487077520879104971538688"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::checked_add_signed",
    "hash": "10327592495401299971164831712710787786"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::checked_div",
    "hash": "138640450897686412027176859487956849911"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::checked_div_euclid",
    "hash": "27987021957633238088360888912705833661"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::checked_exact_div",
    "hash": "147510257184926393548195221846140794620"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::checked_ilog",
    "hash": "32907426780840485363216135806824322383"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::checked_ilog10",
    "hash": "970844807896263742112502892232546588853"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::checked_ilog2",
    "hash": "1099928855643551827414371282830900624517"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::checked_mul",
    "hash": "63516397387201904256032496411906397011"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::checked_neg",
    "hash": "127072174855712145358868982675624835544"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::checked_next_multiple_of",
    "hash": "94325546805359890802563068753365918535"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::checked_next_power_of_two",
    "hash": "95266571658653476371418024371875654148"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::checked_pow",
    "hash": "81510665874774799674993787411643990782"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::checked_rem",
    "hash": "103963097882861075441886304427622839858"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::checked_rem_euclid",
    "hash": "1013516401158491248716398838103066589217"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::checked_shl",
    "hash": "108054826450106955215913572735746241577"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::checked_shr",
    "hash": "336145304050726151914723605602397299883"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::checked_signed_diff",
    "hash": "90938437667951638138202509454763108743"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::checked_sub",
    "hash": "245005539563000656514106548741170762852"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::checked_sub_signed",
    "hash": "1413052310883243622414549469973956740851"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::count_ones",
    "hash": "108667108776920066264304285036958467301"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::count_zeros",
    "hash": "175839635039620827096019972312827584353"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::div_ceil",
    "hash": "86973485814532178778700632526421075230"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::div_euclid",
    "hash": "451435058058292456714371255771099310629"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::div_floor",
    "hash": "116037559812074901475006747948751655743"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::exact_div",
    "hash": "50628316288459927454509431065376062116"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::from_be",
    "hash": "21666423432007082792987471143976073347"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::from_be_bytes",
    "hash": "1524860446195661186510825479727258232741"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::from_le",
    "hash": "183434043048031631621323651507127656277"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::from_le_bytes",
    "hash": "769367297622441845610888100502189080976"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::from_ne_bytes",
    "hash": "102844530995187994406508654717488474875"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::ilog",
    "hash": "699302133398258321112082993706576904977"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::ilog10",
    "hash": "1554387503222673616914507331831259870819"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::ilog2",
    "hash": "77817278127631803905977686849627225300"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::is_multiple_of",
    "hash": "43257456359359412499854533979476875685"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::is_power_of_two",
    "hash": "54630959556521392808993538333295282933"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::isolate_highest_one",
    "hash": "13115007570192172693171512978897075240"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::isolate_lowest_one",
    "hash": "337434158286586281811771527825014621246"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::isqrt",
    "hash": "51115502373293921121983207825187155140"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::leading_ones",
    "hash": "1438316779968036795115435244739373753863"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::leading_zeros",
    "hash": "27092927556514254576572567752250999125"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::max_value",
    "hash": "1071587998955583399614202729551204902153"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::min_value",
    "hash": "172777851860596607159634026738922525898"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::next_multiple_of",
    "hash": "1039097743904114810312349650552441837194"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::next_power_of_two",
    "hash": "129931478274232025887209725042994767412"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::one_less_than_next_power_of_two",
    "hash": "778370840166772713513784617185539516555"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::overflowing_add",
    "hash": "1785104021152755429213148219117196558263"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::overflowing_add_signed",
    "hash": "1399592177923336626411363686187298072490"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::overflowing_div",
    "hash": "148555383884656053588093487753261169428"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::overflowing_div_euclid",
    "hash": "167446211195934207384159424496671525656"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::overflowing_mul",
    "hash": "450711679320065867912004079253027697688"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::overflowing_neg",
    "hash": "82830171105711342147619729855145659714"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::overflowing_pow",
    "hash": "1274864429147813794213782410460482487644"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::overflowing_rem",
    "hash": "242249627398949382816408224257463791844"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::overflowing_rem_euclid",
    "hash": "330096600349782819212968637173361213475"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::overflowing_shl",
    "hash": "80262330503324207495279763270513431395"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::overflowing_shr",
    "hash": "1138540003260924513316087798628330817581"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::overflowing_sub",
    "hash": "305026260801787476215973517134374191389"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::overflowing_sub_signed",
    "hash": "189617624347809543511846556769804173368"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::pow",
    "hash": "1801521465659480547211148974037927571749"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::rem_euclid",
    "hash": "162631393596688498786916003084031543185"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::reverse_bits",
    "hash": "50570459473014933511364928797786231465"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::rotate_left",
    "hash": "162601835343198702697315880267091848944"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::rotate_right",
    "hash": "1160087279335144215310510602705793798574"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::saturating_add",
    "hash": "902568782405237202311385523360311753667"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::saturating_add_signed",
    "hash": "1406895277356407472314667390327868481471"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::saturating_div",
    "hash": "848125511783251616311640943956486053828"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::saturating_mul",
    "hash": "123749168608802929671521275200932237260"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::saturating_pow",
    "hash": "1053047337071514532017057957148025760688"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::saturating_sub",
    "hash": "777029037414284246215302155825106243251"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::saturating_sub_signed",
    "hash": "1672084786992162854014432754157319533653"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::strict_add",
    "hash": "168486647668161052363234893032618655319"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::strict_add_signed",
    "hash": "122053340004687710345206640850259674087"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::strict_div",
    "hash": "1497125076500237802610902771625222283051"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::strict_div_euclid",
    "hash": "1518047086867014410411120933948481432684"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::strict_mul",
    "hash": "142241500040788495902484730529745817771"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::strict_neg",
    "hash": "129044425337119555673560748225535133658"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::strict_pow",
    "hash": "726727263805325710415872730041419320409"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::strict_rem",
    "hash": "963309249104730186512954698935450682665"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::strict_rem_euclid",
    "hash": "710282521161757740311511461034969960067"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::strict_shl",
    "hash": "152810386563499560182397042830833287266"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::strict_shr",
    "hash": "822097773760640824814470904017098565353"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::strict_sub",
    "hash": "407047653426516504712439351411953323159"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::strict_sub_signed",
    "hash": "501871155071169423816933223341603424757"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::swap_bytes",
    "hash": "1137925077840115067510683556661222995750"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::to_be",
    "hash": "329034496861475505112654854080257985967"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::to_be_bytes",
    "hash": "177528939957915646779250646371584943208"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::to_le",
    "hash": "156596765799077535093702459763736928276"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::to_le_bytes",
    "hash": "97034479017804224414301149782633706764"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::to_ne_bytes",
    "hash": "1265457500233107470914726461582188036267"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::trailing_ones",
    "hash": "22941981884128189149570636949543572523"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::trailing_zeros",
    "hash": "173209812833195455708284626373379308480"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::unbounded_shl",
    "hash": "1539489932484957857916313726973820816918"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::unbounded_shr",
    "hash": "12288737843287440310922062379570911643"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::unchecked_add",
    "hash": "165102279875006570313790493262841011238"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::unchecked_disjoint_bitor",
    "hash": "94409925028504637668417661520866167103"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::unchecked_exact_div",
    "hash": "82768503002866128471662497056290160931"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::unchecked_mul",
    "hash": "153179968409432170012878895525884618097"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::unchecked_shl",
    "hash": "4472676907739639212617800227825279347"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::unchecked_shr",
    "hash": "72414119344532330896354487699698564108"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::unchecked_sub",
    "hash": "28237407564734207274353668131226800261"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::widening_mul",
    "hash": "98052429267840450146122102548536611683"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::wrapping_add",
    "hash": "8204181366844938535028948998470945185"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::wrapping_add_signed",
    "hash": "1795842245435418640918183336601647189319"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::wrapping_div",
    "hash": "52508716612884775386353468470807586314"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::wrapping_div_euclid",
    "hash": "182838782939873109214913765008737304683"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::wrapping_mul",
    "hash": "583575390906598051716570060015818966238"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::wrapping_neg",
    "hash": "118961882612421918598486798764363335873"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::wrapping_next_power_of_two",
    "hash": "32249750367477368858931510489166039325"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::wrapping_pow",
    "hash": "13682839374652620111985760253084886897"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::wrapping_rem",
    "hash": "437731339800014679614072800781772522280"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::wrapping_rem_euclid",
    "hash": "738450413944423505414619750000680841060"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::wrapping_shl",
    "hash": "122112003513157184658914953490605026048"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::wrapping_shr",
    "hash": "137369440908592508797847269694682208006"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::wrapping_sub",
    "hash": "20170180267557332822120616943783807769"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::wrapping_sub_signed",
    "hash": "28035295387988040085850338480908567982"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::abs_diff",
    "hash": "142397237841730969149883233413884221197"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::bit_width",
    "hash": "51284341323962456443210928864127319583"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::borrowing_sub",
    "hash": "14462330978857701914407877367224200739"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::carrying_add",
    "hash": "334373972201936246563972236637921891"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::carrying_mul",
    "hash": "74366743572129727411929136067718784450"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::carrying_mul_add",
    "hash": "538093576253093183218246065391456227881"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::cast_signed",
    "hash": "1221615192428527654212864460388163650137"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::checked_add",
    "hash": "531753677537203411515580649041778835897"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::checked_add_signed",
    "hash": "1609358056150324360917277763272561809405"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::checked_div",
    "hash": "542590069362910207313380944637711681232"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::checked_div_euclid",
    "hash": "2534293866669232472370024886135043389"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::checked_exact_div",
    "hash": "1610179961631103861013804639537077757320"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::checked_ilog",
    "hash": "5287746216879191190108326752902379703"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::checked_ilog10",
    "hash": "374894021971712801311530266284149450445"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::checked_ilog2",
    "hash": "122511778349907913684598752337301838826"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::checked_mul",
    "hash": "240558418545828238217077760916283022810"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::checked_neg",
    "hash": "29934902465127008814382174593548618978"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::checked_next_multiple_of",
    "hash": "525242164837896278616654715536565684359"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::checked_next_power_of_two",
    "hash": "20684039332758491321925185678742853666"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::checked_pow",
    "hash": "147778071877704656994296930913548643915"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::checked_rem",
    "hash": "1676619456345084038616103316654621694298"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::checked_rem_euclid",
    "hash": "181829793747929955631183418841659122643"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::checked_shl",
    "hash": "1082350616597752492713256277979298301338"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::checked_shr",
    "hash": "611830904652194928611457762090841435441"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::checked_signed_diff",
    "hash": "116587345638115688632378417836084571849"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::checked_sub",
    "hash": "1024892988194839964016649410789775953829"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::checked_sub_signed",
    "hash": "342523519046793172912753614358691087312"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::count_ones",
    "hash": "728380999845898341313353768029249754055"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::count_zeros",
    "hash": "22214590699424995136016760329515024132"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::div_ceil",
    "hash": "96199634200059537435480666067004467351"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::div_euclid",
    "hash": "158936575947372693134984669976961853494"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::div_floor",
    "hash": "95300055656191521648588842064065423585"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::exact_div",
    "hash": "3072277199255913542364763489188905348"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::from_be",
    "hash": "6374909001108218528643445219399267010"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::from_be_bytes",
    "hash": "136869237967030728269891074375374048542"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::from_le",
    "hash": "14205203073117173897429625841663214704"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::from_le_bytes",
    "hash": "157410640090393081813086861878178104092"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::from_ne_bytes",
    "hash": "50930282709819273001553819617970955667"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::ilog",
    "hash": "170180083747080082715051742801196550271"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::ilog10",
    "hash": "1611126587019356903111460600360950024965"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::ilog2",
    "hash": "389229675925899742611422347389889167684"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::is_multiple_of",
    "hash": "99645184653019418053461090128588120825"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::is_power_of_two",
    "hash": "1235214586785990822510216270209907112051"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::isolate_highest_one",
    "hash": "1437334400373912793812063685640491551672"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::isolate_lowest_one",
    "hash": "158571620240436561137587348585567512672"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::isqrt",
    "hash": "1189313318106644630013092636956310939377"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::leading_ones",
    "hash": "1150149827542004598472243068096713195"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::leading_zeros",
    "hash": "84963998571076101827005550699273034703"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::max_value",
    "hash": "81574790787553662659875498670431859956"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::min_value",
    "hash": "129714284199238495516065603269049658557"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::next_multiple_of",
    "hash": "1040832505071532191311877130007369000562"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::next_power_of_two",
    "hash": "19952067244584669526425834466561655889"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::one_less_than_next_power_of_two",
    "hash": "396923371245490034411578492750975982383"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::overflowing_add",
    "hash": "113913030460232866921506965016894129984"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::overflowing_add_signed",
    "hash": "9786723670337971797015349448722286783"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::overflowing_div",
    "hash": "107815836288460812702734804624291757639"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::overflowing_div_euclid",
    "hash": "121300205181861042224598117465357460045"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::overflowing_mul",
    "hash": "67450015903617377282640250099270452019"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::overflowing_neg",
    "hash": "175959894602718854312099459578843802955"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::overflowing_pow",
    "hash": "47626131474942474038499516135815966762"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::overflowing_rem",
    "hash": "85529944954185614186930972501730848561"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::overflowing_rem_euclid",
    "hash": "1207468333716349298716202149569937486649"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::overflowing_shl",
    "hash": "442690259344920482714102155253002992727"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::overflowing_shr",
    "hash": "1815691053055017952117014824754234819588"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::overflowing_sub",
    "hash": "1561510353743196851715557148268092132934"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::overflowing_sub_signed",
    "hash": "1574976300114416180316213884940582901924"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::pow",
    "hash": "319696963716277458314621894356044493446"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::rem_euclid",
    "hash": "1524017123068002317610312115502320355781"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::reverse_bits",
    "hash": "4606226653229009871833108123045886852"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::rotate_left",
    "hash": "53851555420899302082148520003293977402"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::rotate_right",
    "hash": "1085182525346508146516809735309931880619"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::saturating_add",
    "hash": "41314473152795194559134813461734585337"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::saturating_add_signed",
    "hash": "173111543259934445817530795611426914706"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::saturating_div",
    "hash": "35009789419310037727644729979773940397"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::saturating_mul",
    "hash": "408601784826766205110249133183606501597"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::saturating_pow",
    "hash": "1707026109449846040012005115726952450875"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::saturating_sub",
    "hash": "1031338650982961755215174402905482094889"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::saturating_sub_signed",
    "hash": "416919140480618611916515579879494659565"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::strict_add",
    "hash": "120869160302829611495064453642562508196"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::strict_add_signed",
    "hash": "773645637541344344014053088503689919870"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::strict_div",
    "hash": "497840827139493900914259847059982405850"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::strict_div_euclid",
    "hash": "1508968635892251512513734816047864784654"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::strict_mul",
    "hash": "1716535120566249539515633353365911876141"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::strict_neg",
    "hash": "17698445851217112661557210769553120190"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::strict_pow",
    "hash": "158437832109198785565929509820831565978"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::strict_rem",
    "hash": "3674687100855704854543854901816611388"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::strict_rem_euclid",
    "hash": "48015631213146699939246122604555217462"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::strict_shl",
    "hash": "91363877887320664813802967201280905633"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::strict_shr",
    "hash": "155685744327834983571261395572694371975"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::strict_sub",
    "hash": "81095521173169097805398915161109618994"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::strict_sub_signed",
    "hash": "2669262079588456127149075941513364513"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::swap_bytes",
    "hash": "938978828805449748613277095231058850795"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::to_be",
    "hash": "47902224867952394419551508265143128041"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::to_be_bytes",
    "hash": "167730789509445953245683888996047911934"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::to_le",
    "hash": "21370954455081292134046950198562714881"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::to_le_bytes",
    "hash": "113726753091947109202628204262099608306"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::to_ne_bytes",
    "hash": "167366170742354885883178086791181631037"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::trailing_ones",
    "hash": "528269216924458511513699595137399249814"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::trailing_zeros",
    "hash": "114642383672892035803606234561453442582"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::unbounded_shl",
    "hash": "163503939652219282916534801971213427601"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::unbounded_shr",
    "hash": "93991590815270828335005521047169674746"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::unchecked_add",
    "hash": "2871842483094007573795284342837108843"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::unchecked_disjoint_bitor",
    "hash": "4291576866671880818989032623315079681"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::unchecked_exact_div",
    "hash": "89793201579413993635234721109377285061"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::unchecked_mul",
    "hash": "157497133330331910084698672963691834972"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::unchecked_shl",
    "hash": "1108081449592419884016838652365169397119"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::unchecked_shr",
    "hash": "25863824767938324324852723410122846254"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::unchecked_sub",
    "hash": "1833642899907387110566952569073101253"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::widening_mul",
    "hash": "1048940810871572389714871501186442867380"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::wrapping_add",
    "hash": "87170636661664677068004457186813404325"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::wrapping_add_signed",
    "hash": "155524485000099407358617663610112853362"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::wrapping_div",
    "hash": "81953708409695107118553038952580311285"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::wrapping_div_euclid",
    "hash": "1455326962831628775716993756088381973378"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::wrapping_mul",
    "hash": "397719984256995366213973233668163909125"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::wrapping_neg",
    "hash": "1141628557547571334111381902375828034670"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::wrapping_next_power_of_two",
    "hash": "55101959084915241251745725913067938271"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::wrapping_pow",
    "hash": "1099332370415712308512245588708471458569"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::wrapping_rem",
    "hash": "4637355366130916626164440291015361913"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::wrapping_rem_euclid",
    "hash": "1159349713643801992714457603987501046289"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::wrapping_shl",
    "hash": "97244087392592679868638070082735584826"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::wrapping_shr",
    "hash": "1505940555451468950710901868968238947747"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::wrapping_sub",
    "hash": "606629420329787124913066645132953498907"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::wrapping_sub_signed",
    "hash": "1760934806106776272314211132941222330449"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::abs_diff",
    "hash": "1051672502479025085417412517041630584814"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::bit_width",
    "hash": "676568396104652556411592523837916720064"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::borrowing_sub",
    "hash": "10178184563993266933507270431326501469"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::carrying_add",
    "hash": "139028240918641289709110585379868266104"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::carrying_mul",
    "hash": "944874061645765344016661221106013087618"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::carrying_mul_add",
    "hash": "288292186261783503910110867571558945856"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::cast_signed",
    "hash": "166170678550037578251612486814880641684"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::checked_add",
    "hash": "134270574831874746711359416115025312728"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::checked_add_signed",
    "hash": "174737214333031541929401408459558934112"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::checked_div",
    "hash": "1209615284808381638810179553623286773220"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::checked_div_euclid",
    "hash": "143711689587711465286700171916260795"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::checked_exact_div",
    "hash": "34343083136594305664544464416495349602"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::checked_ilog",
    "hash": "1479354482527787640014017564652504714084"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::checked_ilog10",
    "hash": "66295253699932062899066786440991786023"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::checked_ilog2",
    "hash": "438400559513770300315054985122315692911"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::checked_mul",
    "hash": "5544772364736324776191382138092914256"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::checked_neg",
    "hash": "163177568958740364714939141783342953871"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::checked_next_multiple_of",
    "hash": "1585436741084808646510004067790494739693"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::checked_next_power_of_two",
    "hash": "68536588532403476515204527331591699469"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::checked_pow",
    "hash": "87211031355194728242341473227077018324"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::checked_rem",
    "hash": "14012185651956748587301099896809499314"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::checked_rem_euclid",
    "hash": "23486406772473770717425695853407245109"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::checked_shl",
    "hash": "4219470648881185371040160338307379485"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::checked_shr",
    "hash": "161364967799900665054679089531102285370"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::checked_signed_diff",
    "hash": "92313607152003042886950054775398474774"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::checked_sub",
    "hash": "3720772137552523045005220492995808030"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::checked_sub_signed",
    "hash": "1449629679343847239714010031662829112556"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::count_ones",
    "hash": "14162220972627847142622455969678089812"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::count_zeros",
    "hash": "1720485249060283087610669509256925302045"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::div_ceil",
    "hash": "433993201853395090012053823958635604304"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::div_euclid",
    "hash": "1078898216758382580715807960013271948042"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::div_floor",
    "hash": "69641315930718955546473982668407669858"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::exact_div",
    "hash": "175943967432906351966830155813167654043"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::from_be",
    "hash": "603623528088994878910102967048102570167"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::from_be_bytes",
    "hash": "1552843712630565468673827044415480947"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::from_le",
    "hash": "46009773621495600332175664761861474339"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::from_le_bytes",
    "hash": "1984594418453745432360434961879735633"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::from_ne_bytes",
    "hash": "105615234667599507532226695014662855135"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::ilog",
    "hash": "812731899932568415913629420430941376207"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::ilog10",
    "hash": "102680408105022911531656206353782085708"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::ilog2",
    "hash": "1382314127995618679917366703942431086347"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::is_multiple_of",
    "hash": "16011942637203854515982978925753486816"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::is_power_of_two",
    "hash": "154055094907922255943694577872268201535"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::isolate_highest_one",
    "hash": "67579110625558596189781179578407280305"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::isolate_lowest_one",
    "hash": "125615643676904697213375452203019950089"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::isqrt",
    "hash": "788715192694897037410526697142022455446"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::leading_ones",
    "hash": "894423408122125287911150344013984973284"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::leading_zeros",
    "hash": "684477091865463875711561223730828601224"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::max_value",
    "hash": "109488749417429562193430543882734747380"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::min_value",
    "hash": "153677233327279855757219449211334413695"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::next_multiple_of",
    "hash": "1458812398144820558114143552177846717314"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::next_power_of_two",
    "hash": "447201620181300770310923972732133915048"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::one_less_than_next_power_of_two",
    "hash": "93960934421087382075879581637712616721"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::overflowing_add",
    "hash": "846515002433725374617496672068942574495"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::overflowing_add_signed",
    "hash": "61089228021836990087231691960619370560"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::overflowing_div",
    "hash": "1542017236523297493411865004730291399582"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::overflowing_div_euclid",
    "hash": "67328407415875734163150601191789755420"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::overflowing_mul",
    "hash": "1171015725001951872613907826891560385921"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::overflowing_neg",
    "hash": "1591739716117799194518436313429653678309"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::overflowing_pow",
    "hash": "108830083839250097117803136157325741652"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::overflowing_rem",
    "hash": "61238268725713630349213533676477327628"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::overflowing_rem_euclid",
    "hash": "22409326815684161805611284314187063142"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::overflowing_shl",
    "hash": "1843705968033736112296838031514960437"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::overflowing_shr",
    "hash": "11958808405947988321809493211634193439"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::overflowing_sub",
    "hash": "47858655920201403657090585992599102576"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::overflowing_sub_signed",
    "hash": "47434239592396958906995380315958623416"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::pow",
    "hash": "18214153400810780905862156228963711419"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::rem_euclid",
    "hash": "165359578355201260019371835225646585189"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::reverse_bits",
    "hash": "143537573655890634422951044556858188562"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::rotate_left",
    "hash": "968013623670590662617368870438250630100"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::rotate_right",
    "hash": "1022598205840035507812523925770559770536"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::saturating_add",
    "hash": "1528070468266012754010078879690927804430"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::saturating_add_signed",
    "hash": "698780517994071819410818363575891498071"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::saturating_div",
    "hash": "1625198175426468283517424313609926086924"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::saturating_mul",
    "hash": "108110002417672659474472145515278752889"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::saturating_pow",
    "hash": "984377423356935500117941553654079478409"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::saturating_sub",
    "hash": "1828955695588472944314060583929768676539"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::saturating_sub_signed",
    "hash": "10784376937197017567745554348416722235"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::strict_add",
    "hash": "125985961326185599906204950486193612070"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::strict_add_signed",
    "hash": "46282818765137756758024065959078094526"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::strict_div",
    "hash": "178295704870895858437921747524495577651"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::strict_div_euclid",
    "hash": "95070636156541900025670568953594198401"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::strict_mul",
    "hash": "354928641349660045713714056929706054038"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::strict_neg",
    "hash": "134129891412709561579981145517983412166"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::strict_pow",
    "hash": "5490384462008716695422071557954071887"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::strict_rem",
    "hash": "1559550215053711419010044133992327745337"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::strict_rem_euclid",
    "hash": "162449534890152659217548855888367542904"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::strict_shl",
    "hash": "111205766774747724256984446850633506209"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::strict_shr",
    "hash": "243091370528163382917701022855363305510"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::strict_sub",
    "hash": "1266066765700227127416119046110950526669"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::strict_sub_signed",
    "hash": "161545117231566224785410944604128577705"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::swap_bytes",
    "hash": "1647646543140496351111240083691578626967"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::to_be",
    "hash": "24781373274369092998885730020344630633"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::to_be_bytes",
    "hash": "80926317189284070410902469346955301983"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::to_le",
    "hash": "6982146160932451435177353422240890031"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::to_le_bytes",
    "hash": "1483173034460847089413729281844694038463"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::to_ne_bytes",
    "hash": "84015178654273534997727654756533160041"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::trailing_ones",
    "hash": "22550028568316757201357819266312262497"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::trailing_zeros",
    "hash": "754156445432293784613895532018780553807"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::unbounded_shl",
    "hash": "85447627210752787628182254750370869992"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::unbounded_shr",
    "hash": "581375762786601822417297121816321671927"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::unchecked_add",
    "hash": "1538575406264905305610059445668415805054"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::unchecked_disjoint_bitor",
    "hash": "940945522127613231515686879639731793273"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::unchecked_exact_div",
    "hash": "128596743104455739844813516684960421018"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::unchecked_mul",
    "hash": "1248350547730927169111422098725232539458"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::unchecked_shl",
    "hash": "182350293916006060017519066058419258291"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::unchecked_shr",
    "hash": "1583480647435114953410488230508665005859"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::unchecked_sub",
    "hash": "17861345212815140014010410364897735360"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::widening_mul",
    "hash": "1231537111632078397114025498501082929488"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::wrapping_add",
    "hash": "184457174969086866752763536501746275832"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::wrapping_add_signed",
    "hash": "349312923689930190916199910025664062435"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::wrapping_div",
    "hash": "102065292418817556968645084035715997714"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::wrapping_div_euclid",
    "hash": "175707093923061391911971279024374827676"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::wrapping_mul",
    "hash": "83249446473036655146511420464645884585"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::wrapping_neg",
    "hash": "964100667275104614711845075066813994037"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::wrapping_next_power_of_two",
    "hash": "28191775354889105671636277474391000211"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::wrapping_pow",
    "hash": "103667241182590312983484705006350240633"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::wrapping_rem",
    "hash": "113170360881933373316266352871011687379"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::wrapping_rem_euclid",
    "hash": "496604638568122348710451071905919034254"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::wrapping_shl",
    "hash": "180908007464494171963258942389764393614"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::wrapping_shr",
    "hash": "51914697592725070034363781011668758229"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::wrapping_sub",
    "hash": "160648969046233484485993117338072969939"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::wrapping_sub_signed",
    "hash": "666757091684003134716412940574302629343"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::abs_diff",
    "hash": "83296026332579416941842209678709993328"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::bit_width",
    "hash": "151707560626181985551778825526827709810"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::borrowing_sub",
    "hash": "1346100723163160910117553628727964331150"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::carrying_add",
    "hash": "1552751718487954710816374743819810770122"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::carrying_mul",
    "hash": "1807295133291548969012815535103705629005"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::carrying_mul_add",
    "hash": "1322966695047333476711840746295352197232"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::cast_signed",
    "hash": "135234710222715340895873340562352439106"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::checked_add",
    "hash": "38173889201636315922757092210776486888"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::checked_add_signed",
    "hash": "158007262211139203124150190028909808779"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::checked_div",
    "hash": "1347592369819782831015986173373059033531"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::checked_div_euclid",
    "hash": "38001909631779175905892947061225957314"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::checked_exact_div",
    "hash": "525268762566875901312037420141599465915"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::checked_ilog",
    "hash": "349533918086425282415581421360034773699"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::checked_ilog10",
    "hash": "6311491064899316466778772473969247947"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::checked_ilog2",
    "hash": "79471743776648140619750815083574719749"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::checked_mul",
    "hash": "97892229237199250718782565098232937194"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::checked_neg",
    "hash": "142600961736250263217669649230551505971"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::checked_next_multiple_of",
    "hash": "131220375539269101381765040623184669745"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::checked_next_power_of_two",
    "hash": "1596000835656635559112103182559914274246"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::checked_pow",
    "hash": "15102673647964917643040465160690349995"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::checked_rem",
    "hash": "139976331465974560692481362508266052356"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::checked_rem_euclid",
    "hash": "998629889375752401111266091067503089104"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::checked_shl",
    "hash": "67881905206763748267905155749967451743"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::checked_shr",
    "hash": "134029413685437245315185678515982899890"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::checked_signed_diff",
    "hash": "234178548162769380713383477913121804281"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::checked_sub",
    "hash": "36263650381921031236374006938891928812"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::checked_sub_signed",
    "hash": "48225905712863541641694949294986347633"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::count_ones",
    "hash": "37868078735602925891573318122962819320"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::count_zeros",
    "hash": "59595789204335765051971377478309508502"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::div_ceil",
    "hash": "76217497761975253402336742341930803263"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::div_euclid",
    "hash": "74349783248801582109981539644541589290"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::div_floor",
    "hash": "1510579062113189503511181032330211615895"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::exact_div",
    "hash": "630731021751293469417582947406804604678"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::from_be",
    "hash": "67585150222172367286305682972770467701"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::from_be_bytes",
    "hash": "1825212831656640468613262251162330862879"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::from_le",
    "hash": "62039693472512833168058058277232150771"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::from_le_bytes",
    "hash": "50889617238251039398364119237084942230"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::from_ne_bytes",
    "hash": "379345774402074462414438979972804593126"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::ilog",
    "hash": "49372192025192993306019954843936398314"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::ilog10",
    "hash": "39464558080596211776009823124245270708"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::ilog2",
    "hash": "296379394274353785313073430830910699396"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::is_multiple_of",
    "hash": "681932933892771600113755084868377368020"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::is_power_of_two",
    "hash": "1578703703635175719018067387082881800385"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::isolate_highest_one",
    "hash": "169205806106050992535885664424893682760"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::isolate_lowest_one",
    "hash": "1218444585494305303513264272269009204997"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::isqrt",
    "hash": "80427417943346103755050961839495586604"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::leading_ones",
    "hash": "215706662918599913117896637052362712242"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::leading_zeros",
    "hash": "973963700743626571313543942497157762584"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::max_value",
    "hash": "772205062259526263710248068086693649841"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::min_value",
    "hash": "81944686636744433311067155037442308503"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::next_multiple_of",
    "hash": "8182742971598975822947276546846121056"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::next_power_of_two",
    "hash": "1653359134221805015816801339543527251618"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::one_less_than_next_power_of_two",
    "hash": "45566009677756466287104668603370329937"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::overflowing_add",
    "hash": "125312877505429677902664359715729802479"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::overflowing_add_signed",
    "hash": "134048071163561259015400767089042556532"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::overflowing_div",
    "hash": "670575510201175636815017183480338796651"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::overflowing_div_euclid",
    "hash": "1719383473446565422415012456423426135798"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::overflowing_mul",
    "hash": "632379827537218859118037651046044448068"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::overflowing_neg",
    "hash": "841850688698630998516049030044845853531"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::overflowing_pow",
    "hash": "20580337483740431776568371050804203562"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::overflowing_rem",
    "hash": "5868992268653183023980830888926581573"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::overflowing_rem_euclid",
    "hash": "1114998228942190502613087803522201385088"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::overflowing_shl",
    "hash": "7586093104823415332405478329944231572"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::overflowing_shr",
    "hash": "33026696948955093513497045657807866641"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::overflowing_sub",
    "hash": "1204668293620499224013336883119093261459"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::overflowing_sub_signed",
    "hash": "1318000656748396819213822796312811549195"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::pow",
    "hash": "183039095332953386051976073419107158070"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::rem_euclid",
    "hash": "899958755393898341217549721142176894277"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::reverse_bits",
    "hash": "380342174505376727011170827279279797328"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::rotate_left",
    "hash": "16814323171986053112550409500152119362"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::rotate_right",
    "hash": "1495920881356199952615535369901521539878"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::saturating_add",
    "hash": "159822079557008185828209445829366525941"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::saturating_add_signed",
    "hash": "970036152291207435112448714739855710373"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::saturating_div",
    "hash": "118198145667980382491530641895828073627"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::saturating_mul",
    "hash": "530329434428699031818396369573342280682"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::saturating_pow",
    "hash": "1217378248313002918812574541980157396900"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::saturating_sub",
    "hash": "24529608587277498102328891904904132557"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::saturating_sub_signed",
    "hash": "5034521137421134551983798031964209783"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::strict_add",
    "hash": "16130167601151595825263604996908936161"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::strict_add_signed",
    "hash": "124513722807324656758056946177336853206"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::strict_div",
    "hash": "1593414030855141611610295408144692644341"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::strict_div_euclid",
    "hash": "347203615037083800514906394479898648164"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::strict_mul",
    "hash": "137701679091543669966027543914726641699"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::strict_neg",
    "hash": "1628269241366372341513562539611823191431"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::strict_pow",
    "hash": "28455496628787919289616968513152110363"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::strict_rem",
    "hash": "254161393929025217111316573691055678028"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::strict_rem_euclid",
    "hash": "162706395288433588052636026528751648811"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::strict_shl",
    "hash": "184323417130355334842275606073622675774"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::strict_shr",
    "hash": "100861751418462043411945443854641070903"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::strict_sub",
    "hash": "8294189987491684417682658188764971723"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::strict_sub_signed",
    "hash": "646971895952989266011507338386825310848"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::swap_bytes",
    "hash": "6780503888463909387486231740107094732"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::to_be",
    "hash": "140509898966828812309041359044284251345"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::to_be_bytes",
    "hash": "139698486828575633967528120375008949302"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::to_le",
    "hash": "449823434613544467716508019993472839206"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::to_le_bytes",
    "hash": "1031728250121609442411162070877691558354"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::to_ne_bytes",
    "hash": "135309619636032677826767270883305133826"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::trailing_ones",
    "hash": "124552113825980327474368906280161314887"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::trailing_zeros",
    "hash": "123189968806737922451474425564302528253"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::unbounded_shl",
    "hash": "3729117400568853487605481887477815680"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::unbounded_shr",
    "hash": "1387604231825772388016126970600595673338"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::unchecked_add",
    "hash": "5667765796385169624800112337147502292"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::unchecked_disjoint_bitor",
    "hash": "1159700503173972172913040495243663899848"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::unchecked_exact_div",
    "hash": "96467690428015729718303317059222618857"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::unchecked_mul",
    "hash": "1810111867238635220816521710026384652286"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::unchecked_shl",
    "hash": "1288897335351085569410125829304006792963"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::unchecked_shr",
    "hash": "1270254805620232328114762034860362648072"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::unchecked_sub",
    "hash": "171593739300022194915526452191835401234"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::widening_mul",
    "hash": "136812107922339896878776863626029556185"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::wrapping_add",
    "hash": "34879117884290460776842531453279835025"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::wrapping_add_signed",
    "hash": "116390360054399967347131315356377146442"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::wrapping_div",
    "hash": "1362118237625370047312568103028604678354"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::wrapping_div_euclid",
    "hash": "20659401912951040691567018752938640104"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::wrapping_mul",
    "hash": "557156035074123918411895515072456741095"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::wrapping_neg",
    "hash": "111690993512763648603755309238315308530"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::wrapping_next_power_of_two",
    "hash": "1048954784141525337113048094877463731068"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::wrapping_pow",
    "hash": "183573081358445393244576438985168319283"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::wrapping_rem",
    "hash": "104555919653941103895884120403378556968"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::wrapping_rem_euclid",
    "hash": "89055956275391609178174330022381574575"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::wrapping_shl",
    "hash": "40829552461866133197584390691544951120"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::wrapping_shr",
    "hash": "130912144845859469238045520942845052522"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::wrapping_sub",
    "hash": "350987180030767754610510964114749211972"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::wrapping_sub_signed",
    "hash": "1342706060214343179514620785229455084243"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i128> as ops::arith::Add>::add",
    "hash": "35026747912958855034576352144731830239"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i128> as ops::arith::AddAssign<i128>>::add_assign",
    "hash": "88275503102899125652626521455036095283"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i128> as ops::arith::AddAssign>::add_assign",
    "hash": "1253151374982866203116359292804443994811"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i128> as ops::arith::Div>::div",
    "hash": "83480849713149041151724343024507828673"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i128> as ops::arith::DivAssign<i128>>::div_assign",
    "hash": "1041398990983188100112401333418533229540"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i128> as ops::arith::DivAssign>::div_assign",
    "hash": "62606842701432777498754768533504823568"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i128> as ops::arith::Mul>::mul",
    "hash": "75276274723440241311354339501903970794"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i128> as ops::arith::MulAssign<i128>>::mul_assign",
    "hash": "1489670883292465023914243978775671273048"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i128> as ops::arith::MulAssign>::mul_assign",
    "hash": "1989871471401488115779229407438719802"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i128> as ops::arith::Neg>::neg",
    "hash": "155643433585250849113489732057138233279"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i128> as ops::arith::Rem>::rem",
    "hash": "40064693794798590593987344046602113726"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i128> as ops::arith::RemAssign<i128>>::rem_assign",
    "hash": "145573156104827180336429552442486264140"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i128> as ops::arith::RemAssign>::rem_assign",
    "hash": "147456283166443752385524823586313376408"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i128> as ops::arith::Sub>::sub",
    "hash": "129269912205645993479573899130503382961"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i128> as ops::arith::SubAssign<i128>>::sub_assign",
    "hash": "669202744650492722212469816691344841784"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i128> as ops::arith::SubAssign>::sub_assign",
    "hash": "958439890181691188710079441253333730755"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i128> as ops::bit::BitAnd>::bitand",
    "hash": "70493415269589840911407610488547624253"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i128> as ops::bit::BitAndAssign<i128>>::bitand_assign",
    "hash": "162286681417157734724601659150776552085"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i128> as ops::bit::BitAndAssign>::bitand_assign",
    "hash": "762452374046528571716349262227348707038"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i128> as ops::bit::BitOr>::bitor",
    "hash": "112062649414193849825326272542381297773"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i128> as ops::bit::BitOrAssign<i128>>::bitor_assign",
    "hash": "993779571207148722115594003705053999024"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i128> as ops::bit::BitOrAssign>::bitor_assign",
    "hash": "18954759666120045113477312031498919860"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i128> as ops::bit::BitXor>::bitxor",
    "hash": "71068714188589246651152651988979469532"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i128> as ops::bit::BitXorAssign<i128>>::bitxor_assign",
    "hash": "946913328977667275616518185123361014441"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i128> as ops::bit::BitXorAssign>::bitxor_assign",
    "hash": "62789010701744906472650850523357238811"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i128> as ops::bit::Not>::not",
    "hash": "152335012584365706195144848729680384529"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i128> as ops::bit::Shl<usize>>::shl",
    "hash": "1315815637759499342718210777962845719965"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i128> as ops::bit::ShlAssign<usize>>::shl_assign",
    "hash": "46680852100353788835493557302015851890"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i128> as ops::bit::Shr<usize>>::shr",
    "hash": "84781875862214575813324580011375643862"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i128> as ops::bit::ShrAssign<usize>>::shr_assign",
    "hash": "155704239879450710737613715556716480430"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i16> as ops::arith::Add>::add",
    "hash": "89150093548749212604743260294637671340"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i16> as ops::arith::AddAssign<i16>>::add_assign",
    "hash": "62929971184665477659374721226772684160"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i16> as ops::arith::AddAssign>::add_assign",
    "hash": "994555480085317770612035847313938585979"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i16> as ops::arith::Div>::div",
    "hash": "1726386924376628479511037358054228630448"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i16> as ops::arith::DivAssign<i16>>::div_assign",
    "hash": "529868535036163989418032648217736020683"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i16> as ops::arith::DivAssign>::div_assign",
    "hash": "553664935251385276616408256282345305109"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i16> as ops::arith::Mul>::mul",
    "hash": "10396187813531186989359990422305841531"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i16> as ops::arith::MulAssign<i16>>::mul_assign",
    "hash": "15141813621689285897541941189298251950"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i16> as ops::arith::MulAssign>::mul_assign",
    "hash": "11917201277894134234511283132838593260"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i16> as ops::arith::Neg>::neg",
    "hash": "571639637257388163914708206412160846496"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i16> as ops::arith::Rem>::rem",
    "hash": "691586711844778420118332281447014223896"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i16> as ops::arith::RemAssign<i16>>::rem_assign",
    "hash": "459954196990533142613811616592365168830"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i16> as ops::arith::RemAssign>::rem_assign",
    "hash": "181749862046971747782066666039656505551"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i16> as ops::arith::Sub>::sub",
    "hash": "950248065745668649915965947868436864044"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i16> as ops::arith::SubAssign<i16>>::sub_assign",
    "hash": "137529396994765686063391665458636583121"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i16> as ops::arith::SubAssign>::sub_assign",
    "hash": "302985736821130066617599761114830550144"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i16> as ops::bit::BitAnd>::bitand",
    "hash": "18331133260686256387866816458979057988"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i16> as ops::bit::BitAndAssign<i16>>::bitand_assign",
    "hash": "1257207589859342341616545880198526501589"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i16> as ops::bit::BitAndAssign>::bitand_assign",
    "hash": "155403075995464031659261935548509317562"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i16> as ops::bit::BitOr>::bitor",
    "hash": "182483547220193643062729354911722615756"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i16> as ops::bit::BitOrAssign<i16>>::bitor_assign",
    "hash": "51602074703988969461609074501191342665"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i16> as ops::bit::BitOrAssign>::bitor_assign",
    "hash": "179031555685206478911927447634192652404"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i16> as ops::bit::BitXor>::bitxor",
    "hash": "1407004932897518011114990903027164791364"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i16> as ops::bit::BitXorAssign<i16>>::bitxor_assign",
    "hash": "1054672868422697894410651591815545204895"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i16> as ops::bit::BitXorAssign>::bitxor_assign",
    "hash": "168717845759057778217951491526419373966"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i16> as ops::bit::Not>::not",
    "hash": "181490906706048322662275188474944222756"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i16> as ops::bit::Shl<usize>>::shl",
    "hash": "24947887622728480369907290346022623643"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i16> as ops::bit::ShlAssign<usize>>::shl_assign",
    "hash": "1000546515124480420615677372896824068700"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i16> as ops::bit::Shr<usize>>::shr",
    "hash": "1482260401740968527416793125132248860161"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i16> as ops::bit::ShrAssign<usize>>::shr_assign",
    "hash": "26738761250132789025849858451543994048"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i32> as ops::arith::Add>::add",
    "hash": "946133455270596083815737157136416569474"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i32> as ops::arith::AddAssign<i32>>::add_assign",
    "hash": "3875870273799578713299383861468941533"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i32> as ops::arith::AddAssign>::add_assign",
    "hash": "13021573135129903921433144221851576239"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i32> as ops::arith::Div>::div",
    "hash": "155544401163070861982261617052005983296"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i32> as ops::arith::DivAssign<i32>>::div_assign",
    "hash": "1094681669009438313610373751586806555384"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i32> as ops::arith::DivAssign>::div_assign",
    "hash": "63714501362448677533865924877572265072"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i32> as ops::arith::Mul>::mul",
    "hash": "842726293089578805411042562906632274565"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i32> as ops::arith::MulAssign<i32>>::mul_assign",
    "hash": "103205870438203655245514040485481850239"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i32> as ops::arith::MulAssign>::mul_assign",
    "hash": "54107540701563982877980821561440459683"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i32> as ops::arith::Neg>::neg",
    "hash": "71310793929279711576945432541179948775"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i32> as ops::arith::Rem>::rem",
    "hash": "1030565271165833696218358185757730084636"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i32> as ops::arith::RemAssign<i32>>::rem_assign",
    "hash": "1386500714364389093812252643214545782723"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i32> as ops::arith::RemAssign>::rem_assign",
    "hash": "1147680540387836834518007969342137891920"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i32> as ops::arith::Sub>::sub",
    "hash": "1823496543809586209017206450824388453277"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i32> as ops::arith::SubAssign<i32>>::sub_assign",
    "hash": "165066011792932025888309234338262812730"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i32> as ops::arith::SubAssign>::sub_assign",
    "hash": "1292611832001405284910893742579889081202"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i32> as ops::bit::BitAnd>::bitand",
    "hash": "80407205364924958417579345926786121379"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i32> as ops::bit::BitAndAssign<i32>>::bitand_assign",
    "hash": "532957278365025934714957920968287548500"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i32> as ops::bit::BitAndAssign>::bitand_assign",
    "hash": "1311692526491819487716087177006343797722"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i32> as ops::bit::BitOr>::bitor",
    "hash": "166682735392443399417558963319560876362"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i32> as ops::bit::BitOrAssign<i32>>::bitor_assign",
    "hash": "63652717384354227633302453048762703296"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i32> as ops::bit::BitOrAssign>::bitor_assign",
    "hash": "27312798479234911189460425113239355800"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i32> as ops::bit::BitXor>::bitxor",
    "hash": "161982801780879410626406187099018628043"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i32> as ops::bit::BitXorAssign<i32>>::bitxor_assign",
    "hash": "139447603458712754254531503151638567812"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i32> as ops::bit::BitXorAssign>::bitxor_assign",
    "hash": "33297445294704237614089363601551659682"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i32> as ops::bit::Not>::not",
    "hash": "15535952777390239167920606516926671066"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i32> as ops::bit::Shl<usize>>::shl",
    "hash": "207987434639224095818176766795807436651"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i32> as ops::bit::ShlAssign<usize>>::shl_assign",
    "hash": "117531962980175584206761328417806131367"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i32> as ops::bit::Shr<usize>>::shr",
    "hash": "957284248256272049214028992025248791674"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i32> as ops::bit::ShrAssign<usize>>::shr_assign",
    "hash": "1356094124425794750817549893679369032032"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i64> as ops::arith::Add>::add",
    "hash": "26911663881364595875173426155217223577"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i64> as ops::arith::AddAssign<i64>>::add_assign",
    "hash": "107203034586411956359765177423354908016"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i64> as ops::arith::AddAssign>::add_assign",
    "hash": "107744323487044230959866900125069538654"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i64> as ops::arith::Div>::div",
    "hash": "277746867050254211218365938654111627886"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i64> as ops::arith::DivAssign<i64>>::div_assign",
    "hash": "15114193931058225182941658409213982304"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i64> as ops::arith::DivAssign>::div_assign",
    "hash": "31075716761992370575242784903111327013"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i64> as ops::arith::Mul>::mul",
    "hash": "100481620100833430015287720414677490982"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i64> as ops::arith::MulAssign<i64>>::mul_assign",
    "hash": "693094220782274239414714638380685256464"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i64> as ops::arith::MulAssign>::mul_assign",
    "hash": "559035472908909928214816354586513366676"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i64> as ops::arith::Neg>::neg",
    "hash": "9751061212820775934967977827359604134"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i64> as ops::arith::Rem>::rem",
    "hash": "776762566037861259217342607375777066792"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i64> as ops::arith::RemAssign<i64>>::rem_assign",
    "hash": "84529339849039958201239836496997688692"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i64> as ops::arith::RemAssign>::rem_assign",
    "hash": "118409556791225010138840562241411517904"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i64> as ops::arith::Sub>::sub",
    "hash": "920841510056619512018172347912750359519"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i64> as ops::arith::SubAssign<i64>>::sub_assign",
    "hash": "5608419555768665856232355358126247380"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i64> as ops::arith::SubAssign>::sub_assign",
    "hash": "14994203696898487165030864163601808129"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i64> as ops::bit::BitAnd>::bitand",
    "hash": "50162969233313232266109479598995136813"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i64> as ops::bit::BitAndAssign<i64>>::bitand_assign",
    "hash": "967894105241719505716962790493025179115"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i64> as ops::bit::BitAndAssign>::bitand_assign",
    "hash": "1081484146589229113012188184673416461789"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i64> as ops::bit::BitOr>::bitor",
    "hash": "1636709926454604578213091624259131050265"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i64> as ops::bit::BitOrAssign<i64>>::bitor_assign",
    "hash": "64108743245711202037787803954362645"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i64> as ops::bit::BitOrAssign>::bitor_assign",
    "hash": "129223838115075689579715832321393059697"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i64> as ops::bit::BitXor>::bitxor",
    "hash": "1833063703470503422311403246938206599647"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i64> as ops::bit::BitXorAssign<i64>>::bitxor_assign",
    "hash": "7356270647471604151839703163555571584"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i64> as ops::bit::BitXorAssign>::bitxor_assign",
    "hash": "13828591166768864245532035323541931719"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i64> as ops::bit::Not>::not",
    "hash": "79689035439824619177680624430150056348"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i64> as ops::bit::Shl<usize>>::shl",
    "hash": "67043005225540703681834159499265680735"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i64> as ops::bit::ShlAssign<usize>>::shl_assign",
    "hash": "59516437435932349134070120911345978322"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i64> as ops::bit::Shr<usize>>::shr",
    "hash": "1446202907548185735814602916330974064139"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i64> as ops::bit::ShrAssign<usize>>::shr_assign",
    "hash": "42184723552480730132765317499481780620"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i8> as ops::arith::Add>::add",
    "hash": "71112110156550497723719386295894653764"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i8> as ops::arith::AddAssign<i8>>::add_assign",
    "hash": "138909811852858761955156311261082279524"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i8> as ops::arith::AddAssign>::add_assign",
    "hash": "1439064726421561194013497762537329595303"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i8> as ops::arith::Div>::div",
    "hash": "875680287832718527811717756131975017780"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i8> as ops::arith::DivAssign<i8>>::div_assign",
    "hash": "674919111216724285312101358011487750659"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i8> as ops::arith::DivAssign>::div_assign",
    "hash": "165269883368613431161421668885591517530"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i8> as ops::arith::Mul>::mul",
    "hash": "302104039942262627713842296374662741070"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i8> as ops::arith::MulAssign<i8>>::mul_assign",
    "hash": "167176163912909823233561877790577829081"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i8> as ops::arith::MulAssign>::mul_assign",
    "hash": "28476794606448929615170418187325695764"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i8> as ops::arith::Neg>::neg",
    "hash": "1414155522662004824416163709007177101610"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i8> as ops::arith::Rem>::rem",
    "hash": "142189766163020504579692263608831730321"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i8> as ops::arith::RemAssign<i8>>::rem_assign",
    "hash": "1387492222011801237110662981226610548458"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i8> as ops::arith::RemAssign>::rem_assign",
    "hash": "125881446245639898242124411471089175667"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i8> as ops::arith::Sub>::sub",
    "hash": "943808289426667322214842488267616702671"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i8> as ops::arith::SubAssign<i8>>::sub_assign",
    "hash": "69918020385512074454035970622941492002"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i8> as ops::arith::SubAssign>::sub_assign",
    "hash": "148312981145357316213809494597841958567"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i8> as ops::bit::BitAnd>::bitand",
    "hash": "1808525111157882397110158931266951288033"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i8> as ops::bit::BitAndAssign<i8>>::bitand_assign",
    "hash": "113855230296861063058702521009421016163"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i8> as ops::bit::BitAndAssign>::bitand_assign",
    "hash": "25925854921164593779319854054356584891"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i8> as ops::bit::BitOr>::bitor",
    "hash": "157839435995156017399682339764070340922"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i8> as ops::bit::BitOrAssign<i8>>::bitor_assign",
    "hash": "161052688339746012267912914714523874691"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i8> as ops::bit::BitOrAssign>::bitor_assign",
    "hash": "474503140961616184316426223388279808027"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i8> as ops::bit::BitXor>::bitxor",
    "hash": "145409655881216852487260256185527812946"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i8> as ops::bit::BitXorAssign<i8>>::bitxor_assign",
    "hash": "88190601767374797334450206761987309506"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i8> as ops::bit::BitXorAssign>::bitxor_assign",
    "hash": "1305635712114170749914644729110422398220"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i8> as ops::bit::Not>::not",
    "hash": "1717325501528025176314336167055796456028"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i8> as ops::bit::Shl<usize>>::shl",
    "hash": "2076415472089868169673521186629765118"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i8> as ops::bit::ShlAssign<usize>>::shl_assign",
    "hash": "122436171930673393585971566172256090458"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i8> as ops::bit::Shr<usize>>::shr",
    "hash": "37446976533757251682755477265389850229"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i8> as ops::bit::ShrAssign<usize>>::shr_assign",
    "hash": "614521457412158720814470101220309491818"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<isize> as ops::arith::Add>::add",
    "hash": "11909623106150136469550078665907706191"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<isize> as ops::arith::AddAssign<isize>>::add_assign",
    "hash": "1421608148988757087711964323109529464382"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<isize> as ops::arith::AddAssign>::add_assign",
    "hash": "9166440434969621995122411838366383499"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<isize> as ops::arith::Div>::div",
    "hash": "176637180471581873584964447288442098913"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<isize> as ops::arith::DivAssign<isize>>::div_assign",
    "hash": "105177427829482495759637828662971493322"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<isize> as ops::arith::DivAssign>::div_assign",
    "hash": "1647603702203575424411161893135883619898"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<isize> as ops::arith::Mul>::mul",
    "hash": "373868444302324913817984800460242475631"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<isize> as ops::arith::MulAssign<isize>>::mul_assign",
    "hash": "175030426125724250953612154902412244341"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<isize> as ops::arith::MulAssign>::mul_assign",
    "hash": "38170860217677713834067662390482482399"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<isize> as ops::arith::Neg>::neg",
    "hash": "1824538245926774370215421239140883684943"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<isize> as ops::arith::Rem>::rem",
    "hash": "1413782605656141921817997418959735798126"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<isize> as ops::arith::RemAssign<isize>>::rem_assign",
    "hash": "894943202286748832812877963312498987350"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<isize> as ops::arith::RemAssign>::rem_assign",
    "hash": "772416380221161031316248198196890491860"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<isize> as ops::arith::Sub>::sub",
    "hash": "147671140933505301449453678136407127713"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<isize> as ops::arith::SubAssign<isize>>::sub_assign",
    "hash": "733828459801061376015188312062691665941"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<isize> as ops::arith::SubAssign>::sub_assign",
    "hash": "530232774170874801714161206358545356833"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<isize> as ops::bit::BitAnd>::bitand",
    "hash": "596881749631924052716085142365067972895"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<isize> as ops::bit::BitAndAssign<isize>>::bitand_assign",
    "hash": "42890771613235163102982727196084723970"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<isize> as ops::bit::BitAndAssign>::bitand_assign",
    "hash": "60426601293081134607924666033392141092"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<isize> as ops::bit::BitOr>::bitor",
    "hash": "174792411003192944265387252098278310419"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<isize> as ops::bit::BitOrAssign<isize>>::bitor_assign",
    "hash": "3512343776184952613232037660410434274"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<isize> as ops::bit::BitOrAssign>::bitor_assign",
    "hash": "1251702683622325430113070692954749310751"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<isize> as ops::bit::BitXor>::bitxor",
    "hash": "147529661748660407717433466526953269898"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<isize> as ops::bit::BitXorAssign<isize>>::bitxor_assign",
    "hash": "15178805659497728927254174286228564044"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<isize> as ops::bit::BitXorAssign>::bitxor_assign",
    "hash": "16274558858822070837096752753481054041"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<isize> as ops::bit::Not>::not",
    "hash": "436068081202942861017724835885050026263"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<isize> as ops::bit::Shl<usize>>::shl",
    "hash": "36403032102992784206634475948295399003"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<isize> as ops::bit::ShlAssign<usize>>::shl_assign",
    "hash": "1150958111401863548915215289127831693448"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<isize> as ops::bit::Shr<usize>>::shr",
    "hash": "214182445036244078010677896206221146727"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<isize> as ops::bit::ShrAssign<usize>>::shr_assign",
    "hash": "1412176922940940007916864279604846959202"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u128> as ops::arith::Add>::add",
    "hash": "10496357201111560380657147669785610604"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u128> as ops::arith::AddAssign<u128>>::add_assign",
    "hash": "315383514018579476014751177403769773926"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u128> as ops::arith::AddAssign>::add_assign",
    "hash": "45214243937507503521541464276718662721"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u128> as ops::arith::Div>::div",
    "hash": "1464427280736411043116786465800931337372"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u128> as ops::arith::DivAssign<u128>>::div_assign",
    "hash": "1415074113744619380718413821248007588198"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u128> as ops::arith::DivAssign>::div_assign",
    "hash": "106094102584307722732335398930332452543"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u128> as ops::arith::Mul>::mul",
    "hash": "259230103937212752115201180837834644419"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u128> as ops::arith::MulAssign<u128>>::mul_assign",
    "hash": "79735753773291339414353271187554293066"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u128> as ops::arith::MulAssign>::mul_assign",
    "hash": "1652475447647122426610359961117351831675"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u128> as ops::arith::Neg>::neg",
    "hash": "127017784953603718799479556959145520953"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u128> as ops::arith::Rem>::rem",
    "hash": "6259215420182059215936049816737312614"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u128> as ops::arith::RemAssign<u128>>::rem_assign",
    "hash": "91439947032966018124278745775946776122"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u128> as ops::arith::RemAssign>::rem_assign",
    "hash": "83422650407219868983191697765255405733"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u128> as ops::arith::Sub>::sub",
    "hash": "1378001694136163038111449011172821265987"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u128> as ops::arith::SubAssign<u128>>::sub_assign",
    "hash": "16955265377853361288919713549707683354"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u128> as ops::arith::SubAssign>::sub_assign",
    "hash": "724769563387621458813758015540729698646"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u128> as ops::bit::BitAnd>::bitand",
    "hash": "92172694312030063086983090733495713136"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u128> as ops::bit::BitAndAssign<u128>>::bitand_assign",
    "hash": "1608962415490608355211979690229707329792"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u128> as ops::bit::BitAndAssign>::bitand_assign",
    "hash": "7933378650786670544422034597762012837"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u128> as ops::bit::BitOr>::bitor",
    "hash": "32482688999566922704205737494425007841"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u128> as ops::bit::BitOrAssign<u128>>::bitor_assign",
    "hash": "105535385815324626158272537060506043577"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u128> as ops::bit::BitOrAssign>::bitor_assign",
    "hash": "1745480706326655585371797568752494202"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u128> as ops::bit::BitXor>::bitxor",
    "hash": "25591994335141990905421433251801351045"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u128> as ops::bit::BitXorAssign<u128>>::bitxor_assign",
    "hash": "364781917290901765411475135995673675691"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u128> as ops::bit::BitXorAssign>::bitxor_assign",
    "hash": "998506757686500870818126966481721643676"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u128> as ops::bit::Not>::not",
    "hash": "452084717417314229825210377669188570"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u128> as ops::bit::Shl<usize>>::shl",
    "hash": "89804759709947440117479208346068019561"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u128> as ops::bit::ShlAssign<usize>>::shl_assign",
    "hash": "129864933471956728839708843780732813412"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u128> as ops::bit::Shr<usize>>::shr",
    "hash": "61984029392219035845630360052342337945"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u128> as ops::bit::ShrAssign<usize>>::shr_assign",
    "hash": "227211968540998147411133877301305455439"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u16> as ops::arith::Add>::add",
    "hash": "179374417099483279555362687448699732942"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u16> as ops::arith::AddAssign<u16>>::add_assign",
    "hash": "1732644826825868736114318531043506675867"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u16> as ops::arith::AddAssign>::add_assign",
    "hash": "1809334688737956791117374531919761641714"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u16> as ops::arith::Div>::div",
    "hash": "1844249879249637990813271738040643773360"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u16> as ops::arith::DivAssign<u16>>::div_assign",
    "hash": "149880871252804119214687945012589794822"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u16> as ops::arith::DivAssign>::div_assign",
    "hash": "345369303224161301215993151855080937718"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u16> as ops::arith::Mul>::mul",
    "hash": "177798803377364016873984141816941158659"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u16> as ops::arith::MulAssign<u16>>::mul_assign",
    "hash": "1110608726777015175713229341277545489499"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u16> as ops::arith::MulAssign>::mul_assign",
    "hash": "63098264176381336601550860277943327183"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u16> as ops::arith::Neg>::neg",
    "hash": "28813065376736888226469629937618680673"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u16> as ops::arith::Rem>::rem",
    "hash": "1163119877474397433311681199398961959152"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u16> as ops::arith::RemAssign<u16>>::rem_assign",
    "hash": "1785412584541134686118208970360661295292"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u16> as ops::arith::RemAssign>::rem_assign",
    "hash": "82264208482519343306421330729395795826"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u16> as ops::arith::Sub>::sub",
    "hash": "1767857364981179149013962973302360809809"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u16> as ops::arith::SubAssign<u16>>::sub_assign",
    "hash": "84090679579546088593907023370157995861"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u16> as ops::arith::SubAssign>::sub_assign",
    "hash": "1074016430904847439118127191212832401845"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u16> as ops::bit::BitAnd>::bitand",
    "hash": "404142438552485276814330211645925889133"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u16> as ops::bit::BitAndAssign<u16>>::bitand_assign",
    "hash": "1665392582805168231411805892827991193584"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u16> as ops::bit::BitAndAssign>::bitand_assign",
    "hash": "1797563922299257481514395342537387795733"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u16> as ops::bit::BitOr>::bitor",
    "hash": "1232664104743589596712115969902021851010"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u16> as ops::bit::BitOrAssign<u16>>::bitor_assign",
    "hash": "57225247787185983965204909457167103662"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u16> as ops::bit::BitOrAssign>::bitor_assign",
    "hash": "135542233055689088483025842634966695404"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u16> as ops::bit::BitXor>::bitxor",
    "hash": "65247938765067761336178975721265612015"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u16> as ops::bit::BitXorAssign<u16>>::bitxor_assign",
    "hash": "1728780230697627925015024555655204187292"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u16> as ops::bit::BitXorAssign>::bitxor_assign",
    "hash": "51958139548233455662573717451913391752"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u16> as ops::bit::Not>::not",
    "hash": "1305541555257259105615288392582497579484"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u16> as ops::bit::Shl<usize>>::shl",
    "hash": "451611621933125363712508939641372440300"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u16> as ops::bit::ShlAssign<usize>>::shl_assign",
    "hash": "1103877001480360165717719607832520566244"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u16> as ops::bit::Shr<usize>>::shr",
    "hash": "1599195932546402396810297920132218714502"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u16> as ops::bit::ShrAssign<usize>>::shr_assign",
    "hash": "25488758834710478312146577566887138110"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u32> as ops::arith::Add>::add",
    "hash": "1508002918650167476617698786259205954463"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u32> as ops::arith::AddAssign<u32>>::add_assign",
    "hash": "145497344985861045886759323669771299559"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u32> as ops::arith::AddAssign>::add_assign",
    "hash": "178666805334246076727519774624871887900"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u32> as ops::arith::Div>::div",
    "hash": "325844089372128277512127458134573586959"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u32> as ops::arith::DivAssign<u32>>::div_assign",
    "hash": "5482113402799193596148778431865667234"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u32> as ops::arith::DivAssign>::div_assign",
    "hash": "481998994410898967817185463928671041487"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u32> as ops::arith::Mul>::mul",
    "hash": "1676480494030404514415154798465619810733"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u32> as ops::arith::MulAssign<u32>>::mul_assign",
    "hash": "73225221783516883236367773582776813898"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u32> as ops::arith::MulAssign>::mul_assign",
    "hash": "90062215325216955081554588414250142405"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u32> as ops::arith::Neg>::neg",
    "hash": "201428599819390245215421792286032753929"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u32> as ops::arith::Rem>::rem",
    "hash": "1135084599971605313017422978863306972826"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u32> as ops::arith::RemAssign<u32>>::rem_assign",
    "hash": "34791767591753313654972243561633503256"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u32> as ops::arith::RemAssign>::rem_assign",
    "hash": "124948596399084127519966297860259655380"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u32> as ops::arith::Sub>::sub",
    "hash": "183977326160795681753099655302483681097"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u32> as ops::arith::SubAssign<u32>>::sub_assign",
    "hash": "64139152432230908554723966149255897625"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u32> as ops::arith::SubAssign>::sub_assign",
    "hash": "3466572153679638300655338858653508666"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u32> as ops::bit::BitAnd>::bitand",
    "hash": "178739597373023093572840337935632992251"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u32> as ops::bit::BitAndAssign<u32>>::bitand_assign",
    "hash": "481419998558807005213536321657470411198"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u32> as ops::bit::BitAndAssign>::bitand_assign",
    "hash": "161229668551102816687690811448163235902"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u32> as ops::bit::BitOr>::bitor",
    "hash": "1060332369081093278416803641358795332192"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u32> as ops::bit::BitOrAssign<u32>>::bitor_assign",
    "hash": "1101037996805259481816654743200328602310"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u32> as ops::bit::BitOrAssign>::bitor_assign",
    "hash": "102971588614566284129214042719567846331"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u32> as ops::bit::BitXor>::bitxor",
    "hash": "125747014759854590989915082079444353275"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u32> as ops::bit::BitXorAssign<u32>>::bitxor_assign",
    "hash": "1715136379622168137511741315245959148304"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u32> as ops::bit::BitXorAssign>::bitxor_assign",
    "hash": "620318473051770074015527817309062802782"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u32> as ops::bit::Not>::not",
    "hash": "165457756386433769868694456081081679705"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u32> as ops::bit::Shl<usize>>::shl",
    "hash": "730047489094732327910572855152960256077"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u32> as ops::bit::ShlAssign<usize>>::shl_assign",
    "hash": "941224571707589827316903961544624856966"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u32> as ops::bit::Shr<usize>>::shr",
    "hash": "271956397348929304716558373185976440353"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u32> as ops::bit::ShrAssign<usize>>::shr_assign",
    "hash": "63739748450929573499088038889886411994"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u64> as ops::arith::Add>::add",
    "hash": "90346453412957296894632356324759384402"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u64> as ops::arith::AddAssign<u64>>::add_assign",
    "hash": "1015404683125478085816039544550083686434"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u64> as ops::arith::AddAssign>::add_assign",
    "hash": "148712128983493445536646186638615304279"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u64> as ops::arith::Div>::div",
    "hash": "131499169236135215829801771934395293630"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u64> as ops::arith::DivAssign<u64>>::div_assign",
    "hash": "55193068735540104699649908117991225592"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u64> as ops::arith::DivAssign>::div_assign",
    "hash": "1391890010733242391617457298840386592288"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u64> as ops::arith::Mul>::mul",
    "hash": "44615439852605495011198951507816709091"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u64> as ops::arith::MulAssign<u64>>::mul_assign",
    "hash": "492801253026470829317167412991005845612"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u64> as ops::arith::MulAssign>::mul_assign",
    "hash": "527950795241225468114045574343777152733"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u64> as ops::arith::Neg>::neg",
    "hash": "9075325358910397348130135488970286179"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u64> as ops::arith::Rem>::rem",
    "hash": "66454973099080753715869397678237370145"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u64> as ops::arith::RemAssign<u64>>::rem_assign",
    "hash": "913740586847871962414791906490062239773"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u64> as ops::arith::RemAssign>::rem_assign",
    "hash": "219350743318929034313134878086456999810"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u64> as ops::arith::Sub>::sub",
    "hash": "151836722181939923519850181187396723203"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u64> as ops::arith::SubAssign<u64>>::sub_assign",
    "hash": "166169801338065976775022236075369822763"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u64> as ops::arith::SubAssign>::sub_assign",
    "hash": "1118098119199593605717629350336097847737"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u64> as ops::bit::BitAnd>::bitand",
    "hash": "8857954076141346800812460642655516248"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u64> as ops::bit::BitAndAssign<u64>>::bitand_assign",
    "hash": "431365611117133166516787638901670416348"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u64> as ops::bit::BitAndAssign>::bitand_assign",
    "hash": "14761294927202996338901493857485928288"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u64> as ops::bit::BitOr>::bitor",
    "hash": "4294311404421850613751071551422179651"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u64> as ops::bit::BitOrAssign<u64>>::bitor_assign",
    "hash": "1071365067964362815417558866534321674643"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u64> as ops::bit::BitOrAssign>::bitor_assign",
    "hash": "759536972672785507717111689340107446524"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u64> as ops::bit::BitXor>::bitxor",
    "hash": "48702570177844178454420947394415768665"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u64> as ops::bit::BitXorAssign<u64>>::bitxor_assign",
    "hash": "774246291537976431314881294901573353524"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u64> as ops::bit::BitXorAssign>::bitxor_assign",
    "hash": "56820757792792785313849997380612580864"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u64> as ops::bit::Not>::not",
    "hash": "69999284048919674735625086782813640300"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u64> as ops::bit::Shl<usize>>::shl",
    "hash": "1775543154775588509712994210192308890514"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u64> as ops::bit::ShlAssign<usize>>::shl_assign",
    "hash": "153149243856121311286036874697487165833"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u64> as ops::bit::Shr<usize>>::shr",
    "hash": "146981388828810011007694914398748657509"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u64> as ops::bit::ShrAssign<usize>>::shr_assign",
    "hash": "56016000205509534656765177701736716913"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u8> as ops::arith::Add>::add",
    "hash": "1803298088339474928817933404720051635056"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u8> as ops::arith::AddAssign<u8>>::add_assign",
    "hash": "905799279298413762714083667867753006635"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u8> as ops::arith::AddAssign>::add_assign",
    "hash": "12305559960576120213698038169408274930"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u8> as ops::arith::Div>::div",
    "hash": "90817182318064743217026467092849381268"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u8> as ops::arith::DivAssign<u8>>::div_assign",
    "hash": "100173631932836896724153904658148581868"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u8> as ops::arith::DivAssign>::div_assign",
    "hash": "126086456130746725208289754366119820925"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u8> as ops::arith::Mul>::mul",
    "hash": "1842142763172335143017525845648042901661"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u8> as ops::arith::MulAssign<u8>>::mul_assign",
    "hash": "39440685158095594932875502291249089687"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u8> as ops::arith::MulAssign>::mul_assign",
    "hash": "143153273706349101257629098636629993755"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u8> as ops::arith::Neg>::neg",
    "hash": "651637652650941118711340650543613350956"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u8> as ops::arith::Rem>::rem",
    "hash": "674758776288420566117730019119159286270"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u8> as ops::arith::RemAssign<u8>>::rem_assign",
    "hash": "1709496603993404112412574309337841118414"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u8> as ops::arith::RemAssign>::rem_assign",
    "hash": "6068710454862328409149161076531601175"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u8> as ops::arith::Sub>::sub",
    "hash": "178591613565373726302282128237445232695"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u8> as ops::arith::SubAssign<u8>>::sub_assign",
    "hash": "3315290544158290545357104416252180061"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u8> as ops::arith::SubAssign>::sub_assign",
    "hash": "27063659855020998476072235682752043057"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u8> as ops::bit::BitAnd>::bitand",
    "hash": "1784506023810720236015317221469966695377"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u8> as ops::bit::BitAndAssign<u8>>::bitand_assign",
    "hash": "146266473798108593212652338597786116762"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u8> as ops::bit::BitAndAssign>::bitand_assign",
    "hash": "1026096088965776959117415860453375559696"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u8> as ops::bit::BitOr>::bitor",
    "hash": "1069427164488365723918131425839547689201"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u8> as ops::bit::BitOrAssign<u8>>::bitor_assign",
    "hash": "39587374831133846805679236410265111508"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u8> as ops::bit::BitOrAssign>::bitor_assign",
    "hash": "51936661461335253732487803038149492302"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u8> as ops::bit::BitXor>::bitxor",
    "hash": "109844472835207839854799406238527629937"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u8> as ops::bit::BitXorAssign<u8>>::bitxor_assign",
    "hash": "13848344521171790278120784948390741154"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u8> as ops::bit::BitXorAssign>::bitxor_assign",
    "hash": "1796359520029978944915944819674058376045"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u8> as ops::bit::Not>::not",
    "hash": "76890881758566050697612803197784355132"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u8> as ops::bit::Shl<usize>>::shl",
    "hash": "40381423527498357264924441500523979587"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u8> as ops::bit::ShlAssign<usize>>::shl_assign",
    "hash": "92781844868012449083233740033732176182"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u8> as ops::bit::Shr<usize>>::shr",
    "hash": "105180171208852440785031473508242275024"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u8> as ops::bit::ShrAssign<usize>>::shr_assign",
    "hash": "854634788071414884415159595945251540700"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<usize> as ops::arith::Add>::add",
    "hash": "804081197435125040018311632957579677478"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<usize> as ops::arith::AddAssign<usize>>::add_assign",
    "hash": "762366978399407291316087729031004273371"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<usize> as ops::arith::AddAssign>::add_assign",
    "hash": "221930110094451003613228257876137929777"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<usize> as ops::arith::Div>::div",
    "hash": "707348396911898795215630454277186788824"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<usize> as ops::arith::DivAssign<usize>>::div_assign",
    "hash": "14889603060008509126239242020600416225"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<usize> as ops::arith::DivAssign>::div_assign",
    "hash": "128509543452786273095787158994371826019"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<usize> as ops::arith::Mul>::mul",
    "hash": "23972378622110900659045968707859747923"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<usize> as ops::arith::MulAssign<usize>>::mul_assign",
    "hash": "259342190326774990812676610452730437265"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<usize> as ops::arith::MulAssign>::mul_assign",
    "hash": "541584739807710404418077897387305189746"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<usize> as ops::arith::Neg>::neg",
    "hash": "118868106307200286946175475146059475064"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<usize> as ops::arith::Rem>::rem",
    "hash": "127304053834168212309155423819452337099"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<usize> as ops::arith::RemAssign<usize>>::rem_assign",
    "hash": "115739696533165410177613058301503715547"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<usize> as ops::arith::RemAssign>::rem_assign",
    "hash": "1299911072110296555910338167086955321656"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<usize> as ops::arith::Sub>::sub",
    "hash": "623069548673230888810648360681756094827"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<usize> as ops::arith::SubAssign<usize>>::sub_assign",
    "hash": "79502826082188084855729641974768620921"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<usize> as ops::arith::SubAssign>::sub_assign",
    "hash": "966936796720728133714044877070507255503"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<usize> as ops::bit::BitAnd>::bitand",
    "hash": "1551670141764110770012947235855274189989"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<usize> as ops::bit::BitAndAssign<usize>>::bitand_assign",
    "hash": "1640758302574869765610362455172967597154"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<usize> as ops::bit::BitAndAssign>::bitand_assign",
    "hash": "12841978331956190751781593788369967472"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<usize> as ops::bit::BitOr>::bitor",
    "hash": "162023783624471983675307490563325575061"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<usize> as ops::bit::BitOrAssign<usize>>::bitor_assign",
    "hash": "167663432183766646757875305470946271653"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<usize> as ops::bit::BitOrAssign>::bitor_assign",
    "hash": "136347332603405568017016547632285770388"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<usize> as ops::bit::BitXor>::bitxor",
    "hash": "60894886407174481322638328660912293988"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<usize> as ops::bit::BitXorAssign<usize>>::bitxor_assign",
    "hash": "91925538998125327316811864341810740622"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<usize> as ops::bit::BitXorAssign>::bitxor_assign",
    "hash": "116170335443971020641009891208213715786"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<usize> as ops::bit::Not>::not",
    "hash": "1229676791308532478617001791351918090172"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<usize> as ops::bit::Shl<usize>>::shl",
    "hash": "1440096190044799886012763193367312274757"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<usize> as ops::bit::ShlAssign<usize>>::shl_assign",
    "hash": "108119203261148334112174595746556931864"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<usize> as ops::bit::Shr<usize>>::shr",
    "hash": "126211837814466504507203027032040640870"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<usize> as ops::bit::ShrAssign<usize>>::shr_assign",
    "hash": "270312652308018924615976584045359417296"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i128>::abs",
    "hash": "130283301370244312066723945567029610919"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i128>::count_ones",
    "hash": "58394623024947408784252164574717742734"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i128>::count_zeros",
    "hash": "96420033777106917167359527561555130789"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i128>::from_be",
    "hash": "733893488676912696810520155150995999547"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i128>::from_le",
    "hash": "977765343181640737811881023855786480180"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i128>::is_negative",
    "hash": "1471500721132360410915884771679733744546"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i128>::is_positive",
    "hash": "330608868890611634415808563661847071200"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i128>::leading_zeros",
    "hash": "14733655929986389236293056460520675016"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i128>::pow",
    "hash": "3576973767669039328103051004339371732"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i128>::reverse_bits",
    "hash": "777923471893421747812910106115569157525"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i128>::rotate_left",
    "hash": "1589408352491762122517512010797309260089"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i128>::rotate_right",
    "hash": "814284724585213331815150275078006454879"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i128>::signum",
    "hash": "78689477865116728448738596718422033440"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i128>::swap_bytes",
    "hash": "40784322012864125677833815882335867233"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i128>::to_be",
    "hash": "177913870255520893542615165858976668117"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i128>::to_le",
    "hash": "96276184593337716466803180168654389346"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i128>::trailing_zeros",
    "hash": "1595529794773522297811638987599266229022"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i16>::abs",
    "hash": "910097546282242424469204529291055287"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i16>::count_ones",
    "hash": "920551748614330375910618220693854758877"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i16>::count_zeros",
    "hash": "1132050841368191580911305346623600567195"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i16>::from_be",
    "hash": "1542145543065271225610239407331421139277"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i16>::from_le",
    "hash": "1435608961578275837113456928335853882269"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i16>::is_negative",
    "hash": "69819950204100377744204298328205099007"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i16>::is_positive",
    "hash": "1739391301620107650012393550223822180331"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i16>::leading_zeros",
    "hash": "613881991424003381410304079553379613960"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i16>::pow",
    "hash": "67192748255754290096134490380585048954"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i16>::reverse_bits",
    "hash": "28645128113278860066332337284332574772"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i16>::rotate_left",
    "hash": "1245069744236216680012830525310102592966"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i16>::rotate_right",
    "hash": "1061336442291512881416319776837876952847"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i16>::signum",
    "hash": "22383517634350838047633202964582260850"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i16>::swap_bytes",
    "hash": "1385283183357927649111311218805810010360"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i16>::to_be",
    "hash": "1802343646273125639010290273673584992458"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i16>::to_le",
    "hash": "18142114948235759475878164203001854990"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i16>::trailing_zeros",
    "hash": "57484825476522767467597020716511032801"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i32>::abs",
    "hash": "499525975379410829215709925993278612069"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i32>::count_ones",
    "hash": "1227610583513817248694026984230481635"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i32>::count_zeros",
    "hash": "170941062451155997472589092958510883823"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i32>::from_be",
    "hash": "10440492393444393572900831126624938693"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i32>::from_le",
    "hash": "160471073728124394819928476938717933673"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i32>::is_negative",
    "hash": "11680684624024819551527649904686283002"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i32>::is_positive",
    "hash": "160589059067856603142607360601543533711"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i32>::leading_zeros",
    "hash": "41437291168835850751209045302582436165"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i32>::pow",
    "hash": "167587561736159749112956438933575135347"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i32>::reverse_bits",
    "hash": "37239524355253590759899578729406738179"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i32>::rotate_left",
    "hash": "799144734536082554515199987382203672164"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i32>::rotate_right",
    "hash": "132032359500054591715910472608532966771"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i32>::signum",
    "hash": "44717590141105325776725568094112000498"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i32>::swap_bytes",
    "hash": "102965370859999930207985275171406924583"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i32>::to_be",
    "hash": "174429071954280586015893085710927751347"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i32>::to_le",
    "hash": "274466467492683706162678392248131922"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i32>::trailing_zeros",
    "hash": "124612564940311429083068134546796640794"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i64>::abs",
    "hash": "906806418729591476917145712531477128398"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i64>::count_ones",
    "hash": "52207084385046157461106339515608958530"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i64>::count_zeros",
    "hash": "156020149526684900248724694274969408651"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i64>::from_be",
    "hash": "148269705526820816592443998342320507226"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i64>::from_le",
    "hash": "71147414070217007258848379784354207885"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i64>::is_negative",
    "hash": "77498945080789071618106429257928962469"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i64>::is_positive",
    "hash": "11890674980932831267144969918505047912"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i64>::leading_zeros",
    "hash": "44536093804608696762262199210360889147"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i64>::pow",
    "hash": "126757520525799187844941081574818614828"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i64>::reverse_bits",
    "hash": "318120214773630703016210142673886401294"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i64>::rotate_left",
    "hash": "134609112979855152764655261464953555683"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i64>::rotate_right",
    "hash": "98449551643992363181354150419089157637"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i64>::signum",
    "hash": "76241758221187189712682425276298998959"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i64>::swap_bytes",
    "hash": "1777242271202193876013109678067956847349"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i64>::to_be",
    "hash": "1266027902429999133117425188957382836932"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i64>::to_le",
    "hash": "1501214033698717597814526215711448489896"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i64>::trailing_zeros",
    "hash": "158238056684835222786575382189060373919"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i8>::abs",
    "hash": "49099855846675390921164861423042522177"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i8>::count_ones",
    "hash": "1274087568405987220013808188527033020255"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i8>::count_zeros",
    "hash": "271496629859091584714608347022566092162"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i8>::from_be",
    "hash": "609269338890463180515328842952533573939"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i8>::from_le",
    "hash": "100954048639770196589440362306198580143"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i8>::is_negative",
    "hash": "657647164655566648210288556244936482735"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i8>::is_positive",
    "hash": "68003760042847980238562077581399281869"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i8>::leading_zeros",
    "hash": "17803952830167120012640561459848414199"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i8>::pow",
    "hash": "405710607708595869117511705394705274449"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i8>::reverse_bits",
    "hash": "1256499611439739812910304148677159450697"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i8>::rotate_left",
    "hash": "61956783910102688346170179615196075206"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i8>::rotate_right",
    "hash": "12230160995792749093634502365372802220"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i8>::signum",
    "hash": "127769708080640920914358929213636942287"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i8>::swap_bytes",
    "hash": "1749227548056086468710186087836332780272"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i8>::to_be",
    "hash": "65533935773293150611670891202209554220"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i8>::to_le",
    "hash": "1375364143055062605814454235708932987660"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i8>::trailing_zeros",
    "hash": "472262006056671550613342591782339058540"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<isize>::abs",
    "hash": "101076209552240127998942945199376154652"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<isize>::count_ones",
    "hash": "148903315186488558225445766643407600447"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<isize>::count_zeros",
    "hash": "170048257333449300026152322833958338107"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<isize>::from_be",
    "hash": "608391551589931794817710275006624018679"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<isize>::from_le",
    "hash": "1546836141457357691117937173829600189872"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<isize>::is_negative",
    "hash": "790231867474553316717416145347819191658"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<isize>::is_positive",
    "hash": "113351807351438327608031990916893945315"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<isize>::leading_zeros",
    "hash": "8545513117853307881255547316845807965"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<isize>::pow",
    "hash": "165036460963367182992258757366702772982"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<isize>::reverse_bits",
    "hash": "14453952644538714611629148752495970330"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<isize>::rotate_left",
    "hash": "1547700239692003162917693916141061309861"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<isize>::rotate_right",
    "hash": "103413012294194459736921653430761260536"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<isize>::signum",
    "hash": "829287007866036606114265273960373842825"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<isize>::swap_bytes",
    "hash": "71931384213872851882221292082899813729"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<isize>::to_be",
    "hash": "115531742620778084057780211822256804076"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<isize>::to_le",
    "hash": "592963786278392688415526680088837560834"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<isize>::trailing_zeros",
    "hash": "733908706189781640616972643061859159485"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u128>::count_ones",
    "hash": "582711931626469683215352158307483003920"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u128>::count_zeros",
    "hash": "48949837489296139097525726553608081690"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u128>::from_be",
    "hash": "85842131579078314958673170351641128669"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u128>::from_le",
    "hash": "913552769006478084113529241073937411399"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u128>::is_power_of_two",
    "hash": "922926027185133414513180399447621695"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u128>::leading_zeros",
    "hash": "1352815640473282935115845234544520822980"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u128>::next_power_of_two",
    "hash": "180468122604186556551092551751725869711"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u128>::pow",
    "hash": "43244464781469787426352574711429054524"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u128>::reverse_bits",
    "hash": "169398694580733152308926529915811645785"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u128>::rotate_left",
    "hash": "385810284818304630415341581677040155477"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u128>::rotate_right",
    "hash": "54586758804629845852865084756337941676"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u128>::swap_bytes",
    "hash": "125846840446650647937489573679076276669"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u128>::to_be",
    "hash": "1307487445608759506910913876197933401257"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u128>::to_le",
    "hash": "448965510188286271316068086571163511816"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u128>::trailing_zeros",
    "hash": "37477198486268643852347481578336668536"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u16>::count_ones",
    "hash": "6385308750804768745419985414055134586"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u16>::count_zeros",
    "hash": "1454177941173670591214371020126694137485"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u16>::from_be",
    "hash": "83081494454491440703991722962450250989"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u16>::from_le",
    "hash": "158367849960621266592105131822079865492"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u16>::is_power_of_two",
    "hash": "767796567571430558212884933412838374181"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u16>::leading_zeros",
    "hash": "863494266274175715318120913977479732679"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u16>::next_power_of_two",
    "hash": "163402232017072580006779353574574062387"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u16>::pow",
    "hash": "45691640747458916312881794144620285973"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u16>::reverse_bits",
    "hash": "948260045051255287911526917189441716506"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u16>::rotate_left",
    "hash": "34195133365412480685199954850550524224"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u16>::rotate_right",
    "hash": "38198908118489499802449102297342338657"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u16>::swap_bytes",
    "hash": "1125199063533429276416592002449664059450"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u16>::to_be",
    "hash": "169049758746041349715926282567019595631"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u16>::to_le",
    "hash": "122164113116614270610299197189677228637"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u16>::trailing_zeros",
    "hash": "160983477996254346668358510604214602104"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u32>::count_ones",
    "hash": "175245099233376010564684097729120959048"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u32>::count_zeros",
    "hash": "1228007714705654303215544385394899018016"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u32>::from_be",
    "hash": "65393665980904694971860102185629891872"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u32>::from_le",
    "hash": "459321503981600422212786953486247297469"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u32>::is_power_of_two",
    "hash": "151565366152843951641393595945115327095"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u32>::leading_zeros",
    "hash": "52847891360219806891410051718838075847"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u32>::next_power_of_two",
    "hash": "139003457968398817717079511088122348235"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u32>::pow",
    "hash": "198188801050408355413446135551232867826"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u32>::reverse_bits",
    "hash": "218221437077793216412348138829685085176"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u32>::rotate_left",
    "hash": "88198875401305207331061671620580861555"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u32>::rotate_right",
    "hash": "145907774600269403909134492247881441044"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u32>::swap_bytes",
    "hash": "1075962355262947445317235616250091612746"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u32>::to_be",
    "hash": "1525204686767918560715901955103502641980"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u32>::to_le",
    "hash": "430637618095567638917755773386889128320"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u32>::trailing_zeros",
    "hash": "4239337720771204625800481734042081740"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u64>::count_ones",
    "hash": "934537084435319632818179079058432241286"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u64>::count_zeros",
    "hash": "473978927173831795715830173520974191013"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u64>::from_be",
    "hash": "135668271220718372652046900426859774309"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u64>::from_le",
    "hash": "462106019594597240710115423816528399773"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u64>::is_power_of_two",
    "hash": "98147680562614308825642219738241474326"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u64>::leading_zeros",
    "hash": "397703599271023814413023153398023490944"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u64>::next_power_of_two",
    "hash": "20086498798559749858306762131283726056"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u64>::pow",
    "hash": "70718159593483471242823603772875139770"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u64>::reverse_bits",
    "hash": "449079261601058360918098784811341807782"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u64>::rotate_left",
    "hash": "23428265653144195836397872817899595903"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u64>::rotate_right",
    "hash": "132363049175223153748526209792254498"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u64>::swap_bytes",
    "hash": "15364331581238926387805030297848181571"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u64>::to_be",
    "hash": "281247094753492678913886609187948164250"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u64>::to_le",
    "hash": "1701556385097209221611157278156991402010"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u64>::trailing_zeros",
    "hash": "823664941332057158711057767016886880117"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u8>::count_ones",
    "hash": "1506775321016034106215308963713691898443"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u8>::count_zeros",
    "hash": "1227200125504222432112385075441737895860"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u8>::from_be",
    "hash": "1092319110700373852211008596852093515211"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u8>::from_le",
    "hash": "121330324133498207698412116955418494879"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u8>::is_power_of_two",
    "hash": "1580153310222380774716347411321649099042"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u8>::leading_zeros",
    "hash": "8684618154331045712468010559685749640"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u8>::next_power_of_two",
    "hash": "798584201167344959212204418477877160573"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u8>::pow",
    "hash": "1372094716678390218018128771399186282084"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u8>::reverse_bits",
    "hash": "88934407208403330178579019913913178379"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u8>::rotate_left",
    "hash": "1063641530603989001916695489325040776448"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u8>::rotate_right",
    "hash": "588066021812529934717828219319361211643"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u8>::swap_bytes",
    "hash": "472178356285942704813167649229292642942"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u8>::to_be",
    "hash": "1055013215588134398411423757072742433540"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u8>::to_le",
    "hash": "1243415499639039728010646107921463380112"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u8>::trailing_zeros",
    "hash": "11374682483904688802506671459810808273"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<usize>::count_ones",
    "hash": "467416296067345042410066164670523777069"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<usize>::count_zeros",
    "hash": "37729665260776089315349442755157971880"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<usize>::from_be",
    "hash": "113773114550713816142477420286875273508"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<usize>::from_le",
    "hash": "102310960545656523743619201229221140466"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<usize>::is_power_of_two",
    "hash": "51013564199838977565832264183280002004"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<usize>::leading_zeros",
    "hash": "1383660145193381656610491471512587388368"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<usize>::next_power_of_two",
    "hash": "155179918227157108042349914673121215376"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<usize>::pow",
    "hash": "63302762496162507435044404634886139910"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<usize>::reverse_bits",
    "hash": "178383031367265577275785780708197373307"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<usize>::rotate_left",
    "hash": "34879267348012570112223439538522016284"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<usize>::rotate_right",
    "hash": "123377991881225849717585010432625195001"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<usize>::swap_bytes",
    "hash": "277362230693007776713264862321592309157"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<usize>::to_be",
    "hash": "1048771264809768147611297174573709769805"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<usize>::to_le",
    "hash": "1241136938427981636611882815624036148827"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<usize>::trailing_zeros",
    "hash": "1034698002270968632318034178895576618292"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<f128 as ops::arith::Add>::add",
    "hash": "44443695133507866173052989236644601082"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<f128 as ops::arith::AddAssign>::add_assign",
    "hash": "1226622271878306014711214817195631634005"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<f128 as ops::arith::Div>::div",
    "hash": "179277414552915012511489650553361328613"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<f128 as ops::arith::DivAssign>::div_assign",
    "hash": "1466619326553179173616282000924380930891"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<f128 as ops::arith::Mul>::mul",
    "hash": "1477690612743275457917915842808636867320"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<f128 as ops::arith::MulAssign>::mul_assign",
    "hash": "1028048201790918730315858150758432170523"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<f128 as ops::arith::Neg>::neg",
    "hash": "17379614829186422606212493198166322187"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<f128 as ops::arith::Rem>::rem",
    "hash": "29048993336370097756267479157405173321"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<f128 as ops::arith::RemAssign>::rem_assign",
    "hash": "1473475997109972535417167715970632151899"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<f128 as ops::arith::Sub>::sub",
    "hash": "22272019261683323803400905152375583408"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<f128 as ops::arith::SubAssign>::sub_assign",
    "hash": "76009413810789812433565163013657527227"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<f16 as ops::arith::Add>::add",
    "hash": "656663271581397563310741794773811775236"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<f16 as ops::arith::AddAssign>::add_assign",
    "hash": "196973745457136093912532390655138683939"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<f16 as ops::arith::Div>::div",
    "hash": "607357767823900722714988361227709155344"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<f16 as ops::arith::DivAssign>::div_assign",
    "hash": "489049920946002559018412753823101084757"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<f16 as ops::arith::Mul>::mul",
    "hash": "30460775194166185987855856242595917692"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<f16 as ops::arith::MulAssign>::mul_assign",
    "hash": "55368406257963698105322110987394460663"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<f16 as ops::arith::Neg>::neg",
    "hash": "164840806539152991893600125848246543443"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<f16 as ops::arith::Rem>::rem",
    "hash": "456530304931751435310666391288470030122"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<f16 as ops::arith::RemAssign>::rem_assign",
    "hash": "335904285113328987014404974390116111659"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<f16 as ops::arith::Sub>::sub",
    "hash": "142867308355902062391047573867110195867"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<f16 as ops::arith::SubAssign>::sub_assign",
    "hash": "169163488812773952059661101958074693194"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<f32 as ops::arith::Add>::add",
    "hash": "508271486912745440511615952333843888632"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<f32 as ops::arith::AddAssign>::add_assign",
    "hash": "18956986065478905248274522268812588148"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<f32 as ops::arith::Div>::div",
    "hash": "40411134638494638899413497119247190888"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<f32 as ops::arith::DivAssign>::div_assign",
    "hash": "1233995194335149931011754639753308013918"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<f32 as ops::arith::Mul>::mul",
    "hash": "112772361378118273376324851843635159707"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<f32 as ops::arith::MulAssign>::mul_assign",
    "hash": "1220828688087836937512717070067213744387"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<f32 as ops::arith::Neg>::neg",
    "hash": "32926970026138873229479387231018895957"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<f32 as ops::arith::Rem>::rem",
    "hash": "1077074035826284205215674638304126304918"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<f32 as ops::arith::RemAssign>::rem_assign",
    "hash": "267060808248569095511119335864952545525"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<f32 as ops::arith::Sub>::sub",
    "hash": "27673722025584846169039272051445894009"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<f32 as ops::arith::SubAssign>::sub_assign",
    "hash": "46228467634741728016612407512115087158"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<f64 as ops::arith::Add>::add",
    "hash": "486506952336466454910641261049628885738"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<f64 as ops::arith::AddAssign>::add_assign",
    "hash": "1646902801968599935918084062800638997619"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<f64 as ops::arith::Div>::div",
    "hash": "110892709662826101237375107061877207457"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<f64 as ops::arith::DivAssign>::div_assign",
    "hash": "127556470121600645837364189635958353606"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<f64 as ops::arith::Mul>::mul",
    "hash": "102949047447791174707669251865891123542"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<f64 as ops::arith::MulAssign>::mul_assign",
    "hash": "238794372394615823111288896987511635444"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<f64 as ops::arith::Neg>::neg",
    "hash": "109060992173910544547553666489134560572"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<f64 as ops::arith::Rem>::rem",
    "hash": "4168999617077776579925232765403951205"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<f64 as ops::arith::RemAssign>::rem_assign",
    "hash": "1177864940717511898716542524319361929757"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<f64 as ops::arith::Sub>::sub",
    "hash": "134957012108515249315205515502635002285"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<f64 as ops::arith::SubAssign>::sub_assign",
    "hash": "431781121473193876914969833807129757468"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<i128 as ops::arith::Add>::add",
    "hash": "180939457702266364756387883455748594090"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<i128 as ops::arith::AddAssign>::add_assign",
    "hash": "1999871034812690435694664659178872696"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<i128 as ops::arith::Div>::div",
    "hash": "13530624666631948691330061281020655561"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<i128 as ops::arith::DivAssign>::div_assign",
    "hash": "113640192987836571414630896461408584847"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<i128 as ops::arith::Mul>::mul",
    "hash": "72315241419013024954366599269533297735"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<i128 as ops::arith::MulAssign>::mul_assign",
    "hash": "2234085422594024569962970703753780960"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<i128 as ops::arith::Neg>::neg",
    "hash": "38254880224299109094957584209368999998"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<i128 as ops::arith::Rem>::rem",
    "hash": "182716850561567425683998683983154797678"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<i128 as ops::arith::RemAssign>::rem_assign",
    "hash": "1491207352652838106512101190110310121637"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<i128 as ops::arith::Sub>::sub",
    "hash": "183712329653106417033778184199131496129"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<i128 as ops::arith::SubAssign>::sub_assign",
    "hash": "93764636167607197113427241180114661125"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<i16 as ops::arith::Add>::add",
    "hash": "128898929114319553843582809842619278033"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<i16 as ops::arith::AddAssign>::add_assign",
    "hash": "1644197866328340381917189776815391398023"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<i16 as ops::arith::Div>::div",
    "hash": "1182860124965675521214018444737397607073"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<i16 as ops::arith::DivAssign>::div_assign",
    "hash": "901272607822794521616185502070289782683"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<i16 as ops::arith::Mul>::mul",
    "hash": "60762647226157463984812188789211220300"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<i16 as ops::arith::MulAssign>::mul_assign",
    "hash": "84714985226194901668098704157023505002"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<i16 as ops::arith::Neg>::neg",
    "hash": "138060884963648772472362125532294170054"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<i16 as ops::arith::Rem>::rem",
    "hash": "872477265323748931410034390846620102090"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<i16 as ops::arith::RemAssign>::rem_assign",
    "hash": "69272829053533532731508305060564775866"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<i16 as ops::arith::Sub>::sub",
    "hash": "316948154444344853616153856658645809704"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<i16 as ops::arith::SubAssign>::sub_assign",
    "hash": "482406881103991301910464989784879322994"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<i32 as ops::arith::Add>::add",
    "hash": "176038123912851636717181001177697939738"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<i32 as ops::arith::AddAssign>::add_assign",
    "hash": "59091337361690296495696656698339938095"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<i32 as ops::arith::Div>::div",
    "hash": "5504465159916226736233644551835612098"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<i32 as ops::arith::DivAssign>::div_assign",
    "hash": "116162006915438678092222360406072105553"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<i32 as ops::arith::Mul>::mul",
    "hash": "1361830654905566867612806665866894359978"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<i32 as ops::arith::MulAssign>::mul_assign",
    "hash": "163393867513561910826001496837052273"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<i32 as ops::arith::Neg>::neg",
    "hash": "1063506368158562375213024324256626800440"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<i32 as ops::arith::Rem>::rem",
    "hash": "1455698140165167994816868010447350743132"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<i32 as ops::arith::RemAssign>::rem_assign",
    "hash": "372816163441321267312692719832673013825"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<i32 as ops::arith::Sub>::sub",
    "hash": "123706226571764293649022195857975919765"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<i32 as ops::arith::SubAssign>::sub_assign",
    "hash": "50434228286183609677801054014415728473"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<i64 as ops::arith::Add>::add",
    "hash": "102300503039285186936401996126082004143"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<i64 as ops::arith::AddAssign>::add_assign",
    "hash": "1286344711565208954911442041396815841395"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<i64 as ops::arith::Div>::div",
    "hash": "394188825106289093612275166131450967405"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<i64 as ops::arith::DivAssign>::div_assign",
    "hash": "83916736728564446928911693755497753405"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<i64 as ops::arith::Mul>::mul",
    "hash": "1480280019405466309480857819887466736"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<i64 as ops::arith::MulAssign>::mul_assign",
    "hash": "116273164296678303514326589032284010368"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<i64 as ops::arith::Neg>::neg",
    "hash": "569787614750004160010776100613042378655"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<i64 as ops::arith::Rem>::rem",
    "hash": "68263926643546691864513921346928148306"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<i64 as ops::arith::RemAssign>::rem_assign",
    "hash": "2005829136022826129192926948709026179"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<i64 as ops::arith::Sub>::sub",
    "hash": "96516014671134718329949757920969022478"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<i64 as ops::arith::SubAssign>::sub_assign",
    "hash": "1489423196006039965505893748480305928"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<i8 as ops::arith::Add>::add",
    "hash": "77664444813391686578066042580911250377"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<i8 as ops::arith::AddAssign>::add_assign",
    "hash": "1158381074792105069515382714189996898247"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<i8 as ops::arith::Div>::div",
    "hash": "139860864721840033027850854066502040001"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<i8 as ops::arith::DivAssign>::div_assign",
    "hash": "505839498131792058314432207301867876374"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<i8 as ops::arith::Mul>::mul",
    "hash": "70808776637997449716795958299873086851"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<i8 as ops::arith::MulAssign>::mul_assign",
    "hash": "112045764696684393615924347439946418071"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<i8 as ops::arith::Neg>::neg",
    "hash": "3952901743078497551630941128387146276"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<i8 as ops::arith::Rem>::rem",
    "hash": "1185316329399955436015784821353885604874"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<i8 as ops::arith::RemAssign>::rem_assign",
    "hash": "167155519982412449337878944689384099049"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<i8 as ops::arith::Sub>::sub",
    "hash": "176587700949268650555220436235253969683"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<i8 as ops::arith::SubAssign>::sub_assign",
    "hash": "1094273692647140649811372148382567400097"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<isize as ops::arith::Add>::add",
    "hash": "58702829733803041278209976036510386047"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<isize as ops::arith::AddAssign>::add_assign",
    "hash": "914042721093238250410403807064275377829"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<isize as ops::arith::Div>::div",
    "hash": "45579142048074889213321230078084515909"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<isize as ops::arith::DivAssign>::div_assign",
    "hash": "85212405800446537259012932506649898423"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<isize as ops::arith::Mul>::mul",
    "hash": "178727180376454345549324156966071132796"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<isize as ops::arith::MulAssign>::mul_assign",
    "hash": "1808485623078224856710645856059773530955"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<isize as ops::arith::Neg>::neg",
    "hash": "73385635675963071203554325423636870423"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<isize as ops::arith::Rem>::rem",
    "hash": "75457982509565385558449066300474734788"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<isize as ops::arith::RemAssign>::rem_assign",
    "hash": "939485256855840733415141502227336312222"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<isize as ops::arith::Sub>::sub",
    "hash": "34388100492490933128558531691774740632"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<isize as ops::arith::SubAssign>::sub_assign",
    "hash": "1067169204404641421916317878375012633942"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<u128 as ops::arith::Add>::add",
    "hash": "1402902597459728935916070669393820481166"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<u128 as ops::arith::AddAssign>::add_assign",
    "hash": "787303143716339277712905266112423462558"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<u128 as ops::arith::Div>::div",
    "hash": "21583290123968285234545601428509381550"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<u128 as ops::arith::DivAssign>::div_assign",
    "hash": "58711212094198103298457065561795244361"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<u128 as ops::arith::Mul>::mul",
    "hash": "1842262503462546508817712572233277033184"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<u128 as ops::arith::MulAssign>::mul_assign",
    "hash": "1295147707920106548811304353011912597124"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<u128 as ops::arith::Rem>::rem",
    "hash": "1478241970835155501511055888431993250982"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<u128 as ops::arith::RemAssign>::rem_assign",
    "hash": "119128309620204045384365079817452421882"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<u128 as ops::arith::Sub>::sub",
    "hash": "117860692007150857879979453393140389874"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<u128 as ops::arith::SubAssign>::sub_assign",
    "hash": "37171400200190225467619862218546801023"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<u16 as ops::arith::Add>::add",
    "hash": "136932066740021611447653180798913862776"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<u16 as ops::arith::AddAssign>::add_assign",
    "hash": "1136693712062826788313523590757276345412"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<u16 as ops::arith::Div>::div",
    "hash": "42970800222571564306495992008323959314"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<u16 as ops::arith::DivAssign>::div_assign",
    "hash": "1140659912304972430411452136862166853840"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<u16 as ops::arith::Mul>::mul",
    "hash": "177198181867662933244066889668312740896"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<u16 as ops::arith::MulAssign>::mul_assign",
    "hash": "885132676446520377914249979541314880363"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<u16 as ops::arith::Rem>::rem",
    "hash": "79550056097734619312886036852942532799"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<u16 as ops::arith::RemAssign>::rem_assign",
    "hash": "8785863816951305058508210548063562603"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<u16 as ops::arith::Sub>::sub",
    "hash": "175056666661777748461314928867213942631"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<u16 as ops::arith::SubAssign>::sub_assign",
    "hash": "466018795213947751816917718150518488183"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<u32 as ops::arith::Add>::add",
    "hash": "147082916948660022139522338496775099983"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<u32 as ops::arith::AddAssign>::add_assign",
    "hash": "174355281150286471671830262593496597407"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<u32 as ops::arith::Div>::div",
    "hash": "65203605087481216765956782074874375619"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<u32 as ops::arith::DivAssign>::div_assign",
    "hash": "900894681384665895317569845695268162327"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<u32 as ops::arith::Mul>::mul",
    "hash": "167590433297483224656812144139614142495"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<u32 as ops::arith::MulAssign>::mul_assign",
    "hash": "169802044628672220951674063631105999813"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<u32 as ops::arith::Rem>::rem",
    "hash": "424359451296716518917226365832879427330"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<u32 as ops::arith::RemAssign>::rem_assign",
    "hash": "98201208198305113017449816946077520777"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<u32 as ops::arith::Sub>::sub",
    "hash": "99176271258766477013272333171532202265"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<u32 as ops::arith::SubAssign>::sub_assign",
    "hash": "170544993272943776716324829632816239721"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<u64 as ops::arith::Add>::add",
    "hash": "1047226150592121619916791738425576155989"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<u64 as ops::arith::AddAssign>::add_assign",
    "hash": "152986766196414844916519978314917461009"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<u64 as ops::arith::Div>::div",
    "hash": "138811212228727350724477848972604910203"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<u64 as ops::arith::DivAssign>::div_assign",
    "hash": "1336996554940776999316248185732470250876"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<u64 as ops::arith::Mul>::mul",
    "hash": "359819478907929188013602569371333223640"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<u64 as ops::arith::MulAssign>::mul_assign",
    "hash": "1529107134624838038314045008243897253034"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<u64 as ops::arith::Rem>::rem",
    "hash": "72761304372883324528891952071758675679"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<u64 as ops::arith::RemAssign>::rem_assign",
    "hash": "71020868718922891295297090674155788062"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<u64 as ops::arith::Sub>::sub",
    "hash": "128926335496488349305282019115669664377"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<u64 as ops::arith::SubAssign>::sub_assign",
    "hash": "173839817657395971418614100409683771676"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<u8 as ops::arith::Add>::add",
    "hash": "104071935845405627502683988192867621419"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<u8 as ops::arith::AddAssign>::add_assign",
    "hash": "921818024699677455618018864647058716262"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<u8 as ops::arith::Div>::div",
    "hash": "17398617958855612112693169980447801917"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<u8 as ops::arith::DivAssign>::div_assign",
    "hash": "1121848682149855291813585908283984167641"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<u8 as ops::arith::Mul>::mul",
    "hash": "1426084362925482196314162655546120958514"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<u8 as ops::arith::MulAssign>::mul_assign",
    "hash": "1789452120354532371911265561406784465295"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<u8 as ops::arith::Rem>::rem",
    "hash": "364778951657854310011852463264419495840"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<u8 as ops::arith::RemAssign>::rem_assign",
    "hash": "88226505168359003336578091489083482501"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<u8 as ops::arith::Sub>::sub",
    "hash": "29874235246931591729627593783721476352"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<u8 as ops::arith::SubAssign>::sub_assign",
    "hash": "143052136274747400144891423970263416921"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<usize as ops::arith::Add>::add",
    "hash": "136034500819524922108481081516304886547"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<usize as ops::arith::AddAssign>::add_assign",
    "hash": "1140718361170680638413202916536227675596"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<usize as ops::arith::Div>::div",
    "hash": "166420124560367274913477064584242996843"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<usize as ops::arith::DivAssign>::div_assign",
    "hash": "13211279411104622587249227531073579389"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<usize as ops::arith::Mul>::mul",
    "hash": "44216514909823486154857943284213338730"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<usize as ops::arith::MulAssign>::mul_assign",
    "hash": "65752901451835306846753595962363338559"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<usize as ops::arith::Rem>::rem",
    "hash": "160795408949865961775843320697525466875"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<usize as ops::arith::RemAssign>::rem_assign",
    "hash": "195759120116020759715178538890870988657"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<usize as ops::arith::Sub>::sub",
    "hash": "1766965486933727189812269861983304321521"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<usize as ops::arith::SubAssign>::sub_assign",
    "hash": "103739426248503478092450330291434834982"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<bool as ops::bit::BitAnd>::bitand",
    "hash": "180888839812469963578187423573149022252"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<bool as ops::bit::BitAndAssign>::bitand_assign",
    "hash": "478971231389937157416326380440003474964"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<bool as ops::bit::BitOr>::bitor",
    "hash": "15880649510421165924462327340646785458"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<bool as ops::bit::BitOrAssign>::bitor_assign",
    "hash": "162095602182665906544506679949106054700"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<bool as ops::bit::BitXor>::bitxor",
    "hash": "1232275349043439496317490107459798511825"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<bool as ops::bit::BitXorAssign>::bitxor_assign",
    "hash": "175087117160319930449100853395959491635"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<bool as ops::bit::Not>::not",
    "hash": "127683964376859283925683988932427222351"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i128 as ops::bit::BitAnd>::bitand",
    "hash": "1793961265973431064515729700594531162990"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i128 as ops::bit::BitAndAssign>::bitand_assign",
    "hash": "1241510405288407974411984324814276534865"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i128 as ops::bit::BitOr>::bitor",
    "hash": "117205160468176404582129207928733339495"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i128 as ops::bit::BitOrAssign>::bitor_assign",
    "hash": "69156557079406364369665547120925359150"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i128 as ops::bit::BitXor>::bitxor",
    "hash": "1784866493702880405010307828209832009808"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i128 as ops::bit::BitXorAssign>::bitxor_assign",
    "hash": "114319754445131123567849389635670261473"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i128 as ops::bit::Not>::not",
    "hash": "17678035325146688367592291255783715019"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i128 as ops::bit::Shl<i16>>::shl",
    "hash": "1051911981647690722111204613777739555606"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i128 as ops::bit::Shl<i32>>::shl",
    "hash": "110102014567663319524818404262982198541"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i128 as ops::bit::Shl<i64>>::shl",
    "hash": "758731034086364857812735993490705200503"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i128 as ops::bit::Shl<i8>>::shl",
    "hash": "531168847392001917816701902598796389016"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i128 as ops::bit::Shl<isize>>::shl",
    "hash": "1098986312911094505187177439838502003"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i128 as ops::bit::Shl<u128>>::shl",
    "hash": "5577814679247007613053440336152216731"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i128 as ops::bit::Shl<u16>>::shl",
    "hash": "83742444005501111915519486066795361900"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i128 as ops::bit::Shl<u32>>::shl",
    "hash": "9458164198075436098441723664710260292"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i128 as ops::bit::Shl<u64>>::shl",
    "hash": "895618851544763746210299514925838297341"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i128 as ops::bit::Shl<u8>>::shl",
    "hash": "590390251558523788313003853718173739431"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i128 as ops::bit::Shl<usize>>::shl",
    "hash": "79805846545077512506602781619243730067"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i128 as ops::bit::Shl>::shl",
    "hash": "247773998114642927412189136459238751450"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i128 as ops::bit::ShlAssign<i16>>::shl_assign",
    "hash": "83363938389101778639790775566646208794"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i128 as ops::bit::ShlAssign<i32>>::shl_assign",
    "hash": "1445473320005068861615052336098623747711"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i128 as ops::bit::ShlAssign<i64>>::shl_assign",
    "hash": "71901710818760044716359351118633088982"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i128 as ops::bit::ShlAssign<i8>>::shl_assign",
    "hash": "1925007595183906505815502702055857102"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i128 as ops::bit::ShlAssign<isize>>::shl_assign",
    "hash": "1457048255740161770311303287841026547519"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i128 as ops::bit::ShlAssign<u128>>::shl_assign",
    "hash": "86911545811241002147449785774807519051"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i128 as ops::bit::ShlAssign<u16>>::shl_assign",
    "hash": "139118577809642484063545915979340874535"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i128 as ops::bit::ShlAssign<u32>>::shl_assign",
    "hash": "1120148614679631851712474838035961886493"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i128 as ops::bit::ShlAssign<u64>>::shl_assign",
    "hash": "59333154752070655394404653247873226961"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i128 as ops::bit::ShlAssign<u8>>::shl_assign",
    "hash": "68096445399310962337809330477255015740"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i128 as ops::bit::ShlAssign<usize>>::shl_assign",
    "hash": "147482162180043816891516668382357786045"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i128 as ops::bit::ShlAssign>::shl_assign",
    "hash": "7556668661766596343960853874978314047"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i128 as ops::bit::Shr<i16>>::shr",
    "hash": "84916344515952752311788207558762884282"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i128 as ops::bit::Shr<i32>>::shr",
    "hash": "52435484804804974527887903063871429119"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i128 as ops::bit::Shr<i64>>::shr",
    "hash": "99200338107386963438875147620934595728"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i128 as ops::bit::Shr<i8>>::shr",
    "hash": "6002511271470047711842111137051231966"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i128 as ops::bit::Shr<isize>>::shr",
    "hash": "84572228637481824113234247337348394219"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i128 as ops::bit::Shr<u128>>::shr",
    "hash": "172840407549012038064588194484624315373"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i128 as ops::bit::Shr<u16>>::shr",
    "hash": "98529237184070080603325217213842599989"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i128 as ops::bit::Shr<u32>>::shr",
    "hash": "565793581731622844414465320972761106167"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i128 as ops::bit::Shr<u64>>::shr",
    "hash": "168160293718402717796006462411306155686"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i128 as ops::bit::Shr<u8>>::shr",
    "hash": "167313332357784287245486503405016857501"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i128 as ops::bit::Shr<usize>>::shr",
    "hash": "106187454283532802646410670095037736903"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i128 as ops::bit::Shr>::shr",
    "hash": "182375434031114599539512497756359352528"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i128 as ops::bit::ShrAssign<i16>>::shr_assign",
    "hash": "18647020375226198568306492128729894470"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i128 as ops::bit::ShrAssign<i32>>::shr_assign",
    "hash": "803818414561058551017069233093297353384"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i128 as ops::bit::ShrAssign<i64>>::shr_assign",
    "hash": "280909251878029845113781147932695349214"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i128 as ops::bit::ShrAssign<i8>>::shr_assign",
    "hash": "1072322582668858946410307969766306208030"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i128 as ops::bit::ShrAssign<isize>>::shr_assign",
    "hash": "967028155847984257317629590315728698959"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i128 as ops::bit::ShrAssign<u128>>::shr_assign",
    "hash": "62123004683544042334122393337983403092"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i128 as ops::bit::ShrAssign<u16>>::shr_assign",
    "hash": "680681089049655304613976866870325197816"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i128 as ops::bit::ShrAssign<u32>>::shr_assign",
    "hash": "1124038531436754727114334870572731094433"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i128 as ops::bit::ShrAssign<u64>>::shr_assign",
    "hash": "476989955395865267113652353744414620663"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i128 as ops::bit::ShrAssign<u8>>::shr_assign",
    "hash": "148349359005370492983416662727600259097"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i128 as ops::bit::ShrAssign<usize>>::shr_assign",
    "hash": "75371176521444391497882480854453679307"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i128 as ops::bit::ShrAssign>::shr_assign",
    "hash": "95404696205850427385426410530805114958"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i16 as ops::bit::BitAnd>::bitand",
    "hash": "30999621367085913989064922995058555589"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i16 as ops::bit::BitAndAssign>::bitand_assign",
    "hash": "183119649035395466311083314971991810356"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i16 as ops::bit::BitOr>::bitor",
    "hash": "958410034813325860813708132645304900385"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i16 as ops::bit::BitOrAssign>::bitor_assign",
    "hash": "1194048836123447585914152821111891812803"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i16 as ops::bit::BitXor>::bitxor",
    "hash": "530209102971899771613139995716482225573"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i16 as ops::bit::BitXorAssign>::bitxor_assign",
    "hash": "14534946895362681165577647113830344591"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i16 as ops::bit::Not>::not",
    "hash": "390704660758868529713619147365142652722"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i16 as ops::bit::Shl<i128>>::shl",
    "hash": "369994512059665529011824533827247579731"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i16 as ops::bit::Shl<i32>>::shl",
    "hash": "1639290913960759156116682426187809890466"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i16 as ops::bit::Shl<i64>>::shl",
    "hash": "16556233869150050072540551005019625618"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i16 as ops::bit::Shl<i8>>::shl",
    "hash": "1920072071515277101984210099652972766"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i16 as ops::bit::Shl<isize>>::shl",
    "hash": "1570192154120420937310441844352059545526"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i16 as ops::bit::Shl<u128>>::shl",
    "hash": "26053435693509470397442453677652520863"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i16 as ops::bit::Shl<u16>>::shl",
    "hash": "436528668831739602863484883866884212"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i16 as ops::bit::Shl<u32>>::shl",
    "hash": "175668710277344790717049921182367096317"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i16 as ops::bit::Shl<u64>>::shl",
    "hash": "83917819824467964607965356447679706718"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i16 as ops::bit::Shl<u8>>::shl",
    "hash": "338217972981689382512099038577953327794"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i16 as ops::bit::Shl<usize>>::shl",
    "hash": "1239780450572637696116386716012417840287"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i16 as ops::bit::Shl>::shl",
    "hash": "86562294690753258401862883002877994286"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i16 as ops::bit::ShlAssign<i128>>::shl_assign",
    "hash": "108139894333007392088407054213939166924"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i16 as ops::bit::ShlAssign<i32>>::shl_assign",
    "hash": "153899869152315193032064355613875996109"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i16 as ops::bit::ShlAssign<i64>>::shl_assign",
    "hash": "180134946943351161466933928062743639522"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i16 as ops::bit::ShlAssign<i8>>::shl_assign",
    "hash": "150467069344341470639713676978229844677"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i16 as ops::bit::ShlAssign<isize>>::shl_assign",
    "hash": "145765022243663327525981714445191795261"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i16 as ops::bit::ShlAssign<u128>>::shl_assign",
    "hash": "1516275153751637215711181411315279463052"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i16 as ops::bit::ShlAssign<u16>>::shl_assign",
    "hash": "1171037943147285775413080685913671757831"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i16 as ops::bit::ShlAssign<u32>>::shl_assign",
    "hash": "11878269676799555667997730912130817883"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i16 as ops::bit::ShlAssign<u64>>::shl_assign",
    "hash": "101933826162340095597050755493018436830"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i16 as ops::bit::ShlAssign<u8>>::shl_assign",
    "hash": "1456655223469814776915998521162224515319"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i16 as ops::bit::ShlAssign<usize>>::shl_assign",
    "hash": "19067839164712385752831665001148190629"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i16 as ops::bit::ShlAssign>::shl_assign",
    "hash": "27219357548888200939455605708237645125"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i16 as ops::bit::Shr<i128>>::shr",
    "hash": "12057382964003069878124771720455500341"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i16 as ops::bit::Shr<i32>>::shr",
    "hash": "1256409340042216278214447668224584092328"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i16 as ops::bit::Shr<i64>>::shr",
    "hash": "4855085874526357853596980962507078831"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i16 as ops::bit::Shr<i8>>::shr",
    "hash": "129549758049917823815649535830816274403"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i16 as ops::bit::Shr<isize>>::shr",
    "hash": "136916879351759009275847092297721965458"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i16 as ops::bit::Shr<u128>>::shr",
    "hash": "1844315565305047916917037197446064436370"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i16 as ops::bit::Shr<u16>>::shr",
    "hash": "1394223434116806892811619105111723075215"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i16 as ops::bit::Shr<u32>>::shr",
    "hash": "274716319226916251113442083492208625184"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i16 as ops::bit::Shr<u64>>::shr",
    "hash": "157177600882174100561634877618458373241"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i16 as ops::bit::Shr<u8>>::shr",
    "hash": "163150434055219134854227902963864027566"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i16 as ops::bit::Shr<usize>>::shr",
    "hash": "1800765062640731072818207021641813878113"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i16 as ops::bit::Shr>::shr",
    "hash": "591872212869530612416338306096322256878"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i16 as ops::bit::ShrAssign<i128>>::shr_assign",
    "hash": "1082340542743816482711603340217545789507"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i16 as ops::bit::ShrAssign<i32>>::shr_assign",
    "hash": "459499356469728970110265743287028469603"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i16 as ops::bit::ShrAssign<i64>>::shr_assign",
    "hash": "1302279817857854583414174176526989643"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i16 as ops::bit::ShrAssign<i8>>::shr_assign",
    "hash": "928151701679396305412687298312203592192"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i16 as ops::bit::ShrAssign<isize>>::shr_assign",
    "hash": "19499127775214975625941921011030064005"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i16 as ops::bit::ShrAssign<u128>>::shr_assign",
    "hash": "72177573456919826245532219479828185527"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i16 as ops::bit::ShrAssign<u16>>::shr_assign",
    "hash": "146357978976679609376362584762161285691"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i16 as ops::bit::ShrAssign<u32>>::shr_assign",
    "hash": "1740785398940159915311336406693563965267"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i16 as ops::bit::ShrAssign<u64>>::shr_assign",
    "hash": "394587160039029921714366589990787237054"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i16 as ops::bit::ShrAssign<u8>>::shr_assign",
    "hash": "168768552310252957874622463938008876967"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i16 as ops::bit::ShrAssign<usize>>::shr_assign",
    "hash": "702084249891481971616688585986828147322"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i16 as ops::bit::ShrAssign>::shr_assign",
    "hash": "1162679549120175703215547779223070739050"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i32 as ops::bit::BitAnd>::bitand",
    "hash": "650044328517567129113752435107124188048"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i32 as ops::bit::BitAndAssign>::bitand_assign",
    "hash": "523172257735532328410814092662594886432"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i32 as ops::bit::BitOr>::bitor",
    "hash": "18325128366124804776304968433652290530"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i32 as ops::bit::BitOrAssign>::bitor_assign",
    "hash": "563689526491549462312349431393450620873"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i32 as ops::bit::BitXor>::bitxor",
    "hash": "27847127737280982298448831176809313783"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i32 as ops::bit::BitXorAssign>::bitxor_assign",
    "hash": "161512554564293508671022529456522544118"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i32 as ops::bit::Not>::not",
    "hash": "7673007499254698290421491074594689023"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i32 as ops::bit::Shl<i128>>::shl",
    "hash": "372311767662588850914962226310870392516"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i32 as ops::bit::Shl<i16>>::shl",
    "hash": "73933326459529212161103129326366366838"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i32 as ops::bit::Shl<i64>>::shl",
    "hash": "945692740491802532516018972435014904337"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i32 as ops::bit::Shl<i8>>::shl",
    "hash": "127284191918108322810994354230432984396"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i32 as ops::bit::Shl<isize>>::shl",
    "hash": "166321779917433172976781337389312292866"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i32 as ops::bit::Shl<u128>>::shl",
    "hash": "84916113287272664946116860756496215350"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i32 as ops::bit::Shl<u16>>::shl",
    "hash": "60693524282621363113855407251761051106"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i32 as ops::bit::Shl<u32>>::shl",
    "hash": "95569891536194112417990256218041626095"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i32 as ops::bit::Shl<u64>>::shl",
    "hash": "49102357936995576999148573322335668801"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i32 as ops::bit::Shl<u8>>::shl",
    "hash": "158071309878467722208845899662268064375"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i32 as ops::bit::Shl<usize>>::shl",
    "hash": "127326226923293594714402772329831927248"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i32 as ops::bit::Shl>::shl",
    "hash": "115924809352986079492091746732207053045"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i32 as ops::bit::ShlAssign<i128>>::shl_assign",
    "hash": "98598243525298719369833084251205034922"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i32 as ops::bit::ShlAssign<i16>>::shl_assign",
    "hash": "5043021829551019955307616851817362747"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i32 as ops::bit::ShlAssign<i64>>::shl_assign",
    "hash": "97970598415413255698288556835718214161"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i32 as ops::bit::ShlAssign<i8>>::shl_assign",
    "hash": "162156145419285016963941393087307618633"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i32 as ops::bit::ShlAssign<isize>>::shl_assign",
    "hash": "141436038589986961691348712749643181981"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i32 as ops::bit::ShlAssign<u128>>::shl_assign",
    "hash": "1945107935776758139505761860965820103"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i32 as ops::bit::ShlAssign<u16>>::shl_assign",
    "hash": "602531937561273793810416282539112713337"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i32 as ops::bit::ShlAssign<u32>>::shl_assign",
    "hash": "675844158209124258512529760667288112736"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i32 as ops::bit::ShlAssign<u64>>::shl_assign",
    "hash": "1442165165511903602517824575001507841849"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i32 as ops::bit::ShlAssign<u8>>::shl_assign",
    "hash": "193903806064003679113566531225636948611"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i32 as ops::bit::ShlAssign<usize>>::shl_assign",
    "hash": "67858588031009218683476456680220132025"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i32 as ops::bit::ShlAssign>::shl_assign",
    "hash": "77317202335624914285205463009906169736"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i32 as ops::bit::Shr<i128>>::shr",
    "hash": "456288907330992092510475190493236783962"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i32 as ops::bit::Shr<i16>>::shr",
    "hash": "111754207126526766211742199700332401485"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i32 as ops::bit::Shr<i64>>::shr",
    "hash": "105560726995714340898671671697877890712"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i32 as ops::bit::Shr<i8>>::shr",
    "hash": "1778482807745585723151711071786303547"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i32 as ops::bit::Shr<isize>>::shr",
    "hash": "46824558396391075394133281167811439576"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i32 as ops::bit::Shr<u128>>::shr",
    "hash": "62394613565502557831164743745815044594"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i32 as ops::bit::Shr<u16>>::shr",
    "hash": "63193189775272741887688234090540009590"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i32 as ops::bit::Shr<u32>>::shr",
    "hash": "6085411744444831555751785705114369522"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i32 as ops::bit::Shr<u64>>::shr",
    "hash": "970523756054894816718027193809522169566"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i32 as ops::bit::Shr<u8>>::shr",
    "hash": "1982978121002814698728983659544162953"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i32 as ops::bit::Shr<usize>>::shr",
    "hash": "1252052816599646751916304726329220275217"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i32 as ops::bit::Shr>::shr",
    "hash": "1827190494142028610312458171742585639234"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i32 as ops::bit::ShrAssign<i128>>::shr_assign",
    "hash": "159625308452030148557683645364724176960"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i32 as ops::bit::ShrAssign<i16>>::shr_assign",
    "hash": "768788867936880734310297679208696962768"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i32 as ops::bit::ShrAssign<i64>>::shr_assign",
    "hash": "109642174482252228310588668556024668328"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i32 as ops::bit::ShrAssign<i8>>::shr_assign",
    "hash": "970751713481959125514679021117052854938"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i32 as ops::bit::ShrAssign<isize>>::shr_assign",
    "hash": "185861858140891289917530776264281708224"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i32 as ops::bit::ShrAssign<u128>>::shr_assign",
    "hash": "2858329227941886526873854772282381792"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i32 as ops::bit::ShrAssign<u16>>::shr_assign",
    "hash": "1367072615336776444510120125888338253351"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i32 as ops::bit::ShrAssign<u32>>::shr_assign",
    "hash": "136285508211340574525627896169264205909"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i32 as ops::bit::ShrAssign<u64>>::shr_assign",
    "hash": "104540169487069478378765314881949094651"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i32 as ops::bit::ShrAssign<u8>>::shr_assign",
    "hash": "113268035535056379856637557233958677472"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i32 as ops::bit::ShrAssign<usize>>::shr_assign",
    "hash": "1576059130050384470911293747112190065091"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i32 as ops::bit::ShrAssign>::shr_assign",
    "hash": "179296206631014686195005660766763394118"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i64 as ops::bit::BitAnd>::bitand",
    "hash": "177130259178368690396729436287782876554"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i64 as ops::bit::BitAndAssign>::bitand_assign",
    "hash": "92882203864182182873350311004168437437"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i64 as ops::bit::BitOr>::bitor",
    "hash": "1251816211255550521312426977523193617803"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i64 as ops::bit::BitOrAssign>::bitor_assign",
    "hash": "152021507572025898891965891497268639569"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i64 as ops::bit::BitXor>::bitxor",
    "hash": "92045038203233898566524957035306722228"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i64 as ops::bit::BitXorAssign>::bitxor_assign",
    "hash": "557078001531630199912064711572310358392"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i64 as ops::bit::Not>::not",
    "hash": "895189105872042485310848603794885148381"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i64 as ops::bit::Shl<i128>>::shl",
    "hash": "519886691618675496512472538252030165644"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i64 as ops::bit::Shl<i16>>::shl",
    "hash": "600615754133054323114097439753133105226"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i64 as ops::bit::Shl<i32>>::shl",
    "hash": "88143148239519780834881409085594168064"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i64 as ops::bit::Shl<i8>>::shl",
    "hash": "1502636840613491635213427928807402919287"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i64 as ops::bit::Shl<isize>>::shl",
    "hash": "923936075760432042913220817899822884807"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i64 as ops::bit::Shl<u128>>::shl",
    "hash": "111478624590468670187088100192306220699"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i64 as ops::bit::Shl<u16>>::shl",
    "hash": "56752266533731922342260253612077938022"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i64 as ops::bit::Shl<u32>>::shl",
    "hash": "1164382060108326787316293534434865127647"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i64 as ops::bit::Shl<u64>>::shl",
    "hash": "126499948389464426157703256714979285668"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i64 as ops::bit::Shl<u8>>::shl",
    "hash": "215926913750976314314068960078188379447"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i64 as ops::bit::Shl<usize>>::shl",
    "hash": "310908990363402840213294445644379965674"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i64 as ops::bit::Shl>::shl",
    "hash": "133086992157339230893167096127497255732"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i64 as ops::bit::ShlAssign<i128>>::shl_assign",
    "hash": "12022878947101614564287908552213206934"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i64 as ops::bit::ShlAssign<i16>>::shl_assign",
    "hash": "30123396312511948915366517312336076979"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i64 as ops::bit::ShlAssign<i32>>::shl_assign",
    "hash": "638730999575703380617188084555849314122"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i64 as ops::bit::ShlAssign<i8>>::shl_assign",
    "hash": "1217762814122437976313182829545440985626"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i64 as ops::bit::ShlAssign<isize>>::shl_assign",
    "hash": "334873923646372835711511981573344062594"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i64 as ops::bit::ShlAssign<u128>>::shl_assign",
    "hash": "171676398080742981299424224295233571809"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i64 as ops::bit::ShlAssign<u16>>::shl_assign",
    "hash": "162614080508702718738798474103051710211"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i64 as ops::bit::ShlAssign<u32>>::shl_assign",
    "hash": "1259268014087360420011611684771853658785"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i64 as ops::bit::ShlAssign<u64>>::shl_assign",
    "hash": "372109983934819602616853292906523361675"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i64 as ops::bit::ShlAssign<u8>>::shl_assign",
    "hash": "164294904009126686317481259368574742723"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i64 as ops::bit::ShlAssign<usize>>::shl_assign",
    "hash": "303849986522885022816895171834573922284"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i64 as ops::bit::ShlAssign>::shl_assign",
    "hash": "4873473886976984715686454178756620308"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i64 as ops::bit::Shr<i128>>::shr",
    "hash": "122365134876934392045583807237646072549"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i64 as ops::bit::Shr<i16>>::shr",
    "hash": "785121155105854338814422036466866947632"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i64 as ops::bit::Shr<i32>>::shr",
    "hash": "70476468952767819045644687821285988757"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i64 as ops::bit::Shr<i8>>::shr",
    "hash": "108064687474438328212422910312087279159"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i64 as ops::bit::Shr<isize>>::shr",
    "hash": "115888423558453966127052454938741917186"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i64 as ops::bit::Shr<u128>>::shr",
    "hash": "541746987242881221315467975113861720213"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i64 as ops::bit::Shr<u16>>::shr",
    "hash": "72016824465103687715830593610750451690"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i64 as ops::bit::Shr<u32>>::shr",
    "hash": "984934232578002877118130435142307114962"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i64 as ops::bit::Shr<u64>>::shr",
    "hash": "18615051785657418998105309652196250887"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i64 as ops::bit::Shr<u8>>::shr",
    "hash": "252076705605397521315528966773778893585"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i64 as ops::bit::Shr<usize>>::shr",
    "hash": "182334890493823297886561690050581993760"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i64 as ops::bit::Shr>::shr",
    "hash": "64323871058965727704958960261292247532"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i64 as ops::bit::ShrAssign<i128>>::shr_assign",
    "hash": "15541455504005157713039772872834355506"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i64 as ops::bit::ShrAssign<i16>>::shr_assign",
    "hash": "154246902498121656678561234135209622361"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i64 as ops::bit::ShrAssign<i32>>::shr_assign",
    "hash": "1711363271878871031416326473484662138184"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i64 as ops::bit::ShrAssign<i8>>::shr_assign",
    "hash": "629938562882551976515434068473019460031"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i64 as ops::bit::ShrAssign<isize>>::shr_assign",
    "hash": "1387440559648143154715489911502773094979"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i64 as ops::bit::ShrAssign<u128>>::shr_assign",
    "hash": "6349366645910570185696228170527570916"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i64 as ops::bit::ShrAssign<u16>>::shr_assign",
    "hash": "1277302577812576879817916744075541774693"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i64 as ops::bit::ShrAssign<u32>>::shr_assign",
    "hash": "174367599262246686849412450417936204822"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i64 as ops::bit::ShrAssign<u64>>::shr_assign",
    "hash": "139045564333225764262391973990296542059"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i64 as ops::bit::ShrAssign<u8>>::shr_assign",
    "hash": "125468399431457930326653850093260157867"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i64 as ops::bit::ShrAssign<usize>>::shr_assign",
    "hash": "81519386163857207772552616680129146329"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i64 as ops::bit::ShrAssign>::shr_assign",
    "hash": "804100658757004607312580641724776428737"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i8 as ops::bit::BitAnd>::bitand",
    "hash": "265934978426920325916139362043655563972"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i8 as ops::bit::BitAndAssign>::bitand_assign",
    "hash": "187656684940978225016253050002036561123"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i8 as ops::bit::BitOr>::bitor",
    "hash": "1038439527947300424913485084014949533102"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i8 as ops::bit::BitOrAssign>::bitor_assign",
    "hash": "5450037425521674909577390011047896829"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i8 as ops::bit::BitXor>::bitxor",
    "hash": "235161805994662708410335021936686730330"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i8 as ops::bit::BitXorAssign>::bitxor_assign",
    "hash": "15141007315562777526300561672575058394"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i8 as ops::bit::Not>::not",
    "hash": "1537246348192884380817198491291708678007"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i8 as ops::bit::Shl<i128>>::shl",
    "hash": "1500222601461225284011832209505507953980"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i8 as ops::bit::Shl<i16>>::shl",
    "hash": "127788797766387834265333094192172909614"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i8 as ops::bit::Shl<i32>>::shl",
    "hash": "876235355238578336118280187620191125577"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i8 as ops::bit::Shl<i64>>::shl",
    "hash": "530570851229112537916340369895843732996"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i8 as ops::bit::Shl<isize>>::shl",
    "hash": "173405338315610398805406335749852954840"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i8 as ops::bit::Shl<u128>>::shl",
    "hash": "182574574704852282226519848780600798700"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i8 as ops::bit::Shl<u16>>::shl",
    "hash": "346432348359634357810611753614394803704"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i8 as ops::bit::Shl<u32>>::shl",
    "hash": "628821373677192073115424274188373035854"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i8 as ops::bit::Shl<u64>>::shl",
    "hash": "1477471625163490621112228502358591359135"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i8 as ops::bit::Shl<u8>>::shl",
    "hash": "1180349748674282520415885034699269524954"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i8 as ops::bit::Shl<usize>>::shl",
    "hash": "1606409143407086665411344928646153381243"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i8 as ops::bit::Shl>::shl",
    "hash": "134388452439948460947565307447803923567"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i8 as ops::bit::ShlAssign<i128>>::shl_assign",
    "hash": "175953538873950220399780597119695289401"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i8 as ops::bit::ShlAssign<i16>>::shl_assign",
    "hash": "1167003380555467295713232357533484137535"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i8 as ops::bit::ShlAssign<i32>>::shl_assign",
    "hash": "1569672052333385953617317644114812707678"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i8 as ops::bit::ShlAssign<i64>>::shl_assign",
    "hash": "1401783655487088490715473219237431444699"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i8 as ops::bit::ShlAssign<isize>>::shl_assign",
    "hash": "43694178837655065098507930732722649717"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i8 as ops::bit::ShlAssign<u128>>::shl_assign",
    "hash": "81212066706277228045835755535670554742"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i8 as ops::bit::ShlAssign<u16>>::shl_assign",
    "hash": "10009080133801249209206330620284505960"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i8 as ops::bit::ShlAssign<u32>>::shl_assign",
    "hash": "157677295055230541791791240253338165399"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i8 as ops::bit::ShlAssign<u64>>::shl_assign",
    "hash": "668883006836114865313569556620229909277"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i8 as ops::bit::ShlAssign<u8>>::shl_assign",
    "hash": "124132922445684848416224827673667408259"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i8 as ops::bit::ShlAssign<usize>>::shl_assign",
    "hash": "39009543811048322152485258776391493287"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i8 as ops::bit::ShlAssign>::shl_assign",
    "hash": "962687785728676651912193198008104208542"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i8 as ops::bit::Shr<i128>>::shr",
    "hash": "13222223846942633966469387293813757454"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i8 as ops::bit::Shr<i16>>::shr",
    "hash": "129354384357152128994023349724798298718"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i8 as ops::bit::Shr<i32>>::shr",
    "hash": "440495384250601219917573140621983067495"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i8 as ops::bit::Shr<i64>>::shr",
    "hash": "43353337102038939705025310351928996745"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i8 as ops::bit::Shr<isize>>::shr",
    "hash": "1631066441864363168615667381643584165156"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i8 as ops::bit::Shr<u128>>::shr",
    "hash": "15069049925476723758863568158100110495"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i8 as ops::bit::Shr<u16>>::shr",
    "hash": "75512060347123581438434446194896001055"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i8 as ops::bit::Shr<u32>>::shr",
    "hash": "822231302293652279812725886846301741897"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i8 as ops::bit::Shr<u64>>::shr",
    "hash": "48692503252786750910817176032854459638"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i8 as ops::bit::Shr<u8>>::shr",
    "hash": "764391322216929091916149774401401124429"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i8 as ops::bit::Shr<usize>>::shr",
    "hash": "3033423382609026958834303599617874497"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i8 as ops::bit::Shr>::shr",
    "hash": "875301376810742097310968926539412077305"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i8 as ops::bit::ShrAssign<i128>>::shr_assign",
    "hash": "95759869150350915395931148901724047094"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i8 as ops::bit::ShrAssign<i16>>::shr_assign",
    "hash": "966573987564931707017359187861522454667"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i8 as ops::bit::ShrAssign<i32>>::shr_assign",
    "hash": "115230667055948088454393139001470862292"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i8 as ops::bit::ShrAssign<i64>>::shr_assign",
    "hash": "168176285236441151926312375282462478137"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i8 as ops::bit::ShrAssign<isize>>::shr_assign",
    "hash": "1091082086919245787312340753575872961032"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i8 as ops::bit::ShrAssign<u128>>::shr_assign",
    "hash": "1579416481525834184311006498817808888954"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i8 as ops::bit::ShrAssign<u16>>::shr_assign",
    "hash": "162176833042729613188518167084402371982"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i8 as ops::bit::ShrAssign<u32>>::shr_assign",
    "hash": "3851098092345842197412019227477802363"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i8 as ops::bit::ShrAssign<u64>>::shr_assign",
    "hash": "1526741996395734916812177274703204838375"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i8 as ops::bit::ShrAssign<u8>>::shr_assign",
    "hash": "13646406535042712152794047470294216622"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i8 as ops::bit::ShrAssign<usize>>::shr_assign",
    "hash": "1257251827191501629917477858341469208838"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i8 as ops::bit::ShrAssign>::shr_assign",
    "hash": "53827271385891498898001380351226400171"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<isize as ops::bit::BitAnd>::bitand",
    "hash": "76432713787776865871390085984946573323"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<isize as ops::bit::BitAndAssign>::bitand_assign",
    "hash": "570033010102498626916392611870710373476"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<isize as ops::bit::BitOr>::bitor",
    "hash": "1323797199755613456415087515572321384502"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<isize as ops::bit::BitOrAssign>::bitor_assign",
    "hash": "651287959015088433815609945310032982203"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<isize as ops::bit::BitXor>::bitxor",
    "hash": "241120474533219045010068829348993239515"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<isize as ops::bit::BitXorAssign>::bitxor_assign",
    "hash": "1666658215730000042116961826414410846042"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<isize as ops::bit::Not>::not",
    "hash": "67465127472702371406606122427792653881"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<isize as ops::bit::Shl<i128>>::shl",
    "hash": "124252566629162540710211192826211941778"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<isize as ops::bit::Shl<i16>>::shl",
    "hash": "20407857733618364992738031189710182728"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<isize as ops::bit::Shl<i32>>::shl",
    "hash": "138030836316318330562705735004424424551"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<isize as ops::bit::Shl<i64>>::shl",
    "hash": "690869730633248965014633810433932065133"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<isize as ops::bit::Shl<i8>>::shl",
    "hash": "15797597993320895974122687561255552224"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<isize as ops::bit::Shl<u128>>::shl",
    "hash": "1354521478861213832417369059715475099588"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<isize as ops::bit::Shl<u16>>::shl",
    "hash": "5290613153892006742932393402090598920"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<isize as ops::bit::Shl<u32>>::shl",
    "hash": "73044831548130434963339717085621650239"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<isize as ops::bit::Shl<u64>>::shl",
    "hash": "108057653085261391483904948960105328058"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<isize as ops::bit::Shl<u8>>::shl",
    "hash": "1445128940321687963511513948550196397843"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<isize as ops::bit::Shl<usize>>::shl",
    "hash": "1108913661172951105713458460969346870843"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<isize as ops::bit::Shl>::shl",
    "hash": "1335078385529779343411326551404773804995"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<isize as ops::bit::ShlAssign<i128>>::shl_assign",
    "hash": "409274026799394035318142342381754427094"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<isize as ops::bit::ShlAssign<i16>>::shl_assign",
    "hash": "97696315587218349949731581860100477770"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<isize as ops::bit::ShlAssign<i32>>::shl_assign",
    "hash": "1074217503505370800214103044388330466680"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<isize as ops::bit::ShlAssign<i64>>::shl_assign",
    "hash": "169715040062927096011126536896115620000"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<isize as ops::bit::ShlAssign<i8>>::shl_assign",
    "hash": "17565826884387431223646560914014227551"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<isize as ops::bit::ShlAssign<u128>>::shl_assign",
    "hash": "9683412502234847984414239394166788790"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<isize as ops::bit::ShlAssign<u16>>::shl_assign",
    "hash": "19522654744549055613155489562102960063"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<isize as ops::bit::ShlAssign<u32>>::shl_assign",
    "hash": "177059723492227865776533243919827248565"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<isize as ops::bit::ShlAssign<u64>>::shl_assign",
    "hash": "1587223423242235282517648148242404892437"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<isize as ops::bit::ShlAssign<u8>>::shl_assign",
    "hash": "142015009514126465491366015343125854399"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<isize as ops::bit::ShlAssign<usize>>::shl_assign",
    "hash": "156241664859030108363248602002617615015"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<isize as ops::bit::ShlAssign>::shl_assign",
    "hash": "87042012756659532117718515910945786415"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<isize as ops::bit::Shr<i128>>::shr",
    "hash": "14398438736517685926909515444084201162"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<isize as ops::bit::Shr<i16>>::shr",
    "hash": "1697961557145322975113608464033088978107"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<isize as ops::bit::Shr<i32>>::shr",
    "hash": "367164258728188495417286818328852304887"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<isize as ops::bit::Shr<i64>>::shr",
    "hash": "84362255641806963116400185139711593383"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<isize as ops::bit::Shr<i8>>::shr",
    "hash": "87832914315465300562381055478756435810"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<isize as ops::bit::Shr<u128>>::shr",
    "hash": "164816886859396541954681472477225506407"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<isize as ops::bit::Shr<u16>>::shr",
    "hash": "136688853923481111711046403475651137213"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<isize as ops::bit::Shr<u32>>::shr",
    "hash": "158454290273284830745964738137700027277"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<isize as ops::bit::Shr<u64>>::shr",
    "hash": "135777831227197261636397131917100822104"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<isize as ops::bit::Shr<u8>>::shr",
    "hash": "855915505936532129878383965975151651"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<isize as ops::bit::Shr<usize>>::shr",
    "hash": "140083736536507792678573490579968389476"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<isize as ops::bit::Shr>::shr",
    "hash": "97603112602427614806458485286914582838"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<isize as ops::bit::ShrAssign<i128>>::shr_assign",
    "hash": "633033568981137758111529831047668315802"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<isize as ops::bit::ShrAssign<i16>>::shr_assign",
    "hash": "69523313764541147078545550611566451610"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<isize as ops::bit::ShrAssign<i32>>::shr_assign",
    "hash": "18413833995721936053569619699773900797"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<isize as ops::bit::ShrAssign<i64>>::shr_assign",
    "hash": "844770127360393136610758605775174070762"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<isize as ops::bit::ShrAssign<i8>>::shr_assign",
    "hash": "111507185457589686111050260274356354970"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<isize as ops::bit::ShrAssign<u128>>::shr_assign",
    "hash": "343850695580523517716617606970814942217"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<isize as ops::bit::ShrAssign<u16>>::shr_assign",
    "hash": "1186049160652638151215329780278637040919"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<isize as ops::bit::ShrAssign<u32>>::shr_assign",
    "hash": "652179450612552890316734168878977202822"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<isize as ops::bit::ShrAssign<u64>>::shr_assign",
    "hash": "393495215948651898416378032098946644896"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<isize as ops::bit::ShrAssign<u8>>::shr_assign",
    "hash": "370654684617466413012581098721631117893"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<isize as ops::bit::ShrAssign<usize>>::shr_assign",
    "hash": "135587522201197448211467079381551232901"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<isize as ops::bit::ShrAssign>::shr_assign",
    "hash": "167027232061063640710519469352000458165"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u128 as ops::bit::BitAnd>::bitand",
    "hash": "698683589886308818816517921220151373414"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u128 as ops::bit::BitAndAssign>::bitand_assign",
    "hash": "123017279453042730449152307198036222275"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u128 as ops::bit::BitOr>::bitor",
    "hash": "177851452712269505323409598312676865030"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u128 as ops::bit::BitOrAssign>::bitor_assign",
    "hash": "837803172349769495414167924563365128710"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u128 as ops::bit::BitXor>::bitxor",
    "hash": "663730877907690999916441226851998822783"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u128 as ops::bit::BitXorAssign>::bitxor_assign",
    "hash": "1796958685945818952113461391853864300285"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u128 as ops::bit::Not>::not",
    "hash": "58051596585258972945980051594985678051"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u128 as ops::bit::Shl<i128>>::shl",
    "hash": "112495606245423211109883350240530298314"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u128 as ops::bit::Shl<i16>>::shl",
    "hash": "96686797552048085984574146579993005860"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u128 as ops::bit::Shl<i32>>::shl",
    "hash": "39137622506336967938731668104704170779"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u128 as ops::bit::Shl<i64>>::shl",
    "hash": "1287011823963922977317571017329766960624"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u128 as ops::bit::Shl<i8>>::shl",
    "hash": "4348935130766861177116042714398442100"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u128 as ops::bit::Shl<isize>>::shl",
    "hash": "1657539756365399379415109198607340425139"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u128 as ops::bit::Shl<u16>>::shl",
    "hash": "164911093200342327824872613281736554723"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u128 as ops::bit::Shl<u32>>::shl",
    "hash": "1336946185925578093713438611242629189694"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u128 as ops::bit::Shl<u64>>::shl",
    "hash": "182616157802369360283050352765235265077"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u128 as ops::bit::Shl<u8>>::shl",
    "hash": "101567652060558363396060830755476229342"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u128 as ops::bit::Shl<usize>>::shl",
    "hash": "1333121520770841230913836652975325703751"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u128 as ops::bit::Shl>::shl",
    "hash": "21065839941386437356566846014298232799"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u128 as ops::bit::ShlAssign<i128>>::shl_assign",
    "hash": "560601792088403816411193390335817606510"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u128 as ops::bit::ShlAssign<i16>>::shl_assign",
    "hash": "7286423301850060633738383931602569260"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u128 as ops::bit::ShlAssign<i32>>::shl_assign",
    "hash": "1225897943844593006512182713127596218031"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u128 as ops::bit::ShlAssign<i64>>::shl_assign",
    "hash": "24430215384470987569351338536717158801"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u128 as ops::bit::ShlAssign<i8>>::shl_assign",
    "hash": "624728818333329451717911659287261981332"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u128 as ops::bit::ShlAssign<isize>>::shl_assign",
    "hash": "167199075836402970079881338460500719590"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u128 as ops::bit::ShlAssign<u16>>::shl_assign",
    "hash": "54640285621692748396618279601558470638"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u128 as ops::bit::ShlAssign<u32>>::shl_assign",
    "hash": "44923138085046037111022094778969555085"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u128 as ops::bit::ShlAssign<u64>>::shl_assign",
    "hash": "15703922009065763410487786272660294980"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u128 as ops::bit::ShlAssign<u8>>::shl_assign",
    "hash": "135397585856537308549041378875272120980"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u128 as ops::bit::ShlAssign<usize>>::shl_assign",
    "hash": "92645675095284498027762993550272452185"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u128 as ops::bit::ShlAssign>::shl_assign",
    "hash": "1315306681532292427014257992496562735101"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u128 as ops::bit::Shr<i128>>::shr",
    "hash": "665011930864485544418402139627349278519"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u128 as ops::bit::Shr<i16>>::shr",
    "hash": "710561866590987664815244306066189390488"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u128 as ops::bit::Shr<i32>>::shr",
    "hash": "146166504108819161152238247312375191991"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u128 as ops::bit::Shr<i64>>::shr",
    "hash": "1671831135230185286313848274305846604976"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u128 as ops::bit::Shr<i8>>::shr",
    "hash": "1765941086975858800012517978772437594578"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u128 as ops::bit::Shr<isize>>::shr",
    "hash": "154074820181499543705973179981078971176"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u128 as ops::bit::Shr<u16>>::shr",
    "hash": "27723917931885615359683619149726644776"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u128 as ops::bit::Shr<u32>>::shr",
    "hash": "1074290691146986455913220414394998355820"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u128 as ops::bit::Shr<u64>>::shr",
    "hash": "188154924526487045617977071600152927877"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u128 as ops::bit::Shr<u8>>::shr",
    "hash": "36228608325673870544611055550960056098"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u128 as ops::bit::Shr<usize>>::shr",
    "hash": "31489583802490444244369012944294891814"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u128 as ops::bit::Shr>::shr",
    "hash": "1494106883292313936017579750248879702568"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u128 as ops::bit::ShrAssign<i128>>::shr_assign",
    "hash": "12538550557066233502563259039350679244"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u128 as ops::bit::ShrAssign<i16>>::shr_assign",
    "hash": "797308284339715255613418674503815214363"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u128 as ops::bit::ShrAssign<i32>>::shr_assign",
    "hash": "70375929778438969709980457220685585862"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u128 as ops::bit::ShrAssign<i64>>::shr_assign",
    "hash": "1271101983074831800811928802481427999605"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u128 as ops::bit::ShrAssign<i8>>::shr_assign",
    "hash": "58200750323953636002458604086138734842"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u128 as ops::bit::ShrAssign<isize>>::shr_assign",
    "hash": "205528280389973032011324337459939170426"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u128 as ops::bit::ShrAssign<u16>>::shr_assign",
    "hash": "28874133311605197234469741603507629317"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u128 as ops::bit::ShrAssign<u32>>::shr_assign",
    "hash": "1365992578558262081812445854956193194163"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u128 as ops::bit::ShrAssign<u64>>::shr_assign",
    "hash": "134889430978504513464157262520049825282"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u128 as ops::bit::ShrAssign<u8>>::shr_assign",
    "hash": "14671811483515516939338431445299183761"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u128 as ops::bit::ShrAssign<usize>>::shr_assign",
    "hash": "165631479488509255547765512481609374237"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u128 as ops::bit::ShrAssign>::shr_assign",
    "hash": "4139114608543593465567357386321147577"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u16 as ops::bit::BitAnd>::bitand",
    "hash": "173427564344180055716436903422574280366"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u16 as ops::bit::BitAndAssign>::bitand_assign",
    "hash": "29251664065752521517947747337802533290"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u16 as ops::bit::BitOr>::bitor",
    "hash": "150746008680852917955868139213269468543"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u16 as ops::bit::BitOrAssign>::bitor_assign",
    "hash": "161315285151589141234139981392983931158"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u16 as ops::bit::BitXor>::bitxor",
    "hash": "1154461855422818694111067968965886474884"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u16 as ops::bit::BitXorAssign>::bitxor_assign",
    "hash": "221041606764486233011969717250576302894"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u16 as ops::bit::Not>::not",
    "hash": "468617947150591468914297928418923287178"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u16 as ops::bit::Shl<i128>>::shl",
    "hash": "63627388099872270336521154994503857838"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u16 as ops::bit::Shl<i16>>::shl",
    "hash": "684001467647245617918111725261451659152"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u16 as ops::bit::Shl<i32>>::shl",
    "hash": "1669401695199587978914625328020029874055"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u16 as ops::bit::Shl<i64>>::shl",
    "hash": "611031479428844733517002708644253628012"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u16 as ops::bit::Shl<i8>>::shl",
    "hash": "57556201932280956439107937247171399155"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u16 as ops::bit::Shl<isize>>::shl",
    "hash": "9162740072896255169130977666831784748"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u16 as ops::bit::Shl<u128>>::shl",
    "hash": "138073773879659261103890470062109767232"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u16 as ops::bit::Shl<u32>>::shl",
    "hash": "364936906377227211710947794863491976999"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u16 as ops::bit::Shl<u64>>::shl",
    "hash": "669351057927740328411077596574964227577"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u16 as ops::bit::Shl<u8>>::shl",
    "hash": "432879750867627762912436726342858514036"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u16 as ops::bit::Shl<usize>>::shl",
    "hash": "54092777277852142899682146768365027715"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u16 as ops::bit::Shl>::shl",
    "hash": "144756502957481607414489579177398107801"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u16 as ops::bit::ShlAssign<i128>>::shl_assign",
    "hash": "1406955408444701256111693382016776816107"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u16 as ops::bit::ShlAssign<i16>>::shl_assign",
    "hash": "1058219818070999166014991462144549347067"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u16 as ops::bit::ShlAssign<i32>>::shl_assign",
    "hash": "62503935392705689254675010456476929601"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u16 as ops::bit::ShlAssign<i64>>::shl_assign",
    "hash": "104214552772085738944678747200355186885"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u16 as ops::bit::ShlAssign<i8>>::shl_assign",
    "hash": "109713009650072312299500846064429597253"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u16 as ops::bit::ShlAssign<isize>>::shl_assign",
    "hash": "253112130907389083615677765139831725740"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u16 as ops::bit::ShlAssign<u128>>::shl_assign",
    "hash": "612447828583840436610398310341857587136"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u16 as ops::bit::ShlAssign<u32>>::shl_assign",
    "hash": "1013952304263165487311098424980538170498"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u16 as ops::bit::ShlAssign<u64>>::shl_assign",
    "hash": "1122984055125181539213721305062412680717"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u16 as ops::bit::ShlAssign<u8>>::shl_assign",
    "hash": "158742375869050510124352468199391193569"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u16 as ops::bit::ShlAssign<usize>>::shl_assign",
    "hash": "3803938892909682109784623515605622405"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u16 as ops::bit::ShlAssign>::shl_assign",
    "hash": "56275673718564273696484231190939685272"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u16 as ops::bit::Shr<i128>>::shr",
    "hash": "847317206451198360614320017276115616486"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u16 as ops::bit::Shr<i16>>::shr",
    "hash": "916260449698083443410594158701379820685"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u16 as ops::bit::Shr<i32>>::shr",
    "hash": "67472990855912439212773902503127889495"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u16 as ops::bit::Shr<i64>>::shr",
    "hash": "415192957626502827118286029751148023882"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u16 as ops::bit::Shr<i8>>::shr",
    "hash": "1072667847943323394213084003568220842541"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u16 as ops::bit::Shr<isize>>::shr",
    "hash": "85926974754168598625479074701509468247"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u16 as ops::bit::Shr<u128>>::shr",
    "hash": "107922163026461907622643163844699676150"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u16 as ops::bit::Shr<u32>>::shr",
    "hash": "485915223492594619514764989821076116849"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u16 as ops::bit::Shr<u64>>::shr",
    "hash": "11092255168326787065490666672631908883"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u16 as ops::bit::Shr<u8>>::shr",
    "hash": "1547561459444795339216932138971012945854"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u16 as ops::bit::Shr<usize>>::shr",
    "hash": "17925727503641095687826717515893544103"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u16 as ops::bit::Shr>::shr",
    "hash": "76970808753788104168506652157955678317"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u16 as ops::bit::ShrAssign<i128>>::shr_assign",
    "hash": "1710507000627251318217465679030598917644"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u16 as ops::bit::ShrAssign<i16>>::shr_assign",
    "hash": "464282397391528237411216701692161467288"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u16 as ops::bit::ShrAssign<i32>>::shr_assign",
    "hash": "1293416623542554936617896794202181489993"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u16 as ops::bit::ShrAssign<i64>>::shr_assign",
    "hash": "179604938547372205751081475871288037418"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u16 as ops::bit::ShrAssign<i8>>::shr_assign",
    "hash": "42244867104792319844988093148019317367"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u16 as ops::bit::ShrAssign<isize>>::shr_assign",
    "hash": "117389570474324209365120953252940910618"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u16 as ops::bit::ShrAssign<u128>>::shr_assign",
    "hash": "76313130287868757993611291085463300695"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u16 as ops::bit::ShrAssign<u32>>::shr_assign",
    "hash": "26808161971584114193425476363374287495"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u16 as ops::bit::ShrAssign<u64>>::shr_assign",
    "hash": "1610079363733730907615162535182860274050"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u16 as ops::bit::ShrAssign<u8>>::shr_assign",
    "hash": "113461780143352055122598279533395549933"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u16 as ops::bit::ShrAssign<usize>>::shr_assign",
    "hash": "18272134386115547414357290305965859397"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u16 as ops::bit::ShrAssign>::shr_assign",
    "hash": "102804061524072660142537794353836993328"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u32 as ops::bit::BitAnd>::bitand",
    "hash": "1673863980281935094918086807947924435950"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u32 as ops::bit::BitAndAssign>::bitand_assign",
    "hash": "142306829594416791405668441502308780360"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u32 as ops::bit::BitOr>::bitor",
    "hash": "1362525230579241954911680216599631237669"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u32 as ops::bit::BitOrAssign>::bitor_assign",
    "hash": "1139148345620831428749659470558028569"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u32 as ops::bit::BitXor>::bitxor",
    "hash": "162208078896197843325103381628613305541"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u32 as ops::bit::BitXorAssign>::bitxor_assign",
    "hash": "578707714099568739917051142064995408895"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u32 as ops::bit::Not>::not",
    "hash": "172880903987547070335734359297523817745"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u32 as ops::bit::Shl<i128>>::shl",
    "hash": "163705261862499430953598653880423335223"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u32 as ops::bit::Shl<i16>>::shl",
    "hash": "1102260420914714551311105865199798307623"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u32 as ops::bit::Shl<i32>>::shl",
    "hash": "14658350123571528263100094820429056192"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u32 as ops::bit::Shl<i64>>::shl",
    "hash": "381776224518002643512122732329189411596"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u32 as ops::bit::Shl<i8>>::shl",
    "hash": "1588446216658386288611057521989552313464"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u32 as ops::bit::Shl<isize>>::shl",
    "hash": "1090946927338323267715155563495299349901"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u32 as ops::bit::Shl<u128>>::shl",
    "hash": "8947519438040413384360350613695683109"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u32 as ops::bit::Shl<u16>>::shl",
    "hash": "286866382675375066014873368496479884381"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u32 as ops::bit::Shl<u64>>::shl",
    "hash": "7909490610206413864354209015194717573"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u32 as ops::bit::Shl<u8>>::shl",
    "hash": "66070526653236084614750203993133760938"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u32 as ops::bit::Shl<usize>>::shl",
    "hash": "1702223401998509807117309042873300208634"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u32 as ops::bit::Shl>::shl",
    "hash": "885492306666178193413077054527521590248"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u32 as ops::bit::ShlAssign<i128>>::shl_assign",
    "hash": "218810956684961630113862449150705416625"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u32 as ops::bit::ShlAssign<i16>>::shl_assign",
    "hash": "55499629409874667589637106196084782063"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u32 as ops::bit::ShlAssign<i32>>::shl_assign",
    "hash": "1382813912018031450316645779169515714281"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u32 as ops::bit::ShlAssign<i64>>::shl_assign",
    "hash": "6844341869731607847896563335664042930"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u32 as ops::bit::ShlAssign<i8>>::shl_assign",
    "hash": "130766201658280833194116820848475759214"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u32 as ops::bit::ShlAssign<isize>>::shl_assign",
    "hash": "164199954366957163696610442239128843299"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u32 as ops::bit::ShlAssign<u128>>::shl_assign",
    "hash": "42742387108541224211116046274951688012"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u32 as ops::bit::ShlAssign<u16>>::shl_assign",
    "hash": "1261336879352056997711017667141534454157"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u32 as ops::bit::ShlAssign<u64>>::shl_assign",
    "hash": "1361296407650342816717256880582955857537"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u32 as ops::bit::ShlAssign<u8>>::shl_assign",
    "hash": "201589564017521372411717175795657527759"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u32 as ops::bit::ShlAssign<usize>>::shl_assign",
    "hash": "1605030014331966010913476043509743416723"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u32 as ops::bit::ShlAssign>::shl_assign",
    "hash": "219933464340008248817578467515520077714"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u32 as ops::bit::Shr<i128>>::shr",
    "hash": "57373957725973100585366874644162041628"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u32 as ops::bit::Shr<i16>>::shr",
    "hash": "852549275396991398513602816091127487672"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u32 as ops::bit::Shr<i32>>::shr",
    "hash": "168882209805648853906718556383339671394"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u32 as ops::bit::Shr<i64>>::shr",
    "hash": "114151450368156592083078753702505281935"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u32 as ops::bit::Shr<i8>>::shr",
    "hash": "21197608907701827619662023498180176744"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u32 as ops::bit::Shr<isize>>::shr",
    "hash": "1114353026237248819611668801423260902028"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u32 as ops::bit::Shr<u128>>::shr",
    "hash": "22606564707713544165005318799459670979"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u32 as ops::bit::Shr<u16>>::shr",
    "hash": "71782951134938861159557261428222646596"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u32 as ops::bit::Shr<u64>>::shr",
    "hash": "78888514238505564456476879798635885301"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u32 as ops::bit::Shr<u8>>::shr",
    "hash": "143728921758734510162608205387835078441"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u32 as ops::bit::Shr<usize>>::shr",
    "hash": "72565183847859785915776875246161852946"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u32 as ops::bit::Shr>::shr",
    "hash": "364690327770845926311867381198481136970"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u32 as ops::bit::ShrAssign<i128>>::shr_assign",
    "hash": "265206472096378688811464819093910062855"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u32 as ops::bit::ShrAssign<i16>>::shr_assign",
    "hash": "120406625836379378058796161130064288929"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u32 as ops::bit::ShrAssign<i32>>::shr_assign",
    "hash": "543079161144690968712141468935017447690"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u32 as ops::bit::ShrAssign<i64>>::shr_assign",
    "hash": "137356413575533408421046968379415822062"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u32 as ops::bit::ShrAssign<i8>>::shr_assign",
    "hash": "22492555266214795268197165756263134310"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u32 as ops::bit::ShrAssign<isize>>::shr_assign",
    "hash": "238846472373105996315820829218373102598"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u32 as ops::bit::ShrAssign<u128>>::shr_assign",
    "hash": "1433588639731021201310072703606111492529"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u32 as ops::bit::ShrAssign<u16>>::shr_assign",
    "hash": "1794355800322051165816389096918864638419"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u32 as ops::bit::ShrAssign<u64>>::shr_assign",
    "hash": "23451861148311286067215987617742168866"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u32 as ops::bit::ShrAssign<u8>>::shr_assign",
    "hash": "781036565853835770816006593157324073092"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u32 as ops::bit::ShrAssign<usize>>::shr_assign",
    "hash": "1581789081223100552812132101437735419093"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u32 as ops::bit::ShrAssign>::shr_assign",
    "hash": "636711106934505501813840520987223402477"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u64 as ops::bit::BitAnd>::bitand",
    "hash": "1808562075960099839614038510097164394688"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u64 as ops::bit::BitAndAssign>::bitand_assign",
    "hash": "5979574480440437904684316671733277667"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u64 as ops::bit::BitOr>::bitor",
    "hash": "1135559399325654492218132048801409445489"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u64 as ops::bit::BitOrAssign>::bitor_assign",
    "hash": "93116706388311722292643752338495899418"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u64 as ops::bit::BitXor>::bitxor",
    "hash": "722130409549399173514301067504257831340"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u64 as ops::bit::BitXorAssign>::bitxor_assign",
    "hash": "16292966239304108680212321696710145693"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u64 as ops::bit::Not>::not",
    "hash": "133629259423682831247158747001292226448"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u64 as ops::bit::Shl<i128>>::shl",
    "hash": "10742574220998421618164493741967838356"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u64 as ops::bit::Shl<i16>>::shl",
    "hash": "1810680995021524971216217492950855755413"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u64 as ops::bit::Shl<i32>>::shl",
    "hash": "177076017682049724264467080469411679501"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u64 as ops::bit::Shl<i64>>::shl",
    "hash": "5358813538842901138456648486059178191"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u64 as ops::bit::Shl<i8>>::shl",
    "hash": "1181683109011583069315934210827444322396"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u64 as ops::bit::Shl<isize>>::shl",
    "hash": "1012888877497360212017794266500799651834"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u64 as ops::bit::Shl<u128>>::shl",
    "hash": "166839037157192174061613727125412486429"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u64 as ops::bit::Shl<u16>>::shl",
    "hash": "536820189421080754712620582316871731723"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u64 as ops::bit::Shl<u32>>::shl",
    "hash": "259973385383139492817527305682536745599"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u64 as ops::bit::Shl<u8>>::shl",
    "hash": "99852920796402937142214643074814974245"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u64 as ops::bit::Shl<usize>>::shl",
    "hash": "141775538301465149417667422620012041668"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u64 as ops::bit::Shl>::shl",
    "hash": "41960749435837042785043983981024960568"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u64 as ops::bit::ShlAssign<i128>>::shl_assign",
    "hash": "96326310862744023696124703171630059045"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u64 as ops::bit::ShlAssign<i16>>::shl_assign",
    "hash": "1022499256757808816217404588271470260969"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u64 as ops::bit::ShlAssign<i32>>::shl_assign",
    "hash": "541719514153374163117771795689359840199"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u64 as ops::bit::ShlAssign<i64>>::shl_assign",
    "hash": "36647015297322078648244062429472910308"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u64 as ops::bit::ShlAssign<i8>>::shl_assign",
    "hash": "169092947638381073414535368241586453818"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u64 as ops::bit::ShlAssign<isize>>::shl_assign",
    "hash": "16778022640344321393039402103940771965"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u64 as ops::bit::ShlAssign<u128>>::shl_assign",
    "hash": "880231602657740389814315252212361168416"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u64 as ops::bit::ShlAssign<u16>>::shl_assign",
    "hash": "57538796077081138176423928859925250270"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u64 as ops::bit::ShlAssign<u32>>::shl_assign",
    "hash": "399855870144741934617492186703231598118"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u64 as ops::bit::ShlAssign<u8>>::shl_assign",
    "hash": "434577352903522908611082001490974500485"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u64 as ops::bit::ShlAssign<usize>>::shl_assign",
    "hash": "804903437495049546312861832205175626026"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u64 as ops::bit::ShlAssign>::shl_assign",
    "hash": "748221215514892494510195499569996773109"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u64 as ops::bit::Shr<i128>>::shr",
    "hash": "797079848154364800310070961530742669837"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u64 as ops::bit::Shr<i16>>::shr",
    "hash": "797670007140260239112778945298424786489"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u64 as ops::bit::Shr<i32>>::shr",
    "hash": "824440218948136033814484786368757470593"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u64 as ops::bit::Shr<i64>>::shr",
    "hash": "1532732045950840639110649831760588508373"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u64 as ops::bit::Shr<i8>>::shr",
    "hash": "601168048160620772915506101840192520804"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u64 as ops::bit::Shr<isize>>::shr",
    "hash": "178838280612050467917366734706707007617"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u64 as ops::bit::Shr<u128>>::shr",
    "hash": "7867226877433661838288505582398719656"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u64 as ops::bit::Shr<u16>>::shr",
    "hash": "1710710212269797832010941849776964585966"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u64 as ops::bit::Shr<u32>>::shr",
    "hash": "74922203822057127656700924308741580812"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u64 as ops::bit::Shr<u8>>::shr",
    "hash": "34656551857064113291646292482060839714"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u64 as ops::bit::Shr<usize>>::shr",
    "hash": "11513606239542329399581391988681075078"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u64 as ops::bit::Shr>::shr",
    "hash": "1321124021882285062611644025059940489284"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u64 as ops::bit::ShrAssign<i128>>::shr_assign",
    "hash": "92697703381866720187405754226116935270"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u64 as ops::bit::ShrAssign<i16>>::shr_assign",
    "hash": "233885649068252243811399278606348730895"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u64 as ops::bit::ShrAssign<i32>>::shr_assign",
    "hash": "63508606017509845554721294486848460710"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u64 as ops::bit::ShrAssign<i64>>::shr_assign",
    "hash": "58050929176070166775917707775551867516"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u64 as ops::bit::ShrAssign<i8>>::shr_assign",
    "hash": "1240740044971777801913632054307021580771"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u64 as ops::bit::ShrAssign<isize>>::shr_assign",
    "hash": "16571689904232535752738239570861536966"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u64 as ops::bit::ShrAssign<u128>>::shr_assign",
    "hash": "1186775781334651035115679196608955393569"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u64 as ops::bit::ShrAssign<u16>>::shr_assign",
    "hash": "150473795165838453116951120386625814508"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u64 as ops::bit::ShrAssign<u32>>::shr_assign",
    "hash": "951667255078741195410747375718965760873"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u64 as ops::bit::ShrAssign<u8>>::shr_assign",
    "hash": "168604736978726548471257515182036441142"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u64 as ops::bit::ShrAssign<usize>>::shr_assign",
    "hash": "134851092662173306928213753976820176072"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u64 as ops::bit::ShrAssign>::shr_assign",
    "hash": "107255870892426289868753924860462801280"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u8 as ops::bit::BitAnd>::bitand",
    "hash": "163055073906346081982558935553484599094"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u8 as ops::bit::BitAndAssign>::bitand_assign",
    "hash": "1522427492371917782218325836342021640496"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u8 as ops::bit::BitOr>::bitor",
    "hash": "59695870353254306817249476797728848578"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u8 as ops::bit::BitOrAssign>::bitor_assign",
    "hash": "139814459349455595639552591847916859779"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u8 as ops::bit::BitXor>::bitxor",
    "hash": "289612724989721365516133400572838343886"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u8 as ops::bit::BitXorAssign>::bitxor_assign",
    "hash": "176236439661713818449535612280479753431"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u8 as ops::bit::Not>::not",
    "hash": "99837276899522761007121209212334173819"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u8 as ops::bit::Shl<i128>>::shl",
    "hash": "508667239327231633915387578354016325960"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u8 as ops::bit::Shl<i16>>::shl",
    "hash": "916041512222775024514460395009486318408"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u8 as ops::bit::Shl<i32>>::shl",
    "hash": "155970302844763628402121285289327002392"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u8 as ops::bit::Shl<i64>>::shl",
    "hash": "808934360180627873017254552452460267355"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u8 as ops::bit::Shl<i8>>::shl",
    "hash": "62057211226735332512679192507681922078"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u8 as ops::bit::Shl<isize>>::shl",
    "hash": "677367843074027646015523656261420592049"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u8 as ops::bit::Shl<u128>>::shl",
    "hash": "166255109411838319513926387049157415921"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u8 as ops::bit::Shl<u16>>::shl",
    "hash": "43967345708014526809974059569206849403"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u8 as ops::bit::Shl<u32>>::shl",
    "hash": "1403862266853799578611691161760208135067"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u8 as ops::bit::Shl<u64>>::shl",
    "hash": "182309797498385172963915336734868443334"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u8 as ops::bit::Shl<usize>>::shl",
    "hash": "480140163070194193115677616825326340672"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u8 as ops::bit::Shl>::shl",
    "hash": "116624148708669674639855630566004052147"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u8 as ops::bit::ShlAssign<i128>>::shl_assign",
    "hash": "11271401955760429538406934173652122000"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u8 as ops::bit::ShlAssign<i16>>::shl_assign",
    "hash": "1967066170555311172902577438438373586"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u8 as ops::bit::ShlAssign<i32>>::shl_assign",
    "hash": "97795971475833611536171633277841531212"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u8 as ops::bit::ShlAssign<i64>>::shl_assign",
    "hash": "167983383936283971011444513208329454821"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u8 as ops::bit::ShlAssign<i8>>::shl_assign",
    "hash": "19615257899991107717181453945251554361"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u8 as ops::bit::ShlAssign<isize>>::shl_assign",
    "hash": "88975326402766764279516329941158194023"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u8 as ops::bit::ShlAssign<u128>>::shl_assign",
    "hash": "162950429530235688712252269372311567955"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u8 as ops::bit::ShlAssign<u16>>::shl_assign",
    "hash": "25573692665680057105876398649788821308"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u8 as ops::bit::ShlAssign<u32>>::shl_assign",
    "hash": "315633406897775510116243366687859250766"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u8 as ops::bit::ShlAssign<u64>>::shl_assign",
    "hash": "31876747051981091357950187070812260511"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u8 as ops::bit::ShlAssign<usize>>::shl_assign",
    "hash": "138297592999071778325741884403528883445"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u8 as ops::bit::ShlAssign>::shl_assign",
    "hash": "1531456666341757137512469269875571476111"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u8 as ops::bit::Shr<i128>>::shr",
    "hash": "754197432425754410112401480428816434684"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u8 as ops::bit::Shr<i16>>::shr",
    "hash": "87526084686295297193720898425541111029"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u8 as ops::bit::Shr<i32>>::shr",
    "hash": "1824545850793668501711727416187395106257"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u8 as ops::bit::Shr<i64>>::shr",
    "hash": "354532329683367467211198523713108491855"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u8 as ops::bit::Shr<i8>>::shr",
    "hash": "9419146855454227805718331080452770349"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u8 as ops::bit::Shr<isize>>::shr",
    "hash": "1624867880203725226817828487864175243873"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u8 as ops::bit::Shr<u128>>::shr",
    "hash": "11454160539387169877769659196592548743"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u8 as ops::bit::Shr<u16>>::shr",
    "hash": "1556640042171270433314688230839185696488"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u8 as ops::bit::Shr<u32>>::shr",
    "hash": "81753001705480145513172101527899601807"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u8 as ops::bit::Shr<u64>>::shr",
    "hash": "17726076552561092217250030753296431577"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u8 as ops::bit::Shr<usize>>::shr",
    "hash": "26866794836986693268015963595740135946"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u8 as ops::bit::Shr>::shr",
    "hash": "836788694656239547112464699888023079113"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u8 as ops::bit::ShrAssign<i128>>::shr_assign",
    "hash": "1311843228785684573808852424257497906"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u8 as ops::bit::ShrAssign<i16>>::shr_assign",
    "hash": "364937954481968752015681319714456548393"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u8 as ops::bit::ShrAssign<i32>>::shr_assign",
    "hash": "166987764041380645782048529335165995757"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u8 as ops::bit::ShrAssign<i64>>::shr_assign",
    "hash": "68036368165516142543844703208850786807"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u8 as ops::bit::ShrAssign<i8>>::shr_assign",
    "hash": "17363132347426779319981909448914141018"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u8 as ops::bit::ShrAssign<isize>>::shr_assign",
    "hash": "179264596804976352131270333756314081054"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u8 as ops::bit::ShrAssign<u128>>::shr_assign",
    "hash": "33813079874299572728089705370012881865"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u8 as ops::bit::ShrAssign<u16>>::shr_assign",
    "hash": "11122122109670600636735097380991263406"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u8 as ops::bit::ShrAssign<u32>>::shr_assign",
    "hash": "135220035808320771312875625592081576708"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u8 as ops::bit::ShrAssign<u64>>::shr_assign",
    "hash": "1338317524739320523217785338509239830842"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u8 as ops::bit::ShrAssign<usize>>::shr_assign",
    "hash": "892605463085677581810911371553207703625"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u8 as ops::bit::ShrAssign>::shr_assign",
    "hash": "1073798466548681669113311383960904352501"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<usize as ops::bit::BitAnd>::bitand",
    "hash": "16771476367484425796694558168446815942"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<usize as ops::bit::BitAndAssign>::bitand_assign",
    "hash": "622081157005077260314759493815852452203"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<usize as ops::bit::BitOr>::bitor",
    "hash": "1275051197829266829712766665742757903591"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<usize as ops::bit::BitOrAssign>::bitor_assign",
    "hash": "1703766482140987019715402094983961130279"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<usize as ops::bit::BitXor>::bitxor",
    "hash": "119701704121378852088213748178095036811"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<usize as ops::bit::BitXorAssign>::bitxor_assign",
    "hash": "62264876436565555709202518453233799836"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<usize as ops::bit::Not>::not",
    "hash": "30973535777796014528485311002999565280"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<usize as ops::bit::Shl<i128>>::shl",
    "hash": "95500265818439564612581777440464755977"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<usize as ops::bit::Shl<i16>>::shl",
    "hash": "742941193128237660316037769766674984828"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<usize as ops::bit::Shl<i32>>::shl",
    "hash": "1615970477525004432516242022432635199216"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<usize as ops::bit::Shl<i64>>::shl",
    "hash": "59611195679488938916128027125139791052"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<usize as ops::bit::Shl<i8>>::shl",
    "hash": "177143839742673294728788100357317693915"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<usize as ops::bit::Shl<isize>>::shl",
    "hash": "99715262891713471154158783227161473159"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<usize as ops::bit::Shl<u128>>::shl",
    "hash": "250763384606542192814743560506138038410"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<usize as ops::bit::Shl<u16>>::shl",
    "hash": "106246458764779885921481007994418318733"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<usize as ops::bit::Shl<u32>>::shl",
    "hash": "1028395694229329958516090929334568287186"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<usize as ops::bit::Shl<u64>>::shl",
    "hash": "1047943483571934702513549839785730526760"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<usize as ops::bit::Shl<u8>>::shl",
    "hash": "1045939082103161190915320270118623077777"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<usize as ops::bit::Shl>::shl",
    "hash": "155993972515903955041553233337320267286"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<usize as ops::bit::ShlAssign<i128>>::shl_assign",
    "hash": "1798402194881908881514013292263900727821"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<usize as ops::bit::ShlAssign<i16>>::shl_assign",
    "hash": "763656029763328247114383701792110493317"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<usize as ops::bit::ShlAssign<i32>>::shl_assign",
    "hash": "791513032780282592516564941643373820903"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<usize as ops::bit::ShlAssign<i64>>::shl_assign",
    "hash": "602677369170419498318233987375284819718"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<usize as ops::bit::ShlAssign<i8>>::shl_assign",
    "hash": "1009325097354152099015471812228154680959"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<usize as ops::bit::ShlAssign<isize>>::shl_assign",
    "hash": "170875579274450377035829601805437319514"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<usize as ops::bit::ShlAssign<u128>>::shl_assign",
    "hash": "38762452606098379476904398359350750675"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<usize as ops::bit::ShlAssign<u16>>::shl_assign",
    "hash": "104304635410177571013494581739861066473"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<usize as ops::bit::ShlAssign<u32>>::shl_assign",
    "hash": "104133625539030463513839758016185806196"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<usize as ops::bit::ShlAssign<u64>>::shl_assign",
    "hash": "386275648075037302311568212055613367065"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<usize as ops::bit::ShlAssign<u8>>::shl_assign",
    "hash": "30293361389874947074637051168295788430"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<usize as ops::bit::ShlAssign>::shl_assign",
    "hash": "21972549607832508981574660158419350251"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<usize as ops::bit::Shr<i128>>::shr",
    "hash": "264101220513686804911847415151110636412"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<usize as ops::bit::Shr<i16>>::shr",
    "hash": "971221643427394612911384775283819999354"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<usize as ops::bit::Shr<i32>>::shr",
    "hash": "101155205964421464167338163848358930954"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<usize as ops::bit::Shr<i64>>::shr",
    "hash": "908682508045369252912303319007563102045"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<usize as ops::bit::Shr<i8>>::shr",
    "hash": "1668650657427923235312253167138902188502"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<usize as ops::bit::Shr<isize>>::shr",
    "hash": "1647436777064542551313081228223107843490"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<usize as ops::bit::Shr<u128>>::shr",
    "hash": "117726796073459770036093351975115627254"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<usize as ops::bit::Shr<u16>>::shr",
    "hash": "1700838212683236656576759255800517381"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<usize as ops::bit::Shr<u32>>::shr",
    "hash": "238818209493624794013391137017349333459"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<usize as ops::bit::Shr<u64>>::shr",
    "hash": "30758204697238112064420236563153216739"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<usize as ops::bit::Shr<u8>>::shr",
    "hash": "127574341745270831528413377486926428409"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<usize as ops::bit::Shr>::shr",
    "hash": "25420271673514437128898122906823010824"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<usize as ops::bit::ShrAssign<i128>>::shr_assign",
    "hash": "1830922351316872807016196223995710910484"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<usize as ops::bit::ShrAssign<i16>>::shr_assign",
    "hash": "79002835650453447117736181593637260619"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<usize as ops::bit::ShrAssign<i32>>::shr_assign",
    "hash": "875279787195796434612647828141516335313"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<usize as ops::bit::ShrAssign<i64>>::shr_assign",
    "hash": "27478393509062300006994688139224682862"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<usize as ops::bit::ShrAssign<i8>>::shr_assign",
    "hash": "369265034820782587012795877669193768034"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<usize as ops::bit::ShrAssign<isize>>::shr_assign",
    "hash": "62758935646192353173722640446958259706"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<usize as ops::bit::ShrAssign<u128>>::shr_assign",
    "hash": "131845519455823243369929893867164896326"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<usize as ops::bit::ShrAssign<u16>>::shr_assign",
    "hash": "365368886707563193912397097748007777042"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<usize as ops::bit::ShrAssign<u32>>::shr_assign",
    "hash": "74521995352015400644579075353776479604"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<usize as ops::bit::ShrAssign<u64>>::shr_assign",
    "hash": "133266491362746914119536632728346726752"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<usize as ops::bit::ShrAssign<u8>>::shr_assign",
    "hash": "35942176761691364015496357013195269719"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<usize as ops::bit::ShrAssign>::shr_assign",
    "hash": "69369011543899827447321548414184154640"
  },
  {
    "crate": "core",
    "file": "core/src/ops/index_range.rs",
    "func": "<ops::index_range::IndexRange as clone::Clone>::clone",
    "hash": "366974912920839386515801963218903644372"
  },
  {
    "crate": "core",
    "file": "core/src/ops/index_range.rs",
    "func": "<ops::index_range::IndexRange as cmp::Eq>::assert_receiver_is_total_eq",
    "hash": "14407072510473362121585929695509736529"
  },
  {
    "crate": "core",
    "file": "core/src/ops/index_range.rs",
    "func": "<ops::index_range::IndexRange as cmp::PartialEq>::eq",
    "hash": "105868480734732351109523174461050716086"
  },
  {
    "crate": "core",
    "file": "core/src/ops/index_range.rs",
    "func": "<ops::index_range::IndexRange as iter::traits::double_ended::DoubleEndedIterator>::advance_back_by",
    "hash": "134659546361337577875790172492877718078"
  },
  {
    "crate": "core",
    "file": "core/src/ops/index_range.rs",
    "func": "<ops::index_range::IndexRange as iter::traits::double_ended::DoubleEndedIterator>::next_back",
    "hash": "1267885145301878198216918499081884117363"
  },
  {
    "crate": "core",
    "file": "core/src/ops/index_range.rs",
    "func": "<ops::index_range::IndexRange as iter::traits::exact_size::ExactSizeIterator>::len",
    "hash": "880099753416866301016817688796490528363"
  },
  {
    "crate": "core",
    "file": "core/src/ops/index_range.rs",
    "func": "<ops::index_range::IndexRange as iter::traits::iterator::Iterator>::advance_by",
    "hash": "481835834712446476615556589325864506358"
  },
  {
    "crate": "core",
    "file": "core/src/ops/index_range.rs",
    "func": "<ops::index_range::IndexRange as iter::traits::iterator::Iterator>::next",
    "hash": "893655551047304721011068898142380368208"
  },
  {
    "crate": "core",
    "file": "core/src/ops/index_range.rs",
    "func": "<ops::index_range::IndexRange as iter::traits::iterator::Iterator>::size_hint",
    "hash": "1501910614844152319711596790706136212807"
  },
  {
    "crate": "core",
    "file": "core/src/ops/index_range.rs",
    "func": "ops::index_range::IndexRange::assume_range",
    "hash": "212928144464252219117278275833446446061"
  },
  {
    "crate": "core",
    "file": "core/src/ops/index_range.rs",
    "func": "ops::index_range::IndexRange::end",
    "hash": "884246074448727927914595282961940941192"
  },
  {
    "crate": "core",
    "file": "core/src/ops/index_range.rs",
    "func": "ops::index_range::IndexRange::len",
    "hash": "975615807404907599012293873143289411403"
  },
  {
    "crate": "core",
    "file": "core/src/ops/index_range.rs",
    "func": "ops::index_range::IndexRange::new_unchecked",
    "hash": "1754912251153572666416298790825990122972"
  },
  {
    "crate": "core",
    "file": "core/src/ops/index_range.rs",
    "func": "ops::index_range::IndexRange::next_back_unchecked",
    "hash": "80620046831485660211978590326092476920"
  },
  {
    "crate": "core",
    "file": "core/src/ops/index_range.rs",
    "func": "ops::index_range::IndexRange::next_unchecked",
    "hash": "76512364011266228718507200393334295670"
  },
  {
    "crate": "core",
    "file": "core/src/ops/index_range.rs",
    "func": "ops::index_range::IndexRange::start",
    "hash": "27547235193633795771352944920978011050"
  },
  {
    "crate": "core",
    "file": "core/src/ops/index_range.rs",
    "func": "ops::index_range::IndexRange::take_prefix",
    "hash": "84614053864276317792721518336362996588"
  },
  {
    "crate": "core",
    "file": "core/src/ops/index_range.rs",
    "func": "ops::index_range::IndexRange::take_suffix",
    "hash": "159736813722695483973676959462633832720"
  },
  {
    "crate": "core",
    "file": "core/src/ops/index_range.rs",
    "func": "ops::index_range::IndexRange::zero_to",
    "hash": "97912592448095803783191936410021855138"
  },
  {
    "crate": "core",
    "file": "core/src/ops/index_range.rs",
    "func": "ops::index_range::verify::proof_for_index_range_new_unchecked",
    "hash": "551150047287067492413662467301369738002",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ops/index_range.rs",
    "func": "ops::index_range::verify::proof_for_index_range_next_back_unchecked",
    "hash": "1385031154069257664213852294963663802118",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ops/index_range.rs",
    "func": "ops::index_range::verify::proof_for_index_range_next_unchecked",
    "hash": "12632256595053051593317991591571445096",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ops/range.rs",
    "func": "<ops::range::RangeFull as clone::Clone>::clone",
    "hash": "51752851975167651917599410809504188585"
  },
  {
    "crate": "core",
    "file": "core/src/ops/range.rs",
    "func": "<ops::range::RangeFull as cmp::Eq>::assert_receiver_is_total_eq",
    "hash": "69470044579129534834211368379959643874"
  },
  {
    "crate": "core",
    "file": "core/src/ops/range.rs",
    "func": "<ops::range::RangeFull as cmp::PartialEq>::eq",
    "hash": "523097387427171583516900264263599857045"
  },
  {
    "crate": "core",
    "file": "core/src/ops/range.rs",
    "func": "<ops::range::RangeFull as default::Default>::default",
    "hash": "81626075067298248429457633037843071814"
  },
  {
    "crate": "core",
    "file": "core/src/ops/range.rs",
    "func": "ops::range::RangeInclusive::<usize>::into_slice_range",
    "hash": "146790947205902300248608006721818154078"
  },
  {
    "crate": "core",
    "file": "core/src/option.rs",
    "func": "option::unwrap_failed",
    "hash": "1262555611173615611410428101371636009066"
  },
  {
    "crate": "core",
    "file": "core/src/option.rs",
    "func": "option::verify::verify_as_slice",
    "hash": "430379002772112529314967339036948056300",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/panic.rs",
    "func": "cell::panic_already_borrowed::do_panic",
    "hash": "1049497057833843789916744461017024609391"
  },
  {
    "crate": "core",
    "file": "core/src/panic.rs",
    "func": "cell::panic_already_mutably_borrowed::do_panic",
    "hash": "952521175458755879218258534882994083967"
  },
  {
    "crate": "core",
    "file": "core/src/panic.rs",
    "func": "char::methods::encode_utf16_raw::do_panic",
    "hash": "8975012605718101857438359177226720979"
  },
  {
    "crate": "core",
    "file": "core/src/panic.rs",
    "func": "char::methods::encode_utf8_raw::do_panic",
    "hash": "180216954894167382576912062485815426"
  },
  {
    "crate": "core",
    "file": "core/src/panic.rs",
    "func": "f128::<impl f128>::clamp::do_panic",
    "hash": "126948958260709500298176598874528725818"
  },
  {
    "crate": "core",
    "file": "core/src/panic.rs",
    "func": "f16::<impl f16>::clamp::do_panic",
    "hash": "43041091010006364068938198034263465439"
  },
  {
    "crate": "core",
    "file": "core/src/panic.rs",
    "func": "f32::<impl f32>::clamp::do_panic",
    "hash": "1354560231371167788413056028412277778317"
  },
  {
    "crate": "core",
    "file": "core/src/panic.rs",
    "func": "f64::<impl f64>::clamp::do_panic",
    "hash": "775000488414708218816865459528333163490"
  },
  {
    "crate": "core",
    "file": "core/src/panic.rs",
    "func": "num::from_ascii_radix_panic::do_panic",
    "hash": "572414303208224942311345793084542991252"
  },
  {
    "crate": "core",
    "file": "core/src/panic.rs",
    "func": "slice::<impl [T]>::copy_from_slice::len_mismatch_fail::do_panic",
    "hash": "319659508531560220416307968136859216930"
  },
  {
    "crate": "core",
    "file": "core/src/panic.rs",
    "func": "slice::index::slice_end_index_len_fail::do_panic",
    "hash": "180216954894167382576912062485815426"
  },
  {
    "crate": "core",
    "file": "core/src/panic.rs",
    "func": "slice::index::slice_index_order_fail::do_panic",
    "hash": "180216954894167382576912062485815426"
  },
  {
    "crate": "core",
    "file": "core/src/panic.rs",
    "func": "slice::index::slice_start_index_len_fail::do_panic",
    "hash": "180216954894167382576912062485815426"
  },
  {
    "crate": "core",
    "file": "core/src/panic/location.rs",
    "func": "panic::location::Location::<'_>::caller",
    "hash": "1113032932815665948217565294476098756403"
  },
  {
    "crate": "core",
    "file": "core/src/panicking.rs",
    "func": "panicking::panic_bounds_check",
    "hash": "8497191514506454723681928682532674346"
  },
  {
    "crate": "core",
    "file": "core/src/panicking.rs",
    "func": "panicking::panic_cannot_unwind",
    "hash": "242181715916107705416384707665609293091"
  },
  {
    "crate": "core",
    "file": "core/src/panicking.rs",
    "func": "panicking::panic_const::panic_const_add_overflow",
    "hash": "1072673519469559488813453527349548976770"
  },
  {
    "crate": "core",
    "file": "core/src/panicking.rs",
    "func": "panicking::panic_const::panic_const_async_fn_resumed",
    "hash": "349657222904462149212616592995763522873"
  },
  {
    "crate": "core",
    "file": "core/src/panicking.rs",
    "func": "panicking::panic_const::panic_const_async_fn_resumed_drop",
    "hash": "1335467998759013293416653527462738356104"
  },
  {
    "crate": "core",
    "file": "core/src/panicking.rs",
    "func": "panicking::panic_const::panic_const_async_fn_resumed_panic",
    "hash": "6671996234787244407531471198066377601"
  },
  {
    "crate": "core",
    "file": "core/src/panicking.rs",
    "func": "panicking::panic_const::panic_const_async_gen_fn_resumed",
    "hash": "830335467169936691315054046533870997056"
  },
  {
    "crate": "core",
    "file": "core/src/panicking.rs",
    "func": "panicking::panic_const::panic_const_async_gen_fn_resumed_drop",
    "hash": "1088979907211123224115851570164170819682"
  },
  {
    "crate": "core",
    "file": "core/src/panicking.rs",
    "func": "panicking::panic_const::panic_const_async_gen_fn_resumed_panic",
    "hash": "1805829311917702760813547210256212675351"
  },
  {
    "crate": "core",
    "file": "core/src/panicking.rs",
    "func": "panicking::panic_const::panic_const_coroutine_resumed",
    "hash": "5007351754840108096785729122042516196"
  },
  {
    "crate": "core",
    "file": "core/src/panicking.rs",
    "func": "panicking::panic_const::panic_const_coroutine_resumed_drop",
    "hash": "73430812404311502652626868957646901800"
  },
  {
    "crate": "core",
    "file": "core/src/panicking.rs",
    "func": "panicking::panic_const::panic_const_coroutine_resumed_panic",
    "hash": "1143565852981359394518134118974303400454"
  },
  {
    "crate": "core",
    "file": "core/src/panicking.rs",
    "func": "panicking::panic_const::panic_const_div_by_zero",
    "hash": "159758387025722397652298960757191525578"
  },
  {
    "crate": "core",
    "file": "core/src/panicking.rs",
    "func": "panicking::panic_const::panic_const_div_overflow",
    "hash": "150205495392768814893023078285399970790"
  },
  {
    "crate": "core",
    "file": "core/src/panicking.rs",
    "func": "panicking::panic_const::panic_const_gen_fn_none",
    "hash": "280580742645108837215018195653929072234"
  },
  {
    "crate": "core",
    "file": "core/src/panicking.rs",
    "func": "panicking::panic_const::panic_const_gen_fn_none_drop",
    "hash": "158599826685426328796537051658922303818"
  },
  {
    "crate": "core",
    "file": "core/src/panicking.rs",
    "func": "panicking::panic_const::panic_const_gen_fn_none_panic",
    "hash": "129292076861084820858170453651868860807"
  },
  {
    "crate": "core",
    "file": "core/src/panicking.rs",
    "func": "panicking::panic_const::panic_const_mul_overflow",
    "hash": "127306522968094690215901836632143286926"
  },
  {
    "crate": "core",
    "file": "core/src/panicking.rs",
    "func": "panicking::panic_const::panic_const_neg_overflow",
    "hash": "91143579459581669531697410698845229475"
  },
  {
    "crate": "core",
    "file": "core/src/panicking.rs",
    "func": "panicking::panic_const::panic_const_rem_by_zero",
    "hash": "25276774499438944304038182962141356458"
  },
  {
    "crate": "core",
    "file": "core/src/panicking.rs",
    "func": "panicking::panic_const::panic_const_rem_overflow",
    "hash": "1112274134915535276716097379666871971188"
  },
  {
    "crate": "core",
    "file": "core/src/panicking.rs",
    "func": "panicking::panic_const::panic_const_shl_overflow",
    "hash": "1023896071097414870617009867557788509225"
  },
  {
    "crate": "core",
    "file": "core/src/panicking.rs",
    "func": "panicking::panic_const::panic_const_shr_overflow",
    "hash": "176071303351409588245568559702828443159"
  },
  {
    "crate": "core",
    "file": "core/src/panicking.rs",
    "func": "panicking::panic_const::panic_const_sub_overflow",
    "hash": "55567374554354043818187702774263751884"
  },
  {
    "crate": "core",
    "file": "core/src/panicking.rs",
    "func": "panicking::panic_in_cleanup",
    "hash": "856776841529391899418036583055339103886"
  },
  {
    "crate": "core",
    "file": "core/src/panicking.rs",
    "func": "panicking::panic_invalid_enum_construction",
    "hash": "136959990446964531444832127221981190123"
  },
  {
    "crate": "core",
    "file": "core/src/panicking.rs",
    "func": "panicking::panic_misaligned_pointer_dereference",
    "hash": "725159451481939520650311989909591014"
  },
  {
    "crate": "core",
    "file": "core/src/panicking.rs",
    "func": "panicking::panic_null_pointer_dereference",
    "hash": "167632833524046317173183025505928308152"
  },
  {
    "crate": "core",
    "file": "core/src/pat.rs",
    "func": "<char as pat::RangePattern>::sub_one",
    "hash": "115708337342733172925348083911893950817"
  },
  {
    "crate": "core",
    "file": "core/src/pat.rs",
    "func": "<i128 as pat::RangePattern>::sub_one",
    "hash": "35443145355048187141606406290236880523"
  },
  {
    "crate": "core",
    "file": "core/src/pat.rs",
    "func": "<i16 as pat::RangePattern>::sub_one",
    "hash": "147496192112119466464945045273298703910"
  },
  {
    "crate": "core",
    "file": "core/src/pat.rs",
    "func": "<i32 as pat::RangePattern>::sub_one",
    "hash": "88684340216633266006476217255056932589"
  },
  {
    "crate": "core",
    "file": "core/src/pat.rs",
    "func": "<i64 as pat::RangePattern>::sub_one",
    "hash": "131143027103405189733528661397160738205"
  },
  {
    "crate": "core",
    "file": "core/src/pat.rs",
    "func": "<i8 as pat::RangePattern>::sub_one",
    "hash": "1559725785742126388210187752660534441542"
  },
  {
    "crate": "core",
    "file": "core/src/pat.rs",
    "func": "<isize as pat::RangePattern>::sub_one",
    "hash": "1459497863512638108711713962246043180283"
  },
  {
    "crate": "core",
    "file": "core/src/pat.rs",
    "func": "<u128 as pat::RangePattern>::sub_one",
    "hash": "1174064056308979243916919387253388909874"
  },
  {
    "crate": "core",
    "file": "core/src/pat.rs",
    "func": "<u16 as pat::RangePattern>::sub_one",
    "hash": "67443329437686950833071835114611246036"
  },
  {
    "crate": "core",
    "file": "core/src/pat.rs",
    "func": "<u32 as pat::RangePattern>::sub_one",
    "hash": "778258577550532590715204275380386726069"
  },
  {
    "crate": "core",
    "file": "core/src/pat.rs",
    "func": "<u64 as pat::RangePattern>::sub_one",
    "hash": "21251092605228176997465034908779459769"
  },
  {
    "crate": "core",
    "file": "core/src/pat.rs",
    "func": "<u8 as pat::RangePattern>::sub_one",
    "hash": "59084301417327950011910912586741697929"
  },
  {
    "crate": "core",
    "file": "core/src/pat.rs",
    "func": "<usize as pat::RangePattern>::sub_one",
    "hash": "109580409503590869262420341014544771648"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/alignment.rs",
    "func": "<ptr::alignment::Alignment as clone::Clone>::clone",
    "hash": "1175343087208465347513466616613459906017"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/alignment.rs",
    "func": "<ptr::alignment::Alignment as cmp::Eq>::assert_receiver_is_total_eq",
    "hash": "1575422666862478312614030415211857333506"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/alignment.rs",
    "func": "<ptr::alignment::Alignment as cmp::Ord>::cmp",
    "hash": "1546445554760545130515472529981863323764"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/alignment.rs",
    "func": "<ptr::alignment::Alignment as cmp::PartialEq>::eq",
    "hash": "1687043565489565286816393188563214506807"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/alignment.rs",
    "func": "<ptr::alignment::Alignment as cmp::PartialOrd>::partial_cmp",
    "hash": "13493593393868133915439552907779913455"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/alignment.rs",
    "func": "<ptr::alignment::Alignment as convert::TryFrom<num::nonzero::NonZero<usize>>>::try_from",
    "hash": "1491069643294775227111452795479288230671"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/alignment.rs",
    "func": "<ptr::alignment::Alignment as convert::TryFrom<usize>>::try_from",
    "hash": "1058961048894943792611729516665420107470"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/alignment.rs",
    "func": "<ptr::alignment::Alignment as default::Default>::default",
    "hash": "1413009431915819452017776810764645880771"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/alignment.rs",
    "func": "<ptr::alignment::Alignment as ub_checks::Invariant>::is_safe",
    "hash": "83438115225726066288315406574730580257"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/alignment.rs",
    "func": "<ptr::alignment::AlignmentEnum as clone::Clone>::clone",
    "hash": "12559740367480838507886035148901052375"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/alignment.rs",
    "func": "<ptr::alignment::AlignmentEnum as cmp::Eq>::assert_receiver_is_total_eq",
    "hash": "964894992477855073313140429528301903390"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/alignment.rs",
    "func": "<ptr::alignment::AlignmentEnum as cmp::PartialEq>::eq",
    "hash": "71611202058661207025593126105578681869"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/alignment.rs",
    "func": "ptr::alignment::<impl convert::From<ptr::alignment::Alignment> for num::nonzero::NonZero<usize>>::from",
    "hash": "5988075202567892016019814834317464944"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/alignment.rs",
    "func": "ptr::alignment::<impl convert::From<ptr::alignment::Alignment> for usize>::from",
    "hash": "58511434068774707116799979293247780545"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/alignment.rs",
    "func": "ptr::alignment::Alignment::as_nonzero",
    "hash": "201181288689639124415825169679319142024"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/alignment.rs",
    "func": "ptr::alignment::Alignment::as_usize",
    "hash": "112152844438854238887994758767167519478"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/alignment.rs",
    "func": "ptr::alignment::Alignment::log2",
    "hash": "1247245789179189799114686640882277654445"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/alignment.rs",
    "func": "ptr::alignment::Alignment::mask",
    "hash": "60830744700106158527193758575164918312"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/alignment.rs",
    "func": "ptr::alignment::Alignment::max",
    "hash": "170995228381040670003312121577996373865"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/alignment.rs",
    "func": "ptr::alignment::Alignment::new",
    "hash": "1041060259516224786015110088074935534548"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/alignment.rs",
    "func": "ptr::alignment::Alignment::new_unchecked",
    "hash": "891910345372795036811427148890481758190"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/alignment.rs",
    "func": "ptr::alignment::_alignment_can_be_structurally_matched",
    "hash": "11571527646908301998114980104259248248"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_add_i128",
    "hash": "1213342826688237929211574949128720528600",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_add_i16",
    "hash": "1458796934233097190216888834160710938478",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_add_i32",
    "hash": "410576890666883415511852766897749362605",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_add_i64",
    "hash": "140050941667760732788723097912258857730",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_add_i8",
    "hash": "96302991012018786129698764587803658082",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_add_isize",
    "hash": "1523853552774964539412717726860251034620",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_add_slice_i128",
    "hash": "1402910028072180346918179437616313713560",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_add_slice_i16",
    "hash": "70470175640751013712463824108638192900",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_add_slice_i32",
    "hash": "118590095852255021708366780697796370822",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_add_slice_i64",
    "hash": "126094909268576269516034865879272643823",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_add_slice_i8",
    "hash": "52827627699825847973799471796035882667",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_add_slice_isize",
    "hash": "168343517228592022334671869570462954127",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_add_slice_tuple_1",
    "hash": "127366000488322751344660203052671583621",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_add_slice_tuple_2",
    "hash": "1319121225427821824712378188145030839783",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_add_slice_tuple_3",
    "hash": "77199797467245561358292234307001248273",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_add_slice_tuple_4",
    "hash": "1381703928550851567516043755175186863219",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_add_slice_u128",
    "hash": "986776429420866847815596293253377094358",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_add_slice_u16",
    "hash": "904108043981122887616590767220707660727",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_add_slice_u32",
    "hash": "1098264461772265096816387645878745463409",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_add_slice_u64",
    "hash": "1284370422827339921517301510719498392914",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_add_slice_u8",
    "hash": "1682097787202170822916314138273838255047",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_add_slice_usize",
    "hash": "1685097602791535872516737896409276679488",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_add_tuple_1",
    "hash": "242891984346805037910323869112658990341",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_add_tuple_2",
    "hash": "667448081393460966716450950592788651955",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_add_tuple_3",
    "hash": "876750955724321475217703288023920594001",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_add_tuple_4",
    "hash": "758351255510580706312918371532788658165",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_add_u128",
    "hash": "117473652421130397443256252887052251096",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_add_u16",
    "hash": "669787810700218723016480489298082681118",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_add_u32",
    "hash": "502698008943889803812638246218729545477",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_add_u64",
    "hash": "1576474704248845985716534339514199666826",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_add_u8",
    "hash": "15100490394570761541911802349103108690",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_add_unit",
    "hash": "83360934208681386801803860561440645797",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_add_usize",
    "hash": "108418632518756385273794231740336393580",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_byte_offset_from_fixed_offset",
    "hash": "1694197816340893619214757009110553628021",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_offset_from_i128",
    "hash": "1631652615612607679114204591104193861355",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_offset_from_i128_arr",
    "hash": "1788901582638990527417598557992493718710",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_offset_from_i16",
    "hash": "112540067630150832908216137844224969462",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_offset_from_i16_arr",
    "hash": "89549553890250243533610691306918197613",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_offset_from_i32",
    "hash": "180265009216801858462470284388999552154",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_offset_from_i32_arr",
    "hash": "20311978559649972979968088630602881309",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_offset_from_i64",
    "hash": "1177091454337164928714470349522694219606",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_offset_from_i64_arr",
    "hash": "141432842948492764246786063633686436654",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_offset_from_i8",
    "hash": "1329645592418932791812544347125974526835",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_offset_from_i8_arr",
    "hash": "131759017252872185027265019159700236900",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_offset_from_isize",
    "hash": "120795486089657547638829257441223205477",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_offset_from_isize_arr",
    "hash": "1128434709808610158216239577048111555753",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_offset_from_tuple_1",
    "hash": "69285262448496825569841887563776377956",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_offset_from_tuple_1_arr",
    "hash": "1532126290436856007911792300088997274797",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_offset_from_tuple_2",
    "hash": "16860398291686918288365710528351036371",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_offset_from_tuple_2_arr",
    "hash": "334728448462353076010789454585682666788",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_offset_from_tuple_3",
    "hash": "1023949317761684342710799361908200711977",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_offset_from_tuple_3_arr",
    "hash": "483598900786904586618266089893256701960",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_offset_from_tuple_4",
    "hash": "1311092631108012143308205182698561174",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_offset_from_tuple_4_arr",
    "hash": "1327363934996466035116538090906822599040",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_offset_from_u128",
    "hash": "65270735883005488756499336137239379379",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_offset_from_u128_arr",
    "hash": "150041387449860075948429261876591009936",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_offset_from_u16",
    "hash": "1428141602510735508315266656073408170819",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_offset_from_u16_arr",
    "hash": "156451660456986974845833958367845888418",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_offset_from_u32",
    "hash": "862163018581400003913260781164517581892",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_offset_from_u32_arr",
    "hash": "1430874317169287462814091881073023294633",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_offset_from_u64",
    "hash": "106773943943282001504616738219997571288",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_offset_from_u64_arr",
    "hash": "114876429511040244997685800517908079617",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_offset_from_u8",
    "hash": "1334439967094524757111603795977201024049",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_offset_from_u8_arr",
    "hash": "622046705611784789117404925827921946792",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_offset_from_unit",
    "hash": "115554606131167408651270916464148298193",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_offset_from_usize",
    "hash": "723745286633898604118353928078125881959",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_offset_from_usize_arr",
    "hash": "1797271473191118985016425067460034820049",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_offset_i128",
    "hash": "128789971466267457038575236355636620244",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_offset_i16",
    "hash": "173714511995034014317867709572067858418",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_offset_i32",
    "hash": "11479703768708920852524060744181853588",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_offset_i64",
    "hash": "98236194865066555528718838569043344513",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_offset_i8",
    "hash": "95082286323843525092966067069828464842",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_offset_isize",
    "hash": "215679977728623591713534576311409378574",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_offset_slice_i128",
    "hash": "72212576887851388432663195814382266009",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_offset_slice_i16",
    "hash": "464824560648134698217882839225785326767",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_offset_slice_i32",
    "hash": "88677079522537323649036425477627534542",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_offset_slice_i64",
    "hash": "1736988203817763850714297227902011004038",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_offset_slice_i8",
    "hash": "6043125956252363861050705894615716349",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_offset_slice_isize",
    "hash": "1387609317939267349110969041934964742292",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_offset_slice_tuple_1",
    "hash": "94749678203680627439379180877936453729",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_offset_slice_tuple_2",
    "hash": "52024610341983568646725720430361954770",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_offset_slice_tuple_3",
    "hash": "859547770185538169916993265273974172045",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_offset_slice_tuple_4",
    "hash": "884601873349508130338685635476115917",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_offset_slice_u128",
    "hash": "18270421749556344887420940608000590193",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_offset_slice_u16",
    "hash": "111175242530652087836212630621815570271",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_offset_slice_u32",
    "hash": "6386002406199048830633575895265095158",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_offset_slice_u64",
    "hash": "65189505950803723745965819649826104498",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_offset_slice_u8",
    "hash": "2933551014455285082676602697949851177",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_offset_slice_usize",
    "hash": "44775929436354872404076207939112406741",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_offset_tuple_1",
    "hash": "626553208734097670913942434062874173131",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_offset_tuple_2",
    "hash": "155829807611827595849544032190440362229",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_offset_tuple_3",
    "hash": "376464656455585681013843017216758470213",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_offset_tuple_4",
    "hash": "1069981328204353499613314677319428663428",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_offset_u128",
    "hash": "1516296666379706488415402223296589408501",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_offset_u16",
    "hash": "8050344314975118057475823484959262957",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_offset_u32",
    "hash": "1432161759546811433710326745973139570880",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_offset_u64",
    "hash": "1033804201568777516216192699771604810620",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_offset_u8",
    "hash": "11648460128240767975954141673642147753",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_offset_unit",
    "hash": "161425077911946758035247163117783519060",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_offset_usize",
    "hash": "1489142391610982959415405558686211860639",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_sub_i128",
    "hash": "120831664563470706877242877156300033256",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_sub_i16",
    "hash": "104377939359876309304094707892075198733",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_sub_i32",
    "hash": "556634181016042679617906908743092077307",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_sub_i64",
    "hash": "151072888756644545479525837312955885598",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_sub_i8",
    "hash": "170374459836589570011946445495394642300",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_sub_isize",
    "hash": "4027093993276180603579775678180869723",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_sub_slice_i128",
    "hash": "98046256291987323498096368371547391558",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_sub_slice_i16",
    "hash": "19048613190386812594948329047835454452",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_sub_slice_i32",
    "hash": "1225615871139911625516328455382311883044",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_sub_slice_i64",
    "hash": "367616457351204443617239046693441069530",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_sub_slice_i8",
    "hash": "182606211133153101192384672984380050845",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_sub_slice_isize",
    "hash": "14104992679405589071242694220808299171",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_sub_slice_tuple_1",
    "hash": "61029786461651686473834663740583816953",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_sub_slice_tuple_2",
    "hash": "120945681718452089316593650870278448313",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_sub_slice_tuple_3",
    "hash": "706947810145318755213606803554311550056",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_sub_slice_tuple_4",
    "hash": "5335684969308389807256671265981304390",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_sub_slice_u128",
    "hash": "770017643696716575017577171436676602297",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_sub_slice_u16",
    "hash": "193342702254952748495938457329111357",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_sub_slice_u32",
    "hash": "79455727218247202669452106110281836397",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_sub_slice_u64",
    "hash": "43328474655982153111100486452934691612",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_sub_slice_u8",
    "hash": "27942989568648181085296769615114734965",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_sub_slice_usize",
    "hash": "1567661271984278632517367125207815877140",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_sub_tuple_1",
    "hash": "581302557595319527615612539665423412756",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_sub_tuple_2",
    "hash": "133229242062885721289455499954070626313",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_sub_tuple_3",
    "hash": "347559468001171388118417613075681718277",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_sub_tuple_4",
    "hash": "31979735892523543825674989977679789507",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_sub_u128",
    "hash": "7286118263000243999770999774063844439",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_sub_u16",
    "hash": "9656502623034735941925840082941130759",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_sub_u32",
    "hash": "101303852560665707847433257327739652447",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_sub_u64",
    "hash": "178099432205230928567154688600533466193",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_sub_u8",
    "hash": "143878974034274494736969677446255082457",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_sub_unit",
    "hash": "205931659909415899511211077298998020578",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_sub_usize",
    "hash": "598039056165392533910179197131136639099",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mod.rs",
    "func": "ptr::align_offset::mod_inv",
    "hash": "108552149900633290919250115311635650035"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mod.rs",
    "func": "ptr::verify::check_align_offset_4096",
    "hash": "3436917615190781361818514944578618664",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mod.rs",
    "func": "ptr::verify::check_align_offset_5",
    "hash": "173997332440598694696428515788283223791",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mod.rs",
    "func": "ptr::verify::check_align_offset_u128",
    "hash": "416095584183403467615884563244625492911",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mod.rs",
    "func": "ptr::verify::check_align_offset_u16",
    "hash": "3025955029189947652083930740852642460",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mod.rs",
    "func": "ptr::verify::check_align_offset_u32",
    "hash": "293350489147030149317579601582070206592",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mod.rs",
    "func": "ptr::verify::check_align_offset_u64",
    "hash": "167691306374022000771310026894646609676",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mod.rs",
    "func": "ptr::verify::check_align_offset_u8",
    "hash": "1372651441477284094916608502837844623864",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mod.rs",
    "func": "ptr::verify::check_align_offset_zst",
    "hash": "459625004001771040614812534938888483999",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mod.rs",
    "func": "ptr::verify::check_read_u128",
    "hash": "1790448107681742133018285993628898795595",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_add_i128",
    "hash": "703849342755983485814189358081536420264",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_add_i16",
    "hash": "1136333633387499288216839187333516527378",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_add_i32",
    "hash": "125740273980100134338280880246376935142",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_add_i64",
    "hash": "1493681598601701454810699180415859539085",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_add_i8",
    "hash": "109074127633984231023561450447596823334",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_add_isize",
    "hash": "45110171559515607312769855673552042075",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_add_slice_i128",
    "hash": "128382409195708795429193659259247511038",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_add_slice_i16",
    "hash": "1058472764116490078715193981043999665391",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_add_slice_i32",
    "hash": "1193823503878508301610323060482352722442",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_add_slice_i64",
    "hash": "129888838222742044579518936006886627006",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_add_slice_i8",
    "hash": "12582997408242364299364466583721960925",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_add_slice_isize",
    "hash": "172997294384629432884047098379082917357",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_add_slice_tuple_1",
    "hash": "406177517356560692411903224328531342825",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_add_slice_tuple_2",
    "hash": "1624149324369071598610521733670022976651",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_add_slice_tuple_3",
    "hash": "877742826240068322915065565188060430496",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_add_slice_tuple_4",
    "hash": "1499721784006446112817829366102149232683",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_add_slice_u128",
    "hash": "147718877305531902149432763910829491055",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_add_slice_u16",
    "hash": "95266930322549114841260440782876939155",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_add_slice_u32",
    "hash": "248313518541833573913469730353103015971",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_add_slice_u64",
    "hash": "32448017724478062261131660977282486282",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_add_slice_u8",
    "hash": "332844261119969371917658364851984007625",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_add_slice_usize",
    "hash": "1133774002514490315814584352891497233855",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_add_tuple_1",
    "hash": "1680718369098377604889113894142744322",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_add_tuple_2",
    "hash": "40545372507968542194987898134065311811",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_add_tuple_3",
    "hash": "1755189756810335644914060248199225366028",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_add_tuple_4",
    "hash": "161319233425888168698363581171646337918",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_add_u128",
    "hash": "96608070197661280471174187672760674989",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_add_u16",
    "hash": "152435846218182740368828925933406007666",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_add_u32",
    "hash": "156137162051816022851403078532355457087",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_add_u64",
    "hash": "4691608609416888410030262865028263597",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_add_unit",
    "hash": "62347268751462199898709979276736431454",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_add_usize",
    "hash": "108641941435363707751895027428092808563",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_byte_offset_from_fixed_offset",
    "hash": "165820273853689023653949580055648337714",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_offset_from_i128",
    "hash": "64631013777665028019988490774122067749",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_offset_from_i128_array",
    "hash": "167108686039876100426775600017449559548",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_offset_from_i16",
    "hash": "821291484707226244515551023865463086061",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_offset_from_i16_array",
    "hash": "1344190577814798050012503785091462312524",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_offset_from_i32",
    "hash": "159721434021844237446076972556011354228",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_offset_from_i32_array",
    "hash": "974933222686540871533593792326341537",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_offset_from_i64",
    "hash": "1619760754880781824116068886221337898659",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_offset_from_i64_array",
    "hash": "58101953588589538983919102258752631631",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_offset_from_i8",
    "hash": "68393990861338695147155396973516331560",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_offset_from_i8_array",
    "hash": "141521801687592790716319195977121031658",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_offset_from_isize",
    "hash": "1824181813784636696314818650186271756922",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_offset_from_isize_array",
    "hash": "1771816862682537640018119491143644234909",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_offset_from_tuple_1",
    "hash": "1622879484306021267617427003796012743533",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_offset_from_tuple_1_array",
    "hash": "75767081832400085999344567653909809136",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_offset_from_tuple_2",
    "hash": "892843965041362245918088295000477335939",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_offset_from_tuple_2_array",
    "hash": "1587705615932075967311874796303978892443",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_offset_from_tuple_3",
    "hash": "1833621394435127477713879682545735001293",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_offset_from_tuple_3_array",
    "hash": "8978646722207303585489754922314706804",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_offset_from_tuple_4",
    "hash": "1691680483871961295513456927899053691576",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_offset_from_tuple_4_array",
    "hash": "124049613522898487589637630497804562781",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_offset_from_u128",
    "hash": "123620872907249175547999166229139195285",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_offset_from_u128_array",
    "hash": "164827958953032548072436492686728718880",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_offset_from_u16",
    "hash": "778396827772252435816231186982287601092",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_offset_from_u16_array",
    "hash": "1648006034821817525610186780016541180539",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_offset_from_u32",
    "hash": "473255806574616090113536180890794801197",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_offset_from_u32_array",
    "hash": "12660782163790952118508752786018446819",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_offset_from_u64",
    "hash": "5305009504779048284032190088227843288",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_offset_from_u64_array",
    "hash": "1408791959000717394016033646364215914540",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_offset_from_u8",
    "hash": "172612407383547383093576535798911368619",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_offset_from_u8_array",
    "hash": "558286342214447179913263059145703478564",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_offset_from_unit",
    "hash": "565957972217767163114685095598082032803",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_offset_from_usize",
    "hash": "213462984940615434518064493992140327170",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_offset_from_usize_array",
    "hash": "108106753720542356821039934562417942875",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_offset_i128",
    "hash": "56478662640745563729207165908845197784",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_offset_i16",
    "hash": "69881783918469492374099063770173091431",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_offset_i32",
    "hash": "56122620809578603981625103886953162076",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_offset_i64",
    "hash": "412588240870256126014080237190516592785",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_offset_i8",
    "hash": "51380052520063261798573407637742331675",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_offset_isize",
    "hash": "94851512702731974867863051759123759441",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_offset_slice_i128",
    "hash": "341204371445434130511412248626809210730",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_offset_slice_i16",
    "hash": "168627274201788153417441996376760454791",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_offset_slice_i32",
    "hash": "172911546220422077748829461687962307451",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_offset_slice_i64",
    "hash": "967128966563954218211459679644113395094",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_offset_slice_i8",
    "hash": "1761631271284995607116458144306689275123",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_offset_slice_isize",
    "hash": "851610185968319666517255088248556904837",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_offset_slice_tuple_1",
    "hash": "27210187868562837256323550843325761459",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_offset_slice_tuple_2",
    "hash": "1606515863058012099214056954050046355779",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_offset_slice_tuple_3",
    "hash": "1559675419389481623515099537274742650905",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_offset_slice_tuple_4",
    "hash": "130337913566222824602665974834837107476",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_offset_slice_u128",
    "hash": "36121901071684336943647874194945015047",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_offset_slice_u16",
    "hash": "58412785724028410208557929957791076764",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_offset_slice_u32",
    "hash": "53927776506631963127694065446372827722",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_offset_slice_u64",
    "hash": "840725219126999590415251560309987698754",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_offset_slice_u8",
    "hash": "1491855319379659052317840747890891120875",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_offset_slice_usize",
    "hash": "24015625292410315010600764267235074502",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_offset_tuple_1",
    "hash": "1578644510572628611617436112152758174961",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_offset_tuple_2",
    "hash": "175127171335317368452094118228754202439",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_offset_tuple_3",
    "hash": "1529374485059481560110471324870521712917",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_offset_tuple_4",
    "hash": "118675556888501935854454632296457089489",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_offset_u128",
    "hash": "124325999940361461468524154191951444470",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_offset_u16",
    "hash": "301692115634555065313632043442999094441",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_offset_u32",
    "hash": "1284736219165458121117961138785707898153",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_offset_u64",
    "hash": "150318559309745737756469099416237949749",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_offset_unit",
    "hash": "282210546463733372516264276314590986879",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_offset_usize",
    "hash": "94546238788605665297990325734224135057",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_sub_i128",
    "hash": "792556431771304150918425819113620716536",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_sub_i16",
    "hash": "1241041988787524825917136708509304730885",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_sub_i32",
    "hash": "100793526422153336156140683716585010048",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_sub_i64",
    "hash": "15185672615297655486611809171599988204",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_sub_i8",
    "hash": "714479390684054375815250846201814411371",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_sub_isize",
    "hash": "1444959936911420886112169872740069165227",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_sub_slice_i128",
    "hash": "1631555884292082290314607826188966818126",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_sub_slice_i16",
    "hash": "5661064816675953750345177645105896787",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_sub_slice_i32",
    "hash": "288739034804891322515260346964080147677",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_sub_slice_i64",
    "hash": "1831142790789140907617874683804607779203",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_sub_slice_i8",
    "hash": "113170851383009542064577113290239179285",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_sub_slice_isize",
    "hash": "53144968105307272816028394627534891067",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_sub_slice_tuple_1",
    "hash": "98412228003073332082191673376362547840",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_sub_slice_tuple_2",
    "hash": "1104721869942985583717012461658709080526",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_sub_slice_tuple_3",
    "hash": "7715074646915273457629396646873375510",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_sub_slice_tuple_4",
    "hash": "109435585042055785908155772750407535868",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_sub_slice_u128",
    "hash": "3106311103684288811766085887786072554",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_sub_slice_u16",
    "hash": "8384046547526162934162245403114544238",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_sub_slice_u32",
    "hash": "253160183093441891311747021849897739952",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_sub_slice_u64",
    "hash": "19804386279401758901599776086938850034",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_sub_slice_u8",
    "hash": "1823490092303691338012488221437020049945",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_sub_slice_usize",
    "hash": "1013247877340666994913782444856575532935",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_sub_tuple_1",
    "hash": "81732957873505370315714713802394247323",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_sub_tuple_2",
    "hash": "125769466760429255251339517812030854233",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_sub_tuple_3",
    "hash": "172917663883340345555304331571195391973",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_sub_tuple_4",
    "hash": "21136839373635318798536041255220377706",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_sub_u128",
    "hash": "85087156027893134313562329442484389693",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_sub_u16",
    "hash": "1201106834643159791715207040355191925851",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_sub_u32",
    "hash": "644450903749643848218231190881732786943",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_sub_u64",
    "hash": "36098671603666736265714623903720854306",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_sub_unit",
    "hash": "1276098874031508426416277989131815155574",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_sub_usize",
    "hash": "11363476309610627410114268010327688562",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/non_null.rs",
    "func": "<ptr::non_null::verify::SampleStruct as ptr::non_null::verify::SampleTrait>::get_value",
    "hash": "1019146490540347874218323195995021106427"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/non_null.rs",
    "func": "<ptr::non_null::verify::non_null_check_drop_in_place::Droppable as ops::drop::Drop>::drop",
    "hash": "27749331284307847912374479770917710724"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_byte_offset_from_dangling_proof",
    "hash": "47743126764091703621891906390367224410",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_byte_offset_from_proof",
    "hash": "91678620563432148957005712789110952512",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_byte_offset_proof",
    "hash": "43350989879559220451177768870769958137",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_add",
    "hash": "507696861987973792313867474796182118755",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_addr",
    "hash": "130093778392243443377304689612105181391",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_align_offset",
    "hash": "865866080377396118312661204366599203",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_align_offset_negative",
    "hash": "116310583543888317356840288377477343622",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_as_mut",
    "hash": "1488445502182209041810399005679984155746",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_as_mut_ptr",
    "hash": "55282442525830341678522372338865917165",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_as_non_null_ptr",
    "hash": "1095268929329723550213849753818268588230",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_as_ptr",
    "hash": "1077672158311193949716929962587177665080",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_as_ref",
    "hash": "499200822589825878116397146413864370192",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_as_uninit_mut",
    "hash": "1768135785683302425110634107005836394495",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_as_uninit_ref",
    "hash": "899997358846557600617115386310672158014",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_as_uninit_slice",
    "hash": "67941489021962717593112226898730274928",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_as_uninit_slice_mut",
    "hash": "881001418407838573716761772008538994339",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_cast",
    "hash": "155225448489665439367137811980972310879",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_copy_from",
    "hash": "952034689781587608418024600454995835919",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_copy_from_nonoverlapping",
    "hash": "1078091288723154037912150050488320863201",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_copy_to",
    "hash": "115420950043117606517547646756181345011",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_copy_to_nonoverlapping",
    "hash": "145407690530334655302086417737453419622",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_drop_in_place",
    "hash": "17492594024563461912619638431987487067",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_from_raw_part_trait",
    "hash": "1431861985627818240215180392146937552152",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_get_unchecked_mut",
    "hash": "629733288490042201015277621395733364894",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_is_aligned_to",
    "hash": "55167221249696886664244841056114292144",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_is_aligned_to_no_power_two",
    "hash": "98400107932748097967214529009475688",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_is_empty",
    "hash": "411540747570995995710390124146708621075",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_len",
    "hash": "8070891077282493045082390774719900136",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_map_addr",
    "hash": "24186574416480343379078734505138875012",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_new",
    "hash": "2365092280006484965573016964914890209",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_new_unchecked",
    "hash": "866319762174552242311834032177299098131",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_offset",
    "hash": "12899193425540106847697864291862433075",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_offset_from",
    "hash": "182102517067622081054356919571606936668",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_read",
    "hash": "102211388487403344103450163603200912993",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_read_unaligned",
    "hash": "41477955966642863415951073051631381095",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_read_volatile",
    "hash": "126122712116679549917031945036099949936",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_replace",
    "hash": "12307945171218539384637911260113363344",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_slice_from_raw_parts",
    "hash": "24106764511356292375003536434654730726",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_sub",
    "hash": "92033781659273346273990031773372164932",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_sub_ptr",
    "hash": "68095300752413093428971553194463062800",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_swap",
    "hash": "1481783571345258003616503418680233582855",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_to_raw_parts",
    "hash": "127629994005741233545933339098654130078",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_with_addr",
    "hash": "1631209378909434430013206430635115815195",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_write_bytes_i128",
    "hash": "91327608054716727761352018151327640001",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_write_bytes_i16",
    "hash": "101491077034287403713839941491784057901",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_write_bytes_i32",
    "hash": "69256730398104269659286000647635891159",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_write_bytes_i64",
    "hash": "151118752556870941555461586409904478109",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_write_bytes_i8",
    "hash": "10834031390941280454727367724861138865",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_write_bytes_isize",
    "hash": "846171302828734189810434931704678325896",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_write_bytes_u128",
    "hash": "196570679828891209981437851025850846",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_write_bytes_u16",
    "hash": "628918121757379643218409203377399430725",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_write_bytes_u32",
    "hash": "1619953016602955514614893066481737979102",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_write_bytes_u64",
    "hash": "933491251398766996211014920691033547653",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_write_bytes_u8",
    "hash": "129686777188427370616736644985827922393",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_write_bytes_unit",
    "hash": "595640926923077874212358852238571256360",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_write_bytes_usize",
    "hash": "70632683298881571984808675835593916088",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_write_i128",
    "hash": "1490393762690934307610973288833855647132",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_write_i16",
    "hash": "79291161255462707006982699637149921612",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_write_i32",
    "hash": "1826899645060354822717462455987970822135",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_write_i64",
    "hash": "102083065718235283613552669545883721501",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_write_i8",
    "hash": "172324925178491114732823146009184931094",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_write_isize",
    "hash": "140508835428629569371376590092351314327",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_write_u128",
    "hash": "16513809457282837959835545905004210949",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_write_u16",
    "hash": "679337304434853789213232188160460604210",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_write_u32",
    "hash": "168946600637156088913317718890635532540",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_write_u64",
    "hash": "899525121906641009982363690101945569",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_write_u8",
    "hash": "136183972786859400393802469672410551062",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_write_unaligned_i128",
    "hash": "144526523126341494265888623294597445754",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_write_unaligned_i16",
    "hash": "102269048883321184486906808805589231359",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_write_unaligned_i32",
    "hash": "236785256389831464616807123627243052737",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_write_unaligned_i64",
    "hash": "870618824542736657318370641710620926671",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_write_unaligned_i8",
    "hash": "20189955291816899767038091595284258691",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_write_unaligned_isize",
    "hash": "165042238224749514926259659953638087384",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_write_unaligned_u128",
    "hash": "112642016800359963645878339413737928053",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_write_unaligned_u16",
    "hash": "455263518340511451612432273369078876229",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_write_unaligned_u32",
    "hash": "14442722537273275349239647264083431030",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_write_unaligned_u64",
    "hash": "216326191145623548010893372514067172510",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_write_unaligned_u8",
    "hash": "134877395634628349483594223619848732854",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_write_unaligned_unit",
    "hash": "6290663011308024988424189655868062323",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_write_unaligned_usize",
    "hash": "184390281667875946929709712310804344529",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_write_unit",
    "hash": "253595805008241428114754067809513609722",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_write_usize",
    "hash": "12663115017362059029104850623968340034",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_write_volatile_i128",
    "hash": "14927166962200860130122814698102644007",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_write_volatile_i16",
    "hash": "174462486642161080949938980700834892654",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_write_volatile_i32",
    "hash": "1489953336373585545216170630537710233041",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_write_volatile_i64",
    "hash": "106582845319679350113480945873935589939",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_write_volatile_i8",
    "hash": "52742664179683400779533669935724377363",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_write_volatile_isize",
    "hash": "36056547243132289911212799612915747017",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_write_volatile_u128",
    "hash": "1574883625202823554211395437435084328539",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_write_volatile_u16",
    "hash": "965394590301751884114785902981514385977",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_write_volatile_u32",
    "hash": "65122888719273484925903852025900683485",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_write_volatile_u64",
    "hash": "92362631382480613382378129626140130174",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_write_volatile_u8",
    "hash": "26462699869399959885622462455015500467",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_write_volatile_unit",
    "hash": "1373284402095107365913979922007255415954",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_write_volatile_usize",
    "hash": "183458660696482298642760630285645211715",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_slice_is_aligned_check",
    "hash": "77793250990110950617715727938600291543",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/unique.rs",
    "func": "ptr::unique::verify::check_as_mut",
    "hash": "158867215322407705649108273209198048357",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/unique.rs",
    "func": "ptr::unique::verify::check_as_non_null_ptr",
    "hash": "831016235601497219512943774543026617439",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/unique.rs",
    "func": "ptr::unique::verify::check_as_ptr",
    "hash": "19853297173218333277357958972512488858",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/unique.rs",
    "func": "ptr::unique::verify::check_as_ref",
    "hash": "1263781032850907518911616353772592895017",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/unique.rs",
    "func": "ptr::unique::verify::check_cast",
    "hash": "145898443091984929099617874388382786986",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/unique.rs",
    "func": "ptr::unique::verify::check_new",
    "hash": "941048437777879100716884564257367247041",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/unique.rs",
    "func": "ptr::unique::verify::check_new_unchecked",
    "hash": "1166163788602461075615081779163807482614",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/range.rs",
    "func": "range::RangeInclusive::<usize>::into_slice_range",
    "hash": "34664134052203930611533160760242062974"
  },
  {
    "crate": "core",
    "file": "core/src/slice/ascii.rs",
    "func": "<slice::ascii::EscapeAscii<'a> as fmt::Display>::fmt::needs_escape",
    "hash": "1227194532305185117716552313218085751352"
  },
  {
    "crate": "core",
    "file": "core/src/slice/ascii.rs",
    "func": "<slice::ascii::EscapeByte as clone::Clone>::clone",
    "hash": "432433793620906686316774388443650435673"
  },
  {
    "crate": "core",
    "file": "core/src/slice/cmp.rs",
    "func": "slice::cmp::as_underlying",
    "hash": "693274662990856667216361442076956176163"
  },
  {
    "crate": "core",
    "file": "core/src/slice/index.rs",
    "func": "slice::index::into_range",
    "hash": "89873470787809197489045283781578292418"
  },
  {
    "crate": "core",
    "file": "core/src/slice/index.rs",
    "func": "slice::index::into_range_unchecked",
    "hash": "10029674899459793172135362115653879702"
  },
  {
    "crate": "core",
    "file": "core/src/slice/index.rs",
    "func": "slice::index::into_slice_range",
    "hash": "1125558310333683310411178339562886421084"
  },
  {
    "crate": "core",
    "file": "core/src/slice/index.rs",
    "func": "slice::index::slice_end_index_len_fail",
    "hash": "180216954894167382576912062485815426"
  },
  {
    "crate": "core",
    "file": "core/src/slice/index.rs",
    "func": "slice::index::slice_end_index_overflow_fail",
    "hash": "169087461624945913379326739353759338513"
  },
  {
    "crate": "core",
    "file": "core/src/slice/index.rs",
    "func": "slice::index::slice_index_order_fail",
    "hash": "180216954894167382576912062485815426"
  },
  {
    "crate": "core",
    "file": "core/src/slice/index.rs",
    "func": "slice::index::slice_start_index_len_fail",
    "hash": "180216954894167382576912062485815426"
  },
  {
    "crate": "core",
    "file": "core/src/slice/index.rs",
    "func": "slice::index::slice_start_index_overflow_fail",
    "hash": "1529446589783479626613736920769896610141"
  },
  {
    "crate": "core",
    "file": "core/src/slice/iter.rs",
    "func": "slice::iter::verify::verify_char::check_advance_back_by",
    "hash": "961414541016701119811480069936751128277",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/slice/iter.rs",
    "func": "slice::iter::verify::verify_char::check_advance_by",
    "hash": "1091034622032592697116522450590817864362",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/slice/iter.rs",
    "func": "slice::iter::verify::verify_char::check_as_ref",
    "hash": "176197515219297591603609566681358522233",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/slice/iter.rs",
    "func": "slice::iter::verify::verify_char::check_as_slice",
    "hash": "1753899704605265572917795397114236536536",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/slice/iter.rs",
    "func": "slice::iter::verify::verify_char::check_clone",
    "hash": "971240752739963950012765250773564458963",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/slice/iter.rs",
    "func": "slice::iter::verify::verify_char::check_count",
    "hash": "128148029239536627277880973787438936761",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/slice/iter.rs",
    "func": "slice::iter::verify::verify_char::check_default",
    "hash": "52342102918859886835856109021645078300",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/slice/iter.rs",
    "func": "slice::iter::verify::verify_char::check_is_empty",
    "hash": "115809336812583257727135197952456481823",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/slice/iter.rs",
    "func": "slice::iter::verify::verify_char::check_len",
    "hash": "88899087711861651987411139693314844656",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/slice/iter.rs",
    "func": "slice::iter::verify::verify_char::check_new_iter",
    "hash": "1751012972758353634912658415476178931855",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/slice/iter.rs",
    "func": "slice::iter::verify::verify_char::check_next",
    "hash": "11942667652933082798881754776337619426",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/slice/iter.rs",
    "func": "slice::iter::verify::verify_char::check_next_back",
    "hash": "378239352111011225111458714449860454078",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/slice/iter.rs",
    "func": "slice::iter::verify::verify_char::check_next_back_unchecked",
    "hash": "642862610608856482212021336054508596904",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/iter.rs",
    "func": "slice::iter::verify::verify_char::check_nth",
    "hash": "136302013935642100865363079881547798975",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/slice/iter.rs",
    "func": "slice::iter::verify::verify_char::check_nth_back",
    "hash": "143044805821942143931051555738477964313",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/slice/iter.rs",
    "func": "slice::iter::verify::verify_char::check_post_inc_start",
    "hash": "110248838031206350887490499141792089667",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/iter.rs",
    "func": "slice::iter::verify::verify_char::check_pre_dec_end",
    "hash": "166641540888109358391240494305909384975",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/iter.rs",
    "func": "slice::iter::verify::verify_char::check_size_hint",
    "hash": "179942132563143877384483348309630116297",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/slice/iter.rs",
    "func": "slice::iter::verify::verify_tup::check_advance_back_by",
    "hash": "440318328471665336715175598212123823658",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/slice/iter.rs",
    "func": "slice::iter::verify::verify_tup::check_advance_by",
    "hash": "347704501976379861510348249085769351765",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/slice/iter.rs",
    "func": "slice::iter::verify::verify_tup::check_as_ref",
    "hash": "120746326419739762898582945010749218972",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/slice/iter.rs",
    "func": "slice::iter::verify::verify_tup::check_as_slice",
    "hash": "104029607996248565582579676429337825867",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/slice/iter.rs",
    "func": "slice::iter::verify::verify_tup::check_clone",
    "hash": "1123439229996738747314204904116755008772",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/slice/iter.rs",
    "func": "slice::iter::verify::verify_tup::check_count",
    "hash": "417053440265194751711941742046865929278",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/slice/iter.rs",
    "func": "slice::iter::verify::verify_tup::check_default",
    "hash": "297555056798052713913515849026144170952",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/slice/iter.rs",
    "func": "slice::iter::verify::verify_tup::check_is_empty",
    "hash": "24172062347751512675005877908146237930",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/slice/iter.rs",
    "func": "slice::iter::verify::verify_tup::check_len",
    "hash": "492303642767180144518016709450943142388",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/slice/iter.rs",
    "func": "slice::iter::verify::verify_tup::check_new_iter",
    "hash": "1137203679263488479915003830390340655424",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/slice/iter.rs",
    "func": "slice::iter::verify::verify_tup::check_next",
    "hash": "1752868526878828185415043280355906066766",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/slice/iter.rs",
    "func": "slice::iter::verify::verify_tup::check_next_back",
    "hash": "6485036188727491438681624371236707369",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/slice/iter.rs",
    "func": "slice::iter::verify::verify_tup::check_next_back_unchecked",
    "hash": "73173784428775272135136897008242012852",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/iter.rs",
    "func": "slice::iter::verify::verify_tup::check_nth",
    "hash": "12683490013689724817107041337598968892",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/slice/iter.rs",
    "func": "slice::iter::verify::verify_tup::check_nth_back",
    "hash": "815379150617948940311289611823926101373",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/slice/iter.rs",
    "func": "slice::iter::verify::verify_tup::check_post_inc_start",
    "hash": "1212818993898926361916659827228692614186",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/iter.rs",
    "func": "slice::iter::verify::verify_tup::check_pre_dec_end",
    "hash": "149908290593002567439144516547465433881",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/iter.rs",
    "func": "slice::iter::verify::verify_tup::check_size_hint",
    "hash": "1289054724836300848916898308258750071697",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/slice/iter.rs",
    "func": "slice::iter::verify::verify_u8::check_advance_back_by",
    "hash": "160763776192327880881033415774635343665",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/slice/iter.rs",
    "func": "slice::iter::verify::verify_u8::check_advance_by",
    "hash": "1020012520914006887813788961271354085927",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/slice/iter.rs",
    "func": "slice::iter::verify::verify_u8::check_as_ref",
    "hash": "35395257001718891392528612684923564090",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/slice/iter.rs",
    "func": "slice::iter::verify::verify_u8::check_as_slice",
    "hash": "1766629239962973603516278328701640975188",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/slice/iter.rs",
    "func": "slice::iter::verify::verify_u8::check_clone",
    "hash": "170106039020937496669988340681062261173",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/slice/iter.rs",
    "func": "slice::iter::verify::verify_u8::check_count",
    "hash": "86164730500386524632953071956117289684",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/slice/iter.rs",
    "func": "slice::iter::verify::verify_u8::check_default",
    "hash": "157405237606279493912751307427988601942",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/slice/iter.rs",
    "func": "slice::iter::verify::verify_u8::check_is_empty",
    "hash": "46430111907143040879100106252600261656",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/slice/iter.rs",
    "func": "slice::iter::verify::verify_u8::check_len",
    "hash": "454056255934261882811116920978656442171",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/slice/iter.rs",
    "func": "slice::iter::verify::verify_u8::check_new_iter",
    "hash": "180195287460181966411735036697891042710",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/slice/iter.rs",
    "func": "slice::iter::verify::verify_u8::check_next",
    "hash": "455211163974816912815440033798361082047",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/slice/iter.rs",
    "func": "slice::iter::verify::verify_u8::check_next_back",
    "hash": "6391609404907012837523385692881315098",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/slice/iter.rs",
    "func": "slice::iter::verify::verify_u8::check_next_back_unchecked",
    "hash": "153184005499251321117642753584053665533",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/iter.rs",
    "func": "slice::iter::verify::verify_u8::check_nth",
    "hash": "3667765960265225328752230210194988769",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/slice/iter.rs",
    "func": "slice::iter::verify::verify_u8::check_nth_back",
    "hash": "115200634563675261079062369698689238516",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/slice/iter.rs",
    "func": "slice::iter::verify::verify_u8::check_post_inc_start",
    "hash": "1605152779219603290814665006589385769701",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/iter.rs",
    "func": "slice::iter::verify::verify_u8::check_pre_dec_end",
    "hash": "911217755754815206115594837475495774994",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/iter.rs",
    "func": "slice::iter::verify::verify_u8::check_size_hint",
    "hash": "90712365103441952552953971727743941983",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/slice/iter.rs",
    "func": "slice::iter::verify::verify_unit::check_advance_back_by",
    "hash": "38235348177066984832675225533375264700",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/slice/iter.rs",
    "func": "slice::iter::verify::verify_unit::check_advance_by",
    "hash": "67437096778068658303286840565950552677",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/slice/iter.rs",
    "func": "slice::iter::verify::verify_unit::check_as_ref",
    "hash": "92787166258980310411067320504926401731",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/slice/iter.rs",
    "func": "slice::iter::verify::verify_unit::check_as_slice",
    "hash": "905816689771173764914170654951329075986",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/slice/iter.rs",
    "func": "slice::iter::verify::verify_unit::check_clone",
    "hash": "13631745999038898116993707557733805269",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/slice/iter.rs",
    "func": "slice::iter::verify::verify_unit::check_count",
    "hash": "100423951647294852989500416816040506323",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/slice/iter.rs",
    "func": "slice::iter::verify::verify_unit::check_default",
    "hash": "96010839121845606732557950698260223445",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/slice/iter.rs",
    "func": "slice::iter::verify::verify_unit::check_is_empty",
    "hash": "18580583873800745328853661098896089764",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/slice/iter.rs",
    "func": "slice::iter::verify::verify_unit::check_len",
    "hash": "368727526745453712315881531482119468600",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/slice/iter.rs",
    "func": "slice::iter::verify::verify_unit::check_new_iter",
    "hash": "709974984199407541718070252088777355374",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/slice/iter.rs",
    "func": "slice::iter::verify::verify_unit::check_next",
    "hash": "630972150021046469917306182264300640530",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/slice/iter.rs",
    "func": "slice::iter::verify::verify_unit::check_next_back",
    "hash": "161979330131035323566968245128101220905",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/slice/iter.rs",
    "func": "slice::iter::verify::verify_unit::check_next_back_unchecked",
    "hash": "29298137127412074895663616858397990184",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/iter.rs",
    "func": "slice::iter::verify::verify_unit::check_nth",
    "hash": "1105113851576252565613322665954501182763",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/slice/iter.rs",
    "func": "slice::iter::verify::verify_unit::check_nth_back",
    "hash": "85961618641720631553853139923305381903",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/slice/iter.rs",
    "func": "slice::iter::verify::verify_unit::check_post_inc_start",
    "hash": "132228748579303820361168384089072311821",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/iter.rs",
    "func": "slice::iter::verify::verify_unit::check_pre_dec_end",
    "hash": "37100283655031401797599375468290891470",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/iter.rs",
    "func": "slice::iter::verify::verify_unit::check_size_hint",
    "hash": "112383943558689861514933173816896456185",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/slice/memchr.rs",
    "func": "slice::memchr::contains_zero_byte",
    "hash": "141233208426902244535079999611474988219"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "<ops::range::Range<usize> as slice::GetDisjointMutIndex>::is_in_bounds",
    "hash": "1228444505496224592614798147834278536958"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "<ops::range::Range<usize> as slice::GetDisjointMutIndex>::is_overlapping",
    "hash": "103141837994909276101307811560806947523"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "<ops::range::RangeInclusive<usize> as slice::GetDisjointMutIndex>::is_in_bounds",
    "hash": "22422257990286609754819917724897024679"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "<ops::range::RangeInclusive<usize> as slice::GetDisjointMutIndex>::is_overlapping",
    "hash": "1266155675522051681915137248298477575410"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "<range::Range<usize> as slice::GetDisjointMutIndex>::is_in_bounds",
    "hash": "61488236212443953624987984202698020524"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "<range::Range<usize> as slice::GetDisjointMutIndex>::is_overlapping",
    "hash": "1453372801078840626314522683458257578133"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "<range::RangeInclusive<usize> as slice::GetDisjointMutIndex>::is_in_bounds",
    "hash": "81805920622333531514188832837209734000"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "<range::RangeInclusive<usize> as slice::GetDisjointMutIndex>::is_overlapping",
    "hash": "614652956106608365818241199567215031096"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "<slice::GetDisjointMutError as clone::Clone>::clone",
    "hash": "1645257322150250706911612999179300336998"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "<slice::GetDisjointMutError as cmp::Eq>::assert_receiver_is_total_eq",
    "hash": "80766861920359694945860867830537583790"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "<slice::GetDisjointMutError as cmp::PartialEq>::eq",
    "hash": "523691030050819918113531301549014319341"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "<usize as slice::GetDisjointMutIndex>::is_in_bounds",
    "hash": "167253307782899958291861455937204858096"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "<usize as slice::GetDisjointMutIndex>::is_overlapping",
    "hash": "117485000197088428992304232441809614102"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::<impl [T]>::align_to_offsets::gcd",
    "hash": "363889497422173309816468671539791367786"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::<impl [T]>::copy_from_slice::len_mismatch_fail",
    "hash": "263834104350405914315466371333560791627"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_from_bool::align_to_bool",
    "hash": "122136443315115836042558541014263069862",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_from_bool::align_to_char",
    "hash": "671083940041562710814270105855037775216",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_from_bool::align_to_u128",
    "hash": "988562079031716296113460348588584037559",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_from_bool::align_to_u16",
    "hash": "115181815062716763995868451499398531751",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_from_bool::align_to_u32",
    "hash": "1361112691090525385410644683827969076005",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_from_bool::align_to_u64",
    "hash": "1506693056112838499815348523046942286707",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_from_bool::align_to_u8",
    "hash": "112190742544375863081214446470321414183",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_from_bool::align_to_unit",
    "hash": "41220047632902069632161114364044816012",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_from_char::align_to_bool",
    "hash": "16215543380820119552346290966476719549",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_from_char::align_to_char",
    "hash": "171000847303794379835068212006697327482",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_from_char::align_to_u128",
    "hash": "36832870741485299103887334652452752106",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_from_char::align_to_u16",
    "hash": "15483136794593533628023002224826620414",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_from_char::align_to_u32",
    "hash": "1181059646244007284611183543936054883016",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_from_char::align_to_u64",
    "hash": "95200960693269571322629164256198473359",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_from_char::align_to_u8",
    "hash": "425329293281886345851778881413982677",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_from_char::align_to_unit",
    "hash": "141532144792233165532287199185010984820",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_from_u128::align_to_bool",
    "hash": "71376005935224811936534346772071175118",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_from_u128::align_to_char",
    "hash": "1449717527854354926415111913040694263961",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_from_u128::align_to_u128",
    "hash": "142758802304137648436964479426648984102",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_from_u128::align_to_u16",
    "hash": "1315507065916731238217505789263177111713",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_from_u128::align_to_u32",
    "hash": "835086272104654163710652755786139340666",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_from_u128::align_to_u64",
    "hash": "1774026654524195251211811534551819093528",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_from_u128::align_to_u8",
    "hash": "12565228748650113715179725219235731082",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_from_u128::align_to_unit",
    "hash": "174209892633737496222591195575992296278",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_from_u16::align_to_bool",
    "hash": "51528004754611423146481872461806024646",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_from_u16::align_to_char",
    "hash": "1360817334483580671811886552035932487534",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_from_u16::align_to_u128",
    "hash": "230750190991224124715843986713977202591",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_from_u16::align_to_u16",
    "hash": "126018162275410167828373506415394461253",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_from_u16::align_to_u32",
    "hash": "100065381667895822065546025456436023606",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_from_u16::align_to_u64",
    "hash": "30994673334478558089291236594960783723",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_from_u16::align_to_u8",
    "hash": "80243291836040251952170355900575092283",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_from_u16::align_to_unit",
    "hash": "178325963088609860012624359095925224179",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_from_u32::align_to_bool",
    "hash": "95349010461408470574506433391502923263",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_from_u32::align_to_char",
    "hash": "83099009304683987048091807938427425308",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_from_u32::align_to_u128",
    "hash": "553512799387754941715214154202451386461",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_from_u32::align_to_u16",
    "hash": "11376922931918897057522219313941430310",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_from_u32::align_to_u32",
    "hash": "627268557055799411615117709255294765300",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_from_u32::align_to_u64",
    "hash": "1588886258584607762211773227566615904672",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_from_u32::align_to_u8",
    "hash": "1128136186453045834716665888670579833402",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_from_u32::align_to_unit",
    "hash": "136972352560217493971660616790020275728",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_from_u64::align_to_bool",
    "hash": "1726096769900786644714281164125963317887",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_from_u64::align_to_char",
    "hash": "842724851953417791210774553725720207199",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_from_u64::align_to_u128",
    "hash": "165805750777951204081040613606795161929",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_from_u64::align_to_u16",
    "hash": "29910449806292793964298261333967297162",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_from_u64::align_to_u32",
    "hash": "8587266497024187907789614982009770205",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_from_u64::align_to_u64",
    "hash": "167680121219542374577006629950790298301",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_from_u64::align_to_u8",
    "hash": "156841268211818754565333559729509663142",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_from_u64::align_to_unit",
    "hash": "5438641501105715847413177119431886493",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_from_u8::align_to_bool",
    "hash": "29434903276114215987818914430418436890",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_from_u8::align_to_char",
    "hash": "3785725265605073119602046473694505304",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_from_u8::align_to_u128",
    "hash": "184002717106586738956136519515801740945",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_from_u8::align_to_u16",
    "hash": "4851046124035473359871462493777117039",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_from_u8::align_to_u32",
    "hash": "854408953743161256417344614399293539556",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_from_u8::align_to_u64",
    "hash": "168456064729925955046967753388763055093",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_from_u8::align_to_u8",
    "hash": "125360889608330159839303295251471873147",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_from_u8::align_to_unit",
    "hash": "7034194207071493822110016809979170203",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_from_unit::align_to_bool",
    "hash": "221775162925226901715199019488306700",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_from_unit::align_to_char",
    "hash": "66497962942502496581057193866007592015",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_from_unit::align_to_u128",
    "hash": "1045601221770433933015717393820095354166",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_from_unit::align_to_u16",
    "hash": "45068480844722028514251974437307689184",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_from_unit::align_to_u32",
    "hash": "1669177142507307934610348498903569243610",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_from_unit::align_to_u64",
    "hash": "1734603544003770141010922469339150703004",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_from_unit::align_to_u8",
    "hash": "1722330506966790671217332399675926893412",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_from_unit::align_to_unit",
    "hash": "384279422105980648813588499542850387138",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_mut_from_bool::align_to_mut_bool",
    "hash": "4216694429413523819578637814165418225",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_mut_from_bool::align_to_mut_char",
    "hash": "148032080652912305138284545431615695011",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_mut_from_bool::align_to_mut_u128",
    "hash": "130832516744704950578092609042041434508",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_mut_from_bool::align_to_mut_u16",
    "hash": "48107551013666215787977971291270558728",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_mut_from_bool::align_to_mut_u32",
    "hash": "368384281787065616017800547880760462870",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_mut_from_bool::align_to_mut_u64",
    "hash": "179859560548944556156265674604440268014",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_mut_from_bool::align_to_mut_u8",
    "hash": "161013331161080067136963673658269624307",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_mut_from_bool::align_to_mut_unit",
    "hash": "1541120520279697755613546334211028832787",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_mut_from_char::align_to_mut_bool",
    "hash": "28768243189230996427018551539224675498",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_mut_from_char::align_to_mut_char",
    "hash": "39600626437413895342121340499936112484",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_mut_from_char::align_to_mut_u128",
    "hash": "32898502069238461462889900503568114809",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_mut_from_char::align_to_mut_u16",
    "hash": "1518470975313406115516684804033569963081",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_mut_from_char::align_to_mut_u32",
    "hash": "1742006793772391303014480367045321924902",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_mut_from_char::align_to_mut_u64",
    "hash": "1656638235841386330513486881361123977948",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_mut_from_char::align_to_mut_u8",
    "hash": "543618918850248077711297529324444002886",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_mut_from_char::align_to_mut_unit",
    "hash": "1768464995741905304315807926099553615663",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_mut_from_u128::align_to_mut_bool",
    "hash": "1056965126890244968914007828772672038420",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_mut_from_u128::align_to_mut_char",
    "hash": "20948215879101408787099314251904619339",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_mut_from_u128::align_to_mut_u128",
    "hash": "176357515163414813026510724670795993023",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_mut_from_u128::align_to_mut_u16",
    "hash": "180193122873707507572205609166530246933",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_mut_from_u128::align_to_mut_u32",
    "hash": "3846587908409441088482529634632873519",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_mut_from_u128::align_to_mut_u64",
    "hash": "1335656164005843235417845682346636792738",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_mut_from_u128::align_to_mut_u8",
    "hash": "70703415765772999969093353988280425377",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_mut_from_u128::align_to_mut_unit",
    "hash": "6270509907656137444853202329651408847",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_mut_from_u16::align_to_mut_bool",
    "hash": "32511894762882981936194424740790327643",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_mut_from_u16::align_to_mut_char",
    "hash": "16434697927107617615290101400014265116",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_mut_from_u16::align_to_mut_u128",
    "hash": "181667718406617254076673496977151547470",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_mut_from_u16::align_to_mut_u16",
    "hash": "8270833491147965708336954371838025332",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_mut_from_u16::align_to_mut_u32",
    "hash": "879886105543685761413722872852016272982",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_mut_from_u16::align_to_mut_u64",
    "hash": "78067870679790691317364497601356768120",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_mut_from_u16::align_to_mut_u8",
    "hash": "55398917757818496127490213460177314448",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_mut_from_u16::align_to_mut_unit",
    "hash": "1090931272557404751514214766336017420284",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_mut_from_u32::align_to_mut_bool",
    "hash": "18751639986650323011624566172399251065",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_mut_from_u32::align_to_mut_char",
    "hash": "58922866890162222641046034876854569161",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_mut_from_u32::align_to_mut_u128",
    "hash": "112227025784103167336353547578104200311",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_mut_from_u32::align_to_mut_u16",
    "hash": "112758519844182891942293493060952759403",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_mut_from_u32::align_to_mut_u32",
    "hash": "40725528615186472822610122602736939198",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_mut_from_u32::align_to_mut_u64",
    "hash": "18155468015166341208441307616041419573",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_mut_from_u32::align_to_mut_u8",
    "hash": "116914027663493037497409036535712501704",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_mut_from_u32::align_to_mut_unit",
    "hash": "141311009549249670025080967193394148731",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_mut_from_u64::align_to_mut_bool",
    "hash": "27736258322244500801517581106114379029",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_mut_from_u64::align_to_mut_char",
    "hash": "1408478316113519397615837693742911704055",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_mut_from_u64::align_to_mut_u128",
    "hash": "1448590160629880005112871502663050911400",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_mut_from_u64::align_to_mut_u16",
    "hash": "15294165591349323478259666558650355228",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_mut_from_u64::align_to_mut_u32",
    "hash": "1712633112868908459015370705856124240706",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_mut_from_u64::align_to_mut_u64",
    "hash": "1297971158835238467817053435463622681004",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_mut_from_u64::align_to_mut_u8",
    "hash": "57887770951991651609216707881365741730",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_mut_from_u64::align_to_mut_unit",
    "hash": "571247336629691488718256719420451728945",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_mut_from_u8::align_to_mut_bool",
    "hash": "73074384548671143573975799386264640549",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_mut_from_u8::align_to_mut_char",
    "hash": "121288670538230693531827962562064277517",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_mut_from_u8::align_to_mut_u128",
    "hash": "72859693499406979575377543361419133012",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_mut_from_u8::align_to_mut_u16",
    "hash": "1630296274079565944817916445706495909372",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_mut_from_u8::align_to_mut_u32",
    "hash": "58364756144429980944121412963306976832",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_mut_from_u8::align_to_mut_u64",
    "hash": "113882868842879101046590606709842874129",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_mut_from_u8::align_to_mut_u8",
    "hash": "703805058936190165211420390239592246782",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_mut_from_u8::align_to_mut_unit",
    "hash": "19503177502545389728609262556986728737",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_mut_from_unit::align_to_mut_bool",
    "hash": "85493307281124755337376731955699316998",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_mut_from_unit::align_to_mut_char",
    "hash": "477198141147896789712110991639896797925",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_mut_from_unit::align_to_mut_u128",
    "hash": "390361270762499002715089521416133696429",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_mut_from_unit::align_to_mut_u16",
    "hash": "564824609639643465517606423188584618715",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_mut_from_unit::align_to_mut_u32",
    "hash": "1586841293829055113614787946451529139999",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_mut_from_unit::align_to_mut_u64",
    "hash": "301673858910715169611426619408543542275",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_mut_from_unit::align_to_mut_u8",
    "hash": "1148717176367131976110717554792686413090",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_mut_from_unit::align_to_mut_unit",
    "hash": "49239421155731583565414073100994640357",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/rotate.rs",
    "func": "slice::rotate::const_min",
    "hash": "1270438461514171088810672205753921848361"
  },
  {
    "crate": "core",
    "file": "core/src/slice/sort/shared/smallsort.rs",
    "func": "slice::sort::shared::smallsort::panic_on_ord_violation",
    "hash": "717316864195020333212717142816164069242"
  },
  {
    "crate": "core",
    "file": "core/src/slice/sort/stable/drift.rs",
    "func": "<slice::sort::stable::drift::DriftsortRun as clone::Clone>::clone",
    "hash": "12096648276996378769624952880035353568"
  },
  {
    "crate": "core",
    "file": "core/src/slice/sort/stable/drift.rs",
    "func": "slice::sort::stable::drift::DriftsortRun::len",
    "hash": "118910770894669336584356273918917991833"
  },
  {
    "crate": "core",
    "file": "core/src/slice/sort/stable/drift.rs",
    "func": "slice::sort::stable::drift::DriftsortRun::new_sorted",
    "hash": "76436199708318685525846013368064223359"
  },
  {
    "crate": "core",
    "file": "core/src/slice/sort/stable/drift.rs",
    "func": "slice::sort::stable::drift::DriftsortRun::new_unsorted",
    "hash": "1168707756219652878515544949458091231518"
  },
  {
    "crate": "core",
    "file": "core/src/slice/sort/stable/drift.rs",
    "func": "slice::sort::stable::drift::DriftsortRun::sorted",
    "hash": "50677806787826745946156566879001363075"
  },
  {
    "crate": "core",
    "file": "core/src/slice/sort/stable/drift.rs",
    "func": "slice::sort::stable::drift::merge_tree_depth",
    "hash": "350418974039953363913599767703416397290"
  },
  {
    "crate": "core",
    "file": "core/src/slice/sort/stable/drift.rs",
    "func": "slice::sort::stable::drift::merge_tree_scale_factor",
    "hash": "86645618479885479243232985640661285290"
  },
  {
    "crate": "core",
    "file": "core/src/slice/sort/stable/drift.rs",
    "func": "slice::sort::stable::drift::sqrt_approx",
    "hash": "22403193100286548327593268424785725252"
  },
  {
    "crate": "core",
    "file": "core/src/str/count.rs",
    "func": "str::count::contains_non_continuation_byte",
    "hash": "133774208422544204712385208594916672852"
  },
  {
    "crate": "core",
    "file": "core/src/str/count.rs",
    "func": "str::count::sum_bytes_in_usize",
    "hash": "656020278541089165616042705318184400030"
  },
  {
    "crate": "core",
    "file": "core/src/str/error.rs",
    "func": "<str::error::ParseBoolError as clone::Clone>::clone",
    "hash": "1421737906428699755616519336785560782860"
  },
  {
    "crate": "core",
    "file": "core/src/str/error.rs",
    "func": "<str::error::ParseBoolError as cmp::Eq>::assert_receiver_is_total_eq",
    "hash": "100999279390663379189465280175234214979"
  },
  {
    "crate": "core",
    "file": "core/src/str/error.rs",
    "func": "<str::error::ParseBoolError as cmp::PartialEq>::eq",
    "hash": "1363812817795777260510003772117541250262"
  },
  {
    "crate": "core",
    "file": "core/src/str/error.rs",
    "func": "<str::error::ParseBoolError as error::Error>::description",
    "hash": "179977599307470810532288938631975945107"
  },
  {
    "crate": "core",
    "file": "core/src/str/error.rs",
    "func": "<str::error::Utf8Error as clone::Clone>::clone",
    "hash": "101189444776046950154912782937031422029"
  },
  {
    "crate": "core",
    "file": "core/src/str/error.rs",
    "func": "<str::error::Utf8Error as cmp::Eq>::assert_receiver_is_total_eq",
    "hash": "1287375361982080621115781447982573194934"
  },
  {
    "crate": "core",
    "file": "core/src/str/error.rs",
    "func": "<str::error::Utf8Error as cmp::PartialEq>::eq",
    "hash": "373733674965495327516276036462381068725"
  },
  {
    "crate": "core",
    "file": "core/src/str/error.rs",
    "func": "<str::error::Utf8Error as error::Error>::description",
    "hash": "664479044909479467114787718303192920836"
  },
  {
    "crate": "core",
    "file": "core/src/str/error.rs",
    "func": "str::error::Utf8Error::error_len",
    "hash": "1425690459290491886310479508103895905570"
  },
  {
    "crate": "core",
    "file": "core/src/str/error.rs",
    "func": "str::error::Utf8Error::valid_up_to",
    "hash": "28759182975857547098651469533205323676"
  },
  {
    "crate": "core",
    "file": "core/src/str/mod.rs",
    "func": "<str::BytesIsNotEmpty as clone::Clone>::clone",
    "hash": "1134462621956276629212356351043471815287"
  },
  {
    "crate": "core",
    "file": "core/src/str/mod.rs",
    "func": "<str::CharEscapeDebugContinue as clone::Clone>::clone",
    "hash": "1542207383255327621116904855085895476103"
  },
  {
    "crate": "core",
    "file": "core/src/str/mod.rs",
    "func": "<str::CharEscapeDefault as clone::Clone>::clone",
    "hash": "182649462031515700183352668661070243072"
  },
  {
    "crate": "core",
    "file": "core/src/str/mod.rs",
    "func": "<str::CharEscapeUnicode as clone::Clone>::clone",
    "hash": "921511568084263858117305124753064771755"
  },
  {
    "crate": "core",
    "file": "core/src/str/mod.rs",
    "func": "<str::IsAsciiWhitespace as clone::Clone>::clone",
    "hash": "690259270114141726215596604235015012549"
  },
  {
    "crate": "core",
    "file": "core/src/str/mod.rs",
    "func": "<str::IsNotEmpty as clone::Clone>::clone",
    "hash": "37158827771850946497299676093189518975"
  },
  {
    "crate": "core",
    "file": "core/src/str/mod.rs",
    "func": "<str::IsWhitespace as clone::Clone>::clone",
    "hash": "34849895375469610708345764686731926756"
  },
  {
    "crate": "core",
    "file": "core/src/str/mod.rs",
    "func": "<str::LinesMap as clone::Clone>::clone",
    "hash": "1001019627481923202716785672502496702184"
  },
  {
    "crate": "core",
    "file": "core/src/str/mod.rs",
    "func": "<str::UnsafeBytesToStr as clone::Clone>::clone",
    "hash": "211392954465144897813203494630722967946"
  },
  {
    "crate": "core",
    "file": "core/src/str/mod.rs",
    "func": "str::<impl default::Default for &mut str>::default",
    "hash": "1201451347459645491210659365263903205279"
  },
  {
    "crate": "core",
    "file": "core/src/str/mod.rs",
    "func": "str::<impl default::Default for &str>::default",
    "hash": "93123451915686974738005182859496240660"
  },
  {
    "crate": "core",
    "file": "core/src/str/pattern.rs",
    "func": "<char as str::pattern::Pattern>::as_utf8_pattern",
    "hash": "202979102918754469511973505088746121106"
  },
  {
    "crate": "core",
    "file": "core/src/str/pattern.rs",
    "func": "<str::pattern::EmptyNeedle as clone::Clone>::clone",
    "hash": "846787316198935758617725690966544171763"
  },
  {
    "crate": "core",
    "file": "core/src/str/pattern.rs",
    "func": "<str::pattern::MatchOnly as str::pattern::TwoWayStrategy>::matching",
    "hash": "1296411750804674058315087202364841236804"
  },
  {
    "crate": "core",
    "file": "core/src/str/pattern.rs",
    "func": "<str::pattern::MatchOnly as str::pattern::TwoWayStrategy>::rejecting",
    "hash": "921040717020639707211435762660647759802"
  },
  {
    "crate": "core",
    "file": "core/src/str/pattern.rs",
    "func": "<str::pattern::MatchOnly as str::pattern::TwoWayStrategy>::use_early_reject",
    "hash": "313548882690528367412077569528013544642"
  },
  {
    "crate": "core",
    "file": "core/src/str/pattern.rs",
    "func": "<str::pattern::RejectAndMatch as str::pattern::TwoWayStrategy>::matching",
    "hash": "25147898751268070724297523336675951399"
  },
  {
    "crate": "core",
    "file": "core/src/str/pattern.rs",
    "func": "<str::pattern::RejectAndMatch as str::pattern::TwoWayStrategy>::rejecting",
    "hash": "84124346961803484191975811234606759065"
  },
  {
    "crate": "core",
    "file": "core/src/str/pattern.rs",
    "func": "<str::pattern::RejectAndMatch as str::pattern::TwoWayStrategy>::use_early_reject",
    "hash": "44839495425802162711973928630568384066"
  },
  {
    "crate": "core",
    "file": "core/src/str/pattern.rs",
    "func": "<str::pattern::SearchStep as clone::Clone>::clone",
    "hash": "1087573110898129658217802012511246865689"
  },
  {
    "crate": "core",
    "file": "core/src/str/pattern.rs",
    "func": "<str::pattern::SearchStep as cmp::Eq>::assert_receiver_is_total_eq",
    "hash": "816649430859910242810748878991678979217"
  },
  {
    "crate": "core",
    "file": "core/src/str/pattern.rs",
    "func": "<str::pattern::SearchStep as cmp::PartialEq>::eq",
    "hash": "945101538962586226417160114872795629174"
  },
  {
    "crate": "core",
    "file": "core/src/str/pattern.rs",
    "func": "<str::pattern::StrSearcherImpl as clone::Clone>::clone",
    "hash": "228562707203156515418360423522431696086"
  },
  {
    "crate": "core",
    "file": "core/src/str/pattern.rs",
    "func": "<str::pattern::TwoWaySearcher as clone::Clone>::clone",
    "hash": "174247123207391243897841276514992390901"
  },
  {
    "crate": "core",
    "file": "core/src/str/pattern.rs",
    "func": "str::pattern::TwoWaySearcher::byteset_contains",
    "hash": "179238937216206703897978799586879197334"
  },
  {
    "crate": "core",
    "file": "core/src/str/traits.rs",
    "func": "str::traits::str_index_overflow_fail",
    "hash": "1789720728005117086117481954200849255673"
  },
  {
    "crate": "core",
    "file": "core/src/str/validations.rs",
    "func": "str::validations::contains_nonascii",
    "hash": "174654506174121724337210882592953964221"
  },
  {
    "crate": "core",
    "file": "core/src/str/validations.rs",
    "func": "str::validations::utf8_acc_cont_byte",
    "hash": "109849097723912452994088294171860151303"
  },
  {
    "crate": "core",
    "file": "core/src/str/validations.rs",
    "func": "str::validations::utf8_char_width",
    "hash": "96426103444183050012757094728170995506"
  },
  {
    "crate": "core",
    "file": "core/src/str/validations.rs",
    "func": "str::validations::utf8_first_byte",
    "hash": "486164287917427656918200146926298480057"
  },
  {
    "crate": "core",
    "file": "core/src/str/validations.rs",
    "func": "str::validations::utf8_is_cont_byte",
    "hash": "947833919457653120214810965083035955432"
  },
  {
    "crate": "core",
    "file": "core/src/str/validations.rs",
    "func": "str::validations::verify::check_run_utf8_validation",
    "hash": "118680727355050390509095722432500682504",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "<sync::atomic::AtomicBool as convert::From<bool>>::from",
    "hash": "183480036313976757114502341016561568095"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "<sync::atomic::AtomicBool as default::Default>::default",
    "hash": "77194354903380178842099972487523234876"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "<sync::atomic::AtomicI16 as convert::From<i16>>::from",
    "hash": "1345285359576590865214451300690554773081"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "<sync::atomic::AtomicI16 as default::Default>::default",
    "hash": "119928202940845174932574098066530978189"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "<sync::atomic::AtomicI32 as convert::From<i32>>::from",
    "hash": "128858439203493225603362721034910072026"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "<sync::atomic::AtomicI32 as default::Default>::default",
    "hash": "11778165355787553542994064086406935440"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "<sync::atomic::AtomicI64 as convert::From<i64>>::from",
    "hash": "1308679700610868303416751435714331883071"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "<sync::atomic::AtomicI64 as default::Default>::default",
    "hash": "1736398929860410553915002009337893474170"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "<sync::atomic::AtomicI8 as convert::From<i8>>::from",
    "hash": "1707428681992920130610831580594323566317"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "<sync::atomic::AtomicI8 as default::Default>::default",
    "hash": "57589688507300327068589576352982655814"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "<sync::atomic::AtomicIsize as convert::From<isize>>::from",
    "hash": "28295594151897961571262534879984396654"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "<sync::atomic::AtomicIsize as default::Default>::default",
    "hash": "41521891838931641323587888787432332472"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "<sync::atomic::AtomicU16 as convert::From<u16>>::from",
    "hash": "124753104211877815084044660962950897723"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "<sync::atomic::AtomicU16 as default::Default>::default",
    "hash": "31411873028829727202807761163569241779"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "<sync::atomic::AtomicU32 as convert::From<u32>>::from",
    "hash": "364179275443483109512333083918089514432"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "<sync::atomic::AtomicU32 as default::Default>::default",
    "hash": "269074034222960076415605119902113754631"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "<sync::atomic::AtomicU64 as convert::From<u64>>::from",
    "hash": "1471678529477754480913690575932109639021"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "<sync::atomic::AtomicU64 as default::Default>::default",
    "hash": "134965097114098770446871089206419494422"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "<sync::atomic::AtomicU8 as convert::From<u8>>::from",
    "hash": "351810933771922520816812111783476777460"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "<sync::atomic::AtomicU8 as default::Default>::default",
    "hash": "106827743666284834081369578136274101892"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "<sync::atomic::AtomicUsize as convert::From<usize>>::from",
    "hash": "4398061324881254741005532742759846956"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "<sync::atomic::AtomicUsize as default::Default>::default",
    "hash": "1420345302248180275816885249229207809886"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "<sync::atomic::Ordering as clone::Clone>::clone",
    "hash": "138806279762024948818653661609024359708"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "<sync::atomic::Ordering as cmp::Eq>::assert_receiver_is_total_eq",
    "hash": "74197694593619435539840984910913147793"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "<sync::atomic::Ordering as cmp::PartialEq>::eq",
    "hash": "1817167665889363590415326472386877373790"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicBool::as_ptr",
    "hash": "121688814344096181017057708891062891331"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicBool::compare_and_swap",
    "hash": "495268567909487488317734646410461089703"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicBool::compare_exchange",
    "hash": "26390982529271784035353113031141869164"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicBool::compare_exchange_weak",
    "hash": "26022529509928354922302895264644774425"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicBool::fetch_and",
    "hash": "11820930757082158272571165899914201268"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicBool::fetch_nand",
    "hash": "90085362725237813472262833885930880"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicBool::fetch_not",
    "hash": "546131849496313178011178244589907773884"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicBool::fetch_or",
    "hash": "14089071085555203616664473404114397517"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicBool::fetch_xor",
    "hash": "58451948492497898931880582248136801712"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicBool::from_mut",
    "hash": "80811973616330115478542452007388027916"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicBool::get_mut",
    "hash": "37634861235939031522440502746263462764"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicBool::into_inner",
    "hash": "15779969696117419224261908141634397317"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicBool::load",
    "hash": "155469962834761107207525044850038410970"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicBool::new",
    "hash": "33523035405396149479057659157941778464"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicBool::store",
    "hash": "1333151912453279659910677642624636164672"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicBool::swap",
    "hash": "1186837886665340036310854247971353381586"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicI16::as_ptr",
    "hash": "1419078730675366892911563600650864918476"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicI16::compare_and_swap",
    "hash": "121320064454801184783440365126132638169"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicI16::compare_exchange",
    "hash": "37430567307082052595825528209650392047"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicI16::compare_exchange_weak",
    "hash": "1371492748664229493612090949414491187412"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicI16::fetch_add",
    "hash": "64988897516445035745480727899481834370"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicI16::fetch_and",
    "hash": "18484636748074723658427884184099969196"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicI16::fetch_max",
    "hash": "93192724635571526085658382893095529232"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicI16::fetch_min",
    "hash": "175676638115857793893178572283678551193"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicI16::fetch_nand",
    "hash": "77690474382400552851242128140949698698"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicI16::fetch_or",
    "hash": "23902724660232160457194914295006622215"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicI16::fetch_sub",
    "hash": "1324490226340447516310100333179322989905"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicI16::fetch_xor",
    "hash": "11470636711978368722954685212372050220"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicI16::from_mut",
    "hash": "1723789239722998781216460616869078018364"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicI16::get_mut",
    "hash": "676477453533957407712493142304348744515"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicI16::into_inner",
    "hash": "785204951124688346410955646439902648531"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicI16::load",
    "hash": "104716995929690193003104393626473249687"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicI16::new",
    "hash": "986957415451136482713009830403201491589"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicI16::store",
    "hash": "717888581738578924110069317319139293850"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicI16::swap",
    "hash": "375098209543940503211283271542752982871"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicI32::as_ptr",
    "hash": "818728509806391825817529137701432406324"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicI32::compare_and_swap",
    "hash": "1617999531088071324415808456404579422943"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicI32::compare_exchange",
    "hash": "7926725214792803511642995705447979947"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicI32::compare_exchange_weak",
    "hash": "169000355801090331110392060018837766387"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicI32::fetch_add",
    "hash": "711164966451023580115018784149879916329"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicI32::fetch_and",
    "hash": "1251998211556398616314846824162748798408"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicI32::fetch_max",
    "hash": "22442579400679854331329387817233042483"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicI32::fetch_min",
    "hash": "1818459317953387955614617294517826815786"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicI32::fetch_nand",
    "hash": "9763269206975887510772468004311067477"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicI32::fetch_or",
    "hash": "1033239767800828825116462307594001743922"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicI32::fetch_sub",
    "hash": "94349056264372843806894976471092349893"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicI32::fetch_xor",
    "hash": "11459211507828451774939986076983194066"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicI32::from_mut",
    "hash": "1073879353432022178115051561096294353971"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicI32::get_mut",
    "hash": "1633521646153876139617634109777685589452"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicI32::into_inner",
    "hash": "1759503621725018742213642086323475709305"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicI32::load",
    "hash": "16946673818752198034395638088730012599"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicI32::new",
    "hash": "11136692658025000874516226607580461967"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicI32::store",
    "hash": "62876349831433065676836413199201221521"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicI32::swap",
    "hash": "1554455700321655919115611824163296998609"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicI64::as_ptr",
    "hash": "704707902129161154412527350835781166153"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicI64::compare_and_swap",
    "hash": "1697458613953236952814580547706906833600"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicI64::compare_exchange",
    "hash": "1733832733862352974710096346696328844487"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicI64::compare_exchange_weak",
    "hash": "36087203248431117608992561805653726856"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicI64::fetch_add",
    "hash": "35644314911279536556664846047715510998"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicI64::fetch_and",
    "hash": "9930490577199163509622320766873217769"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicI64::fetch_max",
    "hash": "1414696993279199736816836075686473954908"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicI64::fetch_min",
    "hash": "90317501772103519926056006873448766669"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicI64::fetch_nand",
    "hash": "6935143408615204613156907516392676477"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicI64::fetch_or",
    "hash": "1464169477697516343518429424360755944097"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicI64::fetch_sub",
    "hash": "85582376586717581457865972543754816837"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicI64::fetch_xor",
    "hash": "529435805698033193915562352770369534508"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicI64::from_mut",
    "hash": "662156085174158255418365342492118034901"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicI64::get_mut",
    "hash": "14678695776173835843925540390981891299"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicI64::into_inner",
    "hash": "556760677060910231116861833313720931749"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicI64::load",
    "hash": "1413899527109456935617169363533748287692"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicI64::new",
    "hash": "4752521342856565415662485293366827079"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicI64::store",
    "hash": "410508706797436465613825952714901944026"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicI64::swap",
    "hash": "163041685000131549372075370957317423896"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicI8::as_ptr",
    "hash": "728866748766286522416739052797954805488"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicI8::compare_and_swap",
    "hash": "523121746659343496011644806676172388635"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicI8::compare_exchange",
    "hash": "125416574086061488353805836756292497428"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicI8::compare_exchange_weak",
    "hash": "127090776717136961922846012668026985146"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicI8::fetch_add",
    "hash": "1474152824308646211710718012080654338266"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicI8::fetch_and",
    "hash": "1566043885775949924211747631176376117983"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicI8::fetch_max",
    "hash": "110421732023908652066123283498708289716"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicI8::fetch_min",
    "hash": "817422171583172345212968906038997819099"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicI8::fetch_nand",
    "hash": "191755408431273412215460911394006755311"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicI8::fetch_or",
    "hash": "3235975657175854897293704430694892550"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicI8::fetch_sub",
    "hash": "74365922762642392454518357315786582512"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicI8::fetch_xor",
    "hash": "57618221898693344768815740647663606190"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicI8::from_mut",
    "hash": "1027504703718032611815576549799660892119"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicI8::get_mut",
    "hash": "694705232408917114711772591225136436539"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicI8::into_inner",
    "hash": "172947635879455153378505996851244485905"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicI8::load",
    "hash": "95904003637497656192771116395128987078"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicI8::new",
    "hash": "40931214082184693007851982044949426101"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicI8::store",
    "hash": "7672292305424018111445055801035080034"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicI8::swap",
    "hash": "134282554867927456031357386390557791887"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicIsize::as_ptr",
    "hash": "11698116301849311137800310202491007423"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicIsize::compare_and_swap",
    "hash": "844765446032258468116419164155223040708"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicIsize::compare_exchange",
    "hash": "833157257571154874616139318634748880420"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicIsize::compare_exchange_weak",
    "hash": "108895303375708432827926197170646080661"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicIsize::fetch_add",
    "hash": "85812796022446865376808678238171078696"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicIsize::fetch_and",
    "hash": "87451747560516307746892782108492088822"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicIsize::fetch_max",
    "hash": "40130648091696848795576973434826885793"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicIsize::fetch_min",
    "hash": "49101064538208331966018613935427103849"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicIsize::fetch_nand",
    "hash": "30007655123453444017881106815368009505"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicIsize::fetch_or",
    "hash": "39932005784468399266099222717046880134"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicIsize::fetch_sub",
    "hash": "1160732512479183274816380177364021254126"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicIsize::fetch_xor",
    "hash": "60481323140480534956509005519061262145"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicIsize::from_mut",
    "hash": "1043735143619129756513111048024698743971"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicIsize::get_mut",
    "hash": "110910190022103526873107061416076978410"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicIsize::into_inner",
    "hash": "1826518533673099606317362324083371351773"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicIsize::load",
    "hash": "177096123008010102387351637821822608570"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicIsize::new",
    "hash": "527124460152914170018373779546327328783"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicIsize::store",
    "hash": "743613149303052524417817298645749318242"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicIsize::swap",
    "hash": "55372734541686723414359537439944858310"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicU16::as_ptr",
    "hash": "30682591868736476407213149352816133598"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicU16::compare_and_swap",
    "hash": "18285879599573203473794552576016940281"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicU16::compare_exchange",
    "hash": "10027175761273936217517070680983592524"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicU16::compare_exchange_weak",
    "hash": "106848754187958826454213243720189037025"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicU16::fetch_add",
    "hash": "3212246963613375729103068861152238457"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicU16::fetch_and",
    "hash": "104304890459222539699125790592270211663"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicU16::fetch_max",
    "hash": "45253645449572809753999755964217672240"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicU16::fetch_min",
    "hash": "155748037515702100716736406674769163971"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicU16::fetch_nand",
    "hash": "1386795177966312566317515272510323216196"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicU16::fetch_or",
    "hash": "18346121264671667975452569349848888335"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicU16::fetch_sub",
    "hash": "8680454662238528651136396537561112081"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicU16::fetch_xor",
    "hash": "79653610977162264915610477373545656144"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicU16::from_mut",
    "hash": "32090640363814255039595183286637243509"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicU16::get_mut",
    "hash": "155993143934539504073302969578630281576"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicU16::into_inner",
    "hash": "1261340381272821407216398948769176999574"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicU16::load",
    "hash": "182688399105696293057164275747504983105"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicU16::new",
    "hash": "593982111087065890617004468856895749945"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicU16::store",
    "hash": "1147049854380302885716901995830119576391"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicU16::swap",
    "hash": "6511491705203383216723778674291409542"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicU32::as_ptr",
    "hash": "53767978268021366376446606688326429321"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicU32::compare_and_swap",
    "hash": "148855901607447163804202756151461184304"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicU32::compare_exchange",
    "hash": "9059829429170152631728246215451927813"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicU32::compare_exchange_weak",
    "hash": "1081349050098156846910115554466191777680"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicU32::fetch_add",
    "hash": "1374880572186991839817975457185196024745"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicU32::fetch_and",
    "hash": "986101375535224823713539365290854873926"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicU32::fetch_max",
    "hash": "95570377315268159441517683252128917256"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicU32::fetch_min",
    "hash": "1127256088300149870114545960232293705044"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicU32::fetch_nand",
    "hash": "1187181785555762883214718294074028255640"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicU32::fetch_or",
    "hash": "65763305500697529382603185927568006302"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicU32::fetch_sub",
    "hash": "40377925203750904781594740234565048400"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicU32::fetch_xor",
    "hash": "24771934218475240565267450157844999403"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicU32::from_mut",
    "hash": "960419908547332716115909011688918749618"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicU32::get_mut",
    "hash": "78026220086790156513608548074331739086"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicU32::into_inner",
    "hash": "52818473178577877591936434524248040807"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicU32::load",
    "hash": "1680046026087955183513546403551944198106"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicU32::new",
    "hash": "766654395100541238413779665826184381431"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicU32::store",
    "hash": "125101702286359086059397496314955320931"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicU32::swap",
    "hash": "145558445333515118283385814202937822455"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicU64::as_ptr",
    "hash": "420516520570976472535067436413136841"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicU64::compare_and_swap",
    "hash": "17913509062402691511611162074555874717"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicU64::compare_exchange",
    "hash": "1066132231578285581312256823118432911756"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicU64::compare_exchange_weak",
    "hash": "148686902639749038807645758019500905147"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicU64::fetch_add",
    "hash": "1835790459729843135818327561814038516827"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicU64::fetch_and",
    "hash": "1465384374140658483511724510913131610333"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicU64::fetch_max",
    "hash": "3831103896660188288796245776704780228"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicU64::fetch_min",
    "hash": "1150633783437361236716140461360444554391"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicU64::fetch_nand",
    "hash": "436049437402553544846758191297333626"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicU64::fetch_or",
    "hash": "340870661771348328211835666536249067966"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicU64::fetch_sub",
    "hash": "1267849043503957911248864083251363864"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicU64::fetch_xor",
    "hash": "180670314061173575316886494916537874899"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicU64::from_mut",
    "hash": "135128033694816506787838163750952533276"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicU64::get_mut",
    "hash": "160337982031081811972498272139706414561"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicU64::into_inner",
    "hash": "449656286855553385114994659684502165311"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicU64::load",
    "hash": "1072671897157902758512066884223785534075"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicU64::new",
    "hash": "43360654074465885714678461137592743426"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicU64::store",
    "hash": "1530193686963550923717932915470332594299"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicU64::swap",
    "hash": "17203229331079432003813301728731073953"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicU8::as_ptr",
    "hash": "120220312933760776618478464247572265236"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicU8::compare_and_swap",
    "hash": "1019825433660975476917645834571660564990"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicU8::compare_exchange",
    "hash": "40019002043824688655563162620682024844"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicU8::compare_exchange_weak",
    "hash": "184335915346297345539683220098604680869"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicU8::fetch_add",
    "hash": "153441055667568304601162364678033589396"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicU8::fetch_and",
    "hash": "79311840312941253991025372008094369551"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicU8::fetch_max",
    "hash": "46522546675665907132643458098106889966"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicU8::fetch_min",
    "hash": "11937705947083650301729784966572003485"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicU8::fetch_nand",
    "hash": "122312372351913376762765465474614008299"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicU8::fetch_or",
    "hash": "7363792441066162839312113093776822953"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicU8::fetch_sub",
    "hash": "1552769196037074288330976018979380857"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicU8::fetch_xor",
    "hash": "95485037723136811151195302734125961132"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicU8::from_mut",
    "hash": "1247969181327273939212476363887889910794"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicU8::get_mut",
    "hash": "163387855011647322878941417528784070571"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicU8::into_inner",
    "hash": "81433395187075411828613185065947528770"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicU8::load",
    "hash": "90302756914638196457966201042927435292"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicU8::new",
    "hash": "91543856378391463789588115338206168957"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicU8::store",
    "hash": "704654041503428006017609980007880200031"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicU8::swap",
    "hash": "56128505594047321901767383111058255560"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicUsize::as_ptr",
    "hash": "124702576971877099375837554442900536610"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicUsize::compare_and_swap",
    "hash": "10951612951586611158166518528392924899"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicUsize::compare_exchange",
    "hash": "1224463907900660363210930964453397019508"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicUsize::compare_exchange_weak",
    "hash": "55000579734007843551113754976541629378"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicUsize::fetch_add",
    "hash": "1683198087505788679313678867881822259920"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicUsize::fetch_and",
    "hash": "55758781501940872114418715094020152972"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicUsize::fetch_max",
    "hash": "875123797524135581218014567745334794585"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicUsize::fetch_min",
    "hash": "1157544699234565935910894035071994662715"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicUsize::fetch_nand",
    "hash": "1486145708429408497711262033032188894456"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicUsize::fetch_or",
    "hash": "926830490517971823817469587855256654050"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicUsize::fetch_sub",
    "hash": "176168077815883709429856913543031005272"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicUsize::fetch_xor",
    "hash": "26059562220086691838856594909126667945"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicUsize::from_mut",
    "hash": "741678053397517627615994233764626258786"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicUsize::get_mut",
    "hash": "2379730687376558756979894620298849304"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicUsize::into_inner",
    "hash": "1042793694367586611415450952773905711899"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicUsize::load",
    "hash": "177774639660793667563390787349157682917"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicUsize::new",
    "hash": "177904128489390464237019893256267109628"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicUsize::store",
    "hash": "21121511309122211562439894067686930110"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicUsize::swap",
    "hash": "11670459246252001369598477621064656753"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::compiler_fence",
    "hash": "61816238058714215121027766931201528575"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::fence",
    "hash": "1142800993023095142010879166427662838664"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::spin_loop_hint",
    "hash": "1677967148543197169916730401772308021018"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::strongest_failure_ordering",
    "hash": "218040197053474425313489559789487598257"
  },
  {
    "crate": "core",
    "file": "core/src/task/wake.rs",
    "func": "task::wake::LocalWaker::noop",
    "hash": "82330340410293162775645493601862073801"
  },
  {
    "crate": "core",
    "file": "core/src/task/wake.rs",
    "func": "task::wake::Waker::noop",
    "hash": "1445662231951511073214825586059219916892"
  },
  {
    "crate": "core",
    "file": "core/src/time.rs",
    "func": "<time::Duration as clone::Clone>::clone",
    "hash": "65687076940585733208123776482047119439"
  },
  {
    "crate": "core",
    "file": "core/src/time.rs",
    "func": "<time::Duration as cmp::Eq>::assert_receiver_is_total_eq",
    "hash": "1642312843313896828910665233548320572284"
  },
  {
    "crate": "core",
    "file": "core/src/time.rs",
    "func": "<time::Duration as cmp::Ord>::cmp",
    "hash": "1165199626710539139113545233094211899683"
  },
  {
    "crate": "core",
    "file": "core/src/time.rs",
    "func": "<time::Duration as cmp::PartialEq>::eq",
    "hash": "267521171001110121813927650328990477890"
  },
  {
    "crate": "core",
    "file": "core/src/time.rs",
    "func": "<time::Duration as cmp::PartialOrd>::partial_cmp",
    "hash": "150181112449824823604762730038611300108"
  },
  {
    "crate": "core",
    "file": "core/src/time.rs",
    "func": "<time::Duration as default::Default>::default",
    "hash": "453018381280335662813148794855191092916"
  },
  {
    "crate": "core",
    "file": "core/src/time.rs",
    "func": "<time::Duration as ops::arith::Add>::add",
    "hash": "1807397645694973176914525926639445420437"
  },
  {
    "crate": "core",
    "file": "core/src/time.rs",
    "func": "<time::Duration as ops::arith::AddAssign>::add_assign",
    "hash": "615853256543703825316135966453766880762"
  },
  {
    "crate": "core",
    "file": "core/src/time.rs",
    "func": "<time::Duration as ops::arith::Div<u32>>::div",
    "hash": "411300156493394040213009748659140730344"
  },
  {
    "crate": "core",
    "file": "core/src/time.rs",
    "func": "<time::Duration as ops::arith::DivAssign<u32>>::div_assign",
    "hash": "671805964524574579012425597170281517345"
  },
  {
    "crate": "core",
    "file": "core/src/time.rs",
    "func": "<time::Duration as ops::arith::Mul<u32>>::mul",
    "hash": "61473297079128190249111170571378167870"
  },
  {
    "crate": "core",
    "file": "core/src/time.rs",
    "func": "<time::Duration as ops::arith::MulAssign<u32>>::mul_assign",
    "hash": "1831971376505432416210598375389560961707"
  },
  {
    "crate": "core",
    "file": "core/src/time.rs",
    "func": "<time::Duration as ops::arith::Sub>::sub",
    "hash": "315663412975943201616714652781245400314"
  },
  {
    "crate": "core",
    "file": "core/src/time.rs",
    "func": "<time::Duration as ops::arith::SubAssign>::sub_assign",
    "hash": "881576710934691556118055220278727842497"
  },
  {
    "crate": "core",
    "file": "core/src/time.rs",
    "func": "<time::Duration as ub_checks::Invariant>::is_safe",
    "hash": "180474675245004396442428784101277594208"
  },
  {
    "crate": "core",
    "file": "core/src/time.rs",
    "func": "<time::TryFromFloatSecsError as clone::Clone>::clone",
    "hash": "155714902894008261069968758999815409878"
  },
  {
    "crate": "core",
    "file": "core/src/time.rs",
    "func": "<time::TryFromFloatSecsError as cmp::Eq>::assert_receiver_is_total_eq",
    "hash": "108545549794693267415403588934678840523"
  },
  {
    "crate": "core",
    "file": "core/src/time.rs",
    "func": "<time::TryFromFloatSecsError as cmp::PartialEq>::eq",
    "hash": "85566024078542249467487241721543527233"
  },
  {
    "crate": "core",
    "file": "core/src/time.rs",
    "func": "<time::TryFromFloatSecsErrorKind as clone::Clone>::clone",
    "hash": "1193007111090462156017855007416548484597"
  },
  {
    "crate": "core",
    "file": "core/src/time.rs",
    "func": "<time::TryFromFloatSecsErrorKind as cmp::Eq>::assert_receiver_is_total_eq",
    "hash": "1709300075504538552510219866853163139900"
  },
  {
    "crate": "core",
    "file": "core/src/time.rs",
    "func": "<time::TryFromFloatSecsErrorKind as cmp::PartialEq>::eq",
    "hash": "1683444906971388816513571978098658055133"
  },
  {
    "crate": "core",
    "file": "core/src/time.rs",
    "func": "time::<impl ops::arith::Mul<time::Duration> for u32>::mul",
    "hash": "134757858353337294792679746416094443741"
  },
  {
    "crate": "core",
    "file": "core/src/time.rs",
    "func": "time::<impl ub_checks::Invariant for num::niche_types::Nanoseconds>::is_safe",
    "hash": "1387437250045095948015001290958816245056"
  },
  {
    "crate": "core",
    "file": "core/src/time.rs",
    "func": "time::Duration::abs_diff",
    "hash": "116954263810349134132223718176997171001"
  },
  {
    "crate": "core",
    "file": "core/src/time.rs",
    "func": "time::Duration::as_micros",
    "hash": "171921515126047144268311416990452632649"
  },
  {
    "crate": "core",
    "file": "core/src/time.rs",
    "func": "time::Duration::as_millis",
    "hash": "100000793487675386821501825190157085887"
  },
  {
    "crate": "core",
    "file": "core/src/time.rs",
    "func": "time::Duration::as_millis_f32",
    "hash": "141002942227316224858513793027844884474"
  },
  {
    "crate": "core",
    "file": "core/src/time.rs",
    "func": "time::Duration::as_millis_f64",
    "hash": "934357889098142548115763611161738786751"
  },
  {
    "crate": "core",
    "file": "core/src/time.rs",
    "func": "time::Duration::as_nanos",
    "hash": "60114808146802583787929726203784515038"
  },
  {
    "crate": "core",
    "file": "core/src/time.rs",
    "func": "time::Duration::as_secs",
    "hash": "1659014498554188890211696833608412047370"
  },
  {
    "crate": "core",
    "file": "core/src/time.rs",
    "func": "time::Duration::as_secs_f32",
    "hash": "1114440411556328721516133651766327815112"
  },
  {
    "crate": "core",
    "file": "core/src/time.rs",
    "func": "time::Duration::as_secs_f64",
    "hash": "133720684161125578617715345542225084468"
  },
  {
    "crate": "core",
    "file": "core/src/time.rs",
    "func": "time::Duration::checked_add",
    "hash": "284128387949002816113471551638072091827"
  },
  {
    "crate": "core",
    "file": "core/src/time.rs",
    "func": "time::Duration::checked_div",
    "hash": "1013430563152782028610988467775782867314"
  },
  {
    "crate": "core",
    "file": "core/src/time.rs",
    "func": "time::Duration::checked_mul",
    "hash": "9688585910281383535425174328085651026"
  },
  {
    "crate": "core",
    "file": "core/src/time.rs",
    "func": "time::Duration::checked_sub",
    "hash": "1433920405377752256017396672932147775099"
  },
  {
    "crate": "core",
    "file": "core/src/time.rs",
    "func": "time::Duration::div_duration_f32",
    "hash": "1110232260748554736017824415199816875307"
  },
  {
    "crate": "core",
    "file": "core/src/time.rs",
    "func": "time::Duration::div_duration_f64",
    "hash": "158908326917692246819187932746211144149"
  },
  {
    "crate": "core",
    "file": "core/src/time.rs",
    "func": "time::Duration::div_f32",
    "hash": "151716805919121203514264206497198603580"
  },
  {
    "crate": "core",
    "file": "core/src/time.rs",
    "func": "time::Duration::div_f64",
    "hash": "148434485886603820997503019780958132997"
  },
  {
    "crate": "core",
    "file": "core/src/time.rs",
    "func": "time::Duration::from_days",
    "hash": "89556180249329041691424059385874639079"
  },
  {
    "crate": "core",
    "file": "core/src/time.rs",
    "func": "time::Duration::from_hours",
    "hash": "668214541815501826812824501992068812044"
  },
  {
    "crate": "core",
    "file": "core/src/time.rs",
    "func": "time::Duration::from_micros",
    "hash": "157594807907575191596823419055473402838"
  },
  {
    "crate": "core",
    "file": "core/src/time.rs",
    "func": "time::Duration::from_millis",
    "hash": "58207925071887701063030211057690369869"
  },
  {
    "crate": "core",
    "file": "core/src/time.rs",
    "func": "time::Duration::from_mins",
    "hash": "2767698577014075749183141505457057841"
  },
  {
    "crate": "core",
    "file": "core/src/time.rs",
    "func": "time::Duration::from_nanos",
    "hash": "1107599233612622532414735567524102315216"
  },
  {
    "crate": "core",
    "file": "core/src/time.rs",
    "func": "time::Duration::from_secs",
    "hash": "1270888124877289178512994789532778292810"
  },
  {
    "crate": "core",
    "file": "core/src/time.rs",
    "func": "time::Duration::from_secs_f32",
    "hash": "388891575106843110510827606811232439027"
  },
  {
    "crate": "core",
    "file": "core/src/time.rs",
    "func": "time::Duration::from_secs_f64",
    "hash": "574610177709897841411135761273079263023"
  },
  {
    "crate": "core",
    "file": "core/src/time.rs",
    "func": "time::Duration::from_weeks",
    "hash": "107686632415754588454502824225580487863"
  },
  {
    "crate": "core",
    "file": "core/src/time.rs",
    "func": "time::Duration::is_zero",
    "hash": "46094910070415885452345372493702010058"
  },
  {
    "crate": "core",
    "file": "core/src/time.rs",
    "func": "time::Duration::mul_f32",
    "hash": "13399076674563569355093373064640533349"
  },
  {
    "crate": "core",
    "file": "core/src/time.rs",
    "func": "time::Duration::mul_f64",
    "hash": "1830907466009426901312613781938765477728"
  },
  {
    "crate": "core",
    "file": "core/src/time.rs",
    "func": "time::Duration::new",
    "hash": "445629137555858319710779389546064274628"
  },
  {
    "crate": "core",
    "file": "core/src/time.rs",
    "func": "time::Duration::saturating_add",
    "hash": "57524623784642714041306551432872957735"
  },
  {
    "crate": "core",
    "file": "core/src/time.rs",
    "func": "time::Duration::saturating_mul",
    "hash": "14899978615053474291138160349398771011"
  },
  {
    "crate": "core",
    "file": "core/src/time.rs",
    "func": "time::Duration::saturating_sub",
    "hash": "9078285433941149410705950290266266544"
  },
  {
    "crate": "core",
    "file": "core/src/time.rs",
    "func": "time::Duration::subsec_micros",
    "hash": "87611641764898118201282587546112836502"
  },
  {
    "crate": "core",
    "file": "core/src/time.rs",
    "func": "time::Duration::subsec_millis",
    "hash": "904367348727387485018334575969068626662"
  },
  {
    "crate": "core",
    "file": "core/src/time.rs",
    "func": "time::Duration::subsec_nanos",
    "hash": "147433920776635151716580362830267935059"
  },
  {
    "crate": "core",
    "file": "core/src/time.rs",
    "func": "time::Duration::try_from_secs_f32",
    "hash": "165043071537880650984840015858223945489"
  },
  {
    "crate": "core",
    "file": "core/src/time.rs",
    "func": "time::Duration::try_from_secs_f64",
    "hash": "1231573151174306750412967197158498025736"
  },
  {
    "crate": "core",
    "file": "core/src/time.rs",
    "func": "time::TryFromFloatSecsError::description",
    "hash": "247677837715132856214705198943614511338"
  },
  {
    "crate": "core",
    "file": "core/src/time.rs",
    "func": "time::duration_verify::duration_as_micros",
    "hash": "24032650011884665553063138032386268474",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/time.rs",
    "func": "time::duration_verify::duration_as_micros_panics",
    "hash": "73274360694420926218325686423224371603",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/time.rs",
    "func": "time::duration_verify::duration_as_millis",
    "hash": "130754257419019525447713432538352457077",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/time.rs",
    "func": "time::duration_verify::duration_as_millis_panics",
    "hash": "21682748304323343855870948890664310",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/time.rs",
    "func": "time::duration_verify::duration_as_nanos",
    "hash": "1185937589382237411612489858270816146481",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/time.rs",
    "func": "time::duration_verify::duration_as_nanos_panics",
    "hash": "105680976051452442578975160958070452709",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/time.rs",
    "func": "time::duration_verify::duration_as_secs",
    "hash": "1239652991017853619811231539940453518588",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/time.rs",
    "func": "time::duration_verify::duration_as_secs_panics",
    "hash": "677924583914976386013802192500063009078",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/time.rs",
    "func": "time::duration_verify::duration_checked_add",
    "hash": "933769990031030968014928496753743310796",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/time.rs",
    "func": "time::duration_verify::duration_checked_add_panics",
    "hash": "5085903098080784532204615448307172689",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/time.rs",
    "func": "time::duration_verify::duration_checked_div",
    "hash": "138508351488592534085000542851076909318",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/time.rs",
    "func": "time::duration_verify::duration_checked_div_panics",
    "hash": "510769620908079552317040797701835062536",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/time.rs",
    "func": "time::duration_verify::duration_checked_mul",
    "hash": "57028450371102927615027865074706821449",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/time.rs",
    "func": "time::duration_verify::duration_checked_mul_panics",
    "hash": "303455185404433330112168443793647889817",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/time.rs",
    "func": "time::duration_verify::duration_checked_sub",
    "hash": "156734483664464410485959691022008247444",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/time.rs",
    "func": "time::duration_verify::duration_checked_sub_panics",
    "hash": "864601098039887415314697391093785934245",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/time.rs",
    "func": "time::duration_verify::duration_new",
    "hash": "16864442674108339021379128426610227693",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/time.rs",
    "func": "time::duration_verify::duration_new_panics",
    "hash": "470736469963113839015393431542674536976",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/time.rs",
    "func": "time::duration_verify::duration_subsec_micros",
    "hash": "101015222677730901444748472242300653852",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/time.rs",
    "func": "time::duration_verify::duration_subsec_micros_panics",
    "hash": "121171733927459007038158297618151979899",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/time.rs",
    "func": "time::duration_verify::duration_subsec_millis",
    "hash": "173569358325511351953481344080578773277",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/time.rs",
    "func": "time::duration_verify::duration_subsec_millis_panics",
    "hash": "1473304332141265999210035939062810237195",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/time.rs",
    "func": "time::duration_verify::duration_subsec_nanos",
    "hash": "129935659117018982215861971864078628121",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/time.rs",
    "func": "time::duration_verify::duration_subsec_nanos_panics",
    "hash": "172910506553707286048737803994781328758",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/time.rs",
    "func": "time::duration_verify::safe_duration",
    "hash": "65107845906220074407967125727996908135"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "<() as ub_checks::Invariant>::is_safe",
    "hash": "54229515427671017203573246548975151329"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "<bool as ub_checks::Invariant>::is_safe",
    "hash": "182722051273606271987746517691852152938"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "<char as ub_checks::Invariant>::is_safe",
    "hash": "1081562602022881188015408144074574949189"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "<f128 as ub_checks::Invariant>::is_safe",
    "hash": "127228044158492861747752718659586352270"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "<f16 as ub_checks::Invariant>::is_safe",
    "hash": "105748599607233514519553006644461093268"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "<f32 as ub_checks::Invariant>::is_safe",
    "hash": "120767812080352783216107881982502785135"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "<f64 as ub_checks::Invariant>::is_safe",
    "hash": "1806276576190033820011008268836508626484"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "<i128 as ub_checks::Invariant>::is_safe",
    "hash": "916483211580342228710324704543716633888"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "<i16 as ub_checks::Invariant>::is_safe",
    "hash": "1538333059248075123817032651458329291536"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "<i32 as ub_checks::Invariant>::is_safe",
    "hash": "170476200549671209213763477215045762164"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "<i64 as ub_checks::Invariant>::is_safe",
    "hash": "73620221259828008709094330883095046370"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "<i8 as ub_checks::Invariant>::is_safe",
    "hash": "401681340604920745717635283291834687048"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "<isize as ub_checks::Invariant>::is_safe",
    "hash": "515005617658304496815492393738995269543"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "<ops::index_range::IndexRange as slice::index::SliceIndex<[T]>>::get_unchecked::precondition_check",
    "hash": "527301041467884922111309565656307235599"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "<ops::index_range::IndexRange as slice::index::SliceIndex<[T]>>::get_unchecked_mut::precondition_check",
    "hash": "98672616218528724113768882390038008401"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "<ops::range::Range<usize> as slice::index::SliceIndex<[T]>>::get_unchecked::precondition_check",
    "hash": "87977286206191110206643684053945734595"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "<ops::range::Range<usize> as slice::index::SliceIndex<[T]>>::get_unchecked_mut::precondition_check",
    "hash": "84580457401506839910573102725714505987"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "<u128 as ub_checks::Invariant>::is_safe",
    "hash": "94118465921562944226287477600564225099"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "<u16 as ub_checks::Invariant>::is_safe",
    "hash": "70720233014418988245990419244415294484"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "<u32 as ub_checks::Invariant>::is_safe",
    "hash": "31561592644670893263830489280600757704"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "<u64 as ub_checks::Invariant>::is_safe",
    "hash": "2706062861711493498336665932180657436"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "<u8 as ub_checks::Invariant>::is_safe",
    "hash": "1002077497726722440517247562423742030908"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "<usize as slice::index::SliceIndex<[T]>>::get_unchecked::precondition_check",
    "hash": "154911443990380340341563367924870465980"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "<usize as slice::index::SliceIndex<[T]>>::get_unchecked_mut::precondition_check",
    "hash": "1504286091581735299715570781132246701377"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "<usize as ub_checks::Invariant>::is_safe",
    "hash": "922315106903690419814131998191411440948"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "alloc::layout::Layout::from_size_align_unchecked::precondition_check",
    "hash": "1760813677608613135410547518143088093737"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "ascii::ascii_char::AsciiChar::digit_unchecked::precondition_check",
    "hash": "159594069581531789011709166901887061080"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "char::convert::from_u32_unchecked::precondition_check",
    "hash": "69521336164211208533737404575105193630"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "char::methods::<impl char>::as_ascii_unchecked::precondition_check",
    "hash": "54503986970663360841733369066593556777"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "hint::assert_unchecked::precondition_check",
    "hash": "36990817497430174858508344623774643994"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "hint::unreachable_unchecked::precondition_check",
    "hash": "819756211280848030917202637728825520633"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i128>::unchecked_add::precondition_check",
    "hash": "133766920549549490659623408445996119751"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i128>::unchecked_exact_div::precondition_check",
    "hash": "140053282955632087949926745757384563080"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i128>::unchecked_mul::precondition_check",
    "hash": "1469909753193172213314028691601265090986"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i128>::unchecked_neg::precondition_check",
    "hash": "3082293996786252513731028579330838818"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i128>::unchecked_shl::precondition_check",
    "hash": "1657798738087311450115783259637549226711"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i128>::unchecked_shr::precondition_check",
    "hash": "131328674691359871116681549835261530361"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i128>::unchecked_sub::precondition_check",
    "hash": "81633776187591808872036268401401716901"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i16>::unchecked_add::precondition_check",
    "hash": "806131165050320445310179530619877262345"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i16>::unchecked_exact_div::precondition_check",
    "hash": "1410182775427917740715776265093728877177"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i16>::unchecked_mul::precondition_check",
    "hash": "12894190745995516968698765267541051168"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i16>::unchecked_neg::precondition_check",
    "hash": "1491110106495433116917204027046851890138"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i16>::unchecked_shl::precondition_check",
    "hash": "1162456852136047638211509770553152050510"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i16>::unchecked_shr::precondition_check",
    "hash": "1481655942866353124310385845303752921992"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i16>::unchecked_sub::precondition_check",
    "hash": "1346126849480088012115499202193540715741"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i32>::unchecked_add::precondition_check",
    "hash": "17400495601521982993499986752535783705"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i32>::unchecked_exact_div::precondition_check",
    "hash": "66702803668356435557686785812251209281"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i32>::unchecked_mul::precondition_check",
    "hash": "1622232199937839224417872658774436198374"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i32>::unchecked_neg::precondition_check",
    "hash": "841902495954312320214421277768169682730"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i32>::unchecked_shl::precondition_check",
    "hash": "156646957869108331767647906639138667729"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i32>::unchecked_shr::precondition_check",
    "hash": "504651881991992954413313747082477880343"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i32>::unchecked_sub::precondition_check",
    "hash": "1568626614280727579713604874833472230964"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i64>::unchecked_add::precondition_check",
    "hash": "156570311665783640859619579091889601196"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i64>::unchecked_exact_div::precondition_check",
    "hash": "778384359852230924915925009231475325354"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i64>::unchecked_mul::precondition_check",
    "hash": "7597273261150882663304400157845609778"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i64>::unchecked_neg::precondition_check",
    "hash": "1710128757318667183116296886299703045301"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i64>::unchecked_shl::precondition_check",
    "hash": "1689551726944794270917719645960362712718"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i64>::unchecked_shr::precondition_check",
    "hash": "81709744508264695832291746732779666361"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i64>::unchecked_sub::precondition_check",
    "hash": "604649979726234968913958533125739027755"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i8>::unchecked_add::precondition_check",
    "hash": "45944846796543479231641148129754398740"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i8>::unchecked_exact_div::precondition_check",
    "hash": "1375698885377411681814937754367363426809"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i8>::unchecked_mul::precondition_check",
    "hash": "1460467987754692112312874776242428253647"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i8>::unchecked_neg::precondition_check",
    "hash": "395592675038774770013598937295557246643"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i8>::unchecked_shl::precondition_check",
    "hash": "182551583568103597921752644924577592178"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i8>::unchecked_shr::precondition_check",
    "hash": "51587526898756312557737288908295266658"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i8>::unchecked_sub::precondition_check",
    "hash": "836231763063752950413986841249920389316"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl isize>::unchecked_add::precondition_check",
    "hash": "47287081162402398181330160230496515082"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl isize>::unchecked_exact_div::precondition_check",
    "hash": "29519066195114564625665291378094414680"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl isize>::unchecked_mul::precondition_check",
    "hash": "78386822002233049833396283352087037148"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl isize>::unchecked_neg::precondition_check",
    "hash": "168503001671177803527283064745478359906"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl isize>::unchecked_shl::precondition_check",
    "hash": "108590489368359067761336484056843713022"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl isize>::unchecked_shr::precondition_check",
    "hash": "50208239606484712353012849930505019799"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl isize>::unchecked_sub::precondition_check",
    "hash": "778159544538061083013804952737482828243"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u128>::unchecked_add::precondition_check",
    "hash": "163148826668577235256619230940186403321"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u128>::unchecked_disjoint_bitor::precondition_check",
    "hash": "27841321022414127917415378710322550801"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u128>::unchecked_exact_div::precondition_check",
    "hash": "1125623258189995919112491199670566654762"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u128>::unchecked_mul::precondition_check",
    "hash": "1710762945302742082115183891996689865913"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u128>::unchecked_shl::precondition_check",
    "hash": "181801328901789455604767693867411520874"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u128>::unchecked_shr::precondition_check",
    "hash": "100618884426497909071659007619361392214"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u128>::unchecked_sub::precondition_check",
    "hash": "91381588508856582715397419885575896761"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u16>::unchecked_add::precondition_check",
    "hash": "74873526321819745033769428163236242635"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u16>::unchecked_disjoint_bitor::precondition_check",
    "hash": "103164159036458528357404844770616059403"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u16>::unchecked_exact_div::precondition_check",
    "hash": "36775589870609999574630323175614485715"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u16>::unchecked_mul::precondition_check",
    "hash": "177798370559714838037304841610418819277"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u16>::unchecked_shl::precondition_check",
    "hash": "155420148279275538916514979980920360846"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u16>::unchecked_shr::precondition_check",
    "hash": "212489268390235045610262152817982631987"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u16>::unchecked_sub::precondition_check",
    "hash": "138570804554569260142701135807039347104"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u32>::unchecked_add::precondition_check",
    "hash": "457325283005374701813963460777269380260"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u32>::unchecked_disjoint_bitor::precondition_check",
    "hash": "18361363055580314717858947133889219989"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u32>::unchecked_exact_div::precondition_check",
    "hash": "154790195821760794805279121861316108838"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u32>::unchecked_mul::precondition_check",
    "hash": "111270530970055299202169724166776031531"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u32>::unchecked_shl::precondition_check",
    "hash": "158598296012219072236035647311494690325"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u32>::unchecked_shr::precondition_check",
    "hash": "31480296979403710578030409593091809034"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u32>::unchecked_sub::precondition_check",
    "hash": "1286996852961180711511171993345139674249"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u64>::unchecked_add::precondition_check",
    "hash": "58136268519369051557906741353151879024"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u64>::unchecked_disjoint_bitor::precondition_check",
    "hash": "709826181128795411818056733795224611827"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u64>::unchecked_exact_div::precondition_check",
    "hash": "121167285811907919964342795290425478780"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u64>::unchecked_mul::precondition_check",
    "hash": "178848669902338749702117678264551049262"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u64>::unchecked_shl::precondition_check",
    "hash": "201774631661856202013381004016496631198"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u64>::unchecked_shr::precondition_check",
    "hash": "165398268329182761184751536684082931891"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u64>::unchecked_sub::precondition_check",
    "hash": "49777658654892303092388242276649428491"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u8>::as_ascii_unchecked::precondition_check",
    "hash": "60862708504990940004958112708298831718"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u8>::unchecked_add::precondition_check",
    "hash": "34565924575581399546956747772678869325"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u8>::unchecked_disjoint_bitor::precondition_check",
    "hash": "276250861934080682717276535927125169336"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u8>::unchecked_exact_div::precondition_check",
    "hash": "154674579904830098422313354031763454328"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u8>::unchecked_mul::precondition_check",
    "hash": "100757218646964255889191815973534041911"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u8>::unchecked_shl::precondition_check",
    "hash": "98982571292783644661110864542595864621"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u8>::unchecked_shr::precondition_check",
    "hash": "990593185884618576816647413471000747592"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u8>::unchecked_sub::precondition_check",
    "hash": "179374650818765032092032197298700179052"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl usize>::unchecked_add::precondition_check",
    "hash": "1737046666080539081914974966237099365643"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl usize>::unchecked_disjoint_bitor::precondition_check",
    "hash": "835455139535964113433539281301462210"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl usize>::unchecked_exact_div::precondition_check",
    "hash": "16460669162202369407055553592149826562"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl usize>::unchecked_mul::precondition_check",
    "hash": "156599039188847013311269885791318141698"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl usize>::unchecked_shl::precondition_check",
    "hash": "862641577329016307311699360477648979847"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl usize>::unchecked_shr::precondition_check",
    "hash": "88418661938236985509404219201048959711"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl usize>::unchecked_sub::precondition_check",
    "hash": "621698472431332816417792581602959129152"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "num::nonzero::NonZero::<T>::from_mut_unchecked::precondition_check",
    "hash": "947925086076299054212540105876296384566"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "num::nonzero::NonZero::<T>::new_unchecked::precondition_check",
    "hash": "887235042902537721816254572592014930578"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "ops::index_range::IndexRange::new_unchecked::precondition_check",
    "hash": "719065370181632267310362651566044974881"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "ptr::alignment::Alignment::new_unchecked::precondition_check",
    "hash": "44273188019629847143382182489279089772"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "slice::<impl [T]>::as_chunks_unchecked::precondition_check",
    "hash": "41876326851953352365755493579635515678"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "slice::<impl [T]>::as_chunks_unchecked_mut::precondition_check",
    "hash": "12649498149084420064290351342307300037"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "slice::<impl [T]>::split_at_mut_unchecked::precondition_check",
    "hash": "1262268302406396300513565250820649213634"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "slice::<impl [T]>::split_at_unchecked::precondition_check",
    "hash": "56448737519681294968960799914289695112"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "slice::<impl [T]>::swap_unchecked::precondition_check",
    "hash": "74402658018052786310281099043124569565"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "str::traits::<impl slice::index::SliceIndex<str> for ops::range::Range<usize>>::get_unchecked::precondition_check",
    "hash": "151177604553563121726407199103432119959"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "str::traits::<impl slice::index::SliceIndex<str> for ops::range::Range<usize>>::get_unchecked_mut::precondition_check",
    "hash": "124410959810549361578538764137673623205"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "str::traits::<impl slice::index::SliceIndex<str> for range::Range<usize>>::get_unchecked::precondition_check",
    "hash": "1129281868751164994310653221266111116623"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "str::traits::<impl slice::index::SliceIndex<str> for range::Range<usize>>::get_unchecked_mut::precondition_check",
    "hash": "36629814751342447939025170327808884335"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "ub_checks::check_language_ub",
    "hash": "739520556846959085018120036998133255835"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "ub_checks::is_valid_allocation_size",
    "hash": "154579918799348646172273891119983850679"
  },
  {
    "crate": "core",
    "file": "core/src/unicode/printable.rs",
    "func": "unicode::printable::is_printable",
    "hash": "170795842381998578997143629063808616558"
  },
  {
    "crate": "core",
    "file": "core/src/unicode/unicode_data.rs",
    "func": "unicode::unicode_data::ShortOffsetRunHeader::new",
    "hash": "573025224078501084417397699761968621329"
  },
  {
    "crate": "core",
    "file": "core/src/unicode/unicode_data.rs",
    "func": "unicode::unicode_data::ShortOffsetRunHeader::prefix_sum",
    "hash": "921093343429125213217757377270116064946"
  },
  {
    "crate": "core",
    "file": "core/src/unicode/unicode_data.rs",
    "func": "unicode::unicode_data::ShortOffsetRunHeader::start_index",
    "hash": "156172685843180766086305544173360207623"
  },
  {
    "crate": "core",
    "file": "core/src/unicode/unicode_data.rs",
    "func": "unicode::unicode_data::alphabetic::lookup",
    "hash": "136637138707949076716234603208816978787"
  },
  {
    "crate": "core",
    "file": "core/src/unicode/unicode_data.rs",
    "func": "unicode::unicode_data::case_ignorable::lookup",
    "hash": "1175651850800204661111323326679560961181"
  },
  {
    "crate": "core",
    "file": "core/src/unicode/unicode_data.rs",
    "func": "unicode::unicode_data::cased::lookup",
    "hash": "1109964589100732253410473395224721521218"
  },
  {
    "crate": "core",
    "file": "core/src/unicode/unicode_data.rs",
    "func": "unicode::unicode_data::cc::lookup",
    "hash": "88989621575820047986191628067210771448"
  },
  {
    "crate": "core",
    "file": "core/src/unicode/unicode_data.rs",
    "func": "unicode::unicode_data::conversions::to_lower",
    "hash": "159312031266978601162837779871391941787"
  },
  {
    "crate": "core",
    "file": "core/src/unicode/unicode_data.rs",
    "func": "unicode::unicode_data::conversions::to_upper",
    "hash": "317430207323048006018375930849199379895"
  },
  {
    "crate": "core",
    "file": "core/src/unicode/unicode_data.rs",
    "func": "unicode::unicode_data::grapheme_extend::lookup",
    "hash": "125397566146197709579397066900979834789"
  },
  {
    "crate": "core",
    "file": "core/src/unicode/unicode_data.rs",
    "func": "unicode::unicode_data::grapheme_extend::lookup_slow",
    "hash": "1677612662477463552218126228755005480790"
  },
  {
    "crate": "core",
    "file": "core/src/unicode/unicode_data.rs",
    "func": "unicode::unicode_data::lowercase::lookup",
    "hash": "1295295995959939682911629885029289120022"
  },
  {
    "crate": "core",
    "file": "core/src/unicode/unicode_data.rs",
    "func": "unicode::unicode_data::n::lookup",
    "hash": "1471720352419402924916144618113551535225"
  },
  {
    "crate": "core",
    "file": "core/src/unicode/unicode_data.rs",
    "func": "unicode::unicode_data::uppercase::lookup",
    "hash": "27751135206893019682553982410286818538"
  },
  {
    "crate": "core",
    "file": "core/src/unicode/unicode_data.rs",
    "func": "unicode::unicode_data::white_space::lookup",
    "hash": "89347776969484683885451283756595935835"
  },
  {
    "crate": "core",
    "file": "core/src/unit.rs",
    "func": "<() as unit::IsUnit>::is_unit",
    "hash": "60009806958671010299771237522837022530"
  }
]