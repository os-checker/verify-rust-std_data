[
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/addr2line-0.25.0/src/line.rs",
    "func": "line::LazyLines::new"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/adler2-2.0.1/src/algo.rs",
    "func": "algo::U32X4"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/adler2-2.0.1/src/lib.rs",
    "func": "<Adler32 as rustc_std_workspace_core::default::Default>::default"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/adler2-2.0.1/src/lib.rs",
    "func": "Adler32::from_checksum"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/adler2-2.0.1/src/lib.rs",
    "func": "Adler32::new"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/common.rs",
    "func": "<common::DwarfFileType as rustc_std_workspace_core::default::Default>::default"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/common.rs",
    "func": "<common::LineEncoding as rustc_std_workspace_core::default::Default>::default"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/common.rs",
    "func": "common::DebugTypeSignature"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/common.rs",
    "func": "common::DwoId"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/common.rs",
    "func": "common::Register"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "constants::DwAccess"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "constants::DwAddr"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "constants::DwAt"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "constants::DwAte"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "constants::DwCc"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "constants::DwCfa"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "constants::DwChildren"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "constants::DwDefaulted"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "constants::DwDs"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "constants::DwDsc"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "constants::DwEhPe"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "constants::DwEnd"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "constants::DwForm"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "constants::DwId"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "constants::DwIdx"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "constants::DwInl"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "constants::DwLang"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "constants::DwLle"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "constants::DwLnct"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "constants::DwLne"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "constants::DwLns"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "constants::DwMacinfo"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "constants::DwMacro"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "constants::DwOp"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "constants::DwOrd"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "constants::DwRle"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "constants::DwSect"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "constants::DwSectV2"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "constants::DwTag"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "constants::DwUt"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "constants::DwVirtuality"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "constants::DwVis"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/endianity.rs",
    "func": "<endianity::BigEndian as rustc_std_workspace_core::default::Default>::default"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/endianity.rs",
    "func": "<endianity::LittleEndian as rustc_std_workspace_core::default::Default>::default"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/endianity.rs",
    "func": "<endianity::RunTimeEndian as rustc_std_workspace_core::default::Default>::default"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/leb128.rs",
    "func": "leb128::low_bits_of_byte"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/leb128.rs",
    "func": "leb128::low_bits_of_u64"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/abbrev.rs",
    "func": "<read::abbrev::Abbreviations as rustc_std_workspace_core::default::Default>::default"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/abbrev.rs",
    "func": "<read::abbrev::AbbreviationsCache as rustc_std_workspace_core::default::Default>::default"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/abbrev.rs",
    "func": "read::abbrev::Abbreviations::empty"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/abbrev.rs",
    "func": "read::abbrev::AbbreviationsCache::new"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/abbrev.rs",
    "func": "read::abbrev::Attributes::new"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/cfi.rs",
    "func": "<read::cfi::Augmentation as rustc_std_workspace_core::default::Default>::default"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/cfi.rs",
    "func": "<read::cfi::AugmentationData as rustc_std_workspace_core::default::Default>::default"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/cfi.rs",
    "func": "<read::cfi::BaseAddresses as rustc_std_workspace_core::default::Default>::default"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/cfi.rs",
    "func": "<read::cfi::Pointer as rustc_std_workspace_core::default::Default>::default"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/cfi.rs",
    "func": "<read::cfi::SectionBaseAddresses as rustc_std_workspace_core::default::Default>::default"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/cfi.rs",
    "func": "read::cfi::Pointer::Direct"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/cfi.rs",
    "func": "read::cfi::Pointer::Indirect"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/endian_slice.rs",
    "func": "read::endian_slice::DebugByte"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/endian_slice.rs",
    "func": "read::endian_slice::DebugLen"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/line.rs",
    "func": "read::line::ColumnType::Column"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/lists.rs",
    "func": "<read::lists::ListsHeader as rustc_std_workspace_core::default::Default>::default"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/mod.rs",
    "func": "read::<impl common::Register>::from_u64"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/mod.rs",
    "func": "read::Error::BadBranchTarget"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/mod.rs",
    "func": "read::Error::InvalidDerefSize"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/mod.rs",
    "func": "read::Error::InvalidExpressionTerminator"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/mod.rs",
    "func": "read::Error::UnknownAbbreviation"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/mod.rs",
    "func": "read::Error::UnknownVersion"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/mod.rs",
    "func": "read::Error::UnsupportedAddressSize"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/mod.rs",
    "func": "read::Error::UnsupportedFieldSize"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/mod.rs",
    "func": "read::Error::UnsupportedOffsetSize"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/mod.rs",
    "func": "read::Error::UnsupportedRegister"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/reader.rs",
    "func": "<u32 as read::reader::ReaderOffset>::checked_sub"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/reader.rs",
    "func": "<u32 as read::reader::ReaderOffset>::from_i16"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/reader.rs",
    "func": "<u32 as read::reader::ReaderOffset>::from_u16"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/reader.rs",
    "func": "<u32 as read::reader::ReaderOffset>::from_u32"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/reader.rs",
    "func": "<u32 as read::reader::ReaderOffset>::from_u64"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/reader.rs",
    "func": "<u32 as read::reader::ReaderOffset>::from_u8"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/reader.rs",
    "func": "<u32 as read::reader::ReaderOffset>::into_u64"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/reader.rs",
    "func": "<u32 as read::reader::ReaderOffset>::wrapping_add"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/reader.rs",
    "func": "<u64 as read::reader::ReaderAddress>::add_sized"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/reader.rs",
    "func": "<u64 as read::reader::ReaderAddress>::ones_sized"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/reader.rs",
    "func": "<u64 as read::reader::ReaderAddress>::wrapping_add_sized"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/reader.rs",
    "func": "<u64 as read::reader::ReaderOffset>::checked_sub"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/reader.rs",
    "func": "<u64 as read::reader::ReaderOffset>::from_i16"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/reader.rs",
    "func": "<u64 as read::reader::ReaderOffset>::from_u16"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/reader.rs",
    "func": "<u64 as read::reader::ReaderOffset>::from_u32"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/reader.rs",
    "func": "<u64 as read::reader::ReaderOffset>::from_u64"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/reader.rs",
    "func": "<u64 as read::reader::ReaderOffset>::from_u8"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/reader.rs",
    "func": "<u64 as read::reader::ReaderOffset>::into_u64"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/reader.rs",
    "func": "<u64 as read::reader::ReaderOffset>::wrapping_add"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/reader.rs",
    "func": "<usize as read::reader::ReaderOffset>::checked_sub"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/reader.rs",
    "func": "<usize as read::reader::ReaderOffset>::from_i16"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/reader.rs",
    "func": "<usize as read::reader::ReaderOffset>::from_u16"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/reader.rs",
    "func": "<usize as read::reader::ReaderOffset>::from_u32"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/reader.rs",
    "func": "<usize as read::reader::ReaderOffset>::from_u64"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/reader.rs",
    "func": "<usize as read::reader::ReaderOffset>::from_u8"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/reader.rs",
    "func": "<usize as read::reader::ReaderOffset>::into_u64"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/reader.rs",
    "func": "<usize as read::reader::ReaderOffset>::wrapping_add"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/reader.rs",
    "func": "read::reader::ReaderOffsetId"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/value.rs",
    "func": "read::value::Value::F32"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/value.rs",
    "func": "read::value::Value::F64"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/value.rs",
    "func": "read::value::Value::Generic"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/value.rs",
    "func": "read::value::Value::I16"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/value.rs",
    "func": "read::value::Value::I32"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/value.rs",
    "func": "read::value::Value::I64"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/value.rs",
    "func": "read::value::Value::I8"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/value.rs",
    "func": "read::value::Value::U16"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/value.rs",
    "func": "read::value::Value::U32"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/value.rs",
    "func": "read::value::Value::U64"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/value.rs",
    "func": "read::value::Value::U8"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/value.rs",
    "func": "read::value::mask_bit_size"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/value.rs",
    "func": "read::value::sign_extend"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/hashbrown-0.15.4/src/control/bitmask.rs",
    "func": "control::bitmask::BitMask"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/hashbrown-0.15.4/src/control/bitmask.rs",
    "func": "control::bitmask::BitMask::nonzero_trailing_zeros"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/hashbrown-0.15.4/src/control/group/sse2.rs",
    "func": "control::group::sse2::Group::static_empty"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/hashbrown-0.15.4/src/control/tag.rs",
    "func": "control::tag::Tag"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/hashbrown-0.15.4/src/control/tag.rs",
    "func": "control::tag::Tag::full"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/hashbrown-0.15.4/src/map.rs",
    "func": "map::assert_covariance"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/hashbrown-0.15.4/src/raw/mod.rs",
    "func": "raw::RawTableInner::new"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/hashbrown-0.15.4/src/raw/mod.rs",
    "func": "raw::bucket_mask_to_capacity"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/hashbrown-0.15.4/src/raw/mod.rs",
    "func": "raw::h1"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/hashbrown-0.15.4/src/set.rs",
    "func": "set::assert_covariance"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.172/src/macros.rs",
    "func": "unix::htonl"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.172/src/macros.rs",
    "func": "unix::htons"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.172/src/macros.rs",
    "func": "unix::linux_like::CMSG_ALIGN"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.172/src/macros.rs",
    "func": "unix::linux_like::CMSG_LEN"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.172/src/macros.rs",
    "func": "unix::linux_like::CMSG_SPACE"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.172/src/macros.rs",
    "func": "unix::linux_like::IPOPT_CLASS"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.172/src/macros.rs",
    "func": "unix::linux_like::IPOPT_COPIED"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.172/src/macros.rs",
    "func": "unix::linux_like::IPOPT_NUMBER"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.172/src/macros.rs",
    "func": "unix::linux_like::IPTOS_ECN"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.172/src/macros.rs",
    "func": "unix::linux_like::KERNEL_VERSION"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.172/src/macros.rs",
    "func": "unix::linux_like::QCMD"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.172/src/macros.rs",
    "func": "unix::linux_like::SIGRTMAX"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.172/src/macros.rs",
    "func": "unix::linux_like::SIGRTMIN"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.172/src/macros.rs",
    "func": "unix::linux_like::WCOREDUMP"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.172/src/macros.rs",
    "func": "unix::linux_like::WEXITSTATUS"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.172/src/macros.rs",
    "func": "unix::linux_like::WIFCONTINUED"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.172/src/macros.rs",
    "func": "unix::linux_like::WIFEXITED"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.172/src/macros.rs",
    "func": "unix::linux_like::WIFSIGNALED"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.172/src/macros.rs",
    "func": "unix::linux_like::WIFSTOPPED"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.172/src/macros.rs",
    "func": "unix::linux_like::WSTOPSIG"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.172/src/macros.rs",
    "func": "unix::linux_like::WTERMSIG"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.172/src/macros.rs",
    "func": "unix::linux_like::W_EXITCODE"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.172/src/macros.rs",
    "func": "unix::linux_like::W_STOPCODE"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.172/src/macros.rs",
    "func": "unix::linux_like::linux::BPF_CLASS"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.172/src/macros.rs",
    "func": "unix::linux_like::linux::BPF_JUMP"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.172/src/macros.rs",
    "func": "unix::linux_like::linux::BPF_MISCOP"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.172/src/macros.rs",
    "func": "unix::linux_like::linux::BPF_MODE"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.172/src/macros.rs",
    "func": "unix::linux_like::linux::BPF_OP"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.172/src/macros.rs",
    "func": "unix::linux_like::linux::BPF_RVAL"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.172/src/macros.rs",
    "func": "unix::linux_like::linux::BPF_SIZE"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.172/src/macros.rs",
    "func": "unix::linux_like::linux::BPF_SRC"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.172/src/macros.rs",
    "func": "unix::linux_like::linux::BPF_STMT"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.172/src/macros.rs",
    "func": "unix::linux_like::linux::CPU_ALLOC_SIZE"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.172/src/macros.rs",
    "func": "unix::linux_like::linux::ELF32_R_INFO"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.172/src/macros.rs",
    "func": "unix::linux_like::linux::ELF32_R_SYM"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.172/src/macros.rs",
    "func": "unix::linux_like::linux::ELF32_R_TYPE"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.172/src/macros.rs",
    "func": "unix::linux_like::linux::ELF64_R_INFO"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.172/src/macros.rs",
    "func": "unix::linux_like::linux::ELF64_R_SYM"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.172/src/macros.rs",
    "func": "unix::linux_like::linux::ELF64_R_TYPE"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.172/src/macros.rs",
    "func": "unix::linux_like::linux::IPTOS_PREC"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.172/src/macros.rs",
    "func": "unix::linux_like::linux::IPTOS_TOS"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.172/src/macros.rs",
    "func": "unix::linux_like::linux::NLA_ALIGN"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.172/src/macros.rs",
    "func": "unix::linux_like::linux::RT_ADDRCLASS"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.172/src/macros.rs",
    "func": "unix::linux_like::linux::RT_LOCALADDR"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.172/src/macros.rs",
    "func": "unix::linux_like::linux::RT_TOS"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.172/src/macros.rs",
    "func": "unix::linux_like::linux::SCTP_PR_INDEX"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.172/src/macros.rs",
    "func": "unix::linux_like::linux::SCTP_PR_POLICY"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.172/src/macros.rs",
    "func": "unix::linux_like::linux::SCTP_PR_PRIO_ENABLED"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.172/src/macros.rs",
    "func": "unix::linux_like::linux::SCTP_PR_RTX_ENABLED"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.172/src/macros.rs",
    "func": "unix::linux_like::linux::SCTP_PR_TTL_ENABLED"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.172/src/macros.rs",
    "func": "unix::linux_like::linux::TPACKET_ALIGN"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.172/src/macros.rs",
    "func": "unix::linux_like::linux::major"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.172/src/macros.rs",
    "func": "unix::linux_like::linux::makedev"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.172/src/macros.rs",
    "func": "unix::linux_like::linux::minor"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.172/src/macros.rs",
    "func": "unix::ntohl"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.172/src/macros.rs",
    "func": "unix::ntohs"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.172/src/unix/linux_like/linux/mod.rs",
    "func": "unix::linux_like::linux::FUTEX_OP"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.172/src/unix/linux_like/linux/mod.rs",
    "func": "unix::linux_like::linux::_IO"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.172/src/unix/linux_like/mod.rs",
    "func": "unix::linux_like::_IOC"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/arch/all/memchr.rs",
    "func": "arch::all::memchr::One::new"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/arch/all/memchr.rs",
    "func": "arch::all::memchr::Three::new"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/arch/all/memchr.rs",
    "func": "arch::all::memchr::Two::new"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/arch/all/memchr.rs",
    "func": "arch::all::memchr::has_zero_byte"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/arch/all/memchr.rs",
    "func": "arch::all::memchr::splat"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/arch/all/rabinkarp.rs",
    "func": "<arch::all::rabinkarp::Hash as rustc_std_workspace_core::default::Default>::default"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/arch/all/rabinkarp.rs",
    "func": "arch::all::rabinkarp::Hash"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/arch/all/rabinkarp.rs",
    "func": "arch::all::rabinkarp::Hash::new"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/arch/all/twoway.rs",
    "func": "arch::all::twoway::ApproximateByteSet"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/arch/x86_64/avx2/memchr.rs",
    "func": "arch::x86_64::avx2::memchr::One::is_available"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/arch/x86_64/avx2/memchr.rs",
    "func": "arch::x86_64::avx2::memchr::One::new"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/arch/x86_64/avx2/memchr.rs",
    "func": "arch::x86_64::avx2::memchr::One::new_unchecked"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/arch/x86_64/avx2/memchr.rs",
    "func": "arch::x86_64::avx2::memchr::Three::is_available"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/arch/x86_64/avx2/memchr.rs",
    "func": "arch::x86_64::avx2::memchr::Three::new"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/arch/x86_64/avx2/memchr.rs",
    "func": "arch::x86_64::avx2::memchr::Three::new_unchecked"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/arch/x86_64/avx2/memchr.rs",
    "func": "arch::x86_64::avx2::memchr::Two::is_available"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/arch/x86_64/avx2/memchr.rs",
    "func": "arch::x86_64::avx2::memchr::Two::new"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/arch/x86_64/avx2/memchr.rs",
    "func": "arch::x86_64::avx2::memchr::Two::new_unchecked"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/arch/x86_64/avx2/packedpair.rs",
    "func": "arch::x86_64::avx2::packedpair::Finder::is_available"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/arch/x86_64/sse2/memchr.rs",
    "func": "arch::x86_64::sse2::memchr::One::is_available"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/arch/x86_64/sse2/memchr.rs",
    "func": "arch::x86_64::sse2::memchr::One::new"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/arch/x86_64/sse2/memchr.rs",
    "func": "arch::x86_64::sse2::memchr::One::new_unchecked"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/arch/x86_64/sse2/memchr.rs",
    "func": "arch::x86_64::sse2::memchr::Three::is_available"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/arch/x86_64/sse2/memchr.rs",
    "func": "arch::x86_64::sse2::memchr::Three::new"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/arch/x86_64/sse2/memchr.rs",
    "func": "arch::x86_64::sse2::memchr::Three::new_unchecked"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/arch/x86_64/sse2/memchr.rs",
    "func": "arch::x86_64::sse2::memchr::Two::is_available"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/arch/x86_64/sse2/memchr.rs",
    "func": "arch::x86_64::sse2::memchr::Two::new"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/arch/x86_64/sse2/memchr.rs",
    "func": "arch::x86_64::sse2::memchr::Two::new_unchecked"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/arch/x86_64/sse2/packedpair.rs",
    "func": "arch::x86_64::sse2::packedpair::Finder::is_available"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/memmem/mod.rs",
    "func": "<memmem::FinderBuilder as rustc_std_workspace_core::default::Default>::default"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/memmem/mod.rs",
    "func": "memmem::FinderBuilder::new"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/memmem/searcher.rs",
    "func": "<memmem::searcher::PrefilterConfig as rustc_std_workspace_core::default::Default>::default"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/memmem/searcher.rs",
    "func": "memmem::searcher::PrefilterState::new"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/vector.rs",
    "func": "<vector::SensibleMoveMask as vector::MoveMask>::all_zeros_except_least_significant"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/vector.rs",
    "func": "vector::SensibleMoveMask"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/vector.rs",
    "func": "vector::x86avx2::<impl vector::Vector for rustc_std_workspace_core::arch::x86_64::__m256i>::splat"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/vector.rs",
    "func": "vector::x86sse2::<impl vector::Vector for rustc_std_workspace_core::arch::x86_64::__m128i>::splat"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/miniz_oxide-0.8.9/src/inflate/core.rs",
    "func": "<inflate::core::DecompressorOxide as rustc_std_workspace_core::default::Default>::default"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/miniz_oxide-0.8.9/src/inflate/core.rs",
    "func": "inflate::core::DecompressorOxide::new"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/miniz_oxide-0.8.9/src/inflate/core.rs",
    "func": "inflate::core::HuffmanTable::new"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/miniz_oxide-0.8.9/src/inflate/core.rs",
    "func": "inflate::core::end_of_input"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/miniz_oxide-0.8.9/src/inflate/core.rs",
    "func": "inflate::core::num_extra_bits_for_distance_code"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/miniz_oxide-0.8.9/src/inflate/core.rs",
    "func": "inflate::core::reverse_bits"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/miniz_oxide-0.8.9/src/inflate/core.rs",
    "func": "inflate::core::validate_zlib_header"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/miniz_oxide-0.8.9/src/inflate/mod.rs",
    "func": "inflate::TINFLStatus::from_i32"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/miniz_oxide-0.8.9/src/lib.rs",
    "func": "MZFlush::new"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.1/src/archive.rs",
    "func": "archive::AixMemberOffset"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.1/src/common.rs",
    "func": "common::BinaryFormat::native_object"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.1/src/common.rs",
    "func": "common::SectionKind::Elf"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.1/src/elf.rs",
    "func": "elf::ef_e2k_flag_to_mach"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.1/src/elf.rs",
    "func": "elf::ef_e2k_mach_to_flag"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.1/src/endian.rs",
    "func": "<endian::BigEndian as endian::Endian>::from_big_endian"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.1/src/endian.rs",
    "func": "<endian::BigEndian as rustc_std_workspace_core::default::Default>::default"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.1/src/endian.rs",
    "func": "<endian::Endianness as endian::Endian>::from_big_endian"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.1/src/endian.rs",
    "func": "<endian::Endianness as rustc_std_workspace_core::default::Default>::default"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.1/src/endian.rs",
    "func": "<endian::LittleEndian as endian::Endian>::from_big_endian"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.1/src/endian.rs",
    "func": "<endian::LittleEndian as rustc_std_workspace_core::default::Default>::default"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.1/src/macho.rs",
    "func": "macho::DyldCacheSlidePointer3"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.1/src/macho.rs",
    "func": "macho::DyldCacheSlidePointer5"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.1/src/macho.rs",
    "func": "macho::cpu_subtype_intel"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.1/src/macho.rs",
    "func": "macho::cpu_subtype_intel_family"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.1/src/macho.rs",
    "func": "macho::cpu_subtype_intel_model"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.1/src/pe.rs",
    "func": "<pe::ImageSectionHeader as rustc_std_workspace_core::default::Default>::default"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.1/src/pe.rs",
    "func": "pe::Guid"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.1/src/pe.rs",
    "func": "pe::ImageSymbolBytes"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.1/src/pe.rs",
    "func": "pe::ImageSymbolExBytes"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.1/src/read/archive.rs",
    "func": "read::archive::ArchiveOffset"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.1/src/read/coff/file.rs",
    "func": "<pe::AnonObjectHeaderBigobj as read::coff::file::CoffHeader>::is_type_bigobj"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.1/src/read/coff/file.rs",
    "func": "<pe::ImageFileHeader as read::coff::file::CoffHeader>::is_type_bigobj"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.1/src/read/coff/import.rs",
    "func": "read::coff::import::ImportName::<'_>::Ordinal"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.1/src/read/coff/section.rs",
    "func": "<read::coff::section::SectionTable<'_> as rustc_std_workspace_core::default::Default>::default"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.1/src/read/elf/relocation.rs",
    "func": "<read::elf::relocation::RelocationSections as rustc_std_workspace_core::default::Default>::default"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.1/src/read/elf/version.rs",
    "func": "<read::elf::version::Version<'_> as rustc_std_workspace_core::default::Default>::default"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.1/src/read/elf/version.rs",
    "func": "<read::elf::version::VersionIndex as rustc_std_workspace_core::default::Default>::default"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.1/src/read/elf/version.rs",
    "func": "read::elf::version::VersionIndex"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.1/src/read/mod.rs",
    "func": "<read::ObjectMap<'_> as rustc_std_workspace_core::default::Default>::default"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.1/src/read/mod.rs",
    "func": "<read::ObjectMapEntry<'_> as rustc_std_workspace_core::default::Default>::default"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.1/src/read/mod.rs",
    "func": "<read::RelocationMap as rustc_std_workspace_core::default::Default>::default"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.1/src/read/mod.rs",
    "func": "read::CompressedFileRange::none"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.1/src/read/mod.rs",
    "func": "read::SectionIndex"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.1/src/read/mod.rs",
    "func": "read::SymbolIndex"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.1/src/read/pe/export.rs",
    "func": "read::pe::export::ExportTarget::<'_>::Address"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.1/src/read/pe/import.rs",
    "func": "read::pe::import::Import::<'_>::Ordinal"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.1/src/read/pe/relocation.rs",
    "func": "<read::pe::relocation::Relocation as rustc_std_workspace_core::default::Default>::default"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.1/src/read/pe/relocation.rs",
    "func": "<read::pe::relocation::RelocationBlockIterator<'_> as rustc_std_workspace_core::default::Default>::default"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.1/src/read/pe/resource.rs",
    "func": "read::pe::resource::ResourceNameOrId::Id"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.1/src/read/util.rs",
    "func": "<read::util::ByteString<'_> as rustc_std_workspace_core::default::Default>::default"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.1/src/read/util.rs",
    "func": "<read::util::Bytes<'_> as rustc_std_workspace_core::default::Default>::default"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.1/src/read/util.rs",
    "func": "read::util::DebugByte"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.1/src/read/util.rs",
    "func": "read::util::DebugLen"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.1/src/read/util.rs",
    "func": "read::util::align"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.1/src/xcoff.rs",
    "func": "xcoff::SymbolBytes"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rustc-demangle-0.1.25/src/lib.rs",
    "func": "is_ascii_alphanumeric"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rustc-demangle-0.1.25/src/lib.rs",
    "func": "is_ascii_punctuation"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rustc-demangle-0.1.25/src/v0.rs",
    "func": "v0::HexNibbles::<'s>::try_parse_str_chars::{closure#2}::{closure#0}::utf8_len_from_first_byte"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rustc-demangle-0.1.25/src/v0.rs",
    "func": "v0::basic_type"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rustc-literal-escaper-0.0.2/src/lib.rs",
    "func": "<MixedUnit as rustc_std_workspace_std::convert::From<char>>::from"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rustc-literal-escaper-0.0.2/src/lib.rs",
    "func": "<MixedUnit as rustc_std_workspace_std::convert::From<u8>>::from"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rustc-literal-escaper-0.0.2/src/lib.rs",
    "func": "MixedUnit::Char"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rustc-literal-escaper-0.0.2/src/lib.rs",
    "func": "MixedUnit::HighByte"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rustc-literal-escaper-0.0.2/src/lib.rs",
    "func": "ascii_check"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rustc-literal-escaper-0.0.2/src/lib.rs",
    "func": "byte_from_char"
  },
  {
    "file": "/home/runner/work/verify-rust-std/verify-rust-std/kani_build/library/kani_core/src/mem_init.rs",
    "func": "kani::mem_init::MemoryInitializationState::new"
  },
  {
    "file": "/home/runner/work/verify-rust-std/verify-rust-std/kani_build/library/kani_core/src/models.rs",
    "func": "<isize as kani::rustc_intrinsics::ToISize>::to_isize"
  },
  {
    "file": "/home/runner/work/verify-rust-std/verify-rust-std/kani_build/library/kani_core/src/models.rs",
    "func": "<usize as kani::rustc_intrinsics::ToISize>::to_isize"
  },
  {
    "file": "alloc/src/alloc.rs",
    "func": "<alloc::Global as core::default::Default>::default"
  },
  {
    "file": "alloc/src/alloc.rs",
    "func": "alloc::__alloc_error_handler::__rdl_oom"
  },
  {
    "file": "alloc/src/alloc.rs",
    "func": "alloc::alloc"
  },
  {
    "file": "alloc/src/alloc.rs",
    "func": "alloc::alloc_zeroed"
  },
  {
    "file": "alloc/src/alloc.rs",
    "func": "alloc::exchange_malloc"
  },
  {
    "file": "alloc/src/alloc.rs",
    "func": "alloc::handle_alloc_error"
  },
  {
    "file": "alloc/src/alloc.rs",
    "func": "alloc::handle_alloc_error::ct_error"
  },
  {
    "file": "alloc/src/alloc.rs",
    "func": "alloc::handle_alloc_error::rt_error"
  },
  {
    "file": "alloc/src/boxed.rs",
    "func": "<boxed::Box<str> as core::default::Default>::default"
  },
  {
    "file": "alloc/src/boxed/thin.rs",
    "func": "boxed::thin::WithHeader::<H>::new_unsize_zst::max"
  },
  {
    "file": "alloc/src/boxed/thin.rs",
    "func": "boxed::thin::WithOpaqueHeader"
  },
  {
    "file": "alloc/src/bstr.rs",
    "func": "<bstr::ByteString as core::default::Default>::default"
  },
  {
    "file": "alloc/src/collections/binary_heap/mod.rs",
    "func": "collections::binary_heap::BinaryHeap::<T, A>::rebuild_tail::log2_fast"
  },
  {
    "file": "alloc/src/collections/btree/node.rs",
    "func": "collections::btree::node::marker::Immut::<'_>"
  },
  {
    "file": "alloc/src/collections/btree/node.rs",
    "func": "collections::btree::node::marker::Mut::<'_>"
  },
  {
    "file": "alloc/src/collections/btree/node.rs",
    "func": "collections::btree::node::marker::ValMut::<'_>"
  },
  {
    "file": "alloc/src/collections/btree/node.rs",
    "func": "collections::btree::node::splitpoint"
  },
  {
    "file": "alloc/src/collections/btree/search.rs",
    "func": "collections::btree::search::IndexResult::Edge"
  },
  {
    "file": "alloc/src/collections/btree/search.rs",
    "func": "collections::btree::search::IndexResult::KV"
  },
  {
    "file": "alloc/src/collections/btree/set_val.rs",
    "func": "<collections::btree::set_val::SetValZST as collections::btree::set_val::IsSetVal>::is_set_val"
  },
  {
    "file": "alloc/src/collections/btree/set_val.rs",
    "func": "<collections::btree::set_val::SetValZST as core::default::Default>::default"
  },
  {
    "file": "alloc/src/collections/linked_list.rs",
    "func": "collections::linked_list::assert_covariance"
  },
  {
    "file": "alloc/src/collections/vec_deque/mod.rs",
    "func": "collections::vec_deque::verify::check_vecdeque_swap"
  },
  {
    "file": "alloc/src/collections/vec_deque/mod.rs",
    "func": "collections::vec_deque::wrap_index"
  },
  {
    "file": "alloc/src/ffi/c_str.rs",
    "func": "<ffi::c_str::CString as core::default::Default>::default"
  },
  {
    "file": "alloc/src/ffi/c_str.rs",
    "func": "ffi::c_str::<impl core::default::Default for boxed::Box<core::ffi::CStr>>::default"
  },
  {
    "file": "alloc/src/ffi/c_str.rs",
    "func": "ffi::c_str::<impl core::default::Default for rc::Rc<core::ffi::CStr>>::default"
  },
  {
    "file": "alloc/src/ffi/c_str.rs",
    "func": "ffi::c_str::FromBytesWithNulErrorKind::InteriorNul"
  },
  {
    "file": "alloc/src/raw_vec/mod.rs",
    "func": "raw_vec::RawVecInner::with_capacity"
  },
  {
    "file": "alloc/src/raw_vec/mod.rs",
    "func": "raw_vec::alloc_guard"
  },
  {
    "file": "alloc/src/raw_vec/mod.rs",
    "func": "raw_vec::capacity_overflow"
  },
  {
    "file": "alloc/src/raw_vec/mod.rs",
    "func": "raw_vec::layout_array"
  },
  {
    "file": "alloc/src/raw_vec/mod.rs",
    "func": "raw_vec::min_non_zero_cap"
  },
  {
    "file": "alloc/src/rc.rs",
    "func": "<rc::Rc<str> as core::default::Default>::default"
  },
  {
    "file": "alloc/src/rc.rs",
    "func": "rc::data_offset_align"
  },
  {
    "file": "alloc/src/rc.rs",
    "func": "rc::rc_inner_layout_for_value_layout"
  },
  {
    "file": "alloc/src/string.rs",
    "func": "<string::String as core::convert::From<char>>::from"
  },
  {
    "file": "alloc/src/string.rs",
    "func": "<string::String as core::default::Default>::default"
  },
  {
    "file": "alloc/src/string.rs",
    "func": "string::FromUtf16Error"
  },
  {
    "file": "alloc/src/string.rs",
    "func": "string::String::new"
  },
  {
    "file": "alloc/src/string.rs",
    "func": "string::String::try_with_capacity"
  },
  {
    "file": "alloc/src/string.rs",
    "func": "string::String::with_capacity"
  },
  {
    "file": "alloc/src/sync.rs",
    "func": "<sync::Arc<core::ffi::CStr> as core::default::Default>::default"
  },
  {
    "file": "alloc/src/sync.rs",
    "func": "<sync::Arc<str> as core::default::Default>::default"
  },
  {
    "file": "alloc/src/sync.rs",
    "func": "sync::Weak::<T, A>::upgrade::checked_increment"
  },
  {
    "file": "alloc/src/sync.rs",
    "func": "sync::arcinner_layout_for_value_layout"
  },
  {
    "file": "alloc/src/sync.rs",
    "func": "sync::data_offset_align"
  },
  {
    "file": "alloc/src/vec/mod.rs",
    "func": "vec::Vec::<T, A>::insert::assert_failed"
  },
  {
    "file": "alloc/src/vec/mod.rs",
    "func": "vec::Vec::<T, A>::remove::assert_failed"
  },
  {
    "file": "alloc/src/vec/mod.rs",
    "func": "vec::Vec::<T, A>::split_off::assert_failed"
  },
  {
    "file": "alloc/src/vec/mod.rs",
    "func": "vec::Vec::<T, A>::swap_remove::assert_failed"
  },
  {
    "file": "alloc/src/vec/mod.rs",
    "func": "vec::verify::verify_swap_remove"
  },
  {
    "file": "backtrace/src/symbolize/gimli.rs",
    "func": "<backtrace_rs::symbolize::gimli::Cache as core::default::Default>::default"
  },
  {
    "file": "backtrace/src/symbolize/gimli.rs",
    "func": "backtrace_rs::symbolize::gimli::Cache::new"
  },
  {
    "file": "backtrace/src/symbolize/gimli.rs",
    "func": "backtrace_rs::symbolize::gimli::clear_symbol_cache"
  },
  {
    "file": "backtrace/src/symbolize/gimli/elf.rs",
    "func": "backtrace_rs::symbolize::gimli::elf::debug_path_exists"
  },
  {
    "file": "backtrace/src/symbolize/gimli/libs_dl_iterate_phdr.rs",
    "func": "backtrace_rs::symbolize::gimli::libs_dl_iterate_phdr::native_libraries"
  },
  {
    "file": "backtrace/src/symbolize/gimli/parse_running_mmaps_unix.rs",
    "func": "backtrace_rs::symbolize::gimli::parse_running_mmaps::parse_maps"
  },
  {
    "file": "backtrace/src/symbolize/gimli/stash.rs",
    "func": "backtrace_rs::symbolize::gimli::stash::Stash::new"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/float/conv.rs",
    "func": "float::conv::int_to_float::u128_to_f128_bits"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/float/conv.rs",
    "func": "float::conv::int_to_float::u128_to_f32_bits"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/float/conv.rs",
    "func": "float::conv::int_to_float::u128_to_f64_bits"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/float/conv.rs",
    "func": "float::conv::int_to_float::u32_to_f128_bits"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/float/conv.rs",
    "func": "float::conv::int_to_float::u32_to_f32_bits"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/float/conv.rs",
    "func": "float::conv::int_to_float::u32_to_f64_bits"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/float/conv.rs",
    "func": "float::conv::int_to_float::u64_to_f128_bits"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/float/conv.rs",
    "func": "float::conv::int_to_float::u64_to_f32_bits"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/float/conv.rs",
    "func": "float::conv::int_to_float::u64_to_f64_bits"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/float/traits.rs",
    "func": "<f128 as float::traits::Float>::eq_repr"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/float/traits.rs",
    "func": "<f128 as float::traits::Float>::eq_repr::is_nan"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/float/traits.rs",
    "func": "<f128 as float::traits::Float>::exp"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/float/traits.rs",
    "func": "<f128 as float::traits::Float>::frac"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/float/traits.rs",
    "func": "<f128 as float::traits::Float>::from_bits"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/float/traits.rs",
    "func": "<f128 as float::traits::Float>::from_parts"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/float/traits.rs",
    "func": "<f128 as float::traits::Float>::imp_frac"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/float/traits.rs",
    "func": "<f128 as float::traits::Float>::is_sign_negative"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/float/traits.rs",
    "func": "<f128 as float::traits::Float>::is_subnormal"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/float/traits.rs",
    "func": "<f128 as float::traits::Float>::normalize"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/float/traits.rs",
    "func": "<f128 as float::traits::Float>::to_bits"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/float/traits.rs",
    "func": "<f128 as float::traits::Float>::to_bits_signed"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/float/traits.rs",
    "func": "<f16 as float::traits::Float>::eq_repr"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/float/traits.rs",
    "func": "<f16 as float::traits::Float>::eq_repr::is_nan"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/float/traits.rs",
    "func": "<f16 as float::traits::Float>::exp"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/float/traits.rs",
    "func": "<f16 as float::traits::Float>::frac"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/float/traits.rs",
    "func": "<f16 as float::traits::Float>::from_bits"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/float/traits.rs",
    "func": "<f16 as float::traits::Float>::from_parts"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/float/traits.rs",
    "func": "<f16 as float::traits::Float>::imp_frac"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/float/traits.rs",
    "func": "<f16 as float::traits::Float>::is_sign_negative"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/float/traits.rs",
    "func": "<f16 as float::traits::Float>::is_subnormal"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/float/traits.rs",
    "func": "<f16 as float::traits::Float>::normalize"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/float/traits.rs",
    "func": "<f16 as float::traits::Float>::to_bits"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/float/traits.rs",
    "func": "<f16 as float::traits::Float>::to_bits_signed"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/float/traits.rs",
    "func": "<f32 as float::traits::Float>::eq_repr"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/float/traits.rs",
    "func": "<f32 as float::traits::Float>::eq_repr::is_nan"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/float/traits.rs",
    "func": "<f32 as float::traits::Float>::exp"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/float/traits.rs",
    "func": "<f32 as float::traits::Float>::frac"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/float/traits.rs",
    "func": "<f32 as float::traits::Float>::from_bits"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/float/traits.rs",
    "func": "<f32 as float::traits::Float>::from_parts"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/float/traits.rs",
    "func": "<f32 as float::traits::Float>::imp_frac"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/float/traits.rs",
    "func": "<f32 as float::traits::Float>::is_sign_negative"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/float/traits.rs",
    "func": "<f32 as float::traits::Float>::is_subnormal"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/float/traits.rs",
    "func": "<f32 as float::traits::Float>::normalize"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/float/traits.rs",
    "func": "<f32 as float::traits::Float>::to_bits"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/float/traits.rs",
    "func": "<f32 as float::traits::Float>::to_bits_signed"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/float/traits.rs",
    "func": "<f64 as float::traits::Float>::eq_repr"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/float/traits.rs",
    "func": "<f64 as float::traits::Float>::eq_repr::is_nan"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/float/traits.rs",
    "func": "<f64 as float::traits::Float>::exp"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/float/traits.rs",
    "func": "<f64 as float::traits::Float>::frac"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/float/traits.rs",
    "func": "<f64 as float::traits::Float>::from_bits"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/float/traits.rs",
    "func": "<f64 as float::traits::Float>::from_parts"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/float/traits.rs",
    "func": "<f64 as float::traits::Float>::imp_frac"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/float/traits.rs",
    "func": "<f64 as float::traits::Float>::is_sign_negative"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/float/traits.rs",
    "func": "<f64 as float::traits::Float>::is_subnormal"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/float/traits.rs",
    "func": "<f64 as float::traits::Float>::normalize"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/float/traits.rs",
    "func": "<f64 as float::traits::Float>::to_bits"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/float/traits.rs",
    "func": "<f64 as float::traits::Float>::to_bits_signed"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/big.rs",
    "func": "int::big::<impl int::traits::HInt for i128>::widen"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/big.rs",
    "func": "int::big::<impl int::traits::HInt for i128>::widen_hi"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/big.rs",
    "func": "int::big::<impl int::traits::HInt for i128>::widen_mul"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/big.rs",
    "func": "int::big::<impl int::traits::HInt for i128>::zero_widen"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/big.rs",
    "func": "int::big::<impl int::traits::HInt for i128>::zero_widen_mul"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/big.rs",
    "func": "int::big::<impl int::traits::HInt for u128>::widen"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/big.rs",
    "func": "int::big::<impl int::traits::HInt for u128>::widen_hi"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/big.rs",
    "func": "int::big::<impl int::traits::HInt for u128>::widen_mul"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/big.rs",
    "func": "int::big::<impl int::traits::HInt for u128>::zero_widen"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/big.rs",
    "func": "int::big::<impl int::traits::HInt for u128>::zero_widen_mul"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/big.rs",
    "func": "int::big::i256"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/big.rs",
    "func": "int::big::u256"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/mul.rs",
    "func": "int::mul::i128_overflowing_mul"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/mul.rs",
    "func": "int::mul::i32_overflowing_mul"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/mul.rs",
    "func": "int::mul::i64_overflowing_mul"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/specialized_div_rem/asymmetric.rs",
    "func": "int::specialized_div_rem::u128_div_rem"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/specialized_div_rem/binary_long.rs",
    "func": "int::specialized_div_rem::u32_div_rem"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/specialized_div_rem/binary_long.rs",
    "func": "int::specialized_div_rem::u64_div_rem"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/specialized_div_rem/mod.rs",
    "func": "int::specialized_div_rem::u128_by_u64_div_rem"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/specialized_div_rem/mod.rs",
    "func": "int::specialized_div_rem::u32_by_u32_div_rem"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/specialized_div_rem/mod.rs",
    "func": "int::specialized_div_rem::u64_by_u64_div_rem"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/specialized_div_rem/mod.rs",
    "func": "int::specialized_div_rem::zero_div_fn"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/specialized_div_rem/norm_shift.rs",
    "func": "int::specialized_div_rem::u32_normalization_shift"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/specialized_div_rem/norm_shift.rs",
    "func": "int::specialized_div_rem::u64_normalization_shift"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/traits.rs",
    "func": "<i128 as int::traits::DInt>::hi"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/traits.rs",
    "func": "<i128 as int::traits::DInt>::lo"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/traits.rs",
    "func": "<i16 as int::traits::DInt>::hi"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/traits.rs",
    "func": "<i16 as int::traits::DInt>::lo"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/traits.rs",
    "func": "<i16 as int::traits::HInt>::widen"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/traits.rs",
    "func": "<i16 as int::traits::HInt>::widen_hi"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/traits.rs",
    "func": "<i16 as int::traits::HInt>::widen_mul"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/traits.rs",
    "func": "<i16 as int::traits::HInt>::zero_widen"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/traits.rs",
    "func": "<i16 as int::traits::HInt>::zero_widen_mul"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/traits.rs",
    "func": "<i32 as int::traits::DInt>::hi"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/traits.rs",
    "func": "<i32 as int::traits::DInt>::lo"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/traits.rs",
    "func": "<i32 as int::traits::HInt>::widen"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/traits.rs",
    "func": "<i32 as int::traits::HInt>::widen_hi"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/traits.rs",
    "func": "<i32 as int::traits::HInt>::widen_mul"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/traits.rs",
    "func": "<i32 as int::traits::HInt>::zero_widen"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/traits.rs",
    "func": "<i32 as int::traits::HInt>::zero_widen_mul"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/traits.rs",
    "func": "<i64 as int::traits::DInt>::hi"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/traits.rs",
    "func": "<i64 as int::traits::DInt>::lo"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/traits.rs",
    "func": "<i64 as int::traits::HInt>::widen"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/traits.rs",
    "func": "<i64 as int::traits::HInt>::widen_hi"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/traits.rs",
    "func": "<i64 as int::traits::HInt>::widen_mul"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/traits.rs",
    "func": "<i64 as int::traits::HInt>::zero_widen"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/traits.rs",
    "func": "<i64 as int::traits::HInt>::zero_widen_mul"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/traits.rs",
    "func": "<i8 as int::traits::HInt>::widen"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/traits.rs",
    "func": "<i8 as int::traits::HInt>::widen_hi"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/traits.rs",
    "func": "<i8 as int::traits::HInt>::widen_mul"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/traits.rs",
    "func": "<i8 as int::traits::HInt>::zero_widen"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/traits.rs",
    "func": "<i8 as int::traits::HInt>::zero_widen_mul"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/traits.rs",
    "func": "<u128 as int::traits::DInt>::hi"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/traits.rs",
    "func": "<u128 as int::traits::DInt>::lo"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/traits.rs",
    "func": "<u16 as int::traits::DInt>::hi"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/traits.rs",
    "func": "<u16 as int::traits::DInt>::lo"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/traits.rs",
    "func": "<u16 as int::traits::HInt>::widen"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/traits.rs",
    "func": "<u16 as int::traits::HInt>::widen_hi"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/traits.rs",
    "func": "<u16 as int::traits::HInt>::widen_mul"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/traits.rs",
    "func": "<u16 as int::traits::HInt>::zero_widen"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/traits.rs",
    "func": "<u16 as int::traits::HInt>::zero_widen_mul"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/traits.rs",
    "func": "<u32 as int::traits::DInt>::hi"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/traits.rs",
    "func": "<u32 as int::traits::DInt>::lo"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/traits.rs",
    "func": "<u32 as int::traits::HInt>::widen"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/traits.rs",
    "func": "<u32 as int::traits::HInt>::widen_hi"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/traits.rs",
    "func": "<u32 as int::traits::HInt>::widen_mul"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/traits.rs",
    "func": "<u32 as int::traits::HInt>::zero_widen"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/traits.rs",
    "func": "<u32 as int::traits::HInt>::zero_widen_mul"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/traits.rs",
    "func": "<u64 as int::traits::DInt>::hi"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/traits.rs",
    "func": "<u64 as int::traits::DInt>::lo"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/traits.rs",
    "func": "<u64 as int::traits::HInt>::widen"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/traits.rs",
    "func": "<u64 as int::traits::HInt>::widen_hi"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/traits.rs",
    "func": "<u64 as int::traits::HInt>::widen_mul"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/traits.rs",
    "func": "<u64 as int::traits::HInt>::zero_widen"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/traits.rs",
    "func": "<u64 as int::traits::HInt>::zero_widen_mul"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/traits.rs",
    "func": "<u8 as int::traits::HInt>::widen"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/traits.rs",
    "func": "<u8 as int::traits::HInt>::widen_hi"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/traits.rs",
    "func": "<u8 as int::traits::HInt>::widen_mul"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/traits.rs",
    "func": "<u8 as int::traits::HInt>::zero_widen"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/traits.rs",
    "func": "<u8 as int::traits::HInt>::zero_widen_mul"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::add::__adddf3"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::add::__adddf3::__adddf3"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::add::__addsf3"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::add::__addsf3::__addsf3"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::add::__addtf3"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::add::__addtf3::__addtf3"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::cmp::__eqdf2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::cmp::__eqdf2::__eqdf2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::cmp::__eqsf2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::cmp::__eqsf2::__eqsf2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::cmp::__eqtf2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::cmp::__eqtf2::__eqtf2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::cmp::__gedf2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::cmp::__gedf2::__gedf2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::cmp::__gesf2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::cmp::__gesf2::__gesf2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::cmp::__getf2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::cmp::__getf2::__getf2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::cmp::__gtdf2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::cmp::__gtdf2::__gtdf2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::cmp::__gtsf2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::cmp::__gtsf2::__gtsf2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::cmp::__gttf2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::cmp::__gttf2::__gttf2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::cmp::__ledf2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::cmp::__ledf2::__ledf2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::cmp::__lesf2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::cmp::__lesf2::__lesf2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::cmp::__letf2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::cmp::__letf2::__letf2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::cmp::__ltdf2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::cmp::__ltdf2::__ltdf2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::cmp::__ltsf2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::cmp::__ltsf2::__ltsf2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::cmp::__lttf2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::cmp::__lttf2::__lttf2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::cmp::__nedf2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::cmp::__nedf2::__nedf2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::cmp::__nesf2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::cmp::__nesf2::__nesf2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::cmp::__netf2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::cmp::__netf2::__netf2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::cmp::__unorddf2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::cmp::__unorddf2::__unorddf2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::cmp::__unordsf2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::cmp::__unordsf2::__unordsf2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::cmp::__unordtf2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::cmp::__unordtf2::__unordtf2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::conv::__fixdfdi"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::conv::__fixdfdi::__fixdfdi"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::conv::__fixdfsi"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::conv::__fixdfsi::__fixdfsi"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::conv::__fixdfti"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::conv::__fixdfti::__fixdfti"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::conv::__fixsfdi"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::conv::__fixsfdi::__fixsfdi"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::conv::__fixsfsi"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::conv::__fixsfsi::__fixsfsi"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::conv::__fixsfti"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::conv::__fixsfti::__fixsfti"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::conv::__fixtfdi"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::conv::__fixtfdi::__fixtfdi"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::conv::__fixtfsi"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::conv::__fixtfsi::__fixtfsi"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::conv::__fixtfti"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::conv::__fixtfti::__fixtfti"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::conv::__fixunsdfdi"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::conv::__fixunsdfdi::__fixunsdfdi"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::conv::__fixunsdfsi"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::conv::__fixunsdfsi::__fixunsdfsi"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::conv::__fixunsdfti"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::conv::__fixunsdfti::__fixunsdfti"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::conv::__fixunssfdi"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::conv::__fixunssfdi::__fixunssfdi"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::conv::__fixunssfsi"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::conv::__fixunssfsi::__fixunssfsi"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::conv::__fixunssfti"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::conv::__fixunssfti::__fixunssfti"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::conv::__fixunstfdi"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::conv::__fixunstfdi::__fixunstfdi"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::conv::__fixunstfsi"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::conv::__fixunstfsi::__fixunstfsi"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::conv::__fixunstfti"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::conv::__fixunstfti::__fixunstfti"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::conv::__floatdidf"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::conv::__floatdidf::__floatdidf"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::conv::__floatdisf"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::conv::__floatdisf::__floatdisf"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::conv::__floatditf"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::conv::__floatditf::__floatditf"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::conv::__floatsidf"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::conv::__floatsidf::__floatsidf"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::conv::__floatsisf"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::conv::__floatsisf::__floatsisf"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::conv::__floatsitf"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::conv::__floatsitf::__floatsitf"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::conv::__floattidf"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::conv::__floattidf::__floattidf"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::conv::__floattisf"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::conv::__floattisf::__floattisf"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::conv::__floattitf"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::conv::__floattitf::__floattitf"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::conv::__floatundidf"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::conv::__floatundidf::__floatundidf"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::conv::__floatundisf"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::conv::__floatundisf::__floatundisf"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::conv::__floatunditf"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::conv::__floatunditf::__floatunditf"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::conv::__floatunsidf"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::conv::__floatunsidf::__floatunsidf"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::conv::__floatunsisf"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::conv::__floatunsisf::__floatunsisf"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::conv::__floatunsitf"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::conv::__floatunsitf::__floatunsitf"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::conv::__floatuntidf"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::conv::__floatuntidf::__floatuntidf"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::conv::__floatuntisf"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::conv::__floatuntisf::__floatuntisf"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::conv::__floatuntitf"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::conv::__floatuntitf::__floatuntitf"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::div::__divdf3"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::div::__divdf3::__divdf3"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::div::__divsf3"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::div::__divsf3::__divsf3"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::div::__divtf3"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::div::__divtf3::__divtf3"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::extend::__extenddftf2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::extend::__extenddftf2::__extenddftf2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::extend::__extendhfdf2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::extend::__extendhfdf2::__extendhfdf2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::extend::__extendhfsf2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::extend::__extendhfsf2::__extendhfsf2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::extend::__extendhftf2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::extend::__extendhftf2::__extendhftf2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::extend::__extendsfdf2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::extend::__extendsfdf2::__extendsfdf2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::extend::__extendsftf2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::extend::__extendsftf2::__extendsftf2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::extend::__gnu_h2f_ieee"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::extend::__gnu_h2f_ieee::__gnu_h2f_ieee"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::mul::__muldf3"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::mul::__muldf3::__muldf3"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::mul::__mulsf3"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::mul::__mulsf3::__mulsf3"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::mul::__multf3"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::mul::__multf3::__multf3"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::pow::__powidf2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::pow::__powidf2::__powidf2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::pow::__powisf2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::pow::__powisf2::__powisf2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::pow::__powitf2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::pow::__powitf2::__powitf2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::sub::__subdf3"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::sub::__subdf3::__subdf3"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::sub::__subsf3"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::sub::__subsf3::__subsf3"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::sub::__subtf3"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::sub::__subtf3::__subtf3"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::trunc::__gnu_f2h_ieee"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::trunc::__gnu_f2h_ieee::__gnu_f2h_ieee"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::trunc::__truncdfhf2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::trunc::__truncdfhf2::__truncdfhf2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::trunc::__truncdfsf2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::trunc::__truncdfsf2::__truncdfsf2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::trunc::__truncsfhf2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::trunc::__truncsfhf2::__truncsfhf2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::trunc::__trunctfdf2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::trunc::__trunctfdf2::__trunctfdf2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::trunc::__trunctfhf2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::trunc::__trunctfhf2::__trunctfhf2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::trunc::__trunctfsf2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::trunc::__trunctfsf2::__trunctfsf2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::addsub::__rust_i128_add"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::addsub::__rust_i128_add::__rust_i128_add"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::addsub::__rust_i128_sub"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::addsub::__rust_i128_sub::__rust_i128_sub"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::addsub::__rust_u128_add"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::addsub::__rust_u128_add::__rust_u128_add"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::addsub::__rust_u128_sub"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::addsub::__rust_u128_sub::__rust_u128_sub"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::bswap::__bswapdi2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::bswap::__bswapdi2::__bswapdi2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::bswap::__bswapsi2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::bswap::__bswapsi2::__bswapsi2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::bswap::__bswapti2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::bswap::__bswapti2::__bswapti2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::leading_zeros::__clzdi2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::leading_zeros::__clzdi2::__clzdi2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::leading_zeros::__clzsi2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::leading_zeros::__clzsi2::__clzsi2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::leading_zeros::__clzti2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::leading_zeros::__clzti2::__clzti2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::mul::__muldi3"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::mul::__muldi3::__muldi3"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::mul::__multi3"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::mul::__multi3::__multi3"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::sdiv::__divdi3"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::sdiv::__divdi3::__divdi3"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::sdiv::__divsi3"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::sdiv::__divsi3::__divsi3"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::sdiv::__divti3"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::sdiv::__divti3::__divti3"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::sdiv::__moddi3"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::sdiv::__moddi3::__moddi3"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::sdiv::__modsi3"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::sdiv::__modsi3::__modsi3"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::sdiv::__modti3"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::sdiv::__modti3::__modti3"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::shift::__ashldi3"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::shift::__ashldi3::__ashldi3"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::shift::__ashlsi3"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::shift::__ashlsi3::__ashlsi3"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::shift::__ashlti3"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::shift::__ashlti3::__ashlti3"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::shift::__ashrdi3"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::shift::__ashrdi3::__ashrdi3"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::shift::__ashrsi3"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::shift::__ashrsi3::__ashrsi3"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::shift::__ashrti3"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::shift::__ashrti3::__ashrti3"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::shift::__lshrdi3"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::shift::__lshrdi3::__lshrdi3"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::shift::__lshrsi3"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::shift::__lshrsi3::__lshrsi3"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::shift::__lshrti3"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::shift::__lshrti3::__lshrti3"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::trailing_zeros::__ctzdi2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::trailing_zeros::__ctzdi2::__ctzdi2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::trailing_zeros::__ctzsi2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::trailing_zeros::__ctzsi2::__ctzsi2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::trailing_zeros::__ctzti2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::trailing_zeros::__ctzti2::__ctzti2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::udiv::__udivdi3"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::udiv::__udivdi3::__udivdi3"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::udiv::__udivsi3"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::udiv::__udivsi3::__udivsi3"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::udiv::__udivti3"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::udiv::__udivti3::__udivti3"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::udiv::__umoddi3"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::udiv::__umoddi3::__umoddi3"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::udiv::__umodsi3"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::udiv::__umodsi3::__umodsi3"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::udiv::__umodti3"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::udiv::__umodti3::__umodti3"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::cbrt"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::cbrt::cbrt"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::cbrtf"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::cbrtf::cbrtf"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::ceil"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::ceil::ceil"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::ceilf"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::ceilf128"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::ceilf128::ceilf128"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::ceilf16"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::ceilf16::ceilf16"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::ceilf::ceilf"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::copysign"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::copysign::copysign"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::copysignf"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::copysignf128"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::copysignf128::copysignf128"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::copysignf16"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::copysignf16::copysignf16"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::copysignf::copysignf"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::fabs"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::fabs::fabs"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::fabsf"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::fabsf128"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::fabsf128::fabsf128"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::fabsf16"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::fabsf16::fabsf16"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::fabsf::fabsf"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::fdim"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::fdim::fdim"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::fdimf"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::fdimf128"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::fdimf128::fdimf128"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::fdimf16"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::fdimf16::fdimf16"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::fdimf::fdimf"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::floor"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::floor::floor"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::floorf"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::floorf128"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::floorf128::floorf128"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::floorf16"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::floorf16::floorf16"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::floorf::floorf"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::fma"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::fma::fma"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::fmaf"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::fmaf128"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::fmaf128::fmaf128"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::fmaf::fmaf"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::fmax"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::fmax::fmax"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::fmaxf"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::fmaxf128"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::fmaxf128::fmaxf128"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::fmaxf16"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::fmaxf16::fmaxf16"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::fmaxf::fmaxf"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::fmaximum"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::fmaximum::fmaximum"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::fmaximumf"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::fmaximumf128"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::fmaximumf128::fmaximumf128"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::fmaximumf16"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::fmaximumf16::fmaximumf16"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::fmaximumf::fmaximumf"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::fmin"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::fmin::fmin"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::fminf"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::fminf128"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::fminf128::fminf128"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::fminf16"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::fminf16::fminf16"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::fminf::fminf"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::fminimum"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::fminimum::fminimum"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::fminimumf"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::fminimumf128"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::fminimumf128::fminimumf128"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::fminimumf16"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::fminimumf16::fminimumf16"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::fminimumf::fminimumf"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::fmod"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::fmod::fmod"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::fmodf"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::fmodf128"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::fmodf128::fmodf128"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::fmodf16"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::fmodf16::fmodf16"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::fmodf::fmodf"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::rint"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::rint::rint"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::rintf"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::rintf128"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::rintf128::rintf128"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::rintf16"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::rintf16::rintf16"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::rintf::rintf"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::round"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::round::round"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::roundeven"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::roundeven::roundeven"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::roundevenf"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::roundevenf128"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::roundevenf128::roundevenf128"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::roundevenf16"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::roundevenf16::roundevenf16"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::roundevenf::roundevenf"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::roundf"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::roundf128"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::roundf128::roundf128"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::roundf16"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::roundf16::roundf16"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::roundf::roundf"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::sqrt"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::sqrt::sqrt"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::sqrtf"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::sqrtf128"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::sqrtf128::sqrtf128"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::sqrtf16"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::sqrtf16::sqrtf16"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::sqrtf::sqrtf"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::trunc"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::trunc::trunc"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::truncf"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::truncf128"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::truncf128::truncf128"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::truncf16"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::truncf16::truncf16"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::truncf::truncf"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/probestack.rs",
    "func": "probestack::__rust_probestack"
  },
  {
    "file": "compiler-builtins/libm/src/math/acos.rs",
    "func": "math::libm_math::acos::acos"
  },
  {
    "file": "compiler-builtins/libm/src/math/acos.rs",
    "func": "math::libm_math::acos::r"
  },
  {
    "file": "compiler-builtins/libm/src/math/acosf.rs",
    "func": "math::libm_math::acosf::acosf"
  },
  {
    "file": "compiler-builtins/libm/src/math/acosf.rs",
    "func": "math::libm_math::acosf::r"
  },
  {
    "file": "compiler-builtins/libm/src/math/acosh.rs",
    "func": "math::libm_math::acosh::acosh"
  },
  {
    "file": "compiler-builtins/libm/src/math/acoshf.rs",
    "func": "math::libm_math::acoshf::acoshf"
  },
  {
    "file": "compiler-builtins/libm/src/math/arch/x86.rs",
    "func": "math::libm_math::arch::x86::sqrt"
  },
  {
    "file": "compiler-builtins/libm/src/math/arch/x86.rs",
    "func": "math::libm_math::arch::x86::sqrtf"
  },
  {
    "file": "compiler-builtins/libm/src/math/arch/x86/detect.rs",
    "func": "math::libm_math::arch::x86::detect::get_cpu_features"
  },
  {
    "file": "compiler-builtins/libm/src/math/arch/x86/detect.rs",
    "func": "math::libm_math::arch::x86::detect::load_x86_features"
  },
  {
    "file": "compiler-builtins/libm/src/math/arch/x86/fma.rs",
    "func": "math::libm_math::arch::x86::fma::fma"
  },
  {
    "file": "compiler-builtins/libm/src/math/arch/x86/fma.rs",
    "func": "math::libm_math::arch::x86::fma::fma_fallback"
  },
  {
    "file": "compiler-builtins/libm/src/math/arch/x86/fma.rs",
    "func": "math::libm_math::arch::x86::fma::fma_with_fma"
  },
  {
    "file": "compiler-builtins/libm/src/math/arch/x86/fma.rs",
    "func": "math::libm_math::arch::x86::fma::fma_with_fma4"
  },
  {
    "file": "compiler-builtins/libm/src/math/arch/x86/fma.rs",
    "func": "math::libm_math::arch::x86::fma::fmaf"
  },
  {
    "file": "compiler-builtins/libm/src/math/arch/x86/fma.rs",
    "func": "math::libm_math::arch::x86::fma::fmaf_fallback"
  },
  {
    "file": "compiler-builtins/libm/src/math/arch/x86/fma.rs",
    "func": "math::libm_math::arch::x86::fma::fmaf_with_fma"
  },
  {
    "file": "compiler-builtins/libm/src/math/arch/x86/fma.rs",
    "func": "math::libm_math::arch::x86::fma::fmaf_with_fma4"
  },
  {
    "file": "compiler-builtins/libm/src/math/asin.rs",
    "func": "math::libm_math::asin::asin"
  },
  {
    "file": "compiler-builtins/libm/src/math/asin.rs",
    "func": "math::libm_math::asin::comp_r"
  },
  {
    "file": "compiler-builtins/libm/src/math/asinf.rs",
    "func": "math::libm_math::asinf::asinf"
  },
  {
    "file": "compiler-builtins/libm/src/math/asinf.rs",
    "func": "math::libm_math::asinf::r"
  },
  {
    "file": "compiler-builtins/libm/src/math/asinh.rs",
    "func": "math::libm_math::asinh::asinh"
  },
  {
    "file": "compiler-builtins/libm/src/math/asinhf.rs",
    "func": "math::libm_math::asinhf::asinhf"
  },
  {
    "file": "compiler-builtins/libm/src/math/atan.rs",
    "func": "math::libm_math::atan::atan"
  },
  {
    "file": "compiler-builtins/libm/src/math/atan2.rs",
    "func": "math::libm_math::atan2::atan2"
  },
  {
    "file": "compiler-builtins/libm/src/math/atan2f.rs",
    "func": "math::libm_math::atan2f::atan2f"
  },
  {
    "file": "compiler-builtins/libm/src/math/atanf.rs",
    "func": "math::libm_math::atanf::atanf"
  },
  {
    "file": "compiler-builtins/libm/src/math/atanh.rs",
    "func": "math::libm_math::atanh::atanh"
  },
  {
    "file": "compiler-builtins/libm/src/math/atanhf.rs",
    "func": "math::libm_math::atanhf::atanhf"
  },
  {
    "file": "compiler-builtins/libm/src/math/cbrt.rs",
    "func": "math::libm_math::cbrt::cbrt"
  },
  {
    "file": "compiler-builtins/libm/src/math/cbrtf.rs",
    "func": "math::libm_math::cbrtf::cbrtf"
  },
  {
    "file": "compiler-builtins/libm/src/math/ceil.rs",
    "func": "math::libm_math::ceil::ceil"
  },
  {
    "file": "compiler-builtins/libm/src/math/ceil.rs",
    "func": "math::libm_math::ceil::ceilf"
  },
  {
    "file": "compiler-builtins/libm/src/math/ceil.rs",
    "func": "math::libm_math::ceil::ceilf128"
  },
  {
    "file": "compiler-builtins/libm/src/math/ceil.rs",
    "func": "math::libm_math::ceil::ceilf16"
  },
  {
    "file": "compiler-builtins/libm/src/math/copysign.rs",
    "func": "math::libm_math::copysign::copysign"
  },
  {
    "file": "compiler-builtins/libm/src/math/copysign.rs",
    "func": "math::libm_math::copysign::copysignf"
  },
  {
    "file": "compiler-builtins/libm/src/math/copysign.rs",
    "func": "math::libm_math::copysign::copysignf128"
  },
  {
    "file": "compiler-builtins/libm/src/math/copysign.rs",
    "func": "math::libm_math::copysign::copysignf16"
  },
  {
    "file": "compiler-builtins/libm/src/math/cos.rs",
    "func": "math::libm_math::cos::cos"
  },
  {
    "file": "compiler-builtins/libm/src/math/cosf.rs",
    "func": "math::libm_math::cosf::cosf"
  },
  {
    "file": "compiler-builtins/libm/src/math/cosh.rs",
    "func": "math::libm_math::cosh::cosh"
  },
  {
    "file": "compiler-builtins/libm/src/math/coshf.rs",
    "func": "math::libm_math::coshf::coshf"
  },
  {
    "file": "compiler-builtins/libm/src/math/erf.rs",
    "func": "math::libm_math::erf::erf"
  },
  {
    "file": "compiler-builtins/libm/src/math/erf.rs",
    "func": "math::libm_math::erf::erfc"
  },
  {
    "file": "compiler-builtins/libm/src/math/erf.rs",
    "func": "math::libm_math::erf::erfc1"
  },
  {
    "file": "compiler-builtins/libm/src/math/erf.rs",
    "func": "math::libm_math::erf::erfc2"
  },
  {
    "file": "compiler-builtins/libm/src/math/erff.rs",
    "func": "math::libm_math::erff::erfc1"
  },
  {
    "file": "compiler-builtins/libm/src/math/erff.rs",
    "func": "math::libm_math::erff::erfc2"
  },
  {
    "file": "compiler-builtins/libm/src/math/erff.rs",
    "func": "math::libm_math::erff::erfcf"
  },
  {
    "file": "compiler-builtins/libm/src/math/erff.rs",
    "func": "math::libm_math::erff::erff"
  },
  {
    "file": "compiler-builtins/libm/src/math/exp.rs",
    "func": "math::libm_math::exp::exp"
  },
  {
    "file": "compiler-builtins/libm/src/math/exp10.rs",
    "func": "math::libm_math::exp10::exp10"
  },
  {
    "file": "compiler-builtins/libm/src/math/exp10f.rs",
    "func": "math::libm_math::exp10f::exp10f"
  },
  {
    "file": "compiler-builtins/libm/src/math/exp2.rs",
    "func": "math::libm_math::exp2::exp2"
  },
  {
    "file": "compiler-builtins/libm/src/math/exp2f.rs",
    "func": "math::libm_math::exp2f::exp2f"
  },
  {
    "file": "compiler-builtins/libm/src/math/expf.rs",
    "func": "math::libm_math::expf::expf"
  },
  {
    "file": "compiler-builtins/libm/src/math/expm1.rs",
    "func": "math::libm_math::expm1::expm1"
  },
  {
    "file": "compiler-builtins/libm/src/math/expm1f.rs",
    "func": "math::libm_math::expm1f::expm1f"
  },
  {
    "file": "compiler-builtins/libm/src/math/expo2.rs",
    "func": "math::libm_math::expo2::expo2"
  },
  {
    "file": "compiler-builtins/libm/src/math/fabs.rs",
    "func": "math::libm_math::fabs::fabs"
  },
  {
    "file": "compiler-builtins/libm/src/math/fabs.rs",
    "func": "math::libm_math::fabs::fabsf"
  },
  {
    "file": "compiler-builtins/libm/src/math/fabs.rs",
    "func": "math::libm_math::fabs::fabsf128"
  },
  {
    "file": "compiler-builtins/libm/src/math/fabs.rs",
    "func": "math::libm_math::fabs::fabsf16"
  },
  {
    "file": "compiler-builtins/libm/src/math/fdim.rs",
    "func": "math::libm_math::fdim::fdim"
  },
  {
    "file": "compiler-builtins/libm/src/math/fdim.rs",
    "func": "math::libm_math::fdim::fdimf"
  },
  {
    "file": "compiler-builtins/libm/src/math/fdim.rs",
    "func": "math::libm_math::fdim::fdimf128"
  },
  {
    "file": "compiler-builtins/libm/src/math/fdim.rs",
    "func": "math::libm_math::fdim::fdimf16"
  },
  {
    "file": "compiler-builtins/libm/src/math/floor.rs",
    "func": "math::libm_math::floor::floor"
  },
  {
    "file": "compiler-builtins/libm/src/math/floor.rs",
    "func": "math::libm_math::floor::floorf"
  },
  {
    "file": "compiler-builtins/libm/src/math/floor.rs",
    "func": "math::libm_math::floor::floorf128"
  },
  {
    "file": "compiler-builtins/libm/src/math/floor.rs",
    "func": "math::libm_math::floor::floorf16"
  },
  {
    "file": "compiler-builtins/libm/src/math/fma.rs",
    "func": "math::libm_math::fma::fma"
  },
  {
    "file": "compiler-builtins/libm/src/math/fma.rs",
    "func": "math::libm_math::fma::fmaf"
  },
  {
    "file": "compiler-builtins/libm/src/math/fma.rs",
    "func": "math::libm_math::fma::fmaf128"
  },
  {
    "file": "compiler-builtins/libm/src/math/fma.rs",
    "func": "math::libm_math::fma::fmaf16"
  },
  {
    "file": "compiler-builtins/libm/src/math/fmin_fmax.rs",
    "func": "math::libm_math::fmin_fmax::fmax"
  },
  {
    "file": "compiler-builtins/libm/src/math/fmin_fmax.rs",
    "func": "math::libm_math::fmin_fmax::fmaxf"
  },
  {
    "file": "compiler-builtins/libm/src/math/fmin_fmax.rs",
    "func": "math::libm_math::fmin_fmax::fmaxf128"
  },
  {
    "file": "compiler-builtins/libm/src/math/fmin_fmax.rs",
    "func": "math::libm_math::fmin_fmax::fmaxf16"
  },
  {
    "file": "compiler-builtins/libm/src/math/fmin_fmax.rs",
    "func": "math::libm_math::fmin_fmax::fmin"
  },
  {
    "file": "compiler-builtins/libm/src/math/fmin_fmax.rs",
    "func": "math::libm_math::fmin_fmax::fminf"
  },
  {
    "file": "compiler-builtins/libm/src/math/fmin_fmax.rs",
    "func": "math::libm_math::fmin_fmax::fminf128"
  },
  {
    "file": "compiler-builtins/libm/src/math/fmin_fmax.rs",
    "func": "math::libm_math::fmin_fmax::fminf16"
  },
  {
    "file": "compiler-builtins/libm/src/math/fminimum_fmaximum.rs",
    "func": "math::libm_math::fminimum_fmaximum::fmaximum"
  },
  {
    "file": "compiler-builtins/libm/src/math/fminimum_fmaximum.rs",
    "func": "math::libm_math::fminimum_fmaximum::fmaximumf"
  },
  {
    "file": "compiler-builtins/libm/src/math/fminimum_fmaximum.rs",
    "func": "math::libm_math::fminimum_fmaximum::fmaximumf128"
  },
  {
    "file": "compiler-builtins/libm/src/math/fminimum_fmaximum.rs",
    "func": "math::libm_math::fminimum_fmaximum::fmaximumf16"
  },
  {
    "file": "compiler-builtins/libm/src/math/fminimum_fmaximum.rs",
    "func": "math::libm_math::fminimum_fmaximum::fminimum"
  },
  {
    "file": "compiler-builtins/libm/src/math/fminimum_fmaximum.rs",
    "func": "math::libm_math::fminimum_fmaximum::fminimumf"
  },
  {
    "file": "compiler-builtins/libm/src/math/fminimum_fmaximum.rs",
    "func": "math::libm_math::fminimum_fmaximum::fminimumf128"
  },
  {
    "file": "compiler-builtins/libm/src/math/fminimum_fmaximum.rs",
    "func": "math::libm_math::fminimum_fmaximum::fminimumf16"
  },
  {
    "file": "compiler-builtins/libm/src/math/fminimum_fmaximum_num.rs",
    "func": "math::libm_math::fminimum_fmaximum_num::fmaximum_num"
  },
  {
    "file": "compiler-builtins/libm/src/math/fminimum_fmaximum_num.rs",
    "func": "math::libm_math::fminimum_fmaximum_num::fmaximum_numf"
  },
  {
    "file": "compiler-builtins/libm/src/math/fminimum_fmaximum_num.rs",
    "func": "math::libm_math::fminimum_fmaximum_num::fmaximum_numf128"
  },
  {
    "file": "compiler-builtins/libm/src/math/fminimum_fmaximum_num.rs",
    "func": "math::libm_math::fminimum_fmaximum_num::fmaximum_numf16"
  },
  {
    "file": "compiler-builtins/libm/src/math/fminimum_fmaximum_num.rs",
    "func": "math::libm_math::fminimum_fmaximum_num::fminimum_num"
  },
  {
    "file": "compiler-builtins/libm/src/math/fminimum_fmaximum_num.rs",
    "func": "math::libm_math::fminimum_fmaximum_num::fminimum_numf"
  },
  {
    "file": "compiler-builtins/libm/src/math/fminimum_fmaximum_num.rs",
    "func": "math::libm_math::fminimum_fmaximum_num::fminimum_numf128"
  },
  {
    "file": "compiler-builtins/libm/src/math/fminimum_fmaximum_num.rs",
    "func": "math::libm_math::fminimum_fmaximum_num::fminimum_numf16"
  },
  {
    "file": "compiler-builtins/libm/src/math/fmod.rs",
    "func": "math::libm_math::fmod::fmod"
  },
  {
    "file": "compiler-builtins/libm/src/math/fmod.rs",
    "func": "math::libm_math::fmod::fmodf"
  },
  {
    "file": "compiler-builtins/libm/src/math/fmod.rs",
    "func": "math::libm_math::fmod::fmodf128"
  },
  {
    "file": "compiler-builtins/libm/src/math/fmod.rs",
    "func": "math::libm_math::fmod::fmodf16"
  },
  {
    "file": "compiler-builtins/libm/src/math/frexp.rs",
    "func": "math::libm_math::frexp::frexp"
  },
  {
    "file": "compiler-builtins/libm/src/math/frexpf.rs",
    "func": "math::libm_math::frexpf::frexpf"
  },
  {
    "file": "compiler-builtins/libm/src/math/hypot.rs",
    "func": "math::libm_math::hypot::hypot"
  },
  {
    "file": "compiler-builtins/libm/src/math/hypot.rs",
    "func": "math::libm_math::hypot::sq"
  },
  {
    "file": "compiler-builtins/libm/src/math/hypotf.rs",
    "func": "math::libm_math::hypotf::hypotf"
  },
  {
    "file": "compiler-builtins/libm/src/math/ilogb.rs",
    "func": "math::libm_math::ilogb::ilogb"
  },
  {
    "file": "compiler-builtins/libm/src/math/ilogbf.rs",
    "func": "math::libm_math::ilogbf::ilogbf"
  },
  {
    "file": "compiler-builtins/libm/src/math/j0.rs",
    "func": "math::libm_math::j0::common"
  },
  {
    "file": "compiler-builtins/libm/src/math/j0.rs",
    "func": "math::libm_math::j0::j0"
  },
  {
    "file": "compiler-builtins/libm/src/math/j0.rs",
    "func": "math::libm_math::j0::pzero"
  },
  {
    "file": "compiler-builtins/libm/src/math/j0.rs",
    "func": "math::libm_math::j0::qzero"
  },
  {
    "file": "compiler-builtins/libm/src/math/j0.rs",
    "func": "math::libm_math::j0::y0"
  },
  {
    "file": "compiler-builtins/libm/src/math/j0f.rs",
    "func": "math::libm_math::j0f::common"
  },
  {
    "file": "compiler-builtins/libm/src/math/j0f.rs",
    "func": "math::libm_math::j0f::j0f"
  },
  {
    "file": "compiler-builtins/libm/src/math/j0f.rs",
    "func": "math::libm_math::j0f::pzerof"
  },
  {
    "file": "compiler-builtins/libm/src/math/j0f.rs",
    "func": "math::libm_math::j0f::qzerof"
  },
  {
    "file": "compiler-builtins/libm/src/math/j0f.rs",
    "func": "math::libm_math::j0f::y0f"
  },
  {
    "file": "compiler-builtins/libm/src/math/j1.rs",
    "func": "math::libm_math::j1::common"
  },
  {
    "file": "compiler-builtins/libm/src/math/j1.rs",
    "func": "math::libm_math::j1::j1"
  },
  {
    "file": "compiler-builtins/libm/src/math/j1.rs",
    "func": "math::libm_math::j1::pone"
  },
  {
    "file": "compiler-builtins/libm/src/math/j1.rs",
    "func": "math::libm_math::j1::qone"
  },
  {
    "file": "compiler-builtins/libm/src/math/j1.rs",
    "func": "math::libm_math::j1::y1"
  },
  {
    "file": "compiler-builtins/libm/src/math/j1f.rs",
    "func": "math::libm_math::j1f::common"
  },
  {
    "file": "compiler-builtins/libm/src/math/j1f.rs",
    "func": "math::libm_math::j1f::j1f"
  },
  {
    "file": "compiler-builtins/libm/src/math/j1f.rs",
    "func": "math::libm_math::j1f::ponef"
  },
  {
    "file": "compiler-builtins/libm/src/math/j1f.rs",
    "func": "math::libm_math::j1f::qonef"
  },
  {
    "file": "compiler-builtins/libm/src/math/j1f.rs",
    "func": "math::libm_math::j1f::y1f"
  },
  {
    "file": "compiler-builtins/libm/src/math/jn.rs",
    "func": "math::libm_math::jn::jn"
  },
  {
    "file": "compiler-builtins/libm/src/math/jn.rs",
    "func": "math::libm_math::jn::yn"
  },
  {
    "file": "compiler-builtins/libm/src/math/jnf.rs",
    "func": "math::libm_math::jnf::jnf"
  },
  {
    "file": "compiler-builtins/libm/src/math/jnf.rs",
    "func": "math::libm_math::jnf::ynf"
  },
  {
    "file": "compiler-builtins/libm/src/math/k_cos.rs",
    "func": "math::libm_math::k_cos::k_cos"
  },
  {
    "file": "compiler-builtins/libm/src/math/k_cosf.rs",
    "func": "math::libm_math::k_cosf::k_cosf"
  },
  {
    "file": "compiler-builtins/libm/src/math/k_expo2.rs",
    "func": "math::libm_math::k_expo2::k_expo2"
  },
  {
    "file": "compiler-builtins/libm/src/math/k_expo2f.rs",
    "func": "math::libm_math::k_expo2f::k_expo2f"
  },
  {
    "file": "compiler-builtins/libm/src/math/k_sin.rs",
    "func": "math::libm_math::k_sin::k_sin"
  },
  {
    "file": "compiler-builtins/libm/src/math/k_sinf.rs",
    "func": "math::libm_math::k_sinf::k_sinf"
  },
  {
    "file": "compiler-builtins/libm/src/math/k_tan.rs",
    "func": "math::libm_math::k_tan::k_tan"
  },
  {
    "file": "compiler-builtins/libm/src/math/k_tan.rs",
    "func": "math::libm_math::k_tan::zero_low_word"
  },
  {
    "file": "compiler-builtins/libm/src/math/k_tanf.rs",
    "func": "math::libm_math::k_tanf::k_tanf"
  },
  {
    "file": "compiler-builtins/libm/src/math/ldexp.rs",
    "func": "math::libm_math::ldexp::ldexp"
  },
  {
    "file": "compiler-builtins/libm/src/math/ldexp.rs",
    "func": "math::libm_math::ldexp::ldexpf"
  },
  {
    "file": "compiler-builtins/libm/src/math/ldexp.rs",
    "func": "math::libm_math::ldexp::ldexpf128"
  },
  {
    "file": "compiler-builtins/libm/src/math/ldexp.rs",
    "func": "math::libm_math::ldexp::ldexpf16"
  },
  {
    "file": "compiler-builtins/libm/src/math/lgamma.rs",
    "func": "math::libm_math::lgamma::lgamma"
  },
  {
    "file": "compiler-builtins/libm/src/math/lgamma_r.rs",
    "func": "math::libm_math::lgamma_r::lgamma_r"
  },
  {
    "file": "compiler-builtins/libm/src/math/lgamma_r.rs",
    "func": "math::libm_math::lgamma_r::sin_pi"
  },
  {
    "file": "compiler-builtins/libm/src/math/lgammaf.rs",
    "func": "math::libm_math::lgammaf::lgammaf"
  },
  {
    "file": "compiler-builtins/libm/src/math/lgammaf_r.rs",
    "func": "math::libm_math::lgammaf_r::lgammaf_r"
  },
  {
    "file": "compiler-builtins/libm/src/math/lgammaf_r.rs",
    "func": "math::libm_math::lgammaf_r::sin_pi"
  },
  {
    "file": "compiler-builtins/libm/src/math/log.rs",
    "func": "math::libm_math::log::log"
  },
  {
    "file": "compiler-builtins/libm/src/math/log10.rs",
    "func": "math::libm_math::log10::log10"
  },
  {
    "file": "compiler-builtins/libm/src/math/log10f.rs",
    "func": "math::libm_math::log10f::log10f"
  },
  {
    "file": "compiler-builtins/libm/src/math/log1p.rs",
    "func": "math::libm_math::log1p::log1p"
  },
  {
    "file": "compiler-builtins/libm/src/math/log1pf.rs",
    "func": "math::libm_math::log1pf::log1pf"
  },
  {
    "file": "compiler-builtins/libm/src/math/log2.rs",
    "func": "math::libm_math::log2::log2"
  },
  {
    "file": "compiler-builtins/libm/src/math/log2f.rs",
    "func": "math::libm_math::log2f::log2f"
  },
  {
    "file": "compiler-builtins/libm/src/math/logf.rs",
    "func": "math::libm_math::logf::logf"
  },
  {
    "file": "compiler-builtins/libm/src/math/mod.rs",
    "func": "math::libm_math::combine_words"
  },
  {
    "file": "compiler-builtins/libm/src/math/mod.rs",
    "func": "math::libm_math::get_high_word"
  },
  {
    "file": "compiler-builtins/libm/src/math/mod.rs",
    "func": "math::libm_math::get_low_word"
  },
  {
    "file": "compiler-builtins/libm/src/math/mod.rs",
    "func": "math::libm_math::with_set_high_word"
  },
  {
    "file": "compiler-builtins/libm/src/math/mod.rs",
    "func": "math::libm_math::with_set_low_word"
  },
  {
    "file": "compiler-builtins/libm/src/math/modf.rs",
    "func": "math::libm_math::modf::modf"
  },
  {
    "file": "compiler-builtins/libm/src/math/modff.rs",
    "func": "math::libm_math::modff::modff"
  },
  {
    "file": "compiler-builtins/libm/src/math/nextafter.rs",
    "func": "math::libm_math::nextafter::nextafter"
  },
  {
    "file": "compiler-builtins/libm/src/math/nextafterf.rs",
    "func": "math::libm_math::nextafterf::nextafterf"
  },
  {
    "file": "compiler-builtins/libm/src/math/pow.rs",
    "func": "math::libm_math::pow::pow"
  },
  {
    "file": "compiler-builtins/libm/src/math/powf.rs",
    "func": "math::libm_math::powf::powf"
  },
  {
    "file": "compiler-builtins/libm/src/math/rem_pio2.rs",
    "func": "math::libm_math::rem_pio2::rem_pio2"
  },
  {
    "file": "compiler-builtins/libm/src/math/rem_pio2.rs",
    "func": "math::libm_math::rem_pio2::rem_pio2::medium"
  },
  {
    "file": "compiler-builtins/libm/src/math/rem_pio2f.rs",
    "func": "math::libm_math::rem_pio2f::rem_pio2f"
  },
  {
    "file": "compiler-builtins/libm/src/math/remainder.rs",
    "func": "math::libm_math::remainder::remainder"
  },
  {
    "file": "compiler-builtins/libm/src/math/remainderf.rs",
    "func": "math::libm_math::remainderf::remainderf"
  },
  {
    "file": "compiler-builtins/libm/src/math/remquo.rs",
    "func": "math::libm_math::remquo::remquo"
  },
  {
    "file": "compiler-builtins/libm/src/math/remquof.rs",
    "func": "math::libm_math::remquof::remquof"
  },
  {
    "file": "compiler-builtins/libm/src/math/rint.rs",
    "func": "math::libm_math::rint::rint"
  },
  {
    "file": "compiler-builtins/libm/src/math/rint.rs",
    "func": "math::libm_math::rint::rintf"
  },
  {
    "file": "compiler-builtins/libm/src/math/rint.rs",
    "func": "math::libm_math::rint::rintf128"
  },
  {
    "file": "compiler-builtins/libm/src/math/rint.rs",
    "func": "math::libm_math::rint::rintf16"
  },
  {
    "file": "compiler-builtins/libm/src/math/round.rs",
    "func": "math::libm_math::round::round"
  },
  {
    "file": "compiler-builtins/libm/src/math/round.rs",
    "func": "math::libm_math::round::roundf"
  },
  {
    "file": "compiler-builtins/libm/src/math/round.rs",
    "func": "math::libm_math::round::roundf128"
  },
  {
    "file": "compiler-builtins/libm/src/math/round.rs",
    "func": "math::libm_math::round::roundf16"
  },
  {
    "file": "compiler-builtins/libm/src/math/roundeven.rs",
    "func": "math::libm_math::roundeven::roundeven"
  },
  {
    "file": "compiler-builtins/libm/src/math/roundeven.rs",
    "func": "math::libm_math::roundeven::roundevenf"
  },
  {
    "file": "compiler-builtins/libm/src/math/roundeven.rs",
    "func": "math::libm_math::roundeven::roundevenf128"
  },
  {
    "file": "compiler-builtins/libm/src/math/roundeven.rs",
    "func": "math::libm_math::roundeven::roundevenf16"
  },
  {
    "file": "compiler-builtins/libm/src/math/scalbn.rs",
    "func": "math::libm_math::scalbn::scalbn"
  },
  {
    "file": "compiler-builtins/libm/src/math/scalbn.rs",
    "func": "math::libm_math::scalbn::scalbnf"
  },
  {
    "file": "compiler-builtins/libm/src/math/scalbn.rs",
    "func": "math::libm_math::scalbn::scalbnf128"
  },
  {
    "file": "compiler-builtins/libm/src/math/scalbn.rs",
    "func": "math::libm_math::scalbn::scalbnf16"
  },
  {
    "file": "compiler-builtins/libm/src/math/sin.rs",
    "func": "math::libm_math::sin::sin"
  },
  {
    "file": "compiler-builtins/libm/src/math/sincos.rs",
    "func": "math::libm_math::sincos::sincos"
  },
  {
    "file": "compiler-builtins/libm/src/math/sincosf.rs",
    "func": "math::libm_math::sincosf::sincosf"
  },
  {
    "file": "compiler-builtins/libm/src/math/sinf.rs",
    "func": "math::libm_math::sinf::sinf"
  },
  {
    "file": "compiler-builtins/libm/src/math/sinh.rs",
    "func": "math::libm_math::sinh::sinh"
  },
  {
    "file": "compiler-builtins/libm/src/math/sinhf.rs",
    "func": "math::libm_math::sinhf::sinhf"
  },
  {
    "file": "compiler-builtins/libm/src/math/sqrt.rs",
    "func": "math::libm_math::sqrt::sqrt"
  },
  {
    "file": "compiler-builtins/libm/src/math/sqrt.rs",
    "func": "math::libm_math::sqrt::sqrtf"
  },
  {
    "file": "compiler-builtins/libm/src/math/sqrt.rs",
    "func": "math::libm_math::sqrt::sqrtf128"
  },
  {
    "file": "compiler-builtins/libm/src/math/sqrt.rs",
    "func": "math::libm_math::sqrt::sqrtf16"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/big.rs",
    "func": "math::libm_math::support::big::<impl math::libm_math::support::int_traits::HInt for i128>::widen"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/big.rs",
    "func": "math::libm_math::support::big::<impl math::libm_math::support::int_traits::HInt for i128>::widen_hi"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/big.rs",
    "func": "math::libm_math::support::big::<impl math::libm_math::support::int_traits::HInt for i128>::widen_mul"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/big.rs",
    "func": "math::libm_math::support::big::<impl math::libm_math::support::int_traits::HInt for i128>::zero_widen"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/big.rs",
    "func": "math::libm_math::support::big::<impl math::libm_math::support::int_traits::HInt for i128>::zero_widen_mul"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/big.rs",
    "func": "math::libm_math::support::big::<impl math::libm_math::support::int_traits::HInt for u128>::widen"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/big.rs",
    "func": "math::libm_math::support::big::<impl math::libm_math::support::int_traits::HInt for u128>::widen_hi"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/big.rs",
    "func": "math::libm_math::support::big::<impl math::libm_math::support::int_traits::HInt for u128>::widen_mul"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/big.rs",
    "func": "math::libm_math::support::big::<impl math::libm_math::support::int_traits::HInt for u128>::zero_widen"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/big.rs",
    "func": "math::libm_math::support::big::<impl math::libm_math::support::int_traits::HInt for u128>::zero_widen_mul"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/env.rs",
    "func": "math::libm_math::support::env::Status"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/feature_detect.rs",
    "func": "math::libm_math::arch::x86::fma::fma::initializer"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/feature_detect.rs",
    "func": "math::libm_math::arch::x86::fma::fmaf::initializer"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/feature_detect.rs",
    "func": "math::libm_math::support::feature_detect::Flags"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/feature_detect.rs",
    "func": "math::libm_math::support::feature_detect::Flags::empty"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/feature_detect.rs",
    "func": "math::libm_math::support::feature_detect::Flags::from_bits"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/float_traits.rs",
    "func": "<f128 as math::libm_math::support::float_traits::DFloat>::narrow"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/float_traits.rs",
    "func": "<f128 as math::libm_math::support::float_traits::Float>::abs"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/float_traits.rs",
    "func": "<f128 as math::libm_math::support::float_traits::Float>::copysign"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/float_traits.rs",
    "func": "<f128 as math::libm_math::support::float_traits::Float>::fma"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/float_traits.rs",
    "func": "<f128 as math::libm_math::support::float_traits::Float>::from_bits"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/float_traits.rs",
    "func": "<f128 as math::libm_math::support::float_traits::Float>::is_infinite"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/float_traits.rs",
    "func": "<f128 as math::libm_math::support::float_traits::Float>::is_nan"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/float_traits.rs",
    "func": "<f128 as math::libm_math::support::float_traits::Float>::is_sign_negative"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/float_traits.rs",
    "func": "<f128 as math::libm_math::support::float_traits::Float>::normalize"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/float_traits.rs",
    "func": "<f128 as math::libm_math::support::float_traits::Float>::to_bits"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/float_traits.rs",
    "func": "<f16 as math::libm_math::support::float_traits::Float>::abs"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/float_traits.rs",
    "func": "<f16 as math::libm_math::support::float_traits::Float>::copysign"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/float_traits.rs",
    "func": "<f16 as math::libm_math::support::float_traits::Float>::fma"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/float_traits.rs",
    "func": "<f16 as math::libm_math::support::float_traits::Float>::from_bits"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/float_traits.rs",
    "func": "<f16 as math::libm_math::support::float_traits::Float>::is_infinite"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/float_traits.rs",
    "func": "<f16 as math::libm_math::support::float_traits::Float>::is_nan"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/float_traits.rs",
    "func": "<f16 as math::libm_math::support::float_traits::Float>::is_sign_negative"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/float_traits.rs",
    "func": "<f16 as math::libm_math::support::float_traits::Float>::normalize"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/float_traits.rs",
    "func": "<f16 as math::libm_math::support::float_traits::Float>::to_bits"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/float_traits.rs",
    "func": "<f16 as math::libm_math::support::float_traits::HFloat>::widen"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/float_traits.rs",
    "func": "<f32 as math::libm_math::support::float_traits::DFloat>::narrow"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/float_traits.rs",
    "func": "<f32 as math::libm_math::support::float_traits::Float>::abs"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/float_traits.rs",
    "func": "<f32 as math::libm_math::support::float_traits::Float>::copysign"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/float_traits.rs",
    "func": "<f32 as math::libm_math::support::float_traits::Float>::fma"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/float_traits.rs",
    "func": "<f32 as math::libm_math::support::float_traits::Float>::from_bits"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/float_traits.rs",
    "func": "<f32 as math::libm_math::support::float_traits::Float>::is_infinite"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/float_traits.rs",
    "func": "<f32 as math::libm_math::support::float_traits::Float>::is_nan"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/float_traits.rs",
    "func": "<f32 as math::libm_math::support::float_traits::Float>::is_sign_negative"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/float_traits.rs",
    "func": "<f32 as math::libm_math::support::float_traits::Float>::normalize"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/float_traits.rs",
    "func": "<f32 as math::libm_math::support::float_traits::Float>::to_bits"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/float_traits.rs",
    "func": "<f32 as math::libm_math::support::float_traits::HFloat>::widen"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/float_traits.rs",
    "func": "<f64 as math::libm_math::support::float_traits::DFloat>::narrow"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/float_traits.rs",
    "func": "<f64 as math::libm_math::support::float_traits::Float>::abs"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/float_traits.rs",
    "func": "<f64 as math::libm_math::support::float_traits::Float>::copysign"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/float_traits.rs",
    "func": "<f64 as math::libm_math::support::float_traits::Float>::fma"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/float_traits.rs",
    "func": "<f64 as math::libm_math::support::float_traits::Float>::from_bits"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/float_traits.rs",
    "func": "<f64 as math::libm_math::support::float_traits::Float>::is_infinite"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/float_traits.rs",
    "func": "<f64 as math::libm_math::support::float_traits::Float>::is_nan"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/float_traits.rs",
    "func": "<f64 as math::libm_math::support::float_traits::Float>::is_sign_negative"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/float_traits.rs",
    "func": "<f64 as math::libm_math::support::float_traits::Float>::normalize"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/float_traits.rs",
    "func": "<f64 as math::libm_math::support::float_traits::Float>::to_bits"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/float_traits.rs",
    "func": "<f64 as math::libm_math::support::float_traits::HFloat>::widen"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/float_traits.rs",
    "func": "math::libm_math::support::float_traits::f32_from_bits"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/float_traits.rs",
    "func": "math::libm_math::support::float_traits::f32_to_bits"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/float_traits.rs",
    "func": "math::libm_math::support::float_traits::f64_from_bits"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/float_traits.rs",
    "func": "math::libm_math::support::float_traits::f64_to_bits"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/hex_float.rs",
    "func": "math::libm_math::support::hex_float::dec_digit"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/hex_float.rs",
    "func": "math::libm_math::support::hex_float::hex_digit"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/hex_float.rs",
    "func": "math::libm_math::support::hex_float::shr_odd_rounding"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/hex_float.rs",
    "func": "math::libm_math::support::hex_float::u128_ilog2"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i128 as math::libm_math::support::int_traits::CastInto<f128>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i128 as math::libm_math::support::int_traits::CastInto<f128>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i128 as math::libm_math::support::int_traits::CastInto<f16>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i128 as math::libm_math::support::int_traits::CastInto<f16>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i128 as math::libm_math::support::int_traits::CastInto<f32>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i128 as math::libm_math::support::int_traits::CastInto<f32>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i128 as math::libm_math::support::int_traits::CastInto<f64>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i128 as math::libm_math::support::int_traits::CastInto<f64>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i128 as math::libm_math::support::int_traits::CastInto<i128>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i128 as math::libm_math::support::int_traits::CastInto<i128>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i128 as math::libm_math::support::int_traits::CastInto<i16>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i128 as math::libm_math::support::int_traits::CastInto<i16>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i128 as math::libm_math::support::int_traits::CastInto<i32>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i128 as math::libm_math::support::int_traits::CastInto<i32>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i128 as math::libm_math::support::int_traits::CastInto<i64>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i128 as math::libm_math::support::int_traits::CastInto<i64>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i128 as math::libm_math::support::int_traits::CastInto<i8>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i128 as math::libm_math::support::int_traits::CastInto<i8>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i128 as math::libm_math::support::int_traits::CastInto<isize>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i128 as math::libm_math::support::int_traits::CastInto<isize>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i128 as math::libm_math::support::int_traits::CastInto<u128>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i128 as math::libm_math::support::int_traits::CastInto<u128>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i128 as math::libm_math::support::int_traits::CastInto<u16>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i128 as math::libm_math::support::int_traits::CastInto<u16>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i128 as math::libm_math::support::int_traits::CastInto<u32>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i128 as math::libm_math::support::int_traits::CastInto<u32>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i128 as math::libm_math::support::int_traits::CastInto<u64>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i128 as math::libm_math::support::int_traits::CastInto<u64>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i128 as math::libm_math::support::int_traits::CastInto<u8>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i128 as math::libm_math::support::int_traits::CastInto<u8>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i128 as math::libm_math::support::int_traits::CastInto<usize>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i128 as math::libm_math::support::int_traits::CastInto<usize>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i128 as math::libm_math::support::int_traits::DInt>::hi"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i128 as math::libm_math::support::int_traits::DInt>::lo"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i128 as math::libm_math::support::int_traits::Int>::abs"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i128 as math::libm_math::support::int_traits::Int>::abs_diff"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i128 as math::libm_math::support::int_traits::Int>::checked_add"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i128 as math::libm_math::support::int_traits::Int>::checked_sub"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i128 as math::libm_math::support::int_traits::Int>::from_bool"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i128 as math::libm_math::support::int_traits::Int>::from_unsigned"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i128 as math::libm_math::support::int_traits::Int>::ilog2"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i128 as math::libm_math::support::int_traits::Int>::is_zero"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i128 as math::libm_math::support::int_traits::Int>::leading_zeros"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i128 as math::libm_math::support::int_traits::Int>::logical_shr"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i128 as math::libm_math::support::int_traits::Int>::overflowing_add"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i128 as math::libm_math::support::int_traits::Int>::overflowing_sub"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i128 as math::libm_math::support::int_traits::Int>::rotate_left"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i128 as math::libm_math::support::int_traits::Int>::signed"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i128 as math::libm_math::support::int_traits::Int>::unsigned"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i128 as math::libm_math::support::int_traits::Int>::unsigned_abs"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i128 as math::libm_math::support::int_traits::Int>::wrapping_add"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i128 as math::libm_math::support::int_traits::Int>::wrapping_mul"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i128 as math::libm_math::support::int_traits::Int>::wrapping_neg"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i128 as math::libm_math::support::int_traits::Int>::wrapping_shl"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i128 as math::libm_math::support::int_traits::Int>::wrapping_shr"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i128 as math::libm_math::support::int_traits::Int>::wrapping_sub"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i16 as math::libm_math::support::int_traits::CastInto<f128>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i16 as math::libm_math::support::int_traits::CastInto<f128>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i16 as math::libm_math::support::int_traits::CastInto<f16>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i16 as math::libm_math::support::int_traits::CastInto<f16>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i16 as math::libm_math::support::int_traits::CastInto<f32>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i16 as math::libm_math::support::int_traits::CastInto<f32>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i16 as math::libm_math::support::int_traits::CastInto<f64>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i16 as math::libm_math::support::int_traits::CastInto<f64>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i16 as math::libm_math::support::int_traits::CastInto<i128>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i16 as math::libm_math::support::int_traits::CastInto<i128>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i16 as math::libm_math::support::int_traits::CastInto<i16>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i16 as math::libm_math::support::int_traits::CastInto<i16>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i16 as math::libm_math::support::int_traits::CastInto<i32>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i16 as math::libm_math::support::int_traits::CastInto<i32>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i16 as math::libm_math::support::int_traits::CastInto<i64>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i16 as math::libm_math::support::int_traits::CastInto<i64>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i16 as math::libm_math::support::int_traits::CastInto<i8>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i16 as math::libm_math::support::int_traits::CastInto<i8>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i16 as math::libm_math::support::int_traits::CastInto<isize>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i16 as math::libm_math::support::int_traits::CastInto<isize>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i16 as math::libm_math::support::int_traits::CastInto<u128>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i16 as math::libm_math::support::int_traits::CastInto<u128>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i16 as math::libm_math::support::int_traits::CastInto<u16>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i16 as math::libm_math::support::int_traits::CastInto<u16>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i16 as math::libm_math::support::int_traits::CastInto<u32>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i16 as math::libm_math::support::int_traits::CastInto<u32>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i16 as math::libm_math::support::int_traits::CastInto<u64>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i16 as math::libm_math::support::int_traits::CastInto<u64>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i16 as math::libm_math::support::int_traits::CastInto<u8>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i16 as math::libm_math::support::int_traits::CastInto<u8>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i16 as math::libm_math::support::int_traits::CastInto<usize>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i16 as math::libm_math::support::int_traits::CastInto<usize>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i16 as math::libm_math::support::int_traits::DInt>::hi"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i16 as math::libm_math::support::int_traits::DInt>::lo"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i16 as math::libm_math::support::int_traits::HInt>::widen"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i16 as math::libm_math::support::int_traits::HInt>::widen_hi"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i16 as math::libm_math::support::int_traits::HInt>::widen_mul"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i16 as math::libm_math::support::int_traits::HInt>::zero_widen"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i16 as math::libm_math::support::int_traits::HInt>::zero_widen_mul"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i16 as math::libm_math::support::int_traits::Int>::abs"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i16 as math::libm_math::support::int_traits::Int>::abs_diff"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i16 as math::libm_math::support::int_traits::Int>::checked_add"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i16 as math::libm_math::support::int_traits::Int>::checked_sub"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i16 as math::libm_math::support::int_traits::Int>::from_bool"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i16 as math::libm_math::support::int_traits::Int>::from_unsigned"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i16 as math::libm_math::support::int_traits::Int>::ilog2"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i16 as math::libm_math::support::int_traits::Int>::is_zero"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i16 as math::libm_math::support::int_traits::Int>::leading_zeros"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i16 as math::libm_math::support::int_traits::Int>::logical_shr"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i16 as math::libm_math::support::int_traits::Int>::overflowing_add"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i16 as math::libm_math::support::int_traits::Int>::overflowing_sub"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i16 as math::libm_math::support::int_traits::Int>::rotate_left"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i16 as math::libm_math::support::int_traits::Int>::signed"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i16 as math::libm_math::support::int_traits::Int>::unsigned"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i16 as math::libm_math::support::int_traits::Int>::unsigned_abs"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i16 as math::libm_math::support::int_traits::Int>::wrapping_add"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i16 as math::libm_math::support::int_traits::Int>::wrapping_mul"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i16 as math::libm_math::support::int_traits::Int>::wrapping_neg"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i16 as math::libm_math::support::int_traits::Int>::wrapping_shl"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i16 as math::libm_math::support::int_traits::Int>::wrapping_shr"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i16 as math::libm_math::support::int_traits::Int>::wrapping_sub"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i32 as math::libm_math::support::int_traits::CastInto<f128>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i32 as math::libm_math::support::int_traits::CastInto<f128>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i32 as math::libm_math::support::int_traits::CastInto<f16>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i32 as math::libm_math::support::int_traits::CastInto<f16>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i32 as math::libm_math::support::int_traits::CastInto<f32>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i32 as math::libm_math::support::int_traits::CastInto<f32>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i32 as math::libm_math::support::int_traits::CastInto<f64>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i32 as math::libm_math::support::int_traits::CastInto<f64>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i32 as math::libm_math::support::int_traits::CastInto<i128>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i32 as math::libm_math::support::int_traits::CastInto<i128>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i32 as math::libm_math::support::int_traits::CastInto<i16>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i32 as math::libm_math::support::int_traits::CastInto<i16>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i32 as math::libm_math::support::int_traits::CastInto<i32>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i32 as math::libm_math::support::int_traits::CastInto<i32>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i32 as math::libm_math::support::int_traits::CastInto<i64>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i32 as math::libm_math::support::int_traits::CastInto<i64>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i32 as math::libm_math::support::int_traits::CastInto<i8>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i32 as math::libm_math::support::int_traits::CastInto<i8>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i32 as math::libm_math::support::int_traits::CastInto<isize>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i32 as math::libm_math::support::int_traits::CastInto<isize>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i32 as math::libm_math::support::int_traits::CastInto<u128>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i32 as math::libm_math::support::int_traits::CastInto<u128>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i32 as math::libm_math::support::int_traits::CastInto<u16>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i32 as math::libm_math::support::int_traits::CastInto<u16>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i32 as math::libm_math::support::int_traits::CastInto<u32>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i32 as math::libm_math::support::int_traits::CastInto<u32>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i32 as math::libm_math::support::int_traits::CastInto<u64>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i32 as math::libm_math::support::int_traits::CastInto<u64>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i32 as math::libm_math::support::int_traits::CastInto<u8>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i32 as math::libm_math::support::int_traits::CastInto<u8>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i32 as math::libm_math::support::int_traits::CastInto<usize>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i32 as math::libm_math::support::int_traits::CastInto<usize>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i32 as math::libm_math::support::int_traits::DInt>::hi"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i32 as math::libm_math::support::int_traits::DInt>::lo"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i32 as math::libm_math::support::int_traits::HInt>::widen"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i32 as math::libm_math::support::int_traits::HInt>::widen_hi"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i32 as math::libm_math::support::int_traits::HInt>::widen_mul"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i32 as math::libm_math::support::int_traits::HInt>::zero_widen"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i32 as math::libm_math::support::int_traits::HInt>::zero_widen_mul"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i32 as math::libm_math::support::int_traits::Int>::abs"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i32 as math::libm_math::support::int_traits::Int>::abs_diff"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i32 as math::libm_math::support::int_traits::Int>::checked_add"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i32 as math::libm_math::support::int_traits::Int>::checked_sub"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i32 as math::libm_math::support::int_traits::Int>::from_bool"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i32 as math::libm_math::support::int_traits::Int>::from_unsigned"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i32 as math::libm_math::support::int_traits::Int>::ilog2"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i32 as math::libm_math::support::int_traits::Int>::is_zero"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i32 as math::libm_math::support::int_traits::Int>::leading_zeros"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i32 as math::libm_math::support::int_traits::Int>::logical_shr"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i32 as math::libm_math::support::int_traits::Int>::overflowing_add"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i32 as math::libm_math::support::int_traits::Int>::overflowing_sub"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i32 as math::libm_math::support::int_traits::Int>::rotate_left"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i32 as math::libm_math::support::int_traits::Int>::signed"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i32 as math::libm_math::support::int_traits::Int>::unsigned"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i32 as math::libm_math::support::int_traits::Int>::unsigned_abs"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i32 as math::libm_math::support::int_traits::Int>::wrapping_add"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i32 as math::libm_math::support::int_traits::Int>::wrapping_mul"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i32 as math::libm_math::support::int_traits::Int>::wrapping_neg"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i32 as math::libm_math::support::int_traits::Int>::wrapping_shl"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i32 as math::libm_math::support::int_traits::Int>::wrapping_shr"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i32 as math::libm_math::support::int_traits::Int>::wrapping_sub"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i64 as math::libm_math::support::int_traits::CastInto<f128>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i64 as math::libm_math::support::int_traits::CastInto<f128>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i64 as math::libm_math::support::int_traits::CastInto<f16>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i64 as math::libm_math::support::int_traits::CastInto<f16>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i64 as math::libm_math::support::int_traits::CastInto<f32>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i64 as math::libm_math::support::int_traits::CastInto<f32>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i64 as math::libm_math::support::int_traits::CastInto<f64>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i64 as math::libm_math::support::int_traits::CastInto<f64>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i64 as math::libm_math::support::int_traits::CastInto<i128>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i64 as math::libm_math::support::int_traits::CastInto<i128>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i64 as math::libm_math::support::int_traits::CastInto<i16>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i64 as math::libm_math::support::int_traits::CastInto<i16>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i64 as math::libm_math::support::int_traits::CastInto<i32>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i64 as math::libm_math::support::int_traits::CastInto<i32>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i64 as math::libm_math::support::int_traits::CastInto<i64>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i64 as math::libm_math::support::int_traits::CastInto<i64>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i64 as math::libm_math::support::int_traits::CastInto<i8>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i64 as math::libm_math::support::int_traits::CastInto<i8>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i64 as math::libm_math::support::int_traits::CastInto<isize>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i64 as math::libm_math::support::int_traits::CastInto<isize>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i64 as math::libm_math::support::int_traits::CastInto<u128>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i64 as math::libm_math::support::int_traits::CastInto<u128>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i64 as math::libm_math::support::int_traits::CastInto<u16>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i64 as math::libm_math::support::int_traits::CastInto<u16>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i64 as math::libm_math::support::int_traits::CastInto<u32>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i64 as math::libm_math::support::int_traits::CastInto<u32>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i64 as math::libm_math::support::int_traits::CastInto<u64>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i64 as math::libm_math::support::int_traits::CastInto<u64>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i64 as math::libm_math::support::int_traits::CastInto<u8>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i64 as math::libm_math::support::int_traits::CastInto<u8>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i64 as math::libm_math::support::int_traits::CastInto<usize>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i64 as math::libm_math::support::int_traits::CastInto<usize>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i64 as math::libm_math::support::int_traits::DInt>::hi"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i64 as math::libm_math::support::int_traits::DInt>::lo"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i64 as math::libm_math::support::int_traits::HInt>::widen"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i64 as math::libm_math::support::int_traits::HInt>::widen_hi"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i64 as math::libm_math::support::int_traits::HInt>::widen_mul"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i64 as math::libm_math::support::int_traits::HInt>::zero_widen"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i64 as math::libm_math::support::int_traits::HInt>::zero_widen_mul"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i64 as math::libm_math::support::int_traits::Int>::abs"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i64 as math::libm_math::support::int_traits::Int>::abs_diff"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i64 as math::libm_math::support::int_traits::Int>::checked_add"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i64 as math::libm_math::support::int_traits::Int>::checked_sub"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i64 as math::libm_math::support::int_traits::Int>::from_bool"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i64 as math::libm_math::support::int_traits::Int>::from_unsigned"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i64 as math::libm_math::support::int_traits::Int>::ilog2"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i64 as math::libm_math::support::int_traits::Int>::is_zero"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i64 as math::libm_math::support::int_traits::Int>::leading_zeros"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i64 as math::libm_math::support::int_traits::Int>::logical_shr"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i64 as math::libm_math::support::int_traits::Int>::overflowing_add"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i64 as math::libm_math::support::int_traits::Int>::overflowing_sub"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i64 as math::libm_math::support::int_traits::Int>::rotate_left"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i64 as math::libm_math::support::int_traits::Int>::signed"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i64 as math::libm_math::support::int_traits::Int>::unsigned"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i64 as math::libm_math::support::int_traits::Int>::unsigned_abs"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i64 as math::libm_math::support::int_traits::Int>::wrapping_add"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i64 as math::libm_math::support::int_traits::Int>::wrapping_mul"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i64 as math::libm_math::support::int_traits::Int>::wrapping_neg"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i64 as math::libm_math::support::int_traits::Int>::wrapping_shl"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i64 as math::libm_math::support::int_traits::Int>::wrapping_shr"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i64 as math::libm_math::support::int_traits::Int>::wrapping_sub"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i8 as math::libm_math::support::int_traits::CastInto<f128>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i8 as math::libm_math::support::int_traits::CastInto<f128>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i8 as math::libm_math::support::int_traits::CastInto<f16>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i8 as math::libm_math::support::int_traits::CastInto<f16>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i8 as math::libm_math::support::int_traits::CastInto<f32>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i8 as math::libm_math::support::int_traits::CastInto<f32>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i8 as math::libm_math::support::int_traits::CastInto<f64>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i8 as math::libm_math::support::int_traits::CastInto<f64>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i8 as math::libm_math::support::int_traits::CastInto<i128>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i8 as math::libm_math::support::int_traits::CastInto<i128>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i8 as math::libm_math::support::int_traits::CastInto<i16>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i8 as math::libm_math::support::int_traits::CastInto<i16>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i8 as math::libm_math::support::int_traits::CastInto<i32>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i8 as math::libm_math::support::int_traits::CastInto<i32>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i8 as math::libm_math::support::int_traits::CastInto<i64>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i8 as math::libm_math::support::int_traits::CastInto<i64>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i8 as math::libm_math::support::int_traits::CastInto<i8>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i8 as math::libm_math::support::int_traits::CastInto<i8>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i8 as math::libm_math::support::int_traits::CastInto<isize>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i8 as math::libm_math::support::int_traits::CastInto<isize>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i8 as math::libm_math::support::int_traits::CastInto<u128>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i8 as math::libm_math::support::int_traits::CastInto<u128>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i8 as math::libm_math::support::int_traits::CastInto<u16>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i8 as math::libm_math::support::int_traits::CastInto<u16>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i8 as math::libm_math::support::int_traits::CastInto<u32>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i8 as math::libm_math::support::int_traits::CastInto<u32>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i8 as math::libm_math::support::int_traits::CastInto<u64>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i8 as math::libm_math::support::int_traits::CastInto<u64>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i8 as math::libm_math::support::int_traits::CastInto<u8>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i8 as math::libm_math::support::int_traits::CastInto<u8>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i8 as math::libm_math::support::int_traits::CastInto<usize>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i8 as math::libm_math::support::int_traits::CastInto<usize>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i8 as math::libm_math::support::int_traits::HInt>::widen"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i8 as math::libm_math::support::int_traits::HInt>::widen_hi"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i8 as math::libm_math::support::int_traits::HInt>::widen_mul"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i8 as math::libm_math::support::int_traits::HInt>::zero_widen"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i8 as math::libm_math::support::int_traits::HInt>::zero_widen_mul"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i8 as math::libm_math::support::int_traits::Int>::abs"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i8 as math::libm_math::support::int_traits::Int>::abs_diff"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i8 as math::libm_math::support::int_traits::Int>::checked_add"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i8 as math::libm_math::support::int_traits::Int>::checked_sub"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i8 as math::libm_math::support::int_traits::Int>::from_bool"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i8 as math::libm_math::support::int_traits::Int>::from_unsigned"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i8 as math::libm_math::support::int_traits::Int>::ilog2"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i8 as math::libm_math::support::int_traits::Int>::is_zero"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i8 as math::libm_math::support::int_traits::Int>::leading_zeros"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i8 as math::libm_math::support::int_traits::Int>::logical_shr"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i8 as math::libm_math::support::int_traits::Int>::overflowing_add"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i8 as math::libm_math::support::int_traits::Int>::overflowing_sub"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i8 as math::libm_math::support::int_traits::Int>::rotate_left"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i8 as math::libm_math::support::int_traits::Int>::signed"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i8 as math::libm_math::support::int_traits::Int>::unsigned"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i8 as math::libm_math::support::int_traits::Int>::unsigned_abs"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i8 as math::libm_math::support::int_traits::Int>::wrapping_add"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i8 as math::libm_math::support::int_traits::Int>::wrapping_mul"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i8 as math::libm_math::support::int_traits::Int>::wrapping_neg"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i8 as math::libm_math::support::int_traits::Int>::wrapping_shl"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i8 as math::libm_math::support::int_traits::Int>::wrapping_shr"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i8 as math::libm_math::support::int_traits::Int>::wrapping_sub"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<isize as math::libm_math::support::int_traits::CastInto<i128>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<isize as math::libm_math::support::int_traits::CastInto<i128>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<isize as math::libm_math::support::int_traits::CastInto<i16>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<isize as math::libm_math::support::int_traits::CastInto<i16>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<isize as math::libm_math::support::int_traits::CastInto<i32>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<isize as math::libm_math::support::int_traits::CastInto<i32>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<isize as math::libm_math::support::int_traits::CastInto<i64>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<isize as math::libm_math::support::int_traits::CastInto<i64>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<isize as math::libm_math::support::int_traits::CastInto<i8>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<isize as math::libm_math::support::int_traits::CastInto<i8>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<isize as math::libm_math::support::int_traits::CastInto<isize>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<isize as math::libm_math::support::int_traits::CastInto<isize>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<isize as math::libm_math::support::int_traits::CastInto<u128>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<isize as math::libm_math::support::int_traits::CastInto<u128>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<isize as math::libm_math::support::int_traits::CastInto<u16>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<isize as math::libm_math::support::int_traits::CastInto<u16>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<isize as math::libm_math::support::int_traits::CastInto<u32>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<isize as math::libm_math::support::int_traits::CastInto<u32>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<isize as math::libm_math::support::int_traits::CastInto<u64>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<isize as math::libm_math::support::int_traits::CastInto<u64>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<isize as math::libm_math::support::int_traits::CastInto<u8>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<isize as math::libm_math::support::int_traits::CastInto<u8>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<isize as math::libm_math::support::int_traits::CastInto<usize>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<isize as math::libm_math::support::int_traits::CastInto<usize>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<isize as math::libm_math::support::int_traits::Int>::abs"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<isize as math::libm_math::support::int_traits::Int>::abs_diff"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<isize as math::libm_math::support::int_traits::Int>::checked_add"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<isize as math::libm_math::support::int_traits::Int>::checked_sub"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<isize as math::libm_math::support::int_traits::Int>::from_bool"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<isize as math::libm_math::support::int_traits::Int>::from_unsigned"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<isize as math::libm_math::support::int_traits::Int>::ilog2"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<isize as math::libm_math::support::int_traits::Int>::is_zero"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<isize as math::libm_math::support::int_traits::Int>::leading_zeros"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<isize as math::libm_math::support::int_traits::Int>::logical_shr"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<isize as math::libm_math::support::int_traits::Int>::overflowing_add"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<isize as math::libm_math::support::int_traits::Int>::overflowing_sub"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<isize as math::libm_math::support::int_traits::Int>::rotate_left"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<isize as math::libm_math::support::int_traits::Int>::signed"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<isize as math::libm_math::support::int_traits::Int>::unsigned"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<isize as math::libm_math::support::int_traits::Int>::unsigned_abs"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<isize as math::libm_math::support::int_traits::Int>::wrapping_add"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<isize as math::libm_math::support::int_traits::Int>::wrapping_mul"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<isize as math::libm_math::support::int_traits::Int>::wrapping_neg"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<isize as math::libm_math::support::int_traits::Int>::wrapping_shl"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<isize as math::libm_math::support::int_traits::Int>::wrapping_shr"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<isize as math::libm_math::support::int_traits::Int>::wrapping_sub"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u128 as math::libm_math::support::int_traits::CastInto<i128>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u128 as math::libm_math::support::int_traits::CastInto<i128>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u128 as math::libm_math::support::int_traits::CastInto<i16>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u128 as math::libm_math::support::int_traits::CastInto<i16>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u128 as math::libm_math::support::int_traits::CastInto<i32>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u128 as math::libm_math::support::int_traits::CastInto<i32>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u128 as math::libm_math::support::int_traits::CastInto<i64>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u128 as math::libm_math::support::int_traits::CastInto<i64>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u128 as math::libm_math::support::int_traits::CastInto<i8>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u128 as math::libm_math::support::int_traits::CastInto<i8>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u128 as math::libm_math::support::int_traits::CastInto<isize>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u128 as math::libm_math::support::int_traits::CastInto<isize>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u128 as math::libm_math::support::int_traits::CastInto<u128>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u128 as math::libm_math::support::int_traits::CastInto<u128>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u128 as math::libm_math::support::int_traits::CastInto<u16>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u128 as math::libm_math::support::int_traits::CastInto<u16>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u128 as math::libm_math::support::int_traits::CastInto<u32>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u128 as math::libm_math::support::int_traits::CastInto<u32>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u128 as math::libm_math::support::int_traits::CastInto<u64>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u128 as math::libm_math::support::int_traits::CastInto<u64>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u128 as math::libm_math::support::int_traits::CastInto<u8>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u128 as math::libm_math::support::int_traits::CastInto<u8>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u128 as math::libm_math::support::int_traits::CastInto<usize>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u128 as math::libm_math::support::int_traits::CastInto<usize>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u128 as math::libm_math::support::int_traits::DInt>::hi"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u128 as math::libm_math::support::int_traits::DInt>::lo"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u128 as math::libm_math::support::int_traits::Int>::abs"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u128 as math::libm_math::support::int_traits::Int>::abs_diff"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u128 as math::libm_math::support::int_traits::Int>::checked_add"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u128 as math::libm_math::support::int_traits::Int>::checked_sub"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u128 as math::libm_math::support::int_traits::Int>::from_bool"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u128 as math::libm_math::support::int_traits::Int>::from_unsigned"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u128 as math::libm_math::support::int_traits::Int>::ilog2"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u128 as math::libm_math::support::int_traits::Int>::is_zero"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u128 as math::libm_math::support::int_traits::Int>::leading_zeros"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u128 as math::libm_math::support::int_traits::Int>::logical_shr"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u128 as math::libm_math::support::int_traits::Int>::overflowing_add"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u128 as math::libm_math::support::int_traits::Int>::overflowing_sub"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u128 as math::libm_math::support::int_traits::Int>::rotate_left"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u128 as math::libm_math::support::int_traits::Int>::signed"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u128 as math::libm_math::support::int_traits::Int>::unsigned"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u128 as math::libm_math::support::int_traits::Int>::unsigned_abs"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u128 as math::libm_math::support::int_traits::Int>::wrapping_add"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u128 as math::libm_math::support::int_traits::Int>::wrapping_mul"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u128 as math::libm_math::support::int_traits::Int>::wrapping_neg"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u128 as math::libm_math::support::int_traits::Int>::wrapping_shl"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u128 as math::libm_math::support::int_traits::Int>::wrapping_shr"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u128 as math::libm_math::support::int_traits::Int>::wrapping_sub"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u16 as math::libm_math::support::int_traits::CastInto<i128>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u16 as math::libm_math::support::int_traits::CastInto<i128>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u16 as math::libm_math::support::int_traits::CastInto<i16>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u16 as math::libm_math::support::int_traits::CastInto<i16>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u16 as math::libm_math::support::int_traits::CastInto<i32>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u16 as math::libm_math::support::int_traits::CastInto<i32>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u16 as math::libm_math::support::int_traits::CastInto<i64>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u16 as math::libm_math::support::int_traits::CastInto<i64>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u16 as math::libm_math::support::int_traits::CastInto<i8>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u16 as math::libm_math::support::int_traits::CastInto<i8>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u16 as math::libm_math::support::int_traits::CastInto<isize>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u16 as math::libm_math::support::int_traits::CastInto<isize>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u16 as math::libm_math::support::int_traits::CastInto<u128>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u16 as math::libm_math::support::int_traits::CastInto<u128>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u16 as math::libm_math::support::int_traits::CastInto<u16>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u16 as math::libm_math::support::int_traits::CastInto<u16>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u16 as math::libm_math::support::int_traits::CastInto<u32>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u16 as math::libm_math::support::int_traits::CastInto<u32>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u16 as math::libm_math::support::int_traits::CastInto<u64>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u16 as math::libm_math::support::int_traits::CastInto<u64>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u16 as math::libm_math::support::int_traits::CastInto<u8>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u16 as math::libm_math::support::int_traits::CastInto<u8>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u16 as math::libm_math::support::int_traits::CastInto<usize>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u16 as math::libm_math::support::int_traits::CastInto<usize>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u16 as math::libm_math::support::int_traits::DInt>::hi"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u16 as math::libm_math::support::int_traits::DInt>::lo"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u16 as math::libm_math::support::int_traits::HInt>::widen"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u16 as math::libm_math::support::int_traits::HInt>::widen_hi"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u16 as math::libm_math::support::int_traits::HInt>::widen_mul"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u16 as math::libm_math::support::int_traits::HInt>::zero_widen"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u16 as math::libm_math::support::int_traits::HInt>::zero_widen_mul"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u16 as math::libm_math::support::int_traits::Int>::abs"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u16 as math::libm_math::support::int_traits::Int>::abs_diff"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u16 as math::libm_math::support::int_traits::Int>::checked_add"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u16 as math::libm_math::support::int_traits::Int>::checked_sub"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u16 as math::libm_math::support::int_traits::Int>::from_bool"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u16 as math::libm_math::support::int_traits::Int>::from_unsigned"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u16 as math::libm_math::support::int_traits::Int>::ilog2"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u16 as math::libm_math::support::int_traits::Int>::is_zero"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u16 as math::libm_math::support::int_traits::Int>::leading_zeros"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u16 as math::libm_math::support::int_traits::Int>::logical_shr"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u16 as math::libm_math::support::int_traits::Int>::overflowing_add"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u16 as math::libm_math::support::int_traits::Int>::overflowing_sub"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u16 as math::libm_math::support::int_traits::Int>::rotate_left"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u16 as math::libm_math::support::int_traits::Int>::signed"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u16 as math::libm_math::support::int_traits::Int>::unsigned"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u16 as math::libm_math::support::int_traits::Int>::unsigned_abs"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u16 as math::libm_math::support::int_traits::Int>::wrapping_add"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u16 as math::libm_math::support::int_traits::Int>::wrapping_mul"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u16 as math::libm_math::support::int_traits::Int>::wrapping_neg"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u16 as math::libm_math::support::int_traits::Int>::wrapping_shl"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u16 as math::libm_math::support::int_traits::Int>::wrapping_shr"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u16 as math::libm_math::support::int_traits::Int>::wrapping_sub"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u32 as math::libm_math::support::int_traits::CastInto<i128>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u32 as math::libm_math::support::int_traits::CastInto<i128>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u32 as math::libm_math::support::int_traits::CastInto<i16>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u32 as math::libm_math::support::int_traits::CastInto<i16>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u32 as math::libm_math::support::int_traits::CastInto<i32>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u32 as math::libm_math::support::int_traits::CastInto<i32>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u32 as math::libm_math::support::int_traits::CastInto<i64>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u32 as math::libm_math::support::int_traits::CastInto<i64>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u32 as math::libm_math::support::int_traits::CastInto<i8>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u32 as math::libm_math::support::int_traits::CastInto<i8>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u32 as math::libm_math::support::int_traits::CastInto<isize>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u32 as math::libm_math::support::int_traits::CastInto<isize>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u32 as math::libm_math::support::int_traits::CastInto<u128>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u32 as math::libm_math::support::int_traits::CastInto<u128>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u32 as math::libm_math::support::int_traits::CastInto<u16>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u32 as math::libm_math::support::int_traits::CastInto<u16>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u32 as math::libm_math::support::int_traits::CastInto<u32>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u32 as math::libm_math::support::int_traits::CastInto<u32>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u32 as math::libm_math::support::int_traits::CastInto<u64>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u32 as math::libm_math::support::int_traits::CastInto<u64>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u32 as math::libm_math::support::int_traits::CastInto<u8>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u32 as math::libm_math::support::int_traits::CastInto<u8>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u32 as math::libm_math::support::int_traits::CastInto<usize>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u32 as math::libm_math::support::int_traits::CastInto<usize>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u32 as math::libm_math::support::int_traits::DInt>::hi"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u32 as math::libm_math::support::int_traits::DInt>::lo"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u32 as math::libm_math::support::int_traits::HInt>::widen"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u32 as math::libm_math::support::int_traits::HInt>::widen_hi"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u32 as math::libm_math::support::int_traits::HInt>::widen_mul"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u32 as math::libm_math::support::int_traits::HInt>::zero_widen"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u32 as math::libm_math::support::int_traits::HInt>::zero_widen_mul"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u32 as math::libm_math::support::int_traits::Int>::abs"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u32 as math::libm_math::support::int_traits::Int>::abs_diff"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u32 as math::libm_math::support::int_traits::Int>::checked_add"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u32 as math::libm_math::support::int_traits::Int>::checked_sub"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u32 as math::libm_math::support::int_traits::Int>::from_bool"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u32 as math::libm_math::support::int_traits::Int>::from_unsigned"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u32 as math::libm_math::support::int_traits::Int>::ilog2"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u32 as math::libm_math::support::int_traits::Int>::is_zero"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u32 as math::libm_math::support::int_traits::Int>::leading_zeros"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u32 as math::libm_math::support::int_traits::Int>::logical_shr"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u32 as math::libm_math::support::int_traits::Int>::overflowing_add"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u32 as math::libm_math::support::int_traits::Int>::overflowing_sub"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u32 as math::libm_math::support::int_traits::Int>::rotate_left"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u32 as math::libm_math::support::int_traits::Int>::signed"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u32 as math::libm_math::support::int_traits::Int>::unsigned"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u32 as math::libm_math::support::int_traits::Int>::unsigned_abs"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u32 as math::libm_math::support::int_traits::Int>::wrapping_add"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u32 as math::libm_math::support::int_traits::Int>::wrapping_mul"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u32 as math::libm_math::support::int_traits::Int>::wrapping_neg"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u32 as math::libm_math::support::int_traits::Int>::wrapping_shl"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u32 as math::libm_math::support::int_traits::Int>::wrapping_shr"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u32 as math::libm_math::support::int_traits::Int>::wrapping_sub"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u64 as math::libm_math::support::int_traits::CastInto<i128>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u64 as math::libm_math::support::int_traits::CastInto<i128>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u64 as math::libm_math::support::int_traits::CastInto<i16>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u64 as math::libm_math::support::int_traits::CastInto<i16>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u64 as math::libm_math::support::int_traits::CastInto<i32>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u64 as math::libm_math::support::int_traits::CastInto<i32>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u64 as math::libm_math::support::int_traits::CastInto<i64>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u64 as math::libm_math::support::int_traits::CastInto<i64>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u64 as math::libm_math::support::int_traits::CastInto<i8>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u64 as math::libm_math::support::int_traits::CastInto<i8>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u64 as math::libm_math::support::int_traits::CastInto<isize>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u64 as math::libm_math::support::int_traits::CastInto<isize>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u64 as math::libm_math::support::int_traits::CastInto<u128>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u64 as math::libm_math::support::int_traits::CastInto<u128>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u64 as math::libm_math::support::int_traits::CastInto<u16>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u64 as math::libm_math::support::int_traits::CastInto<u16>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u64 as math::libm_math::support::int_traits::CastInto<u32>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u64 as math::libm_math::support::int_traits::CastInto<u32>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u64 as math::libm_math::support::int_traits::CastInto<u64>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u64 as math::libm_math::support::int_traits::CastInto<u64>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u64 as math::libm_math::support::int_traits::CastInto<u8>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u64 as math::libm_math::support::int_traits::CastInto<u8>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u64 as math::libm_math::support::int_traits::CastInto<usize>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u64 as math::libm_math::support::int_traits::CastInto<usize>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u64 as math::libm_math::support::int_traits::DInt>::hi"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u64 as math::libm_math::support::int_traits::DInt>::lo"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u64 as math::libm_math::support::int_traits::HInt>::widen"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u64 as math::libm_math::support::int_traits::HInt>::widen_hi"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u64 as math::libm_math::support::int_traits::HInt>::widen_mul"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u64 as math::libm_math::support::int_traits::HInt>::zero_widen"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u64 as math::libm_math::support::int_traits::HInt>::zero_widen_mul"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u64 as math::libm_math::support::int_traits::Int>::abs"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u64 as math::libm_math::support::int_traits::Int>::abs_diff"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u64 as math::libm_math::support::int_traits::Int>::checked_add"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u64 as math::libm_math::support::int_traits::Int>::checked_sub"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u64 as math::libm_math::support::int_traits::Int>::from_bool"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u64 as math::libm_math::support::int_traits::Int>::from_unsigned"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u64 as math::libm_math::support::int_traits::Int>::ilog2"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u64 as math::libm_math::support::int_traits::Int>::is_zero"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u64 as math::libm_math::support::int_traits::Int>::leading_zeros"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u64 as math::libm_math::support::int_traits::Int>::logical_shr"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u64 as math::libm_math::support::int_traits::Int>::overflowing_add"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u64 as math::libm_math::support::int_traits::Int>::overflowing_sub"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u64 as math::libm_math::support::int_traits::Int>::rotate_left"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u64 as math::libm_math::support::int_traits::Int>::signed"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u64 as math::libm_math::support::int_traits::Int>::unsigned"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u64 as math::libm_math::support::int_traits::Int>::unsigned_abs"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u64 as math::libm_math::support::int_traits::Int>::wrapping_add"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u64 as math::libm_math::support::int_traits::Int>::wrapping_mul"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u64 as math::libm_math::support::int_traits::Int>::wrapping_neg"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u64 as math::libm_math::support::int_traits::Int>::wrapping_shl"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u64 as math::libm_math::support::int_traits::Int>::wrapping_shr"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u64 as math::libm_math::support::int_traits::Int>::wrapping_sub"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u8 as math::libm_math::support::int_traits::CastInto<i128>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u8 as math::libm_math::support::int_traits::CastInto<i128>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u8 as math::libm_math::support::int_traits::CastInto<i16>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u8 as math::libm_math::support::int_traits::CastInto<i16>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u8 as math::libm_math::support::int_traits::CastInto<i32>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u8 as math::libm_math::support::int_traits::CastInto<i32>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u8 as math::libm_math::support::int_traits::CastInto<i64>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u8 as math::libm_math::support::int_traits::CastInto<i64>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u8 as math::libm_math::support::int_traits::CastInto<i8>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u8 as math::libm_math::support::int_traits::CastInto<i8>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u8 as math::libm_math::support::int_traits::CastInto<isize>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u8 as math::libm_math::support::int_traits::CastInto<isize>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u8 as math::libm_math::support::int_traits::CastInto<u128>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u8 as math::libm_math::support::int_traits::CastInto<u128>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u8 as math::libm_math::support::int_traits::CastInto<u16>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u8 as math::libm_math::support::int_traits::CastInto<u16>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u8 as math::libm_math::support::int_traits::CastInto<u32>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u8 as math::libm_math::support::int_traits::CastInto<u32>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u8 as math::libm_math::support::int_traits::CastInto<u64>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u8 as math::libm_math::support::int_traits::CastInto<u64>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u8 as math::libm_math::support::int_traits::CastInto<u8>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u8 as math::libm_math::support::int_traits::CastInto<u8>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u8 as math::libm_math::support::int_traits::CastInto<usize>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u8 as math::libm_math::support::int_traits::CastInto<usize>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u8 as math::libm_math::support::int_traits::HInt>::widen"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u8 as math::libm_math::support::int_traits::HInt>::widen_hi"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u8 as math::libm_math::support::int_traits::HInt>::widen_mul"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u8 as math::libm_math::support::int_traits::HInt>::zero_widen"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u8 as math::libm_math::support::int_traits::HInt>::zero_widen_mul"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u8 as math::libm_math::support::int_traits::Int>::abs"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u8 as math::libm_math::support::int_traits::Int>::abs_diff"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u8 as math::libm_math::support::int_traits::Int>::checked_add"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u8 as math::libm_math::support::int_traits::Int>::checked_sub"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u8 as math::libm_math::support::int_traits::Int>::from_bool"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u8 as math::libm_math::support::int_traits::Int>::from_unsigned"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u8 as math::libm_math::support::int_traits::Int>::ilog2"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u8 as math::libm_math::support::int_traits::Int>::is_zero"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u8 as math::libm_math::support::int_traits::Int>::leading_zeros"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u8 as math::libm_math::support::int_traits::Int>::logical_shr"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u8 as math::libm_math::support::int_traits::Int>::overflowing_add"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u8 as math::libm_math::support::int_traits::Int>::overflowing_sub"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u8 as math::libm_math::support::int_traits::Int>::rotate_left"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u8 as math::libm_math::support::int_traits::Int>::signed"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u8 as math::libm_math::support::int_traits::Int>::unsigned"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u8 as math::libm_math::support::int_traits::Int>::unsigned_abs"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u8 as math::libm_math::support::int_traits::Int>::wrapping_add"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u8 as math::libm_math::support::int_traits::Int>::wrapping_mul"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u8 as math::libm_math::support::int_traits::Int>::wrapping_neg"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u8 as math::libm_math::support::int_traits::Int>::wrapping_shl"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u8 as math::libm_math::support::int_traits::Int>::wrapping_shr"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u8 as math::libm_math::support::int_traits::Int>::wrapping_sub"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<usize as math::libm_math::support::int_traits::CastInto<i128>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<usize as math::libm_math::support::int_traits::CastInto<i128>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<usize as math::libm_math::support::int_traits::CastInto<i16>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<usize as math::libm_math::support::int_traits::CastInto<i16>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<usize as math::libm_math::support::int_traits::CastInto<i32>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<usize as math::libm_math::support::int_traits::CastInto<i32>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<usize as math::libm_math::support::int_traits::CastInto<i64>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<usize as math::libm_math::support::int_traits::CastInto<i64>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<usize as math::libm_math::support::int_traits::CastInto<i8>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<usize as math::libm_math::support::int_traits::CastInto<i8>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<usize as math::libm_math::support::int_traits::CastInto<isize>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<usize as math::libm_math::support::int_traits::CastInto<isize>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<usize as math::libm_math::support::int_traits::CastInto<u128>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<usize as math::libm_math::support::int_traits::CastInto<u128>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<usize as math::libm_math::support::int_traits::CastInto<u16>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<usize as math::libm_math::support::int_traits::CastInto<u16>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<usize as math::libm_math::support::int_traits::CastInto<u32>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<usize as math::libm_math::support::int_traits::CastInto<u32>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<usize as math::libm_math::support::int_traits::CastInto<u64>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<usize as math::libm_math::support::int_traits::CastInto<u64>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<usize as math::libm_math::support::int_traits::CastInto<u8>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<usize as math::libm_math::support::int_traits::CastInto<u8>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<usize as math::libm_math::support::int_traits::CastInto<usize>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<usize as math::libm_math::support::int_traits::CastInto<usize>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<usize as math::libm_math::support::int_traits::Int>::abs"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<usize as math::libm_math::support::int_traits::Int>::abs_diff"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<usize as math::libm_math::support::int_traits::Int>::checked_add"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<usize as math::libm_math::support::int_traits::Int>::checked_sub"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<usize as math::libm_math::support::int_traits::Int>::from_bool"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<usize as math::libm_math::support::int_traits::Int>::from_unsigned"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<usize as math::libm_math::support::int_traits::Int>::ilog2"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<usize as math::libm_math::support::int_traits::Int>::is_zero"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<usize as math::libm_math::support::int_traits::Int>::leading_zeros"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<usize as math::libm_math::support::int_traits::Int>::logical_shr"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<usize as math::libm_math::support::int_traits::Int>::overflowing_add"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<usize as math::libm_math::support::int_traits::Int>::overflowing_sub"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<usize as math::libm_math::support::int_traits::Int>::rotate_left"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<usize as math::libm_math::support::int_traits::Int>::signed"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<usize as math::libm_math::support::int_traits::Int>::unsigned"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<usize as math::libm_math::support::int_traits::Int>::unsigned_abs"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<usize as math::libm_math::support::int_traits::Int>::wrapping_add"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<usize as math::libm_math::support::int_traits::Int>::wrapping_mul"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<usize as math::libm_math::support::int_traits::Int>::wrapping_neg"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<usize as math::libm_math::support::int_traits::Int>::wrapping_shl"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<usize as math::libm_math::support::int_traits::Int>::wrapping_shr"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<usize as math::libm_math::support::int_traits::Int>::wrapping_sub"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/mod.rs",
    "func": "math::libm_math::support::cold_path"
  },
  {
    "file": "compiler-builtins/libm/src/math/tan.rs",
    "func": "math::libm_math::tan::tan"
  },
  {
    "file": "compiler-builtins/libm/src/math/tanf.rs",
    "func": "math::libm_math::tanf::tanf"
  },
  {
    "file": "compiler-builtins/libm/src/math/tanh.rs",
    "func": "math::libm_math::tanh::tanh"
  },
  {
    "file": "compiler-builtins/libm/src/math/tanhf.rs",
    "func": "math::libm_math::tanhf::tanhf"
  },
  {
    "file": "compiler-builtins/libm/src/math/tgamma.rs",
    "func": "math::libm_math::tgamma::s"
  },
  {
    "file": "compiler-builtins/libm/src/math/tgamma.rs",
    "func": "math::libm_math::tgamma::sinpi"
  },
  {
    "file": "compiler-builtins/libm/src/math/tgamma.rs",
    "func": "math::libm_math::tgamma::tgamma"
  },
  {
    "file": "compiler-builtins/libm/src/math/tgammaf.rs",
    "func": "math::libm_math::tgammaf::tgammaf"
  },
  {
    "file": "compiler-builtins/libm/src/math/trunc.rs",
    "func": "math::libm_math::trunc::trunc"
  },
  {
    "file": "compiler-builtins/libm/src/math/trunc.rs",
    "func": "math::libm_math::trunc::truncf"
  },
  {
    "file": "compiler-builtins/libm/src/math/trunc.rs",
    "func": "math::libm_math::trunc::truncf128"
  },
  {
    "file": "compiler-builtins/libm/src/math/trunc.rs",
    "func": "math::libm_math::trunc::truncf16"
  },
  {
    "file": "core/src/alloc/layout.rs",
    "func": "alloc::layout::Layout::array::inner",
    "hash": "127889923421687259182131750266993896404"
  },
  {
    "file": "core/src/alloc/layout.rs",
    "func": "alloc::layout::Layout::array::{closure#0}::{closure#1}::{closure#2}::inner"
  },
  {
    "file": "core/src/alloc/layout.rs",
    "func": "alloc::layout::Layout::array::{closure#2}::{closure#2}::inner"
  },
  {
    "file": "core/src/alloc/layout.rs",
    "func": "alloc::layout::Layout::array::{closure#3}::{closure#0}::inner"
  },
  {
    "file": "core/src/alloc/layout.rs",
    "func": "alloc::layout::Layout::from_size_align",
    "hash": "179577718025975109605070093745231126853"
  },
  {
    "file": "core/src/alloc/layout.rs",
    "func": "alloc::layout::Layout::from_size_align_unchecked",
    "hash": "1578994998615824856317820460975113366188"
  },
  {
    "file": "core/src/alloc/layout.rs",
    "func": "alloc::layout::Layout::from_size_alignment",
    "hash": "1628875806215483567415952590565783337775"
  },
  {
    "file": "core/src/alloc/layout.rs",
    "func": "alloc::layout::Layout::is_size_align_valid",
    "hash": "1181075802237898706213442782841232723352"
  },
  {
    "file": "core/src/alloc/layout.rs",
    "func": "alloc::layout::Layout::max_size_for_align",
    "hash": "31265288173249298141030810952705142187"
  },
  {
    "file": "core/src/alloc/layout.rs",
    "func": "alloc::layout::verify::check_align",
    "hash": "122735750288632645705051879945028974783",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/alloc/layout.rs",
    "func": "alloc::layout::verify::check_align_to",
    "hash": "41258375493406853315755300787972714470",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/alloc/layout.rs",
    "func": "alloc::layout::verify::check_array_i32",
    "hash": "21143605162737017573576413569157768496",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/alloc/layout.rs",
    "func": "alloc::layout::verify::check_dangling",
    "hash": "1673517003099872117715713437193521002061",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/alloc/layout.rs",
    "func": "alloc::layout::verify::check_extend",
    "hash": "1068983286355564918011631588927192274289",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/alloc/layout.rs",
    "func": "alloc::layout::verify::check_extend_packed",
    "hash": "169782120189418391812301929494308899602",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/alloc/layout.rs",
    "func": "alloc::layout::verify::check_for_value_i32",
    "hash": "23202723147678510767332980892176606475",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/alloc/layout.rs",
    "func": "alloc::layout::verify::check_for_value_raw_i32",
    "hash": "134854526479532571077779144198091652631",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/alloc/layout.rs",
    "func": "alloc::layout::verify::check_new_i32",
    "hash": "133313270068453773735361589450689062508",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/alloc/layout.rs",
    "func": "alloc::layout::verify::check_pad_to_align",
    "hash": "69088382905132962489466881560278448909",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/alloc/layout.rs",
    "func": "alloc::layout::verify::check_padding_needed_for",
    "hash": "69606726992318006622180089153817520288",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/alloc/layout.rs",
    "func": "alloc::layout::verify::check_repeat",
    "hash": "1658756911859830379313312637004480849243",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/alloc/layout.rs",
    "func": "alloc::layout::verify::check_repeat_packed",
    "hash": "541054377794600593413299130667277965012",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/alloc/layout.rs",
    "func": "alloc::layout::verify::check_size",
    "hash": "6505762060290955263062408359921946116",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/arch.rs",
    "func": "arch::breakpoint",
    "hash": "99650591390125918952171517249803128775"
  },
  {
    "file": "core/src/array/mod.rs",
    "func": "array::TryFromSliceError",
    "hash": "139721257861356276754517459444279341416"
  },
  {
    "file": "core/src/ascii.rs",
    "func": "ascii::EscapeDefault::empty",
    "hash": "225559420643399376912976676095844365966"
  },
  {
    "file": "core/src/ascii.rs",
    "func": "ascii::EscapeDefault::new",
    "hash": "89429183355173050947974656781433359425"
  },
  {
    "file": "core/src/ascii.rs",
    "func": "ascii::escape_default",
    "hash": "74631051240262689468463518349994093872"
  },
  {
    "file": "core/src/ascii/ascii_char.rs",
    "func": "ascii::ascii_char::AsciiChar::digit",
    "hash": "104977514803640014543820158632891574"
  },
  {
    "file": "core/src/ascii/ascii_char.rs",
    "func": "ascii::ascii_char::AsciiChar::digit_unchecked",
    "hash": "1171663986222399894714726637380419136195"
  },
  {
    "file": "core/src/ascii/ascii_char.rs",
    "func": "ascii::ascii_char::AsciiChar::from_u8",
    "hash": "113010127514654522688326963268232009031"
  },
  {
    "file": "core/src/ascii/ascii_char.rs",
    "func": "ascii::ascii_char::AsciiChar::from_u8_unchecked",
    "hash": "652182000514958061713215128671564018150"
  },
  {
    "file": "core/src/bstr/mod.rs",
    "func": "<&bstr::ByteStr as default::Default>::default",
    "hash": "699327119150500604918116525523942161642"
  },
  {
    "file": "core/src/bstr/mod.rs",
    "func": "<&mut bstr::ByteStr as default::Default>::default",
    "hash": "23817497238136392418611277327210111045"
  },
  {
    "file": "core/src/cell.rs",
    "func": "cell::is_reading",
    "hash": "32248880528759840584053932239783595705"
  },
  {
    "file": "core/src/cell.rs",
    "func": "cell::is_writing",
    "hash": "73974500527097648084659887106375495461"
  },
  {
    "file": "core/src/cell/lazy.rs",
    "func": "cell::lazy::panic_poisoned",
    "hash": "113473294404597135359431152123578737047"
  },
  {
    "file": "core/src/char/convert.rs",
    "func": "char::convert::<impl convert::From<char> for u128>::from",
    "hash": "42008396276546041352960514068639392308"
  },
  {
    "file": "core/src/char/convert.rs",
    "func": "char::convert::<impl convert::From<char> for u32>::from",
    "hash": "745284784608407050016933018147827298794"
  },
  {
    "file": "core/src/char/convert.rs",
    "func": "char::convert::<impl convert::From<char> for u64>::from",
    "hash": "37589655947410760725557791464149005424"
  },
  {
    "file": "core/src/char/convert.rs",
    "func": "char::convert::<impl convert::From<u8> for char>::from",
    "hash": "68581623244024013215145596633238016545"
  },
  {
    "file": "core/src/char/convert.rs",
    "func": "char::convert::<impl convert::TryFrom<char> for u16>::try_from",
    "hash": "75265456052237319013294950376220108235"
  },
  {
    "file": "core/src/char/convert.rs",
    "func": "char::convert::<impl convert::TryFrom<char> for u8>::try_from",
    "hash": "110704890313516616712201897754587627972"
  },
  {
    "file": "core/src/char/convert.rs",
    "func": "char::convert::<impl convert::TryFrom<u32> for char>::try_from",
    "hash": "1062765977261690253014827334478353985346"
  },
  {
    "file": "core/src/char/convert.rs",
    "func": "char::convert::CharTryFromError",
    "hash": "85966233670991999841502011799109793555"
  },
  {
    "file": "core/src/char/convert.rs",
    "func": "char::convert::char_try_from_u32",
    "hash": "1096154568935207292118411765173724766739"
  },
  {
    "file": "core/src/char/convert.rs",
    "func": "char::convert::from_digit",
    "hash": "53998945451140795262504128944950679924"
  },
  {
    "file": "core/src/char/convert.rs",
    "func": "char::convert::from_u32",
    "hash": "205971711649864676011269651154961526538"
  },
  {
    "file": "core/src/char/convert.rs",
    "func": "char::convert::from_u32_unchecked",
    "hash": "1615780015787215128316594883786605832883"
  },
  {
    "file": "core/src/char/methods.rs",
    "func": "char::methods::<impl char>::escape_debug",
    "hash": "915373697566923944613887626654790661333"
  },
  {
    "file": "core/src/char/methods.rs",
    "func": "char::methods::<impl char>::escape_default",
    "hash": "89459341518024639082905387890818556285"
  },
  {
    "file": "core/src/char/methods.rs",
    "func": "char::methods::<impl char>::escape_unicode",
    "hash": "256336037942266645110042284662531777506"
  },
  {
    "file": "core/src/char/methods.rs",
    "func": "char::methods::<impl char>::from_digit",
    "hash": "155940296473502134027473616656745922788"
  },
  {
    "file": "core/src/char/methods.rs",
    "func": "char::methods::<impl char>::from_u32",
    "hash": "42065240788016506673405071562439037876"
  },
  {
    "file": "core/src/char/methods.rs",
    "func": "char::methods::<impl char>::from_u32_unchecked",
    "hash": "40063093336585792095766602796070126518"
  },
  {
    "file": "core/src/char/methods.rs",
    "func": "char::methods::<impl char>::is_alphabetic",
    "hash": "99413941483704690816975015466976948468"
  },
  {
    "file": "core/src/char/methods.rs",
    "func": "char::methods::<impl char>::is_alphanumeric",
    "hash": "366953875447122047416933703879388614205"
  },
  {
    "file": "core/src/char/methods.rs",
    "func": "char::methods::<impl char>::is_control",
    "hash": "9269879992646574012884672422609686043"
  },
  {
    "file": "core/src/char/methods.rs",
    "func": "char::methods::<impl char>::is_digit",
    "hash": "105328172380995468544079241436709270323"
  },
  {
    "file": "core/src/char/methods.rs",
    "func": "char::methods::<impl char>::is_grapheme_extended",
    "hash": "789857544254284292314725450222500664112"
  },
  {
    "file": "core/src/char/methods.rs",
    "func": "char::methods::<impl char>::is_lowercase",
    "hash": "359287983340553994314939624355138156578"
  },
  {
    "file": "core/src/char/methods.rs",
    "func": "char::methods::<impl char>::is_numeric",
    "hash": "1307748299388937442714308328677062178465"
  },
  {
    "file": "core/src/char/methods.rs",
    "func": "char::methods::<impl char>::is_uppercase",
    "hash": "115470394707210153491022773244136021685"
  },
  {
    "file": "core/src/char/methods.rs",
    "func": "char::methods::<impl char>::is_whitespace",
    "hash": "29482343462038012121821388472690701117"
  },
  {
    "file": "core/src/char/methods.rs",
    "func": "char::methods::<impl char>::len_utf16",
    "hash": "15844204844651226593172936704391873211"
  },
  {
    "file": "core/src/char/methods.rs",
    "func": "char::methods::<impl char>::len_utf8",
    "hash": "1306831287927976661618300510990738434635"
  },
  {
    "file": "core/src/char/methods.rs",
    "func": "char::methods::<impl char>::to_digit",
    "hash": "4210014628989957347484966718734559295"
  },
  {
    "file": "core/src/char/methods.rs",
    "func": "char::methods::<impl char>::to_lowercase",
    "hash": "5813599530079641577333345852102115755"
  },
  {
    "file": "core/src/char/methods.rs",
    "func": "char::methods::<impl char>::to_uppercase",
    "hash": "152885891655991738457717035435996198233"
  },
  {
    "file": "core/src/char/methods.rs",
    "func": "char::methods::len_utf16",
    "hash": "720039401277718266815314291424395701883"
  },
  {
    "file": "core/src/char/methods.rs",
    "func": "char::methods::len_utf8",
    "hash": "56302926392345337717408510197239954979"
  },
  {
    "file": "core/src/char/methods.rs",
    "func": "char::methods::verify::check_as_ascii_ascii_char",
    "hash": "1389088584765112081818067943753130757930",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/char/methods.rs",
    "func": "char::methods::verify::check_as_ascii_non_ascii_char",
    "hash": "1397915773844618306112588865752814977984",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/char/mod.rs",
    "func": "char::CaseMappingIter::new",
    "hash": "99939045602480013156107711054369569792"
  },
  {
    "file": "core/src/char/mod.rs",
    "func": "char::EscapeDebug::printable",
    "hash": "111306436546440123701793324078278082257"
  },
  {
    "file": "core/src/char/mod.rs",
    "func": "char::EscapeDebug::unicode",
    "hash": "1200861113205227312118329052931492296936"
  },
  {
    "file": "core/src/char/mod.rs",
    "func": "char::EscapeDebugInner::Char"
  },
  {
    "file": "core/src/char/mod.rs",
    "func": "char::EscapeDefault::unicode",
    "hash": "56420146170060966967993476946455385587"
  },
  {
    "file": "core/src/char/mod.rs",
    "func": "char::EscapeUnicode::new",
    "hash": "71442954758490355815817278309752170314"
  },
  {
    "file": "core/src/char/mod.rs",
    "func": "char::TryFromCharError",
    "hash": "1018416654940121074310194109188347463458"
  },
  {
    "file": "core/src/char/mod.rs",
    "func": "char::from_digit",
    "hash": "61263073051263009535106749765277258197"
  },
  {
    "file": "core/src/char/mod.rs",
    "func": "char::from_u32",
    "hash": "285003178030423956814355018706712817867"
  },
  {
    "file": "core/src/char/mod.rs",
    "func": "char::from_u32_unchecked",
    "hash": "1032793067477251961612449669835604596714"
  },
  {
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::Ord for bool>::clamp",
    "hash": "1814417065346235821214556276877587891953"
  },
  {
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::Ord for bool>::max",
    "hash": "88235331103495295243143247034391180586"
  },
  {
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::Ord for bool>::min",
    "hash": "645428958825175479314426615303968939362"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "<f128 as convert::num::FloatToInt<i128>>::to_int_unchecked",
    "hash": "104645809721132181797906762590267398330"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "<f128 as convert::num::FloatToInt<i16>>::to_int_unchecked",
    "hash": "8023970907095989704276639322950386670"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "<f128 as convert::num::FloatToInt<i32>>::to_int_unchecked",
    "hash": "232968566798214283211204030686519019843"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "<f128 as convert::num::FloatToInt<i64>>::to_int_unchecked",
    "hash": "27133674446622583104544140659385726962"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "<f128 as convert::num::FloatToInt<i8>>::to_int_unchecked",
    "hash": "3138849830595365569243951442802936292"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "<f128 as convert::num::FloatToInt<isize>>::to_int_unchecked",
    "hash": "1355202289786862825516795043210504194066"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "<f128 as convert::num::FloatToInt<u128>>::to_int_unchecked",
    "hash": "53177374013905520475699424449867687109"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "<f128 as convert::num::FloatToInt<u16>>::to_int_unchecked",
    "hash": "987555472572847348213140933808811495384"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "<f128 as convert::num::FloatToInt<u32>>::to_int_unchecked",
    "hash": "15520376107058158186112237704526656096"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "<f128 as convert::num::FloatToInt<u64>>::to_int_unchecked",
    "hash": "331685395097612591415917264667233091837"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "<f128 as convert::num::FloatToInt<u8>>::to_int_unchecked",
    "hash": "1358951474125502637613500749732987608976"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "<f128 as convert::num::FloatToInt<usize>>::to_int_unchecked",
    "hash": "59632430052737913194970061834448045790"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "<f16 as convert::num::FloatToInt<i128>>::to_int_unchecked",
    "hash": "156526944514267291632122689926823097428"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "<f16 as convert::num::FloatToInt<i16>>::to_int_unchecked",
    "hash": "1672221897635423274913239074598017934282"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "<f16 as convert::num::FloatToInt<i32>>::to_int_unchecked",
    "hash": "13607085157180235356636283754394344661"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "<f16 as convert::num::FloatToInt<i64>>::to_int_unchecked",
    "hash": "126422360828334567894577061511871149983"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "<f16 as convert::num::FloatToInt<i8>>::to_int_unchecked",
    "hash": "1009432972437108716812987692861299312818"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "<f16 as convert::num::FloatToInt<isize>>::to_int_unchecked",
    "hash": "4725077828742083599105603741327269473"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "<f16 as convert::num::FloatToInt<u128>>::to_int_unchecked",
    "hash": "45646783076199412359409811363389464714"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "<f16 as convert::num::FloatToInt<u16>>::to_int_unchecked",
    "hash": "459655098080368586414507122940362306305"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "<f16 as convert::num::FloatToInt<u32>>::to_int_unchecked",
    "hash": "11845216794843064399313413384828626611"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "<f16 as convert::num::FloatToInt<u64>>::to_int_unchecked",
    "hash": "74146962033086120291915426466271744279"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "<f16 as convert::num::FloatToInt<u8>>::to_int_unchecked",
    "hash": "1673969507463349892011111801319033881970"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "<f16 as convert::num::FloatToInt<usize>>::to_int_unchecked",
    "hash": "423885036603263068113361670471350216824"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "<f32 as convert::num::FloatToInt<i128>>::to_int_unchecked",
    "hash": "937109494029547821715234152191843318432"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "<f32 as convert::num::FloatToInt<i16>>::to_int_unchecked",
    "hash": "1553307208789351860115355921770651057302"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "<f32 as convert::num::FloatToInt<i32>>::to_int_unchecked",
    "hash": "1429299620908338075014313702547998070836"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "<f32 as convert::num::FloatToInt<i64>>::to_int_unchecked",
    "hash": "771041875102364999916462533125202592523"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "<f32 as convert::num::FloatToInt<i8>>::to_int_unchecked",
    "hash": "171795881185875465414074266379462444569"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "<f32 as convert::num::FloatToInt<isize>>::to_int_unchecked",
    "hash": "433217024667135467518316060115943119747"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "<f32 as convert::num::FloatToInt<u128>>::to_int_unchecked",
    "hash": "160565106807054621071282291645677741871"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "<f32 as convert::num::FloatToInt<u16>>::to_int_unchecked",
    "hash": "1470956311439537598110459724683720426537"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "<f32 as convert::num::FloatToInt<u32>>::to_int_unchecked",
    "hash": "65731246925644696934856407599237578737"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "<f32 as convert::num::FloatToInt<u64>>::to_int_unchecked",
    "hash": "10361514182516830586311056802023248209"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "<f32 as convert::num::FloatToInt<u8>>::to_int_unchecked",
    "hash": "516530732577510545412242209739878205405"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "<f32 as convert::num::FloatToInt<usize>>::to_int_unchecked",
    "hash": "475705343462094729612718125333464535927"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "<f64 as convert::num::FloatToInt<i128>>::to_int_unchecked",
    "hash": "179173884401072707644385948483662316837"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "<f64 as convert::num::FloatToInt<i16>>::to_int_unchecked",
    "hash": "119354821557448859904040034442997881115"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "<f64 as convert::num::FloatToInt<i32>>::to_int_unchecked",
    "hash": "6999572538113449661059197870109341295"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "<f64 as convert::num::FloatToInt<i64>>::to_int_unchecked",
    "hash": "315153674182468961111217010164988680621"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "<f64 as convert::num::FloatToInt<i8>>::to_int_unchecked",
    "hash": "1304649266690126680811593930808672186249"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "<f64 as convert::num::FloatToInt<isize>>::to_int_unchecked",
    "hash": "1773594820681244921511671176079392821311"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "<f64 as convert::num::FloatToInt<u128>>::to_int_unchecked",
    "hash": "216083910128422010114630775282900300721"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "<f64 as convert::num::FloatToInt<u16>>::to_int_unchecked",
    "hash": "17084707338546741741121608714745997389"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "<f64 as convert::num::FloatToInt<u32>>::to_int_unchecked",
    "hash": "81810731966206247211176993605058494411"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "<f64 as convert::num::FloatToInt<u64>>::to_int_unchecked",
    "hash": "112299292669929511591411854884171213933"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "<f64 as convert::num::FloatToInt<u8>>::to_int_unchecked",
    "hash": "78463614180193921349834417693563167"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "<f64 as convert::num::FloatToInt<usize>>::to_int_unchecked",
    "hash": "632001788644297369312280620011296799930"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<bool> for f128>::from",
    "hash": "169499486111328441341902132431860918323"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<bool> for f16>::from",
    "hash": "121027486325888045289663780658314509999"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<bool> for f32>::from",
    "hash": "89867285317038440229144367099657965206"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<bool> for f64>::from",
    "hash": "99518640921432298018277839597719502612"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<bool> for i128>::from",
    "hash": "1658235192932366261518007713684117252907"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<bool> for i16>::from",
    "hash": "22304758524366249987691790968716618988"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<bool> for i32>::from",
    "hash": "280805014964050700912169948615407105381"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<bool> for i64>::from",
    "hash": "153306278928193306056301347996194154595"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<bool> for i8>::from",
    "hash": "564380175134863027112651749934656634667"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<bool> for isize>::from",
    "hash": "111724889664099101948248635628951630020"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<bool> for u128>::from",
    "hash": "58762342094590519437977285022729587148"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<bool> for u16>::from",
    "hash": "129800118454390365765793947221223742359"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<bool> for u32>::from",
    "hash": "140604209654851365412584410592372684238"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<bool> for u64>::from",
    "hash": "170055653864310189887550439491465367060"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<bool> for u8>::from",
    "hash": "58950932328618933201263964759186971590"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<bool> for usize>::from",
    "hash": "963253227260598933211795104465033374113"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<f16> for f128>::from",
    "hash": "123276761184889488639386163381694903557"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<f16> for f64>::from",
    "hash": "74283438840217278611723663844546048312"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<f32> for f128>::from",
    "hash": "64477791768121525854013349904387144546"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<f32> for f64>::from",
    "hash": "165929183147946052862199188388218178056"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<f64> for f128>::from",
    "hash": "1060208708364164823514119613087072998035"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<i16> for f128>::from",
    "hash": "160358999880098461615179087185129938509"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<i16> for f32>::from",
    "hash": "630508961134544622315798378117189923178"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<i16> for f64>::from",
    "hash": "1167545917869555188912412243823044795817"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<i16> for i128>::from",
    "hash": "76455948149767713956143810956638697781"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<i16> for i32>::from",
    "hash": "20147766713047165234210449459826327267"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<i16> for i64>::from",
    "hash": "275488299469010845415070749268949839323"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<i16> for isize>::from",
    "hash": "119314318711051503573167991393458435649"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<i32> for f128>::from",
    "hash": "176485926200918736498621377422617270312"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<i32> for f64>::from",
    "hash": "90516512292197100518064091052765966037"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<i32> for i128>::from",
    "hash": "31559739315062481178790767226288922385"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<i32> for i64>::from",
    "hash": "156554156491648331224401065674498596561"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<i64> for i128>::from",
    "hash": "92010848244502159099128660670400395993"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<i8> for f128>::from",
    "hash": "22792513849966657775609877564916992688"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<i8> for f16>::from",
    "hash": "1632510739764135776416770462406736725090"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<i8> for f32>::from",
    "hash": "1219422724536156992813016522879841904985"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<i8> for f64>::from",
    "hash": "120843190307228223952566926146402128467"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<i8> for i128>::from",
    "hash": "135411453032870744328046302927213578416"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<i8> for i16>::from",
    "hash": "24396974564185562532366962222805054317"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<i8> for i32>::from",
    "hash": "20710474545703772848379868827749162840"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<i8> for i64>::from",
    "hash": "92042612225053664491065408973344468510"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<i8> for isize>::from",
    "hash": "633743124218259680115754853666043848983"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<num::nonzero::NonZero<i16>> for num::nonzero::NonZero<i128>>::from",
    "hash": "1746386714975169257912125903366480963854"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<num::nonzero::NonZero<i16>> for num::nonzero::NonZero<i32>>::from",
    "hash": "163574889798271926693893907458584400021"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<num::nonzero::NonZero<i16>> for num::nonzero::NonZero<i64>>::from",
    "hash": "63955838135402545571524721207969444591"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<num::nonzero::NonZero<i16>> for num::nonzero::NonZero<isize>>::from",
    "hash": "135855592930521124915091582991878620218"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<num::nonzero::NonZero<i32>> for num::nonzero::NonZero<i128>>::from",
    "hash": "1553430871918413027217186325063386647532"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<num::nonzero::NonZero<i32>> for num::nonzero::NonZero<i64>>::from",
    "hash": "78492553958532566543202827407846756886"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<num::nonzero::NonZero<i64>> for num::nonzero::NonZero<i128>>::from",
    "hash": "1799291365289261398410193420852454261390"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<num::nonzero::NonZero<i8>> for num::nonzero::NonZero<i128>>::from",
    "hash": "905423570732412480411665731420006229028"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<num::nonzero::NonZero<i8>> for num::nonzero::NonZero<i16>>::from",
    "hash": "791071914564086938115356906408318276019"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<num::nonzero::NonZero<i8>> for num::nonzero::NonZero<i32>>::from",
    "hash": "48815717319405452417262389881966680333"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<num::nonzero::NonZero<i8>> for num::nonzero::NonZero<i64>>::from",
    "hash": "123978512488736385499913886865609331060"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<num::nonzero::NonZero<i8>> for num::nonzero::NonZero<isize>>::from",
    "hash": "85701750962092016183581508135634475838"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<num::nonzero::NonZero<u16>> for num::nonzero::NonZero<i128>>::from",
    "hash": "95194220124041046826703376387819706044"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<num::nonzero::NonZero<u16>> for num::nonzero::NonZero<i32>>::from",
    "hash": "6836694354037934306073462665840663981"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<num::nonzero::NonZero<u16>> for num::nonzero::NonZero<i64>>::from",
    "hash": "46193168341278246210322013012637733691"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<num::nonzero::NonZero<u16>> for num::nonzero::NonZero<u128>>::from",
    "hash": "4636605682545618931199918401431428085"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<num::nonzero::NonZero<u16>> for num::nonzero::NonZero<u32>>::from",
    "hash": "1343041686102392927313760968707062583898"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<num::nonzero::NonZero<u16>> for num::nonzero::NonZero<u64>>::from",
    "hash": "610723539507626695415496380039480168880"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<num::nonzero::NonZero<u16>> for num::nonzero::NonZero<usize>>::from",
    "hash": "1105550187515652133611390560724752538275"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<num::nonzero::NonZero<u32>> for num::nonzero::NonZero<i128>>::from",
    "hash": "149983973359804256505418935246993735597"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<num::nonzero::NonZero<u32>> for num::nonzero::NonZero<i64>>::from",
    "hash": "1044817774169681594211063645285189539577"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<num::nonzero::NonZero<u32>> for num::nonzero::NonZero<u128>>::from",
    "hash": "256487992478169406716091248207294697322"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<num::nonzero::NonZero<u32>> for num::nonzero::NonZero<u64>>::from",
    "hash": "89332420748032270903811893781268075526"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<num::nonzero::NonZero<u64>> for num::nonzero::NonZero<i128>>::from",
    "hash": "163639033728850269217915029067367812101"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<num::nonzero::NonZero<u64>> for num::nonzero::NonZero<u128>>::from",
    "hash": "1079601507184925478113894790145484177086"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<num::nonzero::NonZero<u8>> for num::nonzero::NonZero<i128>>::from",
    "hash": "158571024974431019479856666781961988061"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<num::nonzero::NonZero<u8>> for num::nonzero::NonZero<i16>>::from",
    "hash": "181059120867212495408679746715159633358"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<num::nonzero::NonZero<u8>> for num::nonzero::NonZero<i32>>::from",
    "hash": "1458103842904542065816818284057200379123"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<num::nonzero::NonZero<u8>> for num::nonzero::NonZero<i64>>::from",
    "hash": "1157596714928758707117924709897231469988"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<num::nonzero::NonZero<u8>> for num::nonzero::NonZero<isize>>::from",
    "hash": "52192494336143705614716689736359030567"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<num::nonzero::NonZero<u8>> for num::nonzero::NonZero<u128>>::from",
    "hash": "94735947249315700463502172023625698934"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<num::nonzero::NonZero<u8>> for num::nonzero::NonZero<u16>>::from",
    "hash": "618033112077133468317697568889151214381"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<num::nonzero::NonZero<u8>> for num::nonzero::NonZero<u32>>::from",
    "hash": "143386989678729617766257437373199136933"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<num::nonzero::NonZero<u8>> for num::nonzero::NonZero<u64>>::from",
    "hash": "75846196505255659982562536984673691038"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<num::nonzero::NonZero<u8>> for num::nonzero::NonZero<usize>>::from",
    "hash": "1672316488423798935017816801038361335210"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<u16> for f128>::from",
    "hash": "562194086862439935245995168508162656"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<u16> for f32>::from",
    "hash": "155789093369966321169509658900080554776"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<u16> for f64>::from",
    "hash": "68241714160244360617037207926269447339"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<u16> for i128>::from",
    "hash": "97771062388913858744829391296931220660"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<u16> for i32>::from",
    "hash": "1563204396402915773012814441047597431917"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<u16> for i64>::from",
    "hash": "12045195906953911407538182316735424993"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<u16> for u128>::from",
    "hash": "146290415326837624636098528861711721175"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<u16> for u32>::from",
    "hash": "1637504128198553811811907163309050527767"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<u16> for u64>::from",
    "hash": "979744626790626107016585518742475904053"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<u16> for usize>::from",
    "hash": "45755338440053891812429711640309937578"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<u32> for f128>::from",
    "hash": "165984256412243452612830245535095224568"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<u32> for f64>::from",
    "hash": "776632528900133821513938421793638605521"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<u32> for i128>::from",
    "hash": "93923030188443385283773228721067602021"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<u32> for i64>::from",
    "hash": "3315907138516050951981334628859113769"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<u32> for u128>::from",
    "hash": "36787856561611067110089391995236705344"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<u32> for u64>::from",
    "hash": "760097703502802382315361126308995570139"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<u64> for i128>::from",
    "hash": "793061261019347037111108738184855012526"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<u64> for u128>::from",
    "hash": "56951603559244675691839205791944033772"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<u8> for f128>::from",
    "hash": "186531940693735054711135899436008455526"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<u8> for f16>::from",
    "hash": "168888067907863543079926227659046498337"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<u8> for f32>::from",
    "hash": "4532086591800769762197380511597302"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<u8> for f64>::from",
    "hash": "549336093093947997611765495117997964409"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<u8> for i128>::from",
    "hash": "297649710808979078413352983451017320127"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<u8> for i16>::from",
    "hash": "111180667598921743685992000036412244379"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<u8> for i32>::from",
    "hash": "922356456228504723114073297667898781296"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<u8> for i64>::from",
    "hash": "1036453617802973864713120458044464563957"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<u8> for isize>::from",
    "hash": "292974616399036809910762372929709220015"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<u8> for u128>::from",
    "hash": "454628356395109779013386601113508722175"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<u8> for u16>::from",
    "hash": "172029007956524447138647039784998313654"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<u8> for u32>::from",
    "hash": "54493571497412513993532529605325121170"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<u8> for u64>::from",
    "hash": "1104070005455154866310932058437342070110"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<u8> for usize>::from",
    "hash": "117083133034458006019709376097028492273"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<i128> for i16>::try_from",
    "hash": "1648440427134705257318128891117623113765"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<i128> for i32>::try_from",
    "hash": "57371076085649788910079148224158134817"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<i128> for i64>::try_from",
    "hash": "32236777160852090745753782330131328900"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<i128> for i8>::try_from",
    "hash": "579601115975957244611282247470170254191"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<i128> for num::nonzero::NonZero<i128>>::try_from",
    "hash": "95344411760667866719226281896142937326"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<i128> for u128>::try_from",
    "hash": "17426065350869934332297511257511811819"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<i128> for u16>::try_from",
    "hash": "663818770610276746016914530156446007606"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<i128> for u32>::try_from",
    "hash": "40187534362511675503141809301677966125"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<i128> for u64>::try_from",
    "hash": "64072337125967396035177493141211387707"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<i128> for u8>::try_from",
    "hash": "207354843359055262616594593096442659708"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<i16> for i8>::try_from",
    "hash": "134717541656321807446267797046707202230"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<i16> for num::nonzero::NonZero<i16>>::try_from",
    "hash": "823198168807080693513799997324146028511"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<i16> for u128>::try_from",
    "hash": "20562568229095356937776199697252446119"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<i16> for u16>::try_from",
    "hash": "1676610157369019384118388282697552599227"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<i16> for u32>::try_from",
    "hash": "4745058768695616792291524111906417914"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<i16> for u64>::try_from",
    "hash": "1104387417150906435317562116397182751715"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<i16> for u8>::try_from",
    "hash": "327783016939886007314267766398560473892"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<i32> for i16>::try_from",
    "hash": "107085080414088378663688163617137983603"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<i32> for i8>::try_from",
    "hash": "58568493857542873561183839021246386492"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<i32> for num::nonzero::NonZero<i32>>::try_from",
    "hash": "57703423224180808914076998609569540863"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<i32> for u128>::try_from",
    "hash": "265143764294472959611322839460857105750"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<i32> for u16>::try_from",
    "hash": "1024742476765853774512537154307721785418"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<i32> for u32>::try_from",
    "hash": "1214258652200928387411644436693302022198"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<i32> for u64>::try_from",
    "hash": "43051497508229891258796790964554543970"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<i32> for u8>::try_from",
    "hash": "116838725589658364762125035485285727797"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<i64> for i16>::try_from",
    "hash": "153780951155558721015437149287925217182"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<i64> for i32>::try_from",
    "hash": "170893640849866870013320546763209559534"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<i64> for i8>::try_from",
    "hash": "1628626192709927457215446911846678011665"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<i64> for num::nonzero::NonZero<i64>>::try_from",
    "hash": "7878377701002694388738017888683417893"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<i64> for u128>::try_from",
    "hash": "12347047319095417544613540064008554164"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<i64> for u16>::try_from",
    "hash": "331746598191774729294266502155956269"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<i64> for u32>::try_from",
    "hash": "1819306933160722863915649585674466048362"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<i64> for u64>::try_from",
    "hash": "30364256522356033629547477061861832796"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<i64> for u8>::try_from",
    "hash": "139480405490734276433600265903957443502"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<i8> for num::nonzero::NonZero<i8>>::try_from",
    "hash": "74518042565082262108747839165401914220"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<i8> for u128>::try_from",
    "hash": "65362576066578981902730629759366001754"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<i8> for u16>::try_from",
    "hash": "1350361953724208130417151583100329499783"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<i8> for u32>::try_from",
    "hash": "98610930938884894194207706284260829137"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<i8> for u64>::try_from",
    "hash": "1526465213544786899717693063630663289991"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<i8> for u8>::try_from",
    "hash": "122426802191913116261775547109355814783"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<isize> for num::nonzero::NonZero<isize>>::try_from",
    "hash": "1101967313965717191714851808636296502983"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<isize> for usize>::try_from",
    "hash": "1073839281058824192715244142859096339340"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<i128>> for num::nonzero::NonZero<i16>>::try_from",
    "hash": "56688890989795717316699137104511631709"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<i128>> for num::nonzero::NonZero<i32>>::try_from",
    "hash": "35552313656523861707115511975277912461"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<i128>> for num::nonzero::NonZero<i64>>::try_from",
    "hash": "452437527200219176513102134348491828420"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<i128>> for num::nonzero::NonZero<i8>>::try_from",
    "hash": "828701678084255702210189758578165327225"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<i128>> for num::nonzero::NonZero<isize>>::try_from",
    "hash": "87596896705354945256067672485600195602"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<i128>> for num::nonzero::NonZero<u128>>::try_from",
    "hash": "261351240606639923717572155331258993669"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<i128>> for num::nonzero::NonZero<u16>>::try_from",
    "hash": "57178709749591563851978094498257197901"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<i128>> for num::nonzero::NonZero<u32>>::try_from",
    "hash": "139325908272992211051490682294201296632"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<i128>> for num::nonzero::NonZero<u64>>::try_from",
    "hash": "1701237672629809087216464881371623470534"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<i128>> for num::nonzero::NonZero<u8>>::try_from",
    "hash": "227797874061998603413111188134284074388"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<i128>> for num::nonzero::NonZero<usize>>::try_from",
    "hash": "862850096372767138111014954428879518991"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<i16>> for num::nonzero::NonZero<i8>>::try_from",
    "hash": "201946718839577550917367066718283228479"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<i16>> for num::nonzero::NonZero<u128>>::try_from",
    "hash": "2832623621249025276034884748445107007"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<i16>> for num::nonzero::NonZero<u16>>::try_from",
    "hash": "139345035755545228156124307895264200752"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<i16>> for num::nonzero::NonZero<u32>>::try_from",
    "hash": "29631268296449581799056590582941671825"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<i16>> for num::nonzero::NonZero<u64>>::try_from",
    "hash": "171461987384859697854182319750417151894"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<i16>> for num::nonzero::NonZero<u8>>::try_from",
    "hash": "518867244223077980717977732808463244174"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<i16>> for num::nonzero::NonZero<usize>>::try_from",
    "hash": "89729635653873958217496970978359879503"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<i32>> for num::nonzero::NonZero<i16>>::try_from",
    "hash": "1419588900469377108617644134495396081949"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<i32>> for num::nonzero::NonZero<i8>>::try_from",
    "hash": "78734060333753871342152418771693777744"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<i32>> for num::nonzero::NonZero<isize>>::try_from",
    "hash": "37042130516558344515923698294325639764"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<i32>> for num::nonzero::NonZero<u128>>::try_from",
    "hash": "1554960977865040423917100907870466540858"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<i32>> for num::nonzero::NonZero<u16>>::try_from",
    "hash": "436979004096220246514635548491454152996"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<i32>> for num::nonzero::NonZero<u32>>::try_from",
    "hash": "170581981529254640411030392803143135696"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<i32>> for num::nonzero::NonZero<u64>>::try_from",
    "hash": "273649063031975628116741353827604198561"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<i32>> for num::nonzero::NonZero<u8>>::try_from",
    "hash": "173868876125021615985476822978637377102"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<i32>> for num::nonzero::NonZero<usize>>::try_from",
    "hash": "63175942068952159591168694066699477799"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<i64>> for num::nonzero::NonZero<i16>>::try_from",
    "hash": "1294968161685925437116601659678772437356"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<i64>> for num::nonzero::NonZero<i32>>::try_from",
    "hash": "805639189237678275110038899164714400805"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<i64>> for num::nonzero::NonZero<i8>>::try_from",
    "hash": "571809638227135982214432977330212482991"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<i64>> for num::nonzero::NonZero<isize>>::try_from",
    "hash": "1465489463920758107412501987590795822623"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<i64>> for num::nonzero::NonZero<u128>>::try_from",
    "hash": "744054504323061711810321851914674409326"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<i64>> for num::nonzero::NonZero<u16>>::try_from",
    "hash": "531414119571784700613206023079366362651"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<i64>> for num::nonzero::NonZero<u32>>::try_from",
    "hash": "173006344199651525311691978169631326017"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<i64>> for num::nonzero::NonZero<u64>>::try_from",
    "hash": "1045247213082923280715130303149690940837"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<i64>> for num::nonzero::NonZero<u8>>::try_from",
    "hash": "100650507288846067258458047148638683035"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<i64>> for num::nonzero::NonZero<usize>>::try_from",
    "hash": "1836337785897305933217262337111235573644"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<i8>> for num::nonzero::NonZero<u128>>::try_from",
    "hash": "1489129049011999706918405838905345472484"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<i8>> for num::nonzero::NonZero<u16>>::try_from",
    "hash": "1531975158659148841711516502040175135419"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<i8>> for num::nonzero::NonZero<u32>>::try_from",
    "hash": "112394683531969896567426186210752111626"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<i8>> for num::nonzero::NonZero<u64>>::try_from",
    "hash": "986825195395845984911205155327320449613"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<i8>> for num::nonzero::NonZero<u8>>::try_from",
    "hash": "1590485008860373863910276496116764351241"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<i8>> for num::nonzero::NonZero<usize>>::try_from",
    "hash": "1776991728536589868199518872488255871"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<isize>> for num::nonzero::NonZero<i128>>::try_from",
    "hash": "685836762778029631115910423101780850594"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<isize>> for num::nonzero::NonZero<i16>>::try_from",
    "hash": "107095263389102620626768869781027330608"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<isize>> for num::nonzero::NonZero<i32>>::try_from",
    "hash": "890092371766177686810409334465246737844"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<isize>> for num::nonzero::NonZero<i64>>::try_from",
    "hash": "146312559699773007622544552009615825513"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<isize>> for num::nonzero::NonZero<i8>>::try_from",
    "hash": "4763075284655070307904995504298744350"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<isize>> for num::nonzero::NonZero<u128>>::try_from",
    "hash": "1681676599640038872011747977080123456234"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<isize>> for num::nonzero::NonZero<u16>>::try_from",
    "hash": "1242481551072628316915512261705235319104"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<isize>> for num::nonzero::NonZero<u32>>::try_from",
    "hash": "117137888702393773216952557399194615778"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<isize>> for num::nonzero::NonZero<u64>>::try_from",
    "hash": "805201543677881476317538472412800174073"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<isize>> for num::nonzero::NonZero<u8>>::try_from",
    "hash": "68875462316181416331536585103420182440"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<isize>> for num::nonzero::NonZero<usize>>::try_from",
    "hash": "1506638107178108919217274766906760228336"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<u128>> for num::nonzero::NonZero<i128>>::try_from",
    "hash": "1024252286242379272710908211035860240869"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<u128>> for num::nonzero::NonZero<i16>>::try_from",
    "hash": "89879828359422433722141122985971138885"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<u128>> for num::nonzero::NonZero<i32>>::try_from",
    "hash": "98551199570134493007422849399306417897"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<u128>> for num::nonzero::NonZero<i64>>::try_from",
    "hash": "1674060715517182559314859319076966800313"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<u128>> for num::nonzero::NonZero<i8>>::try_from",
    "hash": "118806224387787117847994935089619477849"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<u128>> for num::nonzero::NonZero<isize>>::try_from",
    "hash": "413647411656909177313848203084974899141"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<u128>> for num::nonzero::NonZero<u16>>::try_from",
    "hash": "518620648389259331215502140092624889182"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<u128>> for num::nonzero::NonZero<u32>>::try_from",
    "hash": "100957291625481724773531050700453723376"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<u128>> for num::nonzero::NonZero<u64>>::try_from",
    "hash": "35723489289864618197992285182888392434"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<u128>> for num::nonzero::NonZero<u8>>::try_from",
    "hash": "60898620821634341261109262977410343352"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<u128>> for num::nonzero::NonZero<usize>>::try_from",
    "hash": "172978975470686143658589802984674947249"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<u16>> for num::nonzero::NonZero<i16>>::try_from",
    "hash": "291147606102468155314884594988466736425"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<u16>> for num::nonzero::NonZero<i8>>::try_from",
    "hash": "76129794724908303049664026375168379349"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<u16>> for num::nonzero::NonZero<isize>>::try_from",
    "hash": "130552490730120137959516437384284852551"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<u16>> for num::nonzero::NonZero<u8>>::try_from",
    "hash": "412792437831080741014435182411097174809"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<u32>> for num::nonzero::NonZero<i16>>::try_from",
    "hash": "519550136779250103412336501750558077429"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<u32>> for num::nonzero::NonZero<i32>>::try_from",
    "hash": "93112463600018028118672031009747010971"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<u32>> for num::nonzero::NonZero<i8>>::try_from",
    "hash": "1317709240407428463810298827491551012061"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<u32>> for num::nonzero::NonZero<isize>>::try_from",
    "hash": "22737239521980039879960059807523730595"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<u32>> for num::nonzero::NonZero<u16>>::try_from",
    "hash": "16285549188760470179826872834501061677"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<u32>> for num::nonzero::NonZero<u8>>::try_from",
    "hash": "1479692522549344176610125972271777486834"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<u32>> for num::nonzero::NonZero<usize>>::try_from",
    "hash": "110082906674369862446047936291741825088"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<u64>> for num::nonzero::NonZero<i16>>::try_from",
    "hash": "167722936146595090254640251119002943"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<u64>> for num::nonzero::NonZero<i32>>::try_from",
    "hash": "107920644920695466482782738017438742956"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<u64>> for num::nonzero::NonZero<i64>>::try_from",
    "hash": "752790086380457453010241954594513398634"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<u64>> for num::nonzero::NonZero<i8>>::try_from",
    "hash": "2581351375427990243973252659315773998"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<u64>> for num::nonzero::NonZero<isize>>::try_from",
    "hash": "152593951674249374705393792527452536958"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<u64>> for num::nonzero::NonZero<u16>>::try_from",
    "hash": "558704048517007400818055909941121337839"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<u64>> for num::nonzero::NonZero<u32>>::try_from",
    "hash": "9615699306100380228960774206904857831"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<u64>> for num::nonzero::NonZero<u8>>::try_from",
    "hash": "76212358642258177947690974175761207492"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<u64>> for num::nonzero::NonZero<usize>>::try_from",
    "hash": "62511749258418618915938620109275721800"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<u8>> for num::nonzero::NonZero<i8>>::try_from",
    "hash": "24243490551929798997247523025299597036"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<usize>> for num::nonzero::NonZero<i128>>::try_from",
    "hash": "1449979455423596788014575997436727739698"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<usize>> for num::nonzero::NonZero<i16>>::try_from",
    "hash": "561184447553336337614048774042700431085"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<usize>> for num::nonzero::NonZero<i32>>::try_from",
    "hash": "119655130813660621655929628507313273383"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<usize>> for num::nonzero::NonZero<i64>>::try_from",
    "hash": "896541231339498170510079791237161097273"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<usize>> for num::nonzero::NonZero<i8>>::try_from",
    "hash": "128824826153541333607212686996946894382"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<usize>> for num::nonzero::NonZero<isize>>::try_from",
    "hash": "67190252894986867610195863792369878416"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<usize>> for num::nonzero::NonZero<u128>>::try_from",
    "hash": "1116766652358425314716659157302834481317"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<usize>> for num::nonzero::NonZero<u16>>::try_from",
    "hash": "505613796739108573512627803889664708336"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<usize>> for num::nonzero::NonZero<u32>>::try_from",
    "hash": "88428820266395826057908102209722721836"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<usize>> for num::nonzero::NonZero<u64>>::try_from",
    "hash": "1032404236700685869118398384442215442474"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<usize>> for num::nonzero::NonZero<u8>>::try_from",
    "hash": "1560629172465800907914036174644148294691"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<u128> for i128>::try_from",
    "hash": "390770214790186559411834147578732368809"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<u128> for i16>::try_from",
    "hash": "93426809728397366303543273977105843990"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<u128> for i32>::try_from",
    "hash": "602943172868394542613844184175034943009"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<u128> for i64>::try_from",
    "hash": "179008779449983437091596949336666904985"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<u128> for i8>::try_from",
    "hash": "363189746573401770911310784132397071575"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<u128> for num::nonzero::NonZero<u128>>::try_from",
    "hash": "1818957416091634138916769943535484497577"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<u128> for u16>::try_from",
    "hash": "1584593348221997933011744510795317710240"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<u128> for u32>::try_from",
    "hash": "88303092668766361546914851026231046300"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<u128> for u64>::try_from",
    "hash": "11830142148038897192255285402558708649"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<u128> for u8>::try_from",
    "hash": "90180796952726386715878245817925120693"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<u16> for i16>::try_from",
    "hash": "10004529097507706481542446409947599866"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<u16> for i8>::try_from",
    "hash": "15733787489259700817844341718509400400"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<u16> for num::nonzero::NonZero<u16>>::try_from",
    "hash": "1062702240339810079916515137275214836341"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<u16> for u8>::try_from",
    "hash": "80762578035657791516125743247843026541"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<u32> for i16>::try_from",
    "hash": "94525729506074059318013509443263497354"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<u32> for i32>::try_from",
    "hash": "388808953162228763618018298114923949056"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<u32> for i8>::try_from",
    "hash": "68796540814256247905408593365735931199"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<u32> for num::nonzero::NonZero<u32>>::try_from",
    "hash": "356542886038519790015478415502610692052"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<u32> for u16>::try_from",
    "hash": "918000332450224975711802885814461250465"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<u32> for u8>::try_from",
    "hash": "166811418013046279073093856618903131335"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<u64> for i16>::try_from",
    "hash": "1722178707731510957315264728164901043196"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<u64> for i32>::try_from",
    "hash": "597529325210209860118135157063230695045"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<u64> for i64>::try_from",
    "hash": "7419361017006092112513129750745276427"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<u64> for i8>::try_from",
    "hash": "7055193698800828081886562530313184188"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<u64> for num::nonzero::NonZero<u64>>::try_from",
    "hash": "90073748487902352131816978454954958349"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<u64> for u16>::try_from",
    "hash": "162899586579000157195866698175681094505"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<u64> for u32>::try_from",
    "hash": "151846175080625439655902950511741597121"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<u64> for u8>::try_from",
    "hash": "175996073136983204412335091967390271438"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<u8> for i8>::try_from",
    "hash": "1279110621096543747316373680784557893632"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<u8> for num::nonzero::NonZero<u8>>::try_from",
    "hash": "41546271893106684075102723382531019644"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<usize> for isize>::try_from",
    "hash": "600621346239527097511770572551774702702"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<usize> for num::nonzero::NonZero<usize>>::try_from",
    "hash": "43152265001521035014003268166473857245"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::ptr_try_from_impls::<impl convert::TryFrom<i128> for isize>::try_from",
    "hash": "66907187184110992349653756908092799986"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::ptr_try_from_impls::<impl convert::TryFrom<i128> for usize>::try_from",
    "hash": "107408800399540756474202051384460095548"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::ptr_try_from_impls::<impl convert::TryFrom<i16> for usize>::try_from",
    "hash": "1418239820774328069610076206113302634577"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::ptr_try_from_impls::<impl convert::TryFrom<i32> for isize>::try_from",
    "hash": "1228258648650347290612800603987974658728"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::ptr_try_from_impls::<impl convert::TryFrom<i32> for usize>::try_from",
    "hash": "543262562578205611814193723889232631679"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::ptr_try_from_impls::<impl convert::TryFrom<i64> for isize>::try_from",
    "hash": "122085557220775341787511152675116298323"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::ptr_try_from_impls::<impl convert::TryFrom<i64> for usize>::try_from",
    "hash": "4307877510365205454425647418747522694"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::ptr_try_from_impls::<impl convert::TryFrom<i8> for usize>::try_from",
    "hash": "555398377518491148512957939749234754468"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::ptr_try_from_impls::<impl convert::TryFrom<isize> for i128>::try_from",
    "hash": "652212298019392608912549456137359936972"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::ptr_try_from_impls::<impl convert::TryFrom<isize> for i16>::try_from",
    "hash": "1172119524553988337617398079248353918347"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::ptr_try_from_impls::<impl convert::TryFrom<isize> for i32>::try_from",
    "hash": "96798180925420721018056525112873849275"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::ptr_try_from_impls::<impl convert::TryFrom<isize> for i64>::try_from",
    "hash": "68758122080752529809216273094162089755"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::ptr_try_from_impls::<impl convert::TryFrom<isize> for i8>::try_from",
    "hash": "18066454308382927611913990146408759428"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::ptr_try_from_impls::<impl convert::TryFrom<isize> for u128>::try_from",
    "hash": "5611684546568068855586755296971535363"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::ptr_try_from_impls::<impl convert::TryFrom<isize> for u16>::try_from",
    "hash": "1524281003722226624511371742394924592513"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::ptr_try_from_impls::<impl convert::TryFrom<isize> for u32>::try_from",
    "hash": "32838617444700463276308796765747166928"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::ptr_try_from_impls::<impl convert::TryFrom<isize> for u64>::try_from",
    "hash": "57457231475241045428520990672147539287"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::ptr_try_from_impls::<impl convert::TryFrom<isize> for u8>::try_from",
    "hash": "150765206764874660127129072204862408110"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::ptr_try_from_impls::<impl convert::TryFrom<u128> for isize>::try_from",
    "hash": "15519626459282008615333282337255286231"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::ptr_try_from_impls::<impl convert::TryFrom<u128> for usize>::try_from",
    "hash": "1528045041929917897412045260380486138842"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::ptr_try_from_impls::<impl convert::TryFrom<u16> for isize>::try_from",
    "hash": "1070469087219879266417019146462179115889"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::ptr_try_from_impls::<impl convert::TryFrom<u32> for isize>::try_from",
    "hash": "474570109389326982913026890033024351395"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::ptr_try_from_impls::<impl convert::TryFrom<u32> for usize>::try_from",
    "hash": "70861105468698357887314581219043050057"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::ptr_try_from_impls::<impl convert::TryFrom<u64> for isize>::try_from",
    "hash": "152999639096192617077964207081594502297"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::ptr_try_from_impls::<impl convert::TryFrom<u64> for usize>::try_from",
    "hash": "1106227520373337467013331685168717139413"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::ptr_try_from_impls::<impl convert::TryFrom<usize> for i128>::try_from",
    "hash": "133972935025809312823015529711251662923"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::ptr_try_from_impls::<impl convert::TryFrom<usize> for i16>::try_from",
    "hash": "6734548723577847434255491373897134147"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::ptr_try_from_impls::<impl convert::TryFrom<usize> for i32>::try_from",
    "hash": "1799224867767978147914580182141645091078"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::ptr_try_from_impls::<impl convert::TryFrom<usize> for i64>::try_from",
    "hash": "675617733325397884916970407630178141644"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::ptr_try_from_impls::<impl convert::TryFrom<usize> for i8>::try_from",
    "hash": "39395206794071075456210322357749485373"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::ptr_try_from_impls::<impl convert::TryFrom<usize> for u128>::try_from",
    "hash": "181475049314471990327144514877801889251"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::ptr_try_from_impls::<impl convert::TryFrom<usize> for u16>::try_from",
    "hash": "113636303611599948422952134073415732634"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::ptr_try_from_impls::<impl convert::TryFrom<usize> for u32>::try_from",
    "hash": "740279432569025443711574644820610176575"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::ptr_try_from_impls::<impl convert::TryFrom<usize> for u64>::try_from",
    "hash": "44104660874855087623733736036848372911"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::ptr_try_from_impls::<impl convert::TryFrom<usize> for u8>::try_from",
    "hash": "52447312959119204751725989402363811285"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_f16_to_int_unchecked::f128::i128::check_float_to_int_unchecked",
    "hash": "12570106843364395387677813551291003454",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_f16_to_int_unchecked::f128::i16::check_float_to_int_unchecked",
    "hash": "144804422370670038769732570344245401752",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_f16_to_int_unchecked::f128::i32::check_float_to_int_unchecked",
    "hash": "440707822097534019715181108618503401979",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_f16_to_int_unchecked::f128::i64::check_float_to_int_unchecked",
    "hash": "541219272021275384513056688692650584636",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_f16_to_int_unchecked::f128::i8::check_float_to_int_unchecked",
    "hash": "67748106286716442433269026182390219204",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_f16_to_int_unchecked::f128::isize::check_float_to_int_unchecked",
    "hash": "328685150021806691515886936154993254949",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_f16_to_int_unchecked::f128::u128::check_float_to_int_unchecked",
    "hash": "147210504604342710459480859202346545588",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_f16_to_int_unchecked::f128::u16::check_float_to_int_unchecked",
    "hash": "729583415293611945510941923549606580457",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_f16_to_int_unchecked::f128::u32::check_float_to_int_unchecked",
    "hash": "840411314119499311712887002660154437327",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_f16_to_int_unchecked::f128::u64::check_float_to_int_unchecked",
    "hash": "987760641575640599817789309314295892356",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_f16_to_int_unchecked::f128::u8::check_float_to_int_unchecked",
    "hash": "500799033218852845413642958871284117412",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_f16_to_int_unchecked::f128::usize::check_float_to_int_unchecked",
    "hash": "1680956773176821406913242386713968635994",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_f16_to_int_unchecked::f16::i128::check_float_to_int_unchecked",
    "hash": "44411272530435004799291365764762504263",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_f16_to_int_unchecked::f16::i16::check_float_to_int_unchecked",
    "hash": "576441992052723345814544581021832409591",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_f16_to_int_unchecked::f16::i32::check_float_to_int_unchecked",
    "hash": "62874139895559130703750122926382641346",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_f16_to_int_unchecked::f16::i64::check_float_to_int_unchecked",
    "hash": "1721075069357525410813026084240274228913",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_f16_to_int_unchecked::f16::i8::check_float_to_int_unchecked",
    "hash": "797035974649728624016724990522015961830",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_f16_to_int_unchecked::f16::isize::check_float_to_int_unchecked",
    "hash": "1497516059630044035716562327286720467408",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_f16_to_int_unchecked::f16::u128::check_float_to_int_unchecked",
    "hash": "90899523159774280222336224387332024607",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_f16_to_int_unchecked::f16::u16::check_float_to_int_unchecked",
    "hash": "146754670663784054986985767671757288406",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_f16_to_int_unchecked::f16::u32::check_float_to_int_unchecked",
    "hash": "124383940522949287234057480686005839172",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_f16_to_int_unchecked::f16::u64::check_float_to_int_unchecked",
    "hash": "37753891727381295814465178255417158299",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_f16_to_int_unchecked::f16::u8::check_float_to_int_unchecked",
    "hash": "1292448579749761997914680977685996698399",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_f16_to_int_unchecked::f16::usize::check_float_to_int_unchecked",
    "hash": "69750699019417085254896489862163942893",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_f16_to_int_unchecked::f32::i128::check_float_to_int_unchecked",
    "hash": "917142034503283031015117020560819873467",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_f16_to_int_unchecked::f32::i16::check_float_to_int_unchecked",
    "hash": "168516859738585911945204287144124839625",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_f16_to_int_unchecked::f32::i32::check_float_to_int_unchecked",
    "hash": "1163794436304745714217000459696401291755",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_f16_to_int_unchecked::f32::i64::check_float_to_int_unchecked",
    "hash": "175162468672550014616011931751277952400",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_f16_to_int_unchecked::f32::i8::check_float_to_int_unchecked",
    "hash": "936249769412005307118066887158310923950",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_f16_to_int_unchecked::f32::isize::check_float_to_int_unchecked",
    "hash": "31376878588647260110298305624460682830",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_f16_to_int_unchecked::f32::u128::check_float_to_int_unchecked",
    "hash": "102059755348422786519407030974458553222",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_f16_to_int_unchecked::f32::u16::check_float_to_int_unchecked",
    "hash": "75893547846924626692214577502033701823",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_f16_to_int_unchecked::f32::u32::check_float_to_int_unchecked",
    "hash": "60490676320791597247098361025422306157",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_f16_to_int_unchecked::f32::u64::check_float_to_int_unchecked",
    "hash": "156494070981288901638848760788149660874",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_f16_to_int_unchecked::f32::u8::check_float_to_int_unchecked",
    "hash": "1505867950587343259716254392000192751973",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_f16_to_int_unchecked::f32::usize::check_float_to_int_unchecked",
    "hash": "1400510279347798407210489194955787537139",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_f16_to_int_unchecked::f64::i128::check_float_to_int_unchecked",
    "hash": "110403120446564007134605044660806460104",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_f16_to_int_unchecked::f64::i16::check_float_to_int_unchecked",
    "hash": "11982044575560574875959342499489150149",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_f16_to_int_unchecked::f64::i32::check_float_to_int_unchecked",
    "hash": "29979426334107561231237052846984928445",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_f16_to_int_unchecked::f64::i64::check_float_to_int_unchecked",
    "hash": "1536136605406297903117710835990230106488",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_f16_to_int_unchecked::f64::i8::check_float_to_int_unchecked",
    "hash": "906095837508618040713995647276563809720",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_f16_to_int_unchecked::f64::isize::check_float_to_int_unchecked",
    "hash": "928471532281455141017557908349032029294",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_f16_to_int_unchecked::f64::u128::check_float_to_int_unchecked",
    "hash": "178583535424970431959908135722835132433",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_f16_to_int_unchecked::f64::u16::check_float_to_int_unchecked",
    "hash": "1840028684398577734013211579727453511648",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_f16_to_int_unchecked::f64::u32::check_float_to_int_unchecked",
    "hash": "162500406643591228034674392853400888800",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_f16_to_int_unchecked::f64::u64::check_float_to_int_unchecked",
    "hash": "827245535452180575312360388633401354609",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_f16_to_int_unchecked::f64::u8::check_float_to_int_unchecked",
    "hash": "1473269455073178883415980694111344658153",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_f16_to_int_unchecked::f64::usize::check_float_to_int_unchecked",
    "hash": "1625096206811751443316368645772271656386",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_from_i16::i128::check_nonzero_int_from_nonzero_int"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_from_i16::i32::check_nonzero_int_from_nonzero_int"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_from_i16::i64::check_nonzero_int_from_nonzero_int"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_from_i16::isize::check_nonzero_int_from_nonzero_int"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_from_i32::i128::check_nonzero_int_from_nonzero_int"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_from_i32::i64::check_nonzero_int_from_nonzero_int"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_from_i64::i128::check_nonzero_int_from_nonzero_int"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_from_i8::i128::check_nonzero_int_from_nonzero_int"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_from_i8::i16::check_nonzero_int_from_nonzero_int"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_from_i8::i32::check_nonzero_int_from_nonzero_int"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_from_i8::i64::check_nonzero_int_from_nonzero_int"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_from_i8::isize::check_nonzero_int_from_nonzero_int"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_from_u16::i128::check_nonzero_int_from_nonzero_int"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_from_u16::i32::check_nonzero_int_from_nonzero_int"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_from_u16::i64::check_nonzero_int_from_nonzero_int"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_from_u16::u128::check_nonzero_int_from_nonzero_int"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_from_u16::u32::check_nonzero_int_from_nonzero_int"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_from_u16::u64::check_nonzero_int_from_nonzero_int"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_from_u16::usize::check_nonzero_int_from_nonzero_int"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_from_u32::i128::check_nonzero_int_from_nonzero_int"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_from_u32::i64::check_nonzero_int_from_nonzero_int"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_from_u32::u128::check_nonzero_int_from_nonzero_int"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_from_u32::u64::check_nonzero_int_from_nonzero_int"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_from_u64::i128::check_nonzero_int_from_nonzero_int"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_from_u64::u128::check_nonzero_int_from_nonzero_int"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_from_u8::i128::check_nonzero_int_from_nonzero_int"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_from_u8::i16::check_nonzero_int_from_nonzero_int"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_from_u8::i32::check_nonzero_int_from_nonzero_int"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_from_u8::i64::check_nonzero_int_from_nonzero_int"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_from_u8::isize::check_nonzero_int_from_nonzero_int"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_from_u8::u128::check_nonzero_int_from_nonzero_int"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_from_u8::u16::check_nonzero_int_from_nonzero_int"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_from_u8::u32::check_nonzero_int_from_nonzero_int"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_from_u8::u64::check_nonzero_int_from_nonzero_int"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_from_u8::usize::check_nonzero_int_from_nonzero_int"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i128::i16::check_nonzero_int_try_from_nonzero_int",
    "hash": "37843746918108796474132241701212472510",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i128::i16::check_nonzero_int_try_from_nonzero_int_should_panic",
    "hash": "110732356632704387943127037170028313497",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i128::i32::check_nonzero_int_try_from_nonzero_int",
    "hash": "71781619006683349661036659732111780128",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i128::i32::check_nonzero_int_try_from_nonzero_int_should_panic",
    "hash": "43137150817805266855336428272835426957",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i128::i64::check_nonzero_int_try_from_nonzero_int",
    "hash": "938540171239586357112077212512069009719",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i128::i64::check_nonzero_int_try_from_nonzero_int_should_panic",
    "hash": "17689364607729698765038858625100263150",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i128::i8::check_nonzero_int_try_from_nonzero_int",
    "hash": "729623155216974634215152926849939475162",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i128::i8::check_nonzero_int_try_from_nonzero_int_should_panic",
    "hash": "554781185848213543812813671291642750743",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i128::isize::check_nonzero_int_try_from_nonzero_int",
    "hash": "112967712815177446526966764521931519345",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i128::isize::check_nonzero_int_try_from_nonzero_int_should_panic",
    "hash": "47160246090483650316053424191202912869",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i128::u128::check_nonzero_int_try_from_nonzero_int",
    "hash": "1404177506941292590517197222514971938913",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i128::u128::check_nonzero_int_try_from_nonzero_int_should_panic",
    "hash": "27200477213050075051177252188988565053",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i128::u16::check_nonzero_int_try_from_nonzero_int",
    "hash": "159123308213712714213743869484811620252",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i128::u16::check_nonzero_int_try_from_nonzero_int_should_panic",
    "hash": "1050679880969306591712812204998393263638",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i128::u32::check_nonzero_int_try_from_nonzero_int",
    "hash": "132289439804860952373797753308709670549",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i128::u32::check_nonzero_int_try_from_nonzero_int_should_panic",
    "hash": "487993521275039445014136599753127408252",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i128::u64::check_nonzero_int_try_from_nonzero_int",
    "hash": "146781763803398439403659189187919868882",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i128::u64::check_nonzero_int_try_from_nonzero_int_should_panic",
    "hash": "875423641790163473914317137120482997313",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i128::u8::check_nonzero_int_try_from_nonzero_int",
    "hash": "1316572080103017439514955597855098447483",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i128::u8::check_nonzero_int_try_from_nonzero_int_should_panic",
    "hash": "1015225644402404046713734013242206528890",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i128::usize::check_nonzero_int_try_from_nonzero_int",
    "hash": "103928620950420698353169886635015080392",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i128::usize::check_nonzero_int_try_from_nonzero_int_should_panic",
    "hash": "36341232689414420854003159550959452130",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i16::i8::check_nonzero_int_try_from_nonzero_int",
    "hash": "1204627250322421333414821378681378719400",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i16::i8::check_nonzero_int_try_from_nonzero_int_should_panic",
    "hash": "971242524244123052613046999857380079596",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i16::u128::check_nonzero_int_try_from_nonzero_int",
    "hash": "732424618276118463417363665600875312543",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i16::u128::check_nonzero_int_try_from_nonzero_int_should_panic",
    "hash": "991041538016238726017345469646222788662",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i16::u16::check_nonzero_int_try_from_nonzero_int",
    "hash": "10182935560838969454680059327067393943",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i16::u16::check_nonzero_int_try_from_nonzero_int_should_panic",
    "hash": "1177075171349147929917915848715965573043",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i16::u32::check_nonzero_int_try_from_nonzero_int",
    "hash": "139390512145906973659307356663218246983",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i16::u32::check_nonzero_int_try_from_nonzero_int_should_panic",
    "hash": "118543459800779948989178192568356222120",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i16::u64::check_nonzero_int_try_from_nonzero_int",
    "hash": "98939147393773367338020848826808819903",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i16::u64::check_nonzero_int_try_from_nonzero_int_should_panic",
    "hash": "48331412671583032912266044948150747166",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i16::u8::check_nonzero_int_try_from_nonzero_int",
    "hash": "79975443047497708129391370385773301090",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i16::u8::check_nonzero_int_try_from_nonzero_int_should_panic",
    "hash": "1717806856486297792916346881718564950516",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i16::usize::check_nonzero_int_try_from_nonzero_int",
    "hash": "148336038477701988381176897781593974603",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i16::usize::check_nonzero_int_try_from_nonzero_int_should_panic",
    "hash": "174486292309213555213789478122025817933",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i32::i16::check_nonzero_int_try_from_nonzero_int",
    "hash": "163161251091592086198230770719273934651",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i32::i16::check_nonzero_int_try_from_nonzero_int_should_panic",
    "hash": "5010952858217150027142521226994815116",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i32::i8::check_nonzero_int_try_from_nonzero_int",
    "hash": "105288408225942495824906128455271740304",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i32::i8::check_nonzero_int_try_from_nonzero_int_should_panic",
    "hash": "131544958839173933006982695045921342075",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i32::isize::check_nonzero_int_try_from_nonzero_int_infallible",
    "hash": "43676729050844576544156596905888571651",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i32::u128::check_nonzero_int_try_from_nonzero_int",
    "hash": "132436571630739097524884881815804982197",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i32::u128::check_nonzero_int_try_from_nonzero_int_should_panic",
    "hash": "583571657944616730912234315037174386874",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i32::u16::check_nonzero_int_try_from_nonzero_int",
    "hash": "226795909171081985517715595397465535990",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i32::u16::check_nonzero_int_try_from_nonzero_int_should_panic",
    "hash": "124383266627063451018393516534472286075",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i32::u32::check_nonzero_int_try_from_nonzero_int",
    "hash": "102784172029222375686029551045933073975",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i32::u32::check_nonzero_int_try_from_nonzero_int_should_panic",
    "hash": "16193843218291490824703848077929038863",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i32::u64::check_nonzero_int_try_from_nonzero_int",
    "hash": "751960757240888495215588919114112272592",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i32::u64::check_nonzero_int_try_from_nonzero_int_should_panic",
    "hash": "139720878551015087168313607032551833160",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i32::u8::check_nonzero_int_try_from_nonzero_int",
    "hash": "771886834407798213717014823736669481452",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i32::u8::check_nonzero_int_try_from_nonzero_int_should_panic",
    "hash": "1247090457809621396614645350381216616706",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i32::usize::check_nonzero_int_try_from_nonzero_int",
    "hash": "157773064643830321897416386541431450801",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i32::usize::check_nonzero_int_try_from_nonzero_int_should_panic",
    "hash": "1452963183135244396417420556464621596668",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i64::i16::check_nonzero_int_try_from_nonzero_int",
    "hash": "576016273182444560117630040476591707664",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i64::i16::check_nonzero_int_try_from_nonzero_int_should_panic",
    "hash": "1188853740704715241716279959603886987283",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i64::i32::check_nonzero_int_try_from_nonzero_int",
    "hash": "77040018731253842723858097979570030761",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i64::i32::check_nonzero_int_try_from_nonzero_int_should_panic",
    "hash": "1124880388662468627512054590519054384345",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i64::i8::check_nonzero_int_try_from_nonzero_int",
    "hash": "130269249117032915829698950381804775346",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i64::i8::check_nonzero_int_try_from_nonzero_int_should_panic",
    "hash": "1028173603213153077710747045134220700086",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i64::isize::check_nonzero_int_try_from_nonzero_int_infallible",
    "hash": "180860899842325413585234516236208272481",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i64::u128::check_nonzero_int_try_from_nonzero_int",
    "hash": "93145371012179288669149945244553990241",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i64::u128::check_nonzero_int_try_from_nonzero_int_should_panic",
    "hash": "31125808079273499531074867536353712270",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i64::u16::check_nonzero_int_try_from_nonzero_int",
    "hash": "96832710261834840945263740337803708333",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i64::u16::check_nonzero_int_try_from_nonzero_int_should_panic",
    "hash": "2434395883591771616776097116837194004",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i64::u32::check_nonzero_int_try_from_nonzero_int",
    "hash": "53573814341477696151624768594519840978",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i64::u32::check_nonzero_int_try_from_nonzero_int_should_panic",
    "hash": "51424396078212215362767190151118277269",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i64::u64::check_nonzero_int_try_from_nonzero_int",
    "hash": "79204823945577352473454729737427371395",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i64::u64::check_nonzero_int_try_from_nonzero_int_should_panic",
    "hash": "177816270614770168912371475904577294079",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i64::u8::check_nonzero_int_try_from_nonzero_int",
    "hash": "134712398854660276311167230994358239871",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i64::u8::check_nonzero_int_try_from_nonzero_int_should_panic",
    "hash": "136299283265377582973421253397299041922",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i64::usize::check_nonzero_int_try_from_nonzero_int",
    "hash": "774475949109462594410654073048479963796",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i64::usize::check_nonzero_int_try_from_nonzero_int_should_panic",
    "hash": "682961088081788210516096784501616856688",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i8::u128::check_nonzero_int_try_from_nonzero_int",
    "hash": "13941312275161583099174820286420986677",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i8::u128::check_nonzero_int_try_from_nonzero_int_should_panic",
    "hash": "78661874785993304578888858753794644458",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i8::u16::check_nonzero_int_try_from_nonzero_int",
    "hash": "27948386785406000527121876917918425374",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i8::u16::check_nonzero_int_try_from_nonzero_int_should_panic",
    "hash": "146412387233281485732720244021731047882",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i8::u32::check_nonzero_int_try_from_nonzero_int",
    "hash": "1709826338906952037115166794932074323432",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i8::u32::check_nonzero_int_try_from_nonzero_int_should_panic",
    "hash": "1530810506733760840912333553934013524883",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i8::u64::check_nonzero_int_try_from_nonzero_int",
    "hash": "89482463293302657608865093859363480565",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i8::u64::check_nonzero_int_try_from_nonzero_int_should_panic",
    "hash": "150073139044135141229351862483952893655",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i8::u8::check_nonzero_int_try_from_nonzero_int",
    "hash": "987377267439860569317381357912386516685",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i8::u8::check_nonzero_int_try_from_nonzero_int_should_panic",
    "hash": "29058725285865463593209794049714003008",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i8::usize::check_nonzero_int_try_from_nonzero_int",
    "hash": "454520535782727209715661945320891748879",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i8::usize::check_nonzero_int_try_from_nonzero_int_should_panic",
    "hash": "68073714352018506022416356471546635187",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_u128::i128::check_nonzero_int_try_from_nonzero_int",
    "hash": "60476607608858144704235973632199347281",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_u128::i128::check_nonzero_int_try_from_nonzero_int_should_panic",
    "hash": "165033096270459027011582236887531336059",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_u128::i16::check_nonzero_int_try_from_nonzero_int",
    "hash": "176545412411694287036989013199312284304",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_u128::i16::check_nonzero_int_try_from_nonzero_int_should_panic",
    "hash": "172142352076439519127241973088360428995",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_u128::i32::check_nonzero_int_try_from_nonzero_int",
    "hash": "23051388031122557582684265153403787262",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_u128::i32::check_nonzero_int_try_from_nonzero_int_should_panic",
    "hash": "39410139201205121094245430012397820761",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_u128::i64::check_nonzero_int_try_from_nonzero_int",
    "hash": "178534188837953432375037583331474852976",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_u128::i64::check_nonzero_int_try_from_nonzero_int_should_panic",
    "hash": "1818107527563834615415181378859395429626",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_u128::i8::check_nonzero_int_try_from_nonzero_int",
    "hash": "140533291185335843648600407210260458706",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_u128::i8::check_nonzero_int_try_from_nonzero_int_should_panic",
    "hash": "17878177428304341436771617608178204056",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_u128::isize::check_nonzero_int_try_from_nonzero_int",
    "hash": "1464703536900347247411386500016984324828",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_u128::isize::check_nonzero_int_try_from_nonzero_int_should_panic",
    "hash": "1598364796713510633213984889691478953492",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_u128::u16::check_nonzero_int_try_from_nonzero_int",
    "hash": "20578974815282465696441091830867894654",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_u128::u16::check_nonzero_int_try_from_nonzero_int_should_panic",
    "hash": "1679989430057010933613861260893874696062",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_u128::u32::check_nonzero_int_try_from_nonzero_int",
    "hash": "66084531333581444117761055844402594467",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_u128::u32::check_nonzero_int_try_from_nonzero_int_should_panic",
    "hash": "121497157708004234374015974115242900351",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_u128::u64::check_nonzero_int_try_from_nonzero_int",
    "hash": "1120937769142306973714722830408430928368",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_u128::u64::check_nonzero_int_try_from_nonzero_int_should_panic",
    "hash": "40618665506627296657513367864235873152",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_u128::u8::check_nonzero_int_try_from_nonzero_int",
    "hash": "1115970332120473664511046892275617431500",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_u128::u8::check_nonzero_int_try_from_nonzero_int_should_panic",
    "hash": "1714228377048496627615855650044898072680",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_u128::usize::check_nonzero_int_try_from_nonzero_int",
    "hash": "62842169152439617544615960380098381168",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_u128::usize::check_nonzero_int_try_from_nonzero_int_should_panic",
    "hash": "65478992192866478615773565188544160611",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_u16::i16::check_nonzero_int_try_from_nonzero_int",
    "hash": "41905771138907294464735017401707670669",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_u16::i16::check_nonzero_int_try_from_nonzero_int_should_panic",
    "hash": "3715143866202449534342716585339633747",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_u16::i8::check_nonzero_int_try_from_nonzero_int",
    "hash": "329180460712952864918313695750766510614",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_u16::i8::check_nonzero_int_try_from_nonzero_int_should_panic",
    "hash": "94388592071841928048583899946554351238",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_u16::isize::check_nonzero_int_try_from_nonzero_int_infallible",
    "hash": "164663164976691537475013180086487051729",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_u16::u8::check_nonzero_int_try_from_nonzero_int",
    "hash": "48257725934734834121274713372311858666",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_u16::u8::check_nonzero_int_try_from_nonzero_int_should_panic",
    "hash": "344823370657188923815358694390494422688",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_u32::i16::check_nonzero_int_try_from_nonzero_int",
    "hash": "78276326111896567217097744620342314464",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_u32::i16::check_nonzero_int_try_from_nonzero_int_should_panic",
    "hash": "153728382271067285129255773417330223443",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_u32::i32::check_nonzero_int_try_from_nonzero_int",
    "hash": "177435145159694690168515724824990023314",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_u32::i32::check_nonzero_int_try_from_nonzero_int_should_panic",
    "hash": "1744385308777965556418054541250302515",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_u32::i8::check_nonzero_int_try_from_nonzero_int",
    "hash": "167617088411763956311024908680517760913",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_u32::i8::check_nonzero_int_try_from_nonzero_int_should_panic",
    "hash": "160436637619893086127020426688660085894",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_u32::isize::check_nonzero_int_try_from_nonzero_int_infallible",
    "hash": "90925730487330730209907617863168514517",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_u32::u16::check_nonzero_int_try_from_nonzero_int",
    "hash": "173939505221176232148129075737317940971",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_u32::u16::check_nonzero_int_try_from_nonzero_int_should_panic",
    "hash": "881511420594802097510782837301691995741",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_u32::u8::check_nonzero_int_try_from_nonzero_int",
    "hash": "401085506129661299341667435185470497",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_u32::u8::check_nonzero_int_try_from_nonzero_int_should_panic",
    "hash": "505205063303092105913820941007873167393",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_u32::usize::check_nonzero_int_try_from_nonzero_int_infallible",
    "hash": "28851064260294096327756773765807813857",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_u64::i16::check_nonzero_int_try_from_nonzero_int",
    "hash": "1814704749982675838912437855735894015323",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_u64::i16::check_nonzero_int_try_from_nonzero_int_should_panic",
    "hash": "1174451411243303932810933841265547466616",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_u64::i32::check_nonzero_int_try_from_nonzero_int",
    "hash": "58089711778969494674290762868219007001",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_u64::i32::check_nonzero_int_try_from_nonzero_int_should_panic",
    "hash": "9083339465717993168185301647529199262",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_u64::i64::check_nonzero_int_try_from_nonzero_int",
    "hash": "118444335366373969543663040979514943132",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_u64::i64::check_nonzero_int_try_from_nonzero_int_should_panic",
    "hash": "44865592994926355254451370426463322694",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_u64::i8::check_nonzero_int_try_from_nonzero_int",
    "hash": "53675100243660649157523481629593558099",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_u64::i8::check_nonzero_int_try_from_nonzero_int_should_panic",
    "hash": "2223180146039232812859574313431081726",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_u64::isize::check_nonzero_int_try_from_nonzero_int",
    "hash": "107351837256232410212524784253045195830",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_u64::isize::check_nonzero_int_try_from_nonzero_int_should_panic",
    "hash": "170792992120069730504433156296584642378",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_u64::u16::check_nonzero_int_try_from_nonzero_int",
    "hash": "184404063162082236163567229872022098743",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_u64::u16::check_nonzero_int_try_from_nonzero_int_should_panic",
    "hash": "1290679282926290053610912959071736264622",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_u64::u32::check_nonzero_int_try_from_nonzero_int",
    "hash": "83421491303206189902967815872055247998",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_u64::u32::check_nonzero_int_try_from_nonzero_int_should_panic",
    "hash": "61337063564171651923597692741865048230",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_u64::u8::check_nonzero_int_try_from_nonzero_int",
    "hash": "1031663742589448132910401909862496562835",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_u64::u8::check_nonzero_int_try_from_nonzero_int_should_panic",
    "hash": "76022734724020728874263139947770843557",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_u64::usize::check_nonzero_int_try_from_nonzero_int_infallible",
    "hash": "1008835320402582708810967150116009478068",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/default.rs",
    "func": "<() as default::Default>::default",
    "hash": "1641017948997700669811928738779300543931"
  },
  {
    "file": "core/src/default.rs",
    "func": "<ascii::ascii_char::AsciiChar as default::Default>::default",
    "hash": "1355385689591148813412755507269004038750"
  },
  {
    "file": "core/src/default.rs",
    "func": "<bool as default::Default>::default",
    "hash": "1259604175243604340917474789954571448793"
  },
  {
    "file": "core/src/default.rs",
    "func": "<char as default::Default>::default",
    "hash": "55026836298874973784068783167200100617"
  },
  {
    "file": "core/src/default.rs",
    "func": "<f128 as default::Default>::default",
    "hash": "92439428603273541609873121037032569752"
  },
  {
    "file": "core/src/default.rs",
    "func": "<f16 as default::Default>::default",
    "hash": "8415086234807879924178119119760582126"
  },
  {
    "file": "core/src/default.rs",
    "func": "<f32 as default::Default>::default",
    "hash": "32063903642083389658479455455606300318"
  },
  {
    "file": "core/src/default.rs",
    "func": "<f64 as default::Default>::default",
    "hash": "107156129481394305114580491187157810997"
  },
  {
    "file": "core/src/default.rs",
    "func": "<i128 as default::Default>::default",
    "hash": "145196636081620453911994545452783714128"
  },
  {
    "file": "core/src/default.rs",
    "func": "<i16 as default::Default>::default",
    "hash": "148114350853145757599185174625260173753"
  },
  {
    "file": "core/src/default.rs",
    "func": "<i32 as default::Default>::default",
    "hash": "113928791536637390395452445097543489282"
  },
  {
    "file": "core/src/default.rs",
    "func": "<i64 as default::Default>::default",
    "hash": "174286527209052435998943855575772441704"
  },
  {
    "file": "core/src/default.rs",
    "func": "<i8 as default::Default>::default",
    "hash": "11865443656350994263681869277645455734"
  },
  {
    "file": "core/src/default.rs",
    "func": "<isize as default::Default>::default",
    "hash": "96266121735540093708064402022624475000"
  },
  {
    "file": "core/src/default.rs",
    "func": "<u128 as default::Default>::default",
    "hash": "50271238545447465213651547102634888342"
  },
  {
    "file": "core/src/default.rs",
    "func": "<u16 as default::Default>::default",
    "hash": "1472469912927882540412389015371339217570"
  },
  {
    "file": "core/src/default.rs",
    "func": "<u32 as default::Default>::default",
    "hash": "7249932160501414073040925749971875131"
  },
  {
    "file": "core/src/default.rs",
    "func": "<u64 as default::Default>::default",
    "hash": "1396567977910257078410393043945253075424"
  },
  {
    "file": "core/src/default.rs",
    "func": "<u8 as default::Default>::default",
    "hash": "132950719979418258437989319043339290155"
  },
  {
    "file": "core/src/default.rs",
    "func": "<usize as default::Default>::default",
    "hash": "450125020115412950616526907187850183756"
  },
  {
    "file": "core/src/ffi/c_str.rs",
    "func": "<&ffi::c_str::CStr as default::Default>::default",
    "hash": "637295439221405724813047013832541633502"
  },
  {
    "file": "core/src/ffi/c_str.rs",
    "func": "ffi::c_str::FromBytesUntilNulError",
    "hash": "988165645164782862710183699419141856692"
  },
  {
    "file": "core/src/ffi/c_str.rs",
    "func": "ffi::c_str::verify::check_as_ptr",
    "hash": "125857531910225718627764101596818603615",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/ffi/c_str.rs",
    "func": "ffi::c_str::verify::check_bytes",
    "hash": "333708282065465591518111665596589184549",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/ffi/c_str.rs",
    "func": "ffi::c_str::verify::check_count_bytes",
    "hash": "181834261899525251568006952568547201722",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/ffi/c_str.rs",
    "func": "ffi::c_str::verify::check_from_bytes_until_nul",
    "hash": "489284727871258470115428073577721591017",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/ffi/c_str.rs",
    "func": "ffi::c_str::verify::check_from_bytes_with_nul",
    "hash": "177853215645470753183895575458135483247",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/ffi/c_str.rs",
    "func": "ffi::c_str::verify::check_from_bytes_with_nul_unchecked",
    "hash": "1117704724267973502901954652561666947",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ffi/c_str.rs",
    "func": "ffi::c_str::verify::check_from_ptr_contract",
    "hash": "102964801453116012088608123728575011198",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ffi/c_str.rs",
    "func": "ffi::c_str::verify::check_is_empty",
    "hash": "277107157670950045713509041823662280512",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/ffi/c_str.rs",
    "func": "ffi::c_str::verify::check_strlen_contract",
    "hash": "1537978948734802359313075892497443644361",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ffi/c_str.rs",
    "func": "ffi::c_str::verify::check_to_bytes",
    "hash": "5330857464472702438484011216843619712",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/ffi/c_str.rs",
    "func": "ffi::c_str::verify::check_to_bytes_with_nul",
    "hash": "138244693159649470641296266330576810162",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/ffi/c_str.rs",
    "func": "ffi::c_str::verify::check_to_str",
    "hash": "82390424889880163599407531089539547570",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/fmt/builders.rs",
    "func": "<fmt::builders::PadAdapterState as default::Default>::default",
    "hash": "133438993749786418975081779688101424321"
  },
  {
    "file": "core/src/fmt/mod.rs",
    "func": "<fmt::Error as default::Default>::default",
    "hash": "49406943391607132334976086968857212332"
  },
  {
    "file": "core/src/fmt/mod.rs",
    "func": "<fmt::FormattingOptions as default::Default>::default",
    "hash": "1667634645016252840714389043874442041083"
  },
  {
    "file": "core/src/fmt/mod.rs",
    "func": "<str as fmt::Debug>::fmt::needs_escape",
    "hash": "68572826183919335837817089549156590860"
  },
  {
    "file": "core/src/fmt/mod.rs",
    "func": "fmt::FormattingOptions::new",
    "hash": "110497420964184345517185892364398759782"
  },
  {
    "file": "core/src/fmt/mod.rs",
    "func": "fmt::PostPadding::new",
    "hash": "967906768493376431218217451737112282259"
  },
  {
    "file": "core/src/fmt/num.rs",
    "func": "<fmt::num::Binary as fmt::num::GenericRadix>::digit",
    "hash": "75062252758604671482327461794886667698"
  },
  {
    "file": "core/src/fmt/num.rs",
    "func": "<fmt::num::LowerHex as fmt::num::GenericRadix>::digit",
    "hash": "10509237598131848814549591882127413984"
  },
  {
    "file": "core/src/fmt/num.rs",
    "func": "<fmt::num::Octal as fmt::num::GenericRadix>::digit",
    "hash": "667103709093080764714349127336455760236"
  },
  {
    "file": "core/src/fmt/num.rs",
    "func": "<fmt::num::UpperHex as fmt::num::GenericRadix>::digit",
    "hash": "1363736816890242968813291297505934676086"
  },
  {
    "file": "core/src/fmt/num.rs",
    "func": "<i128 as fmt::num::DisplayInt>::from_u8",
    "hash": "179596825703162650194232437395748809699"
  },
  {
    "file": "core/src/fmt/num.rs",
    "func": "<i128 as fmt::num::DisplayInt>::zero",
    "hash": "645794586237513478815755528874422050"
  },
  {
    "file": "core/src/fmt/num.rs",
    "func": "<i16 as fmt::num::DisplayInt>::from_u8",
    "hash": "110565826494781583854904644151803737681"
  },
  {
    "file": "core/src/fmt/num.rs",
    "func": "<i16 as fmt::num::DisplayInt>::zero",
    "hash": "1105990829238409800018116831198701396105"
  },
  {
    "file": "core/src/fmt/num.rs",
    "func": "<i32 as fmt::num::DisplayInt>::from_u8",
    "hash": "914710929246533066010895311625933901"
  },
  {
    "file": "core/src/fmt/num.rs",
    "func": "<i32 as fmt::num::DisplayInt>::zero",
    "hash": "343026365572676977116833158488183130496"
  },
  {
    "file": "core/src/fmt/num.rs",
    "func": "<i64 as fmt::num::DisplayInt>::from_u8",
    "hash": "27586364025022875207270923950417507484"
  },
  {
    "file": "core/src/fmt/num.rs",
    "func": "<i64 as fmt::num::DisplayInt>::zero",
    "hash": "44044612377730889019400762292114830440"
  },
  {
    "file": "core/src/fmt/num.rs",
    "func": "<i8 as fmt::num::DisplayInt>::from_u8",
    "hash": "452921303328409852013190468833235411644"
  },
  {
    "file": "core/src/fmt/num.rs",
    "func": "<i8 as fmt::num::DisplayInt>::zero",
    "hash": "281892827860983328086004817885481012"
  },
  {
    "file": "core/src/fmt/num.rs",
    "func": "<isize as fmt::num::DisplayInt>::from_u8",
    "hash": "1295516833133844440311764361894146954899"
  },
  {
    "file": "core/src/fmt/num.rs",
    "func": "<isize as fmt::num::DisplayInt>::zero",
    "hash": "248837952516486105816017100420724160339"
  },
  {
    "file": "core/src/fmt/num.rs",
    "func": "<u128 as fmt::num::DisplayInt>::from_u8",
    "hash": "40881527775503614816384520597310395851"
  },
  {
    "file": "core/src/fmt/num.rs",
    "func": "<u128 as fmt::num::DisplayInt>::zero",
    "hash": "301317791835993052612029269238643682487"
  },
  {
    "file": "core/src/fmt/num.rs",
    "func": "<u16 as fmt::num::DisplayInt>::from_u8",
    "hash": "113300360601603711317753218038969623773"
  },
  {
    "file": "core/src/fmt/num.rs",
    "func": "<u16 as fmt::num::DisplayInt>::zero",
    "hash": "177015337230654335527510608574068762225"
  },
  {
    "file": "core/src/fmt/num.rs",
    "func": "<u32 as fmt::num::DisplayInt>::from_u8",
    "hash": "85954746138896127215759194079554738885"
  },
  {
    "file": "core/src/fmt/num.rs",
    "func": "<u32 as fmt::num::DisplayInt>::zero",
    "hash": "1596895408968513533410088921895846228595"
  },
  {
    "file": "core/src/fmt/num.rs",
    "func": "<u64 as fmt::num::DisplayInt>::from_u8",
    "hash": "699988741828812171816919635797946004028"
  },
  {
    "file": "core/src/fmt/num.rs",
    "func": "<u64 as fmt::num::DisplayInt>::zero",
    "hash": "1487349895209621112518352867299838993517"
  },
  {
    "file": "core/src/fmt/num.rs",
    "func": "<u8 as fmt::num::DisplayInt>::from_u8",
    "hash": "1614155235129332897612781648493212048372"
  },
  {
    "file": "core/src/fmt/num.rs",
    "func": "<u8 as fmt::num::DisplayInt>::zero",
    "hash": "1176244076798003428316453342148484779703"
  },
  {
    "file": "core/src/fmt/num.rs",
    "func": "<usize as fmt::num::DisplayInt>::from_u8",
    "hash": "333503161900192217410133775895059271310"
  },
  {
    "file": "core/src/fmt/num.rs",
    "func": "<usize as fmt::num::DisplayInt>::zero",
    "hash": "426926030610698055116572534213832017223"
  },
  {
    "file": "core/src/fmt/num.rs",
    "func": "fmt::num::div_rem_1e16",
    "hash": "166559392000045706437744874539733037061"
  },
  {
    "file": "core/src/fmt/rt.rs",
    "func": "fmt::rt::Argument::<'_>::none"
  },
  {
    "file": "core/src/fmt/rt.rs",
    "func": "fmt::rt::ArgumentType::<'_>::Count",
    "hash": "67975818337495746783847802870828204974"
  },
  {
    "file": "core/src/fmt/rt.rs",
    "func": "fmt::rt::Count::Is",
    "hash": "137776815688214738112624947609365038448"
  },
  {
    "file": "core/src/fmt/rt.rs",
    "func": "fmt::rt::Count::Param",
    "hash": "1511699866098203917615564776813287545928"
  },
  {
    "file": "core/src/fmt/rt.rs",
    "func": "fmt::rt::UnsafeArg::new"
  },
  {
    "file": "core/src/future/mod.rs",
    "func": "future::ResumeTy",
    "hash": "319602792038687242113414859437640814079"
  },
  {
    "file": "core/src/hash/sip.rs",
    "func": "<hash::sip::Sip13Rounds as default::Default>::default",
    "hash": "105765775612306812655307722311750347413"
  },
  {
    "file": "core/src/hash/sip.rs",
    "func": "<hash::sip::Sip24Rounds as default::Default>::default",
    "hash": "1328937377141865787512552815631324994607"
  },
  {
    "file": "core/src/hash/sip.rs",
    "func": "<hash::sip::SipHasher as default::Default>::default",
    "hash": "100200264247319181653449235600797502525"
  },
  {
    "file": "core/src/hash/sip.rs",
    "func": "<hash::sip::SipHasher13 as default::Default>::default",
    "hash": "1119924145557919911117293526856015127881"
  },
  {
    "file": "core/src/hash/sip.rs",
    "func": "<hash::sip::SipHasher24 as default::Default>::default",
    "hash": "102964840426276221454490142310328643729"
  },
  {
    "file": "core/src/hash/sip.rs",
    "func": "hash::sip::SipHasher13::new",
    "hash": "916738469449689401810391852189637934540"
  },
  {
    "file": "core/src/hash/sip.rs",
    "func": "hash::sip::SipHasher13::new_with_keys",
    "hash": "7921703394754115758157091811316342943"
  },
  {
    "file": "core/src/hash/sip.rs",
    "func": "hash::sip::SipHasher::new",
    "hash": "1479624457191888706812898701716412606747"
  },
  {
    "file": "core/src/hash/sip.rs",
    "func": "hash::sip::SipHasher::new_with_keys",
    "hash": "1727461879075364124413803524743258423051"
  },
  {
    "file": "core/src/hint.rs",
    "func": "hint::assert_unchecked",
    "hash": "11139495935450220752286966752445431093"
  },
  {
    "file": "core/src/hint.rs",
    "func": "hint::cold_path",
    "hash": "1547242663687159300612407002770139592705"
  },
  {
    "file": "core/src/hint.rs",
    "func": "hint::likely",
    "hash": "391088610639912630915813066956655080557"
  },
  {
    "file": "core/src/hint.rs",
    "func": "hint::spin_loop",
    "hash": "954029970349922584815046598015006073521"
  },
  {
    "file": "core/src/hint.rs",
    "func": "hint::unlikely",
    "hash": "15237400862765987367141944666788539735"
  },
  {
    "file": "core/src/hint.rs",
    "func": "hint::unreachable_unchecked",
    "hash": "25768524018977866517055903022448790318"
  },
  {
    "file": "core/src/intrinsics/fallback.rs",
    "func": "<bool as intrinsics::fallback::DisjointBitOr>::disjoint_bitor",
    "hash": "113186028346866804279770311988627090153"
  },
  {
    "file": "core/src/intrinsics/fallback.rs",
    "func": "<i128 as intrinsics::fallback::CarryingMulAdd>::carrying_mul_add",
    "hash": "20272120467175879337816241135346826221"
  },
  {
    "file": "core/src/intrinsics/fallback.rs",
    "func": "<i128 as intrinsics::fallback::DisjointBitOr>::disjoint_bitor",
    "hash": "101109432303661551018340665618682587875"
  },
  {
    "file": "core/src/intrinsics/fallback.rs",
    "func": "<i16 as intrinsics::fallback::CarryingMulAdd>::carrying_mul_add",
    "hash": "953881564743249153315779998435426162544"
  },
  {
    "file": "core/src/intrinsics/fallback.rs",
    "func": "<i16 as intrinsics::fallback::DisjointBitOr>::disjoint_bitor",
    "hash": "28123010284929504474437956132727108613"
  },
  {
    "file": "core/src/intrinsics/fallback.rs",
    "func": "<i32 as intrinsics::fallback::CarryingMulAdd>::carrying_mul_add",
    "hash": "1016390760304289897310364655152573926221"
  },
  {
    "file": "core/src/intrinsics/fallback.rs",
    "func": "<i32 as intrinsics::fallback::DisjointBitOr>::disjoint_bitor",
    "hash": "18628517139248227351215008082969430065"
  },
  {
    "file": "core/src/intrinsics/fallback.rs",
    "func": "<i64 as intrinsics::fallback::CarryingMulAdd>::carrying_mul_add",
    "hash": "978136034204034908411304886180596082268"
  },
  {
    "file": "core/src/intrinsics/fallback.rs",
    "func": "<i64 as intrinsics::fallback::DisjointBitOr>::disjoint_bitor",
    "hash": "154720368699640309616395593061179838809"
  },
  {
    "file": "core/src/intrinsics/fallback.rs",
    "func": "<i8 as intrinsics::fallback::CarryingMulAdd>::carrying_mul_add",
    "hash": "344863265745342779717451301811961978577"
  },
  {
    "file": "core/src/intrinsics/fallback.rs",
    "func": "<i8 as intrinsics::fallback::DisjointBitOr>::disjoint_bitor",
    "hash": "880669221483913905713956999556184255841"
  },
  {
    "file": "core/src/intrinsics/fallback.rs",
    "func": "<isize as intrinsics::fallback::CarryingMulAdd>::carrying_mul_add",
    "hash": "1213275536628164385017808546582887701330"
  },
  {
    "file": "core/src/intrinsics/fallback.rs",
    "func": "<isize as intrinsics::fallback::DisjointBitOr>::disjoint_bitor",
    "hash": "160135008128170602984338173882465772400"
  },
  {
    "file": "core/src/intrinsics/fallback.rs",
    "func": "<u128 as intrinsics::fallback::CarryingMulAdd>::carrying_mul_add",
    "hash": "819922674618487244413043350901048949292"
  },
  {
    "file": "core/src/intrinsics/fallback.rs",
    "func": "<u128 as intrinsics::fallback::DisjointBitOr>::disjoint_bitor",
    "hash": "40222614635680497349384625393801840509"
  },
  {
    "file": "core/src/intrinsics/fallback.rs",
    "func": "<u16 as intrinsics::fallback::CarryingMulAdd>::carrying_mul_add",
    "hash": "1513036345350600942715502438368061519000"
  },
  {
    "file": "core/src/intrinsics/fallback.rs",
    "func": "<u16 as intrinsics::fallback::DisjointBitOr>::disjoint_bitor",
    "hash": "14209302601739691336263204683063972142"
  },
  {
    "file": "core/src/intrinsics/fallback.rs",
    "func": "<u32 as intrinsics::fallback::CarryingMulAdd>::carrying_mul_add",
    "hash": "29217095792160381344400316057577381707"
  },
  {
    "file": "core/src/intrinsics/fallback.rs",
    "func": "<u32 as intrinsics::fallback::DisjointBitOr>::disjoint_bitor",
    "hash": "110614837124124483783285446974543096830"
  },
  {
    "file": "core/src/intrinsics/fallback.rs",
    "func": "<u64 as intrinsics::fallback::CarryingMulAdd>::carrying_mul_add",
    "hash": "161564724136622141702746708115603924802"
  },
  {
    "file": "core/src/intrinsics/fallback.rs",
    "func": "<u64 as intrinsics::fallback::DisjointBitOr>::disjoint_bitor",
    "hash": "578814737337802131416995303192893084991"
  },
  {
    "file": "core/src/intrinsics/fallback.rs",
    "func": "<u8 as intrinsics::fallback::CarryingMulAdd>::carrying_mul_add",
    "hash": "142841297607820675131706786474476260387"
  },
  {
    "file": "core/src/intrinsics/fallback.rs",
    "func": "<u8 as intrinsics::fallback::DisjointBitOr>::disjoint_bitor",
    "hash": "1585143121439669017512917948980091663041"
  },
  {
    "file": "core/src/intrinsics/fallback.rs",
    "func": "<usize as intrinsics::fallback::CarryingMulAdd>::carrying_mul_add",
    "hash": "61245578499738693647717663518521974082"
  },
  {
    "file": "core/src/intrinsics/fallback.rs",
    "func": "<usize as intrinsics::fallback::DisjointBitOr>::disjoint_bitor",
    "hash": "18881985029472959018976073139523482814"
  },
  {
    "file": "core/src/intrinsics/fallback.rs",
    "func": "intrinsics::fallback::wide_mul_u128",
    "hash": "2730413463489077682871299968750410950"
  },
  {
    "file": "core/src/intrinsics/fallback.rs",
    "func": "intrinsics::fallback::wide_mul_u128::from_low_high",
    "hash": "149177879054194305854706121912784527721"
  },
  {
    "file": "core/src/intrinsics/fallback.rs",
    "func": "intrinsics::fallback::wide_mul_u128::scalar_mul",
    "hash": "1401790216334955327214351023031146810699"
  },
  {
    "file": "core/src/intrinsics/fallback.rs",
    "func": "intrinsics::fallback::wide_mul_u128::to_low_high",
    "hash": "169564152499839983839646051342040887309"
  },
  {
    "file": "core/src/intrinsics/mir.rs",
    "func": "intrinsics::mir::Assume",
    "hash": "1825742379349539677911739339524554152195"
  },
  {
    "file": "core/src/intrinsics/mir.rs",
    "func": "intrinsics::mir::Return",
    "hash": "284400138510653128015433207959753133423"
  },
  {
    "file": "core/src/intrinsics/mir.rs",
    "func": "intrinsics::mir::Unreachable",
    "hash": "103556129963216175415960510512012804285"
  },
  {
    "file": "core/src/intrinsics/mir.rs",
    "func": "intrinsics::mir::UnwindContinue",
    "hash": "6392685196607948791800740572961483521"
  },
  {
    "file": "core/src/intrinsics/mir.rs",
    "func": "intrinsics::mir::UnwindResume",
    "hash": "1074756839941138635018259544858771882745"
  },
  {
    "file": "core/src/intrinsics/mir.rs",
    "func": "intrinsics::mir::UnwindUnreachable",
    "hash": "128431932967191333591997886554367694811"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "char::methods::encode_utf16_raw::do_panic::compiletime",
    "hash": "159049704386964953973249616754098926853"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "char::methods::encode_utf16_raw::do_panic::runtime",
    "hash": "13092531716627021347383435548003594991"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "char::methods::encode_utf8_raw::do_panic::compiletime",
    "hash": "108428443819972854796874567217962222164"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "char::methods::encode_utf8_raw::do_panic::runtime",
    "hash": "1363736816890242968813291297505934676086"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "f128::<impl f128>::clamp::do_panic::compiletime",
    "hash": "171025794570041983161038816866959233227"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "f128::<impl f128>::clamp::do_panic::runtime",
    "hash": "212160482303129168212526988043352842073"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "f16::<impl f16>::clamp::do_panic::compiletime",
    "hash": "146448597596565777941436257762503465485"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "f16::<impl f16>::clamp::do_panic::runtime",
    "hash": "284242324518116054918269943106472056012"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "f32::<impl f32>::clamp::do_panic::compiletime",
    "hash": "7408365454295751847861174114731301309"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "f32::<impl f32>::clamp::do_panic::runtime",
    "hash": "10651307170360920391464024654869766093"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "f64::<impl f64>::clamp::do_panic::compiletime",
    "hash": "144157986652174026586080956288379482463"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "f64::<impl f64>::clamp::do_panic::runtime",
    "hash": "875877685920832241615857183681276987748"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::assume",
    "hash": "6013961537908057672101029983762268146"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::cold_path",
    "hash": "47034917508603882436113493575354667154"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::const_allocate",
    "hash": "1510045345773018498813509804602468033085"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::contract_checks",
    "hash": "175192703832338152067280054200790710953"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::likely",
    "hash": "118812142854496324448516715476242465297"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::maximumf128",
    "hash": "7850810336489717473957267549244951995"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::maximumf16",
    "hash": "950275286442309144914005414346025326474"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::maximumf32",
    "hash": "1816868076824229492518307065405978297597"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::maximumf64",
    "hash": "58687954204015389802445433761316369961"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::minimumf128",
    "hash": "176098756313427920256294164679409940248"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::minimumf16",
    "hash": "1607506984736934082918113749314152275118"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::minimumf32",
    "hash": "30277375095290818058317507471836995913"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::minimumf64",
    "hash": "162641143356097440813876075844430845273"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::ub_checks",
    "hash": "1466125290259015749317832121385559662361"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::unlikely",
    "hash": "714811817540972740211524868124730226803"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::arr_mod::transmute_2ways_arr_to_struct",
    "hash": "73326569310621275954060699289052968580",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::arr_mod::transmute_2ways_arr_to_tuple",
    "hash": "627285170173993251114249822567347850416",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::arr_mod::transmute_2ways_struct_to_arr",
    "hash": "868009914843443405217808989505343701483",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::arr_mod::transmute_2ways_struct_to_tuple",
    "hash": "125551756093197299411224503107857697378",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::arr_mod::transmute_2ways_tuple_to_arr",
    "hash": "1551267095040212027414543199812702687387",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::arr_mod::transmute_2ways_tuple_to_struct",
    "hash": "523204362756920685914745705458948134056",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::arr_mod::transmute_unchecked_2ways_arr_to_struct",
    "hash": "130392948278657615604109727066495973698",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::arr_mod::transmute_unchecked_2ways_arr_to_tuple",
    "hash": "8930974841848009983524645838155997931",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::arr_mod::transmute_unchecked_2ways_struct_to_arr",
    "hash": "71365901434158600825004802633201019565",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::arr_mod::transmute_unchecked_2ways_struct_to_tuple",
    "hash": "491522021701124733517537777958984500882",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::arr_mod::transmute_unchecked_2ways_tuple_to_arr",
    "hash": "172507673393281242194745414011491229035",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::arr_mod::transmute_unchecked_2ways_tuple_to_struct",
    "hash": "1822284863584865463410160626033435949051",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::bool_mod::transmute_2ways_arr_to_struct",
    "hash": "47221716919346808653722160199387137742",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::bool_mod::transmute_2ways_arr_to_tuple",
    "hash": "108491178183924929443462879183629691750",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::bool_mod::transmute_2ways_struct_to_arr",
    "hash": "37911364632913047107771480409319502723",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::bool_mod::transmute_2ways_struct_to_tuple",
    "hash": "152102672769171447023623031151335726636",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::bool_mod::transmute_2ways_tuple_to_arr",
    "hash": "3791991652843950284466691100021077953",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::bool_mod::transmute_2ways_tuple_to_struct",
    "hash": "69217970505643393302975214304247088918",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::bool_mod::transmute_unchecked_2ways_arr_to_struct",
    "hash": "1168854639360276884714450702194964852369",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::bool_mod::transmute_unchecked_2ways_arr_to_tuple",
    "hash": "83923646945764109313032086309799945033",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::bool_mod::transmute_unchecked_2ways_struct_to_arr",
    "hash": "1321935430453351637415447215504356283921",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::bool_mod::transmute_unchecked_2ways_struct_to_tuple",
    "hash": "1552845140025359598113299953413732390373",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::bool_mod::transmute_unchecked_2ways_tuple_to_arr",
    "hash": "1847264826578793244193000726451937706",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::bool_mod::transmute_unchecked_2ways_tuple_to_struct",
    "hash": "474524964987052069711011513385698222546",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::char_mod::transmute_2ways_arr_to_struct",
    "hash": "1600298507366073938612076405725994104533",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::char_mod::transmute_2ways_arr_to_tuple",
    "hash": "133687007795712755784374717013568358479",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::char_mod::transmute_2ways_struct_to_arr",
    "hash": "94444987746421195637948433272357542256",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::char_mod::transmute_2ways_struct_to_tuple",
    "hash": "56381740629588321364261253620292320386",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::char_mod::transmute_2ways_tuple_to_arr",
    "hash": "1784920688083397778411999382559860581386",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::char_mod::transmute_2ways_tuple_to_struct",
    "hash": "1271128851676586622112326448781416848031",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::char_mod::transmute_unchecked_2ways_arr_to_struct",
    "hash": "97030512777460972085540634777625143564",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::char_mod::transmute_unchecked_2ways_arr_to_tuple",
    "hash": "179749199693139320736725309056348075726",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::char_mod::transmute_unchecked_2ways_struct_to_arr",
    "hash": "1776999252606423861516004599894810891124",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::char_mod::transmute_unchecked_2ways_struct_to_tuple",
    "hash": "11468455800003021711260404929823229496",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::char_mod::transmute_unchecked_2ways_tuple_to_arr",
    "hash": "1551653619144743004811817043757590319954",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::char_mod::transmute_unchecked_2ways_tuple_to_struct",
    "hash": "206082696696532645014883396947796814537",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::check_transmute_ptr_address",
    "hash": "1745791569061303594011583335885859188748",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::check_transmute_ref_address",
    "hash": "104036279880952160241567809320234621392",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::check_transmute_slice_metadata",
    "hash": "109015751339434336833215299354415411156",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::check_transmute_unchecked_ptr_address",
    "hash": "1158747874555849630614569613937461404316",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::check_transmute_unchecked_ref_address",
    "hash": "10873151292864047823960716979137714515",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::check_transmute_unchecked_slice_metadata",
    "hash": "512780864754393880213193432965016956220",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::check_typed_swap_char",
    "hash": "15918463013565615352973778696429754839",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::check_typed_swap_non_zero",
    "hash": "134497557703280069495061230918531728172",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::check_typed_swap_u8",
    "hash": "452234018265835936517496902729393804777",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::i128_mod::transmute_2ways_arr_to_struct",
    "hash": "985255950598004442712936595423117600452",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::i128_mod::transmute_2ways_arr_to_tuple",
    "hash": "7492474047255328068651854521233440483",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::i128_mod::transmute_2ways_struct_to_arr",
    "hash": "16748350424194795711193729315175851906",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::i128_mod::transmute_2ways_struct_to_tuple",
    "hash": "1487119676467073379818061768982459407107",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::i128_mod::transmute_2ways_tuple_to_arr",
    "hash": "12223909561067356842233204724150695884",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::i128_mod::transmute_2ways_tuple_to_struct",
    "hash": "271589647209092990315678995099414122397",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::i128_mod::transmute_unchecked_2ways_arr_to_struct",
    "hash": "1213761813246318400911422911830896208996",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::i128_mod::transmute_unchecked_2ways_arr_to_tuple",
    "hash": "132237836314966764225463769716363952200",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::i128_mod::transmute_unchecked_2ways_struct_to_arr",
    "hash": "1817283331318591610012096040094079048693",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::i128_mod::transmute_unchecked_2ways_struct_to_tuple",
    "hash": "50105313556643145322312197439731313896",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::i128_mod::transmute_unchecked_2ways_tuple_to_arr",
    "hash": "1063354262894914990217188996052966205744",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::i128_mod::transmute_unchecked_2ways_tuple_to_struct",
    "hash": "1809129770483391547511581314689345133118",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::i16_mod::transmute_2ways_arr_to_struct",
    "hash": "65481250969855939409250006384897151433",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::i16_mod::transmute_2ways_arr_to_tuple",
    "hash": "81266125814884028942853724334416848",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::i16_mod::transmute_2ways_struct_to_arr",
    "hash": "1182393868650475040014783172536992347135",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::i16_mod::transmute_2ways_struct_to_tuple",
    "hash": "1781981801942014218417183689028604875029",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::i16_mod::transmute_2ways_tuple_to_arr",
    "hash": "130956023665681621913372262384953010142",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::i16_mod::transmute_2ways_tuple_to_struct",
    "hash": "99946168684348083646174382010923899851",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::i16_mod::transmute_unchecked_2ways_arr_to_struct",
    "hash": "1458845661447059303210475477738945748855",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::i16_mod::transmute_unchecked_2ways_arr_to_tuple",
    "hash": "1825760710932892229016584654403075785883",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::i16_mod::transmute_unchecked_2ways_struct_to_arr",
    "hash": "548768728697619603612689844072466644069",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::i16_mod::transmute_unchecked_2ways_struct_to_tuple",
    "hash": "1734541021791867366912761773146398377331",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::i16_mod::transmute_unchecked_2ways_tuple_to_arr",
    "hash": "111780788131867721448970360456305746158",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::i16_mod::transmute_unchecked_2ways_tuple_to_struct",
    "hash": "73994705400453827311135813360884733642",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::i32_mod::transmute_2ways_arr_to_struct",
    "hash": "80442554311276776915244840750385218055",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::i32_mod::transmute_2ways_arr_to_tuple",
    "hash": "35306699694483414013290495664137702941",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::i32_mod::transmute_2ways_struct_to_arr",
    "hash": "6513872404903312796980764960592492048",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::i32_mod::transmute_2ways_struct_to_tuple",
    "hash": "58684874694892427859515427976791928141",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::i32_mod::transmute_2ways_tuple_to_arr",
    "hash": "464767485709744559914772630583629002144",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::i32_mod::transmute_2ways_tuple_to_struct",
    "hash": "37739405268066890729763165269584506668",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::i32_mod::transmute_unchecked_2ways_arr_to_struct",
    "hash": "138093030418876887981467874061622320326",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::i32_mod::transmute_unchecked_2ways_arr_to_tuple",
    "hash": "122017439253575934388717765518595509150",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::i32_mod::transmute_unchecked_2ways_struct_to_arr",
    "hash": "788079270956194219513235663208225630483",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::i32_mod::transmute_unchecked_2ways_struct_to_tuple",
    "hash": "472475960063122550617538768847850375114",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::i32_mod::transmute_unchecked_2ways_tuple_to_arr",
    "hash": "115399916939014467177571754908281158361",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::i32_mod::transmute_unchecked_2ways_tuple_to_struct",
    "hash": "1306342196850861180911257475321370426714",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::i64_mod::transmute_2ways_arr_to_struct",
    "hash": "17838543191981497594492440254540337085",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::i64_mod::transmute_2ways_arr_to_tuple",
    "hash": "56584371339909943628527451506894818256",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::i64_mod::transmute_2ways_struct_to_arr",
    "hash": "154270773121723391865887848308320848878",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::i64_mod::transmute_2ways_struct_to_tuple",
    "hash": "1569036579373546830110102678267863052959",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::i64_mod::transmute_2ways_tuple_to_arr",
    "hash": "675874631016961535811981586595980450014",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::i64_mod::transmute_2ways_tuple_to_struct",
    "hash": "153791644264466268647965731594107491221",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::i64_mod::transmute_unchecked_2ways_arr_to_struct",
    "hash": "997599287580277542116828303038028591010",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::i64_mod::transmute_unchecked_2ways_arr_to_tuple",
    "hash": "32645251820477933672245308779136122971",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::i64_mod::transmute_unchecked_2ways_struct_to_arr",
    "hash": "135500177694545577513204876748619490825",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::i64_mod::transmute_unchecked_2ways_struct_to_tuple",
    "hash": "457958218474159140717196157536320265822",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::i64_mod::transmute_unchecked_2ways_tuple_to_arr",
    "hash": "108842763946737923623947379763059415355",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::i64_mod::transmute_unchecked_2ways_tuple_to_struct",
    "hash": "50665784809838720591180962914306736454",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::i8_mod::transmute_2ways_arr_to_struct",
    "hash": "183876575132009084747942659679146381446",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::i8_mod::transmute_2ways_arr_to_tuple",
    "hash": "539279150005530472815396194590607828530",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::i8_mod::transmute_2ways_struct_to_arr",
    "hash": "8142734061049630386461462234999254332",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::i8_mod::transmute_2ways_struct_to_tuple",
    "hash": "1763172484714466959616774645322357607205",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::i8_mod::transmute_2ways_tuple_to_arr",
    "hash": "18388835512342899648724822022594861551",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::i8_mod::transmute_2ways_tuple_to_struct",
    "hash": "56586761091616685431277411553692392857",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::i8_mod::transmute_unchecked_2ways_arr_to_struct",
    "hash": "1194116959058250492816749266976662387416",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::i8_mod::transmute_unchecked_2ways_arr_to_tuple",
    "hash": "49911288262673295265795571800191171756",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::i8_mod::transmute_unchecked_2ways_struct_to_arr",
    "hash": "1508717602365153452917450200882734612578",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::i8_mod::transmute_unchecked_2ways_struct_to_tuple",
    "hash": "56803047877645806510216765050153652831",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::i8_mod::transmute_unchecked_2ways_tuple_to_arr",
    "hash": "422196709178488602114114652688167646497",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::i8_mod::transmute_unchecked_2ways_tuple_to_struct",
    "hash": "1213628145416230131914732066791725998123",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::should_fail_f32_to_char",
    "hash": "1337084116685875243215311303122908550073",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::should_fail_i32_to_char",
    "hash": "117880113479448133804457020933589305401",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::should_fail_i8_to_bool",
    "hash": "88126593405299696792310050423268627221",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::should_fail_tuple_to_array",
    "hash": "80424980548283418726618726375344739514",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::should_fail_tuple_to_struct",
    "hash": "212096626125644022611645029990669143169",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::should_fail_tuple_to_tuple",
    "hash": "5816664978115601044923577117770692573",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::should_fail_u32_to_char",
    "hash": "201038752414440416212257523077458822652",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::should_fail_u8_to_bool",
    "hash": "1621443618825187170512389448770376603686",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::should_succeed_bool_to_i8",
    "hash": "13437254361587576717902569064044021311",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::should_succeed_bool_to_u8",
    "hash": "1036674688877487411716216160279808078456",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::should_succeed_char_to_f32",
    "hash": "182267554291280625916444407539004115277",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::should_succeed_char_to_i32",
    "hash": "182154785858362281914714243302311255537",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::should_succeed_char_to_u32",
    "hash": "42389690052970802722164072869895692183",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::should_succeed_f32_to_char",
    "hash": "31781111322392386475336332379146564556",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::should_succeed_f32_to_i32",
    "hash": "155517997269858459842269454257659417064",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::should_succeed_f32_to_u32",
    "hash": "1407609228626843360613468652319593191461",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::should_succeed_f64_to_i64",
    "hash": "19628605499078099014976429462208442829",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::should_succeed_f64_to_u64",
    "hash": "1239747852168857350916932505633142351839",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::should_succeed_i128_to_u128",
    "hash": "131038971337009132969611725027088829324",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::should_succeed_i16_to_u16",
    "hash": "733752884668148588214411717430725741454",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::should_succeed_i32_to_char",
    "hash": "1585935995423086672817392171283782022968",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::should_succeed_i32_to_f32",
    "hash": "156388642096667691965022545271619272775",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::should_succeed_i32_to_u32",
    "hash": "174535098750936998554149725501644221626",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::should_succeed_i64_to_f64",
    "hash": "1163814820903667546616391091713134102321",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::should_succeed_i64_to_u64",
    "hash": "22063627417220653095649646057176241894",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::should_succeed_i8_to_bool",
    "hash": "1291425851125520962664934286685031914",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::should_succeed_i8_to_u8",
    "hash": "26262006651678747413822532645683866608",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::should_succeed_tuple_to_array",
    "hash": "1573658722592225914614245325285283758514",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::should_succeed_tuple_to_struct",
    "hash": "107824990882942260183417309255032531885",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::should_succeed_tuple_to_tuple",
    "hash": "368282956544686831610167228094320085502",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::should_succeed_u128_to_i128",
    "hash": "133046288916532182199463652787293557156",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::should_succeed_u16_to_i16",
    "hash": "12549280282256114058983389302235257925",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::should_succeed_u32_to_char",
    "hash": "118671581516359233954842025750410750225",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::should_succeed_u32_to_f32",
    "hash": "1186212559281687423811465277925530406685",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::should_succeed_u32_to_i32",
    "hash": "181080173347664804551515153474533440272",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::should_succeed_u64_to_f64",
    "hash": "654898867171225496911599187280294732292",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::should_succeed_u64_to_i64",
    "hash": "41282494317944276661662271816591911438",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::should_succeed_u8_to_bool",
    "hash": "8664944864016305208825320877119973066",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::should_succeed_u8_to_i8",
    "hash": "68445340958934852646884103006767116166",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::struct_mod::transmute_2ways_arr_to_struct",
    "hash": "53176575629639501287539301193851198036",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::struct_mod::transmute_2ways_arr_to_tuple",
    "hash": "154745363992683259244948783521681625015",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::struct_mod::transmute_2ways_struct_to_arr",
    "hash": "1764776492727411768912405221695476257755",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::struct_mod::transmute_2ways_struct_to_tuple",
    "hash": "32158316008937367241217669166748248207",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::struct_mod::transmute_2ways_tuple_to_arr",
    "hash": "132119015063030339622119320236802272290",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::struct_mod::transmute_2ways_tuple_to_struct",
    "hash": "1809482000587967492214115348161195595657",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::struct_mod::transmute_unchecked_2ways_arr_to_struct",
    "hash": "1101719462744754031210482541068252501855",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::struct_mod::transmute_unchecked_2ways_arr_to_tuple",
    "hash": "128607515767395130602811033568177594467",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::struct_mod::transmute_unchecked_2ways_struct_to_arr",
    "hash": "1549617319526645112711012985540400821761",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::struct_mod::transmute_unchecked_2ways_struct_to_tuple",
    "hash": "134938821289229055661265023370494680552",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::struct_mod::transmute_unchecked_2ways_tuple_to_arr",
    "hash": "169872068320167140783301162128184772951",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::struct_mod::transmute_unchecked_2ways_tuple_to_struct",
    "hash": "494266587046971674411426730009351071867",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::supported_status",
    "hash": "652306216325428494210843435710275302324"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_2ways_bool_to_i8",
    "hash": "60474385517406228702238770497736129730",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_2ways_bool_to_u8",
    "hash": "1752807498237859241218321524568569162233",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_2ways_char_to_f32",
    "hash": "1841750697609567681913761876601997608304",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_2ways_char_to_i32",
    "hash": "432019102425160873311161051090588301322",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_2ways_char_to_u32",
    "hash": "83346020645667838173470249685421306658",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_2ways_f32_to_char",
    "hash": "143935956366152961941713222668731773138",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_2ways_f32_to_i32",
    "hash": "10074092261151930266391512897267369103",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_2ways_f32_to_u32",
    "hash": "15464211916585748893248550997339233474",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_2ways_f64_to_i64",
    "hash": "28776164284072386475643966911754611098",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_2ways_f64_to_u64",
    "hash": "18515688550256695304593169380300919939",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_2ways_i128_to_u128",
    "hash": "16542174474099276245247731980693195154",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_2ways_i16_to_u16",
    "hash": "714541597108110672415613942774541849506",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_2ways_i32_to_char",
    "hash": "205136295747202152715385987399205872038",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_2ways_i32_to_f32",
    "hash": "46038073597741342856477648435825970884",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_2ways_i32_to_u32",
    "hash": "15558269219014922363929798721394047923",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_2ways_i64_to_f64",
    "hash": "384896361759773120116260936645829424678",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_2ways_i64_to_u64",
    "hash": "95984530811024233223290466101081749749",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_2ways_i8_to_bool",
    "hash": "63093218149985115235885199178319896985",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_2ways_i8_to_u8",
    "hash": "1071464220097632801917324889036269071366",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_2ways_u128_to_i128",
    "hash": "146026896840611451413492615864231189173",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_2ways_u16_to_i16",
    "hash": "147656776225373604534284388767817449211",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_2ways_u32_to_char",
    "hash": "150353557653205531337885803034912280523",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_2ways_u32_to_f32",
    "hash": "1143310813072236900617186266039903909015",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_2ways_u32_to_i32",
    "hash": "94116949548503499012286996134751034227",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_2ways_u64_to_f64",
    "hash": "166797950937625083911307006092523789104",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_2ways_u64_to_i64",
    "hash": "167901364722855771857540452545328559739",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_2ways_u8_to_bool",
    "hash": "129697254125261661417175866756209535757",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_2ways_u8_to_i8",
    "hash": "393923842313575334316925528545666255852",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_unchecked_2ways_bool_to_i8",
    "hash": "158098001163840943588269463527949446778",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_unchecked_2ways_bool_to_u8",
    "hash": "5221938700175221352232909985495842915",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_unchecked_2ways_char_to_f32",
    "hash": "145110373456849425783783871462037393769",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_unchecked_2ways_char_to_i32",
    "hash": "647661427628233140614635422312923626456",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_unchecked_2ways_char_to_u32",
    "hash": "49969724424115076423998989672365886249",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_unchecked_2ways_f32_to_char",
    "hash": "1334892683055244961116052443177786448771",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_unchecked_2ways_f32_to_i32",
    "hash": "17763962506350804379443044460656500563",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_unchecked_2ways_f32_to_u32",
    "hash": "73664965336254259814887625991944789820",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_unchecked_2ways_f64_to_i64",
    "hash": "4067412229051039116241524780211873330",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_unchecked_2ways_f64_to_u64",
    "hash": "940595852119121090414804373654352147256",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_unchecked_2ways_i128_to_u128",
    "hash": "121405853143897379827093310841374782374",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_unchecked_2ways_i16_to_u16",
    "hash": "117518057910747360409301018889844266474",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_unchecked_2ways_i32_to_char",
    "hash": "46454948281292580548113649474128740637",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_unchecked_2ways_i32_to_f32",
    "hash": "62962428378783528068705382920259664743",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_unchecked_2ways_i32_to_u32",
    "hash": "101704367705641890027803609969931441916",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_unchecked_2ways_i64_to_f64",
    "hash": "25659472157611949861983640074525506842",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_unchecked_2ways_i64_to_u64",
    "hash": "141296834975894632818928065502315368287",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_unchecked_2ways_i8_to_bool",
    "hash": "57705090139797890510022565206573472475",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_unchecked_2ways_i8_to_u8",
    "hash": "120415380467084024007141364913928333742",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_unchecked_2ways_u128_to_i128",
    "hash": "111954037728910637607541379764259532148",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_unchecked_2ways_u16_to_i16",
    "hash": "1480632576179713917212388366852792673648",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_unchecked_2ways_u32_to_char",
    "hash": "1162705750960821570215153624277115622525",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_unchecked_2ways_u32_to_f32",
    "hash": "1082115988958618234416577133230391683660",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_unchecked_2ways_u32_to_i32",
    "hash": "488213104317520917017648310184170885309",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_unchecked_2ways_u64_to_f64",
    "hash": "118609100827574686066219613858948238464",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_unchecked_2ways_u64_to_i64",
    "hash": "821078682505896721017458990615925952145",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_unchecked_2ways_u8_to_bool",
    "hash": "99318420891671505929503662970604863836",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_unchecked_2ways_u8_to_i8",
    "hash": "62887072971038682613930340685084853703",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_unchecked_bool_to_i8",
    "hash": "40571579524698430387086537325640298370",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_unchecked_bool_to_u8",
    "hash": "1775591543980087589215315424094924804218",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_unchecked_char_to_f32",
    "hash": "1465259518876249404615162122319055204761",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_unchecked_char_to_i32",
    "hash": "788198045466834251618368700277182267642",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_unchecked_char_to_u32",
    "hash": "178590937247402673653028504642974128512",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_unchecked_f32_to_char",
    "hash": "50743283851099475104739055859366888389",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_unchecked_f32_to_i32",
    "hash": "84518791777509346395179572784757730962",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_unchecked_f32_to_u32",
    "hash": "1501079994757302346510385981513059757366",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_unchecked_f64_to_i64",
    "hash": "589581261955707399318420404624126798652",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_unchecked_f64_to_u64",
    "hash": "42766365128279153521618304796815784391",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_unchecked_i128_to_u128",
    "hash": "174274986468377306414730781832164688761",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_unchecked_i16_to_u16",
    "hash": "524073745828649617211518028619573411938",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_unchecked_i32_to_char",
    "hash": "1643862032976969642013662408187349411099",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_unchecked_i32_to_f32",
    "hash": "70530107434988156832300109308895397726",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_unchecked_i32_to_u32",
    "hash": "135058437817578607868311711810828150092",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_unchecked_i64_to_f64",
    "hash": "60649827606860866191132754128291331024",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_unchecked_i64_to_u64",
    "hash": "131646533596745016708207583188300414861",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_unchecked_i8_to_bool",
    "hash": "1838346132269797411010422713578965205699",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_unchecked_i8_to_u8",
    "hash": "106667555771206196981258209043689752281",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_unchecked_u128_to_i128",
    "hash": "158397684791320462935671247663460484335",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_unchecked_u16_to_i16",
    "hash": "104045080215578638026379125725669233200",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_unchecked_u32_to_char",
    "hash": "181267809824376906879981013654159777232",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_unchecked_u32_to_f32",
    "hash": "80344282304707684566457116616434038815",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_unchecked_u32_to_i32",
    "hash": "1841514990413977653111084869772279111640",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_unchecked_u64_to_f64",
    "hash": "135472670910851948152976097386670490751",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_unchecked_u64_to_i64",
    "hash": "122337735156644273472426175594335932962",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_unchecked_u8_to_bool",
    "hash": "150358031962858492953668125965430113332",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_unchecked_u8_to_i8",
    "hash": "15416710319949202021834867917907567882",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_zero_size",
    "hash": "1688595152874343380718088245850655928251",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::tuple_mod::transmute_2ways_arr_to_struct",
    "hash": "85440445333084955588070342822440663378",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::tuple_mod::transmute_2ways_arr_to_tuple",
    "hash": "1147351786176322393817616461109645854761",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::tuple_mod::transmute_2ways_struct_to_arr",
    "hash": "789939428426005867417355446369804976109",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::tuple_mod::transmute_2ways_struct_to_tuple",
    "hash": "61722993792251444783802298584222271719",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::tuple_mod::transmute_2ways_tuple_to_arr",
    "hash": "1014164278689123370717855364208581449871",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::tuple_mod::transmute_2ways_tuple_to_struct",
    "hash": "1485219191639530635513513892689706709557",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::tuple_mod::transmute_unchecked_2ways_arr_to_struct",
    "hash": "77131069385042144185618620537497060563",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::tuple_mod::transmute_unchecked_2ways_arr_to_tuple",
    "hash": "83846036930420882099339932922325754554",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::tuple_mod::transmute_unchecked_2ways_struct_to_arr",
    "hash": "42011613113860164488556839092197866668",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::tuple_mod::transmute_unchecked_2ways_struct_to_tuple",
    "hash": "119510161448130081649295045390223675687",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::tuple_mod::transmute_unchecked_2ways_tuple_to_arr",
    "hash": "50004226287885270884427787753926502364",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::tuple_mod::transmute_unchecked_2ways_tuple_to_struct",
    "hash": "1699844393734152828016407538403935780289",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::u128_mod::transmute_2ways_arr_to_struct",
    "hash": "515253979055456394613321736661679419529",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::u128_mod::transmute_2ways_arr_to_tuple",
    "hash": "1796046359660983116716605133946234777576",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::u128_mod::transmute_2ways_struct_to_arr",
    "hash": "80276587155635432417944879569470267967",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::u128_mod::transmute_2ways_struct_to_tuple",
    "hash": "179466378560714998063773110671281465701",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::u128_mod::transmute_2ways_tuple_to_arr",
    "hash": "986514189049639003010377600760241142142",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::u128_mod::transmute_2ways_tuple_to_struct",
    "hash": "738306701752903764915039945939535368629",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::u128_mod::transmute_unchecked_2ways_arr_to_struct",
    "hash": "82222869217373447169265252764442551137",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::u128_mod::transmute_unchecked_2ways_arr_to_tuple",
    "hash": "1758480514670914934917082616055972467144",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::u128_mod::transmute_unchecked_2ways_struct_to_arr",
    "hash": "1326180933604821290713332024395480752487",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::u128_mod::transmute_unchecked_2ways_struct_to_tuple",
    "hash": "1786850552504933528614787329911005439217",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::u128_mod::transmute_unchecked_2ways_tuple_to_arr",
    "hash": "369879609072942167815666606017955806550",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::u128_mod::transmute_unchecked_2ways_tuple_to_struct",
    "hash": "32743172900379271662277891169565001395",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::u16_mod::transmute_2ways_arr_to_struct",
    "hash": "142822804440175004318552359930941720083",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::u16_mod::transmute_2ways_arr_to_tuple",
    "hash": "145655302084110165828186172716231395673",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::u16_mod::transmute_2ways_struct_to_arr",
    "hash": "1635367655812726455517098512531616015874",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::u16_mod::transmute_2ways_struct_to_tuple",
    "hash": "1353829142497035806011975531219455507155",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::u16_mod::transmute_2ways_tuple_to_arr",
    "hash": "27089601772225180752493335251840009647",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::u16_mod::transmute_2ways_tuple_to_struct",
    "hash": "98016735227846535879142149290375273428",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::u16_mod::transmute_unchecked_2ways_arr_to_struct",
    "hash": "293058250592837912515337495532214323751",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::u16_mod::transmute_unchecked_2ways_arr_to_tuple",
    "hash": "69968371401015447984606906659126025902",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::u16_mod::transmute_unchecked_2ways_struct_to_arr",
    "hash": "7881704966848437625309575104874110097",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::u16_mod::transmute_unchecked_2ways_struct_to_tuple",
    "hash": "82157454986477593157285567179559375281",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::u16_mod::transmute_unchecked_2ways_tuple_to_arr",
    "hash": "57743372729511993792196083561241224039",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::u16_mod::transmute_unchecked_2ways_tuple_to_struct",
    "hash": "157026307737876205601564861249644697370",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::u32_mod::transmute_2ways_arr_to_struct",
    "hash": "16126040971934138886689527312406260521",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::u32_mod::transmute_2ways_arr_to_tuple",
    "hash": "18202622825494299262230737845862531069",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::u32_mod::transmute_2ways_struct_to_arr",
    "hash": "11908305855152702118242563394896231874",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::u32_mod::transmute_2ways_struct_to_tuple",
    "hash": "854557699506131818916349366669636987327",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::u32_mod::transmute_2ways_tuple_to_arr",
    "hash": "47741241189574854256267738888767418179",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::u32_mod::transmute_2ways_tuple_to_struct",
    "hash": "11613659396918478053208319345482837220",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::u32_mod::transmute_unchecked_2ways_arr_to_struct",
    "hash": "347939794750626446810435331440283247617",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::u32_mod::transmute_unchecked_2ways_arr_to_tuple",
    "hash": "148602360199366669422035982311784661045",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::u32_mod::transmute_unchecked_2ways_struct_to_arr",
    "hash": "1575261869487867970111799233373782539580",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::u32_mod::transmute_unchecked_2ways_struct_to_tuple",
    "hash": "1038410157813928754813374884933007772925",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::u32_mod::transmute_unchecked_2ways_tuple_to_arr",
    "hash": "1032188261301144257815454187798575326501",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::u32_mod::transmute_unchecked_2ways_tuple_to_struct",
    "hash": "19634306039244160695895350963072695720",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::u64_mod::transmute_2ways_arr_to_struct",
    "hash": "72129952186279346918595207037600421162",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::u64_mod::transmute_2ways_arr_to_tuple",
    "hash": "149556376202782054433134386561661291870",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::u64_mod::transmute_2ways_struct_to_arr",
    "hash": "1419470898428881221211016645210737158142",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::u64_mod::transmute_2ways_struct_to_tuple",
    "hash": "43481195727645805483152006724230631734",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::u64_mod::transmute_2ways_tuple_to_arr",
    "hash": "1754366971548746946016547616112338326863",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::u64_mod::transmute_2ways_tuple_to_struct",
    "hash": "33025388547624051204192112509482863891",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::u64_mod::transmute_unchecked_2ways_arr_to_struct",
    "hash": "141259944297730043416891587730939180205",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::u64_mod::transmute_unchecked_2ways_arr_to_tuple",
    "hash": "41388493855338718027209851908907525391",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::u64_mod::transmute_unchecked_2ways_struct_to_arr",
    "hash": "1625299673903588974215968761262817646599",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::u64_mod::transmute_unchecked_2ways_struct_to_tuple",
    "hash": "1809449559874643911612173188509453269343",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::u64_mod::transmute_unchecked_2ways_tuple_to_arr",
    "hash": "176139284518040791453955505615423436210",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::u64_mod::transmute_unchecked_2ways_tuple_to_struct",
    "hash": "1316071568062018082715913686893191475106",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::u8_mod::transmute_2ways_arr_to_struct",
    "hash": "146250801054971776953836986453427614948",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::u8_mod::transmute_2ways_arr_to_tuple",
    "hash": "1406350567862903688614982602812178920237",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::u8_mod::transmute_2ways_struct_to_arr",
    "hash": "450049211452470715911291922328980159187",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::u8_mod::transmute_2ways_struct_to_tuple",
    "hash": "569155232099180055215342511130412730872",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::u8_mod::transmute_2ways_tuple_to_arr",
    "hash": "1809415893571568591413678383744255141270",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::u8_mod::transmute_2ways_tuple_to_struct",
    "hash": "11614369340961952410479585310977319716",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::u8_mod::transmute_unchecked_2ways_arr_to_struct",
    "hash": "38844375737067274506430858747426727470",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::u8_mod::transmute_unchecked_2ways_arr_to_tuple",
    "hash": "822633008463731359110763257754491493674",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::u8_mod::transmute_unchecked_2ways_struct_to_arr",
    "hash": "219161521965276296711598743562343659430",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::u8_mod::transmute_unchecked_2ways_struct_to_tuple",
    "hash": "920696148462337825414086634526532427375",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::u8_mod::transmute_unchecked_2ways_tuple_to_arr",
    "hash": "129486842279799673441847871036223154394",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::u8_mod::transmute_unchecked_2ways_tuple_to_struct",
    "hash": "144576866411615161523872694515443686222",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "num::from_ascii_radix_panic::do_panic::compiletime",
    "hash": "1006167465322247461310313782880130128262"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "num::from_ascii_radix_panic::do_panic::runtime",
    "hash": "182193223584779598874454481824447992605"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "slice::<impl [T]>::copy_from_slice::len_mismatch_fail::do_panic::compiletime",
    "hash": "90445066862623677859541734196823955882"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "slice::<impl [T]>::copy_from_slice::len_mismatch_fail::do_panic::runtime",
    "hash": "1235129058402104682210503329538311217345"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "slice::index::slice_end_index_len_fail::do_panic::compiletime",
    "hash": "177987525792058191186693084618402813695"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "slice::index::slice_end_index_len_fail::do_panic::runtime",
    "hash": "1363736816890242968813291297505934676086"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "slice::index::slice_index_order_fail::do_panic::compiletime",
    "hash": "15337628592533275491332232496850156663"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "slice::index::slice_index_order_fail::do_panic::runtime",
    "hash": "1363736816890242968813291297505934676086"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "slice::index::slice_start_index_len_fail::do_panic::compiletime",
    "hash": "1194534951198934991111241799765851780373"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "slice::index::slice_start_index_len_fail::do_panic::runtime",
    "hash": "1363736816890242968813291297505934676086"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "ub_checks::check_language_ub::compiletime",
    "hash": "69589595752229692514226806296412029128"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "ub_checks::check_language_ub::runtime",
    "hash": "16824420916691935049705640393259467449"
  },
  {
    "file": "core/src/iter/adapters/step_by.rs",
    "func": "<iter::adapters::step_by::StepBy<I> as iter::adapters::step_by::StepByImpl<I>>::spec_size_hint::first_size",
    "hash": "124348348342317746635773361060782085724"
  },
  {
    "file": "core/src/iter/adapters/step_by.rs",
    "func": "<iter::adapters::step_by::StepBy<I> as iter::adapters::step_by::StepByImpl<I>>::spec_size_hint::other_size",
    "hash": "1204423054530717430314124469046569659726"
  },
  {
    "file": "core/src/iter/adapters/step_by.rs",
    "func": "<ops::range::Range<u16> as iter::adapters::step_by::SpecRangeSetup<ops::range::Range<u16>>>::setup",
    "hash": "146817829886370479216076871243128568731"
  },
  {
    "file": "core/src/iter/adapters/step_by.rs",
    "func": "<ops::range::Range<u32> as iter::adapters::step_by::SpecRangeSetup<ops::range::Range<u32>>>::setup",
    "hash": "1012801124038787966512559162615483242951"
  },
  {
    "file": "core/src/iter/adapters/step_by.rs",
    "func": "<ops::range::Range<u64> as iter::adapters::step_by::SpecRangeSetup<ops::range::Range<u64>>>::setup",
    "hash": "1155223801099314282090552344124084334"
  },
  {
    "file": "core/src/iter/adapters/step_by.rs",
    "func": "<ops::range::Range<u8> as iter::adapters::step_by::SpecRangeSetup<ops::range::Range<u8>>>::setup",
    "hash": "1219739687506626509311875147507445118797"
  },
  {
    "file": "core/src/iter/adapters/step_by.rs",
    "func": "<ops::range::Range<usize> as iter::adapters::step_by::SpecRangeSetup<ops::range::Range<usize>>>::setup",
    "hash": "101540532603971487044188003048723743973"
  },
  {
    "file": "core/src/iter/range.rs",
    "func": "<char as iter::range::Step>::backward_checked",
    "hash": "552514332627491561813681677473354370193"
  },
  {
    "file": "core/src/iter/range.rs",
    "func": "<char as iter::range::Step>::backward_unchecked",
    "hash": "85110977581463147468246228674807511410"
  },
  {
    "file": "core/src/iter/range.rs",
    "func": "<char as iter::range::Step>::forward_checked",
    "hash": "1384200541880472372715530284180058292967"
  },
  {
    "file": "core/src/iter/range.rs",
    "func": "<char as iter::range::Step>::forward_unchecked",
    "hash": "290207270535373581210459711730903407153"
  },
  {
    "file": "core/src/iter/range.rs",
    "func": "<i128 as iter::range::Step>::backward",
    "hash": "817106471727285463617649693520909423860"
  },
  {
    "file": "core/src/iter/range.rs",
    "func": "<i128 as iter::range::Step>::backward_checked",
    "hash": "1183958361069195149110864730633729280848"
  },
  {
    "file": "core/src/iter/range.rs",
    "func": "<i128 as iter::range::Step>::backward_unchecked",
    "hash": "89302977759807017436992759604964058971"
  },
  {
    "file": "core/src/iter/range.rs",
    "func": "<i128 as iter::range::Step>::forward",
    "hash": "140330129963483003921059440398328176927"
  },
  {
    "file": "core/src/iter/range.rs",
    "func": "<i128 as iter::range::Step>::forward_checked",
    "hash": "140752736040791017239436031928684890519"
  },
  {
    "file": "core/src/iter/range.rs",
    "func": "<i128 as iter::range::Step>::forward_unchecked",
    "hash": "54087801561797610322482772493310614852"
  },
  {
    "file": "core/src/iter/range.rs",
    "func": "<i16 as iter::range::Step>::backward",
    "hash": "1704605860311524194414138646086247278325"
  },
  {
    "file": "core/src/iter/range.rs",
    "func": "<i16 as iter::range::Step>::backward_checked",
    "hash": "1547950379708493739210600100382622858872"
  },
  {
    "file": "core/src/iter/range.rs",
    "func": "<i16 as iter::range::Step>::backward_unchecked",
    "hash": "94072251836781801081394879950949351830"
  },
  {
    "file": "core/src/iter/range.rs",
    "func": "<i16 as iter::range::Step>::forward",
    "hash": "1359087002807715644811319466045766462469"
  },
  {
    "file": "core/src/iter/range.rs",
    "func": "<i16 as iter::range::Step>::forward_checked",
    "hash": "20329620832228499808723643734123225796"
  },
  {
    "file": "core/src/iter/range.rs",
    "func": "<i16 as iter::range::Step>::forward_unchecked",
    "hash": "122264905419618049614837017213815821306"
  },
  {
    "file": "core/src/iter/range.rs",
    "func": "<i32 as iter::range::Step>::backward",
    "hash": "69756903903620505188594016054705804066"
  },
  {
    "file": "core/src/iter/range.rs",
    "func": "<i32 as iter::range::Step>::backward_checked",
    "hash": "172090119247197381121959035574662706336"
  },
  {
    "file": "core/src/iter/range.rs",
    "func": "<i32 as iter::range::Step>::backward_unchecked",
    "hash": "91942583552737502622866173306094567079"
  },
  {
    "file": "core/src/iter/range.rs",
    "func": "<i32 as iter::range::Step>::forward",
    "hash": "184945045804577369115897467129597197775"
  },
  {
    "file": "core/src/iter/range.rs",
    "func": "<i32 as iter::range::Step>::forward_checked",
    "hash": "179058949383911154994554253895535046020"
  },
  {
    "file": "core/src/iter/range.rs",
    "func": "<i32 as iter::range::Step>::forward_unchecked",
    "hash": "60182656594983055279852895139348976175"
  },
  {
    "file": "core/src/iter/range.rs",
    "func": "<i64 as iter::range::Step>::backward",
    "hash": "1792141921297899347610473508961960483530"
  },
  {
    "file": "core/src/iter/range.rs",
    "func": "<i64 as iter::range::Step>::backward_checked",
    "hash": "86135363562657608355996948829833849790"
  },
  {
    "file": "core/src/iter/range.rs",
    "func": "<i64 as iter::range::Step>::backward_unchecked",
    "hash": "116648660260853766708893346585596636501"
  },
  {
    "file": "core/src/iter/range.rs",
    "func": "<i64 as iter::range::Step>::forward",
    "hash": "61483632779277477011740581764413915045"
  },
  {
    "file": "core/src/iter/range.rs",
    "func": "<i64 as iter::range::Step>::forward_checked",
    "hash": "50807984965856629748005939311224530744"
  },
  {
    "file": "core/src/iter/range.rs",
    "func": "<i64 as iter::range::Step>::forward_unchecked",
    "hash": "396101347975593037716663283331722223764"
  },
  {
    "file": "core/src/iter/range.rs",
    "func": "<i8 as iter::range::Step>::backward",
    "hash": "1379218813835577108415611092384752399079"
  },
  {
    "file": "core/src/iter/range.rs",
    "func": "<i8 as iter::range::Step>::backward_checked",
    "hash": "1366743745124662386711487854332148001632"
  },
  {
    "file": "core/src/iter/range.rs",
    "func": "<i8 as iter::range::Step>::backward_unchecked",
    "hash": "1211346359612416700710634511382672530653"
  },
  {
    "file": "core/src/iter/range.rs",
    "func": "<i8 as iter::range::Step>::forward",
    "hash": "601748368346890885310847196348349815058"
  },
  {
    "file": "core/src/iter/range.rs",
    "func": "<i8 as iter::range::Step>::forward_checked",
    "hash": "110763451109829733427582036925946434826"
  },
  {
    "file": "core/src/iter/range.rs",
    "func": "<i8 as iter::range::Step>::forward_unchecked",
    "hash": "1303486063997353705516885851873766778382"
  },
  {
    "file": "core/src/iter/range.rs",
    "func": "<isize as iter::range::Step>::backward",
    "hash": "73247658542732051273513044170631098117"
  },
  {
    "file": "core/src/iter/range.rs",
    "func": "<isize as iter::range::Step>::backward_checked",
    "hash": "113924802329649775816294922551576943796"
  },
  {
    "file": "core/src/iter/range.rs",
    "func": "<isize as iter::range::Step>::backward_unchecked",
    "hash": "182122044602733535848577019765054056440"
  },
  {
    "file": "core/src/iter/range.rs",
    "func": "<isize as iter::range::Step>::forward",
    "hash": "161354684099215672371664422020465751271"
  },
  {
    "file": "core/src/iter/range.rs",
    "func": "<isize as iter::range::Step>::forward_checked",
    "hash": "439655066026968612714380148205863324425"
  },
  {
    "file": "core/src/iter/range.rs",
    "func": "<isize as iter::range::Step>::forward_unchecked",
    "hash": "380672469767303486117877227440771690017"
  },
  {
    "file": "core/src/iter/range.rs",
    "func": "<u128 as iter::range::Step>::backward",
    "hash": "993776097401996694818106290655242199067"
  },
  {
    "file": "core/src/iter/range.rs",
    "func": "<u128 as iter::range::Step>::backward_checked",
    "hash": "137312151251263611294936522119590020551"
  },
  {
    "file": "core/src/iter/range.rs",
    "func": "<u128 as iter::range::Step>::backward_unchecked",
    "hash": "130678685089359867386058611557423817169"
  },
  {
    "file": "core/src/iter/range.rs",
    "func": "<u128 as iter::range::Step>::forward",
    "hash": "71338038729752833921799074002930199358"
  },
  {
    "file": "core/src/iter/range.rs",
    "func": "<u128 as iter::range::Step>::forward_checked",
    "hash": "963703211169456164217935436626795356336"
  },
  {
    "file": "core/src/iter/range.rs",
    "func": "<u128 as iter::range::Step>::forward_unchecked",
    "hash": "69350539190217244508207540958999862717"
  },
  {
    "file": "core/src/iter/range.rs",
    "func": "<u16 as iter::range::Step>::backward",
    "hash": "55149239687067903968933330054906486851"
  },
  {
    "file": "core/src/iter/range.rs",
    "func": "<u16 as iter::range::Step>::backward_checked",
    "hash": "903359833727071495610143320684393678240"
  },
  {
    "file": "core/src/iter/range.rs",
    "func": "<u16 as iter::range::Step>::backward_unchecked",
    "hash": "46757847145339083422915107388732134336"
  },
  {
    "file": "core/src/iter/range.rs",
    "func": "<u16 as iter::range::Step>::forward",
    "hash": "16567559619970110531202888642345434152"
  },
  {
    "file": "core/src/iter/range.rs",
    "func": "<u16 as iter::range::Step>::forward_checked",
    "hash": "14842642422837900091555590411327433277"
  },
  {
    "file": "core/src/iter/range.rs",
    "func": "<u16 as iter::range::Step>::forward_unchecked",
    "hash": "120187458746217755377061356638344375303"
  },
  {
    "file": "core/src/iter/range.rs",
    "func": "<u32 as iter::range::Step>::backward",
    "hash": "121010871402302381115945339242511377708"
  },
  {
    "file": "core/src/iter/range.rs",
    "func": "<u32 as iter::range::Step>::backward_checked",
    "hash": "607001761560889915412781053603517283639"
  },
  {
    "file": "core/src/iter/range.rs",
    "func": "<u32 as iter::range::Step>::backward_unchecked",
    "hash": "1570510636641655704211361599679023296652"
  },
  {
    "file": "core/src/iter/range.rs",
    "func": "<u32 as iter::range::Step>::forward",
    "hash": "1505205356016133697917553316879997764835"
  },
  {
    "file": "core/src/iter/range.rs",
    "func": "<u32 as iter::range::Step>::forward_checked",
    "hash": "113809931130817876659414204383223169438"
  },
  {
    "file": "core/src/iter/range.rs",
    "func": "<u32 as iter::range::Step>::forward_unchecked",
    "hash": "176756492329868819509330469850120887391"
  },
  {
    "file": "core/src/iter/range.rs",
    "func": "<u64 as iter::range::Step>::backward",
    "hash": "181793694347458364004983824986954377961"
  },
  {
    "file": "core/src/iter/range.rs",
    "func": "<u64 as iter::range::Step>::backward_checked",
    "hash": "164822599384465267422453141088801406990"
  },
  {
    "file": "core/src/iter/range.rs",
    "func": "<u64 as iter::range::Step>::backward_unchecked",
    "hash": "137172743909622090829236460835464788201"
  },
  {
    "file": "core/src/iter/range.rs",
    "func": "<u64 as iter::range::Step>::forward",
    "hash": "1785834007884651444415407781578493789270"
  },
  {
    "file": "core/src/iter/range.rs",
    "func": "<u64 as iter::range::Step>::forward_checked",
    "hash": "84492972766327428533717977533596212469"
  },
  {
    "file": "core/src/iter/range.rs",
    "func": "<u64 as iter::range::Step>::forward_unchecked",
    "hash": "1417257311064750260711090064611900242887"
  },
  {
    "file": "core/src/iter/range.rs",
    "func": "<u8 as iter::range::Step>::backward",
    "hash": "802334024314588411212810052895022844913"
  },
  {
    "file": "core/src/iter/range.rs",
    "func": "<u8 as iter::range::Step>::backward_checked",
    "hash": "1494473657552529142013794448013979716428"
  },
  {
    "file": "core/src/iter/range.rs",
    "func": "<u8 as iter::range::Step>::backward_unchecked",
    "hash": "37181374801445285733435824030423290366"
  },
  {
    "file": "core/src/iter/range.rs",
    "func": "<u8 as iter::range::Step>::forward",
    "hash": "128191758550205652938305626722672459099"
  },
  {
    "file": "core/src/iter/range.rs",
    "func": "<u8 as iter::range::Step>::forward_checked",
    "hash": "123419805032737350432462185505762022715"
  },
  {
    "file": "core/src/iter/range.rs",
    "func": "<u8 as iter::range::Step>::forward_unchecked",
    "hash": "1559527691468457438712029334091199709783"
  },
  {
    "file": "core/src/iter/range.rs",
    "func": "<usize as iter::range::Step>::backward",
    "hash": "570996364441069592714970414837988869257"
  },
  {
    "file": "core/src/iter/range.rs",
    "func": "<usize as iter::range::Step>::backward_checked",
    "hash": "500669916455006915115400846370239697785"
  },
  {
    "file": "core/src/iter/range.rs",
    "func": "<usize as iter::range::Step>::backward_unchecked",
    "hash": "103649489784811006526625132462472248149"
  },
  {
    "file": "core/src/iter/range.rs",
    "func": "<usize as iter::range::Step>::forward",
    "hash": "145750460293165270791352283354199517028"
  },
  {
    "file": "core/src/iter/range.rs",
    "func": "<usize as iter::range::Step>::forward_checked",
    "hash": "76584255526867580235503074795342767820"
  },
  {
    "file": "core/src/iter/range.rs",
    "func": "<usize as iter::range::Step>::forward_unchecked",
    "hash": "180874735662080423702617202418949819065"
  },
  {
    "file": "core/src/marker.rs",
    "func": "<marker::PhantomPinned as default::Default>::default",
    "hash": "1103745097942804791116074541065999219877"
  },
  {
    "file": "core/src/marker/variance.rs",
    "func": "<marker::variance::PhantomContravariantLifetime<'_> as default::Default>::default",
    "hash": "1222063751048221031317188627557247413509"
  },
  {
    "file": "core/src/marker/variance.rs",
    "func": "<marker::variance::PhantomCovariantLifetime<'_> as default::Default>::default",
    "hash": "1430770035247630118315043314752757907350"
  },
  {
    "file": "core/src/marker/variance.rs",
    "func": "<marker::variance::PhantomInvariantLifetime<'_> as default::Default>::default",
    "hash": "791194254110882201814819874835302631346"
  },
  {
    "file": "core/src/marker/variance.rs",
    "func": "marker::variance::PhantomContravariantLifetime::<'_>::new",
    "hash": "866385002775414963115745934226504818084"
  },
  {
    "file": "core/src/marker/variance.rs",
    "func": "marker::variance::PhantomCovariantLifetime::<'_>::new",
    "hash": "126517094754030932879254464035877180093"
  },
  {
    "file": "core/src/marker/variance.rs",
    "func": "marker::variance::PhantomInvariantLifetime::<'_>::new",
    "hash": "172068683777788445607331838337744212616"
  },
  {
    "file": "core/src/mem/mod.rs",
    "func": "mem::verify::check_swap_adt_no_drop",
    "hash": "1759114026111261879013780737386791623194",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/mem/mod.rs",
    "func": "mem::verify::check_swap_primitive",
    "hash": "332924676359313588017389216859648899870",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/net/ip_addr.rs",
    "func": "<<net::ip_addr::Ipv6Addr as fmt::Display>::fmt::Span as default::Default>::default",
    "hash": "97888789030159563051482090395443728303"
  },
  {
    "file": "core/src/net/ip_addr.rs",
    "func": "<net::ip_addr::IpAddr as convert::From<[u16; 8]>>::from",
    "hash": "132890700874283659724251972584189856473"
  },
  {
    "file": "core/src/net/ip_addr.rs",
    "func": "<net::ip_addr::IpAddr as convert::From<[u8; 16]>>::from",
    "hash": "179789409297573410534232820576374994179"
  },
  {
    "file": "core/src/net/ip_addr.rs",
    "func": "<net::ip_addr::IpAddr as convert::From<[u8; 4]>>::from",
    "hash": "752261986066604871815611085230198290151"
  },
  {
    "file": "core/src/net/ip_addr.rs",
    "func": "<net::ip_addr::Ipv4Addr as convert::From<[u8; 4]>>::from",
    "hash": "1403877265646685064613124593493548670732"
  },
  {
    "file": "core/src/net/ip_addr.rs",
    "func": "<net::ip_addr::Ipv4Addr as convert::From<u32>>::from",
    "hash": "26817785374113154226274110328975264087"
  },
  {
    "file": "core/src/net/ip_addr.rs",
    "func": "<net::ip_addr::Ipv6Addr as convert::From<[u16; 8]>>::from",
    "hash": "375027897121265998711776428183485995782"
  },
  {
    "file": "core/src/net/ip_addr.rs",
    "func": "<net::ip_addr::Ipv6Addr as convert::From<[u8; 16]>>::from",
    "hash": "159567771208325214032370378719124472776"
  },
  {
    "file": "core/src/net/ip_addr.rs",
    "func": "<net::ip_addr::Ipv6Addr as convert::From<u128>>::from",
    "hash": "18073965479276309014672355021896674295"
  },
  {
    "file": "core/src/net/ip_addr.rs",
    "func": "net::ip_addr::Ipv4Addr::from_bits",
    "hash": "171462120367812663041430580066579544459"
  },
  {
    "file": "core/src/net/ip_addr.rs",
    "func": "net::ip_addr::Ipv4Addr::from_octets",
    "hash": "32820556012326612714782141073138251957"
  },
  {
    "file": "core/src/net/ip_addr.rs",
    "func": "net::ip_addr::Ipv4Addr::new",
    "hash": "625003328998925956015889871136750928179"
  },
  {
    "file": "core/src/net/ip_addr.rs",
    "func": "net::ip_addr::Ipv6Addr::from_bits",
    "hash": "1331253600545927429611025357691742147942"
  },
  {
    "file": "core/src/net/ip_addr.rs",
    "func": "net::ip_addr::Ipv6Addr::from_octets",
    "hash": "20259385115277752043258744566892476136"
  },
  {
    "file": "core/src/net/ip_addr.rs",
    "func": "net::ip_addr::Ipv6Addr::from_segments",
    "hash": "13202719516519374487777496233712653134"
  },
  {
    "file": "core/src/net/ip_addr.rs",
    "func": "net::ip_addr::Ipv6Addr::new",
    "hash": "945491289973555438317015606462012729808"
  },
  {
    "file": "core/src/num/bignum.rs",
    "func": "<u16 as num::bignum::FullOps>::full_div_rem",
    "hash": "1029219755961862376911098354470779249339"
  },
  {
    "file": "core/src/num/bignum.rs",
    "func": "<u16 as num::bignum::FullOps>::full_mul_add",
    "hash": "91941989600517607454151706739342972958"
  },
  {
    "file": "core/src/num/bignum.rs",
    "func": "<u32 as num::bignum::FullOps>::full_div_rem",
    "hash": "46222866349141219552613182435585716161"
  },
  {
    "file": "core/src/num/bignum.rs",
    "func": "<u32 as num::bignum::FullOps>::full_mul_add",
    "hash": "785085016792226321317550951059460535476"
  },
  {
    "file": "core/src/num/bignum.rs",
    "func": "<u8 as num::bignum::FullOps>::full_div_rem",
    "hash": "1138303699169255331818282254899080684389"
  },
  {
    "file": "core/src/num/bignum.rs",
    "func": "<u8 as num::bignum::FullOps>::full_mul_add",
    "hash": "1419834204093691851312212301718223208807"
  },
  {
    "file": "core/src/num/bignum.rs",
    "func": "num::bignum::Big32x40::from_small",
    "hash": "285589171554812107210692116339769847559"
  },
  {
    "file": "core/src/num/bignum.rs",
    "func": "num::bignum::Big32x40::from_u64",
    "hash": "112109469497593157613137034640471651801"
  },
  {
    "file": "core/src/num/bignum.rs",
    "func": "num::bignum::tests::Big8x3::from_small",
    "hash": "164529263798971822246512196965964349380"
  },
  {
    "file": "core/src/num/bignum.rs",
    "func": "num::bignum::tests::Big8x3::from_u64",
    "hash": "73362978635720256583267674835834657628"
  },
  {
    "file": "core/src/num/dec2flt/common.rs",
    "func": "<num::dec2flt::common::BiasedFp as default::Default>::default",
    "hash": "156090881868547699848269301670301926885"
  },
  {
    "file": "core/src/num/dec2flt/common.rs",
    "func": "num::dec2flt::common::BiasedFp::zero_pow2",
    "hash": "44045435809800886759043385147663812926"
  },
  {
    "file": "core/src/num/dec2flt/common.rs",
    "func": "num::dec2flt::common::is_8digits",
    "hash": "172402383308075264604720501242417401863"
  },
  {
    "file": "core/src/num/dec2flt/decimal.rs",
    "func": "<num::dec2flt::decimal::Decimal as default::Default>::default",
    "hash": "585477850685136306311266920657034130131"
  },
  {
    "file": "core/src/num/dec2flt/decimal_seq.rs",
    "func": "<num::dec2flt::decimal_seq::DecimalSeq as default::Default>::default",
    "hash": "350648819093610937116112086784531410776"
  },
  {
    "file": "core/src/num/dec2flt/float.rs",
    "func": "<f16 as num::dec2flt::float::RawFloat>::classify",
    "hash": "15966691110355837516913420857608751229"
  },
  {
    "file": "core/src/num/dec2flt/float.rs",
    "func": "<f16 as num::dec2flt::float::RawFloat>::from_u64",
    "hash": "1159816339070295108313449730837458204808"
  },
  {
    "file": "core/src/num/dec2flt/float.rs",
    "func": "<f16 as num::dec2flt::float::RawFloat>::from_u64_bits",
    "hash": "1069821818572217014915127415774681872969"
  },
  {
    "file": "core/src/num/dec2flt/float.rs",
    "func": "<f16 as num::dec2flt::float::RawFloat>::pow10_fast_path",
    "hash": "41014141829897906357615436989832794622"
  },
  {
    "file": "core/src/num/dec2flt/float.rs",
    "func": "<f16 as num::dec2flt::float::RawFloat>::to_bits",
    "hash": "16471144091880268427494158880420134065"
  },
  {
    "file": "core/src/num/dec2flt/float.rs",
    "func": "<f32 as num::dec2flt::float::RawFloat>::classify",
    "hash": "154795349396181500551758663392331568488"
  },
  {
    "file": "core/src/num/dec2flt/float.rs",
    "func": "<f32 as num::dec2flt::float::RawFloat>::from_u64",
    "hash": "540502260302221945017091708678793115568"
  },
  {
    "file": "core/src/num/dec2flt/float.rs",
    "func": "<f32 as num::dec2flt::float::RawFloat>::from_u64_bits",
    "hash": "264983264476803818218158928191442999462"
  },
  {
    "file": "core/src/num/dec2flt/float.rs",
    "func": "<f32 as num::dec2flt::float::RawFloat>::pow10_fast_path",
    "hash": "718377699897599555210110373784653536659"
  },
  {
    "file": "core/src/num/dec2flt/float.rs",
    "func": "<f32 as num::dec2flt::float::RawFloat>::to_bits",
    "hash": "111278946214828341879274539483098245666"
  },
  {
    "file": "core/src/num/dec2flt/float.rs",
    "func": "<f64 as num::dec2flt::float::RawFloat>::classify",
    "hash": "124298188645276224878809849554780729789"
  },
  {
    "file": "core/src/num/dec2flt/float.rs",
    "func": "<f64 as num::dec2flt::float::RawFloat>::from_u64",
    "hash": "161083695506013273626755016442242789353"
  },
  {
    "file": "core/src/num/dec2flt/float.rs",
    "func": "<f64 as num::dec2flt::float::RawFloat>::from_u64_bits",
    "hash": "177135054311111939052089438624927004500"
  },
  {
    "file": "core/src/num/dec2flt/float.rs",
    "func": "<f64 as num::dec2flt::float::RawFloat>::pow10_fast_path",
    "hash": "129093558950603046909146890009534377827"
  },
  {
    "file": "core/src/num/dec2flt/float.rs",
    "func": "<f64 as num::dec2flt::float::RawFloat>::to_bits",
    "hash": "141559984418901664399565561463953748867"
  },
  {
    "file": "core/src/num/dec2flt/float.rs",
    "func": "<u16 as num::dec2flt::float::CastInto<i16>>::cast",
    "hash": "107070791905326016341782144737492253144"
  },
  {
    "file": "core/src/num/dec2flt/float.rs",
    "func": "<u32 as num::dec2flt::float::CastInto<i16>>::cast",
    "hash": "7867064729465219112724656563380789063"
  },
  {
    "file": "core/src/num/dec2flt/float.rs",
    "func": "<u64 as num::dec2flt::float::CastInto<i16>>::cast",
    "hash": "568655774299591228617312074412775920003"
  },
  {
    "file": "core/src/num/dec2flt/float.rs",
    "func": "num::dec2flt::float::pow2_to_pow10",
    "hash": "758630140710919939714963712534796146448"
  },
  {
    "file": "core/src/num/dec2flt/lemire.rs",
    "func": "num::dec2flt::lemire::compute_product_approx",
    "hash": "1145472650624645288136110458665947188"
  },
  {
    "file": "core/src/num/dec2flt/lemire.rs",
    "func": "num::dec2flt::lemire::full_multiplication",
    "hash": "513483540861588855618331600497676339826"
  },
  {
    "file": "core/src/num/dec2flt/lemire.rs",
    "func": "num::dec2flt::lemire::power",
    "hash": "66070885836267072549489257426459478846"
  },
  {
    "file": "core/src/num/dec2flt/mod.rs",
    "func": "num::dec2flt::pfe_empty",
    "hash": "72074845473491202958589767618375210389"
  },
  {
    "file": "core/src/num/dec2flt/mod.rs",
    "func": "num::dec2flt::pfe_invalid",
    "hash": "18645182176297238087474238048601179912"
  },
  {
    "file": "core/src/num/dec2flt/parse.rs",
    "func": "num::dec2flt::parse::parse_8digits",
    "hash": "43620899195534984259029846758012349019"
  },
  {
    "file": "core/src/num/error.rs",
    "func": "num::error::TryFromIntError",
    "hash": "178464943414765566858872827968480525208"
  },
  {
    "file": "core/src/num/f128.rs",
    "func": "f128::<impl f128>::abs",
    "hash": "138593577866151870709257876221659179848"
  },
  {
    "file": "core/src/num/f128.rs",
    "func": "f128::<impl f128>::algebraic_add",
    "hash": "447118504585278649912378375322529974165"
  },
  {
    "file": "core/src/num/f128.rs",
    "func": "f128::<impl f128>::algebraic_div",
    "hash": "85418637618309251024041589011417100713"
  },
  {
    "file": "core/src/num/f128.rs",
    "func": "f128::<impl f128>::algebraic_mul",
    "hash": "72829411481963098135197760217988351166"
  },
  {
    "file": "core/src/num/f128.rs",
    "func": "f128::<impl f128>::algebraic_rem",
    "hash": "14245165462803112065127613664094449664"
  },
  {
    "file": "core/src/num/f128.rs",
    "func": "f128::<impl f128>::algebraic_sub",
    "hash": "752617449389850476410882996884468435291"
  },
  {
    "file": "core/src/num/f128.rs",
    "func": "f128::<impl f128>::ceil",
    "hash": "122736727049617779651999378335701938542"
  },
  {
    "file": "core/src/num/f128.rs",
    "func": "f128::<impl f128>::clamp",
    "hash": "146686064160051191466482519231012202733"
  },
  {
    "file": "core/src/num/f128.rs",
    "func": "f128::<impl f128>::classify",
    "hash": "34752466595617164712307041921613624124"
  },
  {
    "file": "core/src/num/f128.rs",
    "func": "f128::<impl f128>::copysign",
    "hash": "1383287458172809670211358675792079980585"
  },
  {
    "file": "core/src/num/f128.rs",
    "func": "f128::<impl f128>::div_euclid",
    "hash": "367221341044340683315125277897166704632"
  },
  {
    "file": "core/src/num/f128.rs",
    "func": "f128::<impl f128>::floor",
    "hash": "73934017180787211052353291248574421990"
  },
  {
    "file": "core/src/num/f128.rs",
    "func": "f128::<impl f128>::fract",
    "hash": "1610833878905966489410142578878592579113"
  },
  {
    "file": "core/src/num/f128.rs",
    "func": "f128::<impl f128>::from_be_bytes",
    "hash": "500084963132778050017287921297835194864"
  },
  {
    "file": "core/src/num/f128.rs",
    "func": "f128::<impl f128>::from_bits",
    "hash": "513066894812535900215710623547755226647"
  },
  {
    "file": "core/src/num/f128.rs",
    "func": "f128::<impl f128>::from_le_bytes",
    "hash": "18067976744389370922552833729809793654"
  },
  {
    "file": "core/src/num/f128.rs",
    "func": "f128::<impl f128>::from_ne_bytes",
    "hash": "1743472023440775945012520649573553536153"
  },
  {
    "file": "core/src/num/f128.rs",
    "func": "f128::<impl f128>::is_finite",
    "hash": "385873668303395517512786136367046801839"
  },
  {
    "file": "core/src/num/f128.rs",
    "func": "f128::<impl f128>::is_infinite",
    "hash": "104744709495731004249216078155535500550"
  },
  {
    "file": "core/src/num/f128.rs",
    "func": "f128::<impl f128>::is_nan",
    "hash": "132878099176373786253594480564535275744"
  },
  {
    "file": "core/src/num/f128.rs",
    "func": "f128::<impl f128>::is_normal",
    "hash": "1498843591845415325810407246492749043161"
  },
  {
    "file": "core/src/num/f128.rs",
    "func": "f128::<impl f128>::is_sign_negative",
    "hash": "5953983228655222625130425058078996821"
  },
  {
    "file": "core/src/num/f128.rs",
    "func": "f128::<impl f128>::is_sign_positive",
    "hash": "1028892964828908688212582798474569714090"
  },
  {
    "file": "core/src/num/f128.rs",
    "func": "f128::<impl f128>::is_subnormal",
    "hash": "1305618011685766058513175773474935124009"
  },
  {
    "file": "core/src/num/f128.rs",
    "func": "f128::<impl f128>::max",
    "hash": "95365303499695721194840397142294546646"
  },
  {
    "file": "core/src/num/f128.rs",
    "func": "f128::<impl f128>::maximum",
    "hash": "134820197465959663209052004451752908480"
  },
  {
    "file": "core/src/num/f128.rs",
    "func": "f128::<impl f128>::midpoint",
    "hash": "171024981345541112835538968023076710836"
  },
  {
    "file": "core/src/num/f128.rs",
    "func": "f128::<impl f128>::min",
    "hash": "1441390011481440905817786562078202224583"
  },
  {
    "file": "core/src/num/f128.rs",
    "func": "f128::<impl f128>::minimum",
    "hash": "1527585572805095243516818906694400735553"
  },
  {
    "file": "core/src/num/f128.rs",
    "func": "f128::<impl f128>::mul_add",
    "hash": "21454350072502222406284798693198854462"
  },
  {
    "file": "core/src/num/f128.rs",
    "func": "f128::<impl f128>::next_down",
    "hash": "234724518994877027614114357614619704142"
  },
  {
    "file": "core/src/num/f128.rs",
    "func": "f128::<impl f128>::next_up",
    "hash": "53740124252827369855467062797436318161"
  },
  {
    "file": "core/src/num/f128.rs",
    "func": "f128::<impl f128>::powi",
    "hash": "383817028587030431818132727732382516310"
  },
  {
    "file": "core/src/num/f128.rs",
    "func": "f128::<impl f128>::recip",
    "hash": "148197070704641754412899721690768565843"
  },
  {
    "file": "core/src/num/f128.rs",
    "func": "f128::<impl f128>::rem_euclid",
    "hash": "745855958262411242510090854916793678825"
  },
  {
    "file": "core/src/num/f128.rs",
    "func": "f128::<impl f128>::round",
    "hash": "97982541854233308314726949700095671711"
  },
  {
    "file": "core/src/num/f128.rs",
    "func": "f128::<impl f128>::round_ties_even",
    "hash": "45189103262041159362746415053293411851"
  },
  {
    "file": "core/src/num/f128.rs",
    "func": "f128::<impl f128>::signum",
    "hash": "958287516117648277315890973912498482647"
  },
  {
    "file": "core/src/num/f128.rs",
    "func": "f128::<impl f128>::sqrt",
    "hash": "1035198030661057916617395823960449161089"
  },
  {
    "file": "core/src/num/f128.rs",
    "func": "f128::<impl f128>::to_be_bytes",
    "hash": "1187259565205674350410999265518448798777"
  },
  {
    "file": "core/src/num/f128.rs",
    "func": "f128::<impl f128>::to_bits",
    "hash": "165775386293870703954395633549113159997"
  },
  {
    "file": "core/src/num/f128.rs",
    "func": "f128::<impl f128>::to_degrees",
    "hash": "511135734290953696115743719406138901282"
  },
  {
    "file": "core/src/num/f128.rs",
    "func": "f128::<impl f128>::to_le_bytes",
    "hash": "6993328869413304953089552310421115279"
  },
  {
    "file": "core/src/num/f128.rs",
    "func": "f128::<impl f128>::to_ne_bytes",
    "hash": "9105975991654452172616777445268232384"
  },
  {
    "file": "core/src/num/f128.rs",
    "func": "f128::<impl f128>::to_radians",
    "hash": "151706862482948340443995146322985178624"
  },
  {
    "file": "core/src/num/f128.rs",
    "func": "f128::<impl f128>::trunc",
    "hash": "474593235045029282412600272847813738119"
  },
  {
    "file": "core/src/num/f16.rs",
    "func": "f16::<impl f16>::abs",
    "hash": "82467565775148730862031372430995910236"
  },
  {
    "file": "core/src/num/f16.rs",
    "func": "f16::<impl f16>::algebraic_add",
    "hash": "1719186531752982543710036389158479707283"
  },
  {
    "file": "core/src/num/f16.rs",
    "func": "f16::<impl f16>::algebraic_div",
    "hash": "1093032972911035897017261665766940447874"
  },
  {
    "file": "core/src/num/f16.rs",
    "func": "f16::<impl f16>::algebraic_mul",
    "hash": "37195833462644796662620331057808157549"
  },
  {
    "file": "core/src/num/f16.rs",
    "func": "f16::<impl f16>::algebraic_rem",
    "hash": "710112091116430960010312787319791672604"
  },
  {
    "file": "core/src/num/f16.rs",
    "func": "f16::<impl f16>::algebraic_sub",
    "hash": "93969747245866580797058805831199167642"
  },
  {
    "file": "core/src/num/f16.rs",
    "func": "f16::<impl f16>::cbrt",
    "hash": "25689845208892128376205905259893828137"
  },
  {
    "file": "core/src/num/f16.rs",
    "func": "f16::<impl f16>::ceil",
    "hash": "336075698106559934318058554752019695771"
  },
  {
    "file": "core/src/num/f16.rs",
    "func": "f16::<impl f16>::clamp",
    "hash": "1767455495344264770111023497046310198030"
  },
  {
    "file": "core/src/num/f16.rs",
    "func": "f16::<impl f16>::classify",
    "hash": "8000943652234019136832957153602333468"
  },
  {
    "file": "core/src/num/f16.rs",
    "func": "f16::<impl f16>::copysign",
    "hash": "108874174590053510907512472740743574003"
  },
  {
    "file": "core/src/num/f16.rs",
    "func": "f16::<impl f16>::div_euclid",
    "hash": "12099241458196904107791722196525330970"
  },
  {
    "file": "core/src/num/f16.rs",
    "func": "f16::<impl f16>::floor",
    "hash": "15565001129289722316849581974161446118"
  },
  {
    "file": "core/src/num/f16.rs",
    "func": "f16::<impl f16>::fract",
    "hash": "818295712779777334117934185490080556635"
  },
  {
    "file": "core/src/num/f16.rs",
    "func": "f16::<impl f16>::from_be_bytes",
    "hash": "125454158304788661885583795814971995222"
  },
  {
    "file": "core/src/num/f16.rs",
    "func": "f16::<impl f16>::from_bits",
    "hash": "722356051014394436815798461825995721703"
  },
  {
    "file": "core/src/num/f16.rs",
    "func": "f16::<impl f16>::from_le_bytes",
    "hash": "764148137432446387417784457467491259790"
  },
  {
    "file": "core/src/num/f16.rs",
    "func": "f16::<impl f16>::from_ne_bytes",
    "hash": "539619389711311304216805113453320577038"
  },
  {
    "file": "core/src/num/f16.rs",
    "func": "f16::<impl f16>::is_finite",
    "hash": "574940258111172578814526268947982639384"
  },
  {
    "file": "core/src/num/f16.rs",
    "func": "f16::<impl f16>::is_infinite",
    "hash": "1832056242981580624615967653935827811355"
  },
  {
    "file": "core/src/num/f16.rs",
    "func": "f16::<impl f16>::is_nan",
    "hash": "325778596882228985815328037091464060945"
  },
  {
    "file": "core/src/num/f16.rs",
    "func": "f16::<impl f16>::is_normal",
    "hash": "9392522490934927840785200810344348882"
  },
  {
    "file": "core/src/num/f16.rs",
    "func": "f16::<impl f16>::is_sign_negative",
    "hash": "1426779404162979833918221456320415694756"
  },
  {
    "file": "core/src/num/f16.rs",
    "func": "f16::<impl f16>::is_sign_positive",
    "hash": "70805516944387764092412218110438222606"
  },
  {
    "file": "core/src/num/f16.rs",
    "func": "f16::<impl f16>::is_subnormal",
    "hash": "1290128832422256772712071006209344350172"
  },
  {
    "file": "core/src/num/f16.rs",
    "func": "f16::<impl f16>::max",
    "hash": "2665226753121189139394052048596317126"
  },
  {
    "file": "core/src/num/f16.rs",
    "func": "f16::<impl f16>::maximum",
    "hash": "34741186404253111575850258838994805659"
  },
  {
    "file": "core/src/num/f16.rs",
    "func": "f16::<impl f16>::midpoint",
    "hash": "148822791421416046424491261916677015989"
  },
  {
    "file": "core/src/num/f16.rs",
    "func": "f16::<impl f16>::min",
    "hash": "1612850333295056511617129570328828804829"
  },
  {
    "file": "core/src/num/f16.rs",
    "func": "f16::<impl f16>::minimum",
    "hash": "17450539641537736743616115040709949869"
  },
  {
    "file": "core/src/num/f16.rs",
    "func": "f16::<impl f16>::mul_add",
    "hash": "1728805213170435905816732554922939884856"
  },
  {
    "file": "core/src/num/f16.rs",
    "func": "f16::<impl f16>::next_down",
    "hash": "539124922727278688916599957773711795157"
  },
  {
    "file": "core/src/num/f16.rs",
    "func": "f16::<impl f16>::next_up",
    "hash": "1811967463822239206511427763840770018119"
  },
  {
    "file": "core/src/num/f16.rs",
    "func": "f16::<impl f16>::powi",
    "hash": "182734727219748077415663525526809793648"
  },
  {
    "file": "core/src/num/f16.rs",
    "func": "f16::<impl f16>::recip",
    "hash": "115660043215288570916837364085466018803"
  },
  {
    "file": "core/src/num/f16.rs",
    "func": "f16::<impl f16>::rem_euclid",
    "hash": "159249098933212364335101737271537340935"
  },
  {
    "file": "core/src/num/f16.rs",
    "func": "f16::<impl f16>::round",
    "hash": "128186024539098806022721169848493998053"
  },
  {
    "file": "core/src/num/f16.rs",
    "func": "f16::<impl f16>::round_ties_even",
    "hash": "93245832934863959196813904842956386563"
  },
  {
    "file": "core/src/num/f16.rs",
    "func": "f16::<impl f16>::signum",
    "hash": "24385429581725819651047640655405819163"
  },
  {
    "file": "core/src/num/f16.rs",
    "func": "f16::<impl f16>::sqrt",
    "hash": "11530699551166059289323912559023544405"
  },
  {
    "file": "core/src/num/f16.rs",
    "func": "f16::<impl f16>::to_be_bytes",
    "hash": "32452056701899670459498431076114911611"
  },
  {
    "file": "core/src/num/f16.rs",
    "func": "f16::<impl f16>::to_bits",
    "hash": "85923289477831052692122619536239009122"
  },
  {
    "file": "core/src/num/f16.rs",
    "func": "f16::<impl f16>::to_degrees",
    "hash": "39495730975686225949808353958516798081"
  },
  {
    "file": "core/src/num/f16.rs",
    "func": "f16::<impl f16>::to_le_bytes",
    "hash": "79824940421561218725933071639876608718"
  },
  {
    "file": "core/src/num/f16.rs",
    "func": "f16::<impl f16>::to_ne_bytes",
    "hash": "90014985686145439168343518481879446303"
  },
  {
    "file": "core/src/num/f16.rs",
    "func": "f16::<impl f16>::to_radians",
    "hash": "4361076937601615684386128663545706384"
  },
  {
    "file": "core/src/num/f16.rs",
    "func": "f16::<impl f16>::trunc",
    "hash": "838360734840352187515531266742340401822"
  },
  {
    "file": "core/src/num/f32.rs",
    "func": "f32::<impl f32>::abs",
    "hash": "1085489109560079462430857907814768808"
  },
  {
    "file": "core/src/num/f32.rs",
    "func": "f32::<impl f32>::algebraic_add",
    "hash": "37262877627808407871295134071806499444"
  },
  {
    "file": "core/src/num/f32.rs",
    "func": "f32::<impl f32>::algebraic_div",
    "hash": "73636896542915344912869938449750424638"
  },
  {
    "file": "core/src/num/f32.rs",
    "func": "f32::<impl f32>::algebraic_mul",
    "hash": "1561241477811885982512978575833371945909"
  },
  {
    "file": "core/src/num/f32.rs",
    "func": "f32::<impl f32>::algebraic_rem",
    "hash": "1049672765436417980316745103790463781703"
  },
  {
    "file": "core/src/num/f32.rs",
    "func": "f32::<impl f32>::algebraic_sub",
    "hash": "620708502322068505612486725656123573484"
  },
  {
    "file": "core/src/num/f32.rs",
    "func": "f32::<impl f32>::clamp",
    "hash": "170358421961265083074330659133745861908"
  },
  {
    "file": "core/src/num/f32.rs",
    "func": "f32::<impl f32>::classify",
    "hash": "18427937391375551140814136183166666164"
  },
  {
    "file": "core/src/num/f32.rs",
    "func": "f32::<impl f32>::copysign",
    "hash": "274990639326455911612273769591367203046"
  },
  {
    "file": "core/src/num/f32.rs",
    "func": "f32::<impl f32>::from_be_bytes",
    "hash": "488781750427757892512044355110885049218"
  },
  {
    "file": "core/src/num/f32.rs",
    "func": "f32::<impl f32>::from_bits",
    "hash": "553099691978938235113267572047344907891"
  },
  {
    "file": "core/src/num/f32.rs",
    "func": "f32::<impl f32>::from_le_bytes",
    "hash": "51560952664713774275595997385706998437"
  },
  {
    "file": "core/src/num/f32.rs",
    "func": "f32::<impl f32>::from_ne_bytes",
    "hash": "128055017641001619267835296215069891062"
  },
  {
    "file": "core/src/num/f32.rs",
    "func": "f32::<impl f32>::is_finite",
    "hash": "74862234970246558731225767007302683254"
  },
  {
    "file": "core/src/num/f32.rs",
    "func": "f32::<impl f32>::is_infinite",
    "hash": "164504003056651945101994807361635942367"
  },
  {
    "file": "core/src/num/f32.rs",
    "func": "f32::<impl f32>::is_nan",
    "hash": "1307608711278318824911131469257051374762"
  },
  {
    "file": "core/src/num/f32.rs",
    "func": "f32::<impl f32>::is_normal",
    "hash": "176733914389274285062837370850247950709"
  },
  {
    "file": "core/src/num/f32.rs",
    "func": "f32::<impl f32>::is_sign_negative",
    "hash": "1398226212482420730614099943058294986463"
  },
  {
    "file": "core/src/num/f32.rs",
    "func": "f32::<impl f32>::is_sign_positive",
    "hash": "531306283664263090015910495965463845957"
  },
  {
    "file": "core/src/num/f32.rs",
    "func": "f32::<impl f32>::is_subnormal",
    "hash": "895537976370591531512805102141808170948"
  },
  {
    "file": "core/src/num/f32.rs",
    "func": "f32::<impl f32>::max",
    "hash": "45325389431599112109396728805354801564"
  },
  {
    "file": "core/src/num/f32.rs",
    "func": "f32::<impl f32>::maximum",
    "hash": "256825972732111050714047292502423460748"
  },
  {
    "file": "core/src/num/f32.rs",
    "func": "f32::<impl f32>::midpoint",
    "hash": "67019335807982047814419131177019406932"
  },
  {
    "file": "core/src/num/f32.rs",
    "func": "f32::<impl f32>::min",
    "hash": "1594211387195603940016630630937389144012"
  },
  {
    "file": "core/src/num/f32.rs",
    "func": "f32::<impl f32>::minimum",
    "hash": "127014315384059071133365046670876509610"
  },
  {
    "file": "core/src/num/f32.rs",
    "func": "f32::<impl f32>::next_down",
    "hash": "77796426982509225873496989225011471254"
  },
  {
    "file": "core/src/num/f32.rs",
    "func": "f32::<impl f32>::next_up",
    "hash": "1173062814630456309215113757149003871736"
  },
  {
    "file": "core/src/num/f32.rs",
    "func": "f32::<impl f32>::recip",
    "hash": "162566759275764444016033311814797646096"
  },
  {
    "file": "core/src/num/f32.rs",
    "func": "f32::<impl f32>::signum",
    "hash": "604258784128465867013838350341028118036"
  },
  {
    "file": "core/src/num/f32.rs",
    "func": "f32::<impl f32>::to_be_bytes",
    "hash": "826769591210009884812328833676382473340"
  },
  {
    "file": "core/src/num/f32.rs",
    "func": "f32::<impl f32>::to_bits",
    "hash": "162361112433299032238584891523845488474"
  },
  {
    "file": "core/src/num/f32.rs",
    "func": "f32::<impl f32>::to_degrees",
    "hash": "3938323976557368156770088272059991010"
  },
  {
    "file": "core/src/num/f32.rs",
    "func": "f32::<impl f32>::to_le_bytes",
    "hash": "167586061327752467145268291870152193495"
  },
  {
    "file": "core/src/num/f32.rs",
    "func": "f32::<impl f32>::to_ne_bytes",
    "hash": "155641716262249211926032106437305832539"
  },
  {
    "file": "core/src/num/f32.rs",
    "func": "f32::<impl f32>::to_radians",
    "hash": "2352982872764981886577717227964347450"
  },
  {
    "file": "core/src/num/f32.rs",
    "func": "f32::math::abs_sub",
    "hash": "121196328344731498658196366298443890491"
  },
  {
    "file": "core/src/num/f32.rs",
    "func": "f32::math::cbrt",
    "hash": "481365052465524224817483754031277486021"
  },
  {
    "file": "core/src/num/f32.rs",
    "func": "f32::math::ceil",
    "hash": "181034642785562605037976658192381876610"
  },
  {
    "file": "core/src/num/f32.rs",
    "func": "f32::math::div_euclid",
    "hash": "47894184038905845945419964065138018216"
  },
  {
    "file": "core/src/num/f32.rs",
    "func": "f32::math::floor",
    "hash": "41147567863670906031107587875558593963"
  },
  {
    "file": "core/src/num/f32.rs",
    "func": "f32::math::fract",
    "hash": "1586184351059393539218360489835216173116"
  },
  {
    "file": "core/src/num/f32.rs",
    "func": "f32::math::mul_add",
    "hash": "770877863263875541610342360076212164164"
  },
  {
    "file": "core/src/num/f32.rs",
    "func": "f32::math::powi",
    "hash": "58757669996828471398393883459155763969"
  },
  {
    "file": "core/src/num/f32.rs",
    "func": "f32::math::rem_euclid",
    "hash": "1672617343526278095218313561774386705684"
  },
  {
    "file": "core/src/num/f32.rs",
    "func": "f32::math::round",
    "hash": "84163577567997390375392557801220749114"
  },
  {
    "file": "core/src/num/f32.rs",
    "func": "f32::math::round_ties_even",
    "hash": "101994095648579636516075309233367102488"
  },
  {
    "file": "core/src/num/f32.rs",
    "func": "f32::math::sqrt",
    "hash": "1210456108993569460910696961762346448682"
  },
  {
    "file": "core/src/num/f32.rs",
    "func": "f32::math::trunc",
    "hash": "623525633313800358912715812805344721782"
  },
  {
    "file": "core/src/num/f64.rs",
    "func": "f64::<impl f64>::abs",
    "hash": "60021163176935339314994458107431605467"
  },
  {
    "file": "core/src/num/f64.rs",
    "func": "f64::<impl f64>::algebraic_add",
    "hash": "1465898378395270257610198340956427210522"
  },
  {
    "file": "core/src/num/f64.rs",
    "func": "f64::<impl f64>::algebraic_div",
    "hash": "149696185705850633156544772770526032279"
  },
  {
    "file": "core/src/num/f64.rs",
    "func": "f64::<impl f64>::algebraic_mul",
    "hash": "1214556311439907389713486444623098168674"
  },
  {
    "file": "core/src/num/f64.rs",
    "func": "f64::<impl f64>::algebraic_rem",
    "hash": "157969681876999181104973110454251905600"
  },
  {
    "file": "core/src/num/f64.rs",
    "func": "f64::<impl f64>::algebraic_sub",
    "hash": "1114157775450086651911794758510810183232"
  },
  {
    "file": "core/src/num/f64.rs",
    "func": "f64::<impl f64>::clamp",
    "hash": "809942952454730988716414868658356471775"
  },
  {
    "file": "core/src/num/f64.rs",
    "func": "f64::<impl f64>::classify",
    "hash": "162537370977980029316478152370412396428"
  },
  {
    "file": "core/src/num/f64.rs",
    "func": "f64::<impl f64>::copysign",
    "hash": "365438631184282439011285899670943732554"
  },
  {
    "file": "core/src/num/f64.rs",
    "func": "f64::<impl f64>::from_be_bytes",
    "hash": "1585602571558100476515711592125973201509"
  },
  {
    "file": "core/src/num/f64.rs",
    "func": "f64::<impl f64>::from_bits",
    "hash": "1617051901138629639615839978579417339483"
  },
  {
    "file": "core/src/num/f64.rs",
    "func": "f64::<impl f64>::from_le_bytes",
    "hash": "1115335264849799963912131432184591686842"
  },
  {
    "file": "core/src/num/f64.rs",
    "func": "f64::<impl f64>::from_ne_bytes",
    "hash": "548884135476440338896667182297217027"
  },
  {
    "file": "core/src/num/f64.rs",
    "func": "f64::<impl f64>::is_finite",
    "hash": "155681767050568610546851726048238771226"
  },
  {
    "file": "core/src/num/f64.rs",
    "func": "f64::<impl f64>::is_infinite",
    "hash": "54161655352067232365592711565939719072"
  },
  {
    "file": "core/src/num/f64.rs",
    "func": "f64::<impl f64>::is_nan",
    "hash": "100642205651013257673627407189684710656"
  },
  {
    "file": "core/src/num/f64.rs",
    "func": "f64::<impl f64>::is_negative",
    "hash": "161378386364387822984771773735213488367"
  },
  {
    "file": "core/src/num/f64.rs",
    "func": "f64::<impl f64>::is_normal",
    "hash": "181980580219519281642906226319735859429"
  },
  {
    "file": "core/src/num/f64.rs",
    "func": "f64::<impl f64>::is_positive",
    "hash": "1217630093281519036912261477851449526402"
  },
  {
    "file": "core/src/num/f64.rs",
    "func": "f64::<impl f64>::is_sign_negative",
    "hash": "34360288244467616574619726772327931304"
  },
  {
    "file": "core/src/num/f64.rs",
    "func": "f64::<impl f64>::is_sign_positive",
    "hash": "655739947985592217914945729043838123632"
  },
  {
    "file": "core/src/num/f64.rs",
    "func": "f64::<impl f64>::is_subnormal",
    "hash": "21062875721390329942688382674551815444"
  },
  {
    "file": "core/src/num/f64.rs",
    "func": "f64::<impl f64>::max",
    "hash": "1392796544063051054918033517579933403806"
  },
  {
    "file": "core/src/num/f64.rs",
    "func": "f64::<impl f64>::maximum",
    "hash": "303962058219057683115925667659007469412"
  },
  {
    "file": "core/src/num/f64.rs",
    "func": "f64::<impl f64>::midpoint",
    "hash": "1648781559502910457010180616284526822153"
  },
  {
    "file": "core/src/num/f64.rs",
    "func": "f64::<impl f64>::min",
    "hash": "702814949207714502813782557618508285366"
  },
  {
    "file": "core/src/num/f64.rs",
    "func": "f64::<impl f64>::minimum",
    "hash": "637089694910156801175275351562364466"
  },
  {
    "file": "core/src/num/f64.rs",
    "func": "f64::<impl f64>::next_down",
    "hash": "181513010101353505059997577004979723522"
  },
  {
    "file": "core/src/num/f64.rs",
    "func": "f64::<impl f64>::next_up",
    "hash": "15642321231260515835041473110300543819"
  },
  {
    "file": "core/src/num/f64.rs",
    "func": "f64::<impl f64>::recip",
    "hash": "121656398270259076462793563458688165162"
  },
  {
    "file": "core/src/num/f64.rs",
    "func": "f64::<impl f64>::signum",
    "hash": "1836119057442934313814493945907791697762"
  },
  {
    "file": "core/src/num/f64.rs",
    "func": "f64::<impl f64>::to_be_bytes",
    "hash": "1729519378011141709710903982331701550399"
  },
  {
    "file": "core/src/num/f64.rs",
    "func": "f64::<impl f64>::to_bits",
    "hash": "85253214614932633916524759824229868238"
  },
  {
    "file": "core/src/num/f64.rs",
    "func": "f64::<impl f64>::to_degrees",
    "hash": "1451349989553351976710805431511842390176"
  },
  {
    "file": "core/src/num/f64.rs",
    "func": "f64::<impl f64>::to_le_bytes",
    "hash": "166860918323926845303813699197650728011"
  },
  {
    "file": "core/src/num/f64.rs",
    "func": "f64::<impl f64>::to_ne_bytes",
    "hash": "161751523649459202988897916322740899720"
  },
  {
    "file": "core/src/num/f64.rs",
    "func": "f64::<impl f64>::to_radians",
    "hash": "1346473505530223641917577653964509469130"
  },
  {
    "file": "core/src/num/f64.rs",
    "func": "f64::math::abs_sub",
    "hash": "1212526426432370254313441399376180871432"
  },
  {
    "file": "core/src/num/f64.rs",
    "func": "f64::math::cbrt",
    "hash": "1052368048766042659411641593037989781246"
  },
  {
    "file": "core/src/num/f64.rs",
    "func": "f64::math::ceil",
    "hash": "58828247350901863231709356070165711421"
  },
  {
    "file": "core/src/num/f64.rs",
    "func": "f64::math::div_euclid",
    "hash": "967726063111021628512663348474997599923"
  },
  {
    "file": "core/src/num/f64.rs",
    "func": "f64::math::floor",
    "hash": "151837913588740677056390801221333888969"
  },
  {
    "file": "core/src/num/f64.rs",
    "func": "f64::math::fract",
    "hash": "100418998316616415618063920654374564754"
  },
  {
    "file": "core/src/num/f64.rs",
    "func": "f64::math::mul_add",
    "hash": "205011051640705883811198615143906100529"
  },
  {
    "file": "core/src/num/f64.rs",
    "func": "f64::math::powi",
    "hash": "46185075348152595665377413454280363444"
  },
  {
    "file": "core/src/num/f64.rs",
    "func": "f64::math::rem_euclid",
    "hash": "1153073825831726987717606795812313094966"
  },
  {
    "file": "core/src/num/f64.rs",
    "func": "f64::math::round",
    "hash": "12303845670789987053550469328047565902"
  },
  {
    "file": "core/src/num/f64.rs",
    "func": "f64::math::round_ties_even",
    "hash": "1701344986814095481812803703223877817511"
  },
  {
    "file": "core/src/num/f64.rs",
    "func": "f64::math::sqrt",
    "hash": "72691867527395098814800163932876261655"
  },
  {
    "file": "core/src/num/f64.rs",
    "func": "f64::math::trunc",
    "hash": "639789307973945731412387404173655386032"
  },
  {
    "file": "core/src/num/flt2dec/decoder.rs",
    "func": "<f16 as num::flt2dec::decoder::DecodableFloat>::min_pos_norm_value",
    "hash": "375425418379114685616447510973446293116"
  },
  {
    "file": "core/src/num/flt2dec/decoder.rs",
    "func": "<f32 as num::flt2dec::decoder::DecodableFloat>::min_pos_norm_value",
    "hash": "183602376003035992122778774284106907808"
  },
  {
    "file": "core/src/num/flt2dec/decoder.rs",
    "func": "<f64 as num::flt2dec::decoder::DecodableFloat>::min_pos_norm_value",
    "hash": "162331121968024766477542139387619839881"
  },
  {
    "file": "core/src/num/flt2dec/estimator.rs",
    "func": "num::flt2dec::estimator::estimate_scaling_factor",
    "hash": "75971664868701940268453419039574487793"
  },
  {
    "file": "core/src/num/flt2dec/mod.rs",
    "func": "num::flt2dec::estimate_max_buf_len",
    "hash": "409339249035935029916275208566778857458"
  },
  {
    "file": "core/src/num/flt2dec/strategy/grisu.rs",
    "func": "num::flt2dec::strategy::grisu::cached_power",
    "hash": "1657977473695841854811276965273939985065"
  },
  {
    "file": "core/src/num/flt2dec/strategy/grisu.rs",
    "func": "num::flt2dec::strategy::grisu::max_pow10_no_more_than",
    "hash": "1455651996402066124810316458983108570535"
  },
  {
    "file": "core/src/num/fmt.rs",
    "func": "num::fmt::Part::<'_>::Num",
    "hash": "32583692860629555071680746838838670439"
  },
  {
    "file": "core/src/num/fmt.rs",
    "func": "num::fmt::Part::<'_>::Zero",
    "hash": "828030814054352683617192702554371443379"
  },
  {
    "file": "core/src/num/int_log10.rs",
    "func": "num::int_log10::i128",
    "hash": "313904936225171519111571997399118731798"
  },
  {
    "file": "core/src/num/int_log10.rs",
    "func": "num::int_log10::i16",
    "hash": "5577838865185192823672601932342020489"
  },
  {
    "file": "core/src/num/int_log10.rs",
    "func": "num::int_log10::i32",
    "hash": "1329675746209376949615542274849979724359"
  },
  {
    "file": "core/src/num/int_log10.rs",
    "func": "num::int_log10::i64",
    "hash": "102773837386279453315694735866026405232"
  },
  {
    "file": "core/src/num/int_log10.rs",
    "func": "num::int_log10::i8",
    "hash": "52937659519552502645116582625466919606"
  },
  {
    "file": "core/src/num/int_log10.rs",
    "func": "num::int_log10::less_than_5",
    "hash": "469731897247902151615947250155763551554"
  },
  {
    "file": "core/src/num/int_log10.rs",
    "func": "num::int_log10::panic_for_nonpositive_argument",
    "hash": "17669494056957649145896081724806188101"
  },
  {
    "file": "core/src/num/int_log10.rs",
    "func": "num::int_log10::u128",
    "hash": "107915975055850254517487488491340420748"
  },
  {
    "file": "core/src/num/int_log10.rs",
    "func": "num::int_log10::u16",
    "hash": "63342002960328698975182430874910564640"
  },
  {
    "file": "core/src/num/int_log10.rs",
    "func": "num::int_log10::u32",
    "hash": "36892355048508255759761394875650662945"
  },
  {
    "file": "core/src/num/int_log10.rs",
    "func": "num::int_log10::u64",
    "hash": "54066239791891785914691895834688847933"
  },
  {
    "file": "core/src/num/int_log10.rs",
    "func": "num::int_log10::u8",
    "hash": "1079233623281845885111376933942968270447"
  },
  {
    "file": "core/src/num/int_log10.rs",
    "func": "num::int_log10::usize",
    "hash": "139696451100528814248779531471282998899"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::abs",
    "hash": "17639863610053471688928186623603699085"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::abs_diff",
    "hash": "27999358172944114278179103010934980827"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::borrowing_sub",
    "hash": "51842488150409756696688872226896160133"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::carrying_add",
    "hash": "29629804649575441105260777819896071974"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::carrying_mul",
    "hash": "120092484093234443324877469936684616209"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::carrying_mul_add",
    "hash": "129067983493344276632072143048947062812"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::cast_unsigned",
    "hash": "87439608376042590522160289031188779959"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::checked_abs",
    "hash": "75705487245822442445106879910446850147"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::checked_add",
    "hash": "1819105165793362297812746747948043559203"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::checked_add_unsigned",
    "hash": "11450866583979562645316440392240766248"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::checked_div",
    "hash": "743736326652084412813928199962968316192"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::checked_div_euclid",
    "hash": "430942155479132597410123747060852936790"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::checked_exact_div",
    "hash": "1600615472275410228414203425262684084414"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::checked_ilog",
    "hash": "11192985811977641438723699587697617381"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::checked_ilog10",
    "hash": "4374565998080921052186761644294596894"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::checked_ilog2",
    "hash": "32127908461953404246409642834526488195"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::checked_isqrt",
    "hash": "93264072261061887784994772464918695654"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::checked_mul",
    "hash": "161113207343963359172338944499646375513"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::checked_neg",
    "hash": "1626204359008077115011432792439487047721"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::checked_next_multiple_of",
    "hash": "1671426125362631258013616215947200894627"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::checked_pow",
    "hash": "183867457113924313002842537841304029448"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::checked_rem",
    "hash": "1289382895316645981813293195099262317432"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::checked_rem_euclid",
    "hash": "124376855525850597289241771627779724360"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::checked_shl",
    "hash": "1115237885673604621715132285764451649229"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::checked_shr",
    "hash": "181353416407469939566004962011862914503"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::checked_sub",
    "hash": "793948033644527110011869509517913745981"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::checked_sub_unsigned",
    "hash": "221930776128344278617094968872513736831"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::count_ones",
    "hash": "100718129373554003132724155442252179248"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::count_zeros",
    "hash": "18478070199322747883977422483055818869"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::div_ceil",
    "hash": "53606297605455836208163528004308609200"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::div_euclid",
    "hash": "133942499458451281205710307371340425632"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::div_floor",
    "hash": "64828021862227996667902554467633830691"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::exact_div",
    "hash": "1414912126395186785213154263857544311323"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::from_be",
    "hash": "163954551242853889096777636689176700977"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::from_be_bytes",
    "hash": "1216816388405048030810262403442685476299"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::from_le",
    "hash": "13178544218505893117206215270242479897"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::from_le_bytes",
    "hash": "60562954294674324911315655398098733913"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::from_ne_bytes",
    "hash": "1100480409173285947814367289333950993608"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::ilog",
    "hash": "899787522725554370915659197313913653127"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::ilog10",
    "hash": "1124043885354980327711566446333783863636"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::ilog2",
    "hash": "1632864865190188188313753865539834449335"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::is_negative",
    "hash": "1205544471173095605113042850009418104186"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::is_positive",
    "hash": "1513036740384993943017182862962050261893"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::isolate_least_significant_one",
    "hash": "1177600152124010507117299681736694022206"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::isolate_most_significant_one",
    "hash": "157635473188124136221422353469547035045"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::isqrt",
    "hash": "111738200429536632375140368020702340051"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::leading_ones",
    "hash": "382841735586188431116652306229028151066"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::leading_zeros",
    "hash": "711520343886179502315047585900503588357"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::max_value",
    "hash": "660757644871776977514356509228062957864"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::min_value",
    "hash": "224934784200263646010396557973424274020"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::next_multiple_of",
    "hash": "1557492179045102446915650437831994001228"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::overflowing_abs",
    "hash": "539964649765323994511613840076888485455"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::overflowing_add",
    "hash": "47324341073704015417109869266419715557"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::overflowing_add_unsigned",
    "hash": "52199826652157626576980555378632930297"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::overflowing_div",
    "hash": "1310941525259036126510416185363413527682"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::overflowing_div_euclid",
    "hash": "868475145186801333910292670102740709721"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::overflowing_mul",
    "hash": "12532135786135712147398952337799135400"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::overflowing_neg",
    "hash": "1376602292251695544912750041736762584540"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::overflowing_pow",
    "hash": "1128080924128702634713380900828519577179"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::overflowing_rem",
    "hash": "293164886266147718212154100005495100132"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::overflowing_rem_euclid",
    "hash": "685698613796019681712165796110730677711"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::overflowing_shl",
    "hash": "144692175405185706962796798721602119175"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::overflowing_shr",
    "hash": "583402534211424556910157221234515729058"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::overflowing_sub",
    "hash": "2136133172215779757281493116734788061"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::overflowing_sub_unsigned",
    "hash": "109132482141688625110559253796560247287"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::pow",
    "hash": "144226374776319920668146828837213841233"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::rem_euclid",
    "hash": "49943703905498860074844919934239095974"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::reverse_bits",
    "hash": "49231402779035369313490150000558812218"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::rotate_left",
    "hash": "1078214077966629850213153307068524023348"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::rotate_right",
    "hash": "1326030675379677481218102837684390723552"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::saturating_abs",
    "hash": "52659379196670571076123756533895524630"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::saturating_add",
    "hash": "1622320684542853728617418393605672546714"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::saturating_add_unsigned",
    "hash": "124167950942308861732401633673163068098"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::saturating_div",
    "hash": "94657421208329441714849700256889915654"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::saturating_mul",
    "hash": "1450987545520054843918245155920810810006"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::saturating_neg",
    "hash": "8028657022195633411738861926038662475"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::saturating_pow",
    "hash": "1724377876971031449212334471792865113830"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::saturating_sub",
    "hash": "32865840948666861714607692604406102222"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::saturating_sub_unsigned",
    "hash": "31701214260539057797957347740445210857"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::signum",
    "hash": "509096326492855626412429754593011944283"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::strict_abs",
    "hash": "441675766464619960115578274977249013485"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::strict_add",
    "hash": "1637261580888340165612295385452653429880"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::strict_add_unsigned",
    "hash": "1055159096367621466817374292023278905477"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::strict_div",
    "hash": "145796559810812526447956698239494894172"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::strict_div_euclid",
    "hash": "1403372058097126171810310258139202695952"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::strict_mul",
    "hash": "557594447103880785111243321687180167307"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::strict_neg",
    "hash": "25987318834670320764319047957288779517"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::strict_pow",
    "hash": "1281000571434766681614984221837431453424"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::strict_rem",
    "hash": "162102830750676530107941009787511408275"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::strict_rem_euclid",
    "hash": "264670534300966448210519877399225575241"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::strict_shl",
    "hash": "1031836322257300508115823589468038282515"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::strict_shr",
    "hash": "154893854469093455943754650374228894829"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::strict_sub",
    "hash": "88042717872656080638443553484193989405"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::strict_sub_unsigned",
    "hash": "6226855326700472436547075245058398454"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::swap_bytes",
    "hash": "565284498346642039511463521918132440907"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::to_be",
    "hash": "607482275163835712314227131957261466402"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::to_be_bytes",
    "hash": "45746798561658755221464797827162734441"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::to_le",
    "hash": "1671244125810870860415357846617608029258"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::to_le_bytes",
    "hash": "751381370837138014117444051843059353895"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::to_ne_bytes",
    "hash": "28458192468543274356164134652125227077"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::trailing_ones",
    "hash": "88041167350558119812005721752955386172"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::trailing_zeros",
    "hash": "9072674506762696166523648099291528676"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::unbounded_shl",
    "hash": "625552155822951788618115265349647990895"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::unbounded_shr",
    "hash": "784118536000521258014130285506267082810"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::unchecked_add",
    "hash": "164651512634922958854833814562466163297"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::unchecked_exact_div",
    "hash": "538424003939243827313948322978858715288"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::unchecked_mul",
    "hash": "140027106366962773442377555510627950162"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::unchecked_neg",
    "hash": "116536221514261860828410552913469771017"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::unchecked_shl",
    "hash": "254836759061812169412837578662739904261"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::unchecked_shr",
    "hash": "48404066339690393675097363362025027550"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::unchecked_sub",
    "hash": "1516022433108685565314209010058744833879"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::unsigned_abs",
    "hash": "817913680894507283113673961558395048225"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::widening_mul",
    "hash": "178119406519284748172678084706593873633"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::wrapping_abs",
    "hash": "1599449521071225084216236682214985058771"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::wrapping_add",
    "hash": "1519213703879326024712034849011809197919"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::wrapping_add_unsigned",
    "hash": "108222261096216111785430148438240175941"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::wrapping_div",
    "hash": "107656180396034860116493343484429492224"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::wrapping_div_euclid",
    "hash": "500403265395577861713862204493622297454"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::wrapping_mul",
    "hash": "800119091907234270111159096460424055317"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::wrapping_neg",
    "hash": "1702892612091635261916638210761761658573"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::wrapping_pow",
    "hash": "1528483999890868931117560041661388031906"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::wrapping_rem",
    "hash": "950702136785323824012757599005556832107"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::wrapping_rem_euclid",
    "hash": "70892821279381981828474420696395792954"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::wrapping_shl",
    "hash": "720481303748036130213678450439550885558"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::wrapping_shr",
    "hash": "165533549869748183616037403074297331360"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::wrapping_sub",
    "hash": "769357639066994004214575624122454346574"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::wrapping_sub_unsigned",
    "hash": "97767871147918632317601360502971609279"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::abs",
    "hash": "1563043468966698584112624969895634797631"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::abs_diff",
    "hash": "104057485114749146175338640487867539588"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::borrowing_sub",
    "hash": "1776340352955503915710123066570700671144"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::carrying_add",
    "hash": "778322855892454575616460396064329058134"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::carrying_mul",
    "hash": "17491280262774106523496003302181738536"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::carrying_mul_add",
    "hash": "386622050523365099215310711224314005010"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::cast_unsigned",
    "hash": "993774922867158015310125312834791565386"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::checked_abs",
    "hash": "43778446233928378035509496851536346387"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::checked_add",
    "hash": "313280463772892499215722162957567594494"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::checked_add_unsigned",
    "hash": "1224479684057622233813626683249018138209"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::checked_div",
    "hash": "22349214395950233907119217318184328887"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::checked_div_euclid",
    "hash": "75067515041174741945318550338788182717"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::checked_exact_div",
    "hash": "47849165742361638936738351475680480092"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::checked_ilog",
    "hash": "23226427820995451511077302381772487154"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::checked_ilog10",
    "hash": "12063805389596343316370408850553309260"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::checked_ilog2",
    "hash": "183477857427608988441226025768274073225"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::checked_isqrt",
    "hash": "145694945950228774229286667403017044874"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::checked_mul",
    "hash": "1567298537353103446418189948877106981326"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::checked_neg",
    "hash": "188040775866121616810791918995524626834"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::checked_next_multiple_of",
    "hash": "144063067006157607499888286032761959072"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::checked_pow",
    "hash": "825890253761569858811932506003169440518"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::checked_rem",
    "hash": "41836436025318354314585857091309581844"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::checked_rem_euclid",
    "hash": "112779164809081874762489044555469373327"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::checked_shl",
    "hash": "156075482958569046617623391542674567930"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::checked_shr",
    "hash": "1667846550273755797915609853542693429518"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::checked_sub",
    "hash": "76901958753147025874955974423372321476"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::checked_sub_unsigned",
    "hash": "84985142819195372928669992951293674347"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::count_ones",
    "hash": "1112003180514011066114827436880823336741"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::count_zeros",
    "hash": "67445507022073926075454395461217288598"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::div_ceil",
    "hash": "935112277248874890716837732239965468327"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::div_euclid",
    "hash": "630203018030769902913574975436330092777"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::div_floor",
    "hash": "24977981142647652095474868969795211793"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::exact_div",
    "hash": "942213547092248593313504727353579907994"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::from_be",
    "hash": "1722838018642786193512523992716026674480"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::from_be_bytes",
    "hash": "18241522926780087329368682445385125987"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::from_le",
    "hash": "179368418031655657343329143800810180554"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::from_le_bytes",
    "hash": "9624775828053054930422574186172289798"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::from_ne_bytes",
    "hash": "1822697043431571525416876958838014933992"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::ilog",
    "hash": "121732141546163487975112738106496847376"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::ilog10",
    "hash": "134586819680349936905882647742212256707"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::ilog2",
    "hash": "115097078966393854356925756933052326611"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::is_negative",
    "hash": "1797688252619773536115131771670367998727"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::is_positive",
    "hash": "24293092052133045774101526623857484732"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::isolate_least_significant_one",
    "hash": "135313716725214258777970039948533563337"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::isolate_most_significant_one",
    "hash": "12081935430734717147292937887867345070"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::isqrt",
    "hash": "1181384647945461117515343632253861760531"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::leading_ones",
    "hash": "464317868233669054413251981563027538574"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::leading_zeros",
    "hash": "163422407786059020633234350829239517399"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::max_value",
    "hash": "63962143033236993653581923478215743956"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::min_value",
    "hash": "312054900173126890810558882197524927399"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::next_multiple_of",
    "hash": "36199043630496805475590743072443881013"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::overflowing_abs",
    "hash": "1541615425779884456615303133968372311689"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::overflowing_add",
    "hash": "1507531712147446619513021789669408929388"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::overflowing_add_unsigned",
    "hash": "1514051972369971013712847611422114901323"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::overflowing_div",
    "hash": "46782298026589338081268872793478543635"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::overflowing_div_euclid",
    "hash": "32448325359757468409828861977669962385"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::overflowing_mul",
    "hash": "56474312323955851898707778271643438569"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::overflowing_neg",
    "hash": "182234027676281640047136982905363206916"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::overflowing_pow",
    "hash": "80480920629525198603526612453731119419"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::overflowing_rem",
    "hash": "84734862995484771058805762636810979175"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::overflowing_rem_euclid",
    "hash": "3882861809587056343735208744830264712"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::overflowing_shl",
    "hash": "1422765434134393730010764883116474033228"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::overflowing_shr",
    "hash": "1441985542340416353213789350121747358922"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::overflowing_sub",
    "hash": "942075972568523790615419074140237909875"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::overflowing_sub_unsigned",
    "hash": "181650691478811506603624006917451046500"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::pow",
    "hash": "17429720863252505556869275317757547926"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::rem_euclid",
    "hash": "129194930508139540969256674261831993678"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::reverse_bits",
    "hash": "47629682395295319064991293795649102356"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::rotate_left",
    "hash": "159339610572668234625353955989822170747"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::rotate_right",
    "hash": "119661158747636499685143487729477806349"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::saturating_abs",
    "hash": "178635044105675251555487258881503420239"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::saturating_add",
    "hash": "940833054769936107512099303915825575497"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::saturating_add_unsigned",
    "hash": "109529756987675381314514590694036249589"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::saturating_div",
    "hash": "1297882758613188446475612129802023776"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::saturating_mul",
    "hash": "79775042543053120322123322094755449365"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::saturating_neg",
    "hash": "576717540613143132512989681364513198494"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::saturating_pow",
    "hash": "417695166133600666717177536954735895551"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::saturating_sub",
    "hash": "148386693977164678905324199146034140891"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::saturating_sub_unsigned",
    "hash": "1339154440864987613811429509037492236301"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::signum",
    "hash": "107035881588453942163838381647874373899"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::strict_abs",
    "hash": "1164820722263397613910480649609088259774"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::strict_add",
    "hash": "899083878277665973014059574420128330023"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::strict_add_unsigned",
    "hash": "171758660074748258098640696548595182392"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::strict_div",
    "hash": "1192078393088251692914534199263939398865"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::strict_div_euclid",
    "hash": "13442524027407649213627869567089996244"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::strict_mul",
    "hash": "128355029742556714112790429388419299165"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::strict_neg",
    "hash": "351600397402023857195598202674059431"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::strict_pow",
    "hash": "52129637471475914287442104387940656893"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::strict_rem",
    "hash": "481396013420760110617927544046010936538"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::strict_rem_euclid",
    "hash": "170006787962626391265983798197943938018"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::strict_shl",
    "hash": "1416531645692053965513159310124673317338"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::strict_shr",
    "hash": "91740258008383923734456375712954093687"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::strict_sub",
    "hash": "1243509897538517217016246174293048451551"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::strict_sub_unsigned",
    "hash": "506532040799221738011157012089202668130"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::swap_bytes",
    "hash": "21385566565923057803445019269556387754"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::to_be",
    "hash": "1693001785714272184812224743874851516808"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::to_be_bytes",
    "hash": "88360687080356818833309538294169183394"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::to_le",
    "hash": "99073007023919495210748673971283506321"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::to_le_bytes",
    "hash": "54033297205161619367854616100551490275"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::to_ne_bytes",
    "hash": "593064095648706102315560051995691257649"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::trailing_ones",
    "hash": "30263528830355916115869826114041266959"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::trailing_zeros",
    "hash": "126060340117080500525908635752907264752"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::unbounded_shl",
    "hash": "1088983194233212798115788108285397382936"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::unbounded_shr",
    "hash": "1492191509230546941017597768732721770071"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::unchecked_add",
    "hash": "960773560502708389810722757406494561340"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::unchecked_exact_div",
    "hash": "99571791365801983594661169303834440669"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::unchecked_mul",
    "hash": "182048094102897627489635334413292024083"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::unchecked_neg",
    "hash": "869152587907532021718409227005109600240"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::unchecked_shl",
    "hash": "49384618966164512027324376458547641386"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::unchecked_shr",
    "hash": "456316362982281569513646653654871845182"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::unchecked_sub",
    "hash": "927673622913904550712764987216740754842"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::unsigned_abs",
    "hash": "279805444279401301914559817621231097640"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::widening_mul",
    "hash": "180965626743812922658100408360653196182"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::wrapping_abs",
    "hash": "1514299462074004957746938536342825673"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::wrapping_add",
    "hash": "1759922801846187205212399701089286180434"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::wrapping_add_unsigned",
    "hash": "344217885731588839215506070801788184062"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::wrapping_div",
    "hash": "67887045181197160932619866903438376851"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::wrapping_div_euclid",
    "hash": "158755897052699119007069439131868708650"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::wrapping_mul",
    "hash": "6457286308984197543930152292283175220"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::wrapping_neg",
    "hash": "1831642939133997202912172367628995853179"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::wrapping_pow",
    "hash": "116350515910328085399664405195182639777"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::wrapping_rem",
    "hash": "36668582124482401713298824036716844480"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::wrapping_rem_euclid",
    "hash": "1053844576226009724615826855879112653400"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::wrapping_shl",
    "hash": "1500437786543876968315128988401126513001"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::wrapping_shr",
    "hash": "1220042537012148434517485962092000098195"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::wrapping_sub",
    "hash": "1346109299577794330213239226645252939906"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::wrapping_sub_unsigned",
    "hash": "867432964642640710211349037198095194968"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::abs",
    "hash": "1278251779077537519511867724839398310395"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::abs_diff",
    "hash": "1570026006040965045539292298443995215"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::borrowing_sub",
    "hash": "188446334231639822917508393130840536342"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::carrying_add",
    "hash": "3766201281932635682064980236383325415"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::carrying_mul",
    "hash": "98131023374163576074646129682920777095"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::carrying_mul_add",
    "hash": "522715679862944270711083295836994512266"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::cast_unsigned",
    "hash": "220899850140646011517102152363631631339"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::checked_abs",
    "hash": "94187868321773005413401552341645017222"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::checked_add",
    "hash": "158449181413561405191424150991880428756"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::checked_add_unsigned",
    "hash": "72507617550376155192346240402720177044"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::checked_div",
    "hash": "95651431430391352086219922569443609235"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::checked_div_euclid",
    "hash": "40595122613337092851016750583886571616"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::checked_exact_div",
    "hash": "162083746273123584582228193611204980496"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::checked_ilog",
    "hash": "111341431065080941488780147646112232347"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::checked_ilog10",
    "hash": "57406774777921591138730300247575979694"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::checked_ilog2",
    "hash": "10631433685122024118700597817850645175"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::checked_isqrt",
    "hash": "223923632830899902511644307091051453804"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::checked_mul",
    "hash": "80731547504196086577274532980176135371"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::checked_neg",
    "hash": "109077519550907831925041875993449853705"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::checked_next_multiple_of",
    "hash": "7649696083060205238184644505172869574"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::checked_pow",
    "hash": "71343129392341116310079903834381474435"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::checked_rem",
    "hash": "155648036949297481318188593825720630727"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::checked_rem_euclid",
    "hash": "678786751184379401213474965273563422723"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::checked_shl",
    "hash": "62710539042473198038959515257290681082"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::checked_shr",
    "hash": "1352849045261509788017030725595986128764"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::checked_sub",
    "hash": "175475885265208677133023977165535798879"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::checked_sub_unsigned",
    "hash": "1502725755308026339611230520909112495065"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::count_ones",
    "hash": "1436304670070991218315882347415993309153"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::count_zeros",
    "hash": "453193783291587043815964726762948264547"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::div_ceil",
    "hash": "141560801219974413987704464561407100739"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::div_euclid",
    "hash": "828466071247785138317053710453710937131"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::div_floor",
    "hash": "1438855932296590521411127010338793633450"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::exact_div",
    "hash": "502123163807797769612254292979703200419"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::from_be",
    "hash": "1132665157378061610418224988149532790623"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::from_be_bytes",
    "hash": "1603230438376254781116668535868481959491"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::from_le",
    "hash": "8185770341931641715392807606716617337"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::from_le_bytes",
    "hash": "629689187920786532213974737330092733361"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::from_ne_bytes",
    "hash": "237254241581609315711343762653257466835"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::ilog",
    "hash": "15711959055198867992853145140609973679"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::ilog10",
    "hash": "441999182016493110114393019649764179439"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::ilog2",
    "hash": "100696393032584953418383117734794218814"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::is_negative",
    "hash": "79307503347131170578315604022567527135"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::is_positive",
    "hash": "9065499484012186738835230803348037073"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::isolate_least_significant_one",
    "hash": "646348623598434946614766396419712552886"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::isolate_most_significant_one",
    "hash": "164779722124710783293356827682657775502"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::isqrt",
    "hash": "726059111643605503317926757815944279559"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::leading_ones",
    "hash": "141609100064747209348382266584718032561"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::leading_zeros",
    "hash": "124895439475603140455280017147565993698"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::max_value",
    "hash": "1745012249253448777811159434294852646865"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::min_value",
    "hash": "1821394458087255081114571945326708841821"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::next_multiple_of",
    "hash": "83344437549122224284827970283428957074"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::overflowing_abs",
    "hash": "1492806714204966113913626788586443499859"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::overflowing_add",
    "hash": "49442208899909774010121042193167740466"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::overflowing_add_unsigned",
    "hash": "571276012330345456510476130521848021997"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::overflowing_div",
    "hash": "44064726120777621878298173115215667560"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::overflowing_div_euclid",
    "hash": "140901124536095578758169436095910325985"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::overflowing_mul",
    "hash": "163374915331993221108660418279293812005"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::overflowing_neg",
    "hash": "542373044793629175511400860208205794534"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::overflowing_pow",
    "hash": "25537219184116382696887637891465534321"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::overflowing_rem",
    "hash": "1424967738352808574115731006555383169777"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::overflowing_rem_euclid",
    "hash": "736384317596521665317402457525896150486"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::overflowing_shl",
    "hash": "906148556471862193714578464257467629257"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::overflowing_shr",
    "hash": "16525864121810861877592309661712272140"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::overflowing_sub",
    "hash": "1311970597515318690218196696652565779854"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::overflowing_sub_unsigned",
    "hash": "720561834979461310810428824308170133450"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::pow",
    "hash": "31870746103277802955656313193370984064"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::rem_euclid",
    "hash": "39174434886231383334682429144756173831"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::reverse_bits",
    "hash": "15668357524216046687380144169631117411"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::rotate_left",
    "hash": "21289409995990635949068728964247928544"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::rotate_right",
    "hash": "145033941717744160056587054131674955880"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::saturating_abs",
    "hash": "170614350896812131414714492120806481181"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::saturating_add",
    "hash": "71557308572101376579485366439342255854"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::saturating_add_unsigned",
    "hash": "147354351907227115366269437039494737296"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::saturating_div",
    "hash": "94046370973119559969058044401855124657"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::saturating_mul",
    "hash": "585685157192269470710711457955128808384"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::saturating_neg",
    "hash": "1215683337149963268315360603482834138993"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::saturating_pow",
    "hash": "76936872627044543845686739991205324367"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::saturating_sub",
    "hash": "1712135246556521489811576456619313858204"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::saturating_sub_unsigned",
    "hash": "1492369541755351284713271041624421438746"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::signum",
    "hash": "84673256141076850377982315912336871884"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::strict_abs",
    "hash": "103027259223758113593579197516072748317"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::strict_add",
    "hash": "8878139190576234810603802064648552517"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::strict_add_unsigned",
    "hash": "404617946125922737315242160402718235834"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::strict_div",
    "hash": "1828229710061843849814334955840974916655"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::strict_div_euclid",
    "hash": "1148210835520135034411838997275783003606"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::strict_mul",
    "hash": "171916092664818025443252680297072754450"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::strict_neg",
    "hash": "9915390304650654461531891233636518108"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::strict_pow",
    "hash": "815925659086226152612470069180700417344"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::strict_rem",
    "hash": "63674577922666002143356696791645853194"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::strict_rem_euclid",
    "hash": "179669903900882267097634527143649233061"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::strict_shl",
    "hash": "120069160948201793081354367464340993310"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::strict_shr",
    "hash": "1543391067940884593813122040866106306642"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::strict_sub",
    "hash": "1362581554276042971811560837810620547126"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::strict_sub_unsigned",
    "hash": "364220675636992378516994988836640006595"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::swap_bytes",
    "hash": "724532000915519580716323573618265717424"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::to_be",
    "hash": "1043133394434264647513145107374807417989"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::to_be_bytes",
    "hash": "1263840552060264114610003945536697108560"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::to_le",
    "hash": "167601405404828194705641892894389546866"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::to_le_bytes",
    "hash": "1367158714977073426310306644162959337457"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::to_ne_bytes",
    "hash": "1121082433338719329910734522987006503137"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::trailing_ones",
    "hash": "6388328512012114093269993527685238549"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::trailing_zeros",
    "hash": "65673841219681962071497517245954559398"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::unbounded_shl",
    "hash": "170222624121119526214074791118233678560"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::unbounded_shr",
    "hash": "86032970142994771683650238154604454016"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::unchecked_add",
    "hash": "126373602070269044259184410232248906247"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::unchecked_exact_div",
    "hash": "70554092302690497089197502903037451156"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::unchecked_mul",
    "hash": "309503779764807906093776826837172793"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::unchecked_neg",
    "hash": "147900101511812348805653440713821241559"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::unchecked_shl",
    "hash": "1468163244248003158716958585415321403779"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::unchecked_shr",
    "hash": "20249185579654572662939370018292389951"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::unchecked_sub",
    "hash": "140075961352233828662849527137972342415"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::unsigned_abs",
    "hash": "1160150031813070275716801291559951969968"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::widening_mul",
    "hash": "1746047002689889887017224106197506251320"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::wrapping_abs",
    "hash": "45465200458951020712268855471874148461"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::wrapping_add",
    "hash": "47001780835025045275641180846124067173"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::wrapping_add_unsigned",
    "hash": "99619433874682043826059597398953111421"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::wrapping_div",
    "hash": "568696608315726751112196433375217659802"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::wrapping_div_euclid",
    "hash": "174208436283002898947822701080154055161"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::wrapping_mul",
    "hash": "848421765321654491914029456799565969429"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::wrapping_neg",
    "hash": "10276831356989197177291225683156882265"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::wrapping_pow",
    "hash": "97818030706313601059864255789569931361"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::wrapping_rem",
    "hash": "101538208326397556551708155777906424278"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::wrapping_rem_euclid",
    "hash": "12938403549463951233821047166848381606"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::wrapping_shl",
    "hash": "83507310992540333010942875898731794418"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::wrapping_shr",
    "hash": "85454097680950499078006857073833743846"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::wrapping_sub",
    "hash": "145583995108105043133401862026582368143"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::wrapping_sub_unsigned",
    "hash": "648908432222571036016470053795373325134"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::abs",
    "hash": "159718882132412110595254958367065702285"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::abs_diff",
    "hash": "73260078744636489971515082210591606761"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::borrowing_sub",
    "hash": "175200265450461447783872805985682725258"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::carrying_add",
    "hash": "932633820084603242316668607745885647074"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::carrying_mul",
    "hash": "1832910416191850174412325639452600805684"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::carrying_mul_add",
    "hash": "17875362306338716116629263909321748501"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::cast_unsigned",
    "hash": "1000209503694348544210136786096698348571"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::checked_abs",
    "hash": "299397498318987638311213972633651392698"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::checked_add",
    "hash": "541057731170883542411987483222965508118"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::checked_add_unsigned",
    "hash": "122645076853720329783648078560006955667"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::checked_div",
    "hash": "40138551217777830718037469148634652915"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::checked_div_euclid",
    "hash": "121316819243844520977672321399661788479"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::checked_exact_div",
    "hash": "95587839844792114144853959964523597505"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::checked_ilog",
    "hash": "50083037081779717869898564504932413985"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::checked_ilog10",
    "hash": "75022146173174654687212870469072799310"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::checked_ilog2",
    "hash": "1164885950842213052214447027784262029066"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::checked_isqrt",
    "hash": "9895438359971629695261309415311287153"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::checked_mul",
    "hash": "24883982778550869585895442502510468716"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::checked_neg",
    "hash": "1610352579990140717011900696285704400536"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::checked_next_multiple_of",
    "hash": "101305066621719650915726876728821489377"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::checked_pow",
    "hash": "627315317368304251416966466078436226328"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::checked_rem",
    "hash": "982647048947425387717413870150706647057"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::checked_rem_euclid",
    "hash": "825795469811275446914622682024351283840"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::checked_shl",
    "hash": "52638328840912035169582029725370589649"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::checked_shr",
    "hash": "154159420895513402702310853664447228257"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::checked_sub",
    "hash": "140483581845458623943241238277603798666"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::checked_sub_unsigned",
    "hash": "1804094028897544016617763676643453940293"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::count_ones",
    "hash": "3856565225135891394126120326690490616"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::count_zeros",
    "hash": "76336753271884242954667522173143997850"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::div_ceil",
    "hash": "502320536365116395910714237479400096107"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::div_euclid",
    "hash": "102906835047619933529361023859906796060"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::div_floor",
    "hash": "128958598816701374718179976096313563337"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::exact_div",
    "hash": "49837020415424134310768048943599655365"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::from_be",
    "hash": "94674376756112825515976766279202813583"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::from_be_bytes",
    "hash": "8024560683349553354657570454774916529"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::from_le",
    "hash": "183750076749944696796296973357621436053"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::from_le_bytes",
    "hash": "563904426185852686617431645469608667903"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::from_ne_bytes",
    "hash": "1164909433261587452618371012091779482651"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::ilog",
    "hash": "1760599953014127942812697859780900816130"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::ilog10",
    "hash": "1711823394032349330017833937383333261258"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::ilog2",
    "hash": "98666950490482808953065055264539861189"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::is_negative",
    "hash": "997609761286523639711094259414313152485"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::is_positive",
    "hash": "1327101144882545440911155999620890993519"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::isolate_least_significant_one",
    "hash": "5431623379604884180593809904658997541"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::isolate_most_significant_one",
    "hash": "122456403869213640045157434532898724350"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::isqrt",
    "hash": "578131777276944023115714855219042988839"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::leading_ones",
    "hash": "37848001960482770373406708562173447759"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::leading_zeros",
    "hash": "17618338956578957286250464944022671542"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::max_value",
    "hash": "16517567150033943693561012853775892075"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::min_value",
    "hash": "10009042084817032902136410530584310796"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::next_multiple_of",
    "hash": "36355647134647386131176106152619307595"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::overflowing_abs",
    "hash": "31868869996294537339959048604937818222"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::overflowing_add",
    "hash": "1278802824571525735516082937018370648507"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::overflowing_add_unsigned",
    "hash": "1312112464126181199910117272011389797425"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::overflowing_div",
    "hash": "27873913664140387576428917178239156809"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::overflowing_div_euclid",
    "hash": "89456352137312981614608536293123348946"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::overflowing_mul",
    "hash": "102984800573408065696498308131616940199"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::overflowing_neg",
    "hash": "67062245049002559512859060305019503929"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::overflowing_pow",
    "hash": "98819223683403038614293927818173145311"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::overflowing_rem",
    "hash": "1540289801091682012711653860632870277848"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::overflowing_rem_euclid",
    "hash": "130304595299632763986149172905756138947"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::overflowing_shl",
    "hash": "1430528396323863950611471584788835019931"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::overflowing_shr",
    "hash": "847630284390626845914734259446211925655"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::overflowing_sub",
    "hash": "23602374300165607828568580071116145419"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::overflowing_sub_unsigned",
    "hash": "1321059546930858153410680798465223360027"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::pow",
    "hash": "141899362625824189615098021986125972534"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::rem_euclid",
    "hash": "62831941836574886357670245509750378141"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::reverse_bits",
    "hash": "1173136908394231740614265035840319126788"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::rotate_left",
    "hash": "1778769599422706986413025568488097411028"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::rotate_right",
    "hash": "670289383368955096913675659653591540723"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::saturating_abs",
    "hash": "173265860186361809745699236742824214421"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::saturating_add",
    "hash": "1518552129384393240211037173448261283819"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::saturating_add_unsigned",
    "hash": "58426075293833178776448595379673382703"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::saturating_div",
    "hash": "88395078120917490082889126320089953966"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::saturating_mul",
    "hash": "64647012981540882013445266452892382443"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::saturating_neg",
    "hash": "784287876721731062912117940214967645809"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::saturating_pow",
    "hash": "40501648789168432113003673006145100110"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::saturating_sub",
    "hash": "8354867044969282270192883900714296470"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::saturating_sub_unsigned",
    "hash": "302510919143507050211468559908508789625"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::signum",
    "hash": "45443750944318105297229968981592459575"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::strict_abs",
    "hash": "584098325726701737215403537843733603407"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::strict_add",
    "hash": "12657309261360004975951908150304189337"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::strict_add_unsigned",
    "hash": "107695044060705308303761091169702461157"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::strict_div",
    "hash": "180118337250881797532735501397693914827"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::strict_div_euclid",
    "hash": "59905036954785898688268571996352973893"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::strict_mul",
    "hash": "128302330182296048184180017391182973874"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::strict_neg",
    "hash": "558853937613010665414493844910992004396"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::strict_pow",
    "hash": "1824785158643420532311954119448109104356"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::strict_rem",
    "hash": "63846355243021436105612522122089510071"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::strict_rem_euclid",
    "hash": "37123733444638333171288410652951560378"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::strict_shl",
    "hash": "345929626154317840715068760193746957333"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::strict_shr",
    "hash": "13854729371765717555640078565662499251"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::strict_sub",
    "hash": "40766318858825773716894480482951461222"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::strict_sub_unsigned",
    "hash": "56868109062847714582768842238835709628"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::swap_bytes",
    "hash": "161228866365215594601752488136269137970"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::to_be",
    "hash": "1745484061902302388213151908348164100491"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::to_be_bytes",
    "hash": "1638073932320234464210597345228435583398"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::to_le",
    "hash": "68548892881584149281045855956487253180"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::to_le_bytes",
    "hash": "1076936939896512532915579149717915699622"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::to_ne_bytes",
    "hash": "143653668810370148592190300503557525897"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::trailing_ones",
    "hash": "619699076727078946517378473837865877753"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::trailing_zeros",
    "hash": "168223931506168567345033879123415613778"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::unbounded_shl",
    "hash": "129916843346177671366785304757901449016"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::unbounded_shr",
    "hash": "105436312657521041361987056452720992130"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::unchecked_add",
    "hash": "1182911287519288630618165715405017173240"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::unchecked_exact_div",
    "hash": "1016580440085539374815271098332547753833"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::unchecked_mul",
    "hash": "148764254203496306545262693095245362709"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::unchecked_neg",
    "hash": "46150196546311209678119934235702862752"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::unchecked_shl",
    "hash": "1626183471356531805010833348447125699965"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::unchecked_shr",
    "hash": "1818539828125502733313617005951408549277"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::unchecked_sub",
    "hash": "968720737852438207911179428392404707522"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::unsigned_abs",
    "hash": "1449351501677750294814068419321196133953"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::widening_mul",
    "hash": "145897807269276311208968710654743214472"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::wrapping_abs",
    "hash": "1607989834655837120210598710039148371757"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::wrapping_add",
    "hash": "132801403695576052007630104006175062862"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::wrapping_add_unsigned",
    "hash": "1250521498108425974816506759180087330959"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::wrapping_div",
    "hash": "32655176051906476649678231286289702554"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::wrapping_div_euclid",
    "hash": "162145897662243874213320134181620247160"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::wrapping_mul",
    "hash": "1354598062835327185816267424106635392523"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::wrapping_neg",
    "hash": "1370974976905505993615242734448870530238"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::wrapping_pow",
    "hash": "30096496893107976807330517464638492228"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::wrapping_rem",
    "hash": "169756964333797848775276199103779968093"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::wrapping_rem_euclid",
    "hash": "133187168328777197516245532869291410502"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::wrapping_shl",
    "hash": "594564661302977073515882014541374303419"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::wrapping_shr",
    "hash": "53665779225608058143723494113594929259"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::wrapping_sub",
    "hash": "92043338547542285213004847153764972396"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::wrapping_sub_unsigned",
    "hash": "105285474004645608679398760262138886276"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::abs",
    "hash": "115707426321754279916337448366419044045"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::abs_diff",
    "hash": "78191716629377726713197818226969023148"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::borrowing_sub",
    "hash": "736331228637309936812892168681386108507"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::carrying_add",
    "hash": "181122661210135682104897222893303272221"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::carrying_mul",
    "hash": "160081038332419501235191624849736259054"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::carrying_mul_add",
    "hash": "170254558813083654047749235752262331361"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::cast_unsigned",
    "hash": "90433533642601374197713157990183576612"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::checked_abs",
    "hash": "1375377228870569250017181208842367681269"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::checked_add",
    "hash": "55437864283997130525290213251785829081"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::checked_add_unsigned",
    "hash": "34854958184745896227114127721728386345"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::checked_div",
    "hash": "133654383431809613783144682806005721707"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::checked_div_euclid",
    "hash": "144176043148047990377259964769185040370"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::checked_exact_div",
    "hash": "1439600889249061311811888426405450862233"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::checked_ilog",
    "hash": "876693909005016883813651905041253107842"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::checked_ilog10",
    "hash": "1598413927157013960418209753199642557056"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::checked_ilog2",
    "hash": "5869990106155150663482048938231557628"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::checked_isqrt",
    "hash": "2270097691040986062288217819974345369"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::checked_mul",
    "hash": "3732847027464893713631125486321117411"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::checked_neg",
    "hash": "110850232098275323825254327172505254654"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::checked_next_multiple_of",
    "hash": "89239136590233601138004098418234143203"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::checked_pow",
    "hash": "9481954889634190328343006994182859610"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::checked_rem",
    "hash": "140571024935075550285491417971346995131"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::checked_rem_euclid",
    "hash": "46805754554823029236932528373664576833"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::checked_shl",
    "hash": "71004702226881866551561452578094204233"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::checked_shr",
    "hash": "52958974522431526711182998741778083009"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::checked_sub",
    "hash": "474883547691872444716131290265871971552"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::checked_sub_unsigned",
    "hash": "171955232906949031432158586814262667281"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::count_ones",
    "hash": "698050795917525557411664814759970673756"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::count_zeros",
    "hash": "77488344012867634628745666269462906330"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::div_ceil",
    "hash": "449860601080406150214623465285574763347"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::div_euclid",
    "hash": "41091528531959638596061275943543789484"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::div_floor",
    "hash": "72179794346702808966792601746024301424"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::exact_div",
    "hash": "1018286982089684751012101138358343764785"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::from_be",
    "hash": "80277909727666965934752649965193507232"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::from_be_bytes",
    "hash": "19245338451450129839768003815904451678"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::from_le",
    "hash": "136644620461913673666590974870564773833"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::from_le_bytes",
    "hash": "108889048584510931910735358045748517845"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::from_ne_bytes",
    "hash": "557767840722888637315694885099303561205"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::ilog",
    "hash": "1613079798202639553411911631170808087516"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::ilog10",
    "hash": "57641934341804007663464199822141994013"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::ilog2",
    "hash": "27408644607235784301069507868058372379"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::is_negative",
    "hash": "232302360962373038410987488720574146679"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::is_positive",
    "hash": "153106287603906656485957743842226965528"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::isolate_least_significant_one",
    "hash": "75245439931739888547321816451553308016"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::isolate_most_significant_one",
    "hash": "576826190418639766812007586436720850422"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::isqrt",
    "hash": "75377710729961628348663749710064699816"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::leading_ones",
    "hash": "13278343901151163491950689787703312857"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::leading_zeros",
    "hash": "10920896062980481622837535288333209680"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::max_value",
    "hash": "10862727681951159547484433920218626953"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::min_value",
    "hash": "1302689083481434701613132945893524241209"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::next_multiple_of",
    "hash": "71375347052261933452552927223246694567"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::overflowing_abs",
    "hash": "67734938298778097059833477772718215793"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::overflowing_add",
    "hash": "151815060531445846803530289828923336292"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::overflowing_add_unsigned",
    "hash": "841395727752520032715593230141814415501"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::overflowing_div",
    "hash": "989745548706406300214470034794287467957"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::overflowing_div_euclid",
    "hash": "169445805261480983464045313481888890614"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::overflowing_mul",
    "hash": "41969636245051235474420490048321019734"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::overflowing_neg",
    "hash": "53941692570130031564435641679549618370"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::overflowing_pow",
    "hash": "140923081925377083674637617584096954863"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::overflowing_rem",
    "hash": "47773299325351578210578592161630343602"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::overflowing_rem_euclid",
    "hash": "1721529440696729366813969134310666939918"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::overflowing_shl",
    "hash": "184878496327815739212202235987205376776"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::overflowing_shr",
    "hash": "47353129852970056046915705160235180628"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::overflowing_sub",
    "hash": "4630340726512669156878430125770402386"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::overflowing_sub_unsigned",
    "hash": "135788253950114096274850290082526264995"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::pow",
    "hash": "1582427436985364546316184932418095393771"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::rem_euclid",
    "hash": "77111442111867169614079216643905799692"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::reverse_bits",
    "hash": "166266308545768063995078333134998378268"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::rotate_left",
    "hash": "331824330480412401711285989522909620346"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::rotate_right",
    "hash": "110790900707107131327375779947893242563"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::saturating_abs",
    "hash": "1022455805103323007011596108552243040054"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::saturating_add",
    "hash": "1390278631562787987211105231771179392855"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::saturating_add_unsigned",
    "hash": "120793689103390962604835306410466812450"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::saturating_div",
    "hash": "1115913874226510602917806849232149610105"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::saturating_mul",
    "hash": "1476207271391137354816534463332266152328"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::saturating_neg",
    "hash": "169796911935973044372281971117125510907"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::saturating_pow",
    "hash": "119399032671556411246532668834332012745"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::saturating_sub",
    "hash": "110724649451633390153339247052503870494"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::saturating_sub_unsigned",
    "hash": "780808008275528264313126551120365080902"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::signum",
    "hash": "1565809880484530613116982441564865374332"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::strict_abs",
    "hash": "1164422084216871913416051631197876408631"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::strict_add",
    "hash": "1840665546356101630215950954783827385363"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::strict_add_unsigned",
    "hash": "132485884471295163492134853275686273179"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::strict_div",
    "hash": "85478530014757303871190872184647611093"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::strict_div_euclid",
    "hash": "64627060308403212621227790676736509214"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::strict_mul",
    "hash": "116661811943555804739978123765460566573"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::strict_neg",
    "hash": "1245704494736408521713860133777648694894"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::strict_pow",
    "hash": "18012567201889163030374877506668462974"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::strict_rem",
    "hash": "1076966942486386365682689261451351461"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::strict_rem_euclid",
    "hash": "178214992097218788029411777616080600104"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::strict_shl",
    "hash": "366990791654625872612116219783449191583"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::strict_shr",
    "hash": "124901785974245277809745317268513802959"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::strict_sub",
    "hash": "21325779297263111881870703074907352957"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::strict_sub_unsigned",
    "hash": "99245411776754129751317151636011683706"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::swap_bytes",
    "hash": "94440250114446874507921630633482931821"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::to_be",
    "hash": "121172382591104464015528078370965098321"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::to_be_bytes",
    "hash": "724763998345395287813188689751569978793"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::to_le",
    "hash": "125084472121618312575407399641650804183"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::to_le_bytes",
    "hash": "1507924419809773868210174411319147395331"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::to_ne_bytes",
    "hash": "112291647738709392284574097302192445907"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::trailing_ones",
    "hash": "173054032101112963981788617290537685505"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::trailing_zeros",
    "hash": "19697024389805864217196150458750746796"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::unbounded_shl",
    "hash": "74695111079136552084625419199438246628"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::unbounded_shr",
    "hash": "40534685274873343264888939614655845086"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::unchecked_add",
    "hash": "108366827637006193699539438985337399998"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::unchecked_exact_div",
    "hash": "122744596151174166128107705480844957916"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::unchecked_mul",
    "hash": "119277505726805451005997195097066307375"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::unchecked_neg",
    "hash": "11657557447330393464828751842183170369"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::unchecked_shl",
    "hash": "176427111734512602962612737312294740965"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::unchecked_shr",
    "hash": "39442533020585541749319328856973293871"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::unchecked_sub",
    "hash": "578033285681812703312049833542315348120"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::unsigned_abs",
    "hash": "614347236284146485813376292329309210068"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::widening_mul",
    "hash": "149695663920031689811370347216873710784"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::wrapping_abs",
    "hash": "597058871473172651217139945185443598895"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::wrapping_add",
    "hash": "1802656749555534832617688039017629354802"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::wrapping_add_unsigned",
    "hash": "485581444574361475715634356271382815523"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::wrapping_div",
    "hash": "14931001018294601785436651486209787301"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::wrapping_div_euclid",
    "hash": "507965781708239022713484956789130218976"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::wrapping_mul",
    "hash": "787459152141788418614793024968632650164"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::wrapping_neg",
    "hash": "69908383052567921907277830357774347173"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::wrapping_pow",
    "hash": "80648397057004604959631500084039671974"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::wrapping_rem",
    "hash": "98032234781321971618181597243210406710"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::wrapping_rem_euclid",
    "hash": "89352733771714417138395453151949457981"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::wrapping_shl",
    "hash": "822650124542973546263631092573493173"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::wrapping_shr",
    "hash": "19150520647122567315331140406825603700"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::wrapping_sub",
    "hash": "1612906804519104002212784328345251810646"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::wrapping_sub_unsigned",
    "hash": "65926738386930511617332483499356544496"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::abs",
    "hash": "1274084520413105903010832146511264761326"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::abs_diff",
    "hash": "1076227040506700455417213326216658340744"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::borrowing_sub",
    "hash": "75116151490225918759186011067684171912"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::carrying_add",
    "hash": "179523951070645278235887568131349272859"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::carrying_mul",
    "hash": "1374381219180253043011708133756742191505"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::carrying_mul_add",
    "hash": "89207974616551983552137306076481746755"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::cast_unsigned",
    "hash": "828343575162715207815231548894237328558"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::checked_abs",
    "hash": "955612798843902338217986568299859992525"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::checked_add",
    "hash": "314632583740778007011755143459762475043"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::checked_add_unsigned",
    "hash": "746770812933737349618008431919985107749"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::checked_div",
    "hash": "1598740380148549032416434835747474421032"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::checked_div_euclid",
    "hash": "135249255518587250667194810035450461792"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::checked_exact_div",
    "hash": "1500658750886569312115899072908720833866"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::checked_ilog",
    "hash": "1209673448034442152911614778294018405765"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::checked_ilog10",
    "hash": "1690453579965278735111803340147149224098"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::checked_ilog2",
    "hash": "1379515558949462262613056932159623785250"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::checked_isqrt",
    "hash": "14272460725185281872326245182912875667"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::checked_mul",
    "hash": "5799168648008231539489194599709139249"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::checked_neg",
    "hash": "113014731732428781869506094592097682801"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::checked_next_multiple_of",
    "hash": "111746159000197796286092593168024921966"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::checked_pow",
    "hash": "1336767726235977080211501606871119561141"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::checked_rem",
    "hash": "792513514600225264217286758843890301567"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::checked_rem_euclid",
    "hash": "1019088728388001331417546290189354005796"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::checked_shl",
    "hash": "105191727742527587877475431075477673720"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::checked_shr",
    "hash": "32284163138395651898164991918642323852"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::checked_sub",
    "hash": "1199214304915474887310269779661221513108"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::checked_sub_unsigned",
    "hash": "79063398089454651513566206996520199135"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::count_ones",
    "hash": "38719996961332532547399486845944399481"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::count_zeros",
    "hash": "56796213044752754045444590990550231916"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::div_ceil",
    "hash": "217535328889667257612334960700448686389"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::div_euclid",
    "hash": "177898041251193638149231692207738673056"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::div_floor",
    "hash": "162520896611392449696958476026872655749"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::exact_div",
    "hash": "93756300285671246716648215798417527235"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::from_be",
    "hash": "353949184383825417810003278756791672067"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::from_be_bytes",
    "hash": "1843967708190197869416206460378390152023"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::from_le",
    "hash": "657091654013985083110223744125030953483"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::from_le_bytes",
    "hash": "40769401365519433816487767047060377732"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::from_ne_bytes",
    "hash": "134010144067903692185276990478988108404"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::ilog",
    "hash": "23744996370654615419643150036117888514"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::ilog10",
    "hash": "6058293699355183511151430380272214196"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::ilog2",
    "hash": "156845994417418309878201310417050079046"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::is_negative",
    "hash": "1818179089259360182610550036802524904691"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::is_positive",
    "hash": "97081865189193367847539131250144391204"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::isolate_least_significant_one",
    "hash": "1367068472677633820117501073110648711417"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::isolate_most_significant_one",
    "hash": "168812575453091815235406368368974256840"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::isqrt",
    "hash": "801099760000700976114739042702114116920"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::leading_ones",
    "hash": "384160835915400480410306588499461028748"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::leading_zeros",
    "hash": "1668222353953886974915324416603384966997"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::max_value",
    "hash": "84595321312016810952299932800024309715"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::min_value",
    "hash": "1062032790462676735117824231756950161673"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::next_multiple_of",
    "hash": "1067122925896125605313961458560480371547"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::overflowing_abs",
    "hash": "8930296385749524012672406619771828426"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::overflowing_add",
    "hash": "1730024938718083812510223650284150401927"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::overflowing_add_unsigned",
    "hash": "5032374587141674282468759625735441506"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::overflowing_div",
    "hash": "21623785031344865937854493579270535291"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::overflowing_div_euclid",
    "hash": "432417242573459845514014771471339646179"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::overflowing_mul",
    "hash": "167551103293259876125260225730930841946"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::overflowing_neg",
    "hash": "6221741227072437069508312353437850718"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::overflowing_pow",
    "hash": "870761994652584651913826047686268096994"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::overflowing_rem",
    "hash": "1056877777520775007817799163419747848001"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::overflowing_rem_euclid",
    "hash": "1315268138018582079411457553012703810708"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::overflowing_shl",
    "hash": "4439850999243213015402432571536506075"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::overflowing_shr",
    "hash": "87583515146317070411213981036534410862"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::overflowing_sub",
    "hash": "1433771187659999219714389643021304534157"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::overflowing_sub_unsigned",
    "hash": "157342256076316764583537923645304165697"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::pow",
    "hash": "5558104025385713587687175754131963444"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::rem_euclid",
    "hash": "125365662406964520561977291588535573480"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::reverse_bits",
    "hash": "285211644963295492717929779653839673124"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::rotate_left",
    "hash": "4166160477317263397230709217345209267"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::rotate_right",
    "hash": "165059538252023240515032654322236203889"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::saturating_abs",
    "hash": "415676854545765173913177332375451372494"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::saturating_add",
    "hash": "624418827955903273914081625165417604869"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::saturating_add_unsigned",
    "hash": "1292246239030410060816173428153164329806"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::saturating_div",
    "hash": "3355084624649605012132672456345704262"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::saturating_mul",
    "hash": "1640425919204274032510021140703184901577"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::saturating_neg",
    "hash": "21574328336788501262281817178222803306"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::saturating_pow",
    "hash": "1193047601974881901410682231106141417437"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::saturating_sub",
    "hash": "703255300117250795014325649727560800682"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::saturating_sub_unsigned",
    "hash": "861975359761210705413705145503773553606"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::signum",
    "hash": "39407983172852508263814252757382252273"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::strict_abs",
    "hash": "341577806243195486616858201183604218594"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::strict_add",
    "hash": "93536527169767419825503258772712325014"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::strict_add_unsigned",
    "hash": "11891989015424321218183966817820706975"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::strict_div",
    "hash": "98637906449266129822081931254712963511"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::strict_div_euclid",
    "hash": "415944807578062897812842063942495294612"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::strict_mul",
    "hash": "485440717990410014616723938345065131440"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::strict_neg",
    "hash": "119250591312739546111677048930551154630"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::strict_pow",
    "hash": "880495478421353723010715609323935498691"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::strict_rem",
    "hash": "134072064355794100668953761024904614761"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::strict_rem_euclid",
    "hash": "120228369607976690429657527977485346110"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::strict_shl",
    "hash": "176548795241318013855477706883949380353"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::strict_shr",
    "hash": "177295487748363107653139941883458328365"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::strict_sub",
    "hash": "96131268735796863372300771856148238960"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::strict_sub_unsigned",
    "hash": "749889267056286202317823443928582652415"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::swap_bytes",
    "hash": "1474869548160444811114000507899131852798"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::to_be",
    "hash": "407597033585817335415584444044061647555"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::to_be_bytes",
    "hash": "115387406987982343906122346982670986936"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::to_le",
    "hash": "15605060253703946515215768021209278167"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::to_le_bytes",
    "hash": "419522945586405199412282873552501512770"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::to_ne_bytes",
    "hash": "968967366809316301312262897795172306325"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::trailing_ones",
    "hash": "92674877488684961383958922615406011139"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::trailing_zeros",
    "hash": "106163552351731274054473426334204652986"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::unbounded_shl",
    "hash": "960449166498241402815045797273973922088"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::unbounded_shr",
    "hash": "14549220519485071321707360518492218613"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::unchecked_add",
    "hash": "17483368848935337524795934232794148656"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::unchecked_exact_div",
    "hash": "115831017832854019383986049131834197033"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::unchecked_mul",
    "hash": "26164794358626337495607581875755762373"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::unchecked_neg",
    "hash": "841528230883583910260472553997390736"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::unchecked_shl",
    "hash": "154520902026814280805663508342388304001"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::unchecked_shr",
    "hash": "152581953181677498969482492005273078796"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::unchecked_sub",
    "hash": "1198876667138871274516757737621465267821"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::unsigned_abs",
    "hash": "12929295293090980355755803199225129262"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::widening_mul",
    "hash": "1088663150935582197013700683835280216260"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::wrapping_abs",
    "hash": "503183270364844732515573062529353936580"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::wrapping_add",
    "hash": "36485841837994641229424663243435014785"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::wrapping_add_unsigned",
    "hash": "838751374168318655115822898103851963828"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::wrapping_div",
    "hash": "93031614039936392037809293261263214293"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::wrapping_div_euclid",
    "hash": "152403586204411787326626924272101504567"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::wrapping_mul",
    "hash": "131760985391976313048353590468480013664"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::wrapping_neg",
    "hash": "25602688744340186171314083485517995425"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::wrapping_pow",
    "hash": "110415713474333479062936277521102343483"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::wrapping_rem",
    "hash": "982506149425358755316781807351328709426"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::wrapping_rem_euclid",
    "hash": "741731189408745552211626882721171421030"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::wrapping_shl",
    "hash": "124993696628924381644369461618014066000"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::wrapping_shr",
    "hash": "2873885609639224307118390236028126508"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::wrapping_sub",
    "hash": "1660513410314982984011153915826543479765"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::wrapping_sub_unsigned",
    "hash": "1755302901194867193310922652481660097735"
  },
  {
    "file": "core/src/num/int_sqrt.rs",
    "func": "num::int_sqrt::i128",
    "hash": "30186263567455266859669751978172414247"
  },
  {
    "file": "core/src/num/int_sqrt.rs",
    "func": "num::int_sqrt::i16",
    "hash": "20015277212395418118305018871093583819"
  },
  {
    "file": "core/src/num/int_sqrt.rs",
    "func": "num::int_sqrt::i32",
    "hash": "108563861433736130182782475473091949282"
  },
  {
    "file": "core/src/num/int_sqrt.rs",
    "func": "num::int_sqrt::i64",
    "hash": "1712462865803992989217551319112726940750"
  },
  {
    "file": "core/src/num/int_sqrt.rs",
    "func": "num::int_sqrt::i8",
    "hash": "4062837560946811864616090990226218358"
  },
  {
    "file": "core/src/num/int_sqrt.rs",
    "func": "num::int_sqrt::panic_for_negative_argument",
    "hash": "613059554325546104511400677723420142521"
  },
  {
    "file": "core/src/num/int_sqrt.rs",
    "func": "num::int_sqrt::u128",
    "hash": "1565531178428425561110252265786444473244"
  },
  {
    "file": "core/src/num/int_sqrt.rs",
    "func": "num::int_sqrt::u128_stages",
    "hash": "123735743380016482383485304905795092494"
  },
  {
    "file": "core/src/num/int_sqrt.rs",
    "func": "num::int_sqrt::u16",
    "hash": "39464981472055978638229202599351542351"
  },
  {
    "file": "core/src/num/int_sqrt.rs",
    "func": "num::int_sqrt::u16_stages",
    "hash": "640596390587764993613584517482851064972"
  },
  {
    "file": "core/src/num/int_sqrt.rs",
    "func": "num::int_sqrt::u32",
    "hash": "1334277269191688898017795060462662701078"
  },
  {
    "file": "core/src/num/int_sqrt.rs",
    "func": "num::int_sqrt::u32_stages",
    "hash": "72499378748732023075875469142295127373"
  },
  {
    "file": "core/src/num/int_sqrt.rs",
    "func": "num::int_sqrt::u64",
    "hash": "596222860880867867415734075885527494032"
  },
  {
    "file": "core/src/num/int_sqrt.rs",
    "func": "num::int_sqrt::u64_stages",
    "hash": "163452082413532559726118164606205847438"
  },
  {
    "file": "core/src/num/int_sqrt.rs",
    "func": "num::int_sqrt::u8",
    "hash": "1347572526195785673616491619380226691733"
  },
  {
    "file": "core/src/num/mod.rs",
    "func": "num::<impl i128>::midpoint",
    "hash": "478119528838238587313635124440782740280"
  },
  {
    "file": "core/src/num/mod.rs",
    "func": "num::<impl i16>::midpoint",
    "hash": "1546592474801856582715824035985028808630"
  },
  {
    "file": "core/src/num/mod.rs",
    "func": "num::<impl i32>::midpoint",
    "hash": "35248970882271453995656832371181341460"
  },
  {
    "file": "core/src/num/mod.rs",
    "func": "num::<impl i64>::midpoint",
    "hash": "69525706516543933792591672696722374226"
  },
  {
    "file": "core/src/num/mod.rs",
    "func": "num::<impl i8>::midpoint",
    "hash": "115437780385347125067149902367448128363"
  },
  {
    "file": "core/src/num/mod.rs",
    "func": "num::<impl isize>::midpoint",
    "hash": "1612522592317586560517184553771350102066"
  },
  {
    "file": "core/src/num/mod.rs",
    "func": "num::<impl u128>::midpoint",
    "hash": "1323786130443372958912946671471858543796"
  },
  {
    "file": "core/src/num/mod.rs",
    "func": "num::<impl u16>::is_utf16_surrogate",
    "hash": "1654653929060558501812705138147035884443"
  },
  {
    "file": "core/src/num/mod.rs",
    "func": "num::<impl u16>::midpoint",
    "hash": "176751080168499030046194003537565481109"
  },
  {
    "file": "core/src/num/mod.rs",
    "func": "num::<impl u32>::midpoint",
    "hash": "2027591268526209445958684000366636260"
  },
  {
    "file": "core/src/num/mod.rs",
    "func": "num::<impl u64>::midpoint",
    "hash": "52233282935778382951658530841943170111"
  },
  {
    "file": "core/src/num/mod.rs",
    "func": "num::<impl u8>::escape_ascii",
    "hash": "6330930065243475143662091540468265654"
  },
  {
    "file": "core/src/num/mod.rs",
    "func": "num::<impl u8>::is_utf8_char_boundary",
    "hash": "150600051056416786061197242199095913609"
  },
  {
    "file": "core/src/num/mod.rs",
    "func": "num::<impl u8>::midpoint",
    "hash": "1384784528934436394313873772772394616794"
  },
  {
    "file": "core/src/num/mod.rs",
    "func": "num::<impl usize>::midpoint",
    "hash": "182803983559695247966517707132564474210"
  },
  {
    "file": "core/src/num/mod.rs",
    "func": "num::<impl usize>::repeat_u16",
    "hash": "31607230951802897365876152769978647606"
  },
  {
    "file": "core/src/num/mod.rs",
    "func": "num::<impl usize>::repeat_u8",
    "hash": "59784951958023534311340742558790816074"
  },
  {
    "file": "core/src/num/mod.rs",
    "func": "num::from_ascii_radix_panic",
    "hash": "748883521171844223517017220441817346988"
  },
  {
    "file": "core/src/num/mod.rs",
    "func": "num::verify::carrying_mul_u16_full_range",
    "hash": "129604828382711009411741103744670308498",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/num/mod.rs",
    "func": "num::verify::carrying_mul_u32_large",
    "hash": "107580737185576759334451973231424500278",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/num/mod.rs",
    "func": "num::verify::carrying_mul_u32_mid_edge",
    "hash": "60627576636584617409658292576594687979",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/num/mod.rs",
    "func": "num::verify::carrying_mul_u32_small",
    "hash": "17004073769226175876343308294500742723",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/num/mod.rs",
    "func": "num::verify::carrying_mul_u64_large",
    "hash": "150016410878533069235241782411504972000",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/num/mod.rs",
    "func": "num::verify::carrying_mul_u64_mid_edge",
    "hash": "1062304335023933317411632363063581891631",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/num/mod.rs",
    "func": "num::verify::carrying_mul_u64_small",
    "hash": "1760536604827227696014499879685036391280",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/num/mod.rs",
    "func": "num::verify::carrying_mul_u8_full_range",
    "hash": "99628917000531489593720868104483115021",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/num/mod.rs",
    "func": "num::verify::checked_f128_to_int_unchecked_i128",
    "hash": "1722944017090482019713766324566104853413",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/num/mod.rs",
    "func": "num::verify::checked_f128_to_int_unchecked_i16",
    "hash": "747939065644340454716910653456173575323",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/num/mod.rs",
    "func": "num::verify::checked_f128_to_int_unchecked_i32",
    "hash": "76750570258486727354069384761764840860",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/num/mod.rs",
    "func": "num::verify::checked_f128_to_int_unchecked_i64",
    "hash": "1336083879694902543014600159692810630158",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/num/mod.rs",
    "func": "num::verify::checked_f128_to_int_unchecked_i8",
    "hash": "927445418822291897214854038406692979758",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/num/mod.rs",
    "func": "num::verify::checked_f128_to_int_unchecked_isize",
    "hash": "109906682993865675218433563523960621932",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/num/mod.rs",
    "func": "num::verify::checked_f128_to_int_unchecked_u128",
    "hash": "5624627225893334517331834771278121698",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/num/mod.rs",
    "func": "num::verify::checked_f128_to_int_unchecked_u16",
    "hash": "2433864501447314397275519285052714122",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/num/mod.rs",
    "func": "num::verify::checked_f128_to_int_unchecked_u32",
    "hash": "157326918179233411736633582276908229988",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/num/mod.rs",
    "func": "num::verify::checked_f128_to_int_unchecked_u64",
    "hash": "1416138331177780406234659390977081602",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/num/mod.rs",
    "func": "num::verify::checked_f128_to_int_unchecked_u8",
    "hash": "1831907139861931435913127019576428899675",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/num/mod.rs",
    "func": "num::verify::checked_f128_to_int_unchecked_usize",
    "hash": "80679272913749217389995764478873887836",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/num/mod.rs",
    "func": "num::verify::checked_f16_to_int_unchecked_i128",
    "hash": "1426347476049749660511830840042662782014",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/num/mod.rs",
    "func": "num::verify::checked_f16_to_int_unchecked_i16",
    "hash": "82893004052141726772394811294172615999",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/num/mod.rs",
    "func": "num::verify::checked_f16_to_int_unchecked_i32",
    "hash": "9149788917341736017171062385193368303",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/num/mod.rs",
    "func": "num::verify::checked_f16_to_int_unchecked_i64",
    "hash": "111878046103073313723622321051736503147",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/num/mod.rs",
    "func": "num::verify::checked_f16_to_int_unchecked_i8",
    "hash": "599766575244904633513495418800533263181",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/num/mod.rs",
    "func": "num::verify::checked_f16_to_int_unchecked_isize",
    "hash": "59193671789572522383666288202016250344",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/num/mod.rs",
    "func": "num::verify::checked_f16_to_int_unchecked_u128",
    "hash": "17221402026709874648356948859099957474",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/num/mod.rs",
    "func": "num::verify::checked_f16_to_int_unchecked_u16",
    "hash": "288599105403150399613514683322140094696",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/num/mod.rs",
    "func": "num::verify::checked_f16_to_int_unchecked_u32",
    "hash": "485121562586383637914365074513660167884",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/num/mod.rs",
    "func": "num::verify::checked_f16_to_int_unchecked_u64",
    "hash": "783520051175317125411840092503501336862",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/num/mod.rs",
    "func": "num::verify::checked_f16_to_int_unchecked_u8",
    "hash": "19801320510462982267868141189679796331",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/num/mod.rs",
    "func": "num::verify::checked_f16_to_int_unchecked_usize",
    "hash": "1784604122269095062140646991481219729",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/num/mod.rs",
    "func": "num::verify::checked_f32_to_int_unchecked_i128",
    "hash": "537758463300104250311457763175402835524",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/num/mod.rs",
    "func": "num::verify::checked_f32_to_int_unchecked_i16",
    "hash": "26151609520428590225196961663369258353",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/num/mod.rs",
    "func": "num::verify::checked_f32_to_int_unchecked_i32",
    "hash": "1277640961431831862411398176187999176655",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/num/mod.rs",
    "func": "num::verify::checked_f32_to_int_unchecked_i64",
    "hash": "1563914906342960658213407866752057824338",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/num/mod.rs",
    "func": "num::verify::checked_f32_to_int_unchecked_i8",
    "hash": "23192703770966822348444298634901074495",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/num/mod.rs",
    "func": "num::verify::checked_f32_to_int_unchecked_isize",
    "hash": "770973881270741899312861342254405776835",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/num/mod.rs",
    "func": "num::verify::checked_f32_to_int_unchecked_u128",
    "hash": "1261429251040737572316157764485712146420",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/num/mod.rs",
    "func": "num::verify::checked_f32_to_int_unchecked_u16",
    "hash": "175646766645757368865158070474996130275",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/num/mod.rs",
    "func": "num::verify::checked_f32_to_int_unchecked_u32",
    "hash": "13720179701223071765607205152542889950",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/num/mod.rs",
    "func": "num::verify::checked_f32_to_int_unchecked_u64",
    "hash": "174929399217020154176818508746242982437",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/num/mod.rs",
    "func": "num::verify::checked_f32_to_int_unchecked_u8",
    "hash": "4646508169696015147142651147715254691",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/num/mod.rs",
    "func": "num::verify::checked_f32_to_int_unchecked_usize",
    "hash": "2673481041526901749429707553749875363",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/num/mod.rs",
    "func": "num::verify::checked_f64_to_int_unchecked_i128",
    "hash": "703988117103247420913165970463227875422",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/num/mod.rs",
    "func": "num::verify::checked_f64_to_int_unchecked_i16",
    "hash": "118089418497868517161244244067503976973",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/num/mod.rs",
    "func": "num::verify::checked_f64_to_int_unchecked_i32",
    "hash": "179714842269321484813198086872797509224",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/num/mod.rs",
    "func": "num::verify::checked_f64_to_int_unchecked_i64",
    "hash": "1150215684148110613415431256921123732405",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/num/mod.rs",
    "func": "num::verify::checked_f64_to_int_unchecked_i8",
    "hash": "167132426485307394869490281300253747919",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/num/mod.rs",
    "func": "num::verify::checked_f64_to_int_unchecked_isize",
    "hash": "107242907338977311207876687176343732451",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/num/mod.rs",
    "func": "num::verify::checked_f64_to_int_unchecked_u128",
    "hash": "460786615380208772213341008770131700632",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/num/mod.rs",
    "func": "num::verify::checked_f64_to_int_unchecked_u16",
    "hash": "37926907092729808293501977764705143830",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/num/mod.rs",
    "func": "num::verify::checked_f64_to_int_unchecked_u32",
    "hash": "244993693226706484613155590624563535416",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/num/mod.rs",
    "func": "num::verify::checked_f64_to_int_unchecked_u64",
    "hash": "136883026808174638259039984825810456843",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/num/mod.rs",
    "func": "num::verify::checked_f64_to_int_unchecked_u8",
    "hash": "26806184885640680425501100962013398183",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/num/mod.rs",
    "func": "num::verify::checked_f64_to_int_unchecked_usize",
    "hash": "1278646629335770101511308872087621287956",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/num/mod.rs",
    "func": "num::verify::checked_unchecked_add_i128"
  },
  {
    "file": "core/src/num/mod.rs",
    "func": "num::verify::checked_unchecked_add_i16"
  },
  {
    "file": "core/src/num/mod.rs",
    "func": "num::verify::checked_unchecked_add_i32"
  },
  {
    "file": "core/src/num/mod.rs",
    "func": "num::verify::checked_unchecked_add_i64"
  },
  {
    "file": "core/src/num/mod.rs",
    "func": "num::verify::checked_unchecked_add_i8"
  },
  {
    "file": "core/src/num/mod.rs",
    "func": "num::verify::checked_unchecked_add_isize"
  },
  {
    "file": "core/src/num/mod.rs",
    "func": "num::verify::checked_unchecked_add_u128"
  },
  {
    "file": "core/src/num/mod.rs",
    "func": "num::verify::checked_unchecked_add_u16"
  },
  {
    "file": "core/src/num/mod.rs",
    "func": "num::verify::checked_unchecked_add_u32"
  },
  {
    "file": "core/src/num/mod.rs",
    "func": "num::verify::checked_unchecked_add_u64"
  },
  {
    "file": "core/src/num/mod.rs",
    "func": "num::verify::checked_unchecked_add_u8"
  },
  {
    "file": "core/src/num/mod.rs",
    "func": "num::verify::checked_unchecked_add_usize"
  },
  {
    "file": "core/src/num/mod.rs",
    "func": "num::verify::checked_unchecked_mul_i16",
    "hash": "21791977498765029152165857473233747833",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/num/mod.rs",
    "func": "num::verify::checked_unchecked_mul_i8",
    "hash": "62414763362581666746693285776108267800",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/num/mod.rs",
    "func": "num::verify::checked_unchecked_mul_u16",
    "hash": "1137272626210484328517073699872271768307",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/num/mod.rs",
    "func": "num::verify::checked_unchecked_mul_u8",
    "hash": "69012293057693039352152784887663350505",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/num/mod.rs",
    "func": "num::verify::checked_unchecked_neg_i128"
  },
  {
    "file": "core/src/num/mod.rs",
    "func": "num::verify::checked_unchecked_neg_i16"
  },
  {
    "file": "core/src/num/mod.rs",
    "func": "num::verify::checked_unchecked_neg_i32"
  },
  {
    "file": "core/src/num/mod.rs",
    "func": "num::verify::checked_unchecked_neg_i64"
  },
  {
    "file": "core/src/num/mod.rs",
    "func": "num::verify::checked_unchecked_neg_i8"
  },
  {
    "file": "core/src/num/mod.rs",
    "func": "num::verify::checked_unchecked_neg_isize"
  },
  {
    "file": "core/src/num/mod.rs",
    "func": "num::verify::checked_unchecked_shl_i128"
  },
  {
    "file": "core/src/num/mod.rs",
    "func": "num::verify::checked_unchecked_shl_i16"
  },
  {
    "file": "core/src/num/mod.rs",
    "func": "num::verify::checked_unchecked_shl_i32"
  },
  {
    "file": "core/src/num/mod.rs",
    "func": "num::verify::checked_unchecked_shl_i64"
  },
  {
    "file": "core/src/num/mod.rs",
    "func": "num::verify::checked_unchecked_shl_i8"
  },
  {
    "file": "core/src/num/mod.rs",
    "func": "num::verify::checked_unchecked_shl_isize"
  },
  {
    "file": "core/src/num/mod.rs",
    "func": "num::verify::checked_unchecked_shl_u128"
  },
  {
    "file": "core/src/num/mod.rs",
    "func": "num::verify::checked_unchecked_shl_u16"
  },
  {
    "file": "core/src/num/mod.rs",
    "func": "num::verify::checked_unchecked_shl_u32"
  },
  {
    "file": "core/src/num/mod.rs",
    "func": "num::verify::checked_unchecked_shl_u64"
  },
  {
    "file": "core/src/num/mod.rs",
    "func": "num::verify::checked_unchecked_shl_u8"
  },
  {
    "file": "core/src/num/mod.rs",
    "func": "num::verify::checked_unchecked_shl_usize"
  },
  {
    "file": "core/src/num/mod.rs",
    "func": "num::verify::checked_unchecked_shr_i128"
  },
  {
    "file": "core/src/num/mod.rs",
    "func": "num::verify::checked_unchecked_shr_i16"
  },
  {
    "file": "core/src/num/mod.rs",
    "func": "num::verify::checked_unchecked_shr_i32"
  },
  {
    "file": "core/src/num/mod.rs",
    "func": "num::verify::checked_unchecked_shr_i64"
  },
  {
    "file": "core/src/num/mod.rs",
    "func": "num::verify::checked_unchecked_shr_i8"
  },
  {
    "file": "core/src/num/mod.rs",
    "func": "num::verify::checked_unchecked_shr_isize"
  },
  {
    "file": "core/src/num/mod.rs",
    "func": "num::verify::checked_unchecked_shr_u128"
  },
  {
    "file": "core/src/num/mod.rs",
    "func": "num::verify::checked_unchecked_shr_u16"
  },
  {
    "file": "core/src/num/mod.rs",
    "func": "num::verify::checked_unchecked_shr_u32"
  },
  {
    "file": "core/src/num/mod.rs",
    "func": "num::verify::checked_unchecked_shr_u64"
  },
  {
    "file": "core/src/num/mod.rs",
    "func": "num::verify::checked_unchecked_shr_u8"
  },
  {
    "file": "core/src/num/mod.rs",
    "func": "num::verify::checked_unchecked_shr_usize"
  },
  {
    "file": "core/src/num/mod.rs",
    "func": "num::verify::checked_unchecked_sub_i128"
  },
  {
    "file": "core/src/num/mod.rs",
    "func": "num::verify::checked_unchecked_sub_i16"
  },
  {
    "file": "core/src/num/mod.rs",
    "func": "num::verify::checked_unchecked_sub_i32"
  },
  {
    "file": "core/src/num/mod.rs",
    "func": "num::verify::checked_unchecked_sub_i64"
  },
  {
    "file": "core/src/num/mod.rs",
    "func": "num::verify::checked_unchecked_sub_i8"
  },
  {
    "file": "core/src/num/mod.rs",
    "func": "num::verify::checked_unchecked_sub_isize"
  },
  {
    "file": "core/src/num/mod.rs",
    "func": "num::verify::checked_unchecked_sub_u128"
  },
  {
    "file": "core/src/num/mod.rs",
    "func": "num::verify::checked_unchecked_sub_u16"
  },
  {
    "file": "core/src/num/mod.rs",
    "func": "num::verify::checked_unchecked_sub_u32"
  },
  {
    "file": "core/src/num/mod.rs",
    "func": "num::verify::checked_unchecked_sub_u64"
  },
  {
    "file": "core/src/num/mod.rs",
    "func": "num::verify::checked_unchecked_sub_u8"
  },
  {
    "file": "core/src/num/mod.rs",
    "func": "num::verify::checked_unchecked_sub_usize"
  },
  {
    "file": "core/src/num/mod.rs",
    "func": "num::verify::checked_wrapping_shl_i128"
  },
  {
    "file": "core/src/num/mod.rs",
    "func": "num::verify::checked_wrapping_shl_i16"
  },
  {
    "file": "core/src/num/mod.rs",
    "func": "num::verify::checked_wrapping_shl_i32"
  },
  {
    "file": "core/src/num/mod.rs",
    "func": "num::verify::checked_wrapping_shl_i64"
  },
  {
    "file": "core/src/num/mod.rs",
    "func": "num::verify::checked_wrapping_shl_i8"
  },
  {
    "file": "core/src/num/mod.rs",
    "func": "num::verify::checked_wrapping_shl_isize"
  },
  {
    "file": "core/src/num/mod.rs",
    "func": "num::verify::checked_wrapping_shl_u128"
  },
  {
    "file": "core/src/num/mod.rs",
    "func": "num::verify::checked_wrapping_shl_u16"
  },
  {
    "file": "core/src/num/mod.rs",
    "func": "num::verify::checked_wrapping_shl_u32"
  },
  {
    "file": "core/src/num/mod.rs",
    "func": "num::verify::checked_wrapping_shl_u64"
  },
  {
    "file": "core/src/num/mod.rs",
    "func": "num::verify::checked_wrapping_shl_u8"
  },
  {
    "file": "core/src/num/mod.rs",
    "func": "num::verify::checked_wrapping_shl_usize"
  },
  {
    "file": "core/src/num/mod.rs",
    "func": "num::verify::checked_wrapping_shr_i128"
  },
  {
    "file": "core/src/num/mod.rs",
    "func": "num::verify::checked_wrapping_shr_i16"
  },
  {
    "file": "core/src/num/mod.rs",
    "func": "num::verify::checked_wrapping_shr_i32"
  },
  {
    "file": "core/src/num/mod.rs",
    "func": "num::verify::checked_wrapping_shr_i64"
  },
  {
    "file": "core/src/num/mod.rs",
    "func": "num::verify::checked_wrapping_shr_i8"
  },
  {
    "file": "core/src/num/mod.rs",
    "func": "num::verify::checked_wrapping_shr_isize"
  },
  {
    "file": "core/src/num/mod.rs",
    "func": "num::verify::checked_wrapping_shr_u128"
  },
  {
    "file": "core/src/num/mod.rs",
    "func": "num::verify::checked_wrapping_shr_u16"
  },
  {
    "file": "core/src/num/mod.rs",
    "func": "num::verify::checked_wrapping_shr_u32"
  },
  {
    "file": "core/src/num/mod.rs",
    "func": "num::verify::checked_wrapping_shr_u64"
  },
  {
    "file": "core/src/num/mod.rs",
    "func": "num::verify::checked_wrapping_shr_u8"
  },
  {
    "file": "core/src/num/mod.rs",
    "func": "num::verify::checked_wrapping_shr_usize"
  },
  {
    "file": "core/src/num/mod.rs",
    "func": "num::verify::unchecked_mul_i128_edge_neg",
    "hash": "1455357886177240896313155567860261304623",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/num/mod.rs",
    "func": "num::verify::unchecked_mul_i128_edge_pos",
    "hash": "168716143731613820117706086050989607141",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/num/mod.rs",
    "func": "num::verify::unchecked_mul_i128_large_neg",
    "hash": "114363428421176830939965156836491900910",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/num/mod.rs",
    "func": "num::verify::unchecked_mul_i128_large_pos",
    "hash": "14102294481266943014282313349972975409",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/num/mod.rs",
    "func": "num::verify::unchecked_mul_i128_small",
    "hash": "113600552613501622533076565516749536874",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/num/mod.rs",
    "func": "num::verify::unchecked_mul_i32_edge_neg",
    "hash": "14628745663485757531284910696232928765",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/num/mod.rs",
    "func": "num::verify::unchecked_mul_i32_edge_pos",
    "hash": "294032061472712001717568494418404831062",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/num/mod.rs",
    "func": "num::verify::unchecked_mul_i32_large_neg",
    "hash": "107259768265297325843959681141978332818",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/num/mod.rs",
    "func": "num::verify::unchecked_mul_i32_large_pos",
    "hash": "985581044899369776411726769502477600242",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/num/mod.rs",
    "func": "num::verify::unchecked_mul_i32_small",
    "hash": "84419785825224268157226854622464386018",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/num/mod.rs",
    "func": "num::verify::unchecked_mul_i64_edge_neg",
    "hash": "585851006640307923913235300418785315598",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/num/mod.rs",
    "func": "num::verify::unchecked_mul_i64_edge_pos",
    "hash": "148284736297601914712017658440547626916",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/num/mod.rs",
    "func": "num::verify::unchecked_mul_i64_large_neg",
    "hash": "88271741245812709018772506981245632992",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/num/mod.rs",
    "func": "num::verify::unchecked_mul_i64_large_pos",
    "hash": "178184584188735855237873353034694415886",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/num/mod.rs",
    "func": "num::verify::unchecked_mul_i64_small",
    "hash": "167793001338723440542191516291761115377",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/num/mod.rs",
    "func": "num::verify::unchecked_mul_isize_edge_neg",
    "hash": "41301332265800451215556849130440457861",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/num/mod.rs",
    "func": "num::verify::unchecked_mul_isize_edge_pos",
    "hash": "5162726695236555100850300468052880902",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/num/mod.rs",
    "func": "num::verify::unchecked_mul_isize_large_neg",
    "hash": "153655306224419084346598437149748839587",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/num/mod.rs",
    "func": "num::verify::unchecked_mul_isize_large_pos",
    "hash": "498690475860470539014435891043901215985",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/num/mod.rs",
    "func": "num::verify::unchecked_mul_isize_small",
    "hash": "126592455392412942444850061018673938659",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/num/mod.rs",
    "func": "num::verify::unchecked_mul_u128_edge",
    "hash": "15425996747964229744469399606892758552",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/num/mod.rs",
    "func": "num::verify::unchecked_mul_u128_large",
    "hash": "361797000052333093617376353467852097512",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/num/mod.rs",
    "func": "num::verify::unchecked_mul_u128_small",
    "hash": "1378122264920888885415087178530989896108",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/num/mod.rs",
    "func": "num::verify::unchecked_mul_u32_edge",
    "hash": "926118259426853162217449976724275100597",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/num/mod.rs",
    "func": "num::verify::unchecked_mul_u32_large",
    "hash": "135268899234709514198266306269481752473",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/num/mod.rs",
    "func": "num::verify::unchecked_mul_u32_small",
    "hash": "38866941331895178011666777842982049738",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/num/mod.rs",
    "func": "num::verify::unchecked_mul_u64_edge",
    "hash": "130348276088037319965062820276443588526",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/num/mod.rs",
    "func": "num::verify::unchecked_mul_u64_large",
    "hash": "3241361498624853156632477071443101046",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/num/mod.rs",
    "func": "num::verify::unchecked_mul_u64_small",
    "hash": "296618406677801449412836551155592328650",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/num/mod.rs",
    "func": "num::verify::unchecked_mul_usize_edge",
    "hash": "689254637318503408317687648123113054398",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/num/mod.rs",
    "func": "num::verify::unchecked_mul_usize_large",
    "hash": "1362318213426800121317786785860111776145",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/num/mod.rs",
    "func": "num::verify::unchecked_mul_usize_small",
    "hash": "369713302422452209514309876707390071731",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/num/mod.rs",
    "func": "num::verify::widening_mul_u16_large",
    "hash": "1233244971311679305617262993774905797330",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/num/mod.rs",
    "func": "num::verify::widening_mul_u16_mid_edge",
    "hash": "1354802898293552927612255881034340040452",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/num/mod.rs",
    "func": "num::verify::widening_mul_u16_small",
    "hash": "12928119099570661427947625486242039822",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/num/mod.rs",
    "func": "num::verify::widening_mul_u32_large",
    "hash": "170734586250022435268908012847060825994",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/num/mod.rs",
    "func": "num::verify::widening_mul_u32_mid_edge",
    "hash": "127478412695826067765326812898358123139",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/num/mod.rs",
    "func": "num::verify::widening_mul_u32_small",
    "hash": "59072323859448478127344797526243708556",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/num/mod.rs",
    "func": "num::verify::widening_mul_u64_large",
    "hash": "37196928984841096447373068430022298404",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/num/mod.rs",
    "func": "num::verify::widening_mul_u64_mid_edge",
    "hash": "455971158613724929315229951003188445141",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/num/mod.rs",
    "func": "num::verify::widening_mul_u64_small",
    "hash": "782431807879713825711205762204153774840",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/num/mod.rs",
    "func": "num::verify::widening_mul_u8",
    "hash": "132141722700400598106691052553635767164",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::Nanoseconds as default::Default>::default",
    "hash": "33316218339812451924566044462151750931"
  },
  {
    "file": "core/src/num/niche_types.rs",
    "func": "num::niche_types::I32NotAllOnes",
    "hash": "39423148293414798499596375475758201927"
  },
  {
    "file": "core/src/num/niche_types.rs",
    "func": "num::niche_types::I32NotAllOnes::new",
    "hash": "134039705709822154342641997715684363766"
  },
  {
    "file": "core/src/num/niche_types.rs",
    "func": "num::niche_types::I32NotAllOnes::new_unchecked",
    "hash": "92975123607936572231168813692712166386"
  },
  {
    "file": "core/src/num/niche_types.rs",
    "func": "num::niche_types::I64NotAllOnes",
    "hash": "1572027517503775640514823793332908851471"
  },
  {
    "file": "core/src/num/niche_types.rs",
    "func": "num::niche_types::I64NotAllOnes::new",
    "hash": "112212620721978528376504215646958893261"
  },
  {
    "file": "core/src/num/niche_types.rs",
    "func": "num::niche_types::I64NotAllOnes::new_unchecked",
    "hash": "36296897792730103695037199872579175076"
  },
  {
    "file": "core/src/num/niche_types.rs",
    "func": "num::niche_types::Nanoseconds",
    "hash": "1431144696768237229514470671799449439983"
  },
  {
    "file": "core/src/num/niche_types.rs",
    "func": "num::niche_types::Nanoseconds::new",
    "hash": "45350966017468649998714738096499649222"
  },
  {
    "file": "core/src/num/niche_types.rs",
    "func": "num::niche_types::Nanoseconds::new_unchecked",
    "hash": "51225830451726158312709701652983201891"
  },
  {
    "file": "core/src/num/niche_types.rs",
    "func": "num::niche_types::NonZeroCharInner",
    "hash": "747659875637027540818389887735810924583"
  },
  {
    "file": "core/src/num/niche_types.rs",
    "func": "num::niche_types::NonZeroCharInner::new",
    "hash": "15532266410639627666396155412579882387"
  },
  {
    "file": "core/src/num/niche_types.rs",
    "func": "num::niche_types::NonZeroCharInner::new_unchecked",
    "hash": "190881856928672844517357751221740328283"
  },
  {
    "file": "core/src/num/niche_types.rs",
    "func": "num::niche_types::NonZeroI128Inner",
    "hash": "84651953072095598211848564860628645554"
  },
  {
    "file": "core/src/num/niche_types.rs",
    "func": "num::niche_types::NonZeroI128Inner::new",
    "hash": "80794069738656808254923071390504985579"
  },
  {
    "file": "core/src/num/niche_types.rs",
    "func": "num::niche_types::NonZeroI128Inner::new_unchecked",
    "hash": "116695753510100979811452133811575970801"
  },
  {
    "file": "core/src/num/niche_types.rs",
    "func": "num::niche_types::NonZeroI16Inner",
    "hash": "64365502819346752073717487259520107915"
  },
  {
    "file": "core/src/num/niche_types.rs",
    "func": "num::niche_types::NonZeroI16Inner::new",
    "hash": "34946273200272909417760785806975300821"
  },
  {
    "file": "core/src/num/niche_types.rs",
    "func": "num::niche_types::NonZeroI16Inner::new_unchecked",
    "hash": "867598974867323784212822660181142220878"
  },
  {
    "file": "core/src/num/niche_types.rs",
    "func": "num::niche_types::NonZeroI32Inner",
    "hash": "1350529481738347034613590755169317862232"
  },
  {
    "file": "core/src/num/niche_types.rs",
    "func": "num::niche_types::NonZeroI32Inner::new",
    "hash": "46052110269783534427452286942057207389"
  },
  {
    "file": "core/src/num/niche_types.rs",
    "func": "num::niche_types::NonZeroI32Inner::new_unchecked",
    "hash": "1507662033143273008212811450207614452497"
  },
  {
    "file": "core/src/num/niche_types.rs",
    "func": "num::niche_types::NonZeroI64Inner",
    "hash": "120864656665721622256724747857589539088"
  },
  {
    "file": "core/src/num/niche_types.rs",
    "func": "num::niche_types::NonZeroI64Inner::new",
    "hash": "19074146647032123026799267446967856799"
  },
  {
    "file": "core/src/num/niche_types.rs",
    "func": "num::niche_types::NonZeroI64Inner::new_unchecked",
    "hash": "111862586212251675408166417039950422511"
  },
  {
    "file": "core/src/num/niche_types.rs",
    "func": "num::niche_types::NonZeroI8Inner",
    "hash": "130391012221809275887182109111780635168"
  },
  {
    "file": "core/src/num/niche_types.rs",
    "func": "num::niche_types::NonZeroI8Inner::new",
    "hash": "355033230475920705916048439164963800310"
  },
  {
    "file": "core/src/num/niche_types.rs",
    "func": "num::niche_types::NonZeroI8Inner::new_unchecked",
    "hash": "175545629064875308446313419646332725133"
  },
  {
    "file": "core/src/num/niche_types.rs",
    "func": "num::niche_types::NonZeroIsizeInner",
    "hash": "1174189003949398081913277212495364422169"
  },
  {
    "file": "core/src/num/niche_types.rs",
    "func": "num::niche_types::NonZeroIsizeInner::new",
    "hash": "7974482241655598934926715692560188327"
  },
  {
    "file": "core/src/num/niche_types.rs",
    "func": "num::niche_types::NonZeroIsizeInner::new_unchecked",
    "hash": "125361796579432390158653205467967192783"
  },
  {
    "file": "core/src/num/niche_types.rs",
    "func": "num::niche_types::NonZeroU128Inner",
    "hash": "539872491688103784015291107766984273101"
  },
  {
    "file": "core/src/num/niche_types.rs",
    "func": "num::niche_types::NonZeroU128Inner::new",
    "hash": "763224391707697942111203531677233712833"
  },
  {
    "file": "core/src/num/niche_types.rs",
    "func": "num::niche_types::NonZeroU128Inner::new_unchecked",
    "hash": "566036971698285868518113175437320123266"
  },
  {
    "file": "core/src/num/niche_types.rs",
    "func": "num::niche_types::NonZeroU16Inner",
    "hash": "81491844706497070971256247487535068050"
  },
  {
    "file": "core/src/num/niche_types.rs",
    "func": "num::niche_types::NonZeroU16Inner::new",
    "hash": "4791636725361754236989393350408339770"
  },
  {
    "file": "core/src/num/niche_types.rs",
    "func": "num::niche_types::NonZeroU16Inner::new_unchecked",
    "hash": "1634780615207981641717269164983552798879"
  },
  {
    "file": "core/src/num/niche_types.rs",
    "func": "num::niche_types::NonZeroU32Inner",
    "hash": "158839454885125255553203751459766797075"
  },
  {
    "file": "core/src/num/niche_types.rs",
    "func": "num::niche_types::NonZeroU32Inner::new",
    "hash": "216585252321698747717316822071779208832"
  },
  {
    "file": "core/src/num/niche_types.rs",
    "func": "num::niche_types::NonZeroU32Inner::new_unchecked",
    "hash": "170560783192078534304144204918638428488"
  },
  {
    "file": "core/src/num/niche_types.rs",
    "func": "num::niche_types::NonZeroU64Inner",
    "hash": "154706072773396803732897367281814284158"
  },
  {
    "file": "core/src/num/niche_types.rs",
    "func": "num::niche_types::NonZeroU64Inner::new",
    "hash": "1499785228099579958212395693145541006435"
  },
  {
    "file": "core/src/num/niche_types.rs",
    "func": "num::niche_types::NonZeroU64Inner::new_unchecked",
    "hash": "153658288194813369931876235236026843564"
  },
  {
    "file": "core/src/num/niche_types.rs",
    "func": "num::niche_types::NonZeroU8Inner",
    "hash": "18340541567509540526124226129508893658"
  },
  {
    "file": "core/src/num/niche_types.rs",
    "func": "num::niche_types::NonZeroU8Inner::new",
    "hash": "20887920727208247939547936717851136687"
  },
  {
    "file": "core/src/num/niche_types.rs",
    "func": "num::niche_types::NonZeroU8Inner::new_unchecked",
    "hash": "92790980670277760905592423828329595605"
  },
  {
    "file": "core/src/num/niche_types.rs",
    "func": "num::niche_types::NonZeroUsizeInner",
    "hash": "146263084146674026682659349364629833884"
  },
  {
    "file": "core/src/num/niche_types.rs",
    "func": "num::niche_types::NonZeroUsizeInner::new",
    "hash": "762690894003751813043349873880975692"
  },
  {
    "file": "core/src/num/niche_types.rs",
    "func": "num::niche_types::NonZeroUsizeInner::new_unchecked",
    "hash": "1096466281826676228917318862109482299218"
  },
  {
    "file": "core/src/num/niche_types.rs",
    "func": "num::niche_types::U32NotAllOnes",
    "hash": "26264484209090533995439720457404408064"
  },
  {
    "file": "core/src/num/niche_types.rs",
    "func": "num::niche_types::U32NotAllOnes::new",
    "hash": "85950548928158386325839607069287439786"
  },
  {
    "file": "core/src/num/niche_types.rs",
    "func": "num::niche_types::U32NotAllOnes::new_unchecked",
    "hash": "1615871760184021740713347212525822080276"
  },
  {
    "file": "core/src/num/niche_types.rs",
    "func": "num::niche_types::U64NotAllOnes",
    "hash": "555244408123194470411077624991804843884"
  },
  {
    "file": "core/src/num/niche_types.rs",
    "func": "num::niche_types::U64NotAllOnes::new",
    "hash": "921422467603029001913531772910022809892"
  },
  {
    "file": "core/src/num/niche_types.rs",
    "func": "num::niche_types::U64NotAllOnes::new_unchecked",
    "hash": "1063800475613681587114773946067224507473"
  },
  {
    "file": "core/src/num/niche_types.rs",
    "func": "num::niche_types::UsizeNoHighBit",
    "hash": "36404618212569327891032092192024764022"
  },
  {
    "file": "core/src/num/niche_types.rs",
    "func": "num::niche_types::UsizeNoHighBit::new",
    "hash": "137057144109933395807090587387091806489"
  },
  {
    "file": "core/src/num/niche_types.rs",
    "func": "num::niche_types::UsizeNoHighBit::new_unchecked",
    "hash": "96084062787963481037824908701510558916"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "<num::nonzero::NonZero<i128> as ops::arith::Neg>::neg",
    "hash": "772070388208430214912433414507029408716"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "<num::nonzero::NonZero<i16> as ops::arith::Neg>::neg",
    "hash": "129161320569233824982748304706932703615"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "<num::nonzero::NonZero<i32> as ops::arith::Neg>::neg",
    "hash": "969375479990190623118047933376503623920"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "<num::nonzero::NonZero<i64> as ops::arith::Neg>::neg",
    "hash": "126141036878444322453155010223427770403"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "<num::nonzero::NonZero<i8> as ops::arith::Neg>::neg",
    "hash": "53271365149833434013220660606061246835"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "<num::nonzero::NonZero<isize> as ops::arith::Neg>::neg",
    "hash": "1521304137605472356118312286258601321488"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::<impl ops::arith::Div<num::nonzero::NonZero<u128>> for u128>::div",
    "hash": "34777200535495901626490145093722441729"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::<impl ops::arith::Div<num::nonzero::NonZero<u16>> for u16>::div",
    "hash": "676334105028770092179837510039689990"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::<impl ops::arith::Div<num::nonzero::NonZero<u32>> for u32>::div",
    "hash": "778598753399532192518091677675785810142"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::<impl ops::arith::Div<num::nonzero::NonZero<u64>> for u64>::div",
    "hash": "47605667598609969814087326938232613014"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::<impl ops::arith::Div<num::nonzero::NonZero<u8>> for u8>::div",
    "hash": "155897697018330924854188696282795327263"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::<impl ops::arith::Div<num::nonzero::NonZero<usize>> for usize>::div",
    "hash": "436701352236763300714661296606863282504"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::<impl ops::arith::Rem<num::nonzero::NonZero<u128>> for u128>::rem",
    "hash": "16974392199357860728701936086815240765"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::<impl ops::arith::Rem<num::nonzero::NonZero<u16>> for u16>::rem",
    "hash": "9503923651036279280945420216786244936"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::<impl ops::arith::Rem<num::nonzero::NonZero<u32>> for u32>::rem",
    "hash": "1325470556518860953110318331730555838815"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::<impl ops::arith::Rem<num::nonzero::NonZero<u64>> for u64>::rem",
    "hash": "128929107237870987626238308935263210862"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::<impl ops::arith::Rem<num::nonzero::NonZero<u8>> for u8>::rem",
    "hash": "743200079887202989010285656840437819791"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::<impl ops::arith::Rem<num::nonzero::NonZero<usize>> for usize>::rem",
    "hash": "145031231895299271631225967768252212598"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i128>::abs",
    "hash": "13564687348829907508512316648774417361"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i128>::cast_unsigned",
    "hash": "35097385190000859851173637906117867240"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i128>::checked_abs",
    "hash": "54483038370118182496682933191448565321"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i128>::checked_mul",
    "hash": "248134394071369091814769846299305194442"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i128>::checked_neg",
    "hash": "900909250435749265911137310061455920339"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i128>::checked_pow",
    "hash": "351023089297427189210568525209982193938"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i128>::count_ones",
    "hash": "152445736480085342896501194846475813527"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i128>::from_be",
    "hash": "792720515171158870015231609936673441887"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i128>::from_le",
    "hash": "170594441398818839659489783569796481910"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i128>::is_negative",
    "hash": "183703711787915447223533194825265367168"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i128>::is_positive",
    "hash": "89205388216393289318882947789561822200"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i128>::isolate_least_significant_one",
    "hash": "68642242743796299846751236013742845361"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i128>::isolate_most_significant_one",
    "hash": "16096207659523941743028514828171173728"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i128>::leading_zeros",
    "hash": "1727973178838038665511089040154029318137"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i128>::overflowing_abs",
    "hash": "1799677894210696469110282760730364273806"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i128>::overflowing_neg",
    "hash": "6800028275449049562430747654294219221"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i128>::reverse_bits",
    "hash": "675506765457111816915784255015710652623"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i128>::rotate_left",
    "hash": "380078510415831544115194981353794364711"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i128>::rotate_right",
    "hash": "1537810990419971703517207663982338817795"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i128>::saturating_abs",
    "hash": "140526635409838733896154754711024377177"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i128>::saturating_mul",
    "hash": "27222786127896724677430943995414281784"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i128>::saturating_neg",
    "hash": "16071780918968547421562849644908060917"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i128>::saturating_pow",
    "hash": "891504571857154557311202001699767782028"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i128>::swap_bytes",
    "hash": "107892170373632001276290995595485317975"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i128>::to_be",
    "hash": "21254427072383351674507311644673806930"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i128>::to_le",
    "hash": "8795429181738191293652263481917714040"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i128>::trailing_zeros",
    "hash": "75340918753098971829695534918671426015"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i128>::unchecked_mul",
    "hash": "1684745987966888040617088638394893451326"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i128>::unsigned_abs",
    "hash": "119247578423029206067242862101805268704"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i128>::wrapping_abs",
    "hash": "155587689163594827883505349495788772208"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i128>::wrapping_neg",
    "hash": "2524034947593726189544763171066192784"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i16>::abs",
    "hash": "1588410425139142117515011360329467641671"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i16>::cast_unsigned",
    "hash": "1349536001361020838912751613045837254299"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i16>::checked_abs",
    "hash": "112084153772825457955329934856965455719"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i16>::checked_mul",
    "hash": "4433768712424199928157230443322128181"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i16>::checked_neg",
    "hash": "161224668140446110932129165071276209468"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i16>::checked_pow",
    "hash": "1309251971273295921512843479590663643004"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i16>::count_ones",
    "hash": "5812362109828092997169871161552236572"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i16>::from_be",
    "hash": "107392063078522435718145489380168743396"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i16>::from_le",
    "hash": "226478730875879549514830487852805191849"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i16>::is_negative",
    "hash": "34414805846783926815696647622544263195"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i16>::is_positive",
    "hash": "1320122756246647417314343328594757434795"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i16>::isolate_least_significant_one",
    "hash": "1347669234079716062510470049179024089522"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i16>::isolate_most_significant_one",
    "hash": "65512156327938579425013096487601821546"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i16>::leading_zeros",
    "hash": "5621965136539135539630347531569269273"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i16>::overflowing_abs",
    "hash": "103819145415774294068874307682679681975"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i16>::overflowing_neg",
    "hash": "1149580521282528596713203631326880651812"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i16>::reverse_bits",
    "hash": "1751522545164518196912696764967885245945"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i16>::rotate_left",
    "hash": "67781116532791010309006077940381206569"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i16>::rotate_right",
    "hash": "96100137218909620344637068591494083915"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i16>::saturating_abs",
    "hash": "1068556975691142441812139599487087487666"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i16>::saturating_mul",
    "hash": "13009743451020755676742636653964458347"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i16>::saturating_neg",
    "hash": "1373928305095284887315182186558578994306"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i16>::saturating_pow",
    "hash": "169693001612153881678205535771617327647"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i16>::swap_bytes",
    "hash": "393813297024508335011972816795594892257"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i16>::to_be",
    "hash": "688736119747390801415731407935729905632"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i16>::to_le",
    "hash": "1432102502019244123811738342743912229564"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i16>::trailing_zeros",
    "hash": "9052269529670076628161456299183772829"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i16>::unchecked_mul",
    "hash": "2105113817896478920222044058124703964"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i16>::unsigned_abs",
    "hash": "182861583576064434349672165553054005603"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i16>::wrapping_abs",
    "hash": "1275942219559705532917873044764518685935"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i16>::wrapping_neg",
    "hash": "1413276115350081381514509947125552816106"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i32>::abs",
    "hash": "1312779233487198389911530466082343911183"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i32>::cast_unsigned",
    "hash": "101975152110590279975757161520580865990"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i32>::checked_abs",
    "hash": "160851224066848983119466487386751402365"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i32>::checked_mul",
    "hash": "1716515453847377614714060171750583360721"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i32>::checked_neg",
    "hash": "71371208870619313826344320274925283612"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i32>::checked_pow",
    "hash": "102575251676189645788432918596375503045"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i32>::count_ones",
    "hash": "179164185837452137252102850623598142293"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i32>::from_be",
    "hash": "520239315293112238618415621285196298666"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i32>::from_le",
    "hash": "58705938301778283226771869819272301283"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i32>::is_negative",
    "hash": "169718779557798658716140607348727675527"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i32>::is_positive",
    "hash": "580548887201727092017605731654990059418"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i32>::isolate_least_significant_one",
    "hash": "333018604948897373712521037815055649583"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i32>::isolate_most_significant_one",
    "hash": "1520007080806300774317958022304767420694"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i32>::leading_zeros",
    "hash": "2852905112065042941992107566038848248"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i32>::overflowing_abs",
    "hash": "1477237365815356085713072651344504404105"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i32>::overflowing_neg",
    "hash": "59507508293677696644318129912046143418"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i32>::reverse_bits",
    "hash": "889064833180042531217958764190123378554"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i32>::rotate_left",
    "hash": "122232217833247849829064844652587061763"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i32>::rotate_right",
    "hash": "22113534162410265766307994371643233137"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i32>::saturating_abs",
    "hash": "177501087774015448223383391540276585115"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i32>::saturating_mul",
    "hash": "151572531202969809694840861153809399641"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i32>::saturating_neg",
    "hash": "105460140454883550242764482340111568950"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i32>::saturating_pow",
    "hash": "447226719248655301417797182994157021189"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i32>::swap_bytes",
    "hash": "1476769817185808007912859996673233556608"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i32>::to_be",
    "hash": "61469938098736781707099160743009720545"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i32>::to_le",
    "hash": "942131675726518075916013556127342524035"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i32>::trailing_zeros",
    "hash": "119431112502299276157581796299355694859"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i32>::unchecked_mul",
    "hash": "132523823356753799532474124519488108024"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i32>::unsigned_abs",
    "hash": "107283678410216501528883321789672415777"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i32>::wrapping_abs",
    "hash": "789872372413367605515856605340327189960"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i32>::wrapping_neg",
    "hash": "1547473285261070790112518910858594978951"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i64>::abs",
    "hash": "74943782594588302495226289260305884156"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i64>::cast_unsigned",
    "hash": "61400842380764850672900664001556850518"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i64>::checked_abs",
    "hash": "174870536730658889862115373262469297545"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i64>::checked_mul",
    "hash": "50675755525470628755391953751201458033"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i64>::checked_neg",
    "hash": "102376860709637639085193986259590693156"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i64>::checked_pow",
    "hash": "148675213743342504008485053245029111151"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i64>::count_ones",
    "hash": "1781855662597640785217764920086653034818"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i64>::from_be",
    "hash": "26071873353657263139468995581336181996"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i64>::from_le",
    "hash": "37066319805492699421046526232446490463"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i64>::is_negative",
    "hash": "880629697143153072715712923798794958134"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i64>::is_positive",
    "hash": "144240832346402354285415858015314236130"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i64>::isolate_least_significant_one",
    "hash": "1813680411870110836113240120220731795898"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i64>::isolate_most_significant_one",
    "hash": "107125326582429720186944171869407890006"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i64>::leading_zeros",
    "hash": "73718509389174528756286540787087950575"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i64>::overflowing_abs",
    "hash": "158237596945502921972520735788115128491"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i64>::overflowing_neg",
    "hash": "447694618476655045814390505343590658008"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i64>::reverse_bits",
    "hash": "365561640457728030916132456860842306224"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i64>::rotate_left",
    "hash": "111361551381146438852577697283142028948"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i64>::rotate_right",
    "hash": "915118010253934122916388617806574870127"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i64>::saturating_abs",
    "hash": "99768403239406200417099504375097703823"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i64>::saturating_mul",
    "hash": "98959305566347611638933779297003496848"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i64>::saturating_neg",
    "hash": "82898446014365585002799246577935901145"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i64>::saturating_pow",
    "hash": "39236498504746724168289593700737287461"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i64>::swap_bytes",
    "hash": "1044566760812264361714549091121412450957"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i64>::to_be",
    "hash": "138283723736436216117661750804920995421"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i64>::to_le",
    "hash": "1346368802718208023015570955913062324299"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i64>::trailing_zeros",
    "hash": "376585984694173196611307116138583824487"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i64>::unchecked_mul",
    "hash": "421545252601257089217361305880633797069"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i64>::unsigned_abs",
    "hash": "88898997486660717815795154706583073136"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i64>::wrapping_abs",
    "hash": "51816641552943719731142787584841031649"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i64>::wrapping_neg",
    "hash": "36087710239356619484545042809346714242"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i8>::abs",
    "hash": "1142818011401116270711932474597401996673"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i8>::cast_unsigned",
    "hash": "97493380836366520533671920162698363387"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i8>::checked_abs",
    "hash": "1600245419933982298210195776247067480908"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i8>::checked_mul",
    "hash": "314643684408242463005497413545616646"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i8>::checked_neg",
    "hash": "117485247734500097973338465854976151792"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i8>::checked_pow",
    "hash": "117941207209936965067755632162696048646"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i8>::count_ones",
    "hash": "950355447271423943310888621668543841233"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i8>::from_be",
    "hash": "838121031749293105312162901989851604029"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i8>::from_le",
    "hash": "463786065945667671412628670025550686574"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i8>::is_negative",
    "hash": "154020015379050777484010274129164199455"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i8>::is_positive",
    "hash": "1546243511682103053917742195305411387859"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i8>::isolate_least_significant_one",
    "hash": "113945009404557748064309202710909265186"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i8>::isolate_most_significant_one",
    "hash": "142888406621890960533582880404075585638"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i8>::leading_zeros",
    "hash": "951748298229481948910918525637861241080"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i8>::overflowing_abs",
    "hash": "46059606068566328239094700944058395324"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i8>::overflowing_neg",
    "hash": "35935625669562800035842597468587698472"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i8>::reverse_bits",
    "hash": "131181068746614585398262461529280414041"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i8>::rotate_left",
    "hash": "62030084092707224273235416984479881340"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i8>::rotate_right",
    "hash": "267408069435713318912975304483246018778"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i8>::saturating_abs",
    "hash": "161509626344805586837145538844789922048"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i8>::saturating_mul",
    "hash": "1651308309452957867310097879792477123262"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i8>::saturating_neg",
    "hash": "141053659098979485847332265216596121995"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i8>::saturating_pow",
    "hash": "145655556925765271993855818980513187961"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i8>::swap_bytes",
    "hash": "1092164644414273692212060955540530201142"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i8>::to_be",
    "hash": "124700160275217060426219626815311495779"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i8>::to_le",
    "hash": "29959755913987616262534910513533142813"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i8>::trailing_zeros",
    "hash": "57744757830442699881395892741266652709"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i8>::unchecked_mul",
    "hash": "119297346720142470952658033143659262561"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i8>::unsigned_abs",
    "hash": "97105216231300805164304295370839661541"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i8>::wrapping_abs",
    "hash": "97325605255760867105872464436119809180"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i8>::wrapping_neg",
    "hash": "542885347815171633018086541524237459295"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<isize>::abs",
    "hash": "1497840865827435824111094498406620410644"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<isize>::cast_unsigned",
    "hash": "441268928555254876012658932275671068582"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<isize>::checked_abs",
    "hash": "35217366908954871995254744493283058653"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<isize>::checked_mul",
    "hash": "94259779965532333401274687036178412325"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<isize>::checked_neg",
    "hash": "1776693766655039337516663613594358145423"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<isize>::checked_pow",
    "hash": "453786996680619228714299431344271915814"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<isize>::count_ones",
    "hash": "394355119650994539712086587028886980287"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<isize>::from_be",
    "hash": "28750014564437238909461229243147999062"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<isize>::from_le",
    "hash": "16536801065539443446876970204091473849"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<isize>::is_negative",
    "hash": "1265846483191010675917127115576612296033"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<isize>::is_positive",
    "hash": "128457758845095139889907529412981377313"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<isize>::isolate_least_significant_one",
    "hash": "997340209533824716615418007606315574875"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<isize>::isolate_most_significant_one",
    "hash": "118667309813975089699001114882298819262"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<isize>::leading_zeros",
    "hash": "742573453291329950313803038288637510516"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<isize>::overflowing_abs",
    "hash": "117394050165227292544565410141204937027"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<isize>::overflowing_neg",
    "hash": "87185438323371956916217755493649170497"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<isize>::reverse_bits",
    "hash": "1818503727481623097205247047355877286"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<isize>::rotate_left",
    "hash": "774246945958943605013003554025752805104"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<isize>::rotate_right",
    "hash": "33939533292446293473092114682526741829"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<isize>::saturating_abs",
    "hash": "5353570109821845848158468611198767196"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<isize>::saturating_mul",
    "hash": "141313753867670741531284737403556685072"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<isize>::saturating_neg",
    "hash": "659970361331044789317463850190741454729"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<isize>::saturating_pow",
    "hash": "64347286737523573118141382092527364253"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<isize>::swap_bytes",
    "hash": "183538991004633160685295800361164323655"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<isize>::to_be",
    "hash": "24329365122080849804548528441938939092"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<isize>::to_le",
    "hash": "179308599455176492442813001171210196166"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<isize>::trailing_zeros",
    "hash": "44544216440174141613671822333419608427"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<isize>::unchecked_mul",
    "hash": "56853112465566970096799553071139894591"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<isize>::unsigned_abs",
    "hash": "1797217690616313902616535775095745244197"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<isize>::wrapping_abs",
    "hash": "1154877457776301477517551825620789975128"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<isize>::wrapping_neg",
    "hash": "84329610930063100407261599135540733014"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u128>::cast_signed",
    "hash": "166254108824880858302983447190665445019"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u128>::checked_add",
    "hash": "9137644464846575014321803551466166166"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u128>::checked_mul",
    "hash": "111821395864708027527579855164952498781"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u128>::checked_next_power_of_two",
    "hash": "427629974441323240817880339995234516136"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u128>::checked_pow",
    "hash": "35499509198266463789479779050112780933"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u128>::count_ones",
    "hash": "42856682505005519381258486531757883037"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u128>::div_ceil",
    "hash": "349437220107363678512722177888209406712"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u128>::from_be",
    "hash": "134514838004271418418159222107037057167"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u128>::from_le",
    "hash": "1826469335164703986615418186855200220397"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u128>::ilog10",
    "hash": "29120726856415663524670613005230639169"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u128>::ilog2",
    "hash": "98658082459147677857995394903228126941"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u128>::is_power_of_two",
    "hash": "947570341812054314416391494976738360604"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u128>::isolate_least_significant_one",
    "hash": "1726411233513773639310991943895579574693"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u128>::isolate_most_significant_one",
    "hash": "1659720957877253673617279355472411085128"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u128>::isqrt",
    "hash": "125867638856580285817066699973133674160"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u128>::leading_zeros",
    "hash": "83267453251169454905459788446578040821"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u128>::midpoint",
    "hash": "485796679245203826611846965712456817851"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u128>::reverse_bits",
    "hash": "809361822628839786813737766004290999461"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u128>::rotate_left",
    "hash": "43272156458592726835466263338406488734"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u128>::rotate_right",
    "hash": "11153921311078760591290490097055779932"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u128>::saturating_add",
    "hash": "14883379096298317859822321831515017984"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u128>::saturating_mul",
    "hash": "1582453754348943814115639316227633376645"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u128>::saturating_pow",
    "hash": "55908299328678273694204133583328881909"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u128>::swap_bytes",
    "hash": "1402639352854009081112283893545686670769"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u128>::to_be",
    "hash": "17845763952717194022490176011048423557"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u128>::to_le",
    "hash": "386332522332787612011016237216822141881"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u128>::trailing_zeros",
    "hash": "10610335283977679492547597615810983447"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u128>::unchecked_add",
    "hash": "1281079833971065039618278436889260713417"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u128>::unchecked_mul",
    "hash": "138680970806589563549512885048147569938"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u16>::cast_signed",
    "hash": "6827669598308947099827613458183279424"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u16>::checked_add",
    "hash": "61105205133020307363265008020744033746"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u16>::checked_mul",
    "hash": "644798690289533214413783076505918419627"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u16>::checked_next_power_of_two",
    "hash": "93647235694104869233274507424167958261"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u16>::checked_pow",
    "hash": "1387633993014006216517684464332865344743"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u16>::count_ones",
    "hash": "1603800896345014366615426078815206851552"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u16>::div_ceil",
    "hash": "12122721705002437887109824955460796938"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u16>::from_be",
    "hash": "1528276741824509344418241841327736412038"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u16>::from_le",
    "hash": "99286701544223557523106143776608567074"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u16>::ilog10",
    "hash": "22904195212907545986361459154242537251"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u16>::ilog2",
    "hash": "22582157362257515614743851162740933340"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u16>::is_power_of_two",
    "hash": "637037984887914995316725897501508467904"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u16>::isolate_least_significant_one",
    "hash": "246302491323330073916561751655731578923"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u16>::isolate_most_significant_one",
    "hash": "116422506430754821722215067243916425355"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u16>::isqrt",
    "hash": "1203054284893772889410983740782545412856"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u16>::leading_zeros",
    "hash": "584053069847224660312110202991685963924"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u16>::midpoint",
    "hash": "166255069507491438310612894451192294059"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u16>::reverse_bits",
    "hash": "132180180130090676265721983920443463966"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u16>::rotate_left",
    "hash": "225119666802941384917986714429234646988"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u16>::rotate_right",
    "hash": "824468305338642218210187999615865416937"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u16>::saturating_add",
    "hash": "1393932385941057185314006611576780634918"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u16>::saturating_mul",
    "hash": "14557068409600082668727734810286237217"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u16>::saturating_pow",
    "hash": "1811579512489402430610579495641480733826"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u16>::swap_bytes",
    "hash": "1167987143463154328318254773814564667036"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u16>::to_be",
    "hash": "1003865391765363607210756042253275480032"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u16>::to_le",
    "hash": "903207396834064266810615316536315706210"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u16>::trailing_zeros",
    "hash": "70155677653054804917249259953046295721"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u16>::unchecked_add",
    "hash": "162134813961312752602986380161443097765"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u16>::unchecked_mul",
    "hash": "83200280449644795726935755200139505309"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u32>::cast_signed",
    "hash": "1100211306611082701514216029970380973771"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u32>::checked_add",
    "hash": "853626436975635275313341559440558586292"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u32>::checked_mul",
    "hash": "120449723872962477153779651067598738879"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u32>::checked_next_power_of_two",
    "hash": "39850610430153359669130864197264775084"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u32>::checked_pow",
    "hash": "606839172307880232910940458110038963149"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u32>::count_ones",
    "hash": "1816202055589878837912258482623974741916"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u32>::div_ceil",
    "hash": "154786787960467646647936672559519197186"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u32>::from_be",
    "hash": "527927813495548755312972384872448890017"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u32>::from_le",
    "hash": "176227434953078573697916304467341979361"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u32>::ilog10",
    "hash": "2830435581104507596322521885669213948"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u32>::ilog2",
    "hash": "804732871927828162111539133090387460345"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u32>::is_power_of_two",
    "hash": "867302815337480581115225804753528701394"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u32>::isolate_least_significant_one",
    "hash": "17657100828106311581875299818907335538"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u32>::isolate_most_significant_one",
    "hash": "1243615472917898851518320571102701971278"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u32>::isqrt",
    "hash": "1579046016380046305911774991448908220854"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u32>::leading_zeros",
    "hash": "998206741811974655512478540503574020365"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u32>::midpoint",
    "hash": "138996128453301701976391559107331010113"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u32>::reverse_bits",
    "hash": "138580035183709892694552042437751209728"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u32>::rotate_left",
    "hash": "273845183341779184216785482207017381887"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u32>::rotate_right",
    "hash": "31724888165767074263462224965502348880"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u32>::saturating_add",
    "hash": "465191876486605029313713017342661373737"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u32>::saturating_mul",
    "hash": "152756730598863375291090922357568572390"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u32>::saturating_pow",
    "hash": "1688609843372803256412676300820594171554"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u32>::swap_bytes",
    "hash": "16379913787527569106715718535746389774"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u32>::to_be",
    "hash": "6880345607487484808980520653894587518"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u32>::to_le",
    "hash": "74902690788961920685505056726411049369"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u32>::trailing_zeros",
    "hash": "29964476120792758593262631152255964039"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u32>::unchecked_add",
    "hash": "52767346009159537163759883496673495154"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u32>::unchecked_mul",
    "hash": "797558808289580913717017474169762791025"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u64>::cast_signed",
    "hash": "98556182231531292649397445912990016264"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u64>::checked_add",
    "hash": "1693916629754614029716669369301830567690"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u64>::checked_mul",
    "hash": "140158181283429773819259036783301588505"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u64>::checked_next_power_of_two",
    "hash": "401666543056561114713186399802279100357"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u64>::checked_pow",
    "hash": "1728027570931343023218048620578939210444"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u64>::count_ones",
    "hash": "129121171395200889954387366965288043193"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u64>::div_ceil",
    "hash": "563745561685130179417378254249267672448"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u64>::from_be",
    "hash": "94299694324233839658360214785029685001"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u64>::from_le",
    "hash": "479744774569337127015006936460392104508"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u64>::ilog10",
    "hash": "25182688384539420013607163022734998294"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u64>::ilog2",
    "hash": "33698483241487443027124837903334122088"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u64>::is_power_of_two",
    "hash": "1030734002467948879915320554738995212454"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u64>::isolate_least_significant_one",
    "hash": "157319124652037661714718709733173180908"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u64>::isolate_most_significant_one",
    "hash": "24150803607374061066683621835146112442"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u64>::isqrt",
    "hash": "78568336570105842547357485507434990612"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u64>::leading_zeros",
    "hash": "113800541170508183043193356198207746557"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u64>::midpoint",
    "hash": "10337552390796904672319704663736353574"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u64>::reverse_bits",
    "hash": "324977391978232679610393457636043702817"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u64>::rotate_left",
    "hash": "143381832321552948119456883341618699306"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u64>::rotate_right",
    "hash": "104894854525728727495034440943911972744"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u64>::saturating_add",
    "hash": "1795678858824512551211822688718978287337"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u64>::saturating_mul",
    "hash": "46957765264058382669377770885827745344"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u64>::saturating_pow",
    "hash": "125542809544223937712259409549875861588"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u64>::swap_bytes",
    "hash": "1361996920360011009515391696131036471919"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u64>::to_be",
    "hash": "120642743210965932551146478087369723096"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u64>::to_le",
    "hash": "53720117662205221425576743957705010200"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u64>::trailing_zeros",
    "hash": "151278338354596691777667384263959189102"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u64>::unchecked_add",
    "hash": "126371376107529302562601559499724951226"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u64>::unchecked_mul",
    "hash": "104712934378736980918347933833765585963"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u8>::cast_signed",
    "hash": "529712712877441562013747985801776052768"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u8>::checked_add",
    "hash": "1805490029078142297412002551956692492041"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u8>::checked_mul",
    "hash": "75288892428862979306844267743389232907"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u8>::checked_next_power_of_two",
    "hash": "4913597844852832876294653875317424018"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u8>::checked_pow",
    "hash": "1816702927646737282913647635679771259200"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u8>::count_ones",
    "hash": "17395199653547553308388433191030601457"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u8>::div_ceil",
    "hash": "1698570565195980786817876492747482007136"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u8>::from_be",
    "hash": "71842273369334983794326893000768245936"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u8>::from_le",
    "hash": "25582772930091304572545211792814203765"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u8>::ilog10",
    "hash": "74700192937904641195766113253847173999"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u8>::ilog2",
    "hash": "877068462736194358711112677516690235028"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u8>::is_power_of_two",
    "hash": "11706538849814799216849881920348892330"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u8>::isolate_least_significant_one",
    "hash": "908924001231588281045838801527270561"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u8>::isolate_most_significant_one",
    "hash": "29034820948166856125249952196439886115"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u8>::isqrt",
    "hash": "60897251022643974479246766286676396405"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u8>::leading_zeros",
    "hash": "1000091978697872313911322954860004833985"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u8>::midpoint",
    "hash": "34388524959256932357198273062439675243"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u8>::reverse_bits",
    "hash": "638152122319023940716586581509983506262"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u8>::rotate_left",
    "hash": "179129734843347927586233224348049380008"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u8>::rotate_right",
    "hash": "1800528355573899920915078541472272225448"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u8>::saturating_add",
    "hash": "9110032477905501515129685462096674681"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u8>::saturating_mul",
    "hash": "52813719750766138945668013806733870953"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u8>::saturating_pow",
    "hash": "9254776472341972029245413304156779390"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u8>::swap_bytes",
    "hash": "84448482422811128607731842038405274824"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u8>::to_be",
    "hash": "11159536580669847633564334565875571884"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u8>::to_le",
    "hash": "169794723927004039716026859713408335262"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u8>::trailing_zeros",
    "hash": "57740263817307618734483744649348712703"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u8>::unchecked_add",
    "hash": "170001313099411287084003974656791009056"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u8>::unchecked_mul",
    "hash": "107555943341649872475115351317444721702"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<usize>::cast_signed",
    "hash": "1171048133442879484314720740046254963196"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<usize>::checked_add",
    "hash": "990264035559056358014061066637034785361"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<usize>::checked_mul",
    "hash": "296949756362136032810822934271850427694"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<usize>::checked_next_power_of_two",
    "hash": "52661851532751211958665189217822722050"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<usize>::checked_pow",
    "hash": "7989901258712078761324943392555728975"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<usize>::count_ones",
    "hash": "980736760623954779110143430288921062335"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<usize>::div_ceil",
    "hash": "167111671049494080271451413238273733178"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<usize>::from_be",
    "hash": "1640473678383275898410758401954202544420"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<usize>::from_le",
    "hash": "1461307754481270085411867901100831452334"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<usize>::ilog10",
    "hash": "650616328548241586715784153537860778467"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<usize>::ilog2",
    "hash": "77998170374190629455861399969371096041"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<usize>::is_power_of_two",
    "hash": "55864063720174570014432367107882378889"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<usize>::isolate_least_significant_one",
    "hash": "14634740200133529988394134238572443652"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<usize>::isolate_most_significant_one",
    "hash": "346933583065580858318302660413078739955"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<usize>::isqrt",
    "hash": "632422408501604648513176804825523120081"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<usize>::leading_zeros",
    "hash": "169552790667089619279212848647780148045"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<usize>::midpoint",
    "hash": "79227507027626943255052975302698748846"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<usize>::reverse_bits",
    "hash": "53735287177859274816747312620227376505"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<usize>::rotate_left",
    "hash": "42640260904361386567941841527785223893"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<usize>::rotate_right",
    "hash": "128909200000421170056654180187842503295"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<usize>::saturating_add",
    "hash": "24574599490137427015266499910415528462"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<usize>::saturating_mul",
    "hash": "106757266903012820143293177514837344995"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<usize>::saturating_pow",
    "hash": "1120613162146592195313029132506439659228"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<usize>::swap_bytes",
    "hash": "1350751569603402717316677343621750747825"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<usize>::to_be",
    "hash": "177658367573686265813500441877203844760"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<usize>::to_le",
    "hash": "1004299126184844329714319689955039257045"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<usize>::trailing_zeros",
    "hash": "14305549411655904864706682211521885086"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<usize>::unchecked_add",
    "hash": "113365207280437669595928227969941050193"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<usize>::unchecked_mul",
    "hash": "112109707487274993463504877130087217838"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::check_mul_i128_edge_neg",
    "hash": "199635937584089803714688635297836864636",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::check_mul_i128_edge_pos",
    "hash": "65276098222801219685816676399185044110",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::check_mul_i128_large_neg",
    "hash": "176120301078688077741081782510263871344",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::check_mul_i128_large_pos",
    "hash": "855272667528060351712248421250153204317",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::check_mul_i128_small",
    "hash": "58946979287660314088451411796217875140",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::check_mul_i32_edge_neg",
    "hash": "6201439281452021386909723630424368761",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::check_mul_i32_edge_pos",
    "hash": "11898556398846918009430205016157862841",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::check_mul_i32_large_neg",
    "hash": "18576204075913447669608484085668521880",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::check_mul_i32_large_pos",
    "hash": "1599993335823027912512932406951228351376",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::check_mul_i32_small",
    "hash": "15194152152383985763476050925378678580",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::check_mul_i64_edge_neg",
    "hash": "520134421732126511010675021323442792928",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::check_mul_i64_edge_pos",
    "hash": "134186459973977666158089707227445832920",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::check_mul_i64_large_neg",
    "hash": "10030200541083995327574048232380027247",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::check_mul_i64_large_pos",
    "hash": "86721077787234593313058719256340057476",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::check_mul_i64_small",
    "hash": "162370417554717300958268419726251856063",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::check_mul_isize_edge_neg",
    "hash": "110967734473045029451118902262890987825",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::check_mul_isize_edge_pos",
    "hash": "70043334172006174751674329484673506284",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::check_mul_isize_large_neg",
    "hash": "11234211656077380878001771571418399544",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::check_mul_isize_large_pos",
    "hash": "13698418200991815132363829863892263514",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::check_mul_isize_small",
    "hash": "77538682586847982011364100772079194120",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::check_mul_u128_edge",
    "hash": "119130333340561043906869586961545959811",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::check_mul_u128_large",
    "hash": "319668556698783057113125820597777568260",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::check_mul_u128_small",
    "hash": "62727013626807451238452242230151654819",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::check_mul_u32_edge",
    "hash": "114805257674508863312444999378734693244",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::check_mul_u32_large",
    "hash": "124387243605111933224709840820762614750",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::check_mul_u32_small",
    "hash": "1071681679661509967617488412226631324766",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::check_mul_u64_edge",
    "hash": "131507857521761976107979140945058819242",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::check_mul_u64_large",
    "hash": "112436197757243473729837767850222921158",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::check_mul_u64_small",
    "hash": "85920341654129368895664196028249523735",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::check_mul_usize_edge",
    "hash": "13630567175623740706992548416095822217",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::check_mul_usize_large",
    "hash": "63076207460835645579217199236507824105",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::check_mul_usize_small",
    "hash": "169958958221077843744032951533810052754",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_clamp_for_128",
    "hash": "696589791201239490217115222885415573457",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_clamp_for_16",
    "hash": "1732209360596942027815677054850189705878",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_clamp_for_32",
    "hash": "145898264709348846342539126802303496558",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_clamp_for_64",
    "hash": "765098100354770123612187902145555006046",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_clamp_for_i8",
    "hash": "980050719217697460516344817247004637339",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_clamp_for_isize",
    "hash": "6551569080203737233643956953380364891",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_clamp_for_u128",
    "hash": "3540723101795537312258933131231878889",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_clamp_for_u16",
    "hash": "65883506624074279117059899196498887570",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_clamp_for_u32",
    "hash": "1165512414791568234817381535143429291378",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_clamp_for_u64",
    "hash": "123251621447176566255682006503339233272",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_clamp_for_u8",
    "hash": "1499985647989093610016630692643473162363",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_clamp_for_usize",
    "hash": "496635628826221912412167099367798721203",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_clamp_panic_for_128",
    "hash": "331283625751254090813755204945428064064",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_clamp_panic_for_16",
    "hash": "245429027204915117214865677292175412197",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_clamp_panic_for_32",
    "hash": "1228533477029190226916884120787877265914",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_clamp_panic_for_64",
    "hash": "130410040924670488512637842444349098524",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_clamp_panic_for_i8",
    "hash": "149774090130082478185879138229589100894",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_clamp_panic_for_isize",
    "hash": "1321364969251009629615689457967264052096",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_clamp_panic_for_u128",
    "hash": "180916450021261126231786413993270959252",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_clamp_panic_for_u16",
    "hash": "8598375409612788361310064798935577151",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_clamp_panic_for_u32",
    "hash": "1002183397652543973912508140670765895885",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_clamp_panic_for_u64",
    "hash": "758600361688464685311421918473113150406",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_clamp_panic_for_u8",
    "hash": "1484607843577193991416328435947129448181",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_clamp_panic_for_usize",
    "hash": "690300415742795211713001489242522523976",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_cmp_for_i128",
    "hash": "171602560502813700918541631830610901910",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_cmp_for_i16",
    "hash": "709841195968631465111645189713636405120",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_cmp_for_i32",
    "hash": "876165373641999284813584835101943932573",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_cmp_for_i64",
    "hash": "179048859016107488845645093824519383109",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_cmp_for_i8",
    "hash": "48454321201879367509137379907559104893",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_cmp_for_isize",
    "hash": "58970843558256445613125646072095163242",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_cmp_for_u128",
    "hash": "1620792998246326460518352796310350345470",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_cmp_for_u16",
    "hash": "963130695582906220614128067839225404218",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_cmp_for_u32",
    "hash": "76405854881770126747866801063147677780",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_cmp_for_u64",
    "hash": "1192836152912340199729513595150993442",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_cmp_for_u8",
    "hash": "138742408411770792412940459591925718458",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_cmp_for_usize",
    "hash": "102292901466821942735010997332886363913",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_max_for_i128",
    "hash": "1313232938164326960718431070527901128619",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_max_for_i16",
    "hash": "1514946787950623636713985478693098785863",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_max_for_i32",
    "hash": "53696352894349980836709011177906141099",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_max_for_i64",
    "hash": "24077786335059206454654770025465993226",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_max_for_i8",
    "hash": "15287194801172808537491086842278516937",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_max_for_isize",
    "hash": "54200106179398504311589597154165812532",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_max_for_u128",
    "hash": "121169510736583581477154103100575905579",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_max_for_u16",
    "hash": "12478515648163357268458062051151179809",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_max_for_u32",
    "hash": "577740709161892102711291363165515217063",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_max_for_u64",
    "hash": "197289357832816542318413809314993543378",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_max_for_u8",
    "hash": "17832642477898202118823339792865602565",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_max_for_usize",
    "hash": "244060778041781239516059461994284782314",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_min_for_i128",
    "hash": "27143327978925246279389507032242398235",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_min_for_i16",
    "hash": "168900742502298419927644938091279427483",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_min_for_i32",
    "hash": "159138904931157539305088159328707862888",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_min_for_i64",
    "hash": "37198170731198617303766421210899023658",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_min_for_i8",
    "hash": "925666689827147486316589083860652531980",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_min_for_isize",
    "hash": "1118296560459739970910539536377155039119",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_min_for_u128",
    "hash": "776295538056749171516178616200060652302",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_min_for_u16",
    "hash": "627171962261353792113709808948137451507",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_min_for_u32",
    "hash": "149543794333080299977814010180547684",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_min_for_u64",
    "hash": "1782987794237393632714373533813103818379",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_min_for_u8",
    "hash": "957038881909194141713996023092185926065",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_min_for_usize",
    "hash": "9046533444502499891468025278647018016",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_mul_for_i16",
    "hash": "166290362669911881462850629293875646175",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_mul_for_i8",
    "hash": "161696871995573474842663406382002601797",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_mul_for_u16",
    "hash": "157480341412514987487169079457221185968",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_mul_for_u8",
    "hash": "30676904443848620532128811582567599268",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_new_unchecked_for_128",
    "hash": "111823965925400256346673723375611418773",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_new_unchecked_for_16",
    "hash": "57817106200364795716687389429490421916",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_new_unchecked_for_32",
    "hash": "1444563538815844291912900556631268340711",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_new_unchecked_for_64",
    "hash": "145696145489837912322598565253019362335",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_new_unchecked_for_i8",
    "hash": "758970127450832711712980906665861905583",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_new_unchecked_for_isize",
    "hash": "1032334883430711099318357368064015120102",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_new_unchecked_for_u128",
    "hash": "114227113218568552775771536086325516343",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_new_unchecked_for_u16",
    "hash": "800783131654730056115273772208589968495",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_new_unchecked_for_u32",
    "hash": "440650114246587385039294480306892909",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_new_unchecked_for_u64",
    "hash": "525424813797222241510418586376615607577",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_new_unchecked_for_u8",
    "hash": "1589700077731176770815132359667464801930",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_new_unchecked_for_usize",
    "hash": "776696460693720054913802362790795303606",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_unchecked_add_for_u128",
    "hash": "841985819128141130213405527596256536557",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_unchecked_add_for_u16",
    "hash": "1289225565847334643567539607755925295",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_unchecked_add_for_u32",
    "hash": "76446925156566879067606920735957455321",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_unchecked_add_for_u64",
    "hash": "96820079675901953559367301733945812173",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_unchecked_add_for_u8",
    "hash": "165886143405499566407592329894113761751",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_unchecked_add_for_usize",
    "hash": "520594380095303551210672398947849044071",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/num/overflow_panic.rs",
    "func": "num::overflow_panic::add",
    "hash": "130365828082195443957350951624381167426"
  },
  {
    "file": "core/src/num/overflow_panic.rs",
    "func": "num::overflow_panic::div",
    "hash": "109813899317130890187695361644214966689"
  },
  {
    "file": "core/src/num/overflow_panic.rs",
    "func": "num::overflow_panic::mul",
    "hash": "12881049707468497479651454461380736245"
  },
  {
    "file": "core/src/num/overflow_panic.rs",
    "func": "num::overflow_panic::neg",
    "hash": "795071366251887837112840784254221627715"
  },
  {
    "file": "core/src/num/overflow_panic.rs",
    "func": "num::overflow_panic::rem",
    "hash": "10319999612536255589615040493287291697"
  },
  {
    "file": "core/src/num/overflow_panic.rs",
    "func": "num::overflow_panic::shl",
    "hash": "101317841243838335489506744834647290960"
  },
  {
    "file": "core/src/num/overflow_panic.rs",
    "func": "num::overflow_panic::shr",
    "hash": "119879749559322347697949237217642916925"
  },
  {
    "file": "core/src/num/overflow_panic.rs",
    "func": "num::overflow_panic::sub",
    "hash": "6629222568075366312540890375642523634"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i128> as ops::arith::Add>::add",
    "hash": "183590156174330048381696927775200951239"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i128> as ops::arith::Div>::div",
    "hash": "412215270258039953214028878988030179880"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i128> as ops::arith::Mul>::mul",
    "hash": "1401219745008565376716939066541554569001"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i128> as ops::arith::Neg>::neg",
    "hash": "165414024169465317896086257078430814442"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i128> as ops::arith::Rem>::rem",
    "hash": "1622709231684798371314491166201248257179"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i128> as ops::arith::Sub>::sub",
    "hash": "113359342882612037008514837981794457813"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i128> as ops::bit::BitAnd>::bitand",
    "hash": "1298095825711321812912262908240293476576"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i128> as ops::bit::BitOr>::bitor",
    "hash": "32488360010105333817833336881483923987"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i128> as ops::bit::BitXor>::bitxor",
    "hash": "178909233374679857384467754598516926140"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i128> as ops::bit::Not>::not",
    "hash": "63183652503646393298950314982771340571"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i16> as ops::arith::Add>::add",
    "hash": "75087153608348964308480228962084763339"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i16> as ops::arith::Div>::div",
    "hash": "1365334641194591327118283386622001029953"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i16> as ops::arith::Mul>::mul",
    "hash": "1088825016239442290610259503818781836455"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i16> as ops::arith::Neg>::neg",
    "hash": "168585777142865648545100297283882441457"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i16> as ops::arith::Rem>::rem",
    "hash": "39315682881314762668584652864112805362"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i16> as ops::arith::Sub>::sub",
    "hash": "1484115069225047180310968842551139200798"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i16> as ops::bit::BitAnd>::bitand",
    "hash": "43031429235431385527366816953466032019"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i16> as ops::bit::BitOr>::bitor",
    "hash": "1354702142179248459712169869118172602998"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i16> as ops::bit::BitXor>::bitxor",
    "hash": "40579520120115527462529425284348521242"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i16> as ops::bit::Not>::not",
    "hash": "183852192666444518814704552924999473061"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i32> as ops::arith::Add>::add",
    "hash": "330336612773220793815543557844832902902"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i32> as ops::arith::Div>::div",
    "hash": "103668903399907433416481402253283642775"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i32> as ops::arith::Mul>::mul",
    "hash": "7314240374789838288685874232825288580"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i32> as ops::arith::Neg>::neg",
    "hash": "975933090301349917712220864077823789872"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i32> as ops::arith::Rem>::rem",
    "hash": "142048403379339402008093958316638705298"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i32> as ops::arith::Sub>::sub",
    "hash": "1079807479252458793812580869619843376072"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i32> as ops::bit::BitAnd>::bitand",
    "hash": "1012796482879791629215338009334020948794"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i32> as ops::bit::BitOr>::bitor",
    "hash": "164761514492147114771425523012666857014"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i32> as ops::bit::BitXor>::bitxor",
    "hash": "183004162881605344597301411450036665863"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i32> as ops::bit::Not>::not",
    "hash": "323115587293288900518021263352625619944"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i64> as ops::arith::Add>::add",
    "hash": "550416273309730931513097551014199085029"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i64> as ops::arith::Div>::div",
    "hash": "690434302559213866317385173055378287337"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i64> as ops::arith::Mul>::mul",
    "hash": "123609705124002124798881388675767972551"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i64> as ops::arith::Neg>::neg",
    "hash": "240283950797614992377818409209016148"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i64> as ops::arith::Rem>::rem",
    "hash": "143166495109256081618970665583677219628"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i64> as ops::arith::Sub>::sub",
    "hash": "137385027083082766904646321168264351078"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i64> as ops::bit::BitAnd>::bitand",
    "hash": "1382987036243149614110948658223736348469"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i64> as ops::bit::BitOr>::bitor",
    "hash": "149327013007056634488707174589922112246"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i64> as ops::bit::BitXor>::bitxor",
    "hash": "11114065979729996842749687124741135759"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i64> as ops::bit::Not>::not",
    "hash": "1715835847979424714918105203225750383153"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i8> as ops::arith::Add>::add",
    "hash": "747093342250312762113306555814634369485"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i8> as ops::arith::Div>::div",
    "hash": "1249335027378615987910907240703878755375"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i8> as ops::arith::Mul>::mul",
    "hash": "148859316858601099482391600361164831265"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i8> as ops::arith::Neg>::neg",
    "hash": "41821635789185966612996256809404711644"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i8> as ops::arith::Rem>::rem",
    "hash": "1739667967002610533418243951356046993278"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i8> as ops::arith::Sub>::sub",
    "hash": "1792574107373245176112067232426922659596"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i8> as ops::bit::BitAnd>::bitand",
    "hash": "33276309949879590417792704408033258517"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i8> as ops::bit::BitOr>::bitor",
    "hash": "1365583795031292678611323709418475848338"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i8> as ops::bit::BitXor>::bitxor",
    "hash": "15548839964295098642284602694613270887"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i8> as ops::bit::Not>::not",
    "hash": "1267833916188822476418364479005179095706"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<isize> as ops::arith::Add>::add",
    "hash": "1627936722310721957413761905618278577259"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<isize> as ops::arith::Div>::div",
    "hash": "66399644741097144529446576496467826237"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<isize> as ops::arith::Mul>::mul",
    "hash": "140568271871127224339724700004110885409"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<isize> as ops::arith::Neg>::neg",
    "hash": "409056970560236139914963426078232444481"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<isize> as ops::arith::Rem>::rem",
    "hash": "1807232417057275413114715010722424043195"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<isize> as ops::arith::Sub>::sub",
    "hash": "784973899599800879617152597844510582907"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<isize> as ops::bit::BitAnd>::bitand",
    "hash": "1637830613176564135057339681510925441"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<isize> as ops::bit::BitOr>::bitor",
    "hash": "135098086940738282351422559537739970555"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<isize> as ops::bit::BitXor>::bitxor",
    "hash": "122298854308013747942930536166916373606"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<isize> as ops::bit::Not>::not",
    "hash": "130389011307969459851885341372174059034"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u128> as ops::arith::Add>::add",
    "hash": "92517441177067260941990598754632407165"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u128> as ops::arith::Div>::div",
    "hash": "476211304581773381417709925666901736033"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u128> as ops::arith::Mul>::mul",
    "hash": "1342055378090908673010980713902009291048"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u128> as ops::arith::Rem>::rem",
    "hash": "148879931486215286417227452161358175999"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u128> as ops::arith::Sub>::sub",
    "hash": "28740154870128893131521124890411003839"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u128> as ops::bit::BitAnd>::bitand",
    "hash": "535132892339309001515648287647874316318"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u128> as ops::bit::BitOr>::bitor",
    "hash": "75289907595592608753100436494856915323"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u128> as ops::bit::BitXor>::bitxor",
    "hash": "367423118871703096814105385427803538308"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u128> as ops::bit::Not>::not",
    "hash": "57914171780273020559313027297101447586"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u16> as ops::arith::Add>::add",
    "hash": "14299259145972595695427454457584486149"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u16> as ops::arith::Div>::div",
    "hash": "93867602963504346799189872985761048960"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u16> as ops::arith::Mul>::mul",
    "hash": "161278313474416444123226025654309945779"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u16> as ops::arith::Rem>::rem",
    "hash": "46460748422591218206893633440464969760"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u16> as ops::arith::Sub>::sub",
    "hash": "9681269474718201175490890282916775471"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u16> as ops::bit::BitAnd>::bitand",
    "hash": "129130118888745546351501289866310761298"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u16> as ops::bit::BitOr>::bitor",
    "hash": "62185699617904060469724891281662638812"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u16> as ops::bit::BitXor>::bitxor",
    "hash": "891477516991707064511290885812817391742"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u16> as ops::bit::Not>::not",
    "hash": "11836543199106975012611021204336871007"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u32> as ops::arith::Add>::add",
    "hash": "2973373928791300516106566145652808885"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u32> as ops::arith::Div>::div",
    "hash": "39606209041014240392765733458097750924"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u32> as ops::arith::Mul>::mul",
    "hash": "28906387220247136405080006522996810116"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u32> as ops::arith::Rem>::rem",
    "hash": "30954398491749103345129744452583181907"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u32> as ops::arith::Sub>::sub",
    "hash": "961190824647854034210819250159842350864"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u32> as ops::bit::BitAnd>::bitand",
    "hash": "13059152581088510009105419293288139824"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u32> as ops::bit::BitOr>::bitor",
    "hash": "1776319849634509833313752728939922182024"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u32> as ops::bit::BitXor>::bitxor",
    "hash": "33968273697556564541091055691248890691"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u32> as ops::bit::Not>::not",
    "hash": "94818455623331787753702049969889825076"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u64> as ops::arith::Add>::add",
    "hash": "346382222111069948716501491128906953205"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u64> as ops::arith::Div>::div",
    "hash": "18878032453143725161232362002847353504"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u64> as ops::arith::Mul>::mul",
    "hash": "926750136136922003317595659621537643900"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u64> as ops::arith::Rem>::rem",
    "hash": "1731354129821211526710335381711973177070"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u64> as ops::arith::Sub>::sub",
    "hash": "415089747131583958215889273020533367619"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u64> as ops::bit::BitAnd>::bitand",
    "hash": "127610785778275057027737012200415705854"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u64> as ops::bit::BitOr>::bitor",
    "hash": "1431557762847308238110041596149012798365"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u64> as ops::bit::BitXor>::bitxor",
    "hash": "1133888369211574112111287754020356471899"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u64> as ops::bit::Not>::not",
    "hash": "149350204779332971213731358064769859131"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u8> as ops::arith::Add>::add",
    "hash": "807634276763843800712558306211344006060"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u8> as ops::arith::Div>::div",
    "hash": "11744378506006468427206361556336472668"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u8> as ops::arith::Mul>::mul",
    "hash": "653281299371703684911919027675611583870"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u8> as ops::arith::Rem>::rem",
    "hash": "1608779325743571714917225757045860228666"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u8> as ops::arith::Sub>::sub",
    "hash": "142788201139877770768645865828599652689"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u8> as ops::bit::BitAnd>::bitand",
    "hash": "25849189206653599498565717824429170206"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u8> as ops::bit::BitOr>::bitor",
    "hash": "171952322573091726451212661007115824652"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u8> as ops::bit::BitXor>::bitxor",
    "hash": "67817839304306493866292027996134191512"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u8> as ops::bit::Not>::not",
    "hash": "145468552118253909345471833745543949925"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<usize> as ops::arith::Add>::add",
    "hash": "78986557166603612252422797509953463980"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<usize> as ops::arith::Div>::div",
    "hash": "308119571658434800311579623667078393029"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<usize> as ops::arith::Mul>::mul",
    "hash": "233358915303341177615447734481219373741"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<usize> as ops::arith::Rem>::rem",
    "hash": "32935679041939351943612102752402265591"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<usize> as ops::arith::Sub>::sub",
    "hash": "102667115846816731088364813805345240791"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<usize> as ops::bit::BitAnd>::bitand",
    "hash": "14876853536837784481886979704887962413"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<usize> as ops::bit::BitOr>::bitor",
    "hash": "69428029990387648273983490392990917680"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<usize> as ops::bit::BitXor>::bitxor",
    "hash": "778630326747840145112067318199549597592"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<usize> as ops::bit::Not>::not",
    "hash": "102652640678776784429256409302301212193"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i128>::abs",
    "hash": "1522009771965388114810225665393153962808"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i128>::count_ones",
    "hash": "1064694040202805562914161725774660995760"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i128>::count_zeros",
    "hash": "98363787561753998653816461798567744905"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i128>::from_be",
    "hash": "1152670930174153892944097838262700789"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i128>::from_le",
    "hash": "20484377461589906012744812858607690301"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i128>::is_negative",
    "hash": "674316058050561755513183655660800009097"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i128>::is_positive",
    "hash": "156470326416412829156167683305564172072"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i128>::leading_zeros",
    "hash": "842816096694279144010928201263482562676"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i128>::pow",
    "hash": "1806179137194336478095106972787887429"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i128>::reverse_bits",
    "hash": "1215821127926493121416459546061379185390"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i128>::rotate_left",
    "hash": "110071835568604877616118839399941603491"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i128>::rotate_right",
    "hash": "1077751884664739199913432842184983027940"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i128>::signum",
    "hash": "976136120669705277712270773922792697689"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i128>::swap_bytes",
    "hash": "61841527277311872847935866180766556808"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i128>::to_be",
    "hash": "16560168043556318775073357071982876501"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i128>::to_le",
    "hash": "12285190578997032241226453687421445122"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i128>::trailing_zeros",
    "hash": "1390612056242930860414728485849964744475"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i16>::abs",
    "hash": "1626160973417167633610142784253667398652"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i16>::count_ones",
    "hash": "20715971769210285778153486463524064484"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i16>::count_zeros",
    "hash": "1593137004588357500410252749500144445785"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i16>::from_be",
    "hash": "867714303375519484912909136174709719311"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i16>::from_le",
    "hash": "435252305261333944616343829572382080684"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i16>::is_negative",
    "hash": "799498473240760247214435499682035426282"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i16>::is_positive",
    "hash": "261425741390106468710347228058456660907"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i16>::leading_zeros",
    "hash": "1779547660145066108414091881260177539106"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i16>::pow",
    "hash": "14659639718499859036960450014751174379"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i16>::reverse_bits",
    "hash": "59020057239404413008285017323276181649"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i16>::rotate_left",
    "hash": "40995826544801974117000163259616125182"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i16>::rotate_right",
    "hash": "19743200720377830761626584841595522114"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i16>::signum",
    "hash": "63720757928532794122663403798368331935"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i16>::swap_bytes",
    "hash": "32226947646607172753506797266569775155"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i16>::to_be",
    "hash": "91464172673026442562036465073446352148"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i16>::to_le",
    "hash": "26872319335254011103637815207668043179"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i16>::trailing_zeros",
    "hash": "17024879550176157106953059919258174735"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i32>::abs",
    "hash": "1303385538565981492211852166104124843277"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i32>::count_ones",
    "hash": "1495865171680558683818414809618357028610"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i32>::count_zeros",
    "hash": "4373287772977657515123472226040304345"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i32>::from_be",
    "hash": "35196130682184792675480007417621682694"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i32>::from_le",
    "hash": "381211828187011336314535025389640124363"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i32>::is_negative",
    "hash": "65756486039360257645101851335961110467"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i32>::is_positive",
    "hash": "57887111430035899905605028139273427952"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i32>::leading_zeros",
    "hash": "85404974087276124252719148425096596956"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i32>::pow",
    "hash": "119013032589152333064543404539751408525"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i32>::reverse_bits",
    "hash": "11542143233872531737191783032706737338"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i32>::rotate_left",
    "hash": "97620253757377916933629741307946321532"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i32>::rotate_right",
    "hash": "6526772863678074207367341121445380832"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i32>::signum",
    "hash": "4808706961423883643435901808556224652"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i32>::swap_bytes",
    "hash": "909958879292362856211158144718132015069"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i32>::to_be",
    "hash": "148561616885145873483020838410167742877"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i32>::to_le",
    "hash": "621853434649356691711074665436640272388"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i32>::trailing_zeros",
    "hash": "825569559568043644213813630047473078654"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i64>::abs",
    "hash": "61918539684005772305984095580967806306"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i64>::count_ones",
    "hash": "1169808002623970319611244046808261919884"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i64>::count_zeros",
    "hash": "7190397553962943475551786862091953686"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i64>::from_be",
    "hash": "48775495665764848005354262893885632447"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i64>::from_le",
    "hash": "352830174975196849311280428300854737621"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i64>::is_negative",
    "hash": "26643569347724794514346545002302315321"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i64>::is_positive",
    "hash": "273321849919307996412707243846269406742"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i64>::leading_zeros",
    "hash": "144403154872502685893807263110280749493"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i64>::pow",
    "hash": "259940450702015588915824462119033722163"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i64>::reverse_bits",
    "hash": "572351592288434744017179843928094908827"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i64>::rotate_left",
    "hash": "651248450737816786916876980389388138305"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i64>::rotate_right",
    "hash": "516690103930503409213381585082265678510"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i64>::signum",
    "hash": "125362402298041866744461088032152671221"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i64>::swap_bytes",
    "hash": "1173355928729099572114634463783456572924"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i64>::to_be",
    "hash": "162560944075400009409925261650719472871"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i64>::to_le",
    "hash": "59311153411342555778865625564842258870"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i64>::trailing_zeros",
    "hash": "1095162532213353960886862475903910682"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i8>::abs",
    "hash": "1999692196384367214068361344341569307"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i8>::count_ones",
    "hash": "166062466939826221942818930304975096857"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i8>::count_zeros",
    "hash": "30827031574032901875521708581738317482"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i8>::from_be",
    "hash": "985165629053560585714498443065946790578"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i8>::from_le",
    "hash": "90302723868486819828176556140406709858"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i8>::is_negative",
    "hash": "43779521368428616862905512946813769953"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i8>::is_positive",
    "hash": "172324116570494210528817691367419499981"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i8>::leading_zeros",
    "hash": "84320457659011221808485238389957221385"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i8>::pow",
    "hash": "16939737454981737631562157344279726024"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i8>::reverse_bits",
    "hash": "176698710955983209649112854268804463430"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i8>::rotate_left",
    "hash": "309247043526849971410367936062867563987"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i8>::rotate_right",
    "hash": "1758662733103848282717234742016110612089"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i8>::signum",
    "hash": "26795594691451526506273335085296021654"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i8>::swap_bytes",
    "hash": "765441377239748397610411336826933426629"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i8>::to_be",
    "hash": "48272479461897903097563621214748444114"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i8>::to_le",
    "hash": "1752605826728678279717062886931175905854"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i8>::trailing_zeros",
    "hash": "63156007322547013751351202787644507674"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<isize>::abs",
    "hash": "892385738346958449617114254291759663287"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<isize>::count_ones",
    "hash": "14009473391129812405539674696028595102"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<isize>::count_zeros",
    "hash": "5090538261807531771007283007077239989"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<isize>::from_be",
    "hash": "78200974703104043341541357999078565820"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<isize>::from_le",
    "hash": "146271017700281444762133279387464301265"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<isize>::is_negative",
    "hash": "97905743390075231246120347935441744548"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<isize>::is_positive",
    "hash": "183407551184633285415946267006692307815"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<isize>::leading_zeros",
    "hash": "67336610517993315665647361444148065347"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<isize>::pow",
    "hash": "23261536852197075961060317620434346200"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<isize>::reverse_bits",
    "hash": "1192620617525490650911605679647361763400"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<isize>::rotate_left",
    "hash": "1070029535243461060417417376217107443980"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<isize>::rotate_right",
    "hash": "688568251798489079075295501873849013"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<isize>::signum",
    "hash": "1255163758719970962813494000172970693730"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<isize>::swap_bytes",
    "hash": "81474165693425434033435961429848015266"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<isize>::to_be",
    "hash": "175727799617383087048088055553658812997"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<isize>::to_le",
    "hash": "172335544303598909875039781073496884127"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<isize>::trailing_zeros",
    "hash": "1270990225620585662814734802615041249623"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<u128>::count_ones",
    "hash": "1367758891649885175115869777685815966415"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<u128>::count_zeros",
    "hash": "181453264965880688417865304894457032751"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<u128>::from_be",
    "hash": "1376487480824954184017524950515642510545"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<u128>::from_le",
    "hash": "629102708955853550481562982964394164"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<u128>::is_power_of_two",
    "hash": "1397300801784588704016193521634081533626"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<u128>::leading_zeros",
    "hash": "177363436987997514608262546173207528105"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<u128>::pow",
    "hash": "418513846444354792418357697090731388354"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<u128>::reverse_bits",
    "hash": "1317136665908311368110601281601924358759"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<u128>::rotate_left",
    "hash": "630432608994795994110422938684856494085"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<u128>::rotate_right",
    "hash": "925495390152895397710644547275634548426"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<u128>::swap_bytes",
    "hash": "50543851932837682183484924256208161285"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<u128>::to_be",
    "hash": "76938963129202484261370690226271263583"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<u128>::to_le",
    "hash": "919166965384265371716275439846445873269"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<u128>::trailing_zeros",
    "hash": "26476784405474775945124626127493740897"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<u16>::count_ones",
    "hash": "47893483029969275285581847280010501421"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<u16>::count_zeros",
    "hash": "172794310269805340493108069439223865088"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<u16>::from_be",
    "hash": "895481129922354506514437930494245962714"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<u16>::from_le",
    "hash": "681220900377880004307688123973744603"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<u16>::is_power_of_two",
    "hash": "33122983293222189864694940637504215723"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<u16>::leading_zeros",
    "hash": "48417333427400443757958984960336463290"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<u16>::pow",
    "hash": "1394352533831313744911641938311804162275"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<u16>::reverse_bits",
    "hash": "136319108003656926149754925223321695594"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<u16>::rotate_left",
    "hash": "395731929208364734917953618620460845757"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<u16>::rotate_right",
    "hash": "732045586214182628215622641349833630368"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<u16>::swap_bytes",
    "hash": "226060935569850260111559397063609909142"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<u16>::to_be",
    "hash": "1634442653383939554813546233095579900288"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<u16>::to_le",
    "hash": "84301133260302166777505728345308608701"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<u16>::trailing_zeros",
    "hash": "161529245662138728129837022722491043878"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<u32>::count_ones",
    "hash": "117287119615195976058860243762273762626"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<u32>::count_zeros",
    "hash": "9324710767271680173563584013442680477"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<u32>::from_be",
    "hash": "275147437581623410910363493227970455888"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<u32>::from_le",
    "hash": "9849575333708760049103729932753167611"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<u32>::is_power_of_two",
    "hash": "145847331937431454854287038828701786240"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<u32>::leading_zeros",
    "hash": "23295092135377651102050867880321015953"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<u32>::pow",
    "hash": "25020923688986528903328165771400500894"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<u32>::reverse_bits",
    "hash": "129407865472448825114321113903462145076"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<u32>::rotate_left",
    "hash": "173951256139071182615041991629686725195"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<u32>::rotate_right",
    "hash": "109369672201195149713382018759681375441"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<u32>::swap_bytes",
    "hash": "170433604053182495357326340778827434926"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<u32>::to_be",
    "hash": "1303051682129005537417058792825038528249"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<u32>::to_le",
    "hash": "1649344931629070271716087305874124882363"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<u32>::trailing_zeros",
    "hash": "433106734906813323716796841529525485026"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<u64>::count_ones",
    "hash": "1564752287520361701714383633864806572951"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<u64>::count_zeros",
    "hash": "1576112167703917625017952675924845183347"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<u64>::from_be",
    "hash": "1551803368652636129711093289589665286167"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<u64>::from_le",
    "hash": "337520939194541422517620425335035246782"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<u64>::is_power_of_two",
    "hash": "118972641337929650556491992594838176776"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<u64>::leading_zeros",
    "hash": "1776745048050744488716464243708157185160"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<u64>::pow",
    "hash": "1547330255585462827397101756924203774"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<u64>::reverse_bits",
    "hash": "73509146033574295799775266493516116299"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<u64>::rotate_left",
    "hash": "177551071960435126606006624954597452916"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<u64>::rotate_right",
    "hash": "149972272005261860415558045321934059159"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<u64>::swap_bytes",
    "hash": "131539753476036405498747583363248855757"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<u64>::to_be",
    "hash": "141498105683001537033283416099679945640"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<u64>::to_le",
    "hash": "53263922044016289459564189946995599571"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<u64>::trailing_zeros",
    "hash": "1661130836161085590313368774532611831861"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<u8>::count_ones",
    "hash": "637375944467585944615259241540105054982"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<u8>::count_zeros",
    "hash": "91615913936344913631122630009918293489"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<u8>::from_be",
    "hash": "175448322412700997945104810560764640662"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<u8>::from_le",
    "hash": "217568254944311967316240575434102153009"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<u8>::is_power_of_two",
    "hash": "107755824479715131218427800819158293330"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<u8>::leading_zeros",
    "hash": "40573206617849057516687345190355014392"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<u8>::pow",
    "hash": "8314766691509578050243147794751729046"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<u8>::reverse_bits",
    "hash": "807821249085499229013861819691590616948"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<u8>::rotate_left",
    "hash": "27770458148380154298108540983207458470"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<u8>::rotate_right",
    "hash": "706785473326573945016514554560905135"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<u8>::swap_bytes",
    "hash": "140297508839879895296970106613111014678"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<u8>::to_be",
    "hash": "1550465222696519395810879228108466878807"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<u8>::to_le",
    "hash": "1768574268792528729816327573646138826142"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<u8>::trailing_zeros",
    "hash": "836175741271176658213694922329936608430"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<usize>::count_ones",
    "hash": "128425583549705140259157066197454049724"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<usize>::count_zeros",
    "hash": "170550796632115854786133390769470796997"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<usize>::from_be",
    "hash": "768325871849480880913154415628208426773"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<usize>::from_le",
    "hash": "66797686853142911172617227636841382804"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<usize>::is_power_of_two",
    "hash": "314716066948984784918364444445221846049"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<usize>::leading_zeros",
    "hash": "296433913379217203613351617278166797650"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<usize>::pow",
    "hash": "81811442218255102945908678604861475632"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<usize>::reverse_bits",
    "hash": "620121296198752079814945226352634522109"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<usize>::rotate_left",
    "hash": "55805033748049423659947492430896480689"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<usize>::rotate_right",
    "hash": "628283903234655005014661529206632047687"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<usize>::swap_bytes",
    "hash": "147121792348260901007809955346415810614"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<usize>::to_be",
    "hash": "122382984295235526276122638646894138775"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<usize>::to_le",
    "hash": "126776409137859887107989924256456064574"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<usize>::trailing_zeros",
    "hash": "1615145207768582011312088721286018179706"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::abs_diff",
    "hash": "17427844085944426406256927141447231704"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::bit_width",
    "hash": "99733475455072670625994209782536227780"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::borrowing_sub",
    "hash": "43415760393921747322753086449709993058"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::carrying_add",
    "hash": "152613711787128795029129634302828952730"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::carrying_mul",
    "hash": "145805119716834194105721341364051169094"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::carrying_mul_add",
    "hash": "133509031473879608767378732747493739553"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::cast_signed",
    "hash": "806866974693040132082054223711397347"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::checked_add",
    "hash": "1125177399469920922618112917039939847645"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::checked_add_signed",
    "hash": "1694392903409285553110856503425770107908"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::checked_div",
    "hash": "128088043273553007971565654542421953752"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::checked_div_euclid",
    "hash": "141345849613347442571514621001664126066"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::checked_exact_div",
    "hash": "1826736185955508623812969347122328288124"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::checked_ilog",
    "hash": "1577405293491243945516540313974401561121"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::checked_ilog10",
    "hash": "15576169491895193676828951167376341031"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::checked_ilog2",
    "hash": "52780219300310981622383426391057921241"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::checked_mul",
    "hash": "122303305891028667771964816694363299724"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::checked_neg",
    "hash": "96904039474070825142222824137856489948"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::checked_next_multiple_of",
    "hash": "96100861304396273913041904959089304572"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::checked_next_power_of_two",
    "hash": "100808414341156934831000173790522631730"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::checked_pow",
    "hash": "113372998116584453632845156847365933147"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::checked_rem",
    "hash": "1688757951812779517713145235139729895747"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::checked_rem_euclid",
    "hash": "1778315522099342438748177160469215548"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::checked_shl",
    "hash": "52520253090641419956076866763222822153"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::checked_shr",
    "hash": "548189744344755820615674825417248050679"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::checked_signed_diff",
    "hash": "747836567170313026817009767611654377082"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::checked_sub",
    "hash": "1203347943592849034916960500592832040667"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::checked_sub_signed",
    "hash": "104818613145558147589947560001218156659"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::count_ones",
    "hash": "136626597585931166988739966637689883189"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::count_zeros",
    "hash": "21417731838492749158077072665279867716"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::div_ceil",
    "hash": "98556083958420395464017024589581487970"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::div_euclid",
    "hash": "57899645438128662832890068004975063524"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::div_floor",
    "hash": "174215688445872908191279064795335738456"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::exact_div",
    "hash": "246233789088911021612556270199351849002"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::from_be",
    "hash": "1264896989240975708016033217926356458981"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::from_be_bytes",
    "hash": "1077407027989477815011430825066037636619"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::from_le",
    "hash": "1470486387663907533314835748296427839912"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::from_le_bytes",
    "hash": "667014957215045756117927059507320854602"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::from_ne_bytes",
    "hash": "170205791765965620310985965664367007282"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::ilog",
    "hash": "126849855949451246817102330515849015957"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::ilog10",
    "hash": "113000757780061227564662354213338476711"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::ilog2",
    "hash": "484638384388455643310005816366530735503"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::is_multiple_of",
    "hash": "95304148064088016392309604235126008464"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::is_power_of_two",
    "hash": "73524663179813095932395803423553330113"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::isolate_least_significant_one",
    "hash": "72309175494653573524507121006684074613"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::isolate_most_significant_one",
    "hash": "538201015271210802112386738710423936502"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::isqrt",
    "hash": "39493952339762704136172983127447434889"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::leading_ones",
    "hash": "1716830314776137370714455972604088406715"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::leading_zeros",
    "hash": "1828971376754412489117662619455595218497"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::max_value",
    "hash": "16857955689718821016272469384417454311"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::min_value",
    "hash": "154759596129564487323748431425690755872"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::next_multiple_of",
    "hash": "790631268073146849010786453231875212868"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::next_power_of_two",
    "hash": "15126709167443517091999689765939851572"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::one_less_than_next_power_of_two",
    "hash": "1072693866909629553382743057743633523"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::overflowing_add",
    "hash": "150485570763328741959529276593682551099"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::overflowing_add_signed",
    "hash": "29566009013358249934559120653416162855"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::overflowing_div",
    "hash": "1238888821882015812014910298468175814773"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::overflowing_div_euclid",
    "hash": "1738037211603241947013964190503126026957"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::overflowing_mul",
    "hash": "46627814547474503915347039038214745260"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::overflowing_neg",
    "hash": "4215340858241285510644382618005796473"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::overflowing_pow",
    "hash": "1781423442877508482214598820637423265494"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::overflowing_rem",
    "hash": "652987994726827683424755932545150124"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::overflowing_rem_euclid",
    "hash": "103498971464387525077963049478495066855"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::overflowing_shl",
    "hash": "82256742441427398804941576171131499327"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::overflowing_shr",
    "hash": "1476075734364049240318009788470867556046"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::overflowing_sub",
    "hash": "119361130020997357989774979438565277101"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::overflowing_sub_signed",
    "hash": "747186562056847000414687072496732750495"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::pow",
    "hash": "995660296719357603410278982956385850433"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::rem_euclid",
    "hash": "177094068905413520477108331556392530564"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::reverse_bits",
    "hash": "1331471561193459939214413011298730679296"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::rotate_left",
    "hash": "134314141723058629938684217732234616460"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::rotate_right",
    "hash": "11644464546797952427269156921786916084"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::saturating_add",
    "hash": "1568003784308602649112853301376057205100"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::saturating_add_signed",
    "hash": "131050568205163374919195476059836803538"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::saturating_div",
    "hash": "137626225552769008363453763096233300961"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::saturating_mul",
    "hash": "182759838225507517813304653205465236868"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::saturating_pow",
    "hash": "176538594864281699866152870449953822630"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::saturating_sub",
    "hash": "2296475697538834435406666088269566915"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::saturating_sub_signed",
    "hash": "6613080909407833660813170534394144351"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::strict_add",
    "hash": "141045384853511820422064207285911625411"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::strict_add_signed",
    "hash": "131613824919047662284079687569676460730"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::strict_div",
    "hash": "1258900781433419160114743922909077139665"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::strict_div_euclid",
    "hash": "23590531053375427394554384512605947784"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::strict_mul",
    "hash": "4288151088156183085196546018467253678"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::strict_neg",
    "hash": "54049770820324578984887954900724798987"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::strict_pow",
    "hash": "125457903608162737519494213410718380608"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::strict_rem",
    "hash": "60794656839271691283613016026389221083"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::strict_rem_euclid",
    "hash": "13190862961659727351466038563718326555"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::strict_shl",
    "hash": "984785967731078281812726047390476597785"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::strict_shr",
    "hash": "1080875696183517004711262366013361644534"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::strict_sub",
    "hash": "63381804218694616046558294757541034152"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::swap_bytes",
    "hash": "45676127315938087648195038888562758345"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::to_be",
    "hash": "8571097538849490408265865024071362072"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::to_be_bytes",
    "hash": "12951394404730312114447894407804746457"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::to_le",
    "hash": "1431732154063741405414934908019971595126"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::to_le_bytes",
    "hash": "206306050378018746412283514291338552468"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::to_ne_bytes",
    "hash": "1698116143467906354713223929982877494435"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::trailing_ones",
    "hash": "1324515964130214489110951246577451673296"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::trailing_zeros",
    "hash": "53423799377932582871400893287539167913"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::unbounded_shl",
    "hash": "549681196275978649514223140024597923371"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::unbounded_shr",
    "hash": "6507950237950385603332638018713929768"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::unchecked_add",
    "hash": "742015701430727936216879694580505942968"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::unchecked_disjoint_bitor",
    "hash": "4363455430038606636239960006633492880"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::unchecked_exact_div",
    "hash": "51306550244374714426364839452138087357"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::unchecked_mul",
    "hash": "111353009521252685052411115323084132412"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::unchecked_shl",
    "hash": "1157576670399687857114272065948173045008"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::unchecked_shr",
    "hash": "467063652247933191516032101250025108771"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::unchecked_sub",
    "hash": "18084139421421869802126909211915343341"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::widening_mul",
    "hash": "380409271697733753615604025175457031719"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::wrapping_add",
    "hash": "29351128184436839610297012509037480411"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::wrapping_add_signed",
    "hash": "9655601960204988610337751230407486383"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::wrapping_div",
    "hash": "675893496102499961711069906015001790227"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::wrapping_div_euclid",
    "hash": "117675094994735406432599305013346357315"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::wrapping_mul",
    "hash": "10508767501303297538485587509549028488"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::wrapping_neg",
    "hash": "125172651046085324904231355649261044904"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::wrapping_next_power_of_two",
    "hash": "14055854514061467912314553734888047574"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::wrapping_pow",
    "hash": "95903188080944802819078073264533443081"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::wrapping_rem",
    "hash": "316021442198459048516244042906827946590"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::wrapping_rem_euclid",
    "hash": "1556177826502039693215432563851105496350"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::wrapping_shl",
    "hash": "83692408625714761315876989976567945626"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::wrapping_shr",
    "hash": "326461706008538544514386747960007466909"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::wrapping_sub",
    "hash": "1823671511110518427713754177319855413591"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::wrapping_sub_signed",
    "hash": "1830710794966348853716526352677273476118"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::abs_diff",
    "hash": "34021160458136458562075156054262123261"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::bit_width",
    "hash": "7532789525697299137473463089747379957"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::borrowing_sub",
    "hash": "392384649095500933114286632210006390377"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::carrying_add",
    "hash": "85455827410276839017109196438214587329"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::carrying_mul",
    "hash": "102503944093621352865054343470887377282"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::carrying_mul_add",
    "hash": "82868724255982320174630884495688365929"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::cast_signed",
    "hash": "1502561209673290131814545165771279644678"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::checked_add",
    "hash": "1761664836038391706912370904109030807900"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::checked_add_signed",
    "hash": "4008055461444829783794104889253489125"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::checked_div",
    "hash": "160619960023285865147217291380236512857"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::checked_div_euclid",
    "hash": "34036863311864492417088918306048519837"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::checked_exact_div",
    "hash": "17240257908307870347661941291256046365"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::checked_ilog",
    "hash": "19406597848960256053675450362126299937"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::checked_ilog10",
    "hash": "100836305064011568455543582332843208233"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::checked_ilog2",
    "hash": "6886954827965943572366568992618664413"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::checked_mul",
    "hash": "891612569876134670010584546105289597937"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::checked_neg",
    "hash": "1493880139477239501013668581596520906260"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::checked_next_multiple_of",
    "hash": "116938386356826288088932441347619658049"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::checked_next_power_of_two",
    "hash": "1775897857987549056411507633399553860624"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::checked_pow",
    "hash": "22440559185189878966628396235690032395"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::checked_rem",
    "hash": "402981369642546358316114319245444730952"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::checked_rem_euclid",
    "hash": "12193930876787054709291602394374837478"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::checked_shl",
    "hash": "1563316097108036628103255402870454453"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::checked_shr",
    "hash": "33281687338382278687645471140859703093"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::checked_signed_diff",
    "hash": "39127781295632380489123956742306713466"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::checked_sub",
    "hash": "96060221829794456014712848339311510216"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::checked_sub_signed",
    "hash": "772686400539114908411229566266641026398"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::count_ones",
    "hash": "50847092804033131353584278262338890047"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::count_zeros",
    "hash": "606953072038152342010765146704633800134"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::div_ceil",
    "hash": "614161340220949105111556006870287727786"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::div_euclid",
    "hash": "511282446986837195212645208076656800068"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::div_floor",
    "hash": "38212427303960897554417832116951643765"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::exact_div",
    "hash": "12152902201633789184065553085313540533"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::from_be",
    "hash": "655364994638183711117813449037291777950"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::from_be_bytes",
    "hash": "94886861532456116857561317380605068218"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::from_le",
    "hash": "20308939900964054777740169744809646877"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::from_le_bytes",
    "hash": "114737129172224550092446971007695577311"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::from_ne_bytes",
    "hash": "830626180984172065817026978954063500848"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::ilog",
    "hash": "591016975961995211727277318772431774"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::ilog10",
    "hash": "76955757446826672302722099860063230314"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::ilog2",
    "hash": "97265487733014424537306320316685677550"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::is_multiple_of",
    "hash": "324530812672066385514195759059624880037"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::is_power_of_two",
    "hash": "173579163639774067883824354148181948655"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::isolate_least_significant_one",
    "hash": "493154800808731751310630862268827033016"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::isolate_most_significant_one",
    "hash": "1471557489134368235215846505734060401672"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::isqrt",
    "hash": "686144389210660417411234802484924541210"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::leading_ones",
    "hash": "843611615069704148714329525326753036198"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::leading_zeros",
    "hash": "606456835314416134214848512741149054761"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::max_value",
    "hash": "85538732569306230435674236117051430866"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::min_value",
    "hash": "796057837913776710415434638828784784872"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::next_multiple_of",
    "hash": "38703417881714293718217185902061401200"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::next_power_of_two",
    "hash": "1009003082048464262510128977256610937634"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::one_less_than_next_power_of_two",
    "hash": "15549953277753265701231783189027766578"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::overflowing_add",
    "hash": "1259350752486802697010822022220260946961"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::overflowing_add_signed",
    "hash": "1589684046947435946317745011439596467731"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::overflowing_div",
    "hash": "1708254315089604137911406408782462058757"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::overflowing_div_euclid",
    "hash": "647771089664927927616072677325331977255"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::overflowing_mul",
    "hash": "105079983965503949187429510421372327552"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::overflowing_neg",
    "hash": "753447253889692695413741093188031936404"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::overflowing_pow",
    "hash": "588830147879298310912298618710925240460"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::overflowing_rem",
    "hash": "24678097332622709939183276088829908165"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::overflowing_rem_euclid",
    "hash": "716993273524209288817211020669543878930"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::overflowing_shl",
    "hash": "22654373854088721914013243630302125100"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::overflowing_shr",
    "hash": "66325406915488343021765959281990518097"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::overflowing_sub",
    "hash": "1643665614315641769318114983079378803122"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::overflowing_sub_signed",
    "hash": "1665629935556965771413427007337553024241"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::pow",
    "hash": "92839668526129699711764561594071326387"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::rem_euclid",
    "hash": "854941924151078793918206425339784116609"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::reverse_bits",
    "hash": "151368615868741535702214786491161665928"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::rotate_left",
    "hash": "164642219828700325433015247591458543679"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::rotate_right",
    "hash": "408682379303308192211419662726782232069"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::saturating_add",
    "hash": "102030776274003718759467098311133997719"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::saturating_add_signed",
    "hash": "5448209296976759333051660080994764335"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::saturating_div",
    "hash": "1135216026120103204129723154926288041"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::saturating_mul",
    "hash": "11254910722328535371433880406249638468"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::saturating_pow",
    "hash": "135397330546826292098564555221475655034"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::saturating_sub",
    "hash": "1158348868433176574111740968169874922424"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::saturating_sub_signed",
    "hash": "98197115456392053486826541371589438027"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::strict_add",
    "hash": "6370694983431675210364966753975311378"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::strict_add_signed",
    "hash": "83195333882336859669639032699576386387"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::strict_div",
    "hash": "115534033703931650542808201167298280373"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::strict_div_euclid",
    "hash": "8217459670245276629981617605062477070"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::strict_mul",
    "hash": "62472663848069209055795530482579585918"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::strict_neg",
    "hash": "9756405638952464749279693173626406699"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::strict_pow",
    "hash": "72087025959348532428630856874503384478"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::strict_rem",
    "hash": "1505929309925615801212879147051333506983"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::strict_rem_euclid",
    "hash": "1439586508015320859413522832055587965400"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::strict_shl",
    "hash": "1567610798513852426814887617022970799397"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::strict_shr",
    "hash": "332406707781693775218173511955450250352"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::strict_sub",
    "hash": "175927424841482219614937092211795991082"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::swap_bytes",
    "hash": "965869043725195656313548384614345090910"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::to_be",
    "hash": "918021957478411427616459748505733726037"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::to_be_bytes",
    "hash": "138142682993268659554781148677884239239"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::to_le",
    "hash": "148250749049024005557363225402684877190"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::to_le_bytes",
    "hash": "17572764474526678024047552566192517043"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::to_ne_bytes",
    "hash": "151561169275309710464299466758638620145"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::trailing_ones",
    "hash": "154092815132735542347193964773367269729"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::trailing_zeros",
    "hash": "130448645970014011334803715212994608857"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::unbounded_shl",
    "hash": "184133678646798890316636771965107610309"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::unbounded_shr",
    "hash": "753086795970658221013171764990030795100"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::unchecked_add",
    "hash": "173105439367020071767957153438588951894"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::unchecked_disjoint_bitor",
    "hash": "10899372246206481636503663764610045231"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::unchecked_exact_div",
    "hash": "141677967565859017862389020051942162651"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::unchecked_mul",
    "hash": "7995050794536370351450722755476772639"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::unchecked_shl",
    "hash": "806741067374931401316863369547307629029"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::unchecked_shr",
    "hash": "69161405519757459814228020362546594432"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::unchecked_sub",
    "hash": "56511076765196646613188590669918939662"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::widening_mul",
    "hash": "177037571959584066382860775174858284821"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::wrapping_add",
    "hash": "159732691571659558493314453316786085190"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::wrapping_add_signed",
    "hash": "70788235714485415679878904739025756272"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::wrapping_div",
    "hash": "2942178925209323731112274202511644619"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::wrapping_div_euclid",
    "hash": "120232077509603322186358273948699269405"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::wrapping_mul",
    "hash": "103440105821303851812549130466916840112"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::wrapping_neg",
    "hash": "1251858863632879732816204726570625453849"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::wrapping_next_power_of_two",
    "hash": "154954631009293615926140488182333509486"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::wrapping_pow",
    "hash": "142195469284301087685794308329615547861"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::wrapping_rem",
    "hash": "108500814979549676961660690455419754686"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::wrapping_rem_euclid",
    "hash": "1589578896761662338215231949093200615441"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::wrapping_shl",
    "hash": "168838575151158407686110032212547625456"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::wrapping_shr",
    "hash": "1085937864803811903115223359597408374978"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::wrapping_sub",
    "hash": "718335914748068653815208059687493909560"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::wrapping_sub_signed",
    "hash": "33926333909331872976822836808713282165"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::abs_diff",
    "hash": "510545704482740888512827773586589999082"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::bit_width",
    "hash": "1200780275795833661916001546776252906432"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::borrowing_sub",
    "hash": "917805063476019077315913988228896341899"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::carrying_add",
    "hash": "1005333075509230392113242929144034208236"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::carrying_mul",
    "hash": "80848798440710831601843342330096607932"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::carrying_mul_add",
    "hash": "6666208141350034449018824875644887202"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::cast_signed",
    "hash": "1289162361236978802714016552441059653513"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::checked_add",
    "hash": "1108399665838346317518401576463185100821"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::checked_add_signed",
    "hash": "171722485303365022041796236090671222568"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::checked_div",
    "hash": "75887462811787965086268121681468203953"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::checked_div_euclid",
    "hash": "37239273573532559717762330383756314840"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::checked_exact_div",
    "hash": "96269435801242997826867225897459973743"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::checked_ilog",
    "hash": "962809254891025925317507667282838715668"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::checked_ilog10",
    "hash": "1626919478585337180311925755944582097603"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::checked_ilog2",
    "hash": "99207970047418407169572515264154862690"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::checked_mul",
    "hash": "1013669197487730806312859888601026435838"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::checked_neg",
    "hash": "155862501305350833889823587982439201693"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::checked_next_multiple_of",
    "hash": "5310181647269023553870875738216602429"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::checked_next_power_of_two",
    "hash": "1519771910483267281114330220678402215038"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::checked_pow",
    "hash": "1675789087634073599214830549064795296464"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::checked_rem",
    "hash": "79859134803515819991665136305613678933"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::checked_rem_euclid",
    "hash": "110203432567034025652140396522196036873"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::checked_shl",
    "hash": "69576796996563428876865081408754795004"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::checked_shr",
    "hash": "20068086786418293413752366282701571397"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::checked_signed_diff",
    "hash": "5694064123310887779360941489475972235"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::checked_sub",
    "hash": "284503544627764597710907137600385236436"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::checked_sub_signed",
    "hash": "123114908453856238662430788942052343565"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::count_ones",
    "hash": "548891382194185952417895541934526682886"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::count_zeros",
    "hash": "1465452802619810827217598557952285357689"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::div_ceil",
    "hash": "1211549082959924370012480764396369055485"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::div_euclid",
    "hash": "132346638976445510065038261154969720781"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::div_floor",
    "hash": "85697447879054107561117682936946079145"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::exact_div",
    "hash": "120801096506048759985547888966999800416"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::from_be",
    "hash": "281019598751305517865664316427010682"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::from_be_bytes",
    "hash": "67135252112345498387251772921589066437"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::from_le",
    "hash": "21816693545331249804863519470694726191"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::from_le_bytes",
    "hash": "476239763298643751912891323718965500846"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::from_ne_bytes",
    "hash": "1706871882023826287715699613054248649864"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::ilog",
    "hash": "390509567135825512213037031448804750533"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::ilog10",
    "hash": "48665286283312838431725213394455944904"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::ilog2",
    "hash": "23645222656486286110885588328606463626"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::is_multiple_of",
    "hash": "653762775191872649814409476078661101050"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::is_power_of_two",
    "hash": "1421076245580821676215271908796369917391"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::isolate_least_significant_one",
    "hash": "609143021666225215717712657451732640310"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::isolate_most_significant_one",
    "hash": "1215108121180688284515251456367423379625"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::isqrt",
    "hash": "151957081316849953897651683932375617157"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::leading_ones",
    "hash": "564736954759316959714981191214574906431"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::leading_zeros",
    "hash": "14336217352403889789696607974386324455"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::max_value",
    "hash": "788113175683926605514085225939137254422"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::min_value",
    "hash": "17730291745189305849417756608623226379"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::next_multiple_of",
    "hash": "160431012936500941164582652249151330480"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::next_power_of_two",
    "hash": "153834345409485968719999139977407910082"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::one_less_than_next_power_of_two",
    "hash": "181996177863058640252682734185048493583"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::overflowing_add",
    "hash": "88899199360268001426482462938213067141"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::overflowing_add_signed",
    "hash": "24926222586027782536266830182572965668"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::overflowing_div",
    "hash": "171631699868314258416140887002497593226"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::overflowing_div_euclid",
    "hash": "1379576816364337437410576906931369586767"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::overflowing_mul",
    "hash": "66449392659434954285407600121191159076"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::overflowing_neg",
    "hash": "1837207747209108716012849692064815607690"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::overflowing_pow",
    "hash": "95696259281706908232949773175078069180"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::overflowing_rem",
    "hash": "1720156900738962156811220538777025723050"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::overflowing_rem_euclid",
    "hash": "164935727355412120994699370004678545836"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::overflowing_shl",
    "hash": "112669649469713818892548533082369379588"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::overflowing_shr",
    "hash": "84396897821718472471470844704730179762"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::overflowing_sub",
    "hash": "106375490049314336818335775986269435759"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::overflowing_sub_signed",
    "hash": "7009887934141008770511671559517944659"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::pow",
    "hash": "651871729423545287411407676068252727733"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::rem_euclid",
    "hash": "989121050687953923414606469273016707451"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::reverse_bits",
    "hash": "8698847716613941748411083946140115004"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::rotate_left",
    "hash": "136570582492458694923650642087988558356"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::rotate_right",
    "hash": "17579048986461600508522956640220099253"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::saturating_add",
    "hash": "1745652221148996712615237748023031642118"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::saturating_add_signed",
    "hash": "360132442312263161914740045116509982010"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::saturating_div",
    "hash": "70575121386456018312957118753796057753"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::saturating_mul",
    "hash": "472099227094377417318382294478726704056"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::saturating_pow",
    "hash": "472740054695992785570889492730551294"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::saturating_sub",
    "hash": "88126887203326980953592809017053676868"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::saturating_sub_signed",
    "hash": "33873034358348063987355515473959639640"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::strict_add",
    "hash": "944122248029637033216998077467421653217"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::strict_add_signed",
    "hash": "162323346965928400962643827432530923967"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::strict_div",
    "hash": "1022374959493741226718237284144206428547"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::strict_div_euclid",
    "hash": "1069606963608143184515404565954531096202"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::strict_mul",
    "hash": "1687232717795868853912229512790732556631"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::strict_neg",
    "hash": "1788218770535577652317646580677549295050"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::strict_pow",
    "hash": "1097364411280790263512815816184580407157"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::strict_rem",
    "hash": "95719570202114642386123440759707494901"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::strict_rem_euclid",
    "hash": "11543725452168692335642562268394521699"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::strict_shl",
    "hash": "28544190338494268315206062677415525467"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::strict_shr",
    "hash": "823403399411711801015823563139078578780"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::strict_sub",
    "hash": "70175509832466001114160002844795318080"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::swap_bytes",
    "hash": "1840840499136580217810702943808689092980"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::to_be",
    "hash": "20542505216156140628615884161738634289"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::to_be_bytes",
    "hash": "23254416956966038883799032346676113659"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::to_le",
    "hash": "1296866429583057204513815775668121821866"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::to_le_bytes",
    "hash": "1464749153243339658813839605498915704221"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::to_ne_bytes",
    "hash": "817833692611029057817513367803036674159"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::trailing_ones",
    "hash": "588066192123536602714442919202859755103"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::trailing_zeros",
    "hash": "566475142254330013810350622574078631923"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::unbounded_shl",
    "hash": "595407836120159271917798954687310544562"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::unbounded_shr",
    "hash": "1420858550321447671810287119379730897101"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::unchecked_add",
    "hash": "159952308768169655546419997904899044321"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::unchecked_disjoint_bitor",
    "hash": "24100630580735549337076593919193370385"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::unchecked_exact_div",
    "hash": "134752931388507180942530393096015110916"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::unchecked_mul",
    "hash": "36925981072196870414735383290927130321"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::unchecked_shl",
    "hash": "306086417389507312214634311407757900383"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::unchecked_shr",
    "hash": "222010894511705268813935925371454856320"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::unchecked_sub",
    "hash": "1751816092772781545811379294995919623371"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::widening_mul",
    "hash": "10966719649378335419394176109751206894"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::wrapping_add",
    "hash": "811014240907765449310255915500040932880"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::wrapping_add_signed",
    "hash": "63031488601480014617736505544543784165"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::wrapping_div",
    "hash": "13476150852753636514153546949949611888"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::wrapping_div_euclid",
    "hash": "348674326426244994216185658403029261485"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::wrapping_mul",
    "hash": "150896555567991982882079988216035222825"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::wrapping_neg",
    "hash": "54283634981550534832092334050779558696"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::wrapping_next_power_of_two",
    "hash": "101421204761628833415817254721649972740"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::wrapping_pow",
    "hash": "160906682316872172576929147898277294183"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::wrapping_rem",
    "hash": "73291718378394285166223740493658728930"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::wrapping_rem_euclid",
    "hash": "46237146516185564851817550224939143088"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::wrapping_shl",
    "hash": "1122068907099579255118198335373280353280"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::wrapping_shr",
    "hash": "144346727179144937857330075594707756451"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::wrapping_sub",
    "hash": "164769300933020566656262923669273525158"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::wrapping_sub_signed",
    "hash": "141907577097774975142248581741617592010"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::abs_diff",
    "hash": "5236556910852095516666365460116355773"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::bit_width",
    "hash": "928595453366968018314553390653907455659"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::borrowing_sub",
    "hash": "1595930492889649018914302974351957064950"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::carrying_add",
    "hash": "77773788447371087324555386965424917415"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::carrying_mul",
    "hash": "12860339466536225000598515692353548825"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::carrying_mul_add",
    "hash": "823919606921056216412405359771911898343"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::cast_signed",
    "hash": "33803949340094013681206677922014430788"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::checked_add",
    "hash": "28341444999511812353455942632551097657"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::checked_add_signed",
    "hash": "159935779239583207615566921049443455248"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::checked_div",
    "hash": "520096587698352800512656534108503859695"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::checked_div_euclid",
    "hash": "988780083090955879710010032181547214766"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::checked_exact_div",
    "hash": "1601830509835440867413294708074665319535"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::checked_ilog",
    "hash": "1641158315729471590513976517406049172765"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::checked_ilog10",
    "hash": "18125598672352641865454477834971730060"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::checked_ilog2",
    "hash": "1317824246665552169514130479226433536913"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::checked_mul",
    "hash": "1135700635396122493716494855814345262924"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::checked_neg",
    "hash": "1389300014763676284313855521577956745806"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::checked_next_multiple_of",
    "hash": "52281415825452250944384940204631221826"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::checked_next_power_of_two",
    "hash": "1288435996198494662811497155051198258479"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::checked_pow",
    "hash": "859530697549400789014732338052266693754"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::checked_rem",
    "hash": "1122215924564841920411190382625576901200"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::checked_rem_euclid",
    "hash": "1836525852761126443310606656117631311790"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::checked_shl",
    "hash": "50283691961321557173363161354038942726"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::checked_shr",
    "hash": "134775658406974571252741603017324534834"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::checked_signed_diff",
    "hash": "32878675549373305151335839703910056010"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::checked_sub",
    "hash": "1438659358471837749311843415656330015568"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::checked_sub_signed",
    "hash": "509924991731234539811122117362129274983"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::count_ones",
    "hash": "3068122879483520910857891299769879634"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::count_zeros",
    "hash": "803343006137739488713760627116195755923"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::div_ceil",
    "hash": "654783562778531831514956577295574967618"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::div_euclid",
    "hash": "270008661355320751112563144114923690271"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::div_floor",
    "hash": "1053669901221586058517156340961754342208"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::exact_div",
    "hash": "903637895272311379414673099523658732059"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::from_be",
    "hash": "345159159361440688612013773416308233067"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::from_be_bytes",
    "hash": "764628120766480488816489602986894328719"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::from_le",
    "hash": "402127410477958543916885819974064684216"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::from_le_bytes",
    "hash": "83531011551406582643690295846862976676"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::from_ne_bytes",
    "hash": "156015586244176233064049211483378482886"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::ilog",
    "hash": "1532225022226949500516100050936246517674"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::ilog10",
    "hash": "3366338629265279481107319459380984488"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::ilog2",
    "hash": "147196406213856719905319443747561437513"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::is_multiple_of",
    "hash": "1326471213668539419116519345142902252989"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::is_power_of_two",
    "hash": "97479528909837851036205045464221704097"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::isolate_least_significant_one",
    "hash": "139122476912730417022832565399000919446"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::isolate_most_significant_one",
    "hash": "15063065486028528165208401169488041617"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::isqrt",
    "hash": "946836072887926011117515890369582356718"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::leading_ones",
    "hash": "40289598760941785310334278740062618139"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::leading_zeros",
    "hash": "48354854979115560144022655123531408337"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::max_value",
    "hash": "159511029120395516865770102509071325916"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::min_value",
    "hash": "88244455065948991109061737142854629800"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::next_multiple_of",
    "hash": "126597688044099149199530315281288106801"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::next_power_of_two",
    "hash": "15665221726527911456187658072435935301"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::one_less_than_next_power_of_two",
    "hash": "1341320904920309776514528760322642734520"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::overflowing_add",
    "hash": "183502239413759894923421817701061666409"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::overflowing_add_signed",
    "hash": "996519448239942598715231772702770626878"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::overflowing_div",
    "hash": "924698915026466510616472141378220151465"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::overflowing_div_euclid",
    "hash": "89657935088617995222211292283610713568"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::overflowing_mul",
    "hash": "89253289676802301796257942207888358960"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::overflowing_neg",
    "hash": "147513704089187323035963212484792852897"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::overflowing_pow",
    "hash": "1511038826066834045113222491842796933995"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::overflowing_rem",
    "hash": "15113247261368704411670237521730509970"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::overflowing_rem_euclid",
    "hash": "13485490648036239390165122493899879132"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::overflowing_shl",
    "hash": "66594855204942594197072858120222529501"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::overflowing_shr",
    "hash": "1361148810247903700514970124935151284494"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::overflowing_sub",
    "hash": "658981932958553373713482496161940559948"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::overflowing_sub_signed",
    "hash": "107150676219581716937735732271878993360"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::pow",
    "hash": "643777806614631681206017295937357131"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::rem_euclid",
    "hash": "1064501502946473910216874872743382829079"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::reverse_bits",
    "hash": "100525608334973004941122233017372788641"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::rotate_left",
    "hash": "1019971856294636275912140629221298594282"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::rotate_right",
    "hash": "162914193882087247539989176230335716731"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::saturating_add",
    "hash": "81240688335319061373568207898452131494"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::saturating_add_signed",
    "hash": "901433641938966079718230101217063501287"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::saturating_div",
    "hash": "705092182693852593510715296677496715977"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::saturating_mul",
    "hash": "244899343098687741216801140414863697668"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::saturating_pow",
    "hash": "969990385329906469210386708394921246485"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::saturating_sub",
    "hash": "126792710734009045919106129897153384430"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::saturating_sub_signed",
    "hash": "144637018928832325382558968855212999012"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::strict_add",
    "hash": "108223559467304582927616855368813336231"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::strict_add_signed",
    "hash": "364379987707014231115904801799142304177"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::strict_div",
    "hash": "1829916388185597705115474628091522560326"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::strict_div_euclid",
    "hash": "1051441214354916630710405691491480644994"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::strict_mul",
    "hash": "41710109046508811319683842548982343489"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::strict_neg",
    "hash": "1566770675624810836914744473111415090324"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::strict_pow",
    "hash": "90709613592221169009873140869032796048"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::strict_rem",
    "hash": "83082038518976142968207997220773756378"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::strict_rem_euclid",
    "hash": "1708322773667690024813079165173170989061"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::strict_shl",
    "hash": "1664321076006426205614858756515990594374"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::strict_shr",
    "hash": "1657881217689595982913686416974028053817"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::strict_sub",
    "hash": "708805543367565952813930865363545966643"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::swap_bytes",
    "hash": "131105040806881252864713230290014530057"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::to_be",
    "hash": "1585679687009729936614922788825855881915"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::to_be_bytes",
    "hash": "56361633323730665114906716694355678793"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::to_le",
    "hash": "156554567085223323337921668194256084483"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::to_le_bytes",
    "hash": "119395355197469326005406800753849001016"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::to_ne_bytes",
    "hash": "132448108963078790084015397348427749559"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::trailing_ones",
    "hash": "407199554588822377311906245160089972555"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::trailing_zeros",
    "hash": "78985976117445236873230216685726400464"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::unbounded_shl",
    "hash": "14535126483721233311032723440322705025"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::unbounded_shr",
    "hash": "1834374294130361101111310316641071857741"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::unchecked_add",
    "hash": "106255773349471756368242733182708848953"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::unchecked_disjoint_bitor",
    "hash": "69149173811194472632269230175755892656"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::unchecked_exact_div",
    "hash": "1168792187257991514313330059406262299514"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::unchecked_mul",
    "hash": "1375454256588215471914022369183935991358"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::unchecked_shl",
    "hash": "1649321691274884184213088119655091525974"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::unchecked_shr",
    "hash": "1616154378388195472818175199231509529470"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::unchecked_sub",
    "hash": "164128242449768278945110982158286900615"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::widening_mul",
    "hash": "42236118570899595848210039267000800337"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::wrapping_add",
    "hash": "50557607022538309823016666339832368041"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::wrapping_add_signed",
    "hash": "13981060239841434605740188558623014348"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::wrapping_div",
    "hash": "175108598250349078928685776070685926692"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::wrapping_div_euclid",
    "hash": "113011957905941301944942577370230057044"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::wrapping_mul",
    "hash": "1342048775902988521116924199840349945403"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::wrapping_neg",
    "hash": "174989346284326516173604368573417490059"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::wrapping_next_power_of_two",
    "hash": "124144271841690432819008264734832557622"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::wrapping_pow",
    "hash": "142386103078492000127392884326823033216"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::wrapping_rem",
    "hash": "825789208995447529916573631628325950185"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::wrapping_rem_euclid",
    "hash": "154144734264453744925566530040560004767"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::wrapping_shl",
    "hash": "115561593277676304281101029522375939863"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::wrapping_shr",
    "hash": "57498485141899124054781181824806339208"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::wrapping_sub",
    "hash": "14979181759249961013207944287770709969"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::wrapping_sub_signed",
    "hash": "1411056064689709424513365739555677960953"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::abs_diff",
    "hash": "160071513286312121525885004496768008828"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::bit_width",
    "hash": "76319718061910989779361897494837728586"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::borrowing_sub",
    "hash": "2135978195218932967168708972185316183"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::carrying_add",
    "hash": "754178593416862216410775375271049030664"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::carrying_mul",
    "hash": "1103018944541673110312010894726876418042"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::carrying_mul_add",
    "hash": "79060093783245716737284402383340163021"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::cast_signed",
    "hash": "782187223650757410616308541949978594266"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::checked_add",
    "hash": "1455981713251836952712444545505179985458"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::checked_add_signed",
    "hash": "488834736548725937612987274866282167827"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::checked_div",
    "hash": "355498700207045617110579280156505965022"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::checked_div_euclid",
    "hash": "104387781384482577613708570603160537658"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::checked_exact_div",
    "hash": "1254546038526385061716774935173049267002"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::checked_ilog",
    "hash": "930891886916861937113220793911597181611"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::checked_ilog10",
    "hash": "1022528831092837272815448087881252430918"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::checked_ilog2",
    "hash": "79228223270095494796655584926694772210"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::checked_mul",
    "hash": "95192575085785469289288359254638779719"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::checked_neg",
    "hash": "140664325264726250398306527328879484535"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::checked_next_multiple_of",
    "hash": "32130521935408067672639644884780073815"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::checked_next_power_of_two",
    "hash": "569396879141672616214809139766161242910"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::checked_pow",
    "hash": "393582077641935476913001480209656658502"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::checked_rem",
    "hash": "1811170501985073782011238806469136860980"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::checked_rem_euclid",
    "hash": "136386859277317997228989711067121413183"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::checked_shl",
    "hash": "1205719377758754292816336691239433901813"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::checked_shr",
    "hash": "731895908472648956313628755928683587381"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::checked_signed_diff",
    "hash": "113398600516173562877889843583657573474"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::checked_sub",
    "hash": "159460669612251795398141976759590530952"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::checked_sub_signed",
    "hash": "73018112493762017499446996718062484322"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::count_ones",
    "hash": "97476146993647727263474196732632981310"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::count_zeros",
    "hash": "45232492955094872332816270826672084192"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::div_ceil",
    "hash": "172801204783006045514799574869403721334"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::div_euclid",
    "hash": "1281597399236042584914696328521858774400"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::div_floor",
    "hash": "216629745870254792017592404426993836598"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::exact_div",
    "hash": "326647921022434729014159289617475048803"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::from_be",
    "hash": "1544719321950667118615011064407134945372"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::from_be_bytes",
    "hash": "494715667562051695815054218463501885223"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::from_le",
    "hash": "56052332382064321095060885172556783721"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::from_le_bytes",
    "hash": "880932045693259955612818394357352139263"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::from_ne_bytes",
    "hash": "2196119244775695914569420571779646670"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::ilog",
    "hash": "132270891841824417113973968606051540364"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::ilog10",
    "hash": "1658644879491003936312743980629072633084"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::ilog2",
    "hash": "869184492806902675613761766519375755339"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::is_multiple_of",
    "hash": "6514160558339433513868293327804779623"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::is_power_of_two",
    "hash": "45241887526260658582664633239993146507"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::isolate_least_significant_one",
    "hash": "33796173187517629618265550603266393208"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::isolate_most_significant_one",
    "hash": "48791146208730842736024316173258910538"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::isqrt",
    "hash": "59020347486255734138338307162963062670"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::leading_ones",
    "hash": "62942586530605609731002827946358810613"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::leading_zeros",
    "hash": "1515786061940137325016409704126767377678"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::max_value",
    "hash": "18138622306071995075372963189618501121"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::min_value",
    "hash": "1318570123462198835115870364290321000128"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::next_multiple_of",
    "hash": "155803617266941435922319962510385248222"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::next_power_of_two",
    "hash": "1445991569696936179510200669757533182986"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::one_less_than_next_power_of_two",
    "hash": "1314822625072608801710790855314212521352"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::overflowing_add",
    "hash": "7418434326773042031826248058658687296"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::overflowing_add_signed",
    "hash": "2297193003742044087549027363707843107"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::overflowing_div",
    "hash": "1259869413667328364415223936688601341322"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::overflowing_div_euclid",
    "hash": "58106029824554402739167046861751671467"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::overflowing_mul",
    "hash": "1717289788697370335516452123066625728772"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::overflowing_neg",
    "hash": "3697176226866320668211060314705923813"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::overflowing_pow",
    "hash": "1641624927901272500213013917282100486549"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::overflowing_rem",
    "hash": "605437036337420644818092978152331525767"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::overflowing_rem_euclid",
    "hash": "179729293998946771293781973845979567067"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::overflowing_shl",
    "hash": "1393052046886676302111695858739247448119"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::overflowing_shr",
    "hash": "1295288547006835205317418360602148827697"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::overflowing_sub",
    "hash": "533104622059205284817837877983580115998"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::overflowing_sub_signed",
    "hash": "372309136911469184112857081788675685889"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::pow",
    "hash": "112647907988151939021521366936792985164"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::rem_euclid",
    "hash": "156314085802784078612093459886752632154"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::reverse_bits",
    "hash": "392797634622138767310048532896488365065"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::rotate_left",
    "hash": "76862349351817050119103507771309235076"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::rotate_right",
    "hash": "25174204022602909157533546324554664156"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::saturating_add",
    "hash": "80701249595157298839869952322402564893"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::saturating_add_signed",
    "hash": "140001284765397111919459788460613230849"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::saturating_div",
    "hash": "435904393696318574911599983145773055103"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::saturating_mul",
    "hash": "579442040860963116517915340411856161753"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::saturating_pow",
    "hash": "37327551531712023091949870078300699374"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::saturating_sub",
    "hash": "45402664787698304338288220144688649873"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::saturating_sub_signed",
    "hash": "1236217468127645514117857849969023458691"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::strict_add",
    "hash": "993484317292802617010678533819335411902"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::strict_add_signed",
    "hash": "789303227961263854514180562315639837127"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::strict_div",
    "hash": "57717704983379425924675023442746264999"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::strict_div_euclid",
    "hash": "92747287769065598049887670732732419942"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::strict_mul",
    "hash": "1772279033362429582212621102372899490156"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::strict_neg",
    "hash": "139574953248768831807344665100064211506"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::strict_pow",
    "hash": "1801863107488198597917097397812991149068"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::strict_rem",
    "hash": "1557857134767273494013944090928071368622"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::strict_rem_euclid",
    "hash": "9837844507464626284894499563948041249"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::strict_shl",
    "hash": "1043511204032723029217920412787903346781"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::strict_shr",
    "hash": "617304407855888558315206624170613886717"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::strict_sub",
    "hash": "59413726665605705925394068164840827538"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::swap_bytes",
    "hash": "17865104882598334553509971667989354335"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::to_be",
    "hash": "183779993426893720339011775218111353691"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::to_be_bytes",
    "hash": "7325653215413403138826908251560481196"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::to_le",
    "hash": "115725284662978655826053740587959068119"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::to_le_bytes",
    "hash": "1100601318796006539514711334947463780456"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::to_ne_bytes",
    "hash": "1645715533429031213310053687815866682261"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::trailing_ones",
    "hash": "10283740931396115890998489634394803740"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::trailing_zeros",
    "hash": "1197054559160276745412880809553444011706"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::unbounded_shl",
    "hash": "965631615893449278613588059004129425"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::unbounded_shr",
    "hash": "61749664528259741607389505595001554985"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::unchecked_add",
    "hash": "82238255375868304519870604057524476826"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::unchecked_disjoint_bitor",
    "hash": "108574710068806464646670381346510653633"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::unchecked_exact_div",
    "hash": "16726651771136759709655482185149935208"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::unchecked_mul",
    "hash": "128271129398583679715606732841644805465"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::unchecked_shl",
    "hash": "528448860391737265816564210664743750513"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::unchecked_shr",
    "hash": "1096214647597921807316699228594900540994"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::unchecked_sub",
    "hash": "22307701812938062312436758415940620347"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::widening_mul",
    "hash": "11376502082054562026221384013714636227"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::wrapping_add",
    "hash": "8141572790530260118143900288426658558"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::wrapping_add_signed",
    "hash": "683848426822697354811297831307887418842"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::wrapping_div",
    "hash": "993495758606554400110872644776713822233"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::wrapping_div_euclid",
    "hash": "1666376721479157507014577953273801201944"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::wrapping_mul",
    "hash": "49989812574874614911114211692568937054"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::wrapping_neg",
    "hash": "1216133011452333486412518730153182605523"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::wrapping_next_power_of_two",
    "hash": "1692797741636008747916535689490465089354"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::wrapping_pow",
    "hash": "632881905105375483710041305431120935055"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::wrapping_rem",
    "hash": "56334748332529132649216743860709414418"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::wrapping_rem_euclid",
    "hash": "41339466383542395968488301744274582471"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::wrapping_shl",
    "hash": "832126082784739184313387433255704508198"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::wrapping_shr",
    "hash": "376777202239270853414740880535356956439"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::wrapping_sub",
    "hash": "50912562948494221016395692544639900934"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::wrapping_sub_signed",
    "hash": "1668627046887679895916232299491876715886"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::abs_diff",
    "hash": "8850644696306119287964523545649044939"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::bit_width",
    "hash": "33839313576915281992791908934393379033"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::borrowing_sub",
    "hash": "52491085349799364102210655214891971012"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::carrying_add",
    "hash": "1627452529809899722213493073063989936597"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::carrying_mul",
    "hash": "1572987984648360204014677475223452306999"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::carrying_mul_add",
    "hash": "178885284772748379897794805842528782769"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::cast_signed",
    "hash": "968314765756516781416983882318560638973"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::checked_add",
    "hash": "1107975224131503237910671528805011402335"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::checked_add_signed",
    "hash": "16792109942869662556447493124882380301"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::checked_div",
    "hash": "113692372249193485815303383452204696864"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::checked_div_euclid",
    "hash": "65179974626461622057528984296337523352"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::checked_exact_div",
    "hash": "98836829860987189999774151170536932815"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::checked_ilog",
    "hash": "35776980089088046105071666480870660990"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::checked_ilog10",
    "hash": "131437321525718495913914369953793634208"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::checked_ilog2",
    "hash": "69486892396498104859321433451980950783"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::checked_mul",
    "hash": "841346702487865802717731804342903065853"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::checked_neg",
    "hash": "126062114683696394910241787650697686779"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::checked_next_multiple_of",
    "hash": "60689537823057088568927729518581832660"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::checked_next_power_of_two",
    "hash": "107719310590660383166255182628932762587"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::checked_pow",
    "hash": "1120103182549775668113463865060880063733"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::checked_rem",
    "hash": "384007010510935064717539600615935832059"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::checked_rem_euclid",
    "hash": "547316538637902559712757111048550391429"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::checked_shl",
    "hash": "111261418112291285117800632591626732883"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::checked_shr",
    "hash": "365480273429084948186588635512909138"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::checked_signed_diff",
    "hash": "1807538488130962790516413765825251246007"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::checked_sub",
    "hash": "290360310864386898714327273451929980463"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::checked_sub_signed",
    "hash": "1038150283431516478510307124764829928000"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::count_ones",
    "hash": "1617054938297627622011998382328717871744"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::count_zeros",
    "hash": "758433085659524811211152863319630051128"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::div_ceil",
    "hash": "173436302369990875494614516656820640897"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::div_euclid",
    "hash": "48274945878397810722911099098437128854"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::div_floor",
    "hash": "708034024051903369612256437103479134946"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::exact_div",
    "hash": "11369310300701202464415720008851642241"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::from_be",
    "hash": "170310145237131706824391650806472893608"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::from_be_bytes",
    "hash": "52601318272908712986163752321746563137"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::from_le",
    "hash": "44968965561875383761642300280690182229"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::from_le_bytes",
    "hash": "338104974774190285413058349249434591489"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::from_ne_bytes",
    "hash": "1187394330470290540315609612625104918416"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::ilog",
    "hash": "298915457843408523917241342290163368140"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::ilog10",
    "hash": "76125077171152883121252895627658562756"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::ilog2",
    "hash": "46837697788760171237440623942406809594"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::is_multiple_of",
    "hash": "643349473068727846115780678007450923004"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::is_power_of_two",
    "hash": "1196638383615410162910723134175805433641"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::isolate_least_significant_one",
    "hash": "81053082676528284313929720937564780786"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::isolate_most_significant_one",
    "hash": "433917615991858300210840430529417358158"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::isqrt",
    "hash": "1837783405976642521512508852668391302728"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::leading_ones",
    "hash": "96168403082273323178178945377976573123"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::leading_zeros",
    "hash": "112277895237064810322015885940975556353"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::max_value",
    "hash": "108439384093503566713082063076159746481"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::min_value",
    "hash": "37694344864673419359619423841370005265"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::next_multiple_of",
    "hash": "929502646152659486912732455564841975734"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::next_power_of_two",
    "hash": "140971886593900928187037204422275880965"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::one_less_than_next_power_of_two",
    "hash": "202129796762505742410548853886879406190"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::overflowing_add",
    "hash": "1182371843420022111010336901757313084440"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::overflowing_add_signed",
    "hash": "10420533920630692833318814471402444097"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::overflowing_div",
    "hash": "1050320710890966313313509684835706524452"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::overflowing_div_euclid",
    "hash": "124060623155058323969284555068208202205"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::overflowing_mul",
    "hash": "26064680123257945312537992217601395168"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::overflowing_neg",
    "hash": "988562550522409944110355331427241180991"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::overflowing_pow",
    "hash": "110898283100864056835694247698620951424"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::overflowing_rem",
    "hash": "891189582777022967215649987199184241003"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::overflowing_rem_euclid",
    "hash": "82047575112201656679058585784870000725"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::overflowing_shl",
    "hash": "1346291778264145919814911088500663882149"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::overflowing_shr",
    "hash": "1237512560924753798513004976117697082489"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::overflowing_sub",
    "hash": "1801932849287312231112662193894546046488"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::overflowing_sub_signed",
    "hash": "266120971144556858111126499393971442552"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::pow",
    "hash": "6776959861457260448151595470512568421"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::rem_euclid",
    "hash": "738026770730289609415019032033664717930"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::reverse_bits",
    "hash": "980393813835973175715177081578973135369"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::rotate_left",
    "hash": "106718466985992284947113403985986385118"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::rotate_right",
    "hash": "883898622726052665210121697707965469754"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::saturating_add",
    "hash": "145328382030422815493757027328280748575"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::saturating_add_signed",
    "hash": "479091457470632979013041896680744639552"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::saturating_div",
    "hash": "1322965936192407388911134551448768957532"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::saturating_mul",
    "hash": "2709519979364785706084495437256819137"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::saturating_pow",
    "hash": "144635837656108916993816284138026105975"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::saturating_sub",
    "hash": "70955909177099101493595908581974321833"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::saturating_sub_signed",
    "hash": "87505499084607019054325231369280385922"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::strict_add",
    "hash": "1080530281730016983110755041163408877681"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::strict_add_signed",
    "hash": "49173653476987528026547876209481438360"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::strict_div",
    "hash": "1413967140757148257717239672859311093186"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::strict_div_euclid",
    "hash": "174241763209652990512253742606571433989"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::strict_mul",
    "hash": "63799179263420075741727672849772028464"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::strict_neg",
    "hash": "961016856821658311512260768587478199871"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::strict_pow",
    "hash": "19367569835122788628949475491055545054"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::strict_rem",
    "hash": "160656956835356445811662690009651571815"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::strict_rem_euclid",
    "hash": "702900796984748394818126023660577934821"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::strict_shl",
    "hash": "94949978724130147392823923904278520809"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::strict_shr",
    "hash": "129510059481049499347617713352469288896"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::strict_sub",
    "hash": "27694418257515777648118369924667194958"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::swap_bytes",
    "hash": "66383908879644100453307783739285892499"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::to_be",
    "hash": "898745754946136831911203528117648522025"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::to_be_bytes",
    "hash": "26557415405576431625285879824393641446"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::to_le",
    "hash": "78979945727459396066342947090880276869"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::to_le_bytes",
    "hash": "84809673608997974386313745255108718377"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::to_ne_bytes",
    "hash": "1820965465860527475513012370079133253319"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::trailing_ones",
    "hash": "477090902238855921011074698221453273070"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::trailing_zeros",
    "hash": "819280822522297337315891324953976535667"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::unbounded_shl",
    "hash": "1840195360015515011313432038881360826823"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::unbounded_shr",
    "hash": "1706205198927830447117339671973134788299"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::unchecked_add",
    "hash": "13796074939706337624507826801091410480"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::unchecked_disjoint_bitor",
    "hash": "85683807299509081393682326635365164518"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::unchecked_exact_div",
    "hash": "119700662615197514614315923462796327398"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::unchecked_mul",
    "hash": "47671599769472645743579992853525815048"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::unchecked_shl",
    "hash": "26721255342486209409782003957514041935"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::unchecked_shr",
    "hash": "102705820952470236866390884675109009975"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::unchecked_sub",
    "hash": "844957821118050201712037424530049556280"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::widening_mul",
    "hash": "169785365269559036689380061732562487025"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::wrapping_add",
    "hash": "74766200938378807122169159327788828495"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::wrapping_add_signed",
    "hash": "1408051446040808702911053275731773295355"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::wrapping_div",
    "hash": "31395147749561312157984139087904511150"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::wrapping_div_euclid",
    "hash": "27371362850280575389106904084860439904"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::wrapping_mul",
    "hash": "94922797404227066110182963288288755980"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::wrapping_neg",
    "hash": "140098059136664768822902899409836181525"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::wrapping_next_power_of_two",
    "hash": "151997544583558806921233872412506806137"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::wrapping_pow",
    "hash": "182635827140242194749364565003130225583"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::wrapping_rem",
    "hash": "42297274567867113694935789011777878265"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::wrapping_rem_euclid",
    "hash": "4723946624632228758580151691687645103"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::wrapping_shl",
    "hash": "35029329031411002104260371434704818793"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::wrapping_shr",
    "hash": "1680888163548926740317445386366445048465"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::wrapping_sub",
    "hash": "1290129509806421189411347835193128335421"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::wrapping_sub_signed",
    "hash": "1005689158775273278514157183667137354311"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i128> as ops::arith::Add>::add",
    "hash": "897591787369539429215835200773178240072"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i128> as ops::arith::Div>::div",
    "hash": "1280214637120313430913152952594765165429"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i128> as ops::arith::Mul>::mul",
    "hash": "146149220669458357818064569167064557084"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i128> as ops::arith::Neg>::neg",
    "hash": "11478180292631157672702002704530754960"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i128> as ops::arith::Rem>::rem",
    "hash": "509932765919705212317981065994460913217"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i128> as ops::arith::Sub>::sub",
    "hash": "147305230088039538482665061385483989247"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i128> as ops::bit::BitAnd>::bitand",
    "hash": "101164662785312712411471310018795590840"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i128> as ops::bit::BitOr>::bitor",
    "hash": "298514373092347011115432934245504851594"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i128> as ops::bit::BitXor>::bitxor",
    "hash": "180511733940084565122966997802964005869"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i128> as ops::bit::Not>::not",
    "hash": "1080385703285103930315988372029979673990"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i128> as ops::bit::Shl<usize>>::shl",
    "hash": "344751639549067791716719092888205143675"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i128> as ops::bit::Shr<usize>>::shr",
    "hash": "67862580849132663926518735151048382500"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i16> as ops::arith::Add>::add",
    "hash": "39344057503363837195683693278650487302"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i16> as ops::arith::Div>::div",
    "hash": "606065901575183836114067705696518522336"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i16> as ops::arith::Mul>::mul",
    "hash": "961940222760806010217456001239495059606"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i16> as ops::arith::Neg>::neg",
    "hash": "112587091763814797666693352620860970521"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i16> as ops::arith::Rem>::rem",
    "hash": "117803839541810360641680544794406748338"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i16> as ops::arith::Sub>::sub",
    "hash": "173122603586517066942728877314792019399"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i16> as ops::bit::BitAnd>::bitand",
    "hash": "1526295512755885864910957708536361579087"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i16> as ops::bit::BitOr>::bitor",
    "hash": "165750358112126172869387100828786635973"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i16> as ops::bit::BitXor>::bitxor",
    "hash": "1155502997869526188113406111947706740183"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i16> as ops::bit::Not>::not",
    "hash": "35781409932292528179888513117733682648"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i16> as ops::bit::Shl<usize>>::shl",
    "hash": "161057282839944141744505621869579501304"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i16> as ops::bit::Shr<usize>>::shr",
    "hash": "104037183275512744746186430227172365588"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i32> as ops::arith::Add>::add",
    "hash": "153328628309064098797752273801538154475"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i32> as ops::arith::Div>::div",
    "hash": "742603695980072038111297678615515516384"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i32> as ops::arith::Mul>::mul",
    "hash": "3719816266063461550378217292880364043"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i32> as ops::arith::Neg>::neg",
    "hash": "1775270776862247443615137414201974639458"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i32> as ops::arith::Rem>::rem",
    "hash": "96120513528493157169901027448518520279"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i32> as ops::arith::Sub>::sub",
    "hash": "676844713903362674916874947665002569146"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i32> as ops::bit::BitAnd>::bitand",
    "hash": "77995504624518896512806415724635712407"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i32> as ops::bit::BitOr>::bitor",
    "hash": "27087915781799373197917966323005511267"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i32> as ops::bit::BitXor>::bitxor",
    "hash": "307001110058800380812190811026181656122"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i32> as ops::bit::Not>::not",
    "hash": "624697639951500154715240489216508366250"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i32> as ops::bit::Shl<usize>>::shl",
    "hash": "681573490163881239212012902791666038967"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i32> as ops::bit::Shr<usize>>::shr",
    "hash": "134052794674310348079165023106702122990"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i64> as ops::arith::Add>::add",
    "hash": "39470892763119787668218790162583536092"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i64> as ops::arith::Div>::div",
    "hash": "127412815628469231958162980320010695592"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i64> as ops::arith::Mul>::mul",
    "hash": "23405477048621372947261108486951324755"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i64> as ops::arith::Neg>::neg",
    "hash": "1074799957791893867916134460064135214378"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i64> as ops::arith::Rem>::rem",
    "hash": "93399887204509287510744747075905564810"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i64> as ops::arith::Sub>::sub",
    "hash": "983285341898041643617469662802481788086"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i64> as ops::bit::BitAnd>::bitand",
    "hash": "907290357825821110410190282444209866656"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i64> as ops::bit::BitOr>::bitor",
    "hash": "153434159227791521138208265280412803069"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i64> as ops::bit::BitXor>::bitxor",
    "hash": "172684690676321801117903227673897045110"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i64> as ops::bit::Not>::not",
    "hash": "10773205465518345478904818317893619141"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i64> as ops::bit::Shl<usize>>::shl",
    "hash": "6260435662198511863098958828432959122"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i64> as ops::bit::Shr<usize>>::shr",
    "hash": "1213585554910952340510693158958281634073"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i8> as ops::arith::Add>::add",
    "hash": "6910195538183905692575537637856088084"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i8> as ops::arith::Div>::div",
    "hash": "24899862824877274922946011811114195907"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i8> as ops::arith::Mul>::mul",
    "hash": "841612906121379305814212395746061402211"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i8> as ops::arith::Neg>::neg",
    "hash": "313160298562893519113500430615015021944"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i8> as ops::arith::Rem>::rem",
    "hash": "148122314491729438715370728949566112624"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i8> as ops::arith::Sub>::sub",
    "hash": "136456340641508741218058420246219167794"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i8> as ops::bit::BitAnd>::bitand",
    "hash": "180736007256620124689550250363658503372"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i8> as ops::bit::BitOr>::bitor",
    "hash": "901390589321268824615896713394287104969"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i8> as ops::bit::BitXor>::bitxor",
    "hash": "151534311588932674416672131437924372449"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i8> as ops::bit::Not>::not",
    "hash": "921544155977178054313327731025576633879"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i8> as ops::bit::Shl<usize>>::shl",
    "hash": "309978746217450468616058798694563295704"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i8> as ops::bit::Shr<usize>>::shr",
    "hash": "72883134440982989484064518555635024432"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<isize> as ops::arith::Add>::add",
    "hash": "146100352248141658199644113860644762193"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<isize> as ops::arith::Div>::div",
    "hash": "1305091811022553068517004394085823168645"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<isize> as ops::arith::Mul>::mul",
    "hash": "766628715512540034633765746098132144"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<isize> as ops::arith::Neg>::neg",
    "hash": "148259815500750644102846173950996876515"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<isize> as ops::arith::Rem>::rem",
    "hash": "135797626626030386475465049462081762503"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<isize> as ops::arith::Sub>::sub",
    "hash": "467957103860153183110835184830479321212"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<isize> as ops::bit::BitAnd>::bitand",
    "hash": "114348362339737003163770976408444392219"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<isize> as ops::bit::BitOr>::bitor",
    "hash": "635701440034532772313005729893939324718"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<isize> as ops::bit::BitXor>::bitxor",
    "hash": "1619903802477553597712131247834751071524"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<isize> as ops::bit::Not>::not",
    "hash": "99715457932536882969535641954202464932"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<isize> as ops::bit::Shl<usize>>::shl",
    "hash": "474675613864455655415483583661106702371"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<isize> as ops::bit::Shr<usize>>::shr",
    "hash": "84916464845832173773507769781494901259"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u128> as ops::arith::Add>::add",
    "hash": "1662131198293740935617858328025753653440"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u128> as ops::arith::Div>::div",
    "hash": "160633998457712751525683914199365228247"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u128> as ops::arith::Mul>::mul",
    "hash": "1324603372910312602211876379907897475782"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u128> as ops::arith::Neg>::neg",
    "hash": "64156916414698999436531065049536602564"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u128> as ops::arith::Rem>::rem",
    "hash": "1368490208858207183818284812814920565317"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u128> as ops::arith::Sub>::sub",
    "hash": "583561807374467335046263997527847925"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u128> as ops::bit::BitAnd>::bitand",
    "hash": "96361946368539644418340049997051515097"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u128> as ops::bit::BitOr>::bitor",
    "hash": "80668697128160546164386145494524016043"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u128> as ops::bit::BitXor>::bitxor",
    "hash": "405903701329029115218321783761713495937"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u128> as ops::bit::Not>::not",
    "hash": "1176961030092571416015590265896325494908"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u128> as ops::bit::Shl<usize>>::shl",
    "hash": "4648247237458842675916124090164671052"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u128> as ops::bit::Shr<usize>>::shr",
    "hash": "1803747959424454108118383911639874990688"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u16> as ops::arith::Add>::add",
    "hash": "27279547929888814284779383083457571529"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u16> as ops::arith::Div>::div",
    "hash": "166174104514482810308725716836509561637"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u16> as ops::arith::Mul>::mul",
    "hash": "44691546242734728652857590483009423398"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u16> as ops::arith::Neg>::neg",
    "hash": "522993466087798748017181004878504943978"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u16> as ops::arith::Rem>::rem",
    "hash": "184107679257716589510711292275010247376"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u16> as ops::arith::Sub>::sub",
    "hash": "176144701678887257481672468076200584732"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u16> as ops::bit::BitAnd>::bitand",
    "hash": "198535126593816446213234638795312644421"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u16> as ops::bit::BitOr>::bitor",
    "hash": "1518482696389793516410592138067025410186"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u16> as ops::bit::BitXor>::bitxor",
    "hash": "341091549530762555011638160573262605526"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u16> as ops::bit::Not>::not",
    "hash": "7535075916960047870503102959535051258"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u16> as ops::bit::Shl<usize>>::shl",
    "hash": "7642196300719182121297209608171946766"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u16> as ops::bit::Shr<usize>>::shr",
    "hash": "134819850538473101689675380993235624485"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u32> as ops::arith::Add>::add",
    "hash": "1570645444247890981713830025528330430676"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u32> as ops::arith::Div>::div",
    "hash": "1036653682340365415513071277248848762524"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u32> as ops::arith::Mul>::mul",
    "hash": "121485711211394392217512810866557176106"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u32> as ops::arith::Neg>::neg",
    "hash": "114566468694432051017797242784242231932"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u32> as ops::arith::Rem>::rem",
    "hash": "8429524086414424775659771172243916841"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u32> as ops::arith::Sub>::sub",
    "hash": "635607804505935849611576134844826867695"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u32> as ops::bit::BitAnd>::bitand",
    "hash": "697144466650442035510000847556028335482"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u32> as ops::bit::BitOr>::bitor",
    "hash": "1576350361484156835311016318487761914134"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u32> as ops::bit::BitXor>::bitxor",
    "hash": "6305671215685978432561456932680882989"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u32> as ops::bit::Not>::not",
    "hash": "56707355756283417709828447192210548078"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u32> as ops::bit::Shl<usize>>::shl",
    "hash": "1014201038900858293213756879959409253551"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u32> as ops::bit::Shr<usize>>::shr",
    "hash": "66241837311629568871420486273613692904"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u64> as ops::arith::Add>::add",
    "hash": "12689877432451874712936554381439702140"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u64> as ops::arith::Div>::div",
    "hash": "1133794973288432831912810562348837824958"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u64> as ops::arith::Mul>::mul",
    "hash": "79047100060863426055647606357927295280"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u64> as ops::arith::Neg>::neg",
    "hash": "140535014842057498917170881820473849415"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u64> as ops::arith::Rem>::rem",
    "hash": "2519942822211252718221717115391011957"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u64> as ops::arith::Sub>::sub",
    "hash": "1003726718245533674218413408806423958636"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u64> as ops::bit::BitAnd>::bitand",
    "hash": "169241725579548512383145958306208614786"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u64> as ops::bit::BitOr>::bitor",
    "hash": "1706486687455808041613968691156258954946"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u64> as ops::bit::BitXor>::bitxor",
    "hash": "154609363626985017699830943098929347861"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u64> as ops::bit::Not>::not",
    "hash": "167160532041941533513111115430566998492"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u64> as ops::bit::Shl<usize>>::shl",
    "hash": "120640027255711024211200417798633987300"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u64> as ops::bit::Shr<usize>>::shr",
    "hash": "137285502226327148025647003047201608312"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u8> as ops::arith::Add>::add",
    "hash": "1578540946397037628712426348337017742402"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u8> as ops::arith::Div>::div",
    "hash": "59255466858657087234669927519516412535"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u8> as ops::arith::Mul>::mul",
    "hash": "56484440348365304299404577945343938288"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u8> as ops::arith::Neg>::neg",
    "hash": "1106626003331770735214733475791509354924"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u8> as ops::arith::Rem>::rem",
    "hash": "55252743910720796217672246714962375569"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u8> as ops::arith::Sub>::sub",
    "hash": "441897030371971213618321896475366605460"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u8> as ops::bit::BitAnd>::bitand",
    "hash": "39982303594436705708690266530205425745"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u8> as ops::bit::BitOr>::bitor",
    "hash": "1736605756467464731116536206519216591419"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u8> as ops::bit::BitXor>::bitxor",
    "hash": "180891249665594026323399056664487155240"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u8> as ops::bit::Not>::not",
    "hash": "238161266351277662210116577849561152844"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u8> as ops::bit::Shl<usize>>::shl",
    "hash": "723076293322975037113698330866757999622"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u8> as ops::bit::Shr<usize>>::shr",
    "hash": "146663269455632002124117716181354577421"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<usize> as ops::arith::Add>::add",
    "hash": "1529557606093737210115176680664948528450"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<usize> as ops::arith::Div>::div",
    "hash": "735672899239400486115995198318177919790"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<usize> as ops::arith::Mul>::mul",
    "hash": "183044348414336875526579217901363099221"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<usize> as ops::arith::Neg>::neg",
    "hash": "25539958744068337071070251560807279766"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<usize> as ops::arith::Rem>::rem",
    "hash": "137121599092549332281385057691948771336"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<usize> as ops::arith::Sub>::sub",
    "hash": "1629760521903518220416864202019349805486"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<usize> as ops::bit::BitAnd>::bitand",
    "hash": "1068936825690069137715902223233302625192"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<usize> as ops::bit::BitOr>::bitor",
    "hash": "95812062679306974132259566647357254696"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<usize> as ops::bit::BitXor>::bitxor",
    "hash": "21173023865802322513224637251045518469"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<usize> as ops::bit::Not>::not",
    "hash": "1652115363986132777610080651702086855911"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<usize> as ops::bit::Shl<usize>>::shl",
    "hash": "18428099956509166759988439046501886066"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<usize> as ops::bit::Shr<usize>>::shr",
    "hash": "26177359173067857044666025589523055252"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i128>::abs",
    "hash": "10923563007743580047597647814936720159"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i128>::count_ones",
    "hash": "295542405313625637010610005623662948223"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i128>::count_zeros",
    "hash": "100800950734900227182887681117174068298"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i128>::from_be",
    "hash": "43429823138674180844649339510435880816"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i128>::from_le",
    "hash": "67142247379377239568062272304415492305"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i128>::is_negative",
    "hash": "13853246858266666226987027667222979697"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i128>::is_positive",
    "hash": "10779299257877229775876322421428465909"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i128>::leading_zeros",
    "hash": "1716077291806589417715395337642165347957"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i128>::pow",
    "hash": "6048873201547239266761404374068046405"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i128>::reverse_bits",
    "hash": "18159605182580040864913204783608675556"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i128>::rotate_left",
    "hash": "731931377563660619814714852442328497574"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i128>::rotate_right",
    "hash": "261803283867361851292861644689586908"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i128>::signum",
    "hash": "1607602817694771394017763257650414051812"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i128>::swap_bytes",
    "hash": "175850047372904398434126983373184165958"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i128>::to_be",
    "hash": "1048287105097436631115643746070452464200"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i128>::to_le",
    "hash": "1248650368974743604513097452304872718194"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i128>::trailing_zeros",
    "hash": "16872362717021664756594895348652473422"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i16>::abs",
    "hash": "152783199687737880488134837654210528771"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i16>::count_ones",
    "hash": "1021354463283714913413743137820802225369"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i16>::count_zeros",
    "hash": "20900237554815115708063997301366809591"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i16>::from_be",
    "hash": "27069251554128656716880818955461648929"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i16>::from_le",
    "hash": "316558226024273749510039733204430197334"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i16>::is_negative",
    "hash": "8664900725763690181471226999129444058"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i16>::is_positive",
    "hash": "118006961866798276198683356183413149930"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i16>::leading_zeros",
    "hash": "644614821558918203113644364058811758359"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i16>::pow",
    "hash": "92998454698304133845598740196857614267"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i16>::reverse_bits",
    "hash": "658309488527392077710421750511128701269"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i16>::rotate_left",
    "hash": "58014849124693239642899104549212323244"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i16>::rotate_right",
    "hash": "32721079077626776324420371925556650995"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i16>::signum",
    "hash": "163652772174288616901147440199131100610"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i16>::swap_bytes",
    "hash": "418200547153875301918196634009497221653"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i16>::to_be",
    "hash": "165100524263930504098938072400939834650"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i16>::to_le",
    "hash": "927688208556459057817911702321791228562"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i16>::trailing_zeros",
    "hash": "348111128285366834518206658148633680609"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i32>::abs",
    "hash": "1293806007349084756610073532954415555437"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i32>::count_ones",
    "hash": "180308425282112789534620133748894478873"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i32>::count_zeros",
    "hash": "864865326861496177914355845566043182346"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i32>::from_be",
    "hash": "143720567731165991116610915918224310848"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i32>::from_le",
    "hash": "324273825509538635215683482444966134284"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i32>::is_negative",
    "hash": "472199570935554613512059748026395994806"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i32>::is_positive",
    "hash": "83462863150647921277184723885692218669"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i32>::leading_zeros",
    "hash": "5879547417617266086532284093662156515"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i32>::pow",
    "hash": "91347762261509348855474585616572621947"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i32>::reverse_bits",
    "hash": "154134256704664223928966513397230298237"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i32>::rotate_left",
    "hash": "764300100465133373616695020640308764184"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i32>::rotate_right",
    "hash": "844216962769138933015861499710502584641"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i32>::signum",
    "hash": "1343255510769213165015859869655577148376"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i32>::swap_bytes",
    "hash": "729177487445704813213858710974630774255"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i32>::to_be",
    "hash": "19633865102567266027151516116022365124"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i32>::to_le",
    "hash": "86469635516286142924513439436942812908"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i32>::trailing_zeros",
    "hash": "651070226933845787114307019870358409929"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i64>::abs",
    "hash": "11051073951376597974862396874099502216"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i64>::count_ones",
    "hash": "46732410808408181611641183510092800692"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i64>::count_zeros",
    "hash": "78539563024399362621339914964296028836"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i64>::from_be",
    "hash": "1503259714377247975616642823133270841803"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i64>::from_le",
    "hash": "97850561365240639507599379917367822399"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i64>::is_negative",
    "hash": "566474161009267013613516284934534401070"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i64>::is_positive",
    "hash": "1679009252610777143715476616356042138695"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i64>::leading_zeros",
    "hash": "1574559562840965349117502899424540662990"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i64>::pow",
    "hash": "103582168160822507422096362989434643014"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i64>::reverse_bits",
    "hash": "26690733807554009004057556349875302948"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i64>::rotate_left",
    "hash": "125760914171590450128898437264821074440"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i64>::rotate_right",
    "hash": "948605187320223210716192390391046690930"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i64>::signum",
    "hash": "854991450912234295512883704370560429246"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i64>::swap_bytes",
    "hash": "32365881737320393001131693307641626688"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i64>::to_be",
    "hash": "25746473309505479567018994399135923509"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i64>::to_le",
    "hash": "334980212102638141117636368663703890627"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i64>::trailing_zeros",
    "hash": "163549910298696805412326748086433133341"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i8>::abs",
    "hash": "99260754516419456539249380567428894020"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i8>::count_ones",
    "hash": "396194738777387733817653984274881161684"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i8>::count_zeros",
    "hash": "76507668624576351824578772558391161645"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i8>::from_be",
    "hash": "141880951156063205358786688693233769088"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i8>::from_le",
    "hash": "178460491460772743399835467274223541844"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i8>::is_negative",
    "hash": "1610948037044929662316210031696409902925"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i8>::is_positive",
    "hash": "18604360480786697431221978388007706842"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i8>::leading_zeros",
    "hash": "983848832560301036710733431430972218555"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i8>::pow",
    "hash": "99753682922306208058743133028607855413"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i8>::reverse_bits",
    "hash": "89490089095952779971995125980826616051"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i8>::rotate_left",
    "hash": "96379539462943038826349246759292977159"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i8>::rotate_right",
    "hash": "738155413857444634211260117169802812300"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i8>::signum",
    "hash": "176320461603528082204711700373823883511"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i8>::swap_bytes",
    "hash": "49534795207500220186433541452699255746"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i8>::to_be",
    "hash": "12641139249936083001535643858608568646"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i8>::to_le",
    "hash": "1079457505647869905245370804606724263"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i8>::trailing_zeros",
    "hash": "892019443985127970316528360721166993197"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<isize>::abs",
    "hash": "593829641791072296115913035579494064283"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<isize>::count_ones",
    "hash": "1522976708640208613316057800636854587350"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<isize>::count_zeros",
    "hash": "1220333414449172348212529285395820521555"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<isize>::from_be",
    "hash": "314605167231848083811443378344636031329"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<isize>::from_le",
    "hash": "678434990474949552714450085006858650042"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<isize>::is_negative",
    "hash": "6252466225046004599523151727966137851"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<isize>::is_positive",
    "hash": "675937542732954886313023849481883865207"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<isize>::leading_zeros",
    "hash": "144830961600010601575161174872740436699"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<isize>::pow",
    "hash": "8386612952824106099644522561002571548"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<isize>::reverse_bits",
    "hash": "32640031220309755293160501860527161994"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<isize>::rotate_left",
    "hash": "57592428126947243231142092237017222796"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<isize>::rotate_right",
    "hash": "1473785208602630436910324442896788793379"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<isize>::signum",
    "hash": "1406601633803749124614264576009008891493"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<isize>::swap_bytes",
    "hash": "513581425680771971115551582982271618162"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<isize>::to_be",
    "hash": "348861008621707937116506274841657300152"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<isize>::to_le",
    "hash": "71734158475815693484572782574425942124"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<isize>::trailing_zeros",
    "hash": "1637926109927776289816273250424751049596"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u128>::count_ones",
    "hash": "172557101887701516538548049444663970410"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u128>::count_zeros",
    "hash": "120350920610881046996723871226620762103"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u128>::from_be",
    "hash": "1601626378886970307414565896787784426590"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u128>::from_le",
    "hash": "246101298984570921717443066766863294173"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u128>::is_power_of_two",
    "hash": "1826559349415156877215529872084627822246"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u128>::leading_zeros",
    "hash": "80149965620768314330357293554236233"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u128>::next_power_of_two",
    "hash": "907114447216558591517314652676361116184"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u128>::pow",
    "hash": "454999081224023876318415699348177670028"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u128>::reverse_bits",
    "hash": "30924260871877007607655701144463092706"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u128>::rotate_left",
    "hash": "550316079788926712716651996343308783405"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u128>::rotate_right",
    "hash": "799681763625165880514846734682571322998"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u128>::swap_bytes",
    "hash": "874688040774467764848285820401483205"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u128>::to_be",
    "hash": "40072366977345252444524059428697314985"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u128>::to_le",
    "hash": "1049612159870419009013691953229600572779"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u128>::trailing_zeros",
    "hash": "557366901938590636210862173011089904292"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u16>::count_ones",
    "hash": "388327264957561710313899405254651698720"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u16>::count_zeros",
    "hash": "181485355495144525641994800176429564297"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u16>::from_be",
    "hash": "37356021435816777818357018886757243979"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u16>::from_le",
    "hash": "120788100295256722647886415455631128249"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u16>::is_power_of_two",
    "hash": "882385638021737294910422345145057037768"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u16>::leading_zeros",
    "hash": "16948765391160653158151957077476271336"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u16>::next_power_of_two",
    "hash": "59978925960872763082681529233235450269"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u16>::pow",
    "hash": "4039082715126365116269643022920096311"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u16>::reverse_bits",
    "hash": "1750526754832592741312671949595983170481"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u16>::rotate_left",
    "hash": "143189023968362405327776479238284196578"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u16>::rotate_right",
    "hash": "125732267650353657424414565024340863389"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u16>::swap_bytes",
    "hash": "749749636928660469113212225261246634183"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u16>::to_be",
    "hash": "529844077385563230714725031385125926167"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u16>::to_le",
    "hash": "1487558593925253746613966133767380674584"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u16>::trailing_zeros",
    "hash": "1367387147682799805416121349497126061004"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u32>::count_ones",
    "hash": "84078121945495638411615144249710276820"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u32>::count_zeros",
    "hash": "38234357847374729284642298610073442076"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u32>::from_be",
    "hash": "80346666166142446674084460233520944358"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u32>::from_le",
    "hash": "719083697348625448115086745011022466655"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u32>::is_power_of_two",
    "hash": "1421512670267587606018179181122928860168"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u32>::leading_zeros",
    "hash": "74643937975226960081940896643404487073"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u32>::next_power_of_two",
    "hash": "16460890089025151682278345084330497537"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u32>::pow",
    "hash": "23321099817194061114221180466018906169"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u32>::reverse_bits",
    "hash": "62026611645375489856951856595868383319"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u32>::rotate_left",
    "hash": "75037642935907105513136946136460932479"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u32>::rotate_right",
    "hash": "28751286371876606879945980269425718439"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u32>::swap_bytes",
    "hash": "41788778873747598526056076751526072992"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u32>::to_be",
    "hash": "283680166483303121212624741179814331997"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u32>::to_le",
    "hash": "1525353486137759539414937504947822804761"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u32>::trailing_zeros",
    "hash": "144255876262150617245839185812066808718"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u64>::count_ones",
    "hash": "9708354572218103452530234634470898120"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u64>::count_zeros",
    "hash": "49654693640444306427240652645654203277"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u64>::from_be",
    "hash": "1706225298901577187817438416519686790762"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u64>::from_le",
    "hash": "1161935389050699432513637732623165002353"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u64>::is_power_of_two",
    "hash": "83301064078102296783948688770283508661"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u64>::leading_zeros",
    "hash": "3067666042507150130245752895838197580"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u64>::next_power_of_two",
    "hash": "16548591941351737666464800453193933801"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u64>::pow",
    "hash": "1580032139156487762713887895761740614094"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u64>::reverse_bits",
    "hash": "170310691868323828961889526322185669369"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u64>::rotate_left",
    "hash": "152760289866971533566858115184032766122"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u64>::rotate_right",
    "hash": "52397700440141568173067401091642855052"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u64>::swap_bytes",
    "hash": "11170301069704366811723631249816799671"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u64>::to_be",
    "hash": "93582062357809246924916741240194169120"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u64>::to_le",
    "hash": "7899156934544436218917550898757951978"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u64>::trailing_zeros",
    "hash": "677670634428474297418263956161500565326"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u8>::count_ones",
    "hash": "673314848498963648613376380093626173384"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u8>::count_zeros",
    "hash": "1638383559420367665412666066520503843561"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u8>::from_be",
    "hash": "133103088527866015499265009528403772125"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u8>::from_le",
    "hash": "1545581487987848293013946783089141027297"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u8>::is_power_of_two",
    "hash": "264289411703419429413735543674945425200"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u8>::leading_zeros",
    "hash": "1750275434753364020016246701137382855793"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u8>::next_power_of_two",
    "hash": "621181437853286640813311042481678893628"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u8>::pow",
    "hash": "954668543009753898814471028717451272389"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u8>::reverse_bits",
    "hash": "306393641610490186916850495208510960373"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u8>::rotate_left",
    "hash": "1687292584066532177615322790416984871942"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u8>::rotate_right",
    "hash": "161787813062490485769954803024721435139"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u8>::swap_bytes",
    "hash": "584646695495569078115437240496195384932"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u8>::to_be",
    "hash": "11680362229171089332735948853233280999"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u8>::to_le",
    "hash": "56998075777512996104095428557494991642"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u8>::trailing_zeros",
    "hash": "12663193656085832013899340772913251843"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<usize>::count_ones",
    "hash": "412876164627992876912555057347343526266"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<usize>::count_zeros",
    "hash": "728502724590020650511009994400059374965"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<usize>::from_be",
    "hash": "1065273749004017880712955580016385994371"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<usize>::from_le",
    "hash": "1362751597608914515913454867166207702713"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<usize>::is_power_of_two",
    "hash": "1124858263093906922613680617277794399860"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<usize>::leading_zeros",
    "hash": "20468850994588569211077974846615719168"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<usize>::next_power_of_two",
    "hash": "136647274378328615322774729810533181276"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<usize>::pow",
    "hash": "112975918193848950941288216764328999766"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<usize>::reverse_bits",
    "hash": "1769196028534821103512083741020336328290"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<usize>::rotate_left",
    "hash": "2296711728121517227549703338907056280"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<usize>::rotate_right",
    "hash": "164839745959409457805559386237022722001"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<usize>::swap_bytes",
    "hash": "344778308867954904816790631475862077445"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<usize>::to_be",
    "hash": "1427582250746612350811201963784326378588"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<usize>::to_le",
    "hash": "108425597758193203199269401433281777698"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<usize>::trailing_zeros",
    "hash": "333386914378498424312198644617225637174"
  },
  {
    "file": "core/src/ops/arith.rs",
    "func": "<f128 as ops::arith::Add>::add",
    "hash": "587521702197857614414114371541262355009"
  },
  {
    "file": "core/src/ops/arith.rs",
    "func": "<f128 as ops::arith::Div>::div",
    "hash": "77636922094700583316124013505478329543"
  },
  {
    "file": "core/src/ops/arith.rs",
    "func": "<f128 as ops::arith::Mul>::mul",
    "hash": "23495384645468358504489942788364196321"
  },
  {
    "file": "core/src/ops/arith.rs",
    "func": "<f128 as ops::arith::Neg>::neg",
    "hash": "6297897580989853158583572983908794717"
  },
  {
    "file": "core/src/ops/arith.rs",
    "func": "<f128 as ops::arith::Rem>::rem",
    "hash": "1076279004167994556011252673525701458535"
  },
  {
    "file": "core/src/ops/arith.rs",
    "func": "<f128 as ops::arith::Sub>::sub",
    "hash": "202270598607397597715692482958725296623"
  },
  {
    "file": "core/src/ops/arith.rs",
    "func": "<f16 as ops::arith::Add>::add",
    "hash": "147252616488239827214726282545042552606"
  },
  {
    "file": "core/src/ops/arith.rs",
    "func": "<f16 as ops::arith::Div>::div",
    "hash": "11212813952995047650207700395425178898"
  },
  {
    "file": "core/src/ops/arith.rs",
    "func": "<f16 as ops::arith::Mul>::mul",
    "hash": "1208530151711415817214610247432432163971"
  },
  {
    "file": "core/src/ops/arith.rs",
    "func": "<f16 as ops::arith::Neg>::neg",
    "hash": "720418997408535293710639197585374950264"
  },
  {
    "file": "core/src/ops/arith.rs",
    "func": "<f16 as ops::arith::Rem>::rem",
    "hash": "348104491591071946412676989447464622705"
  },
  {
    "file": "core/src/ops/arith.rs",
    "func": "<f16 as ops::arith::Sub>::sub",
    "hash": "298330607764119367613075831735238623344"
  },
  {
    "file": "core/src/ops/arith.rs",
    "func": "<f32 as ops::arith::Add>::add",
    "hash": "6654159964928801712947440280452631971"
  },
  {
    "file": "core/src/ops/arith.rs",
    "func": "<f32 as ops::arith::Div>::div",
    "hash": "107602553658477623465414018594921488977"
  },
  {
    "file": "core/src/ops/arith.rs",
    "func": "<f32 as ops::arith::Mul>::mul",
    "hash": "72782397053872702459787085987705343"
  },
  {
    "file": "core/src/ops/arith.rs",
    "func": "<f32 as ops::arith::Neg>::neg",
    "hash": "8313967490340645318406089482631713184"
  },
  {
    "file": "core/src/ops/arith.rs",
    "func": "<f32 as ops::arith::Rem>::rem",
    "hash": "891445238330051988710934806695302119890"
  },
  {
    "file": "core/src/ops/arith.rs",
    "func": "<f32 as ops::arith::Sub>::sub",
    "hash": "234780307988919112415946964258816892325"
  },
  {
    "file": "core/src/ops/arith.rs",
    "func": "<f64 as ops::arith::Add>::add",
    "hash": "140835045825627110562660419056988362641"
  },
  {
    "file": "core/src/ops/arith.rs",
    "func": "<f64 as ops::arith::Div>::div",
    "hash": "138466166245489288118332488279767543513"
  },
  {
    "file": "core/src/ops/arith.rs",
    "func": "<f64 as ops::arith::Mul>::mul",
    "hash": "1938704943929068579072988817006130090"
  },
  {
    "file": "core/src/ops/arith.rs",
    "func": "<f64 as ops::arith::Neg>::neg",
    "hash": "152709275383885510889136586265811877018"
  },
  {
    "file": "core/src/ops/arith.rs",
    "func": "<f64 as ops::arith::Rem>::rem",
    "hash": "86284266344555334001797258108210213164"
  },
  {
    "file": "core/src/ops/arith.rs",
    "func": "<f64 as ops::arith::Sub>::sub",
    "hash": "162980694548545971999143790492387503163"
  },
  {
    "file": "core/src/ops/arith.rs",
    "func": "<i128 as ops::arith::Add>::add",
    "hash": "1648033817357546037416383960780008982381"
  },
  {
    "file": "core/src/ops/arith.rs",
    "func": "<i128 as ops::arith::Div>::div",
    "hash": "97582341174641706428229719626712535891"
  },
  {
    "file": "core/src/ops/arith.rs",
    "func": "<i128 as ops::arith::Mul>::mul",
    "hash": "133510112784435077511226357617371973211"
  },
  {
    "file": "core/src/ops/arith.rs",
    "func": "<i128 as ops::arith::Neg>::neg",
    "hash": "301968805091197824710439648279634521328"
  },
  {
    "file": "core/src/ops/arith.rs",
    "func": "<i128 as ops::arith::Rem>::rem",
    "hash": "116207480739180394561403865676165507363"
  },
  {
    "file": "core/src/ops/arith.rs",
    "func": "<i128 as ops::arith::Sub>::sub",
    "hash": "143094036377361956106937467385362395126"
  },
  {
    "file": "core/src/ops/arith.rs",
    "func": "<i16 as ops::arith::Add>::add",
    "hash": "804323763254065848913101683673944517040"
  },
  {
    "file": "core/src/ops/arith.rs",
    "func": "<i16 as ops::arith::Div>::div",
    "hash": "14805468162452670331920093352917219358"
  },
  {
    "file": "core/src/ops/arith.rs",
    "func": "<i16 as ops::arith::Mul>::mul",
    "hash": "120963004045526385368893157884083004887"
  },
  {
    "file": "core/src/ops/arith.rs",
    "func": "<i16 as ops::arith::Neg>::neg",
    "hash": "1320307735184701677717398269792783796244"
  },
  {
    "file": "core/src/ops/arith.rs",
    "func": "<i16 as ops::arith::Rem>::rem",
    "hash": "305547486495603906410182884271307770757"
  },
  {
    "file": "core/src/ops/arith.rs",
    "func": "<i16 as ops::arith::Sub>::sub",
    "hash": "4902032234862954995877559245678128289"
  },
  {
    "file": "core/src/ops/arith.rs",
    "func": "<i32 as ops::arith::Add>::add",
    "hash": "1641059391381744141117411254123487350852"
  },
  {
    "file": "core/src/ops/arith.rs",
    "func": "<i32 as ops::arith::Div>::div",
    "hash": "38300391961016359151692268140338131410"
  },
  {
    "file": "core/src/ops/arith.rs",
    "func": "<i32 as ops::arith::Mul>::mul",
    "hash": "22567115309122539289962362742735281414"
  },
  {
    "file": "core/src/ops/arith.rs",
    "func": "<i32 as ops::arith::Neg>::neg",
    "hash": "30745977088386990321821280341176112688"
  },
  {
    "file": "core/src/ops/arith.rs",
    "func": "<i32 as ops::arith::Rem>::rem",
    "hash": "1488046201487423690310685954747851113485"
  },
  {
    "file": "core/src/ops/arith.rs",
    "func": "<i32 as ops::arith::Sub>::sub",
    "hash": "1065407361112902267613550069778558159755"
  },
  {
    "file": "core/src/ops/arith.rs",
    "func": "<i64 as ops::arith::Add>::add",
    "hash": "118900337845288870968346842489255757992"
  },
  {
    "file": "core/src/ops/arith.rs",
    "func": "<i64 as ops::arith::Div>::div",
    "hash": "29962492946962349905460643429524360695"
  },
  {
    "file": "core/src/ops/arith.rs",
    "func": "<i64 as ops::arith::Mul>::mul",
    "hash": "1607091916486006713711302796639014280022"
  },
  {
    "file": "core/src/ops/arith.rs",
    "func": "<i64 as ops::arith::Neg>::neg",
    "hash": "253104028262213892713102253677069685747"
  },
  {
    "file": "core/src/ops/arith.rs",
    "func": "<i64 as ops::arith::Rem>::rem",
    "hash": "31751279301987184709017136914563542162"
  },
  {
    "file": "core/src/ops/arith.rs",
    "func": "<i64 as ops::arith::Sub>::sub",
    "hash": "580121190817092395212471139326053343199"
  },
  {
    "file": "core/src/ops/arith.rs",
    "func": "<i8 as ops::arith::Add>::add",
    "hash": "126324074838854535721971762377381402291"
  },
  {
    "file": "core/src/ops/arith.rs",
    "func": "<i8 as ops::arith::Div>::div",
    "hash": "1517800930083560457614006349565973853796"
  },
  {
    "file": "core/src/ops/arith.rs",
    "func": "<i8 as ops::arith::Mul>::mul",
    "hash": "54746690448762906981649023820426885273"
  },
  {
    "file": "core/src/ops/arith.rs",
    "func": "<i8 as ops::arith::Neg>::neg",
    "hash": "53518726521185315893595631870807850545"
  },
  {
    "file": "core/src/ops/arith.rs",
    "func": "<i8 as ops::arith::Rem>::rem",
    "hash": "23131831431392208341519163742630384489"
  },
  {
    "file": "core/src/ops/arith.rs",
    "func": "<i8 as ops::arith::Sub>::sub",
    "hash": "13945603027541330165018739144236655715"
  },
  {
    "file": "core/src/ops/arith.rs",
    "func": "<isize as ops::arith::Add>::add",
    "hash": "1830003079626527673516008289563416440449"
  },
  {
    "file": "core/src/ops/arith.rs",
    "func": "<isize as ops::arith::Div>::div",
    "hash": "22425857051041980481201713262953373934"
  },
  {
    "file": "core/src/ops/arith.rs",
    "func": "<isize as ops::arith::Mul>::mul",
    "hash": "505798866566671298015034185882985230439"
  },
  {
    "file": "core/src/ops/arith.rs",
    "func": "<isize as ops::arith::Neg>::neg",
    "hash": "16540749438462496700444790894612816343"
  },
  {
    "file": "core/src/ops/arith.rs",
    "func": "<isize as ops::arith::Rem>::rem",
    "hash": "2133086057314479371443862149783112274"
  },
  {
    "file": "core/src/ops/arith.rs",
    "func": "<isize as ops::arith::Sub>::sub",
    "hash": "1090439217227803234112357502701262072352"
  },
  {
    "file": "core/src/ops/arith.rs",
    "func": "<u128 as ops::arith::Add>::add",
    "hash": "996394638817395279916296111414058642007"
  },
  {
    "file": "core/src/ops/arith.rs",
    "func": "<u128 as ops::arith::Div>::div",
    "hash": "12070971567019461234302413155024228925"
  },
  {
    "file": "core/src/ops/arith.rs",
    "func": "<u128 as ops::arith::Mul>::mul",
    "hash": "1824535752211387899312965425483029766875"
  },
  {
    "file": "core/src/ops/arith.rs",
    "func": "<u128 as ops::arith::Rem>::rem",
    "hash": "139362679099899836869814266721396469255"
  },
  {
    "file": "core/src/ops/arith.rs",
    "func": "<u128 as ops::arith::Sub>::sub",
    "hash": "24323145381178441958202031247799419056"
  },
  {
    "file": "core/src/ops/arith.rs",
    "func": "<u16 as ops::arith::Add>::add",
    "hash": "1821874189491788256013687119399626924333"
  },
  {
    "file": "core/src/ops/arith.rs",
    "func": "<u16 as ops::arith::Div>::div",
    "hash": "80473291589023587618236839647443177135"
  },
  {
    "file": "core/src/ops/arith.rs",
    "func": "<u16 as ops::arith::Mul>::mul",
    "hash": "1635687644423618484914137143048072445834"
  },
  {
    "file": "core/src/ops/arith.rs",
    "func": "<u16 as ops::arith::Rem>::rem",
    "hash": "99587791594069289972258845907757832101"
  },
  {
    "file": "core/src/ops/arith.rs",
    "func": "<u16 as ops::arith::Sub>::sub",
    "hash": "34844195959167899216995270741793392016"
  },
  {
    "file": "core/src/ops/arith.rs",
    "func": "<u32 as ops::arith::Add>::add",
    "hash": "1736443804618833545015273610892415659611"
  },
  {
    "file": "core/src/ops/arith.rs",
    "func": "<u32 as ops::arith::Div>::div",
    "hash": "1440950763975467621710982502069073665218"
  },
  {
    "file": "core/src/ops/arith.rs",
    "func": "<u32 as ops::arith::Mul>::mul",
    "hash": "87855985626270619097822344509912885062"
  },
  {
    "file": "core/src/ops/arith.rs",
    "func": "<u32 as ops::arith::Rem>::rem",
    "hash": "115914492802736206513942422914514650180"
  },
  {
    "file": "core/src/ops/arith.rs",
    "func": "<u32 as ops::arith::Sub>::sub",
    "hash": "10472345935978673833158369420689244465"
  },
  {
    "file": "core/src/ops/arith.rs",
    "func": "<u64 as ops::arith::Add>::add",
    "hash": "50372416931687023952588004593760203612"
  },
  {
    "file": "core/src/ops/arith.rs",
    "func": "<u64 as ops::arith::Div>::div",
    "hash": "4840056222476679148581296535409323683"
  },
  {
    "file": "core/src/ops/arith.rs",
    "func": "<u64 as ops::arith::Mul>::mul",
    "hash": "56246410123595803991679575405416160937"
  },
  {
    "file": "core/src/ops/arith.rs",
    "func": "<u64 as ops::arith::Rem>::rem",
    "hash": "1042710292364294964215035449061945756447"
  },
  {
    "file": "core/src/ops/arith.rs",
    "func": "<u64 as ops::arith::Sub>::sub",
    "hash": "145502749415879442039760066064622527207"
  },
  {
    "file": "core/src/ops/arith.rs",
    "func": "<u8 as ops::arith::Add>::add",
    "hash": "184388962804506548496208764258708295840"
  },
  {
    "file": "core/src/ops/arith.rs",
    "func": "<u8 as ops::arith::Div>::div",
    "hash": "4022676547935835625613219446488568037"
  },
  {
    "file": "core/src/ops/arith.rs",
    "func": "<u8 as ops::arith::Mul>::mul",
    "hash": "19705391981723609462915932871645897974"
  },
  {
    "file": "core/src/ops/arith.rs",
    "func": "<u8 as ops::arith::Rem>::rem",
    "hash": "1469338120271152053915440029281232848110"
  },
  {
    "file": "core/src/ops/arith.rs",
    "func": "<u8 as ops::arith::Sub>::sub",
    "hash": "1404301623446508076324800636591061021"
  },
  {
    "file": "core/src/ops/arith.rs",
    "func": "<usize as ops::arith::Add>::add",
    "hash": "101403911046503275949329528255550312338"
  },
  {
    "file": "core/src/ops/arith.rs",
    "func": "<usize as ops::arith::Div>::div",
    "hash": "137813230823538801926729936486220731115"
  },
  {
    "file": "core/src/ops/arith.rs",
    "func": "<usize as ops::arith::Mul>::mul",
    "hash": "984483797182882398011870016578602904469"
  },
  {
    "file": "core/src/ops/arith.rs",
    "func": "<usize as ops::arith::Rem>::rem",
    "hash": "780092420100376533415692117712263411110"
  },
  {
    "file": "core/src/ops/arith.rs",
    "func": "<usize as ops::arith::Sub>::sub",
    "hash": "1648970327288306036816761509589971909571"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<bool as ops::bit::BitAnd>::bitand",
    "hash": "86409604819609181888853538038031596381"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<bool as ops::bit::BitOr>::bitor",
    "hash": "1475304698249014259216298290079494463158"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<bool as ops::bit::BitXor>::bitxor",
    "hash": "1076271514984039111313849860136888959713"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<bool as ops::bit::Not>::not",
    "hash": "569096085622936511316101172491763184692"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i128 as ops::bit::BitAnd>::bitand",
    "hash": "1752148883115699614714925016538695659498"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i128 as ops::bit::BitOr>::bitor",
    "hash": "1270578949503836572814999059234356616362"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i128 as ops::bit::BitXor>::bitxor",
    "hash": "1646113093681087933110887879640631892158"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i128 as ops::bit::Not>::not",
    "hash": "131421570457600916214653803257295702611"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i128 as ops::bit::Shl<i16>>::shl",
    "hash": "174025621013083162056920881114241821623"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i128 as ops::bit::Shl<i32>>::shl",
    "hash": "429330266543032316718210295342301366557"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i128 as ops::bit::Shl<i64>>::shl",
    "hash": "104613047348628020744765258786500416380"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i128 as ops::bit::Shl<i8>>::shl",
    "hash": "112310864993072521532424496148791373380"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i128 as ops::bit::Shl<isize>>::shl",
    "hash": "71301213222489762014717016592594689181"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i128 as ops::bit::Shl<u128>>::shl",
    "hash": "158194444914019533712947527212532445844"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i128 as ops::bit::Shl<u16>>::shl",
    "hash": "3108825964593116319714961700635026214"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i128 as ops::bit::Shl<u32>>::shl",
    "hash": "82122241640126849383343412099657643664"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i128 as ops::bit::Shl<u64>>::shl",
    "hash": "20370686127086711482932487857030359578"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i128 as ops::bit::Shl<u8>>::shl",
    "hash": "264677109962991646823133637681747706"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i128 as ops::bit::Shl<usize>>::shl",
    "hash": "905681469821479594460167402129990170"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i128 as ops::bit::Shl>::shl",
    "hash": "1561049428971653536715786188115469565167"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i128 as ops::bit::Shr<i16>>::shr",
    "hash": "1713907120752364263714994406990884049871"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i128 as ops::bit::Shr<i32>>::shr",
    "hash": "84708144856075899977732183149917402980"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i128 as ops::bit::Shr<i64>>::shr",
    "hash": "1244656755721836046914532663307991351864"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i128 as ops::bit::Shr<i8>>::shr",
    "hash": "892485395010910380010266574022793719195"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i128 as ops::bit::Shr<isize>>::shr",
    "hash": "81285645980759226963580448172319909480"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i128 as ops::bit::Shr<u128>>::shr",
    "hash": "15856307539856575953148162828072197260"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i128 as ops::bit::Shr<u16>>::shr",
    "hash": "1041370139293398049312827916264118042313"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i128 as ops::bit::Shr<u32>>::shr",
    "hash": "1101243138422288339814314172281408653086"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i128 as ops::bit::Shr<u64>>::shr",
    "hash": "12803520139535348493408718287513327745"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i128 as ops::bit::Shr<u8>>::shr",
    "hash": "118191837961035769137789379000079173"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i128 as ops::bit::Shr<usize>>::shr",
    "hash": "7490098212122611081121678622300584220"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i128 as ops::bit::Shr>::shr",
    "hash": "478193773694660073815038058954624037193"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i16 as ops::bit::BitAnd>::bitand",
    "hash": "1189743532613088347714063302118092609308"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i16 as ops::bit::BitOr>::bitor",
    "hash": "177656504447692748482771185824076960049"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i16 as ops::bit::BitXor>::bitxor",
    "hash": "6188589571296692791474127366137250556"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i16 as ops::bit::Not>::not",
    "hash": "144623456349132137863816688910303772441"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i16 as ops::bit::Shl<i128>>::shl",
    "hash": "169658328711306927544168067534631411797"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i16 as ops::bit::Shl<i32>>::shl",
    "hash": "1834305126581815281215007521998732007640"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i16 as ops::bit::Shl<i64>>::shl",
    "hash": "886947704956353656112839448428535320719"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i16 as ops::bit::Shl<i8>>::shl",
    "hash": "366197581637759888312307201369001579271"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i16 as ops::bit::Shl<isize>>::shl",
    "hash": "801932375405631109312820246108869802065"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i16 as ops::bit::Shl<u128>>::shl",
    "hash": "576930161667001206213113691852551072361"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i16 as ops::bit::Shl<u16>>::shl",
    "hash": "50770253538649266981585586899812201224"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i16 as ops::bit::Shl<u32>>::shl",
    "hash": "86182766577738575345145416363915778305"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i16 as ops::bit::Shl<u64>>::shl",
    "hash": "23516486849097560779748315561353022291"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i16 as ops::bit::Shl<u8>>::shl",
    "hash": "371280282847580630015478318723246901209"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i16 as ops::bit::Shl<usize>>::shl",
    "hash": "66975455923908000298574293358722286082"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i16 as ops::bit::Shl>::shl",
    "hash": "139707216263870538871605610870120004"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i16 as ops::bit::Shr<i128>>::shr",
    "hash": "58639232807472723587097390032461855687"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i16 as ops::bit::Shr<i32>>::shr",
    "hash": "50214803729314756113503688119306889097"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i16 as ops::bit::Shr<i64>>::shr",
    "hash": "147777024819740288434959830272533762034"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i16 as ops::bit::Shr<i8>>::shr",
    "hash": "340997960806668721215764445804460277029"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i16 as ops::bit::Shr<isize>>::shr",
    "hash": "15583589092856016828913470185201865177"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i16 as ops::bit::Shr<u128>>::shr",
    "hash": "169902002708240882181022418193560837998"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i16 as ops::bit::Shr<u16>>::shr",
    "hash": "715212854338427565511119657609033736063"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i16 as ops::bit::Shr<u32>>::shr",
    "hash": "1506426956489276082312675456484897920057"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i16 as ops::bit::Shr<u64>>::shr",
    "hash": "1681917508914763721814886881109500239812"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i16 as ops::bit::Shr<u8>>::shr",
    "hash": "1164317168723793502513298072717569135736"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i16 as ops::bit::Shr<usize>>::shr",
    "hash": "50701425646081195604732173005299717702"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i16 as ops::bit::Shr>::shr",
    "hash": "118971898084772281978268214194918930046"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i32 as ops::bit::BitAnd>::bitand",
    "hash": "17491520980321612019551817722521002958"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i32 as ops::bit::BitOr>::bitor",
    "hash": "47781212646338724667813793093633645888"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i32 as ops::bit::BitXor>::bitxor",
    "hash": "1161370245185010943112232185207122305845"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i32 as ops::bit::Not>::not",
    "hash": "136667882642588885917704758612469062222"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i32 as ops::bit::Shl<i128>>::shl",
    "hash": "3985500909530555784674480961502853016"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i32 as ops::bit::Shl<i16>>::shl",
    "hash": "121233142671836151043979654328714385336"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i32 as ops::bit::Shl<i64>>::shl",
    "hash": "763445219634297670116682115861783768184"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i32 as ops::bit::Shl<i8>>::shl",
    "hash": "2710604791329802854050075417398776041"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i32 as ops::bit::Shl<isize>>::shl",
    "hash": "170784040902967276142723806075173494067"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i32 as ops::bit::Shl<u128>>::shl",
    "hash": "1321993481558646774716678030866531543032"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i32 as ops::bit::Shl<u16>>::shl",
    "hash": "51295604721846142384081716561569284210"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i32 as ops::bit::Shl<u32>>::shl",
    "hash": "110229314911977959642943001403318493299"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i32 as ops::bit::Shl<u64>>::shl",
    "hash": "1246892504311458313015571136916182533008"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i32 as ops::bit::Shl<u8>>::shl",
    "hash": "713059866121151609316521444499429652180"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i32 as ops::bit::Shl<usize>>::shl",
    "hash": "131190352301260110591889792132830718573"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i32 as ops::bit::Shl>::shl",
    "hash": "1727977511661715069410668919434229566116"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i32 as ops::bit::Shr<i128>>::shr",
    "hash": "38370052685414950003200543258699556795"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i32 as ops::bit::Shr<i16>>::shr",
    "hash": "224517588542533904110793741367835793648"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i32 as ops::bit::Shr<i64>>::shr",
    "hash": "114318391500789653639995988538701525430"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i32 as ops::bit::Shr<i8>>::shr",
    "hash": "14518485373439640882234919309843733218"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i32 as ops::bit::Shr<isize>>::shr",
    "hash": "1152250527736318729012463453033732916376"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i32 as ops::bit::Shr<u128>>::shr",
    "hash": "7746173164827925121857296059766742995"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i32 as ops::bit::Shr<u16>>::shr",
    "hash": "7613234051158677980871033949232049699"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i32 as ops::bit::Shr<u32>>::shr",
    "hash": "61007761900163976223421844901204549995"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i32 as ops::bit::Shr<u64>>::shr",
    "hash": "170278501078354762002135748104206888659"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i32 as ops::bit::Shr<u8>>::shr",
    "hash": "143500681109367145981943625931963159880"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i32 as ops::bit::Shr<usize>>::shr",
    "hash": "858527355546757408213844830485871711754"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i32 as ops::bit::Shr>::shr",
    "hash": "12861009522103884547920019250397101055"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i64 as ops::bit::BitAnd>::bitand",
    "hash": "177610250858394772603635470958035239033"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i64 as ops::bit::BitOr>::bitor",
    "hash": "15538827816783618519467741151188114490"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i64 as ops::bit::BitXor>::bitxor",
    "hash": "73326693687653665112663972692099110789"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i64 as ops::bit::Not>::not",
    "hash": "8412608346297928723706604646373498011"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i64 as ops::bit::Shl<i128>>::shl",
    "hash": "20435025309499431499335766723810239575"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i64 as ops::bit::Shl<i16>>::shl",
    "hash": "1232245178875980671313835786322278141819"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i64 as ops::bit::Shl<i32>>::shl",
    "hash": "1582882763480978364410438563663044884779"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i64 as ops::bit::Shl<i8>>::shl",
    "hash": "130140986540610959712852822126397053200"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i64 as ops::bit::Shl<isize>>::shl",
    "hash": "429215020060736526410813251198021198699"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i64 as ops::bit::Shl<u128>>::shl",
    "hash": "79928098000626036474548817612438159014"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i64 as ops::bit::Shl<u16>>::shl",
    "hash": "1751086848730363685313421996217995166996"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i64 as ops::bit::Shl<u32>>::shl",
    "hash": "746549981037479075716183777564050497003"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i64 as ops::bit::Shl<u64>>::shl",
    "hash": "79699939778586067084913505809986314989"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i64 as ops::bit::Shl<u8>>::shl",
    "hash": "132103486654069149822766512635455446577"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i64 as ops::bit::Shl<usize>>::shl",
    "hash": "929481568200275614611511988054240462772"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i64 as ops::bit::Shl>::shl",
    "hash": "635980271102630166418039150134816336247"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i64 as ops::bit::Shr<i128>>::shr",
    "hash": "162447165970879240854322739949089629540"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i64 as ops::bit::Shr<i16>>::shr",
    "hash": "909668344087265741311873085568749975522"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i64 as ops::bit::Shr<i32>>::shr",
    "hash": "798076869248443101712859851111668880738"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i64 as ops::bit::Shr<i8>>::shr",
    "hash": "617313683638078310217672999346742928693"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i64 as ops::bit::Shr<isize>>::shr",
    "hash": "48441294479261308643922264832504497345"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i64 as ops::bit::Shr<u128>>::shr",
    "hash": "1751696460284864973412741768622044566422"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i64 as ops::bit::Shr<u16>>::shr",
    "hash": "12585658550473301242782941057576557245"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i64 as ops::bit::Shr<u32>>::shr",
    "hash": "180287763863950128409326078130941035191"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i64 as ops::bit::Shr<u64>>::shr",
    "hash": "172355787636035641995283415692974863313"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i64 as ops::bit::Shr<u8>>::shr",
    "hash": "1360164308664574260714524757188982898943"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i64 as ops::bit::Shr<usize>>::shr",
    "hash": "158385886309337587953987509943932114618"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i64 as ops::bit::Shr>::shr",
    "hash": "698611614761158653617674222892975269025"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i8 as ops::bit::BitAnd>::bitand",
    "hash": "132817566126672381835809733984637708341"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i8 as ops::bit::BitOr>::bitor",
    "hash": "222957438036408073612094501779274347555"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i8 as ops::bit::BitXor>::bitxor",
    "hash": "437233310386007381215498577575034159002"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i8 as ops::bit::Not>::not",
    "hash": "144566615249378970194117588503057385751"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i8 as ops::bit::Shl<i128>>::shl",
    "hash": "1156177021663575559814492716803783457352"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i8 as ops::bit::Shl<i16>>::shl",
    "hash": "790218446932294741116594772513340659949"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i8 as ops::bit::Shl<i32>>::shl",
    "hash": "47018850294334808474377006476323754722"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i8 as ops::bit::Shl<i64>>::shl",
    "hash": "3510796913291445732219314691124209439"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i8 as ops::bit::Shl<isize>>::shl",
    "hash": "193956475137438308618002610529149570314"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i8 as ops::bit::Shl<u128>>::shl",
    "hash": "1466112078122448016018190838778886032089"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i8 as ops::bit::Shl<u16>>::shl",
    "hash": "518173261940840440115927587198085720417"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i8 as ops::bit::Shl<u32>>::shl",
    "hash": "58320591270645659817456549601622056926"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i8 as ops::bit::Shl<u64>>::shl",
    "hash": "20023839794194033404225836499776925766"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i8 as ops::bit::Shl<u8>>::shl",
    "hash": "115384068079781400437853674098683440710"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i8 as ops::bit::Shl<usize>>::shl",
    "hash": "32864002955949094014455294566506583348"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i8 as ops::bit::Shl>::shl",
    "hash": "1296625956470943822016395608870080726300"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i8 as ops::bit::Shr<i128>>::shr",
    "hash": "147967313730462606721114423899851251917"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i8 as ops::bit::Shr<i16>>::shr",
    "hash": "142785555650281295036304498380268196150"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i8 as ops::bit::Shr<i32>>::shr",
    "hash": "23515389182346427167498444305829777457"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i8 as ops::bit::Shr<i64>>::shr",
    "hash": "84809524972346639225123719612308718929"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i8 as ops::bit::Shr<isize>>::shr",
    "hash": "31444753635641946393631524177476575035"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i8 as ops::bit::Shr<u128>>::shr",
    "hash": "266810443653221943917461438696601466374"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i8 as ops::bit::Shr<u16>>::shr",
    "hash": "1650166751510788506310501668326771430508"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i8 as ops::bit::Shr<u32>>::shr",
    "hash": "14625088328122596063888088453018117733"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i8 as ops::bit::Shr<u64>>::shr",
    "hash": "26656784075814778623747878147950473005"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i8 as ops::bit::Shr<u8>>::shr",
    "hash": "452492607919258389511019090397102018008"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i8 as ops::bit::Shr<usize>>::shr",
    "hash": "119094102506367695744142550925819285632"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i8 as ops::bit::Shr>::shr",
    "hash": "75809127720175054444760640707779236823"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<isize as ops::bit::BitAnd>::bitand",
    "hash": "17143725272365762951225868817320664225"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<isize as ops::bit::BitOr>::bitor",
    "hash": "145074959297777485174757826180098609983"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<isize as ops::bit::BitXor>::bitxor",
    "hash": "408080173021777572415261406426330596362"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<isize as ops::bit::Not>::not",
    "hash": "22115026176741229507041155961587629718"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<isize as ops::bit::Shl<i128>>::shl",
    "hash": "965504457192254740917443229301674635560"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<isize as ops::bit::Shl<i16>>::shl",
    "hash": "133596377327517850866745894815060664413"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<isize as ops::bit::Shl<i32>>::shl",
    "hash": "167191069589655157752766368129114777365"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<isize as ops::bit::Shl<i64>>::shl",
    "hash": "92068573179305434774167247976477133298"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<isize as ops::bit::Shl<i8>>::shl",
    "hash": "1285144121887515899114967750796871074539"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<isize as ops::bit::Shl<u128>>::shl",
    "hash": "913455788365850481412889544240077214576"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<isize as ops::bit::Shl<u16>>::shl",
    "hash": "5387159889950362272432289061120852461"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<isize as ops::bit::Shl<u32>>::shl",
    "hash": "1216532023080687012318299186967537190611"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<isize as ops::bit::Shl<u64>>::shl",
    "hash": "155161020664268364578604501754042328064"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<isize as ops::bit::Shl<u8>>::shl",
    "hash": "90961286908091287225674278697084668875"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<isize as ops::bit::Shl<usize>>::shl",
    "hash": "6188264263189285353677810307841062901"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<isize as ops::bit::Shl>::shl",
    "hash": "519725985072882169114703846780136084849"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<isize as ops::bit::Shr<i128>>::shr",
    "hash": "29910834269935969565477302417495885860"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<isize as ops::bit::Shr<i16>>::shr",
    "hash": "44912772979992583549973743278349765252"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<isize as ops::bit::Shr<i32>>::shr",
    "hash": "18529396848178802607591780880853680239"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<isize as ops::bit::Shr<i64>>::shr",
    "hash": "145276133986376501464012288390346487724"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<isize as ops::bit::Shr<i8>>::shr",
    "hash": "357417244459516433011923020961455140278"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<isize as ops::bit::Shr<u128>>::shr",
    "hash": "1333776338523698307485678684121899521"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<isize as ops::bit::Shr<u16>>::shr",
    "hash": "68286529413504946304218606350882276940"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<isize as ops::bit::Shr<u32>>::shr",
    "hash": "9784914734283985394725365455540160325"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<isize as ops::bit::Shr<u64>>::shr",
    "hash": "460860086623088557317139927962010786329"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<isize as ops::bit::Shr<u8>>::shr",
    "hash": "1378207021330726832015292842177889480983"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<isize as ops::bit::Shr<usize>>::shr",
    "hash": "1170107203140348314417249836641825106292"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<isize as ops::bit::Shr>::shr",
    "hash": "159039452707661098493209180085189715454"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u128 as ops::bit::BitAnd>::bitand",
    "hash": "1835947833115801549915859405928651320764"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u128 as ops::bit::BitOr>::bitor",
    "hash": "615027766014330451113022857564164705327"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u128 as ops::bit::BitXor>::bitxor",
    "hash": "675558885591589414216840360836568602089"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u128 as ops::bit::Not>::not",
    "hash": "206123599373162256613048096120108948295"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u128 as ops::bit::Shl<i128>>::shl",
    "hash": "125095548504946601773843007195974265584"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u128 as ops::bit::Shl<i16>>::shl",
    "hash": "8791134240434339892944685725516229658"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u128 as ops::bit::Shl<i32>>::shl",
    "hash": "6433095784957071887729729639560400681"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u128 as ops::bit::Shl<i64>>::shl",
    "hash": "118770154532437235541900481830565347399"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u128 as ops::bit::Shl<i8>>::shl",
    "hash": "26945166885054632805924924115352848329"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u128 as ops::bit::Shl<isize>>::shl",
    "hash": "8214320023222838448943881950073809533"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u128 as ops::bit::Shl<u16>>::shl",
    "hash": "2240663565432980674585329146762528393"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u128 as ops::bit::Shl<u32>>::shl",
    "hash": "161522424358648445129016591387598754199"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u128 as ops::bit::Shl<u64>>::shl",
    "hash": "4994431952392560512816281869666192369"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u128 as ops::bit::Shl<u8>>::shl",
    "hash": "937476795092463008112150401703399779403"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u128 as ops::bit::Shl<usize>>::shl",
    "hash": "364273215895201639410446399038170814907"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u128 as ops::bit::Shl>::shl",
    "hash": "163656923759808904529530507475158725572"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u128 as ops::bit::Shr<i128>>::shr",
    "hash": "900286406385862396512330654787151577460"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u128 as ops::bit::Shr<i16>>::shr",
    "hash": "142851651156004297906879913915714521162"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u128 as ops::bit::Shr<i32>>::shr",
    "hash": "613301662560276419717108098477053990039"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u128 as ops::bit::Shr<i64>>::shr",
    "hash": "1544223546237340357414426578763166824586"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u128 as ops::bit::Shr<i8>>::shr",
    "hash": "1095942516150100638910115134068718954944"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u128 as ops::bit::Shr<isize>>::shr",
    "hash": "31122619434955330548056756335215574224"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u128 as ops::bit::Shr<u16>>::shr",
    "hash": "94125616235602489087500818951970069219"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u128 as ops::bit::Shr<u32>>::shr",
    "hash": "150576688640951329014899323169127782286"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u128 as ops::bit::Shr<u64>>::shr",
    "hash": "30240890136801571912363439967132996752"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u128 as ops::bit::Shr<u8>>::shr",
    "hash": "67103089829310598516139244368634017124"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u128 as ops::bit::Shr<usize>>::shr",
    "hash": "33108806768619066993654628481236182620"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u128 as ops::bit::Shr>::shr",
    "hash": "472794349477235747914872343518537265662"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u16 as ops::bit::BitAnd>::bitand",
    "hash": "1692234217938737724715790970764352244438"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u16 as ops::bit::BitOr>::bitor",
    "hash": "154124870328276835957268772827731613854"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u16 as ops::bit::BitXor>::bitxor",
    "hash": "664591672925004972218013370627525448319"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u16 as ops::bit::Not>::not",
    "hash": "274261816378859948211831698560505615439"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u16 as ops::bit::Shl<i128>>::shl",
    "hash": "630626262724546799211697538127372534644"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u16 as ops::bit::Shl<i16>>::shl",
    "hash": "848269549258207255113243930321551814900"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u16 as ops::bit::Shl<i32>>::shl",
    "hash": "1750911301196304540116573720777078413643"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u16 as ops::bit::Shl<i64>>::shl",
    "hash": "40433669467723429267918831530069217760"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u16 as ops::bit::Shl<i8>>::shl",
    "hash": "858615444216777794811447953934073812860"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u16 as ops::bit::Shl<isize>>::shl",
    "hash": "75253480764983943046646937635894163592"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u16 as ops::bit::Shl<u128>>::shl",
    "hash": "135383701328900860603990337505708647560"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u16 as ops::bit::Shl<u32>>::shl",
    "hash": "1834171405718184576913678917906959352924"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u16 as ops::bit::Shl<u64>>::shl",
    "hash": "27399194759633419765491831212857828150"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u16 as ops::bit::Shl<u8>>::shl",
    "hash": "806790715926699176317617360892846951197"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u16 as ops::bit::Shl<usize>>::shl",
    "hash": "722521330024337760317620371375388824470"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u16 as ops::bit::Shl>::shl",
    "hash": "26046019330793721078145920884254797836"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u16 as ops::bit::Shr<i128>>::shr",
    "hash": "988211139835161989113845991408559207121"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u16 as ops::bit::Shr<i16>>::shr",
    "hash": "1092339095183780429410978048755094136037"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u16 as ops::bit::Shr<i32>>::shr",
    "hash": "42884676931360169424479354408046415702"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u16 as ops::bit::Shr<i64>>::shr",
    "hash": "1165861909319596686413625634071720604606"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u16 as ops::bit::Shr<i8>>::shr",
    "hash": "17630594503737170261055881870810229251"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u16 as ops::bit::Shr<isize>>::shr",
    "hash": "1064007521495268535410323041777534480432"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u16 as ops::bit::Shr<u128>>::shr",
    "hash": "125805359636453853213531439679259744379"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u16 as ops::bit::Shr<u32>>::shr",
    "hash": "177277588440001672466785981492964484411"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u16 as ops::bit::Shr<u64>>::shr",
    "hash": "129345423302829099726098397919654826630"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u16 as ops::bit::Shr<u8>>::shr",
    "hash": "826877108929808828713487522444005292055"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u16 as ops::bit::Shr<usize>>::shr",
    "hash": "153092332939026905578914381072350228020"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u16 as ops::bit::Shr>::shr",
    "hash": "138425744665687655846483932504683073384"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u32 as ops::bit::BitAnd>::bitand",
    "hash": "107626592447130496229005183898772725397"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u32 as ops::bit::BitOr>::bitor",
    "hash": "84585801727040041991628973311117715544"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u32 as ops::bit::BitXor>::bitxor",
    "hash": "164200826634470163341578175325629985255"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u32 as ops::bit::Not>::not",
    "hash": "788068360906277731513318676950182417125"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u32 as ops::bit::Shl<i128>>::shl",
    "hash": "145629589437434659792166996146824394397"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u32 as ops::bit::Shl<i16>>::shl",
    "hash": "37603912574305269785942685628546015045"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u32 as ops::bit::Shl<i32>>::shl",
    "hash": "143344803083498946529358533003024406131"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u32 as ops::bit::Shl<i64>>::shl",
    "hash": "1250322230578009579614692598566891889839"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u32 as ops::bit::Shl<i8>>::shl",
    "hash": "26787289389328242442866672737536640563"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u32 as ops::bit::Shl<isize>>::shl",
    "hash": "64202934392375440208972812729154933042"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u32 as ops::bit::Shl<u128>>::shl",
    "hash": "1111428520295793923817855757523165261060"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u32 as ops::bit::Shl<u16>>::shl",
    "hash": "29643912519842695362989802224013119494"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u32 as ops::bit::Shl<u64>>::shl",
    "hash": "158037425215484180789320604116373355247"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u32 as ops::bit::Shl<u8>>::shl",
    "hash": "122787360583111461733551771772159722368"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u32 as ops::bit::Shl<usize>>::shl",
    "hash": "87628814638610691858235665870456119565"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u32 as ops::bit::Shl>::shl",
    "hash": "1192789137628358737811148217201323287445"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u32 as ops::bit::Shr<i128>>::shr",
    "hash": "1531575439837854524510285744534695790045"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u32 as ops::bit::Shr<i16>>::shr",
    "hash": "1360488060588982981316583912919995673867"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u32 as ops::bit::Shr<i32>>::shr",
    "hash": "171675390868260356347681474496855653739"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u32 as ops::bit::Shr<i64>>::shr",
    "hash": "55976294190579935618220970503865879904"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u32 as ops::bit::Shr<i8>>::shr",
    "hash": "419760947503593611313116763683554568493"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u32 as ops::bit::Shr<isize>>::shr",
    "hash": "30565972292764443378355109895897506694"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u32 as ops::bit::Shr<u128>>::shr",
    "hash": "116079470809811431035117907610889928002"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u32 as ops::bit::Shr<u16>>::shr",
    "hash": "104735217186592861348280461726903897853"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u32 as ops::bit::Shr<u64>>::shr",
    "hash": "98375894348705937387414611690598650005"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u32 as ops::bit::Shr<u8>>::shr",
    "hash": "86324719414074415866155339166987376634"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u32 as ops::bit::Shr<usize>>::shr",
    "hash": "105105677256383764312633619500077548094"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u32 as ops::bit::Shr>::shr",
    "hash": "122947779502945346302407199500263704675"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u64 as ops::bit::BitAnd>::bitand",
    "hash": "157384825566194582281443637416363853707"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u64 as ops::bit::BitOr>::bitor",
    "hash": "1074668066197654286811568059305248982842"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u64 as ops::bit::BitXor>::bitxor",
    "hash": "3286084844820268733269690724260734749"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u64 as ops::bit::Not>::not",
    "hash": "69058910270634640093878581783674369818"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u64 as ops::bit::Shl<i128>>::shl",
    "hash": "1394535206786092665115428020633389966227"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u64 as ops::bit::Shl<i16>>::shl",
    "hash": "112166356177193846856831523004738046551"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u64 as ops::bit::Shl<i32>>::shl",
    "hash": "553053764217048069913422972337523483513"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u64 as ops::bit::Shl<i64>>::shl",
    "hash": "177227816277981829435389388181575376664"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u64 as ops::bit::Shl<i8>>::shl",
    "hash": "128182048072606322615075840622793566800"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u64 as ops::bit::Shl<isize>>::shl",
    "hash": "8003805324141695810049270363536777480"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u64 as ops::bit::Shl<u128>>::shl",
    "hash": "1200327563378155210416209733856663551298"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u64 as ops::bit::Shl<u16>>::shl",
    "hash": "50070306946858698742500082029940469398"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u64 as ops::bit::Shl<u32>>::shl",
    "hash": "42124438380263116169932795754435635924"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u64 as ops::bit::Shl<u8>>::shl",
    "hash": "312759003238343244916593719661693945323"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u64 as ops::bit::Shl<usize>>::shl",
    "hash": "409965766024088507712961998896543341298"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u64 as ops::bit::Shl>::shl",
    "hash": "116746087634934710913235647507086295801"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u64 as ops::bit::Shr<i128>>::shr",
    "hash": "163868028003114351598177571765825725796"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u64 as ops::bit::Shr<i16>>::shr",
    "hash": "623176598417623045613614167717151534523"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u64 as ops::bit::Shr<i32>>::shr",
    "hash": "533346079128639706712155926025444629267"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u64 as ops::bit::Shr<i64>>::shr",
    "hash": "77584607938351480504932300852788613566"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u64 as ops::bit::Shr<i8>>::shr",
    "hash": "1258592973443686986817143187383230885486"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u64 as ops::bit::Shr<isize>>::shr",
    "hash": "144092633113242562206128710511916700144"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u64 as ops::bit::Shr<u128>>::shr",
    "hash": "103376500494813920319861202907322502183"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u64 as ops::bit::Shr<u16>>::shr",
    "hash": "52746722811314292303644376079083605941"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u64 as ops::bit::Shr<u32>>::shr",
    "hash": "71224684941573721096956691946966245309"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u64 as ops::bit::Shr<u8>>::shr",
    "hash": "139652890594349091913783739947105881720"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u64 as ops::bit::Shr<usize>>::shr",
    "hash": "1460145354166480637215829607193622350837"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u64 as ops::bit::Shr>::shr",
    "hash": "86622655497268448468894884330958184177"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u8 as ops::bit::BitAnd>::bitand",
    "hash": "105019051765303036113677897234866023358"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u8 as ops::bit::BitOr>::bitor",
    "hash": "441295733924846514514414539450914984349"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u8 as ops::bit::BitXor>::bitxor",
    "hash": "133736934632699996336836291677830224366"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u8 as ops::bit::Not>::not",
    "hash": "168654381393411593954766699472211464394"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u8 as ops::bit::Shl<i128>>::shl",
    "hash": "27650713502863461168336356174292733851"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u8 as ops::bit::Shl<i16>>::shl",
    "hash": "183704683986378036357692100478120304949"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u8 as ops::bit::Shl<i32>>::shl",
    "hash": "56582821056574892801440353022391195422"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u8 as ops::bit::Shl<i64>>::shl",
    "hash": "105507046361258046434247081695173492241"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u8 as ops::bit::Shl<i8>>::shl",
    "hash": "1311225679307977555817862110828273814781"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u8 as ops::bit::Shl<isize>>::shl",
    "hash": "101047958573585809336815843327425423695"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u8 as ops::bit::Shl<u128>>::shl",
    "hash": "570429832050842989217338613665307289585"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u8 as ops::bit::Shl<u16>>::shl",
    "hash": "144363759804955135451655110643408457032"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u8 as ops::bit::Shl<u32>>::shl",
    "hash": "1671886184322800325015861172781527589074"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u8 as ops::bit::Shl<u64>>::shl",
    "hash": "108934185118478743992790208135590370531"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u8 as ops::bit::Shl<usize>>::shl",
    "hash": "71032930027860242445958352212962515751"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u8 as ops::bit::Shl>::shl",
    "hash": "12256033044475271347452014680463148436"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u8 as ops::bit::Shr<i128>>::shr",
    "hash": "98003637022376321155715822008077392264"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u8 as ops::bit::Shr<i16>>::shr",
    "hash": "150339149332451673065620372079117690097"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u8 as ops::bit::Shr<i32>>::shr",
    "hash": "69819820087332801093178869981322352125"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u8 as ops::bit::Shr<i64>>::shr",
    "hash": "113009415425825240695252687288524869972"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u8 as ops::bit::Shr<i8>>::shr",
    "hash": "112073089669203370395327634158089593996"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u8 as ops::bit::Shr<isize>>::shr",
    "hash": "78493769014335410173377664164046332820"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u8 as ops::bit::Shr<u128>>::shr",
    "hash": "15401497508642553915282987933019026948"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u8 as ops::bit::Shr<u16>>::shr",
    "hash": "95984959054786002142534323660233290868"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u8 as ops::bit::Shr<u32>>::shr",
    "hash": "1084381235623910476516512252454820715888"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u8 as ops::bit::Shr<u64>>::shr",
    "hash": "74458829272649886676212125305859297279"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u8 as ops::bit::Shr<usize>>::shr",
    "hash": "1042381670858368265616573731791436983645"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u8 as ops::bit::Shr>::shr",
    "hash": "793787003548500587210612345829822686450"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<usize as ops::bit::BitAnd>::bitand",
    "hash": "26907342328930132908147331640195082285"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<usize as ops::bit::BitOr>::bitor",
    "hash": "418112167780038579218411194738512028538"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<usize as ops::bit::BitXor>::bitxor",
    "hash": "124128229238975485187262560501348423525"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<usize as ops::bit::Not>::not",
    "hash": "1181423332208380858914166756983694767331"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<usize as ops::bit::Shl<i128>>::shl",
    "hash": "21253837950820513115072223255564069147"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<usize as ops::bit::Shl<i16>>::shl",
    "hash": "524587026147912330217736128091942823764"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<usize as ops::bit::Shl<i32>>::shl",
    "hash": "105600282742695260187093886358785060461"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<usize as ops::bit::Shl<i64>>::shl",
    "hash": "605590753649933113514121970960614875361"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<usize as ops::bit::Shl<i8>>::shl",
    "hash": "886328773553640189212709335582379829338"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<usize as ops::bit::Shl<isize>>::shl",
    "hash": "71558362105603846917470407898738774168"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<usize as ops::bit::Shl<u128>>::shl",
    "hash": "162043459838542760897793210601687162945"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<usize as ops::bit::Shl<u16>>::shl",
    "hash": "68722987734932894368307618030364797087"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<usize as ops::bit::Shl<u32>>::shl",
    "hash": "1662075771247737907510635937985287339911"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<usize as ops::bit::Shl<u64>>::shl",
    "hash": "15374367642539192087339374667962619035"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<usize as ops::bit::Shl<u8>>::shl",
    "hash": "561709644426885441614722746096038333536"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<usize as ops::bit::Shl>::shl",
    "hash": "172030701421737495506829577788371900138"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<usize as ops::bit::Shr<i128>>::shr",
    "hash": "15597438997754774049181807696366795975"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<usize as ops::bit::Shr<i16>>::shr",
    "hash": "96141864821784567039940908600344550177"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<usize as ops::bit::Shr<i32>>::shr",
    "hash": "1213965184538244916418395655122378205476"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<usize as ops::bit::Shr<i64>>::shr",
    "hash": "54268208576882491472323770633496569419"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<usize as ops::bit::Shr<i8>>::shr",
    "hash": "110958823528669906869695735195077727307"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<usize as ops::bit::Shr<isize>>::shr",
    "hash": "113436510040885489474162748194196130969"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<usize as ops::bit::Shr<u128>>::shr",
    "hash": "821334174805735880818092963319559439778"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<usize as ops::bit::Shr<u16>>::shr",
    "hash": "881189947194888567615998942117523472413"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<usize as ops::bit::Shr<u32>>::shr",
    "hash": "7854333286130539689932890607370359073"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<usize as ops::bit::Shr<u64>>::shr",
    "hash": "1064644696773662893114857171335446830585"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<usize as ops::bit::Shr<u8>>::shr",
    "hash": "300634001300617359117617815104130242235"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<usize as ops::bit::Shr>::shr",
    "hash": "1711533530932882966570270045546792756"
  },
  {
    "file": "core/src/ops/index_range.rs",
    "func": "ops::index_range::IndexRange::new_unchecked",
    "hash": "1662552607172802888615583771417078312307"
  },
  {
    "file": "core/src/ops/index_range.rs",
    "func": "ops::index_range::IndexRange::zero_to",
    "hash": "807459588385208510417001782946551009910"
  },
  {
    "file": "core/src/ops/range.rs",
    "func": "<ops::range::RangeFull as default::Default>::default",
    "hash": "800123809591295161710307561311041397295"
  },
  {
    "file": "core/src/ops/range.rs",
    "func": "ops::range::RangeInclusive::<usize>::into_slice_range",
    "hash": "99389162391440909506066512703736887266"
  },
  {
    "file": "core/src/option.rs",
    "func": "option::unwrap_failed",
    "hash": "90154399545981751929034700539601653658"
  },
  {
    "file": "core/src/option.rs",
    "func": "option::verify::verify_as_slice",
    "hash": "780968805087536857118358942053827996895",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/panic.rs",
    "func": "char::methods::encode_utf16_raw::do_panic",
    "hash": "1154545949715255555918333901117846652021"
  },
  {
    "file": "core/src/panic.rs",
    "func": "char::methods::encode_utf8_raw::do_panic",
    "hash": "1363736816890242968813291297505934676086"
  },
  {
    "file": "core/src/panic.rs",
    "func": "f128::<impl f128>::clamp::do_panic",
    "hash": "981066792747726704212163512501556744578"
  },
  {
    "file": "core/src/panic.rs",
    "func": "f16::<impl f16>::clamp::do_panic",
    "hash": "512141238813987818917288316114043176992"
  },
  {
    "file": "core/src/panic.rs",
    "func": "f32::<impl f32>::clamp::do_panic",
    "hash": "95281695123034140454000433082433124006"
  },
  {
    "file": "core/src/panic.rs",
    "func": "f64::<impl f64>::clamp::do_panic",
    "hash": "1581171147235482273113724762707851976946"
  },
  {
    "file": "core/src/panic.rs",
    "func": "intrinsics::mir::Assume::panic_cold_explicit",
    "hash": "163438807307047693414664147044125749050"
  },
  {
    "file": "core/src/panic.rs",
    "func": "intrinsics::mir::Call::panic_cold_explicit",
    "hash": "857738109600319214710532751689815507071"
  },
  {
    "file": "core/src/panic.rs",
    "func": "intrinsics::mir::CastPtrToPtr::panic_cold_explicit",
    "hash": "619036260093731023312790793654964762437"
  },
  {
    "file": "core/src/panic.rs",
    "func": "intrinsics::mir::CastTransmute::panic_cold_explicit",
    "hash": "1028453805844049848314564113434627445265"
  },
  {
    "file": "core/src/panic.rs",
    "func": "intrinsics::mir::Checked::panic_cold_explicit",
    "hash": "78063210433446006323205510102348260830"
  },
  {
    "file": "core/src/panic.rs",
    "func": "intrinsics::mir::CopyForDeref::panic_cold_explicit",
    "hash": "655842010609023530417456381081756063469"
  },
  {
    "file": "core/src/panic.rs",
    "func": "intrinsics::mir::Deinit::panic_cold_explicit",
    "hash": "792028306923964565515413133331945159646"
  },
  {
    "file": "core/src/panic.rs",
    "func": "intrinsics::mir::Discriminant::panic_cold_explicit",
    "hash": "817472666852652603317297901700684049071"
  },
  {
    "file": "core/src/panic.rs",
    "func": "intrinsics::mir::Drop::panic_cold_explicit",
    "hash": "38509811502674808869001191089380920779"
  },
  {
    "file": "core/src/panic.rs",
    "func": "intrinsics::mir::Field::panic_cold_explicit",
    "hash": "3242911575609938043975269971433135650"
  },
  {
    "file": "core/src/panic.rs",
    "func": "intrinsics::mir::Goto::panic_cold_explicit",
    "hash": "501675975716012765717395064346594895201"
  },
  {
    "file": "core/src/panic.rs",
    "func": "intrinsics::mir::Len::panic_cold_explicit",
    "hash": "136895215631157970313010250375875308492"
  },
  {
    "file": "core/src/panic.rs",
    "func": "intrinsics::mir::Move::panic_cold_explicit",
    "hash": "477355644115443246817891142026449118766"
  },
  {
    "file": "core/src/panic.rs",
    "func": "intrinsics::mir::Offset::panic_cold_explicit",
    "hash": "98781548543314635267513626815941118009"
  },
  {
    "file": "core/src/panic.rs",
    "func": "intrinsics::mir::PtrMetadata::panic_cold_explicit",
    "hash": "448486769811910466117071688950415500075"
  },
  {
    "file": "core/src/panic.rs",
    "func": "intrinsics::mir::Retag::panic_cold_explicit",
    "hash": "1606417667905895174742974901033531234"
  },
  {
    "file": "core/src/panic.rs",
    "func": "intrinsics::mir::Return::panic_cold_explicit",
    "hash": "123413881856519663221323530154450040119"
  },
  {
    "file": "core/src/panic.rs",
    "func": "intrinsics::mir::ReturnTo::panic_cold_explicit",
    "hash": "1145969239266461033716207647053688062629"
  },
  {
    "file": "core/src/panic.rs",
    "func": "intrinsics::mir::SetDiscriminant::panic_cold_explicit",
    "hash": "175776002453037638133770469299448786793"
  },
  {
    "file": "core/src/panic.rs",
    "func": "intrinsics::mir::Static::panic_cold_explicit",
    "hash": "154822648536931121473353602993007006189"
  },
  {
    "file": "core/src/panic.rs",
    "func": "intrinsics::mir::StaticMut::panic_cold_explicit",
    "hash": "1808093786827187881618410708369338311020"
  },
  {
    "file": "core/src/panic.rs",
    "func": "intrinsics::mir::StorageDead::panic_cold_explicit",
    "hash": "1301716332954024414315763052010042869893"
  },
  {
    "file": "core/src/panic.rs",
    "func": "intrinsics::mir::StorageLive::panic_cold_explicit",
    "hash": "65057862961389293002296504712736649776"
  },
  {
    "file": "core/src/panic.rs",
    "func": "intrinsics::mir::TailCall::panic_cold_explicit",
    "hash": "1380676789744574667177462765902266951"
  },
  {
    "file": "core/src/panic.rs",
    "func": "intrinsics::mir::Unreachable::panic_cold_explicit",
    "hash": "144510396496461728358240687493119053507"
  },
  {
    "file": "core/src/panic.rs",
    "func": "intrinsics::mir::UnwindCleanup::panic_cold_explicit",
    "hash": "1875084448994375559907850329724350959"
  },
  {
    "file": "core/src/panic.rs",
    "func": "intrinsics::mir::UnwindContinue::panic_cold_explicit",
    "hash": "118540009604933772759519422717701719448"
  },
  {
    "file": "core/src/panic.rs",
    "func": "intrinsics::mir::UnwindResume::panic_cold_explicit",
    "hash": "143263095747471987517104657325364425781"
  },
  {
    "file": "core/src/panic.rs",
    "func": "intrinsics::mir::UnwindTerminate::panic_cold_explicit",
    "hash": "478542248285553872016362016040124268874"
  },
  {
    "file": "core/src/panic.rs",
    "func": "intrinsics::mir::UnwindUnreachable::panic_cold_explicit",
    "hash": "1649275970633128979016107120100153535987"
  },
  {
    "file": "core/src/panic.rs",
    "func": "intrinsics::mir::Variant::panic_cold_explicit",
    "hash": "160698478166481909071525653911139287628"
  },
  {
    "file": "core/src/panic.rs",
    "func": "intrinsics::mir::__debuginfo::panic_cold_explicit",
    "hash": "84797566353881857903192057671890181098"
  },
  {
    "file": "core/src/panic.rs",
    "func": "intrinsics::mir::__internal_make_place::panic_cold_explicit",
    "hash": "160384826099623208719706849482848629033"
  },
  {
    "file": "core/src/panic.rs",
    "func": "num::from_ascii_radix_panic::do_panic",
    "hash": "1549869736248796694614142541046834936124"
  },
  {
    "file": "core/src/panic.rs",
    "func": "slice::<impl [T]>::copy_from_slice::len_mismatch_fail::do_panic",
    "hash": "146104108627111923255250078175465387867"
  },
  {
    "file": "core/src/panic.rs",
    "func": "slice::index::slice_end_index_len_fail::do_panic",
    "hash": "1363736816890242968813291297505934676086"
  },
  {
    "file": "core/src/panic.rs",
    "func": "slice::index::slice_index_order_fail::do_panic",
    "hash": "1363736816890242968813291297505934676086"
  },
  {
    "file": "core/src/panic.rs",
    "func": "slice::index::slice_start_index_len_fail::do_panic",
    "hash": "1363736816890242968813291297505934676086"
  },
  {
    "file": "core/src/panic/location.rs",
    "func": "panic::location::Location::<'_>::caller",
    "hash": "841904668883726495316837415609641023349"
  },
  {
    "file": "core/src/panicking.rs",
    "func": "panicking::panic_bounds_check",
    "hash": "153511201397268930619553714475457934467"
  },
  {
    "file": "core/src/panicking.rs",
    "func": "panicking::panic_cannot_unwind",
    "hash": "1808289359185136011613131632845219227335"
  },
  {
    "file": "core/src/panicking.rs",
    "func": "panicking::panic_const::panic_const_add_overflow",
    "hash": "806680718566775123413328195851757307157"
  },
  {
    "file": "core/src/panicking.rs",
    "func": "panicking::panic_const::panic_const_async_fn_resumed",
    "hash": "740666714638215805513896756337968059226"
  },
  {
    "file": "core/src/panicking.rs",
    "func": "panicking::panic_const::panic_const_async_fn_resumed_drop",
    "hash": "217999200183874216415605299851937085130"
  },
  {
    "file": "core/src/panicking.rs",
    "func": "panicking::panic_const::panic_const_async_fn_resumed_panic",
    "hash": "22323644541084022508127770053692663049"
  },
  {
    "file": "core/src/panicking.rs",
    "func": "panicking::panic_const::panic_const_async_gen_fn_resumed",
    "hash": "153558675752219344668185631547010588204"
  },
  {
    "file": "core/src/panicking.rs",
    "func": "panicking::panic_const::panic_const_async_gen_fn_resumed_drop",
    "hash": "852570159142142380814232920503515454955"
  },
  {
    "file": "core/src/panicking.rs",
    "func": "panicking::panic_const::panic_const_async_gen_fn_resumed_panic",
    "hash": "85388914785468982587255532107609618088"
  },
  {
    "file": "core/src/panicking.rs",
    "func": "panicking::panic_const::panic_const_coroutine_resumed",
    "hash": "1583262063258775575616345955774881454807"
  },
  {
    "file": "core/src/panicking.rs",
    "func": "panicking::panic_const::panic_const_coroutine_resumed_drop",
    "hash": "149423855402817088938093501682174917243"
  },
  {
    "file": "core/src/panicking.rs",
    "func": "panicking::panic_const::panic_const_coroutine_resumed_panic",
    "hash": "877984469872685720616858293195329763349"
  },
  {
    "file": "core/src/panicking.rs",
    "func": "panicking::panic_const::panic_const_div_by_zero",
    "hash": "30132774181053854124260496472306685902"
  },
  {
    "file": "core/src/panicking.rs",
    "func": "panicking::panic_const::panic_const_div_overflow",
    "hash": "183724751205255601982522217350326424367"
  },
  {
    "file": "core/src/panicking.rs",
    "func": "panicking::panic_const::panic_const_gen_fn_none",
    "hash": "296914726497017798614590935897715803179"
  },
  {
    "file": "core/src/panicking.rs",
    "func": "panicking::panic_const::panic_const_gen_fn_none_drop",
    "hash": "703075813512368563512944032294628166493"
  },
  {
    "file": "core/src/panicking.rs",
    "func": "panicking::panic_const::panic_const_gen_fn_none_panic",
    "hash": "76260424719638600856724650427112962686"
  },
  {
    "file": "core/src/panicking.rs",
    "func": "panicking::panic_const::panic_const_mul_overflow",
    "hash": "50174085862667250621763665453765081595"
  },
  {
    "file": "core/src/panicking.rs",
    "func": "panicking::panic_const::panic_const_neg_overflow",
    "hash": "4783437457594172891742220455274381826"
  },
  {
    "file": "core/src/panicking.rs",
    "func": "panicking::panic_const::panic_const_rem_by_zero",
    "hash": "149005207456878196272665894254727453986"
  },
  {
    "file": "core/src/panicking.rs",
    "func": "panicking::panic_const::panic_const_rem_overflow",
    "hash": "388424101695809814713053486003104160371"
  },
  {
    "file": "core/src/panicking.rs",
    "func": "panicking::panic_const::panic_const_shl_overflow",
    "hash": "10088204556330263033466640826550618788"
  },
  {
    "file": "core/src/panicking.rs",
    "func": "panicking::panic_const::panic_const_shr_overflow",
    "hash": "97578127391936422841159120793366550548"
  },
  {
    "file": "core/src/panicking.rs",
    "func": "panicking::panic_const::panic_const_sub_overflow",
    "hash": "108243453396565426681526975099193595369"
  },
  {
    "file": "core/src/panicking.rs",
    "func": "panicking::panic_explicit",
    "hash": "53266058399906951621356554317182888698"
  },
  {
    "file": "core/src/panicking.rs",
    "func": "panicking::panic_in_cleanup",
    "hash": "1661958925510226335515566458765842179227"
  },
  {
    "file": "core/src/panicking.rs",
    "func": "panicking::panic_misaligned_pointer_dereference",
    "hash": "872508274449509344715075228714920699465"
  },
  {
    "file": "core/src/panicking.rs",
    "func": "panicking::panic_null_pointer_dereference",
    "hash": "166741825040760012832281192209967231710"
  },
  {
    "file": "core/src/pat.rs",
    "func": "<char as pat::RangePattern>::sub_one",
    "hash": "90798009831486421783938964436674195085"
  },
  {
    "file": "core/src/pat.rs",
    "func": "<i128 as pat::RangePattern>::sub_one",
    "hash": "49885036637495248413467201491450234135"
  },
  {
    "file": "core/src/pat.rs",
    "func": "<i16 as pat::RangePattern>::sub_one",
    "hash": "4808791082151893478247570300564050392"
  },
  {
    "file": "core/src/pat.rs",
    "func": "<i32 as pat::RangePattern>::sub_one",
    "hash": "152312466093805087877293233369183760241"
  },
  {
    "file": "core/src/pat.rs",
    "func": "<i64 as pat::RangePattern>::sub_one",
    "hash": "14777162977283778446573364232532383533"
  },
  {
    "file": "core/src/pat.rs",
    "func": "<i8 as pat::RangePattern>::sub_one",
    "hash": "1751143810788040869613390120635376872950"
  },
  {
    "file": "core/src/pat.rs",
    "func": "<isize as pat::RangePattern>::sub_one",
    "hash": "877103413293199770028598608501977572"
  },
  {
    "file": "core/src/pat.rs",
    "func": "<u128 as pat::RangePattern>::sub_one",
    "hash": "743316094649303064116825547775583770950"
  },
  {
    "file": "core/src/pat.rs",
    "func": "<u16 as pat::RangePattern>::sub_one",
    "hash": "1664571538674101725414657738288133608605"
  },
  {
    "file": "core/src/pat.rs",
    "func": "<u32 as pat::RangePattern>::sub_one",
    "hash": "1663887277352759604814713793772763752523"
  },
  {
    "file": "core/src/pat.rs",
    "func": "<u64 as pat::RangePattern>::sub_one",
    "hash": "479425616676739350518156622681400906637"
  },
  {
    "file": "core/src/pat.rs",
    "func": "<u8 as pat::RangePattern>::sub_one",
    "hash": "1795460879244892361117527002830047226960"
  },
  {
    "file": "core/src/pat.rs",
    "func": "<usize as pat::RangePattern>::sub_one",
    "hash": "1501473309840742376115490815736291963389"
  },
  {
    "file": "core/src/ptr/alignment.rs",
    "func": "<ptr::alignment::Alignment as convert::TryFrom<num::nonzero::NonZero<usize>>>::try_from",
    "hash": "9458380551396486694328349189236401322"
  },
  {
    "file": "core/src/ptr/alignment.rs",
    "func": "<ptr::alignment::Alignment as convert::TryFrom<usize>>::try_from",
    "hash": "158282317452025554724310233463027540703"
  },
  {
    "file": "core/src/ptr/alignment.rs",
    "func": "<ptr::alignment::Alignment as default::Default>::default",
    "hash": "21636883498496389412566933836023318216"
  },
  {
    "file": "core/src/ptr/alignment.rs",
    "func": "ptr::alignment::<impl convert::From<ptr::alignment::Alignment> for num::nonzero::NonZero<usize>>::from",
    "hash": "103271895329084561314630265572675691737"
  },
  {
    "file": "core/src/ptr/alignment.rs",
    "func": "ptr::alignment::<impl convert::From<ptr::alignment::Alignment> for usize>::from",
    "hash": "1687074465042211938414968599344031994097"
  },
  {
    "file": "core/src/ptr/alignment.rs",
    "func": "ptr::alignment::Alignment",
    "hash": "168216658956870974897389676346279335577"
  },
  {
    "file": "core/src/ptr/alignment.rs",
    "func": "ptr::alignment::Alignment::as_nonzero",
    "hash": "117289807451759479686051841781914570332"
  },
  {
    "file": "core/src/ptr/alignment.rs",
    "func": "ptr::alignment::Alignment::as_usize",
    "hash": "96976906222507875941165858861254841419"
  },
  {
    "file": "core/src/ptr/alignment.rs",
    "func": "ptr::alignment::Alignment::log2",
    "hash": "149165701316109667932661456922828966830"
  },
  {
    "file": "core/src/ptr/alignment.rs",
    "func": "ptr::alignment::Alignment::mask",
    "hash": "1391737183461745021616034478696511518373"
  },
  {
    "file": "core/src/ptr/alignment.rs",
    "func": "ptr::alignment::Alignment::max",
    "hash": "65007802261508540012210392616145265221"
  },
  {
    "file": "core/src/ptr/alignment.rs",
    "func": "ptr::alignment::Alignment::new",
    "hash": "130784102331378573718503834980433583949"
  },
  {
    "file": "core/src/ptr/alignment.rs",
    "func": "ptr::alignment::Alignment::new_unchecked",
    "hash": "90298716668925847872657680437039980974"
  },
  {
    "file": "core/src/ptr/alignment.rs",
    "func": "ptr::alignment::_alignment_can_be_structurally_matched",
    "hash": "49137621040215897581805613400315521001"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_add_i128",
    "hash": "45062437962445031344283297744466462547",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_add_i16",
    "hash": "236508735396433904715112359424657385715",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_add_i32",
    "hash": "163470382687376314301179566430132053060",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_add_i64",
    "hash": "248263377539573450018226203149383870786",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_add_i8",
    "hash": "56918798784050799733036559787992554312",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_add_isize",
    "hash": "1784863290369137274011809780112420330837",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_add_slice_i128",
    "hash": "1576887941748406192216992644547540619660",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_add_slice_i16",
    "hash": "7719847077512669956372725129934085255",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_add_slice_i32",
    "hash": "128369909714159073472745092359468395055",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_add_slice_i64",
    "hash": "1532972108908190427111706946779325113507",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_add_slice_i8",
    "hash": "182302378909274589246018391456331121401",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_add_slice_isize",
    "hash": "55302898571595395294845241069141827729",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_add_slice_tuple_1",
    "hash": "75457065170708173719564283236559333100",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_add_slice_tuple_2",
    "hash": "164253472436508111543767270892827782345",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_add_slice_tuple_3",
    "hash": "396440798804544466815401852623377930878",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_add_slice_tuple_4",
    "hash": "39949950068931461277372258842488452243",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_add_slice_u128",
    "hash": "128698008946334512623561163855829606915",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_add_slice_u16",
    "hash": "626061513431085572815694704506571274111",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_add_slice_u32",
    "hash": "182699421969163856434974687507534102542",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_add_slice_u64",
    "hash": "20792107188044511452176720241368153383",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_add_slice_u8",
    "hash": "1143870183815060668715919396678983508610",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_add_slice_usize",
    "hash": "1566097944858746015214464337287605838334",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_add_tuple_1",
    "hash": "57740987393042822547621803936851067195",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_add_tuple_2",
    "hash": "136537372777549534167923441818889501092",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_add_tuple_3",
    "hash": "1663750488289921445511900429495671009665",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_add_tuple_4",
    "hash": "121734966814036676374001150994972259806",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_add_u128",
    "hash": "11973879294603032697983479971898267955",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_add_u16",
    "hash": "1723582884195582240949449525337686376",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_add_u32",
    "hash": "16342214541594469917829670629088332878",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_add_u64",
    "hash": "28728732021124971515873014723522452873",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_add_u8",
    "hash": "88490910395659931512668225076067836193",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_add_unit",
    "hash": "53413750629759737832421462882066038903",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_add_usize",
    "hash": "70960040037005454439929922876301595767",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_byte_add_dyn"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_byte_add_i128"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_byte_add_i128_slice"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_byte_add_i16"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_byte_add_i16_slice"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_byte_add_i32"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_byte_add_i32_slice"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_byte_add_i64"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_byte_add_i64_slice"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_byte_add_i8"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_byte_add_i8_slice"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_byte_add_isize"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_byte_add_isize_slice"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_byte_add_tuple_1"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_byte_add_tuple_2"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_byte_add_tuple_3"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_byte_add_tuple_4"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_byte_add_u128"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_byte_add_u128_slice"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_byte_add_u16"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_byte_add_u16_slice"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_byte_add_u32"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_byte_add_u32_slice"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_byte_add_u64"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_byte_add_u64_slice"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_byte_add_u8"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_byte_add_u8_slice"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_byte_add_unit"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_byte_add_usize"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_byte_add_usize_slice"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_byte_offset_cast_unit"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_byte_offset_dyn"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_byte_offset_from_dyn"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_byte_offset_from_fixed_offset",
    "hash": "2436679392566455391920059869163063190",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_byte_offset_from_i128"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_byte_offset_from_i128_arr"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_byte_offset_from_i128_slice"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_byte_offset_from_i16"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_byte_offset_from_i16_arr"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_byte_offset_from_i16_slice"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_byte_offset_from_i32"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_byte_offset_from_i32_arr"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_byte_offset_from_i32_slice"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_byte_offset_from_i64"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_byte_offset_from_i64_arr"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_byte_offset_from_i64_slice"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_byte_offset_from_i8"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_byte_offset_from_i8_arr"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_byte_offset_from_i8_slice"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_byte_offset_from_isize"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_byte_offset_from_isize_arr"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_byte_offset_from_isize_slice"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_byte_offset_from_tuple_1"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_byte_offset_from_tuple_1_arr"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_byte_offset_from_tuple_2"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_byte_offset_from_tuple_2_arr"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_byte_offset_from_tuple_3"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_byte_offset_from_tuple_3_arr"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_byte_offset_from_tuple_4"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_byte_offset_from_tuple_4_arr"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_byte_offset_from_u128"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_byte_offset_from_u128_arr"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_byte_offset_from_u128_slice"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_byte_offset_from_u16"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_byte_offset_from_u16_arr"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_byte_offset_from_u16_slice"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_byte_offset_from_u32"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_byte_offset_from_u32_arr"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_byte_offset_from_u32_slice"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_byte_offset_from_u64"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_byte_offset_from_u64_arr"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_byte_offset_from_u64_slice"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_byte_offset_from_u8"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_byte_offset_from_u8_arr"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_byte_offset_from_u8_slice"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_byte_offset_from_unit"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_byte_offset_from_usize"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_byte_offset_from_usize_arr"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_byte_offset_from_usize_slice"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_byte_offset_i128"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_byte_offset_i128_slice"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_byte_offset_i16"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_byte_offset_i16_slice"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_byte_offset_i32"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_byte_offset_i32_slice"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_byte_offset_i64"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_byte_offset_i64_slice"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_byte_offset_i8"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_byte_offset_i8_slice"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_byte_offset_isize"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_byte_offset_isize_slice"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_byte_offset_tuple_1"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_byte_offset_tuple_2"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_byte_offset_tuple_3"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_byte_offset_tuple_4"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_byte_offset_u128"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_byte_offset_u128_slice"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_byte_offset_u16"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_byte_offset_u16_slice"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_byte_offset_u32"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_byte_offset_u32_slice"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_byte_offset_u64"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_byte_offset_u64_slice"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_byte_offset_u8"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_byte_offset_u8_slice"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_byte_offset_unit"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_byte_offset_unit_invalid_count"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_byte_offset_usize"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_byte_offset_usize_slice"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_byte_sub_dyn"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_byte_sub_i128"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_byte_sub_i128_slice"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_byte_sub_i16"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_byte_sub_i16_slice"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_byte_sub_i32"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_byte_sub_i32_slice"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_byte_sub_i64"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_byte_sub_i64_slice"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_byte_sub_i8"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_byte_sub_i8_slice"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_byte_sub_isize"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_byte_sub_isize_slice"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_byte_sub_tuple_1"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_byte_sub_tuple_2"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_byte_sub_tuple_3"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_byte_sub_tuple_4"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_byte_sub_u128"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_byte_sub_u128_slice"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_byte_sub_u16"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_byte_sub_u16_slice"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_byte_sub_u32"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_byte_sub_u32_slice"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_byte_sub_u64"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_byte_sub_u64_slice"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_byte_sub_u8"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_byte_sub_u8_slice"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_byte_sub_unit"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_byte_sub_usize"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_byte_sub_usize_slice"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_offset_from_i128",
    "hash": "705724301939387073715482081380833600885",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_offset_from_i128_arr",
    "hash": "118083919933677071306056413919449799716",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_offset_from_i16",
    "hash": "140933139906285692492460420991122913981",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_offset_from_i16_arr",
    "hash": "1022538793791499393913057875565883996943",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_offset_from_i32",
    "hash": "180682111323230042817037770313031304100",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_offset_from_i32_arr",
    "hash": "1146142217931482054513429698544555178058",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_offset_from_i64",
    "hash": "23270057857568318818714349251220413068",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_offset_from_i64_arr",
    "hash": "100081288647305862239683294488357135928",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_offset_from_i8",
    "hash": "150476479534756868646884280717342033394",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_offset_from_i8_arr",
    "hash": "56190726836753905421585945412786319715",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_offset_from_isize",
    "hash": "18236753888032731615197050939329208821",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_offset_from_isize_arr",
    "hash": "81529161227071222747737812415233216680",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_offset_from_tuple_1",
    "hash": "4804009188070758048473846171276168685",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_offset_from_tuple_1_arr",
    "hash": "1109582962643055764918360219284907175317",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_offset_from_tuple_2",
    "hash": "104332914153866632634364657778609711023",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_offset_from_tuple_2_arr",
    "hash": "46761686433061078958096856456945476454",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_offset_from_tuple_3",
    "hash": "871937081648152128516412030397040712833",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_offset_from_tuple_3_arr",
    "hash": "42783742551304826374108374926174632484",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_offset_from_tuple_4",
    "hash": "303971865678469796812328057595854566245",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_offset_from_tuple_4_arr",
    "hash": "1370725282256346426414578812106505693814",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_offset_from_u128",
    "hash": "925062336166778007613632835537302363882",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_offset_from_u128_arr",
    "hash": "1748753898506958026313232289686533734966",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_offset_from_u16",
    "hash": "3068425971519510577188925208677792246",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_offset_from_u16_arr",
    "hash": "41802087984522988513028369641098621788",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_offset_from_u32",
    "hash": "126190458758790803082256917572999024051",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_offset_from_u32_arr",
    "hash": "337465867065731116711803161447143113218",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_offset_from_u64",
    "hash": "9474320476426011461893021332972821146",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_offset_from_u64_arr",
    "hash": "45429013168329678210903712235852888674",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_offset_from_u8",
    "hash": "87149598604153595337772422247969145042",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_offset_from_u8_arr",
    "hash": "104495116125646072710691174801521451012",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_offset_from_unit",
    "hash": "719824541380511394311810273535856086446",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_offset_from_usize",
    "hash": "109197750393089517385945746074911677256",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_offset_from_usize_arr",
    "hash": "1338346731810131912610816228697487193849",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_offset_i128",
    "hash": "508726575220677879415216558563616149450",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_offset_i16",
    "hash": "480812113504178780115398523330518329336",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_offset_i32",
    "hash": "1811482794422302250816346318305467873072",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_offset_i64",
    "hash": "54169938895332197231504020404402114129",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_offset_i8",
    "hash": "452437413561020144712606895411872930496",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_offset_isize",
    "hash": "315246736228287145212363809679903567656",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_offset_slice_i128",
    "hash": "467075827635109347511762661404680144682",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_offset_slice_i16",
    "hash": "1779696010400747561316081289350442395107",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_offset_slice_i32",
    "hash": "129662745048672656594748052391174894716",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_offset_slice_i64",
    "hash": "110347618347558371868343267154430735599",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_offset_slice_i8",
    "hash": "157690540529561101176315129850512014569",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_offset_slice_isize",
    "hash": "28318601540337758496692877906729059644",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_offset_slice_tuple_1",
    "hash": "404171904635626951212741308688211743221",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_offset_slice_tuple_2",
    "hash": "35700199538238896437104514574294718965",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_offset_slice_tuple_3",
    "hash": "12962396276746855415109211152873881971",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_offset_slice_tuple_4",
    "hash": "1071119932967462863117401292313905404666",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_offset_slice_u128",
    "hash": "32158305289439032365009519708733322106",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_offset_slice_u16",
    "hash": "40614010226682134539665645702307347883",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_offset_slice_u32",
    "hash": "1384354460305701169311725049735779031895",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_offset_slice_u64",
    "hash": "85023741215773438711695090758847353824",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_offset_slice_u8",
    "hash": "1106104611171593328014827226425870208932",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_offset_slice_usize",
    "hash": "1788246570488804953516253136674948307146",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_offset_tuple_1",
    "hash": "167566712783340390981329900658320304893",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_offset_tuple_2",
    "hash": "181113823835901026677255321103506973275",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_offset_tuple_3",
    "hash": "54840906290727704594821767530097594251",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_offset_tuple_4",
    "hash": "1054574665134888639111494857025698665853",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_offset_u128",
    "hash": "51257293005312651461880410987959024465",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_offset_u16",
    "hash": "6817964776563211475285980437891865000",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_offset_u32",
    "hash": "55140475174536997714017113884205680496",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_offset_u64",
    "hash": "540861269846734727218102792351484843464",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_offset_u8",
    "hash": "715881396853099547215632730618241142175",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_offset_unit",
    "hash": "505935680056048622717726602905562072788",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_offset_usize",
    "hash": "1570087045482759322214523402687967001386",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_sub_i128",
    "hash": "96993286806532909986814482266585174435",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_sub_i16",
    "hash": "42734112049667045629568264999699115492",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_sub_i32",
    "hash": "1797306032218481505610880142946280979638",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_sub_i64",
    "hash": "33871568961263070887630770358884280549",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_sub_i8",
    "hash": "183471281847596793727588373361447447931",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_sub_isize",
    "hash": "153934985781722042034119157460960587835",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_sub_slice_i128",
    "hash": "26334037821745149303569360340393555093",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_sub_slice_i16",
    "hash": "968226005491813522514156440336363355520",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_sub_slice_i32",
    "hash": "965294724056166237214641451946986920402",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_sub_slice_i64",
    "hash": "99890196925772144691108592966050305869",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_sub_slice_i8",
    "hash": "116786536738375499486488788041225506167",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_sub_slice_isize",
    "hash": "790922469718965625116956758990522994496",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_sub_slice_tuple_1",
    "hash": "6279497833116034900219041882596264676",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_sub_slice_tuple_2",
    "hash": "1636134368075584664915614608490999081486",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_sub_slice_tuple_3",
    "hash": "1345527482422467494217166251661111588532",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_sub_slice_tuple_4",
    "hash": "664546925048951806617425575065827650916",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_sub_slice_u128",
    "hash": "410488255502259856212819092943098688474",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_sub_slice_u16",
    "hash": "169809732358602828738007459261859393273",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_sub_slice_u32",
    "hash": "1376629309915088141416250519060575969814",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_sub_slice_u64",
    "hash": "565790158900776998811169887722456052264",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_sub_slice_u8",
    "hash": "1818174161092512348415605011133374523866",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_sub_slice_usize",
    "hash": "945696004803662144115047217576186357404",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_sub_tuple_1",
    "hash": "38230925026963838027657006535902513598",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_sub_tuple_2",
    "hash": "48967768481157704658002081634524163075",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_sub_tuple_3",
    "hash": "413438602342054646710767830140424977190",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_sub_tuple_4",
    "hash": "1625612093368609724914253869107331935442",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_sub_u128",
    "hash": "122588733352671907962038331640724267842",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_sub_u16",
    "hash": "1476647799692250849113221564074864369176",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_sub_u32",
    "hash": "169937341712612017173431278709673964676",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_sub_u64",
    "hash": "8125180243162598686567578798726978519",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_sub_u8",
    "hash": "28634198608329655911486033707491410939",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_sub_unit",
    "hash": "376407535492709527512632259274218660529",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_sub_usize",
    "hash": "899128138567374899696997382551949751",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/mod.rs",
    "func": "ptr::align_offset::mod_inv",
    "hash": "10280076113730517359836576566793155285"
  },
  {
    "file": "core/src/ptr/mod.rs",
    "func": "ptr::align_offset::{closure#0}::{closure#1}::{closure#1}::mod_inv"
  },
  {
    "file": "core/src/ptr/mod.rs",
    "func": "ptr::align_offset::{closure#2}::{closure#1}::mod_inv"
  },
  {
    "file": "core/src/ptr/mod.rs",
    "func": "ptr::align_offset::{closure#3}::{closure#0}::mod_inv"
  },
  {
    "file": "core/src/ptr/mod.rs",
    "func": "ptr::verify::check_align_offset_4096",
    "hash": "90580971551785484262903858766032665283",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/mod.rs",
    "func": "ptr::verify::check_align_offset_5",
    "hash": "1716409006842852835512687451507775196626",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/mod.rs",
    "func": "ptr::verify::check_align_offset_u128",
    "hash": "65387033735383670537678689671927865951",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/mod.rs",
    "func": "ptr::verify::check_align_offset_u16",
    "hash": "1027278213332400092314212141461060313473",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/mod.rs",
    "func": "ptr::verify::check_align_offset_u32",
    "hash": "1038703713919702057916097470002928117221",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/mod.rs",
    "func": "ptr::verify::check_align_offset_u64",
    "hash": "1746441396084642892017626416337083184944",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/mod.rs",
    "func": "ptr::verify::check_align_offset_u8",
    "hash": "696153836315223482517525328932886681728",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/mod.rs",
    "func": "ptr::verify::check_align_offset_zst",
    "hash": "192401122231118509618270768714800638863",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/mod.rs",
    "func": "ptr::verify::check_read_u128",
    "hash": "1037570541391023533415979304208336276298",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_add_i128",
    "hash": "1820480986050170674814256104218375228039",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_add_i16",
    "hash": "1398103907395472506314775181499577212035",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_add_i32",
    "hash": "125444056056300679245137238379393631193",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_add_i64",
    "hash": "15727320784756472375650126699535366007",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_add_i8",
    "hash": "824489454490848978814022973885991758875",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_add_isize",
    "hash": "561089040008374922914668008922973400628",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_add_slice_i128",
    "hash": "93496451481933618266802049909999345297",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_add_slice_i16",
    "hash": "84204394774877655991578166194338498315",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_add_slice_i32",
    "hash": "1719926982679601890810044778808260165469",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_add_slice_i64",
    "hash": "27931777830360118422750348023638846556",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_add_slice_i8",
    "hash": "78067717813224686345416248054835960129",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_add_slice_isize",
    "hash": "422968452564215279712530508271148785465",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_add_slice_tuple_1",
    "hash": "1013679999240105018511617956450969077416",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_add_slice_tuple_2",
    "hash": "1398818903137354892814975205095446562638",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_add_slice_tuple_3",
    "hash": "50070147809260261908044753712969890258",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_add_slice_tuple_4",
    "hash": "159172925143594140614727761738063405589",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_add_slice_u128",
    "hash": "91961558803347589681263110804952717076",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_add_slice_u16",
    "hash": "1449721937778385314714645797854172582685",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_add_slice_u32",
    "hash": "43662223594641818722181652184924665042",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_add_slice_u64",
    "hash": "1271660799619994217158299722682358506",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_add_slice_u8",
    "hash": "218048677448952610814555995809875385244",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_add_slice_usize",
    "hash": "124058094933878410601355422569643518047",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_add_tuple_1",
    "hash": "7248389131622554154165021347862791392",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_add_tuple_2",
    "hash": "526106180703822945914454181827509530248",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_add_tuple_3",
    "hash": "1595859985591562080017909367658475535546",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_add_tuple_4",
    "hash": "142546181780547410914140814501679682501",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_add_u128",
    "hash": "896808680210284783712956613150834745529",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_add_u16",
    "hash": "81189455910597935139369668590702697496",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_add_u32",
    "hash": "122068956380441307283927586021738949581",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_add_u64",
    "hash": "569806059137899634714912254368268890709",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_add_unit",
    "hash": "177682302956462047306400582298541022528",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_add_usize",
    "hash": "138981259131320878862343354027675412936",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_byte_add_dyn"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_byte_add_i128"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_byte_add_i128_slice"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_byte_add_i16"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_byte_add_i16_slice"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_byte_add_i32"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_byte_add_i32_slice"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_byte_add_i64"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_byte_add_i64_slice"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_byte_add_i8"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_byte_add_i8_slice"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_byte_add_isize"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_byte_add_isize_slice"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_byte_add_tuple_1"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_byte_add_tuple_2"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_byte_add_tuple_3"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_byte_add_tuple_4"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_byte_add_u128"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_byte_add_u128_slice"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_byte_add_u16"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_byte_add_u16_slice"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_byte_add_u32"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_byte_add_u32_slice"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_byte_add_u64"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_byte_add_u64_slice"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_byte_add_u8"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_byte_add_u8_slice"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_byte_add_unit"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_byte_add_usize"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_byte_add_usize_slice"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_byte_offset_cast_unit"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_byte_offset_dyn"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_byte_offset_from_dyn"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_byte_offset_from_fixed_offset",
    "hash": "168447822173624181222959858250444381190",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_byte_offset_from_i128"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_byte_offset_from_i128_arr"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_byte_offset_from_i128_slice"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_byte_offset_from_i16"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_byte_offset_from_i16_arr"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_byte_offset_from_i16_slice"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_byte_offset_from_i32"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_byte_offset_from_i32_arr"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_byte_offset_from_i32_slice"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_byte_offset_from_i64"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_byte_offset_from_i64_arr"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_byte_offset_from_i64_slice"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_byte_offset_from_i8"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_byte_offset_from_i8_arr"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_byte_offset_from_i8_slice"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_byte_offset_from_isize"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_byte_offset_from_isize_arr"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_byte_offset_from_isize_slice"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_byte_offset_from_tuple_1"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_byte_offset_from_tuple_1_arr"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_byte_offset_from_tuple_2"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_byte_offset_from_tuple_2_arr"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_byte_offset_from_tuple_3"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_byte_offset_from_tuple_3_arr"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_byte_offset_from_tuple_4"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_byte_offset_from_tuple_4_arr"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_byte_offset_from_u128"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_byte_offset_from_u128_arr"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_byte_offset_from_u128_slice"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_byte_offset_from_u16"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_byte_offset_from_u16_arr"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_byte_offset_from_u16_slice"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_byte_offset_from_u32"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_byte_offset_from_u32_arr"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_byte_offset_from_u32_slice"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_byte_offset_from_u64"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_byte_offset_from_u64_arr"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_byte_offset_from_u64_slice"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_byte_offset_from_u8"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_byte_offset_from_u8_arr"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_byte_offset_from_u8_slice"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_byte_offset_from_unit"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_byte_offset_from_usize"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_byte_offset_from_usize_arr"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_byte_offset_from_usize_slice"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_byte_offset_i128"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_byte_offset_i128_slice"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_byte_offset_i16"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_byte_offset_i16_slice"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_byte_offset_i32"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_byte_offset_i32_slice"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_byte_offset_i64"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_byte_offset_i64_slice"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_byte_offset_i8"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_byte_offset_i8_slice"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_byte_offset_isize"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_byte_offset_isize_slice"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_byte_offset_tuple_1"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_byte_offset_tuple_2"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_byte_offset_tuple_3"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_byte_offset_tuple_4"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_byte_offset_u128"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_byte_offset_u128_slice"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_byte_offset_u16"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_byte_offset_u16_slice"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_byte_offset_u32"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_byte_offset_u32_slice"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_byte_offset_u64"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_byte_offset_u64_slice"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_byte_offset_u8"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_byte_offset_u8_slice"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_byte_offset_unit"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_byte_offset_unit_invalid_count"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_byte_offset_usize"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_byte_offset_usize_slice"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_byte_sub_dyn"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_byte_sub_i128"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_byte_sub_i128_slice"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_byte_sub_i16"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_byte_sub_i16_slice"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_byte_sub_i32"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_byte_sub_i32_slice"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_byte_sub_i64"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_byte_sub_i64_slice"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_byte_sub_i8"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_byte_sub_i8_slice"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_byte_sub_isize"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_byte_sub_isize_slice"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_byte_sub_tuple_1"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_byte_sub_tuple_2"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_byte_sub_tuple_3"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_byte_sub_tuple_4"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_byte_sub_u128"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_byte_sub_u128_slice"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_byte_sub_u16"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_byte_sub_u16_slice"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_byte_sub_u32"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_byte_sub_u32_slice"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_byte_sub_u64"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_byte_sub_u64_slice"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_byte_sub_u8"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_byte_sub_u8_slice"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_byte_sub_unit"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_byte_sub_usize"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_byte_sub_usize_slice"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_offset_from_i128",
    "hash": "64918681929462654154298338490096641775",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_offset_from_i128_array",
    "hash": "1556655692765753393412509113779565040559",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_offset_from_i16",
    "hash": "1250801935382148210511772938285421084552",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_offset_from_i16_array",
    "hash": "1715817064166173787212810623823389990215",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_offset_from_i32",
    "hash": "231983374215022524514122487626119726151",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_offset_from_i32_array",
    "hash": "964899648591858077015864997032686044993",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_offset_from_i64",
    "hash": "17572522526456950272527978498391961084",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_offset_from_i64_array",
    "hash": "11811014050513815244900019248208699305",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_offset_from_i8",
    "hash": "95400376839505255626381786861611874989",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_offset_from_i8_array",
    "hash": "6173213827236934436743638294294409902",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_offset_from_isize",
    "hash": "37792447166116930779860672328183619606",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_offset_from_isize_array",
    "hash": "137404747644981044512413450036907137847",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_offset_from_tuple_1",
    "hash": "37715381177791885251195698519843285377",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_offset_from_tuple_1_array",
    "hash": "351320633437048012612880545362463517147",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_offset_from_tuple_2",
    "hash": "2254290945116618757619699250216762939",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_offset_from_tuple_2_array",
    "hash": "1703681916841978076413831792739503579243",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_offset_from_tuple_3",
    "hash": "662744664055421195913257053317773733299",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_offset_from_tuple_3_array",
    "hash": "1298513126379402544216044114220811547444",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_offset_from_tuple_4",
    "hash": "371601828620335557313008331408403713225",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_offset_from_tuple_4_array",
    "hash": "448630069284172711112158585536701501317",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_offset_from_u128",
    "hash": "402447521774170963312869079792533949072",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_offset_from_u128_array",
    "hash": "855289330867398042111538561346249608458",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_offset_from_u16",
    "hash": "2187609065011957028744524595743797914",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_offset_from_u16_array",
    "hash": "11061175338461178270562837188765710034",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_offset_from_u32",
    "hash": "1681281242462700251511231606764794340888",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_offset_from_u32_array",
    "hash": "155626635157677425410075449375091228968",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_offset_from_u64",
    "hash": "399892828464000199213944847588657137954",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_offset_from_u64_array",
    "hash": "34454751984163814695972861524837440581",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_offset_from_u8",
    "hash": "921852146046648334417229970313043075097",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_offset_from_u8_array",
    "hash": "749807962692590736414587582289144538",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_offset_from_unit",
    "hash": "389435815582681361218120354073453159932",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_offset_from_usize",
    "hash": "615096523455778874514930637701780119941",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_offset_from_usize_array",
    "hash": "914407186880608123963943300458548037",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_offset_i128",
    "hash": "1715915130862754425515534663547268171648",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_offset_i16",
    "hash": "122913619290320631325845841256927030391",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_offset_i32",
    "hash": "7663572386816453832288447672624756576",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_offset_i64",
    "hash": "182334252861181640302194254587524460426",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_offset_i8",
    "hash": "145314040742786187105764651071715911886",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_offset_isize",
    "hash": "68642396025397328859532013881717820313",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_offset_slice_i128",
    "hash": "1486352634065194777117619331704760098197",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_offset_slice_i16",
    "hash": "6222261178964480342817491681912821729",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_offset_slice_i32",
    "hash": "94470757864218290016734917997436991619",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_offset_slice_i64",
    "hash": "467818676244765634012309305155737086114",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_offset_slice_i8",
    "hash": "913648837871697194515435763175278423083",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_offset_slice_isize",
    "hash": "142952503085403203057799433420021456094",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_offset_slice_tuple_1",
    "hash": "329707968532211712416185004163052237355",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_offset_slice_tuple_2",
    "hash": "28257325905813839984113953569090433805",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_offset_slice_tuple_3",
    "hash": "532179467633053887414063964628389397671",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_offset_slice_tuple_4",
    "hash": "54342604727295560371302674335675223704",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_offset_slice_u128",
    "hash": "17625366090544011448996092641414039621",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_offset_slice_u16",
    "hash": "22880020597224025322024860103698088561",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_offset_slice_u32",
    "hash": "146682703989600791101583372443996997968",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_offset_slice_u64",
    "hash": "1774695290785825384117665129526499461319",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_offset_slice_u8",
    "hash": "58673668374119326067235262270094634386",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_offset_slice_usize",
    "hash": "668421026050187997214885957386201080012",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_offset_tuple_1",
    "hash": "61744623283866860294747398023746527641",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_offset_tuple_2",
    "hash": "1286476336888100122410466787954970642119",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_offset_tuple_3",
    "hash": "31399693322242958881055249864763880357",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_offset_tuple_4",
    "hash": "137588975764721465586237494007234994636",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_offset_u128",
    "hash": "1172796754870144917916229213315355817078",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_offset_u16",
    "hash": "783289758277523265917407097769403171337",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_offset_u32",
    "hash": "145831959680126674635398391519669777961",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_offset_u64",
    "hash": "48607112211275836626535366153296333307",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_offset_unit",
    "hash": "973294303434785140617730135830842189263",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_offset_usize",
    "hash": "65535184257116669313484956276143959886",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_sub_i128",
    "hash": "563008695830036858117364923197168646405",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_sub_i16",
    "hash": "1184045260034274620013616932777790791240",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_sub_i32",
    "hash": "105617284383878027116792337435382421374",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_sub_i64",
    "hash": "117125622773554953224385300183783089387",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_sub_i8",
    "hash": "50762863049105185621911906169429291964",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_sub_isize",
    "hash": "63935713495148037286640175301858541780",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_sub_slice_i128",
    "hash": "25582985057947941673322678846103454369",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_sub_slice_i16",
    "hash": "672856034997985112317064544612134372929",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_sub_slice_i32",
    "hash": "91452639933329981017278112144760206816",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_sub_slice_i64",
    "hash": "918034700501732547616199989820922586934",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_sub_slice_i8",
    "hash": "81202560598019746831132896734397310311",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_sub_slice_isize",
    "hash": "100062623027785863654357739898166084491",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_sub_slice_tuple_1",
    "hash": "10419421597042555948672985712917246646",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_sub_slice_tuple_2",
    "hash": "146718244712914885648001803222600998802",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_sub_slice_tuple_3",
    "hash": "499108856417197187417721768148245577850",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_sub_slice_tuple_4",
    "hash": "34328161381394351615209538290671044095",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_sub_slice_u128",
    "hash": "109146954044046559664371209094725666589",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_sub_slice_u16",
    "hash": "886331964473736759617792566834845557306",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_sub_slice_u32",
    "hash": "440450105657510354917644831216929347933",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_sub_slice_u64",
    "hash": "1214177891101313755311166294363278832507",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_sub_slice_u8",
    "hash": "1011305462111655452311829036418840008484",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_sub_slice_usize",
    "hash": "184044410191485987501994269504875588466",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_sub_tuple_1",
    "hash": "136122528469205350691551213866293291830",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_sub_tuple_2",
    "hash": "131065390566268306902378664328396811772",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_sub_tuple_3",
    "hash": "85461743059159931697398276702072129688",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_sub_tuple_4",
    "hash": "7857796437890190296875898857499473979",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_sub_u128",
    "hash": "842163027141576013112077882124866007319",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_sub_u16",
    "hash": "79330915085226757223750792403763671716",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_sub_u32",
    "hash": "1521258252777878656910621455976476870583",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_sub_u64",
    "hash": "798567999670244636711200250828037734283",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_sub_unit",
    "hash": "145171737046303768281861363893345805662",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_sub_usize",
    "hash": "158275762907920151988824588448616287648",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_byte_add_dangling_proof"
  },
  {
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_byte_add_proof"
  },
  {
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_byte_offset_from_dangling_proof",
    "hash": "348717468479167218713843361344884722064",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_byte_offset_from_proof",
    "hash": "58684399490203841189424118661596801395",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_byte_offset_proof",
    "hash": "39290786682470746263723254820202658847",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_add",
    "hash": "752304147803830875411926514137596187162",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_addr",
    "hash": "728066726509991354615089802715758949976",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_align_offset",
    "hash": "111374661765090624858179546683355026785",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_align_offset_negative",
    "hash": "53850392662297405205848576755845443411",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_as_mut",
    "hash": "77095412899083312695446930527687381606",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_as_mut_ptr",
    "hash": "126440379937246353252892271640575112740",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_as_non_null_ptr",
    "hash": "3301907027115896142115044462658277642",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_as_ptr",
    "hash": "1800088918712090270116493778552315001188",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_as_ref",
    "hash": "56097872154096586192659264810632774172",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_as_uninit_mut",
    "hash": "721243890045367760817451278070316269372",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_as_uninit_ref",
    "hash": "103164112518012411184269900923423162451",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_as_uninit_slice",
    "hash": "1813288012757369626018103405143988472582",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_as_uninit_slice_mut",
    "hash": "45151046495742320164546185770400705006",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_byte_sub"
  },
  {
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_cast",
    "hash": "150443779388902386343318111367937554817",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_copy_from",
    "hash": "1402289768821423463116146080807697737382",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_copy_from_nonoverlapping",
    "hash": "101572577802030571414984981809816592022",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_copy_to",
    "hash": "29415395890594258552679915945335488453",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_copy_to_nonoverlapping",
    "hash": "95121390337150833436559026396585124099",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_drop_in_place",
    "hash": "97261923004570227645165142343655291808",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_from_raw_part_trait",
    "hash": "1693641523786869179814965754993006174458",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_get_unchecked_mut",
    "hash": "289735203462261200713879653327309661473",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_is_aligned_to",
    "hash": "304839619466143024013397703239309772666",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_is_aligned_to_no_power_two",
    "hash": "157504696454290230994148367533863113594",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_is_empty",
    "hash": "45063365391896685614442087663647383167",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_len",
    "hash": "22780176796475263161673783400167492092",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_map_addr",
    "hash": "125455873977219621795539416135339907539",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_new",
    "hash": "177841898836161007164201552849474145611",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_new_unchecked",
    "hash": "316951271845177440913089588242557561404",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_offset",
    "hash": "300530537708272947312426095258563518534",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_offset_from",
    "hash": "159275534063046045014529288400514228998",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_read",
    "hash": "5583667908253111688336549708646477774",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_read_unaligned",
    "hash": "80139176410605478333207782613922240205",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_read_volatile",
    "hash": "517015630807653505917382251758423872085",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_replace",
    "hash": "1119231751624621873411740732498928741535",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_slice_from_raw_parts",
    "hash": "33646598664683596328968798687643068813",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_sub",
    "hash": "141864774602463024556013233545023621473",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_sub_ptr",
    "hash": "175955827669458471503378236829026153004",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_swap",
    "hash": "8921694847324204276463938138226971419",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_to_raw_parts",
    "hash": "59001928871156347381729593260535652043",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_with_addr",
    "hash": "308692999467468810516559104769133830362",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_write_bytes_i128",
    "hash": "1659528529944308495710377261100675190679",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_write_bytes_i16",
    "hash": "10439332547374551827410258824108768648",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_write_bytes_i32",
    "hash": "176806811007768368736137356145249415623",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_write_bytes_i64",
    "hash": "1136168504294943120614949378782515703067",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_write_bytes_i8",
    "hash": "88363640960125764592794039247396197222",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_write_bytes_isize",
    "hash": "504105106040383831518382272952253245521",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_write_bytes_u128",
    "hash": "75647028180467660517071447421251680",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_write_bytes_u16",
    "hash": "809960334447278906914290269095406056443",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_write_bytes_u32",
    "hash": "78148610756506736673460469015772967523",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_write_bytes_u64",
    "hash": "1270520059837506221411163442670813881806",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_write_bytes_u8",
    "hash": "148092376785136200018824685359840359990",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_write_bytes_unit",
    "hash": "1443624212236076322318155938127830486326",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_write_bytes_usize",
    "hash": "1191160807776543163514340411090525685368",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_write_i128",
    "hash": "841983065228198299317300588799990356479",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_write_i16",
    "hash": "158442954591675664665050263606220506249",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_write_i32",
    "hash": "175803490593096345648033567725314612470",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_write_i64",
    "hash": "1459950256982037354417250684527868243103",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_write_i8",
    "hash": "130018036022083183517082600451219638559",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_write_isize",
    "hash": "1307528590468872201924566448936983592",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_write_u128",
    "hash": "108414809307368635411978990263632808241",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_write_u16",
    "hash": "16392726844366971882583240219053217748",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_write_u32",
    "hash": "1757291000498026505110684238820858237739",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_write_u64",
    "hash": "67520463799968270810184414001317341830",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_write_u8",
    "hash": "181575062911677610657546717325611303365",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_write_unaligned_i128",
    "hash": "1583944703084884364816147250232348932279",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_write_unaligned_i16",
    "hash": "22433273459985184343201546355011252352",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_write_unaligned_i32",
    "hash": "579527422069246474315173148293509443360",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_write_unaligned_i64",
    "hash": "127822303705495948210498635424015957621",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_write_unaligned_i8",
    "hash": "25628508299410599016910849997721719925",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_write_unaligned_isize",
    "hash": "69463250928658219145818807185527225608",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_write_unaligned_u128",
    "hash": "1221949502283665283913228345418520487640",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_write_unaligned_u16",
    "hash": "514363116467196012410100255271450685933",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_write_unaligned_u32",
    "hash": "64916928902852921747438231438274643746",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_write_unaligned_u64",
    "hash": "569809925041104091816269829995334707241",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_write_unaligned_u8",
    "hash": "94292049867388160307159787047744006875",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_write_unaligned_unit",
    "hash": "17132606196190582305918248869142830391",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_write_unaligned_usize",
    "hash": "165268030999873940437842122849362989772",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_write_unit",
    "hash": "153639800832240286225401172144888715907",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_write_usize",
    "hash": "490089720954427246614771207792300783538",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_write_volatile_i128",
    "hash": "97500324881503887898916974613010758004",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_write_volatile_i16",
    "hash": "899488805977446717916233791828252268284",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_write_volatile_i32",
    "hash": "1154042591639157605612847685552022510764",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_write_volatile_i64",
    "hash": "1593116997953270399617253241957471880566",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_write_volatile_i8",
    "hash": "1447936395077910937995897575385913793",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_write_volatile_isize",
    "hash": "136946626813598730411625823308080740917",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_write_volatile_u128",
    "hash": "138897629026737234161581055693466158734",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_write_volatile_u16",
    "hash": "124744328947330769012324796611070618603",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_write_volatile_u32",
    "hash": "1420211099789050126917906609413021996007",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_write_volatile_u64",
    "hash": "414450395006029815810409177981045050439",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_write_volatile_u8",
    "hash": "41178787417735148632982693214540967984",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_write_volatile_unit",
    "hash": "774630643763417390516577663071084099859",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_write_volatile_usize",
    "hash": "365763225174356119916235208718836889394",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_slice_is_aligned_check",
    "hash": "19139781711703009483715117837397448355",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/unique.rs",
    "func": "ptr::unique::verify::check_as_mut",
    "hash": "1372451382396110795710461137733429199062",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/ptr/unique.rs",
    "func": "ptr::unique::verify::check_as_non_null_ptr",
    "hash": "139360136742001623321738087569009512415",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/unique.rs",
    "func": "ptr::unique::verify::check_as_ptr",
    "hash": "12887671980629875684753954130873157183",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/unique.rs",
    "func": "ptr::unique::verify::check_as_ref",
    "hash": "620887849009471035014039042762135072326",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/ptr/unique.rs",
    "func": "ptr::unique::verify::check_cast",
    "hash": "24437643419072332623526269104745645290",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/ptr/unique.rs",
    "func": "ptr::unique::verify::check_new",
    "hash": "1807494329100000309110590224403359832356",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/unique.rs",
    "func": "ptr::unique::verify::check_new_unchecked",
    "hash": "922409572076675101011530559276318837515",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/slice/ascii.rs",
    "func": "<slice::ascii::EscapeAscii<'a> as fmt::Display>::fmt::needs_escape",
    "hash": "178950956150498367086304854107167795201"
  },
  {
    "file": "core/src/slice/index.rs",
    "func": "slice::index::into_range",
    "hash": "453956614200107555910479796877178930222"
  },
  {
    "file": "core/src/slice/index.rs",
    "func": "slice::index::into_range_unchecked",
    "hash": "226668690405311114416916600684719728393"
  },
  {
    "file": "core/src/slice/index.rs",
    "func": "slice::index::into_slice_range",
    "hash": "920647104800945352718069837732743550106"
  },
  {
    "file": "core/src/slice/index.rs",
    "func": "slice::index::slice_end_index_len_fail",
    "hash": "1363736816890242968813291297505934676086"
  },
  {
    "file": "core/src/slice/index.rs",
    "func": "slice::index::slice_end_index_overflow_fail",
    "hash": "553184652678432063712515810568440288616"
  },
  {
    "file": "core/src/slice/index.rs",
    "func": "slice::index::slice_index_order_fail",
    "hash": "1363736816890242968813291297505934676086"
  },
  {
    "file": "core/src/slice/index.rs",
    "func": "slice::index::slice_start_index_len_fail",
    "hash": "1363736816890242968813291297505934676086"
  },
  {
    "file": "core/src/slice/index.rs",
    "func": "slice::index::slice_start_index_overflow_fail",
    "hash": "1464562601954900368615847969324976540621"
  },
  {
    "file": "core/src/slice/iter.rs",
    "func": "slice::iter::verify::verify_char::check_advance_back_by",
    "hash": "61469853492019162512705950176359864463",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/slice/iter.rs",
    "func": "slice::iter::verify::verify_char::check_advance_by",
    "hash": "98534467503431044418076077420884352453",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/slice/iter.rs",
    "func": "slice::iter::verify::verify_char::check_as_ref",
    "hash": "170847774739869827786283622528028556146",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/slice/iter.rs",
    "func": "slice::iter::verify::verify_char::check_as_slice",
    "hash": "1617248794245668578216307283341456126902",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/slice/iter.rs",
    "func": "slice::iter::verify::verify_char::check_clone",
    "hash": "182957138373193900493609632548602034146",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/slice/iter.rs",
    "func": "slice::iter::verify::verify_char::check_count",
    "hash": "92232669504130398316622212017325414179",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/slice/iter.rs",
    "func": "slice::iter::verify::verify_char::check_default",
    "hash": "714428854637819869017436807331921725312",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/slice/iter.rs",
    "func": "slice::iter::verify::verify_char::check_is_empty",
    "hash": "1182441964589764797114095726616044304847",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/slice/iter.rs",
    "func": "slice::iter::verify::verify_char::check_len",
    "hash": "38777967375095188912667528382045714736",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/slice/iter.rs",
    "func": "slice::iter::verify::verify_char::check_new_iter",
    "hash": "143345741785372305413759314314342501870",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/slice/iter.rs",
    "func": "slice::iter::verify::verify_char::check_next",
    "hash": "679821620920370543010000034873851939259",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/slice/iter.rs",
    "func": "slice::iter::verify::verify_char::check_next_back",
    "hash": "1541584671405176514515270827066698376419",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/slice/iter.rs",
    "func": "slice::iter::verify::verify_char::check_next_back_unchecked",
    "hash": "168890598105527337814016519967903885051",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/slice/iter.rs",
    "func": "slice::iter::verify::verify_char::check_nth",
    "hash": "44270103217696666677152761141559287811",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/slice/iter.rs",
    "func": "slice::iter::verify::verify_char::check_nth_back",
    "hash": "1132793013981227164712970240204917926215",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/slice/iter.rs",
    "func": "slice::iter::verify::verify_char::check_post_inc_start",
    "hash": "1542665656011376932113674548660091119264",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/slice/iter.rs",
    "func": "slice::iter::verify::verify_char::check_pre_dec_end",
    "hash": "1541874589695273340117102747066653757786",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/slice/iter.rs",
    "func": "slice::iter::verify::verify_char::check_size_hint",
    "hash": "159811886759462612249776257464020308288",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/slice/iter.rs",
    "func": "slice::iter::verify::verify_tup::check_advance_back_by",
    "hash": "144890333795851834413182185190097991993",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/slice/iter.rs",
    "func": "slice::iter::verify::verify_tup::check_advance_by",
    "hash": "145813392933209380573044929190863995164",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/slice/iter.rs",
    "func": "slice::iter::verify::verify_tup::check_as_ref",
    "hash": "18317993568215090132965104145954932261",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/slice/iter.rs",
    "func": "slice::iter::verify::verify_tup::check_as_slice",
    "hash": "94304829139887956832770709095507542588",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/slice/iter.rs",
    "func": "slice::iter::verify::verify_tup::check_clone",
    "hash": "836265890795037199413980886930476534650",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/slice/iter.rs",
    "func": "slice::iter::verify::verify_tup::check_count",
    "hash": "1780434554267434699314750682824933945845",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/slice/iter.rs",
    "func": "slice::iter::verify::verify_tup::check_default",
    "hash": "76531376701869864044502788123435725872",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/slice/iter.rs",
    "func": "slice::iter::verify::verify_tup::check_is_empty",
    "hash": "63755816629214277983923192772270621678",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/slice/iter.rs",
    "func": "slice::iter::verify::verify_tup::check_len",
    "hash": "50729797441689126012021627123896402353",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/slice/iter.rs",
    "func": "slice::iter::verify::verify_tup::check_new_iter",
    "hash": "819839360223501002114708553740401546812",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/slice/iter.rs",
    "func": "slice::iter::verify::verify_tup::check_next",
    "hash": "145888176100406560549161642986222385823",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/slice/iter.rs",
    "func": "slice::iter::verify::verify_tup::check_next_back",
    "hash": "110040951991713625615256974943582590566",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/slice/iter.rs",
    "func": "slice::iter::verify::verify_tup::check_next_back_unchecked",
    "hash": "820279128872704690615865274616675428796",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/slice/iter.rs",
    "func": "slice::iter::verify::verify_tup::check_nth",
    "hash": "16704443132335127226395081234979734782",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/slice/iter.rs",
    "func": "slice::iter::verify::verify_tup::check_nth_back",
    "hash": "1497440539157364459916673884477301987952",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/slice/iter.rs",
    "func": "slice::iter::verify::verify_tup::check_post_inc_start",
    "hash": "772065445727942061715167066008683238755",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/slice/iter.rs",
    "func": "slice::iter::verify::verify_tup::check_pre_dec_end",
    "hash": "143893674430153010926443013204585072200",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/slice/iter.rs",
    "func": "slice::iter::verify::verify_tup::check_size_hint",
    "hash": "157948115389289382218396959945380361005",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/slice/iter.rs",
    "func": "slice::iter::verify::verify_u8::check_advance_back_by",
    "hash": "1474576528232282268514041371176134779228",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/slice/iter.rs",
    "func": "slice::iter::verify::verify_u8::check_advance_by",
    "hash": "1342948796115543883610550178527939299692",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/slice/iter.rs",
    "func": "slice::iter::verify::verify_u8::check_as_ref",
    "hash": "44618257610125939211266937476776485984",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/slice/iter.rs",
    "func": "slice::iter::verify::verify_u8::check_as_slice",
    "hash": "181903987773881189738258726348829890542",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/slice/iter.rs",
    "func": "slice::iter::verify::verify_u8::check_clone",
    "hash": "100431433389247958449165835085412201470",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/slice/iter.rs",
    "func": "slice::iter::verify::verify_u8::check_count",
    "hash": "115579974684300653293829977806509055326",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/slice/iter.rs",
    "func": "slice::iter::verify::verify_u8::check_default",
    "hash": "43191176606345643608738701534833755223",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/slice/iter.rs",
    "func": "slice::iter::verify::verify_u8::check_is_empty",
    "hash": "1029201510735941571718026660423556298610",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/slice/iter.rs",
    "func": "slice::iter::verify::verify_u8::check_len",
    "hash": "782469928253127812215918615300064717872",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/slice/iter.rs",
    "func": "slice::iter::verify::verify_u8::check_new_iter",
    "hash": "168568137222756966224487046219440349925",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/slice/iter.rs",
    "func": "slice::iter::verify::verify_u8::check_next",
    "hash": "112874680204066875661312225522650500206",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/slice/iter.rs",
    "func": "slice::iter::verify::verify_u8::check_next_back",
    "hash": "30384973597086181511857638782277822247",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/slice/iter.rs",
    "func": "slice::iter::verify::verify_u8::check_next_back_unchecked",
    "hash": "172150011122307574286597654750161228362",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/slice/iter.rs",
    "func": "slice::iter::verify::verify_u8::check_nth",
    "hash": "99215286641250620718275292469138939936",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/slice/iter.rs",
    "func": "slice::iter::verify::verify_u8::check_nth_back",
    "hash": "783908831524973170010554460202937519917",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/slice/iter.rs",
    "func": "slice::iter::verify::verify_u8::check_post_inc_start",
    "hash": "156212263461235178847073567438506663682",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/slice/iter.rs",
    "func": "slice::iter::verify::verify_u8::check_pre_dec_end",
    "hash": "14465079161626063016642567259409626996",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/slice/iter.rs",
    "func": "slice::iter::verify::verify_u8::check_size_hint",
    "hash": "1085294485229383362111959412499510274147",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/slice/iter.rs",
    "func": "slice::iter::verify::verify_unit::check_advance_back_by",
    "hash": "87816073614309323255818448417436606428",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/slice/iter.rs",
    "func": "slice::iter::verify::verify_unit::check_advance_by",
    "hash": "736601952210787217716795998229118414985",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/slice/iter.rs",
    "func": "slice::iter::verify::verify_unit::check_as_ref",
    "hash": "1144834513556541160714173566407640607585",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/slice/iter.rs",
    "func": "slice::iter::verify::verify_unit::check_as_slice",
    "hash": "137416476388755723528000559040064874368",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/slice/iter.rs",
    "func": "slice::iter::verify::verify_unit::check_clone",
    "hash": "1911147668453967610254885876164497747",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/slice/iter.rs",
    "func": "slice::iter::verify::verify_unit::check_count",
    "hash": "71800751650090649966270179595706706661",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/slice/iter.rs",
    "func": "slice::iter::verify::verify_unit::check_default",
    "hash": "82752931157837690308176244994358666921",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/slice/iter.rs",
    "func": "slice::iter::verify::verify_unit::check_is_empty",
    "hash": "160028622882500187321231487996954648296",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/slice/iter.rs",
    "func": "slice::iter::verify::verify_unit::check_len",
    "hash": "50663287368158087723669063369538440262",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/slice/iter.rs",
    "func": "slice::iter::verify::verify_unit::check_new_iter",
    "hash": "164794452738529959884261190396222524065",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/slice/iter.rs",
    "func": "slice::iter::verify::verify_unit::check_next",
    "hash": "431716824976645602314102235689987779252",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/slice/iter.rs",
    "func": "slice::iter::verify::verify_unit::check_next_back",
    "hash": "160045095013205249498383853499947198480",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/slice/iter.rs",
    "func": "slice::iter::verify::verify_unit::check_next_back_unchecked",
    "hash": "299959315990819116965803559280089635",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/slice/iter.rs",
    "func": "slice::iter::verify::verify_unit::check_nth",
    "hash": "167175902986073291342168503907670917320",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/slice/iter.rs",
    "func": "slice::iter::verify::verify_unit::check_nth_back",
    "hash": "1271439594175047084315054597444348898370",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/slice/iter.rs",
    "func": "slice::iter::verify::verify_unit::check_post_inc_start",
    "hash": "37248607656469425471426420824770469516",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/slice/iter.rs",
    "func": "slice::iter::verify::verify_unit::check_pre_dec_end",
    "hash": "1668442748051676408913185009981268077299",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/slice/iter.rs",
    "func": "slice::iter::verify::verify_unit::check_size_hint",
    "hash": "112283127000718783798644861228017071171",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/slice/memchr.rs",
    "func": "slice::memchr::contains_zero_byte",
    "hash": "146974890213594219449252497930155406314"
  },
  {
    "file": "core/src/slice/mod.rs",
    "func": "slice::<impl [T]>::align_to_offsets::gcd",
    "hash": "105529888766907594486492837192683480337"
  },
  {
    "file": "core/src/slice/mod.rs",
    "func": "slice::<impl [T]>::copy_from_slice::len_mismatch_fail",
    "hash": "298645679457198656012829275577161549642"
  },
  {
    "file": "core/src/slice/sort/shared/smallsort.rs",
    "func": "slice::sort::shared::smallsort::panic_on_ord_violation",
    "hash": "20864404773103763994288951545195620080"
  },
  {
    "file": "core/src/slice/sort/stable/drift.rs",
    "func": "slice::sort::stable::drift::DriftsortRun",
    "hash": "922105686148767230813500775288951536873"
  },
  {
    "file": "core/src/slice/sort/stable/drift.rs",
    "func": "slice::sort::stable::drift::DriftsortRun::new_sorted",
    "hash": "1017991774535437084916062623589978810664"
  },
  {
    "file": "core/src/slice/sort/stable/drift.rs",
    "func": "slice::sort::stable::drift::DriftsortRun::new_unsorted",
    "hash": "829392050603196067516820881974522986068"
  },
  {
    "file": "core/src/slice/sort/stable/drift.rs",
    "func": "slice::sort::stable::drift::merge_tree_depth",
    "hash": "101691175156354173702985109895893238897"
  },
  {
    "file": "core/src/slice/sort/stable/drift.rs",
    "func": "slice::sort::stable::drift::merge_tree_scale_factor",
    "hash": "148763245420497846043235937111092919694"
  },
  {
    "file": "core/src/slice/sort/stable/drift.rs",
    "func": "slice::sort::stable::drift::sqrt_approx",
    "hash": "1443528330336837784014302543520297766461"
  },
  {
    "file": "core/src/str/count.rs",
    "func": "str::count::contains_non_continuation_byte",
    "hash": "87921322259985553812333634501742816676"
  },
  {
    "file": "core/src/str/count.rs",
    "func": "str::count::sum_bytes_in_usize",
    "hash": "137858276920179648721963909130383298377"
  },
  {
    "file": "core/src/str/mod.rs",
    "func": "str::<impl default::Default for &mut str>::default",
    "hash": "236587872465056178915145405547238338110"
  },
  {
    "file": "core/src/str/mod.rs",
    "func": "str::<impl default::Default for &str>::default",
    "hash": "109728572021665448201809134312606723391"
  },
  {
    "file": "core/src/str/pattern.rs",
    "func": "<str::pattern::MatchOnly as str::pattern::TwoWayStrategy>::matching",
    "hash": "146507627476814107677104441925797118965"
  },
  {
    "file": "core/src/str/pattern.rs",
    "func": "<str::pattern::MatchOnly as str::pattern::TwoWayStrategy>::rejecting",
    "hash": "1772952725560717790113998343690175182842"
  },
  {
    "file": "core/src/str/pattern.rs",
    "func": "<str::pattern::MatchOnly as str::pattern::TwoWayStrategy>::use_early_reject",
    "hash": "10689862468822940221927397400941920163"
  },
  {
    "file": "core/src/str/pattern.rs",
    "func": "<str::pattern::RejectAndMatch as str::pattern::TwoWayStrategy>::matching",
    "hash": "1206730974527364627516341888692559949819"
  },
  {
    "file": "core/src/str/pattern.rs",
    "func": "<str::pattern::RejectAndMatch as str::pattern::TwoWayStrategy>::rejecting",
    "hash": "294887974428220338713064789742687613384"
  },
  {
    "file": "core/src/str/pattern.rs",
    "func": "<str::pattern::RejectAndMatch as str::pattern::TwoWayStrategy>::use_early_reject",
    "hash": "4409820085065835207846628885485317057"
  },
  {
    "file": "core/src/str/pattern.rs",
    "func": "str::pattern::SearchStep::Match",
    "hash": "97638137788231249678974195822708767423"
  },
  {
    "file": "core/src/str/pattern.rs",
    "func": "str::pattern::SearchStep::Reject",
    "hash": "70615103419150168997623069664929164131"
  },
  {
    "file": "core/src/str/pattern.rs",
    "func": "str::pattern::Utf8Pattern::<'_>::CharPattern",
    "hash": "174721619799797840052247581535297724634"
  },
  {
    "file": "core/src/str/pattern.rs",
    "func": "str::pattern::verify::check_small_slice_eq"
  },
  {
    "file": "core/src/str/pattern.rs",
    "func": "str::pattern::verify::check_small_slice_eq_empty"
  },
  {
    "file": "core/src/str/traits.rs",
    "func": "str::traits::str_index_overflow_fail",
    "hash": "1472730426276209549715770316783411152615"
  },
  {
    "file": "core/src/str/validations.rs",
    "func": "str::validations::contains_nonascii",
    "hash": "53703104570138002865479014552427780648"
  },
  {
    "file": "core/src/str/validations.rs",
    "func": "str::validations::utf8_acc_cont_byte",
    "hash": "802603331907130014710293248879007229107"
  },
  {
    "file": "core/src/str/validations.rs",
    "func": "str::validations::utf8_char_width",
    "hash": "177654207720279896464631270099131912070"
  },
  {
    "file": "core/src/str/validations.rs",
    "func": "str::validations::utf8_first_byte",
    "hash": "1793199026846464691616255721034512928348"
  },
  {
    "file": "core/src/str/validations.rs",
    "func": "str::validations::utf8_is_cont_byte",
    "hash": "121973516639670562835557836045994389718"
  },
  {
    "file": "core/src/str/validations.rs",
    "func": "str::validations::verify::check_run_utf8_validation",
    "hash": "62037606624976613362347173762306817257",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/sync/atomic.rs",
    "func": "<sync::atomic::AtomicBool as convert::From<bool>>::from",
    "hash": "133727958641795827369327317842918704195"
  },
  {
    "file": "core/src/sync/atomic.rs",
    "func": "<sync::atomic::AtomicBool as default::Default>::default",
    "hash": "147403074830542987317599500900059701672"
  },
  {
    "file": "core/src/sync/atomic.rs",
    "func": "<sync::atomic::AtomicI16 as convert::From<i16>>::from",
    "hash": "750697645700944348615196861642156165304"
  },
  {
    "file": "core/src/sync/atomic.rs",
    "func": "<sync::atomic::AtomicI16 as default::Default>::default",
    "hash": "36636811203853516545276320112131440527"
  },
  {
    "file": "core/src/sync/atomic.rs",
    "func": "<sync::atomic::AtomicI32 as convert::From<i32>>::from",
    "hash": "438566695741440630517021400666157121589"
  },
  {
    "file": "core/src/sync/atomic.rs",
    "func": "<sync::atomic::AtomicI32 as default::Default>::default",
    "hash": "1578542605014917352214719306251901548457"
  },
  {
    "file": "core/src/sync/atomic.rs",
    "func": "<sync::atomic::AtomicI64 as convert::From<i64>>::from",
    "hash": "1530340053088445573916680464741312108768"
  },
  {
    "file": "core/src/sync/atomic.rs",
    "func": "<sync::atomic::AtomicI64 as default::Default>::default",
    "hash": "900200723858907585716723867425676025417"
  },
  {
    "file": "core/src/sync/atomic.rs",
    "func": "<sync::atomic::AtomicI8 as convert::From<i8>>::from",
    "hash": "1432232291031633950615532970132720735232"
  },
  {
    "file": "core/src/sync/atomic.rs",
    "func": "<sync::atomic::AtomicI8 as default::Default>::default",
    "hash": "121955603558524330216984635154094791467"
  },
  {
    "file": "core/src/sync/atomic.rs",
    "func": "<sync::atomic::AtomicIsize as convert::From<isize>>::from",
    "hash": "13761497265421204401402828937876468151"
  },
  {
    "file": "core/src/sync/atomic.rs",
    "func": "<sync::atomic::AtomicIsize as default::Default>::default",
    "hash": "178100108110177210551942608981086068886"
  },
  {
    "file": "core/src/sync/atomic.rs",
    "func": "<sync::atomic::AtomicU16 as convert::From<u16>>::from",
    "hash": "483772801167778384510458329689186103690"
  },
  {
    "file": "core/src/sync/atomic.rs",
    "func": "<sync::atomic::AtomicU16 as default::Default>::default",
    "hash": "107629916359929002902192033894487729692"
  },
  {
    "file": "core/src/sync/atomic.rs",
    "func": "<sync::atomic::AtomicU32 as convert::From<u32>>::from",
    "hash": "54386759220096413361102528952442374632"
  },
  {
    "file": "core/src/sync/atomic.rs",
    "func": "<sync::atomic::AtomicU32 as default::Default>::default",
    "hash": "1581216459346638818913461669331891875803"
  },
  {
    "file": "core/src/sync/atomic.rs",
    "func": "<sync::atomic::AtomicU64 as convert::From<u64>>::from",
    "hash": "133845830403330599111716036196329625654"
  },
  {
    "file": "core/src/sync/atomic.rs",
    "func": "<sync::atomic::AtomicU64 as default::Default>::default",
    "hash": "6705198300741334014071666438295438451"
  },
  {
    "file": "core/src/sync/atomic.rs",
    "func": "<sync::atomic::AtomicU8 as convert::From<u8>>::from",
    "hash": "151103211034697911214764264007126903796"
  },
  {
    "file": "core/src/sync/atomic.rs",
    "func": "<sync::atomic::AtomicU8 as default::Default>::default",
    "hash": "9413122067428323286659604113126946061"
  },
  {
    "file": "core/src/sync/atomic.rs",
    "func": "<sync::atomic::AtomicUsize as convert::From<usize>>::from",
    "hash": "110645430734720238983520293518753166995"
  },
  {
    "file": "core/src/sync/atomic.rs",
    "func": "<sync::atomic::AtomicUsize as default::Default>::default",
    "hash": "2434434068301216275608203915016892496"
  },
  {
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicBool::new",
    "hash": "176472351097346664287390932246848185987"
  },
  {
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicI16::new",
    "hash": "17402041786497396395825842423126454240"
  },
  {
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicI32::new",
    "hash": "37432932700937005491259833708662502213"
  },
  {
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicI64::new",
    "hash": "182173560710118512412969981536965615251"
  },
  {
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicI8::new",
    "hash": "621606817981140583513319075029775233331"
  },
  {
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicIsize::new",
    "hash": "1011385513030548110015404824765428771489"
  },
  {
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicU16::new",
    "hash": "773758846862166337118020542479343390"
  },
  {
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicU32::new",
    "hash": "366366961830258394417006095678917351849"
  },
  {
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicU64::new",
    "hash": "412949671820904511714475169146203378887"
  },
  {
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicU8::new",
    "hash": "256888919843643203217128298632362178504"
  },
  {
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicUsize::new",
    "hash": "942126879302493005711463295655280887554"
  },
  {
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::spin_loop_hint",
    "hash": "162117396284993085507313773753415640650"
  },
  {
    "file": "core/src/task/wake.rs",
    "func": "task::wake::ExtData::<'_>::None",
    "hash": "59094440031203608488510239104016510825"
  },
  {
    "file": "core/src/task/wake.rs",
    "func": "task::wake::LocalWaker::noop",
    "hash": "584550952105212471812010601033902644507"
  },
  {
    "file": "core/src/task/wake.rs",
    "func": "task::wake::Waker::noop",
    "hash": "131531642337512291987843370994976108772"
  },
  {
    "file": "core/src/time.rs",
    "func": "<time::Duration as default::Default>::default",
    "hash": "557122647834986581116727094892827644844"
  },
  {
    "file": "core/src/time.rs",
    "func": "<time::Duration as ops::arith::Add>::add",
    "hash": "57814897884892371387842630853222886746"
  },
  {
    "file": "core/src/time.rs",
    "func": "<time::Duration as ops::arith::Div<u32>>::div",
    "hash": "106978188860589390556424879318602412407"
  },
  {
    "file": "core/src/time.rs",
    "func": "<time::Duration as ops::arith::Mul<u32>>::mul",
    "hash": "1508901830966841116141418868163672696"
  },
  {
    "file": "core/src/time.rs",
    "func": "<time::Duration as ops::arith::Sub>::sub",
    "hash": "10582372319762668249785963837728697242"
  },
  {
    "file": "core/src/time.rs",
    "func": "time::<impl ops::arith::Mul<time::Duration> for u32>::mul",
    "hash": "71978847805209231671523227203993661460"
  },
  {
    "file": "core/src/time.rs",
    "func": "time::Duration::abs_diff",
    "hash": "440853878273536382611923593329831397474"
  },
  {
    "file": "core/src/time.rs",
    "func": "time::Duration::checked_add",
    "hash": "524575039593356898415821063859677546958"
  },
  {
    "file": "core/src/time.rs",
    "func": "time::Duration::checked_div",
    "hash": "838462498002467763710192820828197966107"
  },
  {
    "file": "core/src/time.rs",
    "func": "time::Duration::checked_mul",
    "hash": "106281018941174963491471978125628269231"
  },
  {
    "file": "core/src/time.rs",
    "func": "time::Duration::checked_sub",
    "hash": "75500218276652932086658552992379119329"
  },
  {
    "file": "core/src/time.rs",
    "func": "time::Duration::div_duration_f32",
    "hash": "92736691541581447113602374277316468793"
  },
  {
    "file": "core/src/time.rs",
    "func": "time::Duration::div_duration_f64",
    "hash": "31717613384841473674471966602249580006"
  },
  {
    "file": "core/src/time.rs",
    "func": "time::Duration::div_f32",
    "hash": "533492177528089050012129387311315088511"
  },
  {
    "file": "core/src/time.rs",
    "func": "time::Duration::div_f64",
    "hash": "145066751740427729881467325166228173344"
  },
  {
    "file": "core/src/time.rs",
    "func": "time::Duration::from_days",
    "hash": "5522782513325353447723675230247051980"
  },
  {
    "file": "core/src/time.rs",
    "func": "time::Duration::from_hours",
    "hash": "972367720126323005014629020636690655804"
  },
  {
    "file": "core/src/time.rs",
    "func": "time::Duration::from_micros",
    "hash": "956715107061211077011368306451590602413"
  },
  {
    "file": "core/src/time.rs",
    "func": "time::Duration::from_millis",
    "hash": "1770668244111355827818159355986509300101"
  },
  {
    "file": "core/src/time.rs",
    "func": "time::Duration::from_mins",
    "hash": "51420729950190799622508382677353591213"
  },
  {
    "file": "core/src/time.rs",
    "func": "time::Duration::from_nanos",
    "hash": "73599369031563098211800653976597682745"
  },
  {
    "file": "core/src/time.rs",
    "func": "time::Duration::from_secs",
    "hash": "96158565650678676051374109365203622923"
  },
  {
    "file": "core/src/time.rs",
    "func": "time::Duration::from_secs_f32",
    "hash": "136038267536080733338877599291283720577"
  },
  {
    "file": "core/src/time.rs",
    "func": "time::Duration::from_secs_f64",
    "hash": "759942623964622718213840543729539436759"
  },
  {
    "file": "core/src/time.rs",
    "func": "time::Duration::from_weeks",
    "hash": "70154910395512242614634847618630897024"
  },
  {
    "file": "core/src/time.rs",
    "func": "time::Duration::mul_f32",
    "hash": "1497790846298988438116589185179695422942"
  },
  {
    "file": "core/src/time.rs",
    "func": "time::Duration::mul_f64",
    "hash": "441579496621721360114695697950538931397"
  },
  {
    "file": "core/src/time.rs",
    "func": "time::Duration::new",
    "hash": "1318909697992626866011451428670892213484"
  },
  {
    "file": "core/src/time.rs",
    "func": "time::Duration::saturating_add",
    "hash": "25538395382932440574519896094563166519"
  },
  {
    "file": "core/src/time.rs",
    "func": "time::Duration::saturating_mul",
    "hash": "58945646629458581365693151246015937696"
  },
  {
    "file": "core/src/time.rs",
    "func": "time::Duration::saturating_sub",
    "hash": "175865562273784196424853787610318702846"
  },
  {
    "file": "core/src/time.rs",
    "func": "time::Duration::try_from_secs_f32",
    "hash": "41201035380311931916834333550462963354"
  },
  {
    "file": "core/src/time.rs",
    "func": "time::Duration::try_from_secs_f64",
    "hash": "1661526380280006219411891651523989009193"
  },
  {
    "file": "core/src/time.rs",
    "func": "time::duration_verify::duration_as_micros",
    "hash": "1209740357120159947011216797235182895809",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/time.rs",
    "func": "time::duration_verify::duration_as_micros_panics",
    "hash": "480288284466060240114377993557920106533",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/time.rs",
    "func": "time::duration_verify::duration_as_millis",
    "hash": "589192359419967607310069132533165810027",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/time.rs",
    "func": "time::duration_verify::duration_as_millis_panics",
    "hash": "813604376525090836814651625495396716905",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/time.rs",
    "func": "time::duration_verify::duration_as_nanos",
    "hash": "1219729697874288307616981634507518821615",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/time.rs",
    "func": "time::duration_verify::duration_as_nanos_panics",
    "hash": "900571471266288136314837829447880080016",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/time.rs",
    "func": "time::duration_verify::duration_as_secs",
    "hash": "665778986249665202416137743232588001563",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/time.rs",
    "func": "time::duration_verify::duration_as_secs_panics",
    "hash": "152276514358947372909885649282252822099",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/time.rs",
    "func": "time::duration_verify::duration_checked_add",
    "hash": "471795328625902905318432532661094608151",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/time.rs",
    "func": "time::duration_verify::duration_checked_add_panics",
    "hash": "553840575034894105715985692588436233713",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/time.rs",
    "func": "time::duration_verify::duration_checked_div",
    "hash": "1579582603511178895615225962138560052291",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/time.rs",
    "func": "time::duration_verify::duration_checked_div_panics",
    "hash": "320465939045094331311574960661481317666",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/time.rs",
    "func": "time::duration_verify::duration_checked_mul",
    "hash": "222305373935052080211164998532576864220",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/time.rs",
    "func": "time::duration_verify::duration_checked_mul_panics",
    "hash": "190874015786659397817561473746552045289",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/time.rs",
    "func": "time::duration_verify::duration_checked_sub",
    "hash": "1838705162240910504316737354022843144758",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/time.rs",
    "func": "time::duration_verify::duration_checked_sub_panics",
    "hash": "1142912123248450212617975334002491060314",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/time.rs",
    "func": "time::duration_verify::duration_new",
    "hash": "176662916364036340435046728814551081298",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/time.rs",
    "func": "time::duration_verify::duration_new_panics",
    "hash": "1604548179392554290511373110211314810317",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/time.rs",
    "func": "time::duration_verify::duration_subsec_micros",
    "hash": "10179109749053297230129838059958598635",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/time.rs",
    "func": "time::duration_verify::duration_subsec_micros_panics",
    "hash": "173050903345066988583449920199984145687",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/time.rs",
    "func": "time::duration_verify::duration_subsec_millis",
    "hash": "70476686403271110531288302068969452",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/time.rs",
    "func": "time::duration_verify::duration_subsec_millis_panics",
    "hash": "679844601116480082210298144615341720683",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/time.rs",
    "func": "time::duration_verify::duration_subsec_nanos",
    "hash": "639389084176786661110394310749085023212",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/time.rs",
    "func": "time::duration_verify::duration_subsec_nanos_panics",
    "hash": "130557932113169515457217744014262114392",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/time.rs",
    "func": "time::duration_verify::safe_duration",
    "hash": "1144871735262694930815185144281072179369"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "<ops::index_range::IndexRange as slice::index::SliceIndex<[T]>>::get_unchecked::precondition_check",
    "hash": "87905215503079520955941831883612079868"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "<ops::index_range::IndexRange as slice::index::SliceIndex<[T]>>::get_unchecked_mut::precondition_check",
    "hash": "949577173055195931617693703270529612693"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "<ops::range::Range<usize> as slice::index::SliceIndex<[T]>>::get_unchecked::precondition_check",
    "hash": "113814366055626271438047374284421353461"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "<ops::range::Range<usize> as slice::index::SliceIndex<[T]>>::get_unchecked_mut::precondition_check",
    "hash": "109562649191060178038182565159088266799"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "<usize as slice::index::SliceIndex<[T]>>::get_unchecked::precondition_check",
    "hash": "138774632689772549819578629668035245923"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "<usize as slice::index::SliceIndex<[T]>>::get_unchecked_mut::precondition_check",
    "hash": "331526003538137488213486206162083846398"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "alloc::layout::Layout::from_size_align_unchecked::precondition_check",
    "hash": "797719437272703523812892712801878713523"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "alloc::layout::Layout::from_size_align_unchecked::{closure#0}::{closure#1}::{closure#3}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "alloc::layout::Layout::from_size_align_unchecked::{closure#2}::{closure#3}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "alloc::layout::Layout::from_size_align_unchecked::{closure#3}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "ascii::ascii_char::AsciiChar::digit_unchecked::precondition_check",
    "hash": "20545676461242032347398227782422443799"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "char::convert::from_u32_unchecked::precondition_check",
    "hash": "158338167874674576194838212405987326951"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "char::convert::from_u32_unchecked::{closure#0}::{closure#1}::{closure#1}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "char::convert::from_u32_unchecked::{closure#2}::{closure#1}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "char::convert::from_u32_unchecked::{closure#3}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "hint::assert_unchecked::precondition_check",
    "hash": "90175179397242369455372712796954544135"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "hint::unreachable_unchecked::precondition_check",
    "hash": "550150895960312460312176584159342455723"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i128>::unchecked_add::precondition_check",
    "hash": "90603278147657946794678852079900002054"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i128>::unchecked_add::{closure#0}::{closure#1}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i128>::unchecked_add::{closure#2}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i128>::unchecked_add::{closure#3}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i128>::unchecked_exact_div::precondition_check",
    "hash": "40300615934014225557194584313529970021"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i128>::unchecked_mul::precondition_check",
    "hash": "136310523251969237051855580205978271966"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i128>::unchecked_mul::{closure#0}::{closure#1}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i128>::unchecked_mul::{closure#2}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i128>::unchecked_mul::{closure#3}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i128>::unchecked_neg::precondition_check",
    "hash": "92217782652326698279152384556412900820"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i128>::unchecked_neg::{closure#0}::{closure#1}::{closure#1}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i128>::unchecked_neg::{closure#2}::{closure#1}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i128>::unchecked_neg::{closure#3}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i128>::unchecked_shl::precondition_check",
    "hash": "10097464330620203866416845168433104885"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i128>::unchecked_shl::{closure#0}::{closure#1}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i128>::unchecked_shl::{closure#2}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i128>::unchecked_shl::{closure#3}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i128>::unchecked_shr::precondition_check",
    "hash": "29624840691592897217363089217874397636"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i128>::unchecked_shr::{closure#0}::{closure#1}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i128>::unchecked_shr::{closure#2}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i128>::unchecked_shr::{closure#3}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i128>::unchecked_sub::precondition_check",
    "hash": "1654750169799917185314680380696798091196"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i128>::unchecked_sub::{closure#0}::{closure#1}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i128>::unchecked_sub::{closure#2}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i128>::unchecked_sub::{closure#3}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i16>::unchecked_add::precondition_check",
    "hash": "1436785463912642927017675584034990197691"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i16>::unchecked_add::{closure#0}::{closure#1}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i16>::unchecked_add::{closure#2}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i16>::unchecked_add::{closure#3}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i16>::unchecked_exact_div::precondition_check",
    "hash": "21445336845113082367608226633385869460"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i16>::unchecked_mul::precondition_check",
    "hash": "168990841392628215046190398086522770223"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i16>::unchecked_mul::{closure#0}::{closure#1}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i16>::unchecked_mul::{closure#2}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i16>::unchecked_mul::{closure#3}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i16>::unchecked_neg::precondition_check",
    "hash": "687814747392249068314962354627536007556"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i16>::unchecked_neg::{closure#0}::{closure#1}::{closure#1}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i16>::unchecked_neg::{closure#2}::{closure#1}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i16>::unchecked_neg::{closure#3}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i16>::unchecked_shl::precondition_check",
    "hash": "84138741948160360675933354820753621625"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i16>::unchecked_shl::{closure#0}::{closure#1}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i16>::unchecked_shl::{closure#2}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i16>::unchecked_shl::{closure#3}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i16>::unchecked_shr::precondition_check",
    "hash": "162938944680111446284105935250746155260"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i16>::unchecked_shr::{closure#0}::{closure#1}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i16>::unchecked_shr::{closure#2}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i16>::unchecked_shr::{closure#3}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i16>::unchecked_sub::precondition_check",
    "hash": "160539522809515725325225817577739119630"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i16>::unchecked_sub::{closure#0}::{closure#1}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i16>::unchecked_sub::{closure#2}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i16>::unchecked_sub::{closure#3}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i32>::unchecked_add::precondition_check",
    "hash": "1578086989203326249316967734318012683212"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i32>::unchecked_add::{closure#0}::{closure#1}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i32>::unchecked_add::{closure#2}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i32>::unchecked_add::{closure#3}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i32>::unchecked_exact_div::precondition_check",
    "hash": "68145691652622045566241429848807865187"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i32>::unchecked_mul::precondition_check",
    "hash": "1643834760177245923011422247162593200502"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i32>::unchecked_mul::{closure#0}::{closure#1}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i32>::unchecked_mul::{closure#2}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i32>::unchecked_mul::{closure#3}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i32>::unchecked_neg::precondition_check",
    "hash": "153342397636246890898991151770655557087"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i32>::unchecked_neg::{closure#0}::{closure#1}::{closure#1}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i32>::unchecked_neg::{closure#2}::{closure#1}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i32>::unchecked_neg::{closure#3}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i32>::unchecked_shl::precondition_check",
    "hash": "260464966039924780517233521113262993911"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i32>::unchecked_shl::{closure#0}::{closure#1}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i32>::unchecked_shl::{closure#2}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i32>::unchecked_shl::{closure#3}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i32>::unchecked_shr::precondition_check",
    "hash": "28546486007339839836128558414231522489"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i32>::unchecked_shr::{closure#0}::{closure#1}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i32>::unchecked_shr::{closure#2}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i32>::unchecked_shr::{closure#3}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i32>::unchecked_sub::precondition_check",
    "hash": "131934772194353599946693322672335912181"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i32>::unchecked_sub::{closure#0}::{closure#1}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i32>::unchecked_sub::{closure#2}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i32>::unchecked_sub::{closure#3}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i64>::unchecked_add::precondition_check",
    "hash": "792155747835768122213472721336394729133"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i64>::unchecked_add::{closure#0}::{closure#1}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i64>::unchecked_add::{closure#2}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i64>::unchecked_add::{closure#3}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i64>::unchecked_exact_div::precondition_check",
    "hash": "176373950166816672517531809971077578244"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i64>::unchecked_mul::precondition_check",
    "hash": "175183777671625048937270889743795407526"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i64>::unchecked_mul::{closure#0}::{closure#1}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i64>::unchecked_mul::{closure#2}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i64>::unchecked_mul::{closure#3}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i64>::unchecked_neg::precondition_check",
    "hash": "121004193123088078468126950274799040687"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i64>::unchecked_neg::{closure#0}::{closure#1}::{closure#1}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i64>::unchecked_neg::{closure#2}::{closure#1}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i64>::unchecked_neg::{closure#3}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i64>::unchecked_shl::precondition_check",
    "hash": "93663359819647082228056871957421106707"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i64>::unchecked_shl::{closure#0}::{closure#1}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i64>::unchecked_shl::{closure#2}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i64>::unchecked_shl::{closure#3}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i64>::unchecked_shr::precondition_check",
    "hash": "955001150209593032810800385944645505734"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i64>::unchecked_shr::{closure#0}::{closure#1}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i64>::unchecked_shr::{closure#2}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i64>::unchecked_shr::{closure#3}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i64>::unchecked_sub::precondition_check",
    "hash": "153966554587829140049828525447551183257"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i64>::unchecked_sub::{closure#0}::{closure#1}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i64>::unchecked_sub::{closure#2}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i64>::unchecked_sub::{closure#3}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i8>::unchecked_add::precondition_check",
    "hash": "21620352838295714315013987431098896814"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i8>::unchecked_add::{closure#0}::{closure#1}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i8>::unchecked_add::{closure#2}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i8>::unchecked_add::{closure#3}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i8>::unchecked_exact_div::precondition_check",
    "hash": "79496409676676025497120434214522665524"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i8>::unchecked_mul::precondition_check",
    "hash": "1175906354938696068314896367735795929477"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i8>::unchecked_mul::{closure#0}::{closure#1}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i8>::unchecked_mul::{closure#2}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i8>::unchecked_mul::{closure#3}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i8>::unchecked_neg::precondition_check",
    "hash": "101429290311708547842001409591361381109"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i8>::unchecked_neg::{closure#0}::{closure#1}::{closure#1}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i8>::unchecked_neg::{closure#2}::{closure#1}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i8>::unchecked_neg::{closure#3}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i8>::unchecked_shl::precondition_check",
    "hash": "100077510706974297797861350902040854912"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i8>::unchecked_shl::{closure#0}::{closure#1}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i8>::unchecked_shl::{closure#2}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i8>::unchecked_shl::{closure#3}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i8>::unchecked_shr::precondition_check",
    "hash": "1658558982554543474817842462427897878799"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i8>::unchecked_shr::{closure#0}::{closure#1}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i8>::unchecked_shr::{closure#2}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i8>::unchecked_shr::{closure#3}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i8>::unchecked_sub::precondition_check",
    "hash": "975186987546169201714353028941693048488"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i8>::unchecked_sub::{closure#0}::{closure#1}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i8>::unchecked_sub::{closure#2}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i8>::unchecked_sub::{closure#3}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl isize>::unchecked_add::precondition_check",
    "hash": "117849812495382635272223483199952257998"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl isize>::unchecked_add::{closure#0}::{closure#1}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl isize>::unchecked_add::{closure#2}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl isize>::unchecked_add::{closure#3}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl isize>::unchecked_exact_div::precondition_check",
    "hash": "79329703039444352712906951574529701668"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl isize>::unchecked_mul::precondition_check",
    "hash": "1267363241542004475510559808307357722059"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl isize>::unchecked_mul::{closure#0}::{closure#1}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl isize>::unchecked_mul::{closure#2}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl isize>::unchecked_mul::{closure#3}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl isize>::unchecked_neg::precondition_check",
    "hash": "160761334367309494176444203284255754796"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl isize>::unchecked_neg::{closure#0}::{closure#1}::{closure#1}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl isize>::unchecked_neg::{closure#2}::{closure#1}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl isize>::unchecked_neg::{closure#3}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl isize>::unchecked_shl::precondition_check",
    "hash": "603981302218014499714083107542918802001"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl isize>::unchecked_shl::{closure#0}::{closure#1}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl isize>::unchecked_shl::{closure#2}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl isize>::unchecked_shl::{closure#3}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl isize>::unchecked_shr::precondition_check",
    "hash": "386149210709833909915128027238041606362"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl isize>::unchecked_shr::{closure#0}::{closure#1}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl isize>::unchecked_shr::{closure#2}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl isize>::unchecked_shr::{closure#3}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl isize>::unchecked_sub::precondition_check",
    "hash": "125595667484921318533676994903980306199"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl isize>::unchecked_sub::{closure#0}::{closure#1}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl isize>::unchecked_sub::{closure#2}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl isize>::unchecked_sub::{closure#3}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u128>::unchecked_add::precondition_check",
    "hash": "120360396478355696514344870176171369740"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u128>::unchecked_add::{closure#0}::{closure#1}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u128>::unchecked_add::{closure#2}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u128>::unchecked_add::{closure#3}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u128>::unchecked_disjoint_bitor::precondition_check",
    "hash": "153843201064145969827067374681525312240"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u128>::unchecked_disjoint_bitor::{closure#0}::{closure#1}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u128>::unchecked_disjoint_bitor::{closure#2}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u128>::unchecked_disjoint_bitor::{closure#3}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u128>::unchecked_exact_div::precondition_check",
    "hash": "895084293996348230713119408450106123806"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u128>::unchecked_mul::precondition_check",
    "hash": "154674952997120722828259244416791237754"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u128>::unchecked_mul::{closure#0}::{closure#1}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u128>::unchecked_mul::{closure#2}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u128>::unchecked_mul::{closure#3}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u128>::unchecked_shl::precondition_check",
    "hash": "4113200768862044095980052561514680954"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u128>::unchecked_shl::{closure#0}::{closure#1}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u128>::unchecked_shl::{closure#2}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u128>::unchecked_shl::{closure#3}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u128>::unchecked_shr::precondition_check",
    "hash": "79206810285420204778607022550457743395"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u128>::unchecked_shr::{closure#0}::{closure#1}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u128>::unchecked_shr::{closure#2}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u128>::unchecked_shr::{closure#3}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u128>::unchecked_sub::precondition_check",
    "hash": "1744077010071003464417370497130940962955"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u128>::unchecked_sub::{closure#0}::{closure#1}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u128>::unchecked_sub::{closure#2}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u128>::unchecked_sub::{closure#3}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u16>::unchecked_add::precondition_check",
    "hash": "3060735069095531695579360726350017976"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u16>::unchecked_add::{closure#0}::{closure#1}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u16>::unchecked_add::{closure#2}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u16>::unchecked_add::{closure#3}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u16>::unchecked_disjoint_bitor::precondition_check",
    "hash": "1793281261769909302314498507449232266997"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u16>::unchecked_disjoint_bitor::{closure#0}::{closure#1}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u16>::unchecked_disjoint_bitor::{closure#2}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u16>::unchecked_disjoint_bitor::{closure#3}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u16>::unchecked_exact_div::precondition_check",
    "hash": "104435329802251337178827797946534051226"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u16>::unchecked_mul::precondition_check",
    "hash": "158828498972930144542399127688761497642"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u16>::unchecked_mul::{closure#0}::{closure#1}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u16>::unchecked_mul::{closure#2}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u16>::unchecked_mul::{closure#3}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u16>::unchecked_shl::precondition_check",
    "hash": "1734708403364527387118312280796255613143"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u16>::unchecked_shl::{closure#0}::{closure#1}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u16>::unchecked_shl::{closure#2}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u16>::unchecked_shl::{closure#3}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u16>::unchecked_shr::precondition_check",
    "hash": "1418304291334038139216196796324746567324"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u16>::unchecked_shr::{closure#0}::{closure#1}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u16>::unchecked_shr::{closure#2}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u16>::unchecked_shr::{closure#3}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u16>::unchecked_sub::precondition_check",
    "hash": "712883573473817257513444940241063592961"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u16>::unchecked_sub::{closure#0}::{closure#1}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u16>::unchecked_sub::{closure#2}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u16>::unchecked_sub::{closure#3}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u32>::unchecked_add::precondition_check",
    "hash": "171544005344696284717704595093144721836"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u32>::unchecked_add::{closure#0}::{closure#1}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u32>::unchecked_add::{closure#2}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u32>::unchecked_add::{closure#3}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u32>::unchecked_disjoint_bitor::precondition_check",
    "hash": "1052907880056987935314170475417053938016"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u32>::unchecked_disjoint_bitor::{closure#0}::{closure#1}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u32>::unchecked_disjoint_bitor::{closure#2}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u32>::unchecked_disjoint_bitor::{closure#3}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u32>::unchecked_exact_div::precondition_check",
    "hash": "178180954411962573488725780766991531705"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u32>::unchecked_mul::precondition_check",
    "hash": "1186819976966343539816541912890252054082"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u32>::unchecked_mul::{closure#0}::{closure#1}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u32>::unchecked_mul::{closure#2}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u32>::unchecked_mul::{closure#3}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u32>::unchecked_shl::precondition_check",
    "hash": "1189103387956341428815017023261925242420"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u32>::unchecked_shl::{closure#0}::{closure#1}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u32>::unchecked_shl::{closure#2}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u32>::unchecked_shl::{closure#3}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u32>::unchecked_shr::precondition_check",
    "hash": "1456206111154271193215510433467597053931"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u32>::unchecked_shr::{closure#0}::{closure#1}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u32>::unchecked_shr::{closure#2}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u32>::unchecked_shr::{closure#3}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u32>::unchecked_sub::precondition_check",
    "hash": "199739883961798654815273264980462540667"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u32>::unchecked_sub::{closure#0}::{closure#1}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u32>::unchecked_sub::{closure#2}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u32>::unchecked_sub::{closure#3}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u64>::unchecked_add::precondition_check",
    "hash": "78020299093407940357755056352287424647"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u64>::unchecked_add::{closure#0}::{closure#1}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u64>::unchecked_add::{closure#2}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u64>::unchecked_add::{closure#3}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u64>::unchecked_disjoint_bitor::precondition_check",
    "hash": "110087909242004538791432228896314530949"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u64>::unchecked_disjoint_bitor::{closure#0}::{closure#1}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u64>::unchecked_disjoint_bitor::{closure#2}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u64>::unchecked_disjoint_bitor::{closure#3}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u64>::unchecked_exact_div::precondition_check",
    "hash": "1115874827642250285714824995057665472354"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u64>::unchecked_mul::precondition_check",
    "hash": "77300666745689100864524444058407549670"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u64>::unchecked_mul::{closure#0}::{closure#1}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u64>::unchecked_mul::{closure#2}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u64>::unchecked_mul::{closure#3}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u64>::unchecked_shl::precondition_check",
    "hash": "1425813511637071768710473255327028782978"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u64>::unchecked_shl::{closure#0}::{closure#1}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u64>::unchecked_shl::{closure#2}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u64>::unchecked_shl::{closure#3}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u64>::unchecked_shr::precondition_check",
    "hash": "67693276593090895714627780950248990519"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u64>::unchecked_shr::{closure#0}::{closure#1}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u64>::unchecked_shr::{closure#2}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u64>::unchecked_shr::{closure#3}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u64>::unchecked_sub::precondition_check",
    "hash": "152514069874694993016284359639502286035"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u64>::unchecked_sub::{closure#0}::{closure#1}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u64>::unchecked_sub::{closure#2}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u64>::unchecked_sub::{closure#3}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u8>::unchecked_add::precondition_check",
    "hash": "926431751072447714115290524535080564415"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u8>::unchecked_add::{closure#0}::{closure#1}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u8>::unchecked_add::{closure#2}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u8>::unchecked_add::{closure#3}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u8>::unchecked_disjoint_bitor::precondition_check",
    "hash": "161739668822282335956981419386643299694"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u8>::unchecked_disjoint_bitor::{closure#0}::{closure#1}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u8>::unchecked_disjoint_bitor::{closure#2}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u8>::unchecked_disjoint_bitor::{closure#3}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u8>::unchecked_exact_div::precondition_check",
    "hash": "119728579832571257135020688729546402894"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u8>::unchecked_mul::precondition_check",
    "hash": "14202048457247844812217192413183113669"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u8>::unchecked_mul::{closure#0}::{closure#1}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u8>::unchecked_mul::{closure#2}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u8>::unchecked_mul::{closure#3}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u8>::unchecked_shl::precondition_check",
    "hash": "177596075451317923696105620726753258927"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u8>::unchecked_shl::{closure#0}::{closure#1}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u8>::unchecked_shl::{closure#2}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u8>::unchecked_shl::{closure#3}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u8>::unchecked_shr::precondition_check",
    "hash": "58461264582228586515124865687180082116"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u8>::unchecked_shr::{closure#0}::{closure#1}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u8>::unchecked_shr::{closure#2}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u8>::unchecked_shr::{closure#3}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u8>::unchecked_sub::precondition_check",
    "hash": "785428393837772882311613268351172098828"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u8>::unchecked_sub::{closure#0}::{closure#1}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u8>::unchecked_sub::{closure#2}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u8>::unchecked_sub::{closure#3}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl usize>::unchecked_add::precondition_check",
    "hash": "156558724737321886766153526308848840146"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl usize>::unchecked_add::{closure#0}::{closure#1}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl usize>::unchecked_add::{closure#2}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl usize>::unchecked_add::{closure#3}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl usize>::unchecked_disjoint_bitor::precondition_check",
    "hash": "470811415522945156316863660280152242365"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl usize>::unchecked_disjoint_bitor::{closure#0}::{closure#1}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl usize>::unchecked_disjoint_bitor::{closure#2}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl usize>::unchecked_disjoint_bitor::{closure#3}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl usize>::unchecked_exact_div::precondition_check",
    "hash": "886476400573076994114777715064305115918"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl usize>::unchecked_mul::precondition_check",
    "hash": "11082287048046256495192965390467789274"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl usize>::unchecked_mul::{closure#0}::{closure#1}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl usize>::unchecked_mul::{closure#2}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl usize>::unchecked_mul::{closure#3}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl usize>::unchecked_shl::precondition_check",
    "hash": "95156324230292266365961910943978318691"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl usize>::unchecked_shl::{closure#0}::{closure#1}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl usize>::unchecked_shl::{closure#2}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl usize>::unchecked_shl::{closure#3}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl usize>::unchecked_shr::precondition_check",
    "hash": "134717736198863817596661109360149464883"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl usize>::unchecked_shr::{closure#0}::{closure#1}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl usize>::unchecked_shr::{closure#2}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl usize>::unchecked_shr::{closure#3}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl usize>::unchecked_sub::precondition_check",
    "hash": "478505109661826463711850093418602871650"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl usize>::unchecked_sub::{closure#0}::{closure#1}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl usize>::unchecked_sub::{closure#2}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl usize>::unchecked_sub::{closure#3}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::nonzero::NonZero::<T>::from_mut_unchecked::precondition_check",
    "hash": "962045741537776018613762800291523164529"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::nonzero::NonZero::<T>::new_unchecked::precondition_check",
    "hash": "1218790289670026660418434748374709001141"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::nonzero::NonZero::<T>::new_unchecked::{closure#0}::{closure#1}::{closure#2}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::nonzero::NonZero::<T>::new_unchecked::{closure#2}::{closure#2}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::nonzero::NonZero::<T>::new_unchecked::{closure#3}::{closure#1}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "ops::index_range::IndexRange::new_unchecked::precondition_check",
    "hash": "117719538577286380918646907500680855210"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "ptr::alignment::Alignment::new_unchecked::precondition_check",
    "hash": "501832527150057417714281136227809585904"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "ptr::alignment::Alignment::new_unchecked::{closure#0}::{closure#1}::{closure#2}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "ptr::alignment::Alignment::new_unchecked::{closure#2}::{closure#2}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "ptr::alignment::Alignment::new_unchecked::{closure#3}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "slice::<impl [T]>::as_chunks_unchecked::precondition_check",
    "hash": "182908810388331326478630133303460182053"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "slice::<impl [T]>::as_chunks_unchecked_mut::precondition_check",
    "hash": "89769304122164712357690998277116627918"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "slice::<impl [T]>::split_at_mut_unchecked::precondition_check",
    "hash": "188477357021356532517716614779858660745"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "slice::<impl [T]>::split_at_unchecked::precondition_check",
    "hash": "180126912453652104473132457509626900161"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "slice::<impl [T]>::swap_unchecked::precondition_check",
    "hash": "814630926930692395113620400226148314716"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "str::traits::<impl slice::index::SliceIndex<str> for ops::range::Range<usize>>::get_unchecked::precondition_check",
    "hash": "1473335491240830543017777776437787647078"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "str::traits::<impl slice::index::SliceIndex<str> for ops::range::Range<usize>>::get_unchecked_mut::precondition_check",
    "hash": "660858227431972227914649257014475699106"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "str::traits::<impl slice::index::SliceIndex<str> for range::Range<usize>>::get_unchecked::precondition_check",
    "hash": "127199659559777400810316453468540309982"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "str::traits::<impl slice::index::SliceIndex<str> for range::Range<usize>>::get_unchecked_mut::precondition_check",
    "hash": "14197556671385915019919262288159279952"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "ub_checks::check_language_ub",
    "hash": "399232661239117480517401994520839366833"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "ub_checks::is_valid_allocation_size",
    "hash": "1366691609966069760614771012231218686545"
  },
  {
    "file": "core/src/unicode/printable.rs",
    "func": "unicode::printable::is_printable",
    "hash": "1636371190930195136212428872856229438187"
  },
  {
    "file": "core/src/unicode/unicode_data.rs",
    "func": "unicode::unicode_data::ShortOffsetRunHeader",
    "hash": "1467383178226749743217961459163394349263"
  },
  {
    "file": "core/src/unicode/unicode_data.rs",
    "func": "unicode::unicode_data::ShortOffsetRunHeader::new",
    "hash": "1288142076102493782718240229744494666263"
  },
  {
    "file": "core/src/unicode/unicode_data.rs",
    "func": "unicode::unicode_data::alphabetic::lookup",
    "hash": "1467884699528675217517075800392048978776"
  },
  {
    "file": "core/src/unicode/unicode_data.rs",
    "func": "unicode::unicode_data::case_ignorable::lookup",
    "hash": "43934260455100904774332774637327640412"
  },
  {
    "file": "core/src/unicode/unicode_data.rs",
    "func": "unicode::unicode_data::cased::lookup",
    "hash": "658759450444805815518405938948659548075"
  },
  {
    "file": "core/src/unicode/unicode_data.rs",
    "func": "unicode::unicode_data::cc::lookup",
    "hash": "7164171079389631111149564179994247156"
  },
  {
    "file": "core/src/unicode/unicode_data.rs",
    "func": "unicode::unicode_data::conversions::to_lower",
    "hash": "118333419540764234708331641993815091418"
  },
  {
    "file": "core/src/unicode/unicode_data.rs",
    "func": "unicode::unicode_data::conversions::to_upper",
    "hash": "128087442282562403994480280294422403384"
  },
  {
    "file": "core/src/unicode/unicode_data.rs",
    "func": "unicode::unicode_data::grapheme_extend::lookup",
    "hash": "1011253460289827015316318560615845882862"
  },
  {
    "file": "core/src/unicode/unicode_data.rs",
    "func": "unicode::unicode_data::grapheme_extend::lookup_slow",
    "hash": "64821626161497832866915756965778203"
  },
  {
    "file": "core/src/unicode/unicode_data.rs",
    "func": "unicode::unicode_data::lowercase::lookup",
    "hash": "35679812265065387429682589995485417482"
  },
  {
    "file": "core/src/unicode/unicode_data.rs",
    "func": "unicode::unicode_data::n::lookup",
    "hash": "125920873038479946434689142091268219137"
  },
  {
    "file": "core/src/unicode/unicode_data.rs",
    "func": "unicode::unicode_data::uppercase::lookup",
    "hash": "61501442861196712018349926480493883086"
  },
  {
    "file": "core/src/unicode/unicode_data.rs",
    "func": "unicode::unicode_data::white_space::lookup",
    "hash": "126826448514586998445582748734874648534"
  },
  {
    "file": "core/src/unit.rs",
    "func": "<() as unit::IsUnit>::is_unit",
    "hash": "157038680174297679531621426849005497820"
  },
  {
    "file": "portable-simd/crates/core_simd/src/masks.rs",
    "func": "core_simd::masks::<impl core_simd::masks::sealed::Sealed for i16>::eq"
  },
  {
    "file": "portable-simd/crates/core_simd/src/masks.rs",
    "func": "core_simd::masks::<impl core_simd::masks::sealed::Sealed for i16>::max_unsigned"
  },
  {
    "file": "portable-simd/crates/core_simd/src/masks.rs",
    "func": "core_simd::masks::<impl core_simd::masks::sealed::Sealed for i16>::to_usize"
  },
  {
    "file": "portable-simd/crates/core_simd/src/masks.rs",
    "func": "core_simd::masks::<impl core_simd::masks::sealed::Sealed for i32>::eq"
  },
  {
    "file": "portable-simd/crates/core_simd/src/masks.rs",
    "func": "core_simd::masks::<impl core_simd::masks::sealed::Sealed for i32>::max_unsigned"
  },
  {
    "file": "portable-simd/crates/core_simd/src/masks.rs",
    "func": "core_simd::masks::<impl core_simd::masks::sealed::Sealed for i32>::to_usize"
  },
  {
    "file": "portable-simd/crates/core_simd/src/masks.rs",
    "func": "core_simd::masks::<impl core_simd::masks::sealed::Sealed for i64>::eq"
  },
  {
    "file": "portable-simd/crates/core_simd/src/masks.rs",
    "func": "core_simd::masks::<impl core_simd::masks::sealed::Sealed for i64>::max_unsigned"
  },
  {
    "file": "portable-simd/crates/core_simd/src/masks.rs",
    "func": "core_simd::masks::<impl core_simd::masks::sealed::Sealed for i64>::to_usize"
  },
  {
    "file": "portable-simd/crates/core_simd/src/masks.rs",
    "func": "core_simd::masks::<impl core_simd::masks::sealed::Sealed for i8>::eq"
  },
  {
    "file": "portable-simd/crates/core_simd/src/masks.rs",
    "func": "core_simd::masks::<impl core_simd::masks::sealed::Sealed for i8>::max_unsigned"
  },
  {
    "file": "portable-simd/crates/core_simd/src/masks.rs",
    "func": "core_simd::masks::<impl core_simd::masks::sealed::Sealed for i8>::to_usize"
  },
  {
    "file": "portable-simd/crates/core_simd/src/masks.rs",
    "func": "core_simd::masks::<impl core_simd::masks::sealed::Sealed for isize>::eq"
  },
  {
    "file": "portable-simd/crates/core_simd/src/masks.rs",
    "func": "core_simd::masks::<impl core_simd::masks::sealed::Sealed for isize>::max_unsigned"
  },
  {
    "file": "portable-simd/crates/core_simd/src/masks.rs",
    "func": "core_simd::masks::<impl core_simd::masks::sealed::Sealed for isize>::to_usize"
  },
  {
    "file": "portable-simd/crates/core_simd/src/masks/full_masks.rs",
    "func": "<u16 as core_simd::masks::mask_impl::ReverseBits>::reverse_bits"
  },
  {
    "file": "portable-simd/crates/core_simd/src/masks/full_masks.rs",
    "func": "<u32 as core_simd::masks::mask_impl::ReverseBits>::reverse_bits"
  },
  {
    "file": "portable-simd/crates/core_simd/src/masks/full_masks.rs",
    "func": "<u64 as core_simd::masks::mask_impl::ReverseBits>::reverse_bits"
  },
  {
    "file": "portable-simd/crates/core_simd/src/masks/full_masks.rs",
    "func": "<u8 as core_simd::masks::mask_impl::ReverseBits>::reverse_bits"
  },
  {
    "file": "portable-simd/crates/core_simd/src/swizzle_dyn.rs",
    "func": "core_simd::swizzle_dyn::avx2_pshufb"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<f32, 16> as core_simd::to_bytes::ToBytes>::from_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<f32, 16> as core_simd::to_bytes::ToBytes>::from_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<f32, 16> as core_simd::to_bytes::ToBytes>::from_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<f32, 16> as core_simd::to_bytes::ToBytes>::to_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<f32, 16> as core_simd::to_bytes::ToBytes>::to_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<f32, 16> as core_simd::to_bytes::ToBytes>::to_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<f32, 1> as core_simd::to_bytes::ToBytes>::from_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<f32, 1> as core_simd::to_bytes::ToBytes>::from_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<f32, 1> as core_simd::to_bytes::ToBytes>::from_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<f32, 1> as core_simd::to_bytes::ToBytes>::to_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<f32, 1> as core_simd::to_bytes::ToBytes>::to_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<f32, 1> as core_simd::to_bytes::ToBytes>::to_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<f32, 2> as core_simd::to_bytes::ToBytes>::from_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<f32, 2> as core_simd::to_bytes::ToBytes>::from_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<f32, 2> as core_simd::to_bytes::ToBytes>::from_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<f32, 2> as core_simd::to_bytes::ToBytes>::to_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<f32, 2> as core_simd::to_bytes::ToBytes>::to_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<f32, 2> as core_simd::to_bytes::ToBytes>::to_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<f32, 4> as core_simd::to_bytes::ToBytes>::from_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<f32, 4> as core_simd::to_bytes::ToBytes>::from_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<f32, 4> as core_simd::to_bytes::ToBytes>::from_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<f32, 4> as core_simd::to_bytes::ToBytes>::to_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<f32, 4> as core_simd::to_bytes::ToBytes>::to_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<f32, 4> as core_simd::to_bytes::ToBytes>::to_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<f32, 8> as core_simd::to_bytes::ToBytes>::from_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<f32, 8> as core_simd::to_bytes::ToBytes>::from_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<f32, 8> as core_simd::to_bytes::ToBytes>::from_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<f32, 8> as core_simd::to_bytes::ToBytes>::to_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<f32, 8> as core_simd::to_bytes::ToBytes>::to_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<f32, 8> as core_simd::to_bytes::ToBytes>::to_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<f64, 1> as core_simd::to_bytes::ToBytes>::from_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<f64, 1> as core_simd::to_bytes::ToBytes>::from_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<f64, 1> as core_simd::to_bytes::ToBytes>::from_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<f64, 1> as core_simd::to_bytes::ToBytes>::to_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<f64, 1> as core_simd::to_bytes::ToBytes>::to_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<f64, 1> as core_simd::to_bytes::ToBytes>::to_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<f64, 2> as core_simd::to_bytes::ToBytes>::from_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<f64, 2> as core_simd::to_bytes::ToBytes>::from_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<f64, 2> as core_simd::to_bytes::ToBytes>::from_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<f64, 2> as core_simd::to_bytes::ToBytes>::to_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<f64, 2> as core_simd::to_bytes::ToBytes>::to_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<f64, 2> as core_simd::to_bytes::ToBytes>::to_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<f64, 4> as core_simd::to_bytes::ToBytes>::from_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<f64, 4> as core_simd::to_bytes::ToBytes>::from_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<f64, 4> as core_simd::to_bytes::ToBytes>::from_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<f64, 4> as core_simd::to_bytes::ToBytes>::to_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<f64, 4> as core_simd::to_bytes::ToBytes>::to_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<f64, 4> as core_simd::to_bytes::ToBytes>::to_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<f64, 8> as core_simd::to_bytes::ToBytes>::from_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<f64, 8> as core_simd::to_bytes::ToBytes>::from_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<f64, 8> as core_simd::to_bytes::ToBytes>::from_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<f64, 8> as core_simd::to_bytes::ToBytes>::to_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<f64, 8> as core_simd::to_bytes::ToBytes>::to_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<f64, 8> as core_simd::to_bytes::ToBytes>::to_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i16, 16> as core_simd::to_bytes::ToBytes>::from_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i16, 16> as core_simd::to_bytes::ToBytes>::from_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i16, 16> as core_simd::to_bytes::ToBytes>::from_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i16, 16> as core_simd::to_bytes::ToBytes>::to_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i16, 16> as core_simd::to_bytes::ToBytes>::to_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i16, 16> as core_simd::to_bytes::ToBytes>::to_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i16, 1> as core_simd::to_bytes::ToBytes>::from_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i16, 1> as core_simd::to_bytes::ToBytes>::from_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i16, 1> as core_simd::to_bytes::ToBytes>::from_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i16, 1> as core_simd::to_bytes::ToBytes>::to_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i16, 1> as core_simd::to_bytes::ToBytes>::to_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i16, 1> as core_simd::to_bytes::ToBytes>::to_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i16, 2> as core_simd::to_bytes::ToBytes>::from_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i16, 2> as core_simd::to_bytes::ToBytes>::from_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i16, 2> as core_simd::to_bytes::ToBytes>::from_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i16, 2> as core_simd::to_bytes::ToBytes>::to_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i16, 2> as core_simd::to_bytes::ToBytes>::to_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i16, 2> as core_simd::to_bytes::ToBytes>::to_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i16, 32> as core_simd::to_bytes::ToBytes>::from_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i16, 32> as core_simd::to_bytes::ToBytes>::from_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i16, 32> as core_simd::to_bytes::ToBytes>::from_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i16, 32> as core_simd::to_bytes::ToBytes>::to_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i16, 32> as core_simd::to_bytes::ToBytes>::to_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i16, 32> as core_simd::to_bytes::ToBytes>::to_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i16, 4> as core_simd::to_bytes::ToBytes>::from_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i16, 4> as core_simd::to_bytes::ToBytes>::from_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i16, 4> as core_simd::to_bytes::ToBytes>::from_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i16, 4> as core_simd::to_bytes::ToBytes>::to_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i16, 4> as core_simd::to_bytes::ToBytes>::to_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i16, 4> as core_simd::to_bytes::ToBytes>::to_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i16, 8> as core_simd::to_bytes::ToBytes>::from_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i16, 8> as core_simd::to_bytes::ToBytes>::from_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i16, 8> as core_simd::to_bytes::ToBytes>::from_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i16, 8> as core_simd::to_bytes::ToBytes>::to_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i16, 8> as core_simd::to_bytes::ToBytes>::to_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i16, 8> as core_simd::to_bytes::ToBytes>::to_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i32, 16> as core_simd::to_bytes::ToBytes>::from_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i32, 16> as core_simd::to_bytes::ToBytes>::from_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i32, 16> as core_simd::to_bytes::ToBytes>::from_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i32, 16> as core_simd::to_bytes::ToBytes>::to_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i32, 16> as core_simd::to_bytes::ToBytes>::to_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i32, 16> as core_simd::to_bytes::ToBytes>::to_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i32, 1> as core_simd::to_bytes::ToBytes>::from_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i32, 1> as core_simd::to_bytes::ToBytes>::from_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i32, 1> as core_simd::to_bytes::ToBytes>::from_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i32, 1> as core_simd::to_bytes::ToBytes>::to_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i32, 1> as core_simd::to_bytes::ToBytes>::to_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i32, 1> as core_simd::to_bytes::ToBytes>::to_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i32, 2> as core_simd::to_bytes::ToBytes>::from_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i32, 2> as core_simd::to_bytes::ToBytes>::from_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i32, 2> as core_simd::to_bytes::ToBytes>::from_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i32, 2> as core_simd::to_bytes::ToBytes>::to_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i32, 2> as core_simd::to_bytes::ToBytes>::to_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i32, 2> as core_simd::to_bytes::ToBytes>::to_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i32, 4> as core_simd::to_bytes::ToBytes>::from_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i32, 4> as core_simd::to_bytes::ToBytes>::from_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i32, 4> as core_simd::to_bytes::ToBytes>::from_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i32, 4> as core_simd::to_bytes::ToBytes>::to_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i32, 4> as core_simd::to_bytes::ToBytes>::to_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i32, 4> as core_simd::to_bytes::ToBytes>::to_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i32, 8> as core_simd::to_bytes::ToBytes>::from_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i32, 8> as core_simd::to_bytes::ToBytes>::from_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i32, 8> as core_simd::to_bytes::ToBytes>::from_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i32, 8> as core_simd::to_bytes::ToBytes>::to_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i32, 8> as core_simd::to_bytes::ToBytes>::to_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i32, 8> as core_simd::to_bytes::ToBytes>::to_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i64, 1> as core_simd::to_bytes::ToBytes>::from_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i64, 1> as core_simd::to_bytes::ToBytes>::from_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i64, 1> as core_simd::to_bytes::ToBytes>::from_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i64, 1> as core_simd::to_bytes::ToBytes>::to_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i64, 1> as core_simd::to_bytes::ToBytes>::to_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i64, 1> as core_simd::to_bytes::ToBytes>::to_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i64, 2> as core_simd::to_bytes::ToBytes>::from_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i64, 2> as core_simd::to_bytes::ToBytes>::from_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i64, 2> as core_simd::to_bytes::ToBytes>::from_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i64, 2> as core_simd::to_bytes::ToBytes>::to_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i64, 2> as core_simd::to_bytes::ToBytes>::to_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i64, 2> as core_simd::to_bytes::ToBytes>::to_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i64, 4> as core_simd::to_bytes::ToBytes>::from_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i64, 4> as core_simd::to_bytes::ToBytes>::from_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i64, 4> as core_simd::to_bytes::ToBytes>::from_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i64, 4> as core_simd::to_bytes::ToBytes>::to_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i64, 4> as core_simd::to_bytes::ToBytes>::to_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i64, 4> as core_simd::to_bytes::ToBytes>::to_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i64, 8> as core_simd::to_bytes::ToBytes>::from_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i64, 8> as core_simd::to_bytes::ToBytes>::from_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i64, 8> as core_simd::to_bytes::ToBytes>::from_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i64, 8> as core_simd::to_bytes::ToBytes>::to_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i64, 8> as core_simd::to_bytes::ToBytes>::to_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i64, 8> as core_simd::to_bytes::ToBytes>::to_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i8, 16> as core_simd::to_bytes::ToBytes>::from_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i8, 16> as core_simd::to_bytes::ToBytes>::from_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i8, 16> as core_simd::to_bytes::ToBytes>::from_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i8, 16> as core_simd::to_bytes::ToBytes>::to_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i8, 16> as core_simd::to_bytes::ToBytes>::to_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i8, 16> as core_simd::to_bytes::ToBytes>::to_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i8, 1> as core_simd::to_bytes::ToBytes>::from_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i8, 1> as core_simd::to_bytes::ToBytes>::from_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i8, 1> as core_simd::to_bytes::ToBytes>::from_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i8, 1> as core_simd::to_bytes::ToBytes>::to_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i8, 1> as core_simd::to_bytes::ToBytes>::to_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i8, 1> as core_simd::to_bytes::ToBytes>::to_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i8, 2> as core_simd::to_bytes::ToBytes>::from_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i8, 2> as core_simd::to_bytes::ToBytes>::from_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i8, 2> as core_simd::to_bytes::ToBytes>::from_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i8, 2> as core_simd::to_bytes::ToBytes>::to_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i8, 2> as core_simd::to_bytes::ToBytes>::to_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i8, 2> as core_simd::to_bytes::ToBytes>::to_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i8, 32> as core_simd::to_bytes::ToBytes>::from_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i8, 32> as core_simd::to_bytes::ToBytes>::from_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i8, 32> as core_simd::to_bytes::ToBytes>::from_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i8, 32> as core_simd::to_bytes::ToBytes>::to_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i8, 32> as core_simd::to_bytes::ToBytes>::to_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i8, 32> as core_simd::to_bytes::ToBytes>::to_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i8, 4> as core_simd::to_bytes::ToBytes>::from_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i8, 4> as core_simd::to_bytes::ToBytes>::from_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i8, 4> as core_simd::to_bytes::ToBytes>::from_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i8, 4> as core_simd::to_bytes::ToBytes>::to_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i8, 4> as core_simd::to_bytes::ToBytes>::to_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i8, 4> as core_simd::to_bytes::ToBytes>::to_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i8, 64> as core_simd::to_bytes::ToBytes>::from_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i8, 64> as core_simd::to_bytes::ToBytes>::from_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i8, 64> as core_simd::to_bytes::ToBytes>::from_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i8, 64> as core_simd::to_bytes::ToBytes>::to_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i8, 64> as core_simd::to_bytes::ToBytes>::to_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i8, 64> as core_simd::to_bytes::ToBytes>::to_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i8, 8> as core_simd::to_bytes::ToBytes>::from_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i8, 8> as core_simd::to_bytes::ToBytes>::from_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i8, 8> as core_simd::to_bytes::ToBytes>::from_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i8, 8> as core_simd::to_bytes::ToBytes>::to_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i8, 8> as core_simd::to_bytes::ToBytes>::to_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i8, 8> as core_simd::to_bytes::ToBytes>::to_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<isize, 1> as core_simd::to_bytes::ToBytes>::from_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<isize, 1> as core_simd::to_bytes::ToBytes>::from_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<isize, 1> as core_simd::to_bytes::ToBytes>::from_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<isize, 1> as core_simd::to_bytes::ToBytes>::to_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<isize, 1> as core_simd::to_bytes::ToBytes>::to_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<isize, 1> as core_simd::to_bytes::ToBytes>::to_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<isize, 2> as core_simd::to_bytes::ToBytes>::from_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<isize, 2> as core_simd::to_bytes::ToBytes>::from_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<isize, 2> as core_simd::to_bytes::ToBytes>::from_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<isize, 2> as core_simd::to_bytes::ToBytes>::to_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<isize, 2> as core_simd::to_bytes::ToBytes>::to_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<isize, 2> as core_simd::to_bytes::ToBytes>::to_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<isize, 4> as core_simd::to_bytes::ToBytes>::from_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<isize, 4> as core_simd::to_bytes::ToBytes>::from_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<isize, 4> as core_simd::to_bytes::ToBytes>::from_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<isize, 4> as core_simd::to_bytes::ToBytes>::to_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<isize, 4> as core_simd::to_bytes::ToBytes>::to_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<isize, 4> as core_simd::to_bytes::ToBytes>::to_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<isize, 8> as core_simd::to_bytes::ToBytes>::from_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<isize, 8> as core_simd::to_bytes::ToBytes>::from_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<isize, 8> as core_simd::to_bytes::ToBytes>::from_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<isize, 8> as core_simd::to_bytes::ToBytes>::to_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<isize, 8> as core_simd::to_bytes::ToBytes>::to_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<isize, 8> as core_simd::to_bytes::ToBytes>::to_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u16, 16> as core_simd::to_bytes::ToBytes>::from_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u16, 16> as core_simd::to_bytes::ToBytes>::from_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u16, 16> as core_simd::to_bytes::ToBytes>::from_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u16, 16> as core_simd::to_bytes::ToBytes>::to_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u16, 16> as core_simd::to_bytes::ToBytes>::to_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u16, 16> as core_simd::to_bytes::ToBytes>::to_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u16, 1> as core_simd::to_bytes::ToBytes>::from_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u16, 1> as core_simd::to_bytes::ToBytes>::from_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u16, 1> as core_simd::to_bytes::ToBytes>::from_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u16, 1> as core_simd::to_bytes::ToBytes>::to_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u16, 1> as core_simd::to_bytes::ToBytes>::to_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u16, 1> as core_simd::to_bytes::ToBytes>::to_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u16, 2> as core_simd::to_bytes::ToBytes>::from_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u16, 2> as core_simd::to_bytes::ToBytes>::from_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u16, 2> as core_simd::to_bytes::ToBytes>::from_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u16, 2> as core_simd::to_bytes::ToBytes>::to_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u16, 2> as core_simd::to_bytes::ToBytes>::to_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u16, 2> as core_simd::to_bytes::ToBytes>::to_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u16, 32> as core_simd::to_bytes::ToBytes>::from_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u16, 32> as core_simd::to_bytes::ToBytes>::from_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u16, 32> as core_simd::to_bytes::ToBytes>::from_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u16, 32> as core_simd::to_bytes::ToBytes>::to_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u16, 32> as core_simd::to_bytes::ToBytes>::to_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u16, 32> as core_simd::to_bytes::ToBytes>::to_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u16, 4> as core_simd::to_bytes::ToBytes>::from_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u16, 4> as core_simd::to_bytes::ToBytes>::from_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u16, 4> as core_simd::to_bytes::ToBytes>::from_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u16, 4> as core_simd::to_bytes::ToBytes>::to_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u16, 4> as core_simd::to_bytes::ToBytes>::to_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u16, 4> as core_simd::to_bytes::ToBytes>::to_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u16, 8> as core_simd::to_bytes::ToBytes>::from_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u16, 8> as core_simd::to_bytes::ToBytes>::from_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u16, 8> as core_simd::to_bytes::ToBytes>::from_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u16, 8> as core_simd::to_bytes::ToBytes>::to_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u16, 8> as core_simd::to_bytes::ToBytes>::to_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u16, 8> as core_simd::to_bytes::ToBytes>::to_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u32, 16> as core_simd::to_bytes::ToBytes>::from_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u32, 16> as core_simd::to_bytes::ToBytes>::from_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u32, 16> as core_simd::to_bytes::ToBytes>::from_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u32, 16> as core_simd::to_bytes::ToBytes>::to_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u32, 16> as core_simd::to_bytes::ToBytes>::to_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u32, 16> as core_simd::to_bytes::ToBytes>::to_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u32, 1> as core_simd::to_bytes::ToBytes>::from_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u32, 1> as core_simd::to_bytes::ToBytes>::from_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u32, 1> as core_simd::to_bytes::ToBytes>::from_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u32, 1> as core_simd::to_bytes::ToBytes>::to_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u32, 1> as core_simd::to_bytes::ToBytes>::to_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u32, 1> as core_simd::to_bytes::ToBytes>::to_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u32, 2> as core_simd::to_bytes::ToBytes>::from_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u32, 2> as core_simd::to_bytes::ToBytes>::from_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u32, 2> as core_simd::to_bytes::ToBytes>::from_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u32, 2> as core_simd::to_bytes::ToBytes>::to_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u32, 2> as core_simd::to_bytes::ToBytes>::to_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u32, 2> as core_simd::to_bytes::ToBytes>::to_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u32, 4> as core_simd::to_bytes::ToBytes>::from_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u32, 4> as core_simd::to_bytes::ToBytes>::from_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u32, 4> as core_simd::to_bytes::ToBytes>::from_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u32, 4> as core_simd::to_bytes::ToBytes>::to_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u32, 4> as core_simd::to_bytes::ToBytes>::to_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u32, 4> as core_simd::to_bytes::ToBytes>::to_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u32, 8> as core_simd::to_bytes::ToBytes>::from_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u32, 8> as core_simd::to_bytes::ToBytes>::from_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u32, 8> as core_simd::to_bytes::ToBytes>::from_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u32, 8> as core_simd::to_bytes::ToBytes>::to_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u32, 8> as core_simd::to_bytes::ToBytes>::to_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u32, 8> as core_simd::to_bytes::ToBytes>::to_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u64, 1> as core_simd::to_bytes::ToBytes>::from_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u64, 1> as core_simd::to_bytes::ToBytes>::from_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u64, 1> as core_simd::to_bytes::ToBytes>::from_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u64, 1> as core_simd::to_bytes::ToBytes>::to_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u64, 1> as core_simd::to_bytes::ToBytes>::to_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u64, 1> as core_simd::to_bytes::ToBytes>::to_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u64, 2> as core_simd::to_bytes::ToBytes>::from_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u64, 2> as core_simd::to_bytes::ToBytes>::from_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u64, 2> as core_simd::to_bytes::ToBytes>::from_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u64, 2> as core_simd::to_bytes::ToBytes>::to_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u64, 2> as core_simd::to_bytes::ToBytes>::to_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u64, 2> as core_simd::to_bytes::ToBytes>::to_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u64, 4> as core_simd::to_bytes::ToBytes>::from_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u64, 4> as core_simd::to_bytes::ToBytes>::from_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u64, 4> as core_simd::to_bytes::ToBytes>::from_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u64, 4> as core_simd::to_bytes::ToBytes>::to_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u64, 4> as core_simd::to_bytes::ToBytes>::to_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u64, 4> as core_simd::to_bytes::ToBytes>::to_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u64, 8> as core_simd::to_bytes::ToBytes>::from_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u64, 8> as core_simd::to_bytes::ToBytes>::from_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u64, 8> as core_simd::to_bytes::ToBytes>::from_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u64, 8> as core_simd::to_bytes::ToBytes>::to_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u64, 8> as core_simd::to_bytes::ToBytes>::to_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u64, 8> as core_simd::to_bytes::ToBytes>::to_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u8, 16> as core_simd::to_bytes::ToBytes>::from_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u8, 16> as core_simd::to_bytes::ToBytes>::from_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u8, 16> as core_simd::to_bytes::ToBytes>::from_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u8, 16> as core_simd::to_bytes::ToBytes>::to_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u8, 16> as core_simd::to_bytes::ToBytes>::to_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u8, 16> as core_simd::to_bytes::ToBytes>::to_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u8, 1> as core_simd::to_bytes::ToBytes>::from_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u8, 1> as core_simd::to_bytes::ToBytes>::from_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u8, 1> as core_simd::to_bytes::ToBytes>::from_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u8, 1> as core_simd::to_bytes::ToBytes>::to_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u8, 1> as core_simd::to_bytes::ToBytes>::to_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u8, 1> as core_simd::to_bytes::ToBytes>::to_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u8, 2> as core_simd::to_bytes::ToBytes>::from_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u8, 2> as core_simd::to_bytes::ToBytes>::from_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u8, 2> as core_simd::to_bytes::ToBytes>::from_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u8, 2> as core_simd::to_bytes::ToBytes>::to_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u8, 2> as core_simd::to_bytes::ToBytes>::to_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u8, 2> as core_simd::to_bytes::ToBytes>::to_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u8, 32> as core_simd::to_bytes::ToBytes>::from_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u8, 32> as core_simd::to_bytes::ToBytes>::from_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u8, 32> as core_simd::to_bytes::ToBytes>::from_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u8, 32> as core_simd::to_bytes::ToBytes>::to_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u8, 32> as core_simd::to_bytes::ToBytes>::to_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u8, 32> as core_simd::to_bytes::ToBytes>::to_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u8, 4> as core_simd::to_bytes::ToBytes>::from_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u8, 4> as core_simd::to_bytes::ToBytes>::from_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u8, 4> as core_simd::to_bytes::ToBytes>::from_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u8, 4> as core_simd::to_bytes::ToBytes>::to_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u8, 4> as core_simd::to_bytes::ToBytes>::to_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u8, 4> as core_simd::to_bytes::ToBytes>::to_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u8, 64> as core_simd::to_bytes::ToBytes>::from_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u8, 64> as core_simd::to_bytes::ToBytes>::from_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u8, 64> as core_simd::to_bytes::ToBytes>::from_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u8, 64> as core_simd::to_bytes::ToBytes>::to_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u8, 64> as core_simd::to_bytes::ToBytes>::to_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u8, 64> as core_simd::to_bytes::ToBytes>::to_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u8, 8> as core_simd::to_bytes::ToBytes>::from_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u8, 8> as core_simd::to_bytes::ToBytes>::from_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u8, 8> as core_simd::to_bytes::ToBytes>::from_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u8, 8> as core_simd::to_bytes::ToBytes>::to_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u8, 8> as core_simd::to_bytes::ToBytes>::to_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u8, 8> as core_simd::to_bytes::ToBytes>::to_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<usize, 1> as core_simd::to_bytes::ToBytes>::from_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<usize, 1> as core_simd::to_bytes::ToBytes>::from_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<usize, 1> as core_simd::to_bytes::ToBytes>::from_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<usize, 1> as core_simd::to_bytes::ToBytes>::to_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<usize, 1> as core_simd::to_bytes::ToBytes>::to_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<usize, 1> as core_simd::to_bytes::ToBytes>::to_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<usize, 2> as core_simd::to_bytes::ToBytes>::from_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<usize, 2> as core_simd::to_bytes::ToBytes>::from_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<usize, 2> as core_simd::to_bytes::ToBytes>::from_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<usize, 2> as core_simd::to_bytes::ToBytes>::to_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<usize, 2> as core_simd::to_bytes::ToBytes>::to_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<usize, 2> as core_simd::to_bytes::ToBytes>::to_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<usize, 4> as core_simd::to_bytes::ToBytes>::from_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<usize, 4> as core_simd::to_bytes::ToBytes>::from_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<usize, 4> as core_simd::to_bytes::ToBytes>::from_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<usize, 4> as core_simd::to_bytes::ToBytes>::to_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<usize, 4> as core_simd::to_bytes::ToBytes>::to_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<usize, 4> as core_simd::to_bytes::ToBytes>::to_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<usize, 8> as core_simd::to_bytes::ToBytes>::from_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<usize, 8> as core_simd::to_bytes::ToBytes>::from_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<usize, 8> as core_simd::to_bytes::ToBytes>::from_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<usize, 8> as core_simd::to_bytes::ToBytes>::to_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<usize, 8> as core_simd::to_bytes::ToBytes>::to_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<usize, 8> as core_simd::to_bytes::ToBytes>::to_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/vendor.rs",
    "func": "core_simd::vendor::x86::<impl convert::From<core_simd::vector::Simd<f32, 16>> for core_arch::x86::__m512>::from"
  },
  {
    "file": "portable-simd/crates/core_simd/src/vendor.rs",
    "func": "core_simd::vendor::x86::<impl convert::From<core_simd::vector::Simd<f32, 4>> for core_arch::x86::__m128>::from"
  },
  {
    "file": "portable-simd/crates/core_simd/src/vendor.rs",
    "func": "core_simd::vendor::x86::<impl convert::From<core_simd::vector::Simd<f32, 8>> for core_arch::x86::__m256>::from"
  },
  {
    "file": "portable-simd/crates/core_simd/src/vendor.rs",
    "func": "core_simd::vendor::x86::<impl convert::From<core_simd::vector::Simd<f64, 2>> for core_arch::x86::__m128d>::from"
  },
  {
    "file": "portable-simd/crates/core_simd/src/vendor.rs",
    "func": "core_simd::vendor::x86::<impl convert::From<core_simd::vector::Simd<f64, 4>> for core_arch::x86::__m256d>::from"
  },
  {
    "file": "portable-simd/crates/core_simd/src/vendor.rs",
    "func": "core_simd::vendor::x86::<impl convert::From<core_simd::vector::Simd<f64, 8>> for core_arch::x86::__m512d>::from"
  },
  {
    "file": "portable-simd/crates/core_simd/src/vendor.rs",
    "func": "core_simd::vendor::x86::<impl convert::From<core_simd::vector::Simd<i16, 16>> for core_arch::x86::__m256i>::from"
  },
  {
    "file": "portable-simd/crates/core_simd/src/vendor.rs",
    "func": "core_simd::vendor::x86::<impl convert::From<core_simd::vector::Simd<i16, 32>> for core_arch::x86::__m512i>::from"
  },
  {
    "file": "portable-simd/crates/core_simd/src/vendor.rs",
    "func": "core_simd::vendor::x86::<impl convert::From<core_simd::vector::Simd<i16, 8>> for core_arch::x86::__m128i>::from"
  },
  {
    "file": "portable-simd/crates/core_simd/src/vendor.rs",
    "func": "core_simd::vendor::x86::<impl convert::From<core_simd::vector::Simd<i32, 16>> for core_arch::x86::__m512i>::from"
  },
  {
    "file": "portable-simd/crates/core_simd/src/vendor.rs",
    "func": "core_simd::vendor::x86::<impl convert::From<core_simd::vector::Simd<i32, 4>> for core_arch::x86::__m128i>::from"
  },
  {
    "file": "portable-simd/crates/core_simd/src/vendor.rs",
    "func": "core_simd::vendor::x86::<impl convert::From<core_simd::vector::Simd<i32, 8>> for core_arch::x86::__m256i>::from"
  },
  {
    "file": "portable-simd/crates/core_simd/src/vendor.rs",
    "func": "core_simd::vendor::x86::<impl convert::From<core_simd::vector::Simd<i64, 2>> for core_arch::x86::__m128i>::from"
  },
  {
    "file": "portable-simd/crates/core_simd/src/vendor.rs",
    "func": "core_simd::vendor::x86::<impl convert::From<core_simd::vector::Simd<i64, 4>> for core_arch::x86::__m256i>::from"
  },
  {
    "file": "portable-simd/crates/core_simd/src/vendor.rs",
    "func": "core_simd::vendor::x86::<impl convert::From<core_simd::vector::Simd<i64, 8>> for core_arch::x86::__m512i>::from"
  },
  {
    "file": "portable-simd/crates/core_simd/src/vendor.rs",
    "func": "core_simd::vendor::x86::<impl convert::From<core_simd::vector::Simd<i8, 16>> for core_arch::x86::__m128i>::from"
  },
  {
    "file": "portable-simd/crates/core_simd/src/vendor.rs",
    "func": "core_simd::vendor::x86::<impl convert::From<core_simd::vector::Simd<i8, 32>> for core_arch::x86::__m256i>::from"
  },
  {
    "file": "portable-simd/crates/core_simd/src/vendor.rs",
    "func": "core_simd::vendor::x86::<impl convert::From<core_simd::vector::Simd<i8, 64>> for core_arch::x86::__m512i>::from"
  },
  {
    "file": "portable-simd/crates/core_simd/src/vendor.rs",
    "func": "core_simd::vendor::x86::<impl convert::From<core_simd::vector::Simd<u16, 16>> for core_arch::x86::__m256i>::from"
  },
  {
    "file": "portable-simd/crates/core_simd/src/vendor.rs",
    "func": "core_simd::vendor::x86::<impl convert::From<core_simd::vector::Simd<u16, 32>> for core_arch::x86::__m512i>::from"
  },
  {
    "file": "portable-simd/crates/core_simd/src/vendor.rs",
    "func": "core_simd::vendor::x86::<impl convert::From<core_simd::vector::Simd<u16, 8>> for core_arch::x86::__m128i>::from"
  },
  {
    "file": "portable-simd/crates/core_simd/src/vendor.rs",
    "func": "core_simd::vendor::x86::<impl convert::From<core_simd::vector::Simd<u32, 16>> for core_arch::x86::__m512i>::from"
  },
  {
    "file": "portable-simd/crates/core_simd/src/vendor.rs",
    "func": "core_simd::vendor::x86::<impl convert::From<core_simd::vector::Simd<u32, 4>> for core_arch::x86::__m128i>::from"
  },
  {
    "file": "portable-simd/crates/core_simd/src/vendor.rs",
    "func": "core_simd::vendor::x86::<impl convert::From<core_simd::vector::Simd<u32, 8>> for core_arch::x86::__m256i>::from"
  },
  {
    "file": "portable-simd/crates/core_simd/src/vendor.rs",
    "func": "core_simd::vendor::x86::<impl convert::From<core_simd::vector::Simd<u64, 2>> for core_arch::x86::__m128i>::from"
  },
  {
    "file": "portable-simd/crates/core_simd/src/vendor.rs",
    "func": "core_simd::vendor::x86::<impl convert::From<core_simd::vector::Simd<u64, 4>> for core_arch::x86::__m256i>::from"
  },
  {
    "file": "portable-simd/crates/core_simd/src/vendor.rs",
    "func": "core_simd::vendor::x86::<impl convert::From<core_simd::vector::Simd<u64, 8>> for core_arch::x86::__m512i>::from"
  },
  {
    "file": "portable-simd/crates/core_simd/src/vendor.rs",
    "func": "core_simd::vendor::x86::<impl convert::From<core_simd::vector::Simd<u8, 16>> for core_arch::x86::__m128i>::from"
  },
  {
    "file": "portable-simd/crates/core_simd/src/vendor.rs",
    "func": "core_simd::vendor::x86::<impl convert::From<core_simd::vector::Simd<u8, 32>> for core_arch::x86::__m256i>::from"
  },
  {
    "file": "portable-simd/crates/core_simd/src/vendor.rs",
    "func": "core_simd::vendor::x86::<impl convert::From<core_simd::vector::Simd<u8, 64>> for core_arch::x86::__m512i>::from"
  },
  {
    "file": "portable-simd/crates/core_simd/src/vendor.rs",
    "func": "core_simd::vendor::x86::p64::<impl convert::From<core_simd::vector::Simd<isize, 2>> for core_arch::x86::__m128i>::from"
  },
  {
    "file": "portable-simd/crates/core_simd/src/vendor.rs",
    "func": "core_simd::vendor::x86::p64::<impl convert::From<core_simd::vector::Simd<isize, 4>> for core_arch::x86::__m256i>::from"
  },
  {
    "file": "portable-simd/crates/core_simd/src/vendor.rs",
    "func": "core_simd::vendor::x86::p64::<impl convert::From<core_simd::vector::Simd<isize, 8>> for core_arch::x86::__m512i>::from"
  },
  {
    "file": "portable-simd/crates/core_simd/src/vendor.rs",
    "func": "core_simd::vendor::x86::p64::<impl convert::From<core_simd::vector::Simd<usize, 2>> for core_arch::x86::__m128i>::from"
  },
  {
    "file": "portable-simd/crates/core_simd/src/vendor.rs",
    "func": "core_simd::vendor::x86::p64::<impl convert::From<core_simd::vector::Simd<usize, 4>> for core_arch::x86::__m256i>::from"
  },
  {
    "file": "portable-simd/crates/core_simd/src/vendor.rs",
    "func": "core_simd::vendor::x86::p64::<impl convert::From<core_simd::vector::Simd<usize, 8>> for core_arch::x86::__m512i>::from"
  },
  {
    "file": "proc_macro/src/bridge/arena.rs",
    "func": "bridge::arena::Arena::new"
  },
  {
    "file": "proc_macro/src/bridge/buffer.rs",
    "func": "<bridge::buffer::Buffer as std::default::Default>::default"
  },
  {
    "file": "proc_macro/src/bridge/buffer.rs",
    "func": "bridge::buffer::Buffer::new"
  },
  {
    "file": "proc_macro/src/bridge/client.rs",
    "func": "bridge::client::Span::call_site"
  },
  {
    "file": "proc_macro/src/bridge/client.rs",
    "func": "bridge::client::Span::def_site"
  },
  {
    "file": "proc_macro/src/bridge/client.rs",
    "func": "bridge::client::Span::mixed_site"
  },
  {
    "file": "proc_macro/src/bridge/client.rs",
    "func": "bridge::client::Span::recover_proc_macro_span"
  },
  {
    "file": "proc_macro/src/bridge/client.rs",
    "func": "bridge::client::is_available"
  },
  {
    "file": "proc_macro/src/bridge/client.rs",
    "func": "bridge::client::maybe_install_panic_hook"
  },
  {
    "file": "proc_macro/src/bridge/fxhash.rs",
    "func": "<bridge::fxhash::FxHasher as std::default::Default>::default"
  },
  {
    "file": "proc_macro/src/bridge/mod.rs",
    "func": "<() as bridge::Mark>::mark"
  },
  {
    "file": "proc_macro/src/bridge/mod.rs",
    "func": "<() as bridge::Unmark>::unmark"
  },
  {
    "file": "proc_macro/src/bridge/mod.rs",
    "func": "<bool as bridge::Mark>::mark"
  },
  {
    "file": "proc_macro/src/bridge/mod.rs",
    "func": "<bool as bridge::Unmark>::unmark"
  },
  {
    "file": "proc_macro/src/bridge/mod.rs",
    "func": "<char as bridge::Mark>::mark"
  },
  {
    "file": "proc_macro/src/bridge/mod.rs",
    "func": "<char as bridge::Unmark>::unmark"
  },
  {
    "file": "proc_macro/src/bridge/mod.rs",
    "func": "<u8 as bridge::Mark>::mark"
  },
  {
    "file": "proc_macro/src/bridge/mod.rs",
    "func": "<u8 as bridge::Unmark>::unmark"
  },
  {
    "file": "proc_macro/src/bridge/mod.rs",
    "func": "<usize as bridge::Mark>::mark"
  },
  {
    "file": "proc_macro/src/bridge/mod.rs",
    "func": "<usize as bridge::Unmark>::unmark"
  },
  {
    "file": "proc_macro/src/bridge/mod.rs",
    "func": "bridge::LitKind::ByteStrRaw"
  },
  {
    "file": "proc_macro/src/bridge/mod.rs",
    "func": "bridge::LitKind::CStrRaw"
  },
  {
    "file": "proc_macro/src/bridge/mod.rs",
    "func": "bridge::LitKind::StrRaw"
  },
  {
    "file": "proc_macro/src/bridge/server.rs",
    "func": "bridge::server::RunningSameThreadGuard"
  },
  {
    "file": "proc_macro/src/bridge/server.rs",
    "func": "bridge::server::RunningSameThreadGuard::new"
  },
  {
    "file": "proc_macro/src/bridge/symbol.rs",
    "func": "bridge::symbol::Symbol"
  },
  {
    "file": "proc_macro/src/bridge/symbol.rs",
    "func": "bridge::symbol::Symbol::invalidate_all"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "<TokenStream as std::default::Default>::default"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "ConcatStreamsHelper::new"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "ConcatTreesHelper::new"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "Literal::byte_character"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "Literal::character"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "Literal::f32_suffixed"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "Literal::f32_unsuffixed"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "Literal::f64_suffixed"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "Literal::f64_unsuffixed"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "Literal::i128_suffixed"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "Literal::i128_unsuffixed"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "Literal::i16_suffixed"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "Literal::i16_unsuffixed"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "Literal::i32_suffixed"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "Literal::i32_unsuffixed"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "Literal::i64_suffixed"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "Literal::i64_unsuffixed"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "Literal::i8_suffixed"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "Literal::i8_unsuffixed"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "Literal::isize_suffixed"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "Literal::isize_unsuffixed"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "Literal::u128_suffixed"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "Literal::u128_unsuffixed"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "Literal::u16_suffixed"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "Literal::u16_unsuffixed"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "Literal::u32_suffixed"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "Literal::u32_unsuffixed"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "Literal::u64_suffixed"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "Literal::u64_unsuffixed"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "Literal::u8_suffixed"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "Literal::u8_unsuffixed"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "Literal::usize_suffixed"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "Literal::usize_unsuffixed"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "Literal::with_stringify_parts::get_hashes_str"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "Span::call_site"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "Span::def_site"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "Span::mixed_site"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "Span::recover_proc_macro_span"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "TokenStream::new"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "is_available"
  },
  {
    "file": "src/lib.rs",
    "func": "dummy"
  },
  {
    "file": "std/src/alloc.rs",
    "func": "<alloc::System as core::default::Default>::default"
  },
  {
    "file": "std/src/alloc.rs",
    "func": "alloc::_::__rg_oom"
  },
  {
    "file": "std/src/alloc.rs",
    "func": "alloc::__default_lib_allocator::__rdl_alloc"
  },
  {
    "file": "std/src/alloc.rs",
    "func": "alloc::__default_lib_allocator::__rdl_alloc_zeroed"
  },
  {
    "file": "std/src/alloc.rs",
    "func": "alloc::default_alloc_error_hook"
  },
  {
    "file": "std/src/alloc.rs",
    "func": "alloc::rust_oom"
  },
  {
    "file": "std/src/alloc.rs",
    "func": "alloc::take_alloc_error_hook"
  },
  {
    "file": "std/src/backtrace.rs",
    "func": "backtrace::Backtrace::capture"
  },
  {
    "file": "std/src/backtrace.rs",
    "func": "backtrace::Backtrace::create"
  },
  {
    "file": "std/src/backtrace.rs",
    "func": "backtrace::Backtrace::disabled"
  },
  {
    "file": "std/src/backtrace.rs",
    "func": "backtrace::Backtrace::enabled"
  },
  {
    "file": "std/src/backtrace.rs",
    "func": "backtrace::Backtrace::force_capture"
  },
  {
    "file": "std/src/backtrace.rs",
    "func": "backtrace::_assert_send_sync"
  },
  {
    "file": "std/src/collections/hash/map.rs",
    "func": "collections::hash::map::assert_covariance"
  },
  {
    "file": "std/src/collections/hash/set.rs",
    "func": "collections::hash::set::assert_covariance"
  },
  {
    "file": "std/src/env.rs",
    "func": "env::args"
  },
  {
    "file": "std/src/env.rs",
    "func": "env::args_os"
  },
  {
    "file": "std/src/env.rs",
    "func": "env::current_dir"
  },
  {
    "file": "std/src/env.rs",
    "func": "env::current_exe"
  },
  {
    "file": "std/src/env.rs",
    "func": "env::home_dir"
  },
  {
    "file": "std/src/env.rs",
    "func": "env::temp_dir"
  },
  {
    "file": "std/src/env.rs",
    "func": "env::vars"
  },
  {
    "file": "std/src/env.rs",
    "func": "env::vars_os"
  },
  {
    "file": "std/src/ffi/os_str.rs",
    "func": "<&ffi::os_str::OsStr as core::default::Default>::default"
  },
  {
    "file": "std/src/ffi/os_str.rs",
    "func": "<ffi::os_str::OsString as core::default::Default>::default"
  },
  {
    "file": "std/src/ffi/os_str.rs",
    "func": "ffi::os_str::<impl core::default::Default for alloc_crate::boxed::Box<ffi::os_str::OsStr>>::default"
  },
  {
    "file": "std/src/ffi/os_str.rs",
    "func": "ffi::os_str::OsString::new"
  },
  {
    "file": "std/src/ffi/os_str.rs",
    "func": "ffi::os_str::OsString::with_capacity"
  },
  {
    "file": "std/src/fs.rs",
    "func": "<fs::FileTimes as core::default::Default>::default"
  },
  {
    "file": "std/src/fs.rs",
    "func": "fs::DirBuilder::new"
  },
  {
    "file": "std/src/fs.rs",
    "func": "fs::File::options"
  },
  {
    "file": "std/src/fs.rs",
    "func": "fs::FileTimes::new"
  },
  {
    "file": "std/src/fs.rs",
    "func": "fs::OpenOptions::new"
  },
  {
    "file": "std/src/hash/random.rs",
    "func": "<hash::random::DefaultHasher as core::default::Default>::default"
  },
  {
    "file": "std/src/hash/random.rs",
    "func": "<hash::random::RandomState as core::default::Default>::default"
  },
  {
    "file": "std/src/hash/random.rs",
    "func": "hash::random::DefaultHasher::new"
  },
  {
    "file": "std/src/hash/random.rs",
    "func": "hash::random::RandomState::new"
  },
  {
    "file": "std/src/io/buffered/bufreader/buffer.rs",
    "func": "io::buffered::bufreader::buffer::Buffer::try_with_capacity"
  },
  {
    "file": "std/src/io/buffered/bufreader/buffer.rs",
    "func": "io::buffered::bufreader::buffer::Buffer::with_capacity"
  },
  {
    "file": "std/src/io/error.rs",
    "func": "io::error::Error::from_raw_os_error"
  },
  {
    "file": "std/src/io/error.rs",
    "func": "io::error::Error::last_os_error"
  },
  {
    "file": "std/src/io/error.rs",
    "func": "io::error::_assert_error_is_sync_send"
  },
  {
    "file": "std/src/io/error/repr_bitpacked.rs",
    "func": "io::error::repr_bitpacked::Repr"
  },
  {
    "file": "std/src/io/error/repr_bitpacked.rs",
    "func": "io::error::repr_bitpacked::Repr::new_os"
  },
  {
    "file": "std/src/io/error/repr_bitpacked.rs",
    "func": "io::error::repr_bitpacked::kind_from_prim"
  },
  {
    "file": "std/src/io/mod.rs",
    "func": "io::SeekFrom::Current"
  },
  {
    "file": "std/src/io/mod.rs",
    "func": "io::SeekFrom::End"
  },
  {
    "file": "std/src/io/mod.rs",
    "func": "io::SeekFrom::Start"
  },
  {
    "file": "std/src/io/pipe.rs",
    "func": "io::pipe::pipe"
  },
  {
    "file": "std/src/io/stdio.rs",
    "func": "io::stdio::cleanup"
  },
  {
    "file": "std/src/io/stdio.rs",
    "func": "io::stdio::stderr"
  },
  {
    "file": "std/src/io/stdio.rs",
    "func": "io::stdio::stderr_raw"
  },
  {
    "file": "std/src/io/stdio.rs",
    "func": "io::stdio::stdin"
  },
  {
    "file": "std/src/io/stdio.rs",
    "func": "io::stdio::stdin_raw"
  },
  {
    "file": "std/src/io/stdio.rs",
    "func": "io::stdio::stdout"
  },
  {
    "file": "std/src/io/stdio.rs",
    "func": "io::stdio::stdout_raw"
  },
  {
    "file": "std/src/io/util.rs",
    "func": "<io::util::Empty as core::default::Default>::default"
  },
  {
    "file": "std/src/io/util.rs",
    "func": "<io::util::Sink as core::default::Default>::default"
  },
  {
    "file": "std/src/io/util.rs",
    "func": "io::util::empty"
  },
  {
    "file": "std/src/io/util.rs",
    "func": "io::util::repeat"
  },
  {
    "file": "std/src/io/util.rs",
    "func": "io::util::sink"
  },
  {
    "file": "std/src/num/f128.rs",
    "func": "f128::<impl f128>::acos"
  },
  {
    "file": "std/src/num/f128.rs",
    "func": "f128::<impl f128>::acosh"
  },
  {
    "file": "std/src/num/f128.rs",
    "func": "f128::<impl f128>::asin"
  },
  {
    "file": "std/src/num/f128.rs",
    "func": "f128::<impl f128>::asinh"
  },
  {
    "file": "std/src/num/f128.rs",
    "func": "f128::<impl f128>::atan"
  },
  {
    "file": "std/src/num/f128.rs",
    "func": "f128::<impl f128>::atan2"
  },
  {
    "file": "std/src/num/f128.rs",
    "func": "f128::<impl f128>::atanh"
  },
  {
    "file": "std/src/num/f128.rs",
    "func": "f128::<impl f128>::cbrt"
  },
  {
    "file": "std/src/num/f128.rs",
    "func": "f128::<impl f128>::cos"
  },
  {
    "file": "std/src/num/f128.rs",
    "func": "f128::<impl f128>::cosh"
  },
  {
    "file": "std/src/num/f128.rs",
    "func": "f128::<impl f128>::erf"
  },
  {
    "file": "std/src/num/f128.rs",
    "func": "f128::<impl f128>::erfc"
  },
  {
    "file": "std/src/num/f128.rs",
    "func": "f128::<impl f128>::exp"
  },
  {
    "file": "std/src/num/f128.rs",
    "func": "f128::<impl f128>::exp2"
  },
  {
    "file": "std/src/num/f128.rs",
    "func": "f128::<impl f128>::exp_m1"
  },
  {
    "file": "std/src/num/f128.rs",
    "func": "f128::<impl f128>::gamma"
  },
  {
    "file": "std/src/num/f128.rs",
    "func": "f128::<impl f128>::hypot"
  },
  {
    "file": "std/src/num/f128.rs",
    "func": "f128::<impl f128>::ln"
  },
  {
    "file": "std/src/num/f128.rs",
    "func": "f128::<impl f128>::ln_1p"
  },
  {
    "file": "std/src/num/f128.rs",
    "func": "f128::<impl f128>::ln_gamma"
  },
  {
    "file": "std/src/num/f128.rs",
    "func": "f128::<impl f128>::log"
  },
  {
    "file": "std/src/num/f128.rs",
    "func": "f128::<impl f128>::log10"
  },
  {
    "file": "std/src/num/f128.rs",
    "func": "f128::<impl f128>::log2"
  },
  {
    "file": "std/src/num/f128.rs",
    "func": "f128::<impl f128>::powf"
  },
  {
    "file": "std/src/num/f128.rs",
    "func": "f128::<impl f128>::sin"
  },
  {
    "file": "std/src/num/f128.rs",
    "func": "f128::<impl f128>::sin_cos"
  },
  {
    "file": "std/src/num/f128.rs",
    "func": "f128::<impl f128>::sinh"
  },
  {
    "file": "std/src/num/f128.rs",
    "func": "f128::<impl f128>::tan"
  },
  {
    "file": "std/src/num/f128.rs",
    "func": "f128::<impl f128>::tanh"
  },
  {
    "file": "std/src/num/f16.rs",
    "func": "f16::<impl f16>::acos"
  },
  {
    "file": "std/src/num/f16.rs",
    "func": "f16::<impl f16>::acosh"
  },
  {
    "file": "std/src/num/f16.rs",
    "func": "f16::<impl f16>::asin"
  },
  {
    "file": "std/src/num/f16.rs",
    "func": "f16::<impl f16>::asinh"
  },
  {
    "file": "std/src/num/f16.rs",
    "func": "f16::<impl f16>::atan"
  },
  {
    "file": "std/src/num/f16.rs",
    "func": "f16::<impl f16>::atan2"
  },
  {
    "file": "std/src/num/f16.rs",
    "func": "f16::<impl f16>::atanh"
  },
  {
    "file": "std/src/num/f16.rs",
    "func": "f16::<impl f16>::cos"
  },
  {
    "file": "std/src/num/f16.rs",
    "func": "f16::<impl f16>::cosh"
  },
  {
    "file": "std/src/num/f16.rs",
    "func": "f16::<impl f16>::erf"
  },
  {
    "file": "std/src/num/f16.rs",
    "func": "f16::<impl f16>::erfc"
  },
  {
    "file": "std/src/num/f16.rs",
    "func": "f16::<impl f16>::exp"
  },
  {
    "file": "std/src/num/f16.rs",
    "func": "f16::<impl f16>::exp2"
  },
  {
    "file": "std/src/num/f16.rs",
    "func": "f16::<impl f16>::exp_m1"
  },
  {
    "file": "std/src/num/f16.rs",
    "func": "f16::<impl f16>::gamma"
  },
  {
    "file": "std/src/num/f16.rs",
    "func": "f16::<impl f16>::hypot"
  },
  {
    "file": "std/src/num/f16.rs",
    "func": "f16::<impl f16>::ln"
  },
  {
    "file": "std/src/num/f16.rs",
    "func": "f16::<impl f16>::ln_1p"
  },
  {
    "file": "std/src/num/f16.rs",
    "func": "f16::<impl f16>::ln_gamma"
  },
  {
    "file": "std/src/num/f16.rs",
    "func": "f16::<impl f16>::log"
  },
  {
    "file": "std/src/num/f16.rs",
    "func": "f16::<impl f16>::log10"
  },
  {
    "file": "std/src/num/f16.rs",
    "func": "f16::<impl f16>::log2"
  },
  {
    "file": "std/src/num/f16.rs",
    "func": "f16::<impl f16>::powf"
  },
  {
    "file": "std/src/num/f16.rs",
    "func": "f16::<impl f16>::sin"
  },
  {
    "file": "std/src/num/f16.rs",
    "func": "f16::<impl f16>::sin_cos"
  },
  {
    "file": "std/src/num/f16.rs",
    "func": "f16::<impl f16>::sinh"
  },
  {
    "file": "std/src/num/f16.rs",
    "func": "f16::<impl f16>::tan"
  },
  {
    "file": "std/src/num/f16.rs",
    "func": "f16::<impl f16>::tanh"
  },
  {
    "file": "std/src/num/f32.rs",
    "func": "f32::<impl f32>::abs_sub"
  },
  {
    "file": "std/src/num/f32.rs",
    "func": "f32::<impl f32>::acos"
  },
  {
    "file": "std/src/num/f32.rs",
    "func": "f32::<impl f32>::acosh"
  },
  {
    "file": "std/src/num/f32.rs",
    "func": "f32::<impl f32>::asin"
  },
  {
    "file": "std/src/num/f32.rs",
    "func": "f32::<impl f32>::asinh"
  },
  {
    "file": "std/src/num/f32.rs",
    "func": "f32::<impl f32>::atan"
  },
  {
    "file": "std/src/num/f32.rs",
    "func": "f32::<impl f32>::atan2"
  },
  {
    "file": "std/src/num/f32.rs",
    "func": "f32::<impl f32>::atanh"
  },
  {
    "file": "std/src/num/f32.rs",
    "func": "f32::<impl f32>::cbrt"
  },
  {
    "file": "std/src/num/f32.rs",
    "func": "f32::<impl f32>::ceil"
  },
  {
    "file": "std/src/num/f32.rs",
    "func": "f32::<impl f32>::cos"
  },
  {
    "file": "std/src/num/f32.rs",
    "func": "f32::<impl f32>::cosh"
  },
  {
    "file": "std/src/num/f32.rs",
    "func": "f32::<impl f32>::div_euclid"
  },
  {
    "file": "std/src/num/f32.rs",
    "func": "f32::<impl f32>::erf"
  },
  {
    "file": "std/src/num/f32.rs",
    "func": "f32::<impl f32>::erfc"
  },
  {
    "file": "std/src/num/f32.rs",
    "func": "f32::<impl f32>::exp"
  },
  {
    "file": "std/src/num/f32.rs",
    "func": "f32::<impl f32>::exp2"
  },
  {
    "file": "std/src/num/f32.rs",
    "func": "f32::<impl f32>::exp_m1"
  },
  {
    "file": "std/src/num/f32.rs",
    "func": "f32::<impl f32>::floor"
  },
  {
    "file": "std/src/num/f32.rs",
    "func": "f32::<impl f32>::fract"
  },
  {
    "file": "std/src/num/f32.rs",
    "func": "f32::<impl f32>::gamma"
  },
  {
    "file": "std/src/num/f32.rs",
    "func": "f32::<impl f32>::hypot"
  },
  {
    "file": "std/src/num/f32.rs",
    "func": "f32::<impl f32>::ln"
  },
  {
    "file": "std/src/num/f32.rs",
    "func": "f32::<impl f32>::ln_1p"
  },
  {
    "file": "std/src/num/f32.rs",
    "func": "f32::<impl f32>::ln_gamma"
  },
  {
    "file": "std/src/num/f32.rs",
    "func": "f32::<impl f32>::log"
  },
  {
    "file": "std/src/num/f32.rs",
    "func": "f32::<impl f32>::log10"
  },
  {
    "file": "std/src/num/f32.rs",
    "func": "f32::<impl f32>::log2"
  },
  {
    "file": "std/src/num/f32.rs",
    "func": "f32::<impl f32>::mul_add"
  },
  {
    "file": "std/src/num/f32.rs",
    "func": "f32::<impl f32>::powf"
  },
  {
    "file": "std/src/num/f32.rs",
    "func": "f32::<impl f32>::powi"
  },
  {
    "file": "std/src/num/f32.rs",
    "func": "f32::<impl f32>::rem_euclid"
  },
  {
    "file": "std/src/num/f32.rs",
    "func": "f32::<impl f32>::round"
  },
  {
    "file": "std/src/num/f32.rs",
    "func": "f32::<impl f32>::round_ties_even"
  },
  {
    "file": "std/src/num/f32.rs",
    "func": "f32::<impl f32>::sin"
  },
  {
    "file": "std/src/num/f32.rs",
    "func": "f32::<impl f32>::sin_cos"
  },
  {
    "file": "std/src/num/f32.rs",
    "func": "f32::<impl f32>::sinh"
  },
  {
    "file": "std/src/num/f32.rs",
    "func": "f32::<impl f32>::sqrt"
  },
  {
    "file": "std/src/num/f32.rs",
    "func": "f32::<impl f32>::tan"
  },
  {
    "file": "std/src/num/f32.rs",
    "func": "f32::<impl f32>::tanh"
  },
  {
    "file": "std/src/num/f32.rs",
    "func": "f32::<impl f32>::trunc"
  },
  {
    "file": "std/src/num/f64.rs",
    "func": "f64::<impl f64>::abs_sub"
  },
  {
    "file": "std/src/num/f64.rs",
    "func": "f64::<impl f64>::acos"
  },
  {
    "file": "std/src/num/f64.rs",
    "func": "f64::<impl f64>::acosh"
  },
  {
    "file": "std/src/num/f64.rs",
    "func": "f64::<impl f64>::asin"
  },
  {
    "file": "std/src/num/f64.rs",
    "func": "f64::<impl f64>::asinh"
  },
  {
    "file": "std/src/num/f64.rs",
    "func": "f64::<impl f64>::atan"
  },
  {
    "file": "std/src/num/f64.rs",
    "func": "f64::<impl f64>::atan2"
  },
  {
    "file": "std/src/num/f64.rs",
    "func": "f64::<impl f64>::atanh"
  },
  {
    "file": "std/src/num/f64.rs",
    "func": "f64::<impl f64>::cbrt"
  },
  {
    "file": "std/src/num/f64.rs",
    "func": "f64::<impl f64>::ceil"
  },
  {
    "file": "std/src/num/f64.rs",
    "func": "f64::<impl f64>::cos"
  },
  {
    "file": "std/src/num/f64.rs",
    "func": "f64::<impl f64>::cosh"
  },
  {
    "file": "std/src/num/f64.rs",
    "func": "f64::<impl f64>::div_euclid"
  },
  {
    "file": "std/src/num/f64.rs",
    "func": "f64::<impl f64>::erf"
  },
  {
    "file": "std/src/num/f64.rs",
    "func": "f64::<impl f64>::erfc"
  },
  {
    "file": "std/src/num/f64.rs",
    "func": "f64::<impl f64>::exp"
  },
  {
    "file": "std/src/num/f64.rs",
    "func": "f64::<impl f64>::exp2"
  },
  {
    "file": "std/src/num/f64.rs",
    "func": "f64::<impl f64>::exp_m1"
  },
  {
    "file": "std/src/num/f64.rs",
    "func": "f64::<impl f64>::floor"
  },
  {
    "file": "std/src/num/f64.rs",
    "func": "f64::<impl f64>::fract"
  },
  {
    "file": "std/src/num/f64.rs",
    "func": "f64::<impl f64>::gamma"
  },
  {
    "file": "std/src/num/f64.rs",
    "func": "f64::<impl f64>::hypot"
  },
  {
    "file": "std/src/num/f64.rs",
    "func": "f64::<impl f64>::ln"
  },
  {
    "file": "std/src/num/f64.rs",
    "func": "f64::<impl f64>::ln_1p"
  },
  {
    "file": "std/src/num/f64.rs",
    "func": "f64::<impl f64>::ln_gamma"
  },
  {
    "file": "std/src/num/f64.rs",
    "func": "f64::<impl f64>::log"
  },
  {
    "file": "std/src/num/f64.rs",
    "func": "f64::<impl f64>::log10"
  },
  {
    "file": "std/src/num/f64.rs",
    "func": "f64::<impl f64>::log2"
  },
  {
    "file": "std/src/num/f64.rs",
    "func": "f64::<impl f64>::mul_add"
  },
  {
    "file": "std/src/num/f64.rs",
    "func": "f64::<impl f64>::powf"
  },
  {
    "file": "std/src/num/f64.rs",
    "func": "f64::<impl f64>::powi"
  },
  {
    "file": "std/src/num/f64.rs",
    "func": "f64::<impl f64>::rem_euclid"
  },
  {
    "file": "std/src/num/f64.rs",
    "func": "f64::<impl f64>::round"
  },
  {
    "file": "std/src/num/f64.rs",
    "func": "f64::<impl f64>::round_ties_even"
  },
  {
    "file": "std/src/num/f64.rs",
    "func": "f64::<impl f64>::sin"
  },
  {
    "file": "std/src/num/f64.rs",
    "func": "f64::<impl f64>::sin_cos"
  },
  {
    "file": "std/src/num/f64.rs",
    "func": "f64::<impl f64>::sinh"
  },
  {
    "file": "std/src/num/f64.rs",
    "func": "f64::<impl f64>::sqrt"
  },
  {
    "file": "std/src/num/f64.rs",
    "func": "f64::<impl f64>::tan"
  },
  {
    "file": "std/src/num/f64.rs",
    "func": "f64::<impl f64>::tanh"
  },
  {
    "file": "std/src/num/f64.rs",
    "func": "f64::<impl f64>::trunc"
  },
  {
    "file": "std/src/os/fd/net.rs",
    "func": "os::fd::net::<impl os::fd::raw::FromRawFd for net::tcp::TcpListener>::from_raw_fd"
  },
  {
    "file": "std/src/os/fd/net.rs",
    "func": "os::fd::net::<impl os::fd::raw::FromRawFd for net::tcp::TcpStream>::from_raw_fd"
  },
  {
    "file": "std/src/os/fd/net.rs",
    "func": "os::fd::net::<impl os::fd::raw::FromRawFd for net::udp::UdpSocket>::from_raw_fd"
  },
  {
    "file": "std/src/os/fd/owned.rs",
    "func": "<os::fd::owned::OwnedFd as os::fd::raw::FromRawFd>::from_raw_fd"
  },
  {
    "file": "std/src/os/fd/owned.rs",
    "func": "os::fd::owned::BorrowedFd::<'_>::borrow_raw"
  },
  {
    "file": "std/src/os/fd/raw.rs",
    "func": "<fs::File as os::fd::raw::FromRawFd>::from_raw_fd"
  },
  {
    "file": "std/src/os/fd/raw.rs",
    "func": "<i32 as os::fd::raw::FromRawFd>::from_raw_fd"
  },
  {
    "file": "std/src/os/fd/raw.rs",
    "func": "<i32 as os::fd::raw::IntoRawFd>::into_raw_fd"
  },
  {
    "file": "std/src/os/fd/raw.rs",
    "func": "<io::pipe::PipeReader as os::fd::raw::FromRawFd>::from_raw_fd"
  },
  {
    "file": "std/src/os/fd/raw.rs",
    "func": "<io::pipe::PipeWriter as os::fd::raw::FromRawFd>::from_raw_fd"
  },
  {
    "file": "std/src/os/linux/process.rs",
    "func": "<os::linux::process::PidFd as os::fd::raw::FromRawFd>::from_raw_fd"
  },
  {
    "file": "std/src/os/unix/fs.rs",
    "func": "<fs::Permissions as os::unix::fs::PermissionsExt>::from_mode"
  },
  {
    "file": "std/src/os/unix/net/ancillary.rs",
    "func": "os::unix::net::ancillary::SocketCred::new"
  },
  {
    "file": "std/src/os/unix/net/datagram.rs",
    "func": "<os::unix::net::datagram::UnixDatagram as os::fd::raw::FromRawFd>::from_raw_fd"
  },
  {
    "file": "std/src/os/unix/net/datagram.rs",
    "func": "os::unix::net::datagram::UnixDatagram::pair"
  },
  {
    "file": "std/src/os/unix/net/datagram.rs",
    "func": "os::unix::net::datagram::UnixDatagram::unbound"
  },
  {
    "file": "std/src/os/unix/net/listener.rs",
    "func": "<os::unix::net::listener::UnixListener as os::fd::raw::FromRawFd>::from_raw_fd"
  },
  {
    "file": "std/src/os/unix/net/stream.rs",
    "func": "<os::unix::net::stream::UnixStream as os::fd::raw::FromRawFd>::from_raw_fd"
  },
  {
    "file": "std/src/os/unix/net/stream.rs",
    "func": "os::unix::net::stream::UnixStream::pair"
  },
  {
    "file": "std/src/os/unix/process.rs",
    "func": "<process::ExitStatus as os::unix::process::ExitStatusExt>::from_raw"
  },
  {
    "file": "std/src/os/unix/process.rs",
    "func": "<process::ExitStatusError as os::unix::process::ExitStatusExt>::from_raw"
  },
  {
    "file": "std/src/os/unix/process.rs",
    "func": "os::unix::process::<impl os::fd::raw::FromRawFd for process::Stdio>::from_raw_fd"
  },
  {
    "file": "std/src/os/unix/process.rs",
    "func": "os::unix::process::parent_id"
  },
  {
    "file": "std/src/panic.rs",
    "func": "panic::BacktraceStyle::from_u8"
  },
  {
    "file": "std/src/panic.rs",
    "func": "panic::BacktraceStyle::full"
  },
  {
    "file": "std/src/panic.rs",
    "func": "panic::always_abort"
  },
  {
    "file": "std/src/panic.rs",
    "func": "panic::get_backtrace_style"
  },
  {
    "file": "std/src/panicking.rs",
    "func": "<panicking::Hook as core::default::Default>::default"
  },
  {
    "file": "std/src/panicking.rs",
    "func": "panicking::__rust_drop_panic"
  },
  {
    "file": "std/src/panicking.rs",
    "func": "panicking::__rust_foreign_exception"
  },
  {
    "file": "std/src/panicking.rs",
    "func": "panicking::panic_count::count_is_zero"
  },
  {
    "file": "std/src/panicking.rs",
    "func": "panicking::panic_count::decrease"
  },
  {
    "file": "std/src/panicking.rs",
    "func": "panicking::panic_count::finished_panic_hook"
  },
  {
    "file": "std/src/panicking.rs",
    "func": "panicking::panic_count::get_count"
  },
  {
    "file": "std/src/panicking.rs",
    "func": "panicking::panic_count::increase"
  },
  {
    "file": "std/src/panicking.rs",
    "func": "panicking::panic_count::is_zero_slow_path"
  },
  {
    "file": "std/src/panicking.rs",
    "func": "panicking::panic_count::set_always_abort"
  },
  {
    "file": "std/src/panicking.rs",
    "func": "panicking::panicking"
  },
  {
    "file": "std/src/panicking.rs",
    "func": "panicking::take_hook"
  },
  {
    "file": "std/src/path.rs",
    "func": "<path::PathBuf as core::default::Default>::default"
  },
  {
    "file": "std/src/path.rs",
    "func": "path::PathBuf::new"
  },
  {
    "file": "std/src/path.rs",
    "func": "path::PathBuf::with_capacity"
  },
  {
    "file": "std/src/path.rs",
    "func": "path::Prefix::<'_>::Disk"
  },
  {
    "file": "std/src/path.rs",
    "func": "path::Prefix::<'_>::VerbatimDisk"
  },
  {
    "file": "std/src/path.rs",
    "func": "path::StripPrefixError"
  },
  {
    "file": "std/src/path.rs",
    "func": "path::is_separator"
  },
  {
    "file": "std/src/process.rs",
    "func": "<() as process::Termination>::report"
  },
  {
    "file": "std/src/process.rs",
    "func": "<process::ExitCode as core::convert::From<u8>>::from"
  },
  {
    "file": "std/src/process.rs",
    "func": "<process::ExitCode as core::default::Default>::default"
  },
  {
    "file": "std/src/process.rs",
    "func": "<process::ExitStatus as core::default::Default>::default"
  },
  {
    "file": "std/src/process.rs",
    "func": "process::Stdio::inherit"
  },
  {
    "file": "std/src/process.rs",
    "func": "process::Stdio::null"
  },
  {
    "file": "std/src/process.rs",
    "func": "process::Stdio::piped"
  },
  {
    "file": "std/src/process.rs",
    "func": "process::abort"
  },
  {
    "file": "std/src/process.rs",
    "func": "process::exit"
  },
  {
    "file": "std/src/process.rs",
    "func": "process::id"
  },
  {
    "file": "std/src/random.rs",
    "func": "<random::DefaultRandomSource as core::default::Default>::default"
  },
  {
    "file": "std/src/rt.rs",
    "func": "rt::__rust_abort"
  },
  {
    "file": "std/src/rt.rs",
    "func": "rt::cleanup"
  },
  {
    "file": "std/src/rt.rs",
    "func": "rt::thread_cleanup"
  },
  {
    "file": "std/src/sync/barrier.rs",
    "func": "sync::barrier::Barrier::new"
  },
  {
    "file": "std/src/sync/barrier.rs",
    "func": "sync::barrier::BarrierWaitResult"
  },
  {
    "file": "std/src/sync/lazy_lock.rs",
    "func": "sync::lazy_lock::panic_poisoned"
  },
  {
    "file": "std/src/sync/mpmc/array.rs",
    "func": "<sync::mpmc::array::ArrayToken as core::default::Default>::default"
  },
  {
    "file": "std/src/sync/mpmc/context.rs",
    "func": "sync::mpmc::context::Context::new"
  },
  {
    "file": "std/src/sync/mpmc/list.rs",
    "func": "<sync::mpmc::list::ListToken as core::default::Default>::default"
  },
  {
    "file": "std/src/sync/mpmc/select.rs",
    "func": "<sync::mpmc::select::Selected as core::convert::From<usize>>::from"
  },
  {
    "file": "std/src/sync/mpmc/select.rs",
    "func": "<sync::mpmc::select::Token as core::default::Default>::default"
  },
  {
    "file": "std/src/sync/mpmc/select.rs",
    "func": "sync::mpmc::select::Operation"
  },
  {
    "file": "std/src/sync/mpmc/utils.rs",
    "func": "sync::mpmc::utils::Backoff::new"
  },
  {
    "file": "std/src/sync/mpmc/waker.rs",
    "func": "sync::mpmc::waker::SyncWaker::new"
  },
  {
    "file": "std/src/sync/mpmc/waker.rs",
    "func": "sync::mpmc::waker::Waker::new"
  },
  {
    "file": "std/src/sync/mpmc/waker.rs",
    "func": "sync::mpmc::waker::current_thread_id"
  },
  {
    "file": "std/src/sync/mpmc/zero.rs",
    "func": "<sync::mpmc::zero::ZeroToken as core::default::Default>::default"
  },
  {
    "file": "std/src/sync/poison.rs",
    "func": "sync::poison::Flag::new"
  },
  {
    "file": "std/src/sync/poison/condvar.rs",
    "func": "<sync::poison::condvar::Condvar as core::default::Default>::default"
  },
  {
    "file": "std/src/sync/poison/condvar.rs",
    "func": "sync::poison::condvar::Condvar::new"
  },
  {
    "file": "std/src/sync/poison/condvar.rs",
    "func": "sync::poison::condvar::WaitTimeoutResult"
  },
  {
    "file": "std/src/sync/poison/once.rs",
    "func": "sync::poison::once::Once::new"
  },
  {
    "file": "std/src/sync/reentrant_lock.rs",
    "func": "sync::reentrant_lock::Tid::new"
  },
  {
    "file": "std/src/sys/anonymous_pipe/unix.rs",
    "func": "sys::anonymous_pipe::unix::pipe"
  },
  {
    "file": "std/src/sys/args/unix.rs",
    "func": "sys::args::unix::args"
  },
  {
    "file": "std/src/sys/args/unix.rs",
    "func": "sys::args::unix::imp::argc_argv"
  },
  {
    "file": "std/src/sys/backtrace.rs",
    "func": "sys::backtrace::lock::<'_>"
  },
  {
    "file": "std/src/sys/backtrace.rs",
    "func": "sys::backtrace::set_image_base"
  },
  {
    "file": "std/src/sys/env/unix.rs",
    "func": "sys::env::unix::env"
  },
  {
    "file": "std/src/sys/env/unix.rs",
    "func": "sys::env::unix::env_read_lock"
  },
  {
    "file": "std/src/sys/env/unix.rs",
    "func": "sys::env::unix::environ"
  },
  {
    "file": "std/src/sys/exit_guard.rs",
    "func": "sys::exit_guard::unique_thread_exit"
  },
  {
    "file": "std/src/sys/fd/unix.rs",
    "func": "<sys::fd::unix::FileDesc as os::fd::raw::FromRawFd>::from_raw_fd"
  },
  {
    "file": "std/src/sys/fd/unix.rs",
    "func": "sys::fd::unix::max_iov"
  },
  {
    "file": "std/src/sys/fs/unix.rs",
    "func": "<sys::fs::unix::File as core::fmt::Debug>::fmt::get_mode"
  },
  {
    "file": "std/src/sys/fs/unix.rs",
    "func": "<sys::fs::unix::File as core::fmt::Debug>::fmt::get_path"
  },
  {
    "file": "std/src/sys/fs/unix.rs",
    "func": "<sys::fs::unix::File as os::fd::raw::FromRawFd>::from_raw_fd"
  },
  {
    "file": "std/src/sys/fs/unix.rs",
    "func": "<sys::fs::unix::FilePermissions as sys_common::FromInner<u32>>::from_inner"
  },
  {
    "file": "std/src/sys/fs/unix.rs",
    "func": "<sys::fs::unix::FileTimes as core::default::Default>::default"
  },
  {
    "file": "std/src/sys/fs/unix.rs",
    "func": "sys::fs::unix::DirBuilder::new"
  },
  {
    "file": "std/src/sys/fs/unix.rs",
    "func": "sys::fs::unix::File::datasync::os_datasync"
  },
  {
    "file": "std/src/sys/fs/unix.rs",
    "func": "sys::fs::unix::File::fsync::os_fsync"
  },
  {
    "file": "std/src/sys/fs/unix.rs",
    "func": "sys::fs::unix::Mode"
  },
  {
    "file": "std/src/sys/fs/unix.rs",
    "func": "sys::fs::unix::OpenOptions::new"
  },
  {
    "file": "std/src/sys/fs/unix.rs",
    "func": "sys::fs::unix::debug_assert_fd_is_open"
  },
  {
    "file": "std/src/sys/fs/unix.rs",
    "func": "sys::fs::unix::fchown"
  },
  {
    "file": "std/src/sys/net/connection/socket.rs",
    "func": "sys::net::connection::socket::to_ipv6mr_interface"
  },
  {
    "file": "std/src/sys/net/connection/socket/unix.rs",
    "func": "<sys::net::connection::socket::unix::Socket as os::fd::raw::FromRawFd>::from_raw_fd"
  },
  {
    "file": "std/src/sys/net/connection/socket/unix.rs",
    "func": "sys::net::connection::socket::unix::Socket::new_pair"
  },
  {
    "file": "std/src/sys/net/connection/socket/unix.rs",
    "func": "sys::net::connection::socket::unix::Socket::new_raw"
  },
  {
    "file": "std/src/sys/net/connection/socket/unix.rs",
    "func": "sys::net::connection::socket::unix::cvt_gai"
  },
  {
    "file": "std/src/sys/net/connection/socket/unix.rs",
    "func": "sys::net::connection::socket::unix::init"
  },
  {
    "file": "std/src/sys/net/connection/socket/unix.rs",
    "func": "sys::net::connection::socket::unix::on_resolver_failure"
  },
  {
    "file": "std/src/sys/os_str/bytes.rs",
    "func": "sys::os_str::bytes::Buf::with_capacity"
  },
  {
    "file": "std/src/sys/os_str/bytes.rs",
    "func": "sys::os_str::bytes::Slice::empty_box"
  },
  {
    "file": "std/src/sys/pal/unix/kernel_copy.rs",
    "func": "sys::pal::unix::kernel_copy::CopyResult::Ended"
  },
  {
    "file": "std/src/sys/pal/unix/kernel_copy.rs",
    "func": "sys::pal::unix::kernel_copy::CopyResult::Fallback"
  },
  {
    "file": "std/src/sys/pal/unix/kernel_copy.rs",
    "func": "sys::pal::unix::kernel_copy::copy_regular_files"
  },
  {
    "file": "std/src/sys/pal/unix/kernel_copy.rs",
    "func": "sys::pal::unix::kernel_copy::copy_regular_files::probe_copy_file_range_support"
  },
  {
    "file": "std/src/sys/pal/unix/linux/pidfd.rs",
    "func": "<sys::pal::unix::linux::pidfd::PidFd as os::fd::raw::FromRawFd>::from_raw_fd"
  },
  {
    "file": "std/src/sys/pal/unix/mod.rs",
    "func": "sys::pal::unix::abort_internal"
  },
  {
    "file": "std/src/sys/pal/unix/mod.rs",
    "func": "sys::pal::unix::cleanup"
  },
  {
    "file": "std/src/sys/pal/unix/mod.rs",
    "func": "sys::pal::unix::cvt_nz"
  },
  {
    "file": "std/src/sys/pal/unix/mod.rs",
    "func": "sys::pal::unix::decode_error_kind"
  },
  {
    "file": "std/src/sys/pal/unix/mod.rs",
    "func": "sys::pal::unix::init::reset_sigpipe"
  },
  {
    "file": "std/src/sys/pal/unix/mod.rs",
    "func": "sys::pal::unix::init::sanitize_standard_fds"
  },
  {
    "file": "std/src/sys/pal/unix/mod.rs",
    "func": "sys::pal::unix::is_interrupted"
  },
  {
    "file": "std/src/sys/pal/unix/mod.rs",
    "func": "sys::pal::unix::on_broken_pipe_flag_used"
  },
  {
    "file": "std/src/sys/pal/unix/os.rs",
    "func": "sys::pal::unix::os::current_exe"
  },
  {
    "file": "std/src/sys/pal/unix/os.rs",
    "func": "sys::pal::unix::os::errno"
  },
  {
    "file": "std/src/sys/pal/unix/os.rs",
    "func": "sys::pal::unix::os::error_string"
  },
  {
    "file": "std/src/sys/pal/unix/os.rs",
    "func": "sys::pal::unix::os::exit"
  },
  {
    "file": "std/src/sys/pal/unix/os.rs",
    "func": "sys::pal::unix::os::getcwd"
  },
  {
    "file": "std/src/sys/pal/unix/os.rs",
    "func": "sys::pal::unix::os::getpid"
  },
  {
    "file": "std/src/sys/pal/unix/os.rs",
    "func": "sys::pal::unix::os::getppid"
  },
  {
    "file": "std/src/sys/pal/unix/os.rs",
    "func": "sys::pal::unix::os::glibc_version"
  },
  {
    "file": "std/src/sys/pal/unix/os.rs",
    "func": "sys::pal::unix::os::home_dir"
  },
  {
    "file": "std/src/sys/pal/unix/os.rs",
    "func": "sys::pal::unix::os::home_dir::fallback"
  },
  {
    "file": "std/src/sys/pal/unix/os.rs",
    "func": "sys::pal::unix::os::page_size"
  },
  {
    "file": "std/src/sys/pal/unix/os.rs",
    "func": "sys::pal::unix::os::set_errno"
  },
  {
    "file": "std/src/sys/pal/unix/os.rs",
    "func": "sys::pal::unix::os::temp_dir"
  },
  {
    "file": "std/src/sys/pal/unix/pipe.rs",
    "func": "<sys::pal::unix::pipe::AnonPipe as os::fd::raw::FromRawFd>::from_raw_fd"
  },
  {
    "file": "std/src/sys/pal/unix/pipe.rs",
    "func": "sys::pal::unix::pipe::anon_pipe"
  },
  {
    "file": "std/src/sys/pal/unix/stack_overflow.rs",
    "func": "sys::pal::unix::stack_overflow::Handler::new"
  },
  {
    "file": "std/src/sys/pal/unix/stack_overflow.rs",
    "func": "sys::pal::unix::stack_overflow::Handler::null"
  },
  {
    "file": "std/src/sys/pal/unix/stack_overflow.rs",
    "func": "sys::pal::unix::stack_overflow::imp::cleanup"
  },
  {
    "file": "std/src/sys/pal/unix/stack_overflow.rs",
    "func": "sys::pal::unix::stack_overflow::imp::current_guard"
  },
  {
    "file": "std/src/sys/pal/unix/stack_overflow.rs",
    "func": "sys::pal::unix::stack_overflow::imp::get_stack"
  },
  {
    "file": "std/src/sys/pal/unix/stack_overflow.rs",
    "func": "sys::pal::unix::stack_overflow::imp::get_stack_start"
  },
  {
    "file": "std/src/sys/pal/unix/stack_overflow.rs",
    "func": "sys::pal::unix::stack_overflow::imp::init"
  },
  {
    "file": "std/src/sys/pal/unix/stack_overflow.rs",
    "func": "sys::pal::unix::stack_overflow::imp::install_main_guard"
  },
  {
    "file": "std/src/sys/pal/unix/stack_overflow.rs",
    "func": "sys::pal::unix::stack_overflow::imp::install_main_guard_bsds"
  },
  {
    "file": "std/src/sys/pal/unix/stack_overflow.rs",
    "func": "sys::pal::unix::stack_overflow::imp::install_main_guard_default"
  },
  {
    "file": "std/src/sys/pal/unix/stack_overflow.rs",
    "func": "sys::pal::unix::stack_overflow::imp::install_main_guard_freebsd"
  },
  {
    "file": "std/src/sys/pal/unix/stack_overflow.rs",
    "func": "sys::pal::unix::stack_overflow::imp::install_main_guard_linux"
  },
  {
    "file": "std/src/sys/pal/unix/stack_overflow.rs",
    "func": "sys::pal::unix::stack_overflow::imp::install_main_guard_linux_musl"
  },
  {
    "file": "std/src/sys/pal/unix/stack_overflow.rs",
    "func": "sys::pal::unix::stack_overflow::imp::make_handler"
  },
  {
    "file": "std/src/sys/pal/unix/stack_overflow.rs",
    "func": "sys::pal::unix::stack_overflow::imp::sigstack_size"
  },
  {
    "file": "std/src/sys/pal/unix/stack_overflow.rs",
    "func": "sys::pal::unix::stack_overflow::imp::stack_start_aligned"
  },
  {
    "file": "std/src/sys/pal/unix/stack_overflow/thread_info.rs",
    "func": "sys::pal::unix::stack_overflow::thread_info::delete_current_info"
  },
  {
    "file": "std/src/sys/pal/unix/stack_overflow/thread_info.rs",
    "func": "sys::pal::unix::stack_overflow::thread_info::spin_lock_in_setup"
  },
  {
    "file": "std/src/sys/pal/unix/thread.rs",
    "func": "sys::pal::unix::thread::Thread::sleep"
  },
  {
    "file": "std/src/sys/pal/unix/thread.rs",
    "func": "sys::pal::unix::thread::Thread::yield_now"
  },
  {
    "file": "std/src/sys/pal/unix/thread.rs",
    "func": "sys::pal::unix::thread::available_parallelism"
  },
  {
    "file": "std/src/sys/pal/unix/thread.rs",
    "func": "sys::pal::unix::thread::cgroups::quota"
  },
  {
    "file": "std/src/sys/pal/unix/time.rs",
    "func": "sys::pal::unix::time::Instant::now"
  },
  {
    "file": "std/src/sys/pal/unix/time.rs",
    "func": "sys::pal::unix::time::SystemTime::new"
  },
  {
    "file": "std/src/sys/pal/unix/time.rs",
    "func": "sys::pal::unix::time::SystemTime::now"
  },
  {
    "file": "std/src/sys/pal/unix/time.rs",
    "func": "sys::pal::unix::time::Timespec::new"
  },
  {
    "file": "std/src/sys/pal/unix/time.rs",
    "func": "sys::pal::unix::time::Timespec::new_unchecked"
  },
  {
    "file": "std/src/sys/pal/unix/time.rs",
    "func": "sys::pal::unix::time::Timespec::now"
  },
  {
    "file": "std/src/sys/pal/unix/time.rs",
    "func": "sys::pal::unix::time::Timespec::zero"
  },
  {
    "file": "std/src/sys/path/unix.rs",
    "func": "sys::path::unix::is_sep_byte"
  },
  {
    "file": "std/src/sys/path/unix.rs",
    "func": "sys::path::unix::is_verbatim_sep"
  },
  {
    "file": "std/src/sys/personality/dwarf/eh.rs",
    "func": "sys::personality::dwarf::eh::round_up"
  },
  {
    "file": "std/src/sys/process/env.rs",
    "func": "<sys::process::env::CommandEnv as core::default::Default>::default"
  },
  {
    "file": "std/src/sys/process/unix/common.rs",
    "func": "<sys::process::unix::common::ExitCode as core::convert::From<u8>>::from"
  },
  {
    "file": "std/src/sys/process/unix/common.rs",
    "func": "sys::process::unix::common::ChildStdio::Explicit"
  },
  {
    "file": "std/src/sys/process/unix/common.rs",
    "func": "sys::process::unix::common::ExitCode"
  },
  {
    "file": "std/src/sys/process/unix/common/cstring_array.rs",
    "func": "sys::process::unix::common::cstring_array::CStringArray::with_capacity"
  },
  {
    "file": "std/src/sys/process/unix/unix.rs",
    "func": "<sys::process::unix::unix::ExitStatus as core::convert::From<i32>>::from"
  },
  {
    "file": "std/src/sys/process/unix/unix.rs",
    "func": "<sys::process::unix::unix::ExitStatus as core::default::Default>::default"
  },
  {
    "file": "std/src/sys/process/unix/unix.rs",
    "func": "sys::process::unix::unix::<impl sys::process::unix::common::Command>::posix_spawn::get_posix_spawn_addchdir"
  },
  {
    "file": "std/src/sys/process/unix/unix.rs",
    "func": "sys::process::unix::unix::ExitStatus"
  },
  {
    "file": "std/src/sys/process/unix/unix.rs",
    "func": "sys::process::unix::unix::ExitStatus::new"
  },
  {
    "file": "std/src/sys/process/unix/unix.rs",
    "func": "sys::process::unix::unix::ExitStatusError"
  },
  {
    "file": "std/src/sys/process/unix/unix.rs",
    "func": "sys::process::unix::unix::Process::new"
  },
  {
    "file": "std/src/sys/process/unix/unix.rs",
    "func": "sys::process::unix::unix::signal_string"
  },
  {
    "file": "std/src/sys/random/linux.rs",
    "func": "sys::random::linux::hashmap_random_keys"
  },
  {
    "file": "std/src/sys/stdio/unix.rs",
    "func": "sys::stdio::unix::Stderr::new"
  },
  {
    "file": "std/src/sys/stdio/unix.rs",
    "func": "sys::stdio::unix::Stdin::new"
  },
  {
    "file": "std/src/sys/stdio/unix.rs",
    "func": "sys::stdio::unix::Stdout::new"
  },
  {
    "file": "std/src/sys/stdio/unix.rs",
    "func": "sys::stdio::unix::panic_output"
  },
  {
    "file": "std/src/sys/sync/condvar/futex.rs",
    "func": "sys::sync::condvar::futex::Condvar::new"
  },
  {
    "file": "std/src/sys/sync/mutex/futex.rs",
    "func": "sys::sync::mutex::futex::Mutex::new"
  },
  {
    "file": "std/src/sys/sync/once/futex.rs",
    "func": "sys::sync::once::futex::Once::new"
  },
  {
    "file": "std/src/sys/sync/rwlock/futex.rs",
    "func": "sys::sync::rwlock::futex::RwLock::new"
  },
  {
    "file": "std/src/sys/sync/rwlock/futex.rs",
    "func": "sys::sync::rwlock::futex::has_reached_max_readers"
  },
  {
    "file": "std/src/sys/sync/rwlock/futex.rs",
    "func": "sys::sync::rwlock::futex::has_readers_waiting"
  },
  {
    "file": "std/src/sys/sync/rwlock/futex.rs",
    "func": "sys::sync::rwlock::futex::has_writers_waiting"
  },
  {
    "file": "std/src/sys/sync/rwlock/futex.rs",
    "func": "sys::sync::rwlock::futex::is_read_lockable"
  },
  {
    "file": "std/src/sys/sync/rwlock/futex.rs",
    "func": "sys::sync::rwlock::futex::is_read_lockable_after_wakeup"
  },
  {
    "file": "std/src/sys/sync/rwlock/futex.rs",
    "func": "sys::sync::rwlock::futex::is_unlocked"
  },
  {
    "file": "std/src/sys/sync/rwlock/futex.rs",
    "func": "sys::sync::rwlock::futex::is_write_locked"
  },
  {
    "file": "std/src/sys/thread_local/destructors/linux_like.rs",
    "func": "sys::thread_local::destructors::linux_like::register::c_int"
  },
  {
    "file": "std/src/sys/thread_local/destructors/list.rs",
    "func": "sys::thread_local::destructors::list::run"
  },
  {
    "file": "std/src/sys/thread_local/guard/key.rs",
    "func": "sys::thread_local::guard::key::enable"
  },
  {
    "file": "std/src/sys/thread_local/key/unix.rs",
    "func": "sys::thread_local::key::unix::destroy"
  },
  {
    "file": "std/src/sys/thread_local/native/mod.rs",
    "func": "hash::random::RandomState::new::KEYS::__init"
  },
  {
    "file": "std/src/sys/thread_local/native/mod.rs",
    "func": "sync::mpmc::context::Context::with::CONTEXT::__init"
  },
  {
    "file": "std/src/sys/thread_local/native/mod.rs",
    "func": "sys::thread_local::native::LocalPointer::__new"
  },
  {
    "file": "std/src/sys_common/mod.rs",
    "func": "sys_common::mul_div_u64"
  },
  {
    "file": "std/src/sys_common/wtf8.rs",
    "func": "sys_common::wtf8::CodePoint::from_char"
  },
  {
    "file": "std/src/sys_common/wtf8.rs",
    "func": "sys_common::wtf8::CodePoint::from_u32"
  },
  {
    "file": "std/src/sys_common/wtf8.rs",
    "func": "sys_common::wtf8::CodePoint::from_u32_unchecked"
  },
  {
    "file": "std/src/sys_common/wtf8.rs",
    "func": "sys_common::wtf8::Wtf8::empty_box"
  },
  {
    "file": "std/src/sys_common/wtf8.rs",
    "func": "sys_common::wtf8::Wtf8Buf::new"
  },
  {
    "file": "std/src/sys_common/wtf8.rs",
    "func": "sys_common::wtf8::Wtf8Buf::with_capacity"
  },
  {
    "file": "std/src/sys_common/wtf8.rs",
    "func": "sys_common::wtf8::decode_surrogate"
  },
  {
    "file": "std/src/sys_common/wtf8.rs",
    "func": "sys_common::wtf8::decode_surrogate_pair"
  },
  {
    "file": "std/src/thread/current.rs",
    "func": "thread::current::current"
  },
  {
    "file": "std/src/thread/current.rs",
    "func": "thread::current::current_id"
  },
  {
    "file": "std/src/thread/current.rs",
    "func": "thread::current::current_or_unnamed"
  },
  {
    "file": "std/src/thread/current.rs",
    "func": "thread::current::drop_current"
  },
  {
    "file": "std/src/thread/current.rs",
    "func": "thread::current::id::get"
  },
  {
    "file": "std/src/thread/current.rs",
    "func": "thread::current::id::get_or_init"
  },
  {
    "file": "std/src/thread/mod.rs",
    "func": "thread::Builder::new"
  },
  {
    "file": "std/src/thread/mod.rs",
    "func": "thread::ThreadId"
  },
  {
    "file": "std/src/thread/mod.rs",
    "func": "thread::ThreadId::from_u64"
  },
  {
    "file": "std/src/thread/mod.rs",
    "func": "thread::ThreadId::new"
  },
  {
    "file": "std/src/thread/mod.rs",
    "func": "thread::ThreadId::new::exhausted"
  },
  {
    "file": "std/src/thread/mod.rs",
    "func": "thread::_assert_sync_and_send"
  },
  {
    "file": "std/src/thread/mod.rs",
    "func": "thread::available_parallelism"
  },
  {
    "file": "std/src/thread/mod.rs",
    "func": "thread::main_thread::get"
  },
  {
    "file": "std/src/thread/mod.rs",
    "func": "thread::panicking"
  },
  {
    "file": "std/src/thread/mod.rs",
    "func": "thread::park"
  },
  {
    "file": "std/src/thread/mod.rs",
    "func": "thread::park_timeout"
  },
  {
    "file": "std/src/thread/mod.rs",
    "func": "thread::park_timeout_ms"
  },
  {
    "file": "std/src/thread/mod.rs",
    "func": "thread::sleep"
  },
  {
    "file": "std/src/thread/mod.rs",
    "func": "thread::sleep_ms"
  },
  {
    "file": "std/src/thread/mod.rs",
    "func": "thread::yield_now"
  },
  {
    "file": "std/src/thread/spawnhook.rs",
    "func": "<thread::spawnhook::ChildSpawnHooks as core::default::Default>::default"
  },
  {
    "file": "std/src/thread/spawnhook.rs",
    "func": "<thread::spawnhook::SpawnHooks as core::default::Default>::default"
  },
  {
    "file": "std/src/time.rs",
    "func": "time::Instant::now"
  },
  {
    "file": "std/src/time.rs",
    "func": "time::SystemTime::now"
  },
  {
    "file": "std/src/time.rs",
    "func": "time::SystemTimeError"
  },
  {
    "file": "stdarch/crates/core_arch/src/macros.rs",
    "func": "core_arch::x86::__m128"
  },
  {
    "file": "stdarch/crates/core_arch/src/macros.rs",
    "func": "core_arch::x86::__m128::splat"
  },
  {
    "file": "stdarch/crates/core_arch/src/macros.rs",
    "func": "core_arch::x86::__m128::splat::JustOne"
  },
  {
    "file": "stdarch/crates/core_arch/src/macros.rs",
    "func": "core_arch::x86::__m128bh"
  },
  {
    "file": "stdarch/crates/core_arch/src/macros.rs",
    "func": "core_arch::x86::__m128bh::splat"
  },
  {
    "file": "stdarch/crates/core_arch/src/macros.rs",
    "func": "core_arch::x86::__m128bh::splat::JustOne"
  },
  {
    "file": "stdarch/crates/core_arch/src/macros.rs",
    "func": "core_arch::x86::__m128d"
  },
  {
    "file": "stdarch/crates/core_arch/src/macros.rs",
    "func": "core_arch::x86::__m128d::splat"
  },
  {
    "file": "stdarch/crates/core_arch/src/macros.rs",
    "func": "core_arch::x86::__m128d::splat::JustOne"
  },
  {
    "file": "stdarch/crates/core_arch/src/macros.rs",
    "func": "core_arch::x86::__m128h"
  },
  {
    "file": "stdarch/crates/core_arch/src/macros.rs",
    "func": "core_arch::x86::__m128h::splat"
  },
  {
    "file": "stdarch/crates/core_arch/src/macros.rs",
    "func": "core_arch::x86::__m128h::splat::JustOne"
  },
  {
    "file": "stdarch/crates/core_arch/src/macros.rs",
    "func": "core_arch::x86::__m128i"
  },
  {
    "file": "stdarch/crates/core_arch/src/macros.rs",
    "func": "core_arch::x86::__m128i::splat"
  },
  {
    "file": "stdarch/crates/core_arch/src/macros.rs",
    "func": "core_arch::x86::__m128i::splat::JustOne"
  },
  {
    "file": "stdarch/crates/core_arch/src/macros.rs",
    "func": "core_arch::x86::__m256"
  },
  {
    "file": "stdarch/crates/core_arch/src/macros.rs",
    "func": "core_arch::x86::__m256::splat"
  },
  {
    "file": "stdarch/crates/core_arch/src/macros.rs",
    "func": "core_arch::x86::__m256::splat::JustOne"
  },
  {
    "file": "stdarch/crates/core_arch/src/macros.rs",
    "func": "core_arch::x86::__m256bh"
  },
  {
    "file": "stdarch/crates/core_arch/src/macros.rs",
    "func": "core_arch::x86::__m256bh::splat"
  },
  {
    "file": "stdarch/crates/core_arch/src/macros.rs",
    "func": "core_arch::x86::__m256bh::splat::JustOne"
  },
  {
    "file": "stdarch/crates/core_arch/src/macros.rs",
    "func": "core_arch::x86::__m256d"
  },
  {
    "file": "stdarch/crates/core_arch/src/macros.rs",
    "func": "core_arch::x86::__m256d::splat"
  },
  {
    "file": "stdarch/crates/core_arch/src/macros.rs",
    "func": "core_arch::x86::__m256d::splat::JustOne"
  },
  {
    "file": "stdarch/crates/core_arch/src/macros.rs",
    "func": "core_arch::x86::__m256h"
  },
  {
    "file": "stdarch/crates/core_arch/src/macros.rs",
    "func": "core_arch::x86::__m256h::splat"
  },
  {
    "file": "stdarch/crates/core_arch/src/macros.rs",
    "func": "core_arch::x86::__m256h::splat::JustOne"
  },
  {
    "file": "stdarch/crates/core_arch/src/macros.rs",
    "func": "core_arch::x86::__m256i"
  },
  {
    "file": "stdarch/crates/core_arch/src/macros.rs",
    "func": "core_arch::x86::__m256i::splat"
  },
  {
    "file": "stdarch/crates/core_arch/src/macros.rs",
    "func": "core_arch::x86::__m256i::splat::JustOne"
  },
  {
    "file": "stdarch/crates/core_arch/src/macros.rs",
    "func": "core_arch::x86::__m512"
  },
  {
    "file": "stdarch/crates/core_arch/src/macros.rs",
    "func": "core_arch::x86::__m512::splat"
  },
  {
    "file": "stdarch/crates/core_arch/src/macros.rs",
    "func": "core_arch::x86::__m512::splat::JustOne"
  },
  {
    "file": "stdarch/crates/core_arch/src/macros.rs",
    "func": "core_arch::x86::__m512bh"
  },
  {
    "file": "stdarch/crates/core_arch/src/macros.rs",
    "func": "core_arch::x86::__m512bh::splat"
  },
  {
    "file": "stdarch/crates/core_arch/src/macros.rs",
    "func": "core_arch::x86::__m512bh::splat::JustOne"
  },
  {
    "file": "stdarch/crates/core_arch/src/macros.rs",
    "func": "core_arch::x86::__m512d"
  },
  {
    "file": "stdarch/crates/core_arch/src/macros.rs",
    "func": "core_arch::x86::__m512d::splat"
  },
  {
    "file": "stdarch/crates/core_arch/src/macros.rs",
    "func": "core_arch::x86::__m512d::splat::JustOne"
  },
  {
    "file": "stdarch/crates/core_arch/src/macros.rs",
    "func": "core_arch::x86::__m512h"
  },
  {
    "file": "stdarch/crates/core_arch/src/macros.rs",
    "func": "core_arch::x86::__m512h::splat"
  },
  {
    "file": "stdarch/crates/core_arch/src/macros.rs",
    "func": "core_arch::x86::__m512h::splat::JustOne"
  },
  {
    "file": "stdarch/crates/core_arch/src/macros.rs",
    "func": "core_arch::x86::__m512i"
  },
  {
    "file": "stdarch/crates/core_arch/src/macros.rs",
    "func": "core_arch::x86::__m512i::splat"
  },
  {
    "file": "stdarch/crates/core_arch/src/macros.rs",
    "func": "core_arch::x86::__m512i::splat::JustOne"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::f16x16"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::f16x16::from_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::f16x16::new"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::f16x16::splat"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::f16x16::splat::JustOne"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::f16x32"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::f16x32::from_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::f16x32::new"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::f16x32::splat"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::f16x32::splat::JustOne"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::f16x4"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::f16x4::from_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::f16x4::new"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::f16x4::splat"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::f16x4::splat::JustOne"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::f16x8"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::f16x8::from_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::f16x8::new"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::f16x8::splat"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::f16x8::splat::JustOne"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::f32x16"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::f32x16::from_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::f32x16::new"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::f32x16::splat"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::f32x16::splat::JustOne"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::f32x2"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::f32x2::from_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::f32x2::new"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::f32x2::splat"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::f32x2::splat::JustOne"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::f32x4"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::f32x4::from_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::f32x4::new"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::f32x4::splat"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::f32x4::splat::JustOne"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::f32x8"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::f32x8::from_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::f32x8::new"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::f32x8::splat"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::f32x8::splat::JustOne"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::f64x1"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::f64x1::from_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::f64x1::new"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::f64x1::splat"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::f64x1::splat::JustOne"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::f64x2"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::f64x2::from_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::f64x2::new"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::f64x2::splat"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::f64x2::splat::JustOne"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::f64x4"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::f64x4::from_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::f64x4::new"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::f64x4::splat"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::f64x4::splat::JustOne"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::f64x8"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::f64x8::from_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::f64x8::new"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::f64x8::splat"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::f64x8::splat::JustOne"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i16x16"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i16x16::from_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i16x16::new"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i16x16::splat"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i16x16::splat::JustOne"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i16x2"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i16x2::from_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i16x2::new"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i16x2::splat"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i16x2::splat::JustOne"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i16x32"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i16x32::from_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i16x32::new"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i16x32::splat"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i16x32::splat::JustOne"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i16x4"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i16x4::from_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i16x4::new"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i16x4::splat"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i16x4::splat::JustOne"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i16x8"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i16x8::from_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i16x8::new"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i16x8::splat"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i16x8::splat::JustOne"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i32x16"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i32x16::from_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i32x16::new"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i32x16::splat"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i32x16::splat::JustOne"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i32x2"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i32x2::from_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i32x2::new"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i32x2::splat"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i32x2::splat::JustOne"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i32x32"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i32x32::from_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i32x32::new"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i32x32::splat"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i32x32::splat::JustOne"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i32x4"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i32x4::from_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i32x4::new"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i32x4::splat"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i32x4::splat::JustOne"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i32x8"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i32x8::from_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i32x8::new"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i32x8::splat"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i32x8::splat::JustOne"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i64x1"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i64x1::from_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i64x1::new"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i64x1::splat"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i64x1::splat::JustOne"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i64x2"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i64x2::from_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i64x2::new"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i64x2::splat"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i64x2::splat::JustOne"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i64x4"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i64x4::from_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i64x4::new"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i64x4::splat"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i64x4::splat::JustOne"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i64x8"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i64x8::from_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i64x8::new"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i64x8::splat"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i64x8::splat::JustOne"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i8x16"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i8x16::from_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i8x16::new"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i8x16::splat"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i8x16::splat::JustOne"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i8x2"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i8x2::from_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i8x2::new"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i8x2::splat"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i8x2::splat::JustOne"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i8x32"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i8x32::from_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i8x32::new"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i8x32::splat"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i8x32::splat::JustOne"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i8x4"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i8x4::from_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i8x4::new"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i8x4::splat"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i8x4::splat::JustOne"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i8x64"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i8x64::from_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i8x64::new"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i8x64::splat"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i8x64::splat::JustOne"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i8x8"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i8x8::from_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i8x8::new"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i8x8::splat"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i8x8::splat::JustOne"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::m16x16"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::m16x16::bool_to_internal"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::m16x16::new"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::m16x16::splat"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::m16x16::splat::JustOne"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::m16x8"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::m16x8::bool_to_internal"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::m16x8::new"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::m16x8::splat"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::m16x8::splat::JustOne"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::m32x4"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::m32x4::bool_to_internal"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::m32x4::new"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::m32x4::splat"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::m32x4::splat::JustOne"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::m32x8"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::m32x8::bool_to_internal"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::m32x8::new"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::m32x8::splat"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::m32x8::splat::JustOne"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::m64x2"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::m64x2::bool_to_internal"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::m64x2::new"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::m64x2::splat"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::m64x2::splat::JustOne"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::m8x16"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::m8x16::bool_to_internal"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::m8x16::new"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::m8x16::splat"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::m8x16::splat::JustOne"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::m8x32"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::m8x32::bool_to_internal"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::m8x32::new"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::m8x32::splat"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::m8x32::splat::JustOne"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u16x16"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u16x16::from_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u16x16::new"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u16x16::splat"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u16x16::splat::JustOne"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u16x2"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u16x2::from_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u16x2::new"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u16x2::splat"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u16x2::splat::JustOne"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u16x32"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u16x32::from_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u16x32::new"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u16x32::splat"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u16x32::splat::JustOne"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u16x4"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u16x4::from_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u16x4::new"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u16x4::splat"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u16x4::splat::JustOne"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u16x64"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u16x64::from_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u16x64::new"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u16x64::splat"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u16x64::splat::JustOne"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u16x8"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u16x8::from_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u16x8::new"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u16x8::splat"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u16x8::splat::JustOne"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u32x16"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u32x16::from_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u32x16::new"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u32x16::splat"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u32x16::splat::JustOne"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u32x2"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u32x2::from_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u32x2::new"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u32x2::splat"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u32x2::splat::JustOne"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u32x32"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u32x32::from_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u32x32::new"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u32x32::splat"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u32x32::splat::JustOne"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u32x4"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u32x4::from_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u32x4::new"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u32x4::splat"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u32x4::splat::JustOne"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u32x8"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u32x8::from_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u32x8::new"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u32x8::splat"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u32x8::splat::JustOne"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u64x1"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u64x1::from_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u64x1::new"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u64x1::splat"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u64x1::splat::JustOne"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u64x2"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u64x2::from_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u64x2::new"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u64x2::splat"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u64x2::splat::JustOne"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u64x4"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u64x4::from_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u64x4::new"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u64x4::splat"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u64x4::splat::JustOne"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u64x8"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u64x8::from_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u64x8::new"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u64x8::splat"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u64x8::splat::JustOne"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u8x16"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u8x16::from_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u8x16::new"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u8x16::splat"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u8x16::splat::JustOne"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u8x2"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u8x2::from_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u8x2::new"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u8x2::splat"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u8x2::splat::JustOne"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u8x32"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u8x32::from_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u8x32::new"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u8x32::splat"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u8x32::splat::JustOne"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u8x4"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u8x4::from_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u8x4::new"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u8x4::splat"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u8x4::splat::JustOne"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u8x64"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u8x64::from_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u8x64::new"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u8x64::splat"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u8x64::splat::JustOne"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u8x8"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u8x8::from_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u8x8::new"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u8x8::splat"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u8x8::splat::JustOne"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/abm.rs",
    "func": "core_arch::x86::abm::_lzcnt_u32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/abm.rs",
    "func": "core_arch::x86::abm::_popcnt32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_set1_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_set1_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_set1_epi64x"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_set1_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_set1_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_set1_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_set_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_set_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_set_epi64x"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_set_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_set_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_set_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_setr_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_setr_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_setr_epi64x"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_setr_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_setr_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_setr_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_setzero_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_setzero_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_setzero_si256"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_undefined_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_undefined_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_undefined_si256"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_zeroall"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_zeroupper"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_bslli_epi128::mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bf16.rs",
    "func": "core_arch::x86::avx512bf16::_mm_cvtness_sbh"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_cvtmask32_u32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_cvtu32_mask32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_kadd_mask32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_kadd_mask64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_kand_mask32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_kand_mask64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_kandn_mask32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_kandn_mask64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_knot_mask32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_knot_mask64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_kor_mask32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_kor_mask64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_kortestc_mask32_u8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_kortestc_mask64_u8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_kortestz_mask32_u8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_kortestz_mask64_u8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_ktestc_mask32_u8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_ktestc_mask64_u8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_ktestz_mask32_u8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_ktestz_mask64_u8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_kxnor_mask32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_kxnor_mask64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_kxor_mask32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_kxor_mask64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_maskz_set1_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_maskz_set1_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_movm_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_movm_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_bslli_epi128::mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_kunpackd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_kunpackw"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_maskz_set1_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_maskz_set1_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_movm_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_movm_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_maskz_set1_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_maskz_set1_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_movm_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_movm_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512cd.rs",
    "func": "core_arch::x86::avx512cd::_mm256_broadcastmb_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512cd.rs",
    "func": "core_arch::x86::avx512cd::_mm256_broadcastmw_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512cd.rs",
    "func": "core_arch::x86::avx512cd::_mm512_broadcastmb_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512cd.rs",
    "func": "core_arch::x86::avx512cd::_mm512_broadcastmw_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512cd.rs",
    "func": "core_arch::x86::avx512cd::_mm_broadcastmb_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512cd.rs",
    "func": "core_arch::x86::avx512cd::_mm_broadcastmw_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_cvtmask8_u32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_cvtu32_mask8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_kadd_mask16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_kadd_mask8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_kand_mask8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_kandn_mask8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_knot_mask8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_kor_mask8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_kortestc_mask8_u8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_kortestz_mask8_u8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_ktestc_mask16_u8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_ktestc_mask8_u8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_ktestz_mask16_u8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_ktestz_mask8_u8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_kxnor_mask8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_kxor_mask8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm256_movm_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm256_movm_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm512_movm_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm512_movm_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm_movm_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm_movm_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_cvtmask16_u32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_cvtu32_mask16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_kand_mask16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_kandn_mask16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_knot_mask16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_kor_mask16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_kortestc_mask16_u8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_kortestz_mask16_u8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_kxnor_mask16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_kxor_mask16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_set1_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_set1_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_int2mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_kand"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_kandn"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_kmov"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_knot"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_kor"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_kortestc"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_kortestz"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_kunpackb"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_kxnor"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_kxor"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask2int"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_set1_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_set1_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_set1_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_set1_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_set1_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_set1_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_set1_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_set1_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_set4_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_set4_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_set4_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_set4_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_set_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_set_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_set_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_set_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_set_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_set_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_setr4_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_setr4_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_setr4_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_setr4_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_setr_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_setr_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_setr_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_setr_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_setzero"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_setzero_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_setzero_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_setzero_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_setzero_si512"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_undefined"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_undefined_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_undefined_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_undefined_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_set1_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_set1_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_set1_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_set_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_setr_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_setzero_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_undefined_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_set1_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_set_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_setr_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_setzero_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_undefined_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_cvtsi16_si128"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_set1_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_set_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_set_sh"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_setr_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_setzero_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_undefined_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/bmi1.rs",
    "func": "core_arch::x86::bmi1::_andn_u32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/bmi1.rs",
    "func": "core_arch::x86::bmi1::_bextr2_u32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/bmi1.rs",
    "func": "core_arch::x86::bmi1::_bextr_u32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/bmi1.rs",
    "func": "core_arch::x86::bmi1::_blsi_u32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/bmi1.rs",
    "func": "core_arch::x86::bmi1::_blsmsk_u32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/bmi1.rs",
    "func": "core_arch::x86::bmi1::_blsr_u32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/bmi1.rs",
    "func": "core_arch::x86::bmi1::_mm_tzcnt_32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/bmi1.rs",
    "func": "core_arch::x86::bmi1::_tzcnt_u16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/bmi1.rs",
    "func": "core_arch::x86::bmi1::_tzcnt_u32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/bmi2.rs",
    "func": "core_arch::x86::bmi2::_bzhi_u32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/bmi2.rs",
    "func": "core_arch::x86::bmi2::_pdep_u32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/bmi2.rs",
    "func": "core_arch::x86::bmi2::_pext_u32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/bswap.rs",
    "func": "core_arch::x86::bswap::_bswap"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/cpuid.rs",
    "func": "core_arch::x86::cpuid::__cpuid"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/cpuid.rs",
    "func": "core_arch::x86::cpuid::__cpuid_count"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/cpuid.rs",
    "func": "core_arch::x86::cpuid::__get_cpuid_max"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/eflags.rs",
    "func": "core_arch::x86::eflags::__readeflags"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/eflags.rs",
    "func": "core_arch::x86::eflags::__writeeflags"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::bf16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::bf16::from_bits"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/rdtsc.rs",
    "func": "core_arch::x86::rdtsc::_rdtsc"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/rtm.rs",
    "func": "core_arch::x86::rtm::_xabort_code"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/rtm.rs",
    "func": "core_arch::x86::rtm::_xbegin"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/rtm.rs",
    "func": "core_arch::x86::rtm::_xend"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/rtm.rs",
    "func": "core_arch::x86::rtm::_xtest"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_MM_GET_EXCEPTION_MASK"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_MM_GET_EXCEPTION_STATE"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_MM_GET_FLUSH_ZERO_MODE"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_MM_GET_ROUNDING_MODE"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_MM_SET_EXCEPTION_MASK"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_MM_SET_EXCEPTION_STATE"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_MM_SET_FLUSH_ZERO_MODE"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_MM_SET_ROUNDING_MODE"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_MM_SHUFFLE"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_mm_getcsr"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_mm_set1_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_mm_set_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_mm_set_ps1"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_mm_set_ss"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_mm_setcsr"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_mm_setr_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_mm_setzero_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_mm_sfence"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_mm_undefined_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_cvtsi32_si128"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_lfence"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_mfence"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_pause"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_set1_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_set1_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_set1_epi64x"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_set1_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_set1_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_set_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_set_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_set_epi64x"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_set_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_set_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_set_pd1"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_set_sd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_setr_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_setr_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_setr_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_setr_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_setzero_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_setzero_si128"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_slli_si128_impl::mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_srli_si128_impl::mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_undefined_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_undefined_si128"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse42.rs",
    "func": "core_arch::x86::sse42::_mm_crc32_u16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse42.rs",
    "func": "core_arch::x86::sse42::_mm_crc32_u32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse42.rs",
    "func": "core_arch::x86::sse42::_mm_crc32_u8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/ssse3.rs",
    "func": "core_arch::x86::ssse3::_mm_alignr_epi8::mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/tbm.rs",
    "func": "core_arch::x86::tbm::_blcfill_u32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/tbm.rs",
    "func": "core_arch::x86::tbm::_blci_u32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/tbm.rs",
    "func": "core_arch::x86::tbm::_blcic_u32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/tbm.rs",
    "func": "core_arch::x86::tbm::_blcmsk_u32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/tbm.rs",
    "func": "core_arch::x86::tbm::_blcs_u32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/tbm.rs",
    "func": "core_arch::x86::tbm::_blsfill_u32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/tbm.rs",
    "func": "core_arch::x86::tbm::_blsic_u32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/tbm.rs",
    "func": "core_arch::x86::tbm::_t1mskc_u32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/tbm.rs",
    "func": "core_arch::x86::tbm::_tzmsk_u32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/xsave.rs",
    "func": "core_arch::x86::xsave::_xgetbv"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/xsave.rs",
    "func": "core_arch::x86::xsave::_xsetbv"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86_64/abm.rs",
    "func": "core_arch::x86_64::abm::_lzcnt_u64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86_64/abm.rs",
    "func": "core_arch::x86_64::abm::_popcnt64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86_64/amx.rs",
    "func": "core_arch::x86_64::amx::_tile_release"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86_64/avx512bw.rs",
    "func": "core_arch::x86_64::avx512bw::_cvtmask64_u64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86_64/avx512bw.rs",
    "func": "core_arch::x86_64::avx512bw::_cvtu64_mask64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86_64/bmi.rs",
    "func": "core_arch::x86_64::bmi::_andn_u64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86_64/bmi.rs",
    "func": "core_arch::x86_64::bmi::_bextr2_u64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86_64/bmi.rs",
    "func": "core_arch::x86_64::bmi::_bextr_u64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86_64/bmi.rs",
    "func": "core_arch::x86_64::bmi::_blsi_u64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86_64/bmi.rs",
    "func": "core_arch::x86_64::bmi::_blsmsk_u64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86_64/bmi.rs",
    "func": "core_arch::x86_64::bmi::_blsr_u64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86_64/bmi.rs",
    "func": "core_arch::x86_64::bmi::_mm_tzcnt_64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86_64/bmi.rs",
    "func": "core_arch::x86_64::bmi::_tzcnt_u64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86_64/bmi2.rs",
    "func": "core_arch::x86_64::bmi2::_bzhi_u64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86_64/bmi2.rs",
    "func": "core_arch::x86_64::bmi2::_pdep_u64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86_64/bmi2.rs",
    "func": "core_arch::x86_64::bmi2::_pext_u64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86_64/bswap.rs",
    "func": "core_arch::x86_64::bswap::_bswap64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86_64/sse2.rs",
    "func": "core_arch::x86_64::sse2::_mm_cvtsi64_si128"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86_64/sse2.rs",
    "func": "core_arch::x86_64::sse2::_mm_cvtsi64x_si128"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86_64/sse42.rs",
    "func": "core_arch::x86_64::sse42::_mm_crc32_u64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86_64/tbm.rs",
    "func": "core_arch::x86_64::tbm::_blcfill_u64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86_64/tbm.rs",
    "func": "core_arch::x86_64::tbm::_blci_u64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86_64/tbm.rs",
    "func": "core_arch::x86_64::tbm::_blcic_u64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86_64/tbm.rs",
    "func": "core_arch::x86_64::tbm::_blcmsk_u64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86_64/tbm.rs",
    "func": "core_arch::x86_64::tbm::_blcs_u64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86_64/tbm.rs",
    "func": "core_arch::x86_64::tbm::_blsfill_u64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86_64/tbm.rs",
    "func": "core_arch::x86_64::tbm::_blsic_u64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86_64/tbm.rs",
    "func": "core_arch::x86_64::tbm::_t1mskc_u64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86_64/tbm.rs",
    "func": "core_arch::x86_64::tbm::_tzmsk_u64"
  },
  {
    "file": "stdarch/crates/std_detect/src/detect/bit.rs",
    "func": "detect::bit::test"
  },
  {
    "file": "stdarch/crates/std_detect/src/detect/cache.rs",
    "func": "<detect::cache::Initializer as rustc_std_workspace_core::default::Default>::default"
  },
  {
    "file": "stdarch/crates/std_detect/src/detect/cache.rs",
    "func": "detect::cache::Cache::uninitialized"
  },
  {
    "file": "stdarch/crates/std_detect/src/detect/cache.rs",
    "func": "detect::cache::Initializer"
  },
  {
    "file": "stdarch/crates/std_detect/src/detect/cache.rs",
    "func": "detect::cache::detect_and_initialize"
  },
  {
    "file": "stdarch/crates/std_detect/src/detect/cache.rs",
    "func": "detect::cache::set_bit"
  },
  {
    "file": "stdarch/crates/std_detect/src/detect/cache.rs",
    "func": "detect::cache::test"
  },
  {
    "file": "stdarch/crates/std_detect/src/detect/cache.rs",
    "func": "detect::cache::test_bit"
  },
  {
    "file": "stdarch/crates/std_detect/src/detect/cache.rs",
    "func": "detect::cache::unset_bit"
  },
  {
    "file": "stdarch/crates/std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::adx"
  },
  {
    "file": "stdarch/crates/std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::aes"
  },
  {
    "file": "stdarch/crates/std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::amx_avx512"
  },
  {
    "file": "stdarch/crates/std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::amx_bf16"
  },
  {
    "file": "stdarch/crates/std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::amx_complex"
  },
  {
    "file": "stdarch/crates/std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::amx_fp16"
  },
  {
    "file": "stdarch/crates/std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::amx_fp8"
  },
  {
    "file": "stdarch/crates/std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::amx_int8"
  },
  {
    "file": "stdarch/crates/std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::amx_movrs"
  },
  {
    "file": "stdarch/crates/std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::amx_tf32"
  },
  {
    "file": "stdarch/crates/std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::amx_tile"
  },
  {
    "file": "stdarch/crates/std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::amx_transpose"
  },
  {
    "file": "stdarch/crates/std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::avx"
  },
  {
    "file": "stdarch/crates/std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::avx2"
  },
  {
    "file": "stdarch/crates/std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::avx512bf16"
  },
  {
    "file": "stdarch/crates/std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::avx512bitalg"
  },
  {
    "file": "stdarch/crates/std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::avx512bw"
  },
  {
    "file": "stdarch/crates/std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::avx512cd"
  },
  {
    "file": "stdarch/crates/std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::avx512dq"
  },
  {
    "file": "stdarch/crates/std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::avx512er"
  },
  {
    "file": "stdarch/crates/std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::avx512f"
  },
  {
    "file": "stdarch/crates/std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::avx512fp16"
  },
  {
    "file": "stdarch/crates/std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::avx512ifma"
  },
  {
    "file": "stdarch/crates/std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::avx512pf"
  },
  {
    "file": "stdarch/crates/std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::avx512vbmi"
  },
  {
    "file": "stdarch/crates/std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::avx512vbmi2"
  },
  {
    "file": "stdarch/crates/std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::avx512vl"
  },
  {
    "file": "stdarch/crates/std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::avx512vnni"
  },
  {
    "file": "stdarch/crates/std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::avx512vp2intersect"
  },
  {
    "file": "stdarch/crates/std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::avx512vpopcntdq"
  },
  {
    "file": "stdarch/crates/std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::avxifma"
  },
  {
    "file": "stdarch/crates/std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::avxneconvert"
  },
  {
    "file": "stdarch/crates/std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::avxvnni"
  },
  {
    "file": "stdarch/crates/std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::avxvnniint16"
  },
  {
    "file": "stdarch/crates/std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::avxvnniint8"
  },
  {
    "file": "stdarch/crates/std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::bmi1"
  },
  {
    "file": "stdarch/crates/std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::bmi2"
  },
  {
    "file": "stdarch/crates/std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::cmpxchg16b"
  },
  {
    "file": "stdarch/crates/std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::ermsb"
  },
  {
    "file": "stdarch/crates/std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::f16c"
  },
  {
    "file": "stdarch/crates/std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::fma"
  },
  {
    "file": "stdarch/crates/std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::fxsr"
  },
  {
    "file": "stdarch/crates/std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::gfni"
  },
  {
    "file": "stdarch/crates/std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::kl"
  },
  {
    "file": "stdarch/crates/std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::lzcnt"
  },
  {
    "file": "stdarch/crates/std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::mmx"
  },
  {
    "file": "stdarch/crates/std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::movbe"
  },
  {
    "file": "stdarch/crates/std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::movrs"
  },
  {
    "file": "stdarch/crates/std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::pclmulqdq"
  },
  {
    "file": "stdarch/crates/std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::popcnt"
  },
  {
    "file": "stdarch/crates/std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::rdrand"
  },
  {
    "file": "stdarch/crates/std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::rdseed"
  },
  {
    "file": "stdarch/crates/std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::rtm"
  },
  {
    "file": "stdarch/crates/std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::sha"
  },
  {
    "file": "stdarch/crates/std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::sha512"
  },
  {
    "file": "stdarch/crates/std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::sm3"
  },
  {
    "file": "stdarch/crates/std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::sm4"
  },
  {
    "file": "stdarch/crates/std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::sse"
  },
  {
    "file": "stdarch/crates/std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::sse2"
  },
  {
    "file": "stdarch/crates/std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::sse3"
  },
  {
    "file": "stdarch/crates/std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::sse4_1"
  },
  {
    "file": "stdarch/crates/std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::sse4_2"
  },
  {
    "file": "stdarch/crates/std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::sse4a"
  },
  {
    "file": "stdarch/crates/std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::ssse3"
  },
  {
    "file": "stdarch/crates/std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::tbm"
  },
  {
    "file": "stdarch/crates/std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::tsc"
  },
  {
    "file": "stdarch/crates/std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::vaes"
  },
  {
    "file": "stdarch/crates/std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::vpclmulqdq"
  },
  {
    "file": "stdarch/crates/std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::widekl"
  },
  {
    "file": "stdarch/crates/std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::xop"
  },
  {
    "file": "stdarch/crates/std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::xsave"
  },
  {
    "file": "stdarch/crates/std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::xsavec"
  },
  {
    "file": "stdarch/crates/std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::xsaveopt"
  },
  {
    "file": "stdarch/crates/std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::xsaves"
  },
  {
    "file": "stdarch/crates/std_detect/src/detect/mod.rs",
    "func": "detect::features"
  },
  {
    "file": "stdarch/crates/std_detect/src/detect/os/x86.rs",
    "func": "detect::os::detect_features"
  }
]